:: Propositional Calculus
::  by Grzegorz Bancerek, Agata Darmochwa\l and Andrzej Trybulec
::
:: Received September 26, 1990
:: Copyright (c) 1990-2011 Association of Mizar Users
::           (Stowarzyszenie Uzytkownikow Mizara, Bialystok, Poland).
:: This code can be distributed under the GNU General Public Licence
:: version 3.0 or later, or the Creative Commons Attribution-ShareAlike
:: License version 3.0 or later, subject to the binding interpretation
:: detailed in file COPYING.interpretation.
:: See COPYING.GPL and COPYING.CC-BY-SA for the full text of these
:: licenses, or see http://www.gnu.org/licenses/gpl.html and
:: http://creativecommons.org/licenses/by-sa/3.0/.

environ

 vocabularies SUBSET_1, CQC_LANG, XBOOLEAN, CQC_THE1, QC_LANG1;
 notations SUBSET_1, CQC_LANG, CQC_THE1;
 constructors CQC_THE1;
 registrations CQC_LANG;
 definitions CQC_THE1;
 theorems CQC_THE1, QC_LANG2;

begin

reserve p, q, r, s, t for Element of CQC-WFF;
reserve X for Subset of CQC-WFF;

theorem Th1:
  (p => q) => ((q => r) => (p => r)) in TAUT
proof
  (p => q) => ('not'(q '&' 'not' r) => 'not'(p '&' 'not' r)) in TAUT by
CQC_THE1:44;
  then (p => q) => ((q => r) => 'not'(p '&' 'not' r)) in TAUT by QC_LANG2:def 2
;
  hence thesis by QC_LANG2:def 2;
end;

theorem Th2:
  p => q in TAUT implies (q => r) => (p => r) in TAUT
proof
  assume
A1: p => q in TAUT;
  (p => q) => ((q => r) => (p => r)) in TAUT by Th1;
  hence thesis by A1,CQC_THE1:46;
end;

theorem Th3:
  p => q in TAUT & q => r in TAUT implies p => r in TAUT
proof
  assume that
A1: p => q in TAUT and
A2: q => r in TAUT;
  (p => q) => ((q => r) => (p => r)) in TAUT by Th1;
  then (q => r) => (p => r) in TAUT by A1,CQC_THE1:46;
  hence thesis by A2,CQC_THE1:46;
end;

theorem Th4: :: Identity law
  p => p in TAUT
proof
  ('not' p => p) => p in TAUT & p => ('not' p => p) in TAUT by CQC_THE1:42,43;
  hence thesis by Th3;
end;

Lm1: (((q => r) => (p => r)) => s) => ((p => q) => s) in TAUT
proof
  (p => q) => ((q => r) => (p => r)) in TAUT by Th1;
  hence thesis by Th2;
end;

Lm2: (p => (q => r)) => ((s => q) => (p => (s => r))) in TAUT
proof
  ((((q => r) => (s => r)) => (p => (s => r))) => ((s => q) => (p => (s =>
r))) ) => ((p => (q => r)) => ((s => q) => (p => (s => r)))) in TAUT & (((q =>
r) => (s => r)) => (p => (s => r))) => ((s => q) => (p => (s => r))) in TAUT
by Lm1;
  hence thesis by CQC_THE1:46;
end;

Lm3: (p => q) => (((p => r) => s) => ((q => r) => s)) in TAUT
proof
  ((q => r) => (p => r)) => (((p => r) => s) => ((q => r) => s)) in TAUT &
((( q => r) => (p => r)) => (((p => r) => s) => ((q => r) => s))) => ((p => q)
  => ( ((p => r) => s) => ((q => r) => s))) in TAUT by Lm1,Th1;
  hence thesis by CQC_THE1:46;
end;

Lm4: (t => ((p => r) => s)) => ((p => q) => (t => ((q => r) => s))) in TAUT
proof
  ((p => q) => (((p => r) => s) => ((q => r) => s))) in TAUT & ((p => q)
=> (( (p => r) => s) => ((q => r) => s))) => ((t => ((p => r) => s)) => ((p =>
  q) => (t => ((q => r) => s)))) in TAUT by Lm2,Lm3;
  hence thesis by CQC_THE1:46;
end;

Lm5: (('not' p => q) => r) => (p => r) in TAUT
proof
  p => ('not' p => q) in TAUT by CQC_THE1:43;
  hence thesis by Th2;
end;

Lm6: p => ((('not' p => r) => s) => ((q => r) => s)) in TAUT
proof
  ('not' p => q) => ((('not' p => r) => s) => ((q => r) => s)) in TAUT & (
  (( 'not' p => q) => ((('not' p => r) => s) => ((q => r) => s)) ) => (p => (((
  'not' p => r) => s) => ((q => r) => s)))) in TAUT by Lm3,Lm5;
  hence thesis by CQC_THE1:46;
end;

Lm7: (q => (('not' p => p) => p)) => (('not' p => p) => p) in TAUT
proof
  ('not' p => p) => p in TAUT & (('not' p => p) => p) => ((('not'(('not' p
  => p) => p) => (('not' p => p) => p)) => (('not' p => p) => p)) => ((q => ((
  'not' p => p) => p)) => (('not' p => p) => p))) in TAUT by Lm6,CQC_THE1:42;
  then
  ('not'(('not' p => p) => p) => (('not' p => p) => p)) => (('not' p => p)
  => p ) in TAUT & (('not'(('not' p => p) => p) => (('not' p => p) => p)) => ((
'not' p => p) => p)) => ((q => (('not' p => p) => p)) => (('not' p => p) => p))
  in TAUT by CQC_THE1:42,46;
  hence thesis by CQC_THE1:46;
end;

Lm8: t => (('not' p => p) => p) in TAUT
proof
  ('not' t => (('not' p => p) => p)) => (('not' p => p) => p) in TAUT & ((
'not' t => (('not' p => p) => p)) => (('not' p => p) => p)) => (t => ( ('not' p
  => p) => p)) in TAUT by Lm5,Lm7;
  hence thesis by CQC_THE1:46;
end;

Lm9: ('not' p => q) => (t => ((q => p) => p)) in TAUT
proof
  t => (('not' p => p) => p) in TAUT & (t => (('not' p => p) => p)) => ((
  'not' p => q) => (t => ((q => p) => p) )) in TAUT by Lm4,Lm8;
  hence thesis by CQC_THE1:46;
end;

Lm10: ((t => ((q => p) => p)) => r) => (('not' p => q) => r) in TAUT
proof
  ('not' p => q) => (t => ((q => p) => p)) in TAUT & (('not' p => q) => (t
=> ((q => p) => p))) => (((t => ((q => p) => p)) => r) => (('not' p => q) => r)
  ) in TAUT by Lm9,Th1;
  hence thesis by CQC_THE1:46;
end;

Lm11: ('not' p => q) => ((q => p) => p) in TAUT
proof
  ('not'((q => p) => p) => ((q => p) => p)) => ((q => p) => p) in TAUT & (
( 'not'((q => p) => p) => ((q => p) => p)) => ((q => p) => p)) => (( 'not' p =>
  q ) => ((q => p) => p)) in TAUT by Lm10,CQC_THE1:42;
  hence thesis by CQC_THE1:46;
end;

Lm12: p => ((q => p) => p) in TAUT
proof
  ('not' p => q) => ((q => p) => p) in TAUT & (('not' p => q) => ((q => p)
  => p)) => (p => ((q => p) => p)) in TAUT by Lm5,Lm11;
  hence thesis by CQC_THE1:46;
end;

theorem Th5:
  q => (p => q) in TAUT
proof
  q => (('not' p => q) => q) in TAUT & (q => (('not' p => q) => q)) => ((p
  => ('not' p => q)) => (q => (p => q))) in TAUT by Lm2,Lm12;
  then p => ('not' p => q) in TAUT & (p => ('not' p => q)) => (q => (p => q))
  in TAUT by CQC_THE1:43,46;
  hence thesis by CQC_THE1:46;
end;

theorem Th6:
  ((p => q) => r) => (q => r) in TAUT
proof
  q => (p => q) in TAUT & (q => (p => q)) => (((p => q) => r) => (q => r))
  in TAUT by Th1,Th5;
  hence thesis by CQC_THE1:46;
end;

theorem Th7:
  q => ((q => p) => p) in TAUT
proof
  ('not' p => q) => ((q => p) => p) in TAUT & (('not' p => q) => ((q => p)
  => p)) => (q => ((q => p) => p)) in TAUT by Lm11,Th6;
  hence thesis by CQC_THE1:46;
end;

theorem Th8:
  (s => (q => p)) => (q => (s => p)) in TAUT
proof
  q => ((q => p) => p) in TAUT & (q => ((q => p) => p)) => ((s => (q => p)
  ) => (q => (s => p))) in TAUT by Lm2,Th7;
  hence thesis by CQC_THE1:46;
end;

theorem Th9:
  (q => r) => ((p => q) => (p => r)) in TAUT
proof
  (p => q) => ((q => r) => (p => r)) in TAUT & ((p => q) => ((q => r) => (
  p => r))) => ((q => r) => ((p => q) => (p => r))) in TAUT by Th1,Th8;
  hence thesis by CQC_THE1:46;
end;

Lm13: ((q => (s => p)) => r) => ((s => (q => p)) => r) in TAUT
proof
  (s => (q => p)) => (q => (s => p)) in TAUT & ((s => (q => p)) => (q => (
s => p))) => (((q => (s => p)) => r) => ((s => (q => p)) => r)) in TAUT by Th1
,Th8;
  hence thesis by CQC_THE1:46;
end;

Lm14: ((p => q) => p) => p in TAUT
proof
  ('not' p => (p => q)) => (((p => q) => p) => p) in TAUT & (('not' p => (
p => q)) => (((p => q) => p) => p)) => ((p => ('not' p => q)) => (((p => q) =>
  p) => p)) in TAUT by Lm11,Lm13;
  then
  p => ('not' p => q) in TAUT & (p => ('not' p => q)) => (((p => q) => p)
  => p ) in TAUT by CQC_THE1:43,46;
  hence thesis by CQC_THE1:46;
end;

Lm15: ((p => r) => s) => ((p => q) => ((q => r) => s)) in TAUT
proof
  (p => q) => (((p => r) => s) => ((q => r) => s)) in TAUT & ((p => q) =>
  (((p => r) => s) => ((q => r) => s))) => (((p => r) => s) => ((p => q) => ((q
  => r) => s))) in TAUT by Lm3,Th8;
  hence thesis by CQC_THE1:46;
end;

Lm16: ((p => q) => r) => ((r => p) => p) in TAUT
proof
  ((p => q) => p) => p in TAUT & (((p => q) => p) => p) => (((p => q) => r
  ) => ((r => p) => p)) in TAUT by Lm14,Lm15;
  hence thesis by CQC_THE1:46;
end;

Lm17: (((r => p) => p) => s) => (((p => q) => r) => s) in TAUT
proof
  ((p => q) => r) => ((r => p) => p) in TAUT & (((p => q) => r) => ((r =>
p) => p)) => ((((r => p) => p) => s) => (((p => q) => r) => s)) in TAUT by Lm16
,Th1;
  hence thesis by CQC_THE1:46;
end;

Lm18: ((q => r) => p) => ((q => p) => p) in TAUT
proof
  ((p => q) => q) => ((q => p) => p) in TAUT & (((p => q) => q) => ((q =>
  p) => p)) => (((q => r) => p) => ((q => p) => p)) in TAUT by Lm16,Lm17;
  hence thesis by CQC_THE1:46;
end;

theorem Th10:
  (q => (q => r)) => (q => r) in TAUT
proof
  (q => r) => (q => r) in TAUT & ((q => r) => (q => r)) => ((q => (q => r)
  ) => (q => r)) in TAUT by Lm18,Th4;
  hence thesis by CQC_THE1:46;
end;

Lm19: (q => s) => (((q => r) => p) => ((s => p) => p)) in TAUT
proof
  ((q => r) => p) => ((q => p) => p) in TAUT & (((q => r) => p) => ((q =>
p) => p)) => ((q => s) => (((q => r) => p) => ((s => p) => p))) in TAUT by Lm4
,Lm18;
  hence thesis by CQC_THE1:46;
end;

Lm20: ((q => r) => p) => ((q => s) => ((s => p) => p)) in TAUT
proof
  (q => s) => (((q => r) => p) => ((s => p) => p)) in TAUT & ((q => s) =>
  (((q => r) => p) => ((s => p) => p))) => (((q => r) => p) => ((q => s) => ((s
  => p) => p))) in TAUT by Lm19,Th8;
  hence thesis by CQC_THE1:46;
end;

Lm21: (q => s) => ((s => (p => (q => r))) => (p => (q => r))) in TAUT
proof
  (q => r) => (p => (q => r)) in TAUT & ((q => r) => (p => (q => r))) => (
  (q => s) => ((s => (p => (q => r))) => (p => (q => r)))) in TAUT by Lm20,Th5;
  hence thesis by CQC_THE1:46;
end;

Lm22: (s => (p => (q => r))) => ((q => s) => (p => (q => r))) in TAUT
proof
  (q => s) => ((s => (p => (q => r))) => (p => (q => r))) in TAUT & ((q =>
  s) => ((s => (p => (q => r))) => (p => (q => r)))) => ((s => (p => (q => r)))
  => ( (q => s) => (p => (q => r)))) in TAUT by Lm21,Th8;
  hence thesis by CQC_THE1:46;
end;

theorem Th11:
  (p => (q => r)) => ((p => q) => (p => r)) in TAUT
proof
  (q => r) => ((p => q) => (p => r)) in TAUT & ((q => r) => ((p => q) => (
  p => r))) => ((p => (q => r)) => ((p => q) => (p => r))) in TAUT by Lm22,Th9;
  hence thesis by CQC_THE1:46;
end;

theorem Th12:
  'not' VERUM => p in TAUT
proof
  VERUM => ('not' VERUM => p) in TAUT by CQC_THE1:43;
  hence thesis by CQC_THE1:41,46;
end;

theorem Th13:
  q in TAUT implies p => q in TAUT
proof
  q => (p => q) in TAUT by Th5;
  hence thesis by CQC_THE1:46;
end;

theorem
  p in TAUT implies (p => q) => q in TAUT
proof
  assume
A1: p in TAUT;
  p => ((p => q) => q) in TAUT by Th7;
  hence thesis by A1,CQC_THE1:46;
end;

theorem Th15:
  s => (q => p) in TAUT implies q => (s => p) in TAUT
proof
  assume
A1: s => (q => p) in TAUT;
  (s => (q => p)) => (q => (s => p)) in TAUT by Th8;
  hence thesis by A1,CQC_THE1:46;
end;

theorem Th16:
  s => (q => p) in TAUT & q in TAUT implies s => p in TAUT
proof
  assume s => (q => p) in TAUT;
  then q => (s => p) in TAUT by Th15;
  hence thesis by CQC_THE1:46;
end;

theorem
  s => (q => p) in TAUT & q in TAUT & s in TAUT implies p in TAUT
proof
  assume s => (q => p) in TAUT & q in TAUT;
  then s => p in TAUT by Th16;
  hence thesis by CQC_THE1:46;
end;

theorem
  q => (q => r) in TAUT implies q => r in TAUT
proof
  (q => (q => r)) => (q => r) in TAUT by Th10;
  hence thesis by CQC_THE1:46;
end;

theorem Th19:
  (p => (q => r)) in TAUT implies (p => q) => (p => r) in TAUT
proof
  assume
A1: p => (q => r) in TAUT;
  (p => (q => r)) => ((p => q) => (p => r)) in TAUT by Th11;
  hence thesis by A1,CQC_THE1:46;
end;

theorem Th20:
  (p => (q => r)) in TAUT & p => q in TAUT implies p => r in TAUT
proof
  assume (p => (q => r)) in TAUT;
  then (p => q) => (p => r) in TAUT by Th19;
  hence thesis by CQC_THE1:46;
end;

theorem
  (p => (q => r)) in TAUT & p => q in TAUT & p in TAUT implies r in TAUT
proof
  assume (p => (q => r)) in TAUT & p => q in TAUT;
  then p => r in TAUT by Th20;
  hence thesis by CQC_THE1:46;
end;

theorem Th22:
  p => (q => r) in TAUT & p => (r => s ) in TAUT implies p => (q => s) in TAUT
proof
  assume that
A1: p => (q => r) in TAUT and
A2: p => (r => s ) in TAUT;
  p => ((q => r) => ((r => s) => (q => s))) in TAUT by Th1,Th13;
  then p => ((r => s) => (q => s)) in TAUT by A1,Th20;
  hence thesis by A2,Th20;
end;

theorem
  p => VERUM in TAUT by Th13,CQC_THE1:41;

Lm23: 'not' p => (p => 'not' VERUM) in TAUT
proof
  p => ('not' p => 'not' VERUM) in TAUT by CQC_THE1:43;
  hence thesis by Th15;
end;

Lm24: ('not' p => 'not' VERUM) => p in TAUT
proof
  'not' p => ('not' VERUM => p) in TAUT & ('not' p => ('not' VERUM => p))
  => ( ('not' p => 'not' VERUM) => ('not' p => p)) in TAUT by Th11,Th12,Th13;
  then
A1: ('not' p => 'not' VERUM) => ('not' p => p) in TAUT by CQC_THE1:46;
  ('not' p => p) => p in TAUT by CQC_THE1:42;
  hence thesis by A1,Th3;
end;

theorem Th24:
  ('not' p => 'not' q) => (q => p) in TAUT
proof
  q => ('not' q => 'not' VERUM) in TAUT & ('not' q => 'not' VERUM) => ((
  'not' p => 'not' q) => ('not' p => 'not' VERUM)) in TAUT by Th9,CQC_THE1:43;
  then
A1: q => (('not' p => 'not' q) => ('not' p => 'not' VERUM)) in TAUT by Th3;
  q => (('not' p => 'not' VERUM) => p) in TAUT by Lm24,Th13;
  then q => (('not' p => 'not' q) => p) in TAUT by A1,Th22;
  hence thesis by Th15;
end;

theorem Th25:
  'not' 'not' p => p in TAUT
proof
  'not' 'not' p => ('not' p => 'not' VERUM) in TAUT & ('not' p => 'not'
  VERUM) => (VERUM => p) in TAUT by Lm23,Th24;
  then 'not' 'not' p => (VERUM => p) in TAUT by Th3;
  then VERUM => ('not' 'not' p => p) in TAUT by Th15;
  hence thesis by CQC_THE1:41,46;
end;

Lm25: now
  let p;
  'not' 'not' p => p in TAUT by Th25;
  then
A1: (p => 'not' VERUM) => ('not' 'not' p => 'not' VERUM) in TAUT by Th2;
  ('not' 'not' p => 'not' VERUM) => 'not' p in TAUT by Lm24;
  hence (p => 'not' VERUM) => 'not' p in TAUT by A1,Th3;
end;

theorem Th26:
  (p => q) => ('not' q => 'not' p) in TAUT
proof
  'not' q => (q => 'not' VERUM) in TAUT & (q => 'not' VERUM) => ((p => q)
  => ( p => 'not' VERUM)) in TAUT by Lm23,Th9;
  then
A1: 'not' q => ((p => q) => (p => 'not' VERUM)) in TAUT by Th3;
  'not' q => ((p => 'not' VERUM) => 'not' p) in TAUT by Lm25,Th13;
  then 'not' q => ((p => q) => 'not' p) in TAUT by A1,Th22;
  hence thesis by Th15;
end;

theorem Th27:
  p => 'not' 'not' p in TAUT
proof
  (VERUM => p) => ('not' p => 'not' VERUM) in TAUT & ('not' p => 'not'
  VERUM) => 'not' 'not' p in TAUT by Lm25,Th26;
  then
A1: (VERUM => p) => 'not' 'not' p in TAUT by Th3;
  p => (VERUM => p) in TAUT by Th5;
  hence thesis by A1,Th3;
end;

theorem Th28:
  ('not' 'not' p => q) => (p => q) in TAUT & (p => q) => ('not'
  'not' p => q) in TAUT
proof
  p => 'not' 'not' p in TAUT by Th27;
  hence ('not' 'not' p => q) => (p => q) in TAUT by Th2;
  'not' 'not' p => p in TAUT by Th25;
  hence thesis by Th2;
end;

theorem Th29:
  (p => 'not' 'not' q) => (p => q) in TAUT & (p => q) => (p =>
  'not' 'not' q) in TAUT
proof
  (p => ('not' 'not' q => q)) => ((p => 'not' 'not' q) => (p => q)) in
  TAUT & p => ('not' 'not' q => q) in TAUT by Th11,Th13,Th25;
  hence (p => 'not' 'not' q) => (p => q) in TAUT by CQC_THE1:46;
  (p => (q => 'not' 'not' q)) => ((p => q) => (p => 'not' 'not' q)) in
  TAUT & p => (q => 'not' 'not' q) in TAUT by Th11,Th13,Th27;
  hence thesis by CQC_THE1:46;
end;

theorem Th30:
  (p => 'not' q) => (q => 'not' p) in TAUT
proof
  (p => 'not' q) => ('not' 'not' q => 'not' p) in TAUT & ('not' 'not' q =>
  'not' p) => (q => 'not' p) in TAUT by Th26,Th28;
  hence thesis by Th3;
end;

theorem Th31:
  ('not' p => q) => ('not' q => p) in TAUT
proof
  ('not' p => q) => ('not' q => 'not' 'not' p) in TAUT & ('not' q => 'not'
  'not' p) => ('not' q => p) in TAUT by Th26,Th29;
  hence thesis by Th3;
end;

theorem
  (p => 'not' p) => 'not' p in TAUT
proof
  ('not' 'not' p => 'not' p) => 'not' p in TAUT & (p => 'not' p) => ('not'
  'not' p => 'not' p) in TAUT by Th28,CQC_THE1:42;
  hence thesis by Th3;
end;

theorem
  'not' p => (p => q) in TAUT
proof
  'not' p => ('not' 'not' p => q) in TAUT & ('not' 'not' p => q) => (p =>
  q) in TAUT by Th28,CQC_THE1:43;
  hence thesis by Th3;
end;

theorem Th34:
  p => q in TAUT iff 'not' q => 'not' p in TAUT
proof
  (p => q) => ('not' q => 'not' p) in TAUT by Th26;
  hence p => q in TAUT implies 'not' q => 'not' p in TAUT by CQC_THE1:46;
  ('not' q => 'not' p) => (p => q) in TAUT by Th24;
  hence 'not' q => 'not' p in TAUT implies p => q in TAUT by CQC_THE1:46;
end;

theorem
  'not' p => 'not' q in TAUT implies q => p in TAUT by Th34;

theorem
  p in TAUT iff 'not' 'not' p in TAUT
proof
  thus p in TAUT implies 'not' 'not' p in TAUT
  proof
    assume
A1: p in TAUT;
    p => 'not' 'not' p in TAUT by Th27;
    hence thesis by A1,CQC_THE1:46;
  end;
  assume
A2: 'not' 'not' p in TAUT;
  'not' 'not' p => p in TAUT by Th25;
  hence thesis by A2,CQC_THE1:46;
end;

theorem
  (p => q) in TAUT iff (p => 'not' 'not' q) in TAUT
proof
  thus (p => q) in TAUT implies (p => 'not' 'not' q) in TAUT
  proof
    assume
A1: p => q in TAUT;
    (p => q) => (p => 'not' 'not' q) in TAUT by Th29;
    hence thesis by A1,CQC_THE1:46;
  end;
  assume
A2: p => 'not' 'not' q in TAUT;
  (p => 'not' 'not' q) => (p => q) in TAUT by Th29;
  hence thesis by A2,CQC_THE1:46;
end;

theorem
  (p => q) in TAUT iff ('not' 'not' p => q) in TAUT
proof
  thus (p => q) in TAUT implies ('not' 'not' p => q) in TAUT
  proof
    assume
A1: p => q in TAUT;
    (p => q) => ('not' 'not' p => q) in TAUT by Th28;
    hence thesis by A1,CQC_THE1:46;
  end;
  assume
A2: 'not' 'not' p => q in TAUT;
  ('not' 'not' p => q) => (p => q) in TAUT by Th28;
  hence thesis by A2,CQC_THE1:46;
end;

theorem
  p => 'not' q in TAUT implies q => 'not' p in TAUT
proof
  assume
A1: p => 'not' q in TAUT;
  (p => 'not' q) => (q => 'not' p) in TAUT by Th30;
  hence thesis by A1,CQC_THE1:46;
end;

theorem
  'not' p => q in TAUT implies 'not' q => p in TAUT
proof
  assume
A1: 'not' p => q in TAUT;
  ('not' p => q) => ('not' q => p) in TAUT by Th31;
  hence thesis by A1,CQC_THE1:46;
end;

:: predykat |- i schematy konsekwencji

registration
  let p,q,r;
  cluster (p => q) => ((q => r) => (p => r)) -> valid;
coherence
proof
  thus (p => q) => ((q => r) => (p => r)) in TAUT by Th1;
end;
end;

theorem
  p => q is valid implies (q => r) => (p => r) is valid
proof
  assume
A1: p => q is valid;
  (p => q) => ((q => r) => (p => r)) is valid;
  hence thesis by A1,CQC_THE1:65;
end;

theorem Th43:
  p => q is valid & q => r is valid implies p => r is valid
proof
  assume p => q is valid & q => r is valid;
  then p => q in TAUT & q => r in TAUT by CQC_THE1:def 10;
  hence p => r in TAUT by Th3;
end;

registration
  let p;
  cluster p => p -> valid;
coherence
proof
  thus p => p in TAUT by Th4;
end;
end;

registration
  let p,q;
  cluster p => (q => p) -> valid;
coherence
proof
  thus p => (q => p) in TAUT by Th5;
end;
end;

theorem
  p is valid implies q => p is valid
proof
  assume p is valid;
  then p in TAUT by CQC_THE1:def 10;
  hence q => p in TAUT by Th13;
end;

registration
  let p,q,s;
  cluster (s => (q => p)) => (q => (s => p)) -> valid;
coherence
proof
  thus (s => (q => p)) => (q => (s => p)) in TAUT by Th8;
end;
end;

theorem Th48:
  p => (q => r) is valid implies q => (p => r) is valid
proof
  assume p => (q => r) is valid;
  then p => (q => r) in TAUT by CQC_THE1:def 10;
  hence q => (p => r) in TAUT by Th15;
end;

theorem
  p => (q => r) is valid & q is valid implies p => r is valid
proof
  assume p => (q => r) is valid;
  then q => (p => r) is valid by Th48;
  hence thesis by CQC_THE1:65;
end;

theorem
  p => VERUM is valid & 'not' VERUM => p is valid
proof
  thus p => VERUM in TAUT by Th13,CQC_THE1:41;
  thus 'not' VERUM => p in TAUT by Th12;
end;

registration
  let p,q;
  cluster p => ((p => q) => q) -> valid;
coherence
proof
  thus p => ((p => q) => q) in TAUT by Th7;
end;
end;

registration
  let q,r;
  cluster (q => (q => r)) => (q => r) -> valid;
coherence
proof
  thus (q => (q => r)) => (q => r) in TAUT by Th10;
end;
end;

theorem
  q => (q => r) is valid implies q => r is valid
proof
  assume
A1: q => (q => r) is valid;
  (q => (q => r)) => (q => r) is valid;
  hence thesis by A1,CQC_THE1:65;
end;

registration
  let p,q,r;
  cluster (p => (q => r)) => ((p => q) => (p => r)) -> valid;
coherence
proof
  thus (p => (q => r)) => ((p => q) => (p => r)) in TAUT by Th11;
end;
end;

theorem Th55:
  p => (q => r) is valid implies (p => q) => (p => r) is valid
proof
  assume
A1: p => (q => r) is valid;
  (p => (q => r)) => ((p => q) => (p => r)) is valid;
  hence thesis by A1,CQC_THE1:65;
end;

theorem
  p => (q => r) is valid & p => q is valid implies p => r is valid
proof
  assume that
A1: p => (q => r) is valid and
A2: p => q is valid;
  (p => q) => (p => r) is valid by A1,Th55;
  hence thesis by A2,CQC_THE1:65;
end;

registration
  let p,q,r;
  cluster ((p => q) => r) => (q => r) -> valid;
coherence
proof
  thus ((p => q) => r) => (q => r) in TAUT by Th6;
end;
end;

theorem
  (p => q) => r is valid implies q => r is valid
proof
  assume
A1: (p => q) => r is valid;
  ((p => q) => r) => (q => r) is valid;
  hence thesis by A1,CQC_THE1:65;
end;

registration
  let p,q,r;
  cluster (p => q) => ((r => p) => (r => q)) -> valid;
coherence
proof
  thus (p => q) => ((r => p) => (r => q)) in TAUT by Th9;
end;
end;

theorem
  p => q is valid implies (r => p) => (r => q) is valid
proof
  assume
A1: p => q is valid;
  (p => q) => ((r => p) => (r => q)) is valid;
  hence thesis by A1,CQC_THE1:65;
end;

registration
  let p,q;
  cluster (p => q) => ('not' q => 'not' p) -> valid;
coherence
proof
  thus (p => q) => ('not' q => 'not' p) in TAUT by Th26;
end;
end;

registration
  let p,q;
  cluster ('not' p => 'not' q) => (q => p) ->  valid;
coherence
proof
  thus ('not' p => 'not' q) => (q => p) in TAUT by Th24;
end;
end;

theorem
  'not' p => 'not' q is valid iff q => p is valid
proof
  thus 'not' p => 'not' q is valid implies q => p is valid
  proof
    assume
A1: 'not' p => 'not' q is valid;
    ('not' p => 'not' q) => (q => p) is valid;
    hence thesis by A1,CQC_THE1:65;
  end;
  assume
A2: q => p is valid;
  (q => p) => ('not' p => 'not' q) is valid;
  hence thesis by A2,CQC_THE1:65;
end;

registration
  let p;
  cluster p => 'not' 'not' p -> valid;
coherence
proof
  thus p => 'not' 'not' p in TAUT by Th27;
end;
end;

registration
  let p;
  cluster 'not' 'not' p => p -> valid;
coherence
proof
  thus 'not' 'not' p => p in TAUT by Th25;
end;
end;

theorem
  'not' 'not' p is valid iff p is valid
proof
  thus 'not' 'not' p is valid implies p is valid
  proof
    assume
A1: 'not' 'not' p is valid;
    'not' 'not' p => p is valid;
    hence thesis by A1,CQC_THE1:65;
  end;
  assume
A2: p is valid;
  p => 'not' 'not' p is valid;
  hence thesis by A2,CQC_THE1:65;
end;

registration
  let p,q;
  cluster ('not' 'not' p => q) => (p => q) -> valid;
coherence
proof
  thus ('not' 'not' p => q) => (p => q) in TAUT by Th28;
end;
end;

theorem
  'not' 'not' p => q is valid iff p => q is valid
proof
  thus 'not' 'not' p => q is valid implies p => q is valid
  proof
    assume
A1: 'not' 'not' p => q is valid;
    ('not' 'not' p => q) => (p => q) is valid;
    hence thesis by A1,CQC_THE1:65;
  end;
  assume
A2: p => q is valid;
  'not' 'not' p => p is valid;
  hence thesis by A2,Th43;
end;

registration
  let p,q;
  cluster (p => 'not' 'not' q) => (p => q) -> valid;
coherence
proof
  thus (p => 'not' 'not' q) => (p => q) in TAUT by Th29;
end;
end;

theorem
  p => 'not' 'not' q is valid iff p => q is valid
proof
  thus p => 'not' 'not' q is valid implies p => q is valid
  proof
    assume
A1: p => 'not' 'not' q is valid;
    (p => 'not' 'not' q) => (p => q) is valid;
    hence thesis by A1,CQC_THE1:65;
  end;
  assume
A2: p => q is valid;
  q => 'not' 'not' q is valid;
  hence thesis by A2,Th43;
end;

registration
  let p,q;
  cluster (p => 'not' q) => (q => 'not' p) -> valid;
coherence
proof
  thus (p => 'not' q) => (q => 'not' p) in TAUT by Th30;
end;
end;

theorem
  p => 'not' q is valid implies q => 'not' p is valid
proof
  assume
A1: p => 'not' q is valid;
  (p => 'not' q) => (q => 'not' p) is valid;
  hence thesis by A1,CQC_THE1:65;
end;

registration
  let p,q;
  cluster ('not' p => q) => ('not' q => p) -> valid;
coherence
proof
  thus ('not' p => q) => ('not' q => p) in TAUT by Th31;
end;
end;

theorem
  'not' p => q is valid implies 'not' q => p is valid
proof
  assume
A1: 'not' p => q is valid;
  ('not' p => q) => ('not' q => p) is valid;
  hence thesis by A1,CQC_THE1:65;
end;

theorem
  X|- p => q implies X|- (q => r) => (p => r)
proof
  assume
A1: X|- p => q;
  X|- (p => q) => ((q => r) => (p => r)) by CQC_THE1:59;
  hence thesis by A1,CQC_THE1:55;
end;

theorem Th76:
  X|- p => q & X|- q => r implies X|- p => r
proof
  assume that
A1: X|- p => q and
A2: X|- q => r;
  X|- (p => q) => ((q => r) => (p => r)) by CQC_THE1:59;
  then X|- (q => r) => (p => r) by A1,CQC_THE1:55;
  hence thesis by A2,CQC_THE1:55;
end;

theorem
  X|- p => p by CQC_THE1:59;

theorem
  X|- p implies X|- q => p
proof
  assume
A1: X|- p;
  X|- p => (q => p) by CQC_THE1:59;
  hence thesis by A1,CQC_THE1:55;
end;

theorem
  X |- p implies X |- (p => q) => q
proof
  assume
A1: X |- p;
  X |- p => ((p => q) => q) by CQC_THE1:59;
  hence thesis by A1,CQC_THE1:55;
end;

theorem Th80:
  X |- p => (q => r) implies X |- q => (p => r)
proof
  assume
A1: X |- p => (q => r);
  X|- (p => (q => r)) => (q => (p => r)) by CQC_THE1:59;
  hence thesis by A1,CQC_THE1:55;
end;

theorem
  X |- p => (q => r) & X |- q implies X |- p => r
proof
  assume X |- p => (q => r);
  then X |- q => (p => r) by Th80;
  hence thesis by CQC_THE1:55;
end;

theorem
  X |- p => (p => q) implies X |- p => q
proof
  assume
A1: X |- p => (p => q);
  X|- (p => (p => q)) => (p => q) by CQC_THE1:59;
  hence thesis by A1,CQC_THE1:55;
end;

theorem
  X |- (p => q) => r implies X |- q => r
proof
  assume
A1: X |- (p => q) => r;
  X|- ((p => q) => r) => (q => r) by CQC_THE1:59;
  hence thesis by A1,CQC_THE1:55;
end;

theorem Th84:
  X |- p => (q => r) implies X |- (p => q) => (p =>r)
proof
  assume
A1: X|- p => (q => r);
  X |- (p => (q => r)) => ((p => q) => (p =>r)) by CQC_THE1:59;
  hence thesis by A1,CQC_THE1:55;
end;

theorem
  X |- p => (q => r) & X|- p => q implies X |- p => r
proof
  assume X|- p => (q => r);
  then X |- (p => q) => (p =>r) by Th84;
  hence thesis by CQC_THE1:55;
end;

theorem
  X|- 'not' p => 'not' q iff X|- q => p
proof
  thus X|- 'not' p => 'not' q implies X|- q => p
  proof
    assume
A1: X|- 'not' p => 'not' q;
    X|- ('not' p => 'not' q) => (q => p) by CQC_THE1:59;
    hence thesis by A1,CQC_THE1:55;
  end;
  assume
A2: X|- q => p;
  X|- (q => p) => ('not' p => 'not' q) by CQC_THE1:59;
  hence thesis by A2,CQC_THE1:55;
end;

theorem
  X|- 'not' 'not' p iff X|- p
proof
  thus X|- 'not' 'not' p implies X|- p
  proof
    assume
A1: X|- 'not' 'not' p;
    X|- 'not' 'not' p => p by CQC_THE1:59;
    hence thesis by A1,CQC_THE1:55;
  end;
  assume
A2: X|- p;
  X|- p => 'not' 'not' p by CQC_THE1:59;
  hence thesis by A2,CQC_THE1:55;
end;

theorem
  X|- p => 'not' 'not' q iff X|- p => q
proof
  thus X|- p => 'not' 'not' q implies X|- p => q
  proof
    assume
A1: X|- p => 'not' 'not' q;
    X|- (p => 'not' 'not' q) => (p => q) by CQC_THE1:59;
    hence thesis by A1,CQC_THE1:55;
  end;
  assume
A2: X|- p => q;
  X|- q => 'not' 'not' q by CQC_THE1:59;
  hence thesis by A2,Th76;
end;

theorem
  X|- 'not' 'not' p => q iff X|- p => q
proof
  thus X|- 'not' 'not' p => q implies X|- p => q
  proof
    assume
A1: X|- 'not' 'not' p => q;
    X|- ('not' 'not' p => q) => (p => q) by CQC_THE1:59;
    hence thesis by A1,CQC_THE1:55;
  end;
  assume
A2: X|- p => q;
  X|- 'not' 'not' p => p by CQC_THE1:59;
  hence thesis by A2,Th76;
end;

theorem Th90:
  X|- p => 'not' q implies X|- q => 'not' p
proof
  assume
A1: X|- p => 'not' q;
  X|- (p => 'not' q) => (q => 'not' p) by CQC_THE1:59;
  hence thesis by A1,CQC_THE1:55;
end;

theorem Th91:
  X|- 'not' p => q implies X|- 'not' q => p
proof
  assume
A1: X|- 'not' p => q;
  X|- ('not' p => q) => ('not' q => p) by CQC_THE1:59;
  hence thesis by A1,CQC_THE1:55;
end;

theorem
  X|- p => 'not' q & X |- q implies X|- 'not' p
proof
  assume X|- p => 'not' q;
  then X |- q => 'not' p by Th90;
  hence thesis by CQC_THE1:55;
end;

theorem
  X|- 'not' p => q & X |- 'not' q implies X|- p
proof
  assume X|- 'not' p => q;
  then X |- 'not' q => p by Th91;
  hence thesis by CQC_THE1:55;
end;
