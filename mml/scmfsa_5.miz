:: Relocability for { \bf SCM_FSA }
::  by Andrzej Trybulec and Yatsuka Nakamura
::
:: Received February 22, 1996
:: Copyright (c) 1996-2012 Association of Mizar Users
::           (Stowarzyszenie Uzytkownikow Mizara, Bialystok, Poland).
:: This code can be distributed under the GNU General Public Licence
:: version 3.0 or later, or the Creative Commons Attribution-ShareAlike
:: License version 3.0 or later, subject to the binding interpretation
:: detailed in file COPYING.interpretation.
:: See COPYING.GPL and COPYING.CC-BY-SA for the full text of these
:: licenses, or see http://www.gnu.org/licenses/gpl.html and
:: http://creativecommons.org/licenses/by-sa/3.0/.

environ

 vocabularies SUBSET_1, NUMBERS, AMI_1, SCMFSA_2, AMISTD_2, ARYTM_3, FUNCT_4,
      XBOOLE_0, FUNCT_1, RELAT_1, TARSKI, FSM_1, CIRCUIT2, CARD_1, XXREAL_0,
      EXTPRO_1, GRAPHSP, AMI_3, ARYTM_1, INT_1, COMPLEX1, PARTFUN1, FINSEQ_1,
      FINSEQ_2, NAT_1, ORDINAL1, RELOC, AMISTD_5, COMPOS_1, FINSET_1;
 notations TARSKI, XBOOLE_0, SUBSET_1, FINSET_1, NUMBERS, XCMPLX_0, INT_2,
      ORDINAL1, INT_1, NAT_1, PARTFUN1, RELAT_1, FUNCT_1, FINSEQ_1, FINSEQ_2,
      FUNCT_4, FUNCT_7, MEMSTR_0, COMPOS_0, COMPOS_1, EXTPRO_1, SCMFSA_2,
      XXREAL_0, AMISTD_5;
 constructors DOMAIN_1, NAT_D, RELSET_1, FUNCT_7, PRE_POLY, AMISTD_2, SCMFSA_3,
      AMISTD_5, AMI_3, SCMFSA_1;
 registrations FUNCT_1, XREAL_0, INT_1, SCMFSA_2, ORDINAL1, RELAT_1, AMISTD_2,
      SCMFSA10, COMPOS_1, EXTPRO_1, SCMFSA_4, SCMFSA_3, FUNCT_4, FINSEQ_1,
      AMI_3, COMPOS_0;
 requirements NUMERALS, SUBSET, BOOLE, ARITHM;
 definitions EXTPRO_1, AMISTD_5, MEMSTR_0, SCMFSA_2;
 theorems GRFUNC_1, NAT_1, FUNCT_1, RELAT_1, SCMFSA_2, SCMFSA_3, SCMFSA_4,
      XBOOLE_0, XBOOLE_1, PBOOLE, PARTFUN1, COMPOS_1, EXTPRO_1, AMISTD_5,
      MEMSTR_0, AMI_2, COMPOS_0;
 schemes NAT_1;

begin  :: Relocability

reserve j, k, m for Element of NAT;

begin :: Main theorems of relocatability

theorem Th1:
  for k being Element of NAT
   for q being non halt-free finite
      (the InstructionsF of SCM+FSA)-valued NAT-defined Function,
   p being q-autonomic non empty FinPartState of
  SCM+FSA, s1, s2 being State of SCM+FSA st p c= s1 & IncIC( p,k) c= s2
for P1,P2 being Instruction-Sequence of SCM+FSA
  st q c= P1 & Reloc(q,k) c= P2
 for i being Element of NAT holds
  IC Comput(P1,s1,i) + k = IC Comput(P2,s2,i) &
  IncAddr(CurInstr(P1,Comput(P1,s1,i)), k) = CurInstr(P2,Comput(P2,s2,i)) &
  Comput(P1,s1,i)|dom DataPart p = Comput(P2,s2,i)|dom DataPart p &
  DataPart Comput(P1,s1 +* DataPart s2,i) = DataPart Comput(P2,s2,i)
proof
  let k be Element of NAT;
  let q be non halt-free finite
      (the InstructionsF of SCM+FSA)-valued NAT-defined Function,
  p be q-autonomic non empty FinPartState of SCM+FSA, s1,s2 be
  State of SCM+FSA such that
A1:  p c= s1 and
A2: IncIC( p,k) c= s2;
A3: IC SCM+FSA in dom p by AMISTD_5:6;
  let P1,P2 being Instruction-Sequence of SCM+FSA
  such that
A4: q c= P1 & Reloc(q,k) c= P2;
A5: Reloc(q,k) c= P2 by A4;
A6: q c= P1 by A4;
  set s3 = s1 +* DataPart s2;
  defpred Y[Nat] means IC Comput(P1,s1,$1) + k = IC Comput(P2,s2,$1) &
   IncAddr(CurInstr(P1,Comput(P1,s1,$1)), k) = CurInstr(P2,Comput(P2,s2,$1)) &
   Comput(P1,s1,$1)|dom DataPart p = Comput(P2,s2,$1)|dom DataPart p &
    DataPart Comput(P1,s3,$1) = DataPart Comput(P2,s2,$1);
A7:  p c= s3 by A1,A2,MEMSTR_0:61;
A8: for i being Element of NAT st Y[i] holds Y[i+1]
  proof
    set DPp = DataPart p;
    let i be Element of NAT such that
A9: IC Comput(P1,s1,i) + k = IC Comput(P2,s2,i) and
A10: IncAddr (CurInstr(P1,Comput(P1,s1,i)), k)
 = CurInstr(P2,Comput(P2,s2,i)) and
A11: Comput(P1,s1,i)|dom DataPart p = Comput(P2,s2,i)|dom DataPart p and
A12: DataPart Comput(P1,s3,i) = DataPart Comput(P2,s2,i);
    set Cs1i1 = Comput(P1,s1,i+1);
    set Cs1i = Comput(P1,s1,i);
A13: dom Cs1i1 = Data-Locations SCM+FSA \/ {IC SCM+FSA}
    by MEMSTR_0:13;
    set Cs3i = Comput(P1,s3,i);
    set Cs2i = Comput(P2,s2,i);
A14: dom Cs1i = Data-Locations SCM+FSA \/ {IC SCM+FSA}
    by MEMSTR_0:13;
    set Cs2i1 = Comput(P2,s2,i+1);
A15: dom Cs2i1 = Data-Locations SCM+FSA \/ {IC SCM+FSA}
    by MEMSTR_0:13;
A16: dom Cs2i = Data-Locations SCM+FSA \/ {IC SCM+FSA}
    by MEMSTR_0:13;
    set I = CurInstr(P1, Cs1i);
A17: Cs2i1 = Following(P2,Cs2i) by EXTPRO_1:3
      .= Exec (CurInstr(P2, Cs2i), Cs2i);
A18: now
      let s be State of SCM+FSA, d be FinSeq-Location;
      d in FinSeq-Locations by SCMFSA_2:def 5;
      then d in Data-Locations SCM+FSA by SCMFSA_2:100,XBOOLE_0:def 3;
      hence d in dom DataPart s by MEMSTR_0:9;
    end;
A19: now
      let d be FinSeq-Location;
A20:  d in dom (DataPart Cs3i) by A18;
      hence Cs3i.d = (DataPart Cs3i).d by FUNCT_1:47
        .= Cs2i.d by A12,A20,FUNCT_1:47;
    end;
    set Cs3i1 = Comput(P1,s3,i+1);
A21: dom DataPart Cs2i = Data-Locations SCM+FSA by MEMSTR_0:9;
A22: dom DataPart Cs3i1 = Data-Locations SCM+FSA by MEMSTR_0:9;
A23: now
      reconsider loc = IC Cs1i1 as Element of NAT;
      assume
A24:  IC Comput(P1,s1,i+1) + k = IC Comput(P2,s2,i+1);
      reconsider ii = loc as Element of NAT;
A25:  ii in dom q by A6,A1,AMISTD_5:def 4;
A26:  loc + k in dom Reloc(q, k) by A25,COMPOS_1:46;
A27:   dom P2 = NAT by PARTFUN1:def 2;
      dom P1 = NAT by PARTFUN1:def 2;
      then CurInstr(P1, Cs1i1) = P1.loc by PARTFUN1:def 6
        .= (q).loc by A25,A4,GRFUNC_1:2
        .= (q).loc;
      hence
      IncAddr(CurInstr(P1,Comput(P1,s1,i+1)), k)
       = Reloc(q,k).(loc+k) by A25,COMPOS_1:35
      .= P2.IC Comput(P2,s2,i+1) by A24,A26,A5,GRFUNC_1:2
      .= CurInstr(P2,Comput(P2,s2,i+1)) by A27,PARTFUN1:def 6;
    end;
A28: now
      let s be State of SCM+FSA, d be Int-Location;
      d in Int-Locations by AMI_2:def 16;
      then d in Data-Locations SCM+FSA by SCMFSA_2:100,XBOOLE_0:def 3;
      hence d in dom DataPart s by MEMSTR_0:9;
    end;
A29: now
      let d be Int-Location;
A30:  d in dom DataPart Cs3i by A28;
      hence Cs3i.d = (DataPart Cs3i).d by FUNCT_1:47
        .= Cs2i.d by A12,A30,FUNCT_1:47;
    end;
    dom DPp = dom p /\(Data-Locations SCM+FSA) by RELAT_1:61;
    then
A31: dom DPp c= {IC SCM+FSA} \/ (Data-Locations SCM+FSA) by XBOOLE_1:10,17;
A32: InsCode I <= 12 by SCMFSA_2:16;
A33: dom (Cs1i1|dom DPp) = dom Cs1i1 /\ dom DPp by RELAT_1:61
      .= dom DPp by A13,A31,XBOOLE_1:28;
A34: dom DataPart Cs2i1 = Data-Locations SCM+FSA by MEMSTR_0:9;
A35: now
      let x be set;
      assume that
A36:  x in dom (Cs3i1|(Data-Locations SCM+FSA)) and
A37:  Cs3i1.x = Cs2i1.x;
      thus (DataPart Cs3i1).x = Cs2i1.x by A36,A37,FUNCT_1:47
        .= (DataPart Cs2i1).x by A22,A34,A36,FUNCT_1:47;
    end;
A38: dom DataPart Cs3i = Data-Locations SCM+FSA by MEMSTR_0:9;
A39: now
      let x be set;
      assume that
A40:  x in dom (DataPart Cs3i1) and
A41:  Cs3i1.x = Cs3i.x and
A42:  Cs2i1.x = Cs2i.x;
      (DataPart Cs3i).x = Cs3i.x by A38,A22,A40,FUNCT_1:47;
      hence
      (DataPart Cs3i1).x = (DataPart Cs2i1).x by A12,A21,A22,A35,A40,A41,A42,
FUNCT_1:47;
    end;
A43: Cs3i1 = Following(P1,Cs3i) by EXTPRO_1:3
      .= Exec (CurInstr(P1, Cs1i), Cs3i)
      by A1,A7,A4,AMISTD_5:7;
A44: dom (Cs2i1|dom DataPart p) = dom Cs2i1 /\ dom DPp by RELAT_1:61
      .= dom DPp by A15,A31,XBOOLE_1:28;
A45: now
      let x,d be set such that
A46:  d = x and
A47:  d in dom DPp and
A48:  Cs1i1.d = Cs2i1.d;
      thus (Cs1i1|dom DPp).x = Cs2i1.d by A33,A46,A47,A48,FUNCT_1:47
        .= (Cs2i1|dom DPp).x by A44,A46,A47,FUNCT_1:47;
    end;
A49: dom (Cs1i|dom DPp) = dom Cs1i /\ dom DPp by RELAT_1:61
      .= dom DPp by A14,A31,XBOOLE_1:28;
    reconsider j = IC Cs1i as Element of NAT;
A50: Cs1i1 = Following(P1,Cs1i) by EXTPRO_1:3
      .= Exec (CurInstr(P1, Cs1i), Cs1i);
A51: dom (Cs2i|dom DataPart p) = dom Cs2i /\ dom DPp by RELAT_1:61
      .= dom DPp by A16,A31,XBOOLE_1:28;
A52: now
      let x,d be set such that
A53:  d = x and
A54:  d in dom DPp and
A55:  Cs1i1.d = Cs1i.d and
A56:  Cs2i1.d = Cs2i.d;
A57:  (Cs1i|dom DPp).d = Cs1i.d by A49,A54,FUNCT_1:47;
      (Cs2i|dom DPp).d = Cs2i.d by A51,A54,FUNCT_1:47;
      hence (Cs1i1|dom DPp).x = Cs2i1.d by A11,A33,A53,A54,A55,A56,A57,
FUNCT_1:47
        .= (Cs2i1|dom DPp).x by A44,A53,A54,FUNCT_1:47;
    end;
A58: succ (IC Cs1i + k) = (j+k+1) by NAT_1:38
      .= (j+1) + k
      .= (succ IC Cs1i) + k by NAT_1:38;
    per cases by A32,NAT_1:36;
    suppose
      InsCode I = 0;
      then
A59:  I = halt SCM+FSA by SCMFSA_2:95;
      thus IC Comput(P1,s1,i+1) + k = IC Cs1i + k by A50,A59,EXTPRO_1:def 3
        .= IC Comput(P2,s2,i+1)
         by A9,A17,A59,A10,EXTPRO_1:def 3;
      hence
      IncAddr(CurInstr(P1,Comput(P1,s1,i+1)), k)
       = CurInstr(P2,Comput(P2,s2,i+1)) by A23;
A60:  Cs2i1 = Cs2i by A17,A59,A10,EXTPRO_1:def 3;
      hence Comput(P1,s1,i+1)|dom DataPart p
       = Comput(P2,s2,i+1)|dom DataPart p by A11,A50,A59,EXTPRO_1:def 3;
      thus thesis by A12,A43,A59,A60,EXTPRO_1:def 3;
    end;
    suppose
      InsCode I = 1;
      then consider da, db being Int-Location such that
A61:  I = da := db by SCMFSA_2:30;
A62:  IncAddr(I, k) = da := db by A61,COMPOS_0:4;
A63:  Exec(I, Cs1i).IC SCM+FSA = succ IC Cs1i by A61,SCMFSA_2:63;
      hence
      IC Comput(P1,s1,i+1) + k = IC Comput(P2,s2,i+1)
by A9,A10,A50,A17,A58,A62,SCMFSA_2:63;
      thus IncAddr(CurInstr(P1,
      Comput(P1,s1,i+1)), k)
       = CurInstr(P2,Comput(P2,s2,i+1))
       by A9,A10,A23,A50,A17,A58,A62,A63,SCMFSA_2:63;
A64:  Cs3i.db = Cs2i.db by A29;
      now
        let x be set;
A65:    dom DPp c= Data-Locations SCM+FSA by RELAT_1:58;
        assume
A66:    x in dom (Cs1i1|dom DPp);
        per cases by A33,A66,A65,SCMFSA_2:100,XBOOLE_0:def 3;
        suppose
          x in FinSeq-Locations;
          then reconsider d = x as FinSeq-Location by SCMFSA_2:def 5;
A67:      Cs1i1.d = Cs1i.d by A50,A61,SCMFSA_2:63;
          Cs2i1.d = Cs2i.d by A10,A17,A62,SCMFSA_2:63;
          hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A33,A52,A66,A67;
        end;
        suppose
A68:      da = x;
          DPp c= p by RELAT_1:59;
          then dom DPp c= dom p by GRFUNC_1:2;
          then
A69:      Cs3i.db = Cs1i.db by A1,A7,A33,A61,A66,A68,A4,SCMFSA_3:5;
A70:      Cs1i1.x = Cs1i.db by A50,A61,A68,SCMFSA_2:63;
          Cs2i1.x = Cs2i.db by A10,A17,A62,A68,SCMFSA_2:63;
          hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A33,A45,A64,A66,A70
,A69;
        end;
        suppose
A71:      da <> x & x in Int-Locations;
          then reconsider d = x as Int-Location by AMI_2:def 16;
A72:      Cs1i1.d = Cs1i.d by A50,A61,A71,SCMFSA_2:63;
          Cs2i1.d = Cs2i.d by A10,A17,A62,A71,SCMFSA_2:63;
          hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A33,A52,A66,A72;
        end;
      end;
      then (Cs1i1|dom DPp) c= (Cs2i1|dom DPp) by A33,A44,GRFUNC_1:2;
      hence Comput(P1,s1,i+1)|dom (DataPart p)
       = Comput(P2,s2,i+1)|dom DataPart p by A33,A44,GRFUNC_1:3;
      now
        let x be set;
        assume
A73:    x in dom (DataPart Cs3i1);
        per cases by A22,A73,SCMFSA_2:100,XBOOLE_0:def 3;
        suppose
          x in FinSeq-Locations;
          then reconsider f = x as FinSeq-Location by SCMFSA_2:def 5;
A74:      Cs3i1.f = Cs3i.f by A43,A61,SCMFSA_2:63;
          Cs2i1.f = Cs2i.f by A10,A17,A62,SCMFSA_2:63;
          hence (DataPart Cs3i1).x = (DataPart Cs2i1).x by A39,A73,A74;
        end;
        suppose
A75:      da = x;
A76:      Cs3i1.da=Cs3i.db by A43,A61,SCMFSA_2:63;
          Cs2i1.da = Cs2i.db by A10,A17,A62,SCMFSA_2:63;
          hence (DataPart Cs3i1).x = (DataPart Cs2i1).x by A29,A35,A73,A75,A76;
        end;
        suppose
A77:      da <> x & x in Int-Locations;
          then reconsider d = x as Int-Location by AMI_2:def 16;
A78:      Cs3i1.d = Cs3i.d by A43,A61,A77,SCMFSA_2:63;
          Cs2i1.d = Cs2i.d by A10,A17,A62,A77,SCMFSA_2:63;
          hence (DataPart Cs3i1).x = (DataPart Cs2i1).x by A39,A73,A78;
        end;
      end;
      then DataPart Cs3i1 c= DataPart Comput(P2,s2,i+1) by A22,A34,GRFUNC_1:2
;
      hence thesis by A22,A34,GRFUNC_1:3;
    end;
    suppose
      InsCode I = 2;
      then consider da, db being Int-Location such that
A79:  I = AddTo(da, db) by SCMFSA_2:31;
A80:  Cs3i.db = Cs2i.db by A29;
A81:  IncAddr(I, k) = AddTo(da, db) by A79,COMPOS_0:4;
A82:  Exec(I, Cs1i).IC SCM+FSA = succ IC Cs1i by A79,SCMFSA_2:64;
      hence
      IC Comput(P1,s1,i+1) + k = IC Comput(P2,s2,i+1)
by A9,A10,A50,A17,A58,A81,SCMFSA_2:64;
      thus IncAddr(CurInstr(P1,
      Comput(P1,s1,i+1)), k)
       = CurInstr(P2,Comput(P2,s2,i+1))
       by A9,A10,A23,A50,A17,A58,A81,A82,SCMFSA_2:64;
A83:  Cs3i.da = Cs2i.da by A29;
      now
A84:    dom DPp c= Data-Locations SCM+FSA by RELAT_1:58;
        let x be set such that
A85:    x in dom (Cs1i1|dom DPp);
        per cases by A33,A85,A84,SCMFSA_2:100,XBOOLE_0:def 3;
        suppose
          x in FinSeq-Locations;
          then reconsider d = x as FinSeq-Location by SCMFSA_2:def 5;
A86:      Cs1i1.d=Cs1i.d by A50,A79,SCMFSA_2:64;
          Cs2i1.d = Cs2i.d by A10,A17,A81,SCMFSA_2:64;
          hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A33,A52,A85,A86;
        end;
        suppose
A87:      da = x;
          DPp c= p by RELAT_1:59;
          then
A88:      dom DPp c= dom p by GRFUNC_1:2;
A89:      Cs1i1.x = Cs1i.da + Cs1i.db by A50,A79,A87,SCMFSA_2:64;
          Cs2i1.x = Cs2i.da + Cs2i.db by A10,A17,A81,A87,SCMFSA_2:64;
          then Cs1i1.x = Cs2i1.x by A1,A7,A33,A79,A83,A80,A85,A87,A89,A88,A4,
SCMFSA_3:6;
          hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A33,A45,A85;
        end;
        suppose
A90:      da <> x & x in Int-Locations;
          then reconsider d = x as Int-Location by AMI_2:def 16;
A91:      Cs1i1.d=Cs1i.d by A50,A79,A90,SCMFSA_2:64;
          Cs2i1.d = Cs2i.d by A10,A17,A81,A90,SCMFSA_2:64;
          hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A33,A52,A85,A91;
        end;
      end;
      then (Cs1i1|dom DPp) c= (Cs2i1|dom DPp) by A33,A44,GRFUNC_1:2;
      hence Comput(P1,s1,i+1)|dom (DataPart p)
       = Comput(P2,s2,i+1)|dom DataPart p by A33,A44,GRFUNC_1:3;
      now
        let x be set;
        assume
A92:    x in dom (DataPart Cs3i1);
        per cases by A22,A92,SCMFSA_2:100,XBOOLE_0:def 3;
        suppose
          x in FinSeq-Locations;
          then reconsider d = x as FinSeq-Location by SCMFSA_2:def 5;
A93:      Cs3i1.d = Cs3i.d by A43,A79,SCMFSA_2:64;
          Cs2i1.d = Cs2i.d by A10,A17,A81,SCMFSA_2:64;
          hence (DataPart Cs3i1).x = (DataPart Cs2i1).x by A39,A92,A93;
        end;
        suppose
A94:      da = x;
          then
A95:      Cs3i1.x = Cs3i.da + Cs3i.db by A43,A79,SCMFSA_2:64;
          Cs2i1.x = Cs2i.da + Cs2i.db by A10,A17,A81,A94,SCMFSA_2:64;
          hence (DataPart Cs3i1).x = (DataPart Cs2i1).x by A35,A83,A80,A92,A95
;
        end;
        suppose
A96:      da <> x & x in Int-Locations;
          then reconsider d = x as Int-Location by AMI_2:def 16;
A97:      Cs3i1.d = Cs3i.d by A43,A79,A96,SCMFSA_2:64;
          Cs2i1.d = Cs2i.d by A10,A17,A81,A96,SCMFSA_2:64;
          hence (DataPart Cs3i1).x = (DataPart Cs2i1).x by A39,A92,A97;
        end;
      end;
      then DataPart Cs3i1 c= DataPart Comput(P2,s2,i+1) by A22,A34,GRFUNC_1:2
;
      hence thesis by A22,A34,GRFUNC_1:3;
    end;
    suppose
      InsCode I = 3;
      then consider da, db being Int-Location such that
A98: I = SubFrom(da, db) by SCMFSA_2:32;
A99: Cs3i.db = Cs2i.db by A29;
A100: IncAddr(I, k) = SubFrom(da, db) by A98,COMPOS_0:4;
A101: Exec(I, Cs1i).IC SCM+FSA = succ IC Cs1i by A98,SCMFSA_2:65;
      hence
      IC Comput(P1,s1,i+1) + k = IC Comput(P2,s2,i+1)
by A9,A10,A50,A17,A58,A100,SCMFSA_2:65;
      thus IncAddr(CurInstr(P1,
      Comput(P1,s1,i+1)), k)
       = CurInstr(P2,Comput(P2,s2,i+1))
       by A9,A10,A23,A50,A17,A58,A100,A101,SCMFSA_2:65;
A102: Cs3i.da = Cs2i.da by A29;
      now
A103:   dom DPp c= Data-Locations SCM+FSA by RELAT_1:58;
        let x be set such that
A104:   x in dom (Cs1i1|dom DPp);
        per cases by A33,A104,A103,SCMFSA_2:100,XBOOLE_0:def 3;
        suppose
          x in FinSeq-Locations;
          then reconsider d = x as FinSeq-Location by SCMFSA_2:def 5;
A105:     Cs1i1.d = Cs1i.d by A50,A98,SCMFSA_2:65;
          Cs2i1.d = Cs2i.d by A10,A17,A100,SCMFSA_2:65;
          hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A33,A52,A104,A105;
        end;
        suppose
A106:     da = x;
          DPp c= p by RELAT_1:59;
          then
A107:     dom DPp c= dom p by GRFUNC_1:2;
A108:     Cs1i1.x = Cs1i.da - Cs1i.db by A50,A98,A106,SCMFSA_2:65;
          Cs2i1.x = Cs2i.da - Cs2i.db by A10,A17,A100,A106,SCMFSA_2:65;
          then Cs1i.da - Cs1i.db = Cs2i1.x by A1,A7,A33,A98,A102,A99,A104
,A106,A107,A4,SCMFSA_3:7;
          hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A33,A45,A104,A108;
        end;
        suppose
A109:     da <> x & x in Int-Locations;
          then reconsider d = x as Int-Location by AMI_2:def 16;
A110:     Cs1i1.d = Cs1i.d by A50,A98,A109,SCMFSA_2:65;
          Cs2i1.d = Cs2i.d by A10,A17,A100,A109,SCMFSA_2:65;
          hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A33,A52,A104,A110;
        end;
      end;
      then (Cs1i1|dom DPp) c= (Cs2i1|dom DPp) by A33,A44,GRFUNC_1:2;
      hence Comput(P1,s1,i+1)|dom (DataPart p)
       = Comput(P2,s2,i+1)|dom DataPart p by A33,A44,GRFUNC_1:3;
      now
        let x be set;
        assume
A111:   x in dom (DataPart Cs3i1);
        per cases by A22,A111,SCMFSA_2:100,XBOOLE_0:def 3;
        suppose
          x in FinSeq-Locations;
          then reconsider d = x as FinSeq-Location by SCMFSA_2:def 5;
A112:     Cs3i1.d = Cs3i.d by A43,A98,SCMFSA_2:65;
          Cs2i1.d = Cs2i.d by A10,A17,A100,SCMFSA_2:65;
          hence (DataPart Cs3i1).x = (DataPart Cs2i1).x by A39,A111,A112;
        end;
        suppose
A113:     da = x;
          then
A114:     Cs3i1.x = Cs3i.da - Cs3i.db by A43,A98,SCMFSA_2:65;
          Cs2i1.x = Cs2i.da - Cs2i.db by A10,A17,A100,A113,SCMFSA_2:65;
          hence (DataPart Cs3i1).x = (DataPart Cs2i1).x by A35,A102,A99,A111
,A114;
        end;
        suppose
A115:     da <> x & x in Int-Locations;
          then reconsider d = x as Int-Location by AMI_2:def 16;
A116:     Cs3i1.d = Cs3i.d by A43,A98,A115,SCMFSA_2:65;
          Cs2i1.d = Cs2i.d by A10,A17,A100,A115,SCMFSA_2:65;
          hence (DataPart Cs3i1).x = (DataPart Cs2i1).x by A39,A111,A116;
        end;
      end;
      then DataPart Cs3i1 c= DataPart Comput(P2,s2,i+1) by A22,A34,GRFUNC_1:2
;
      hence thesis by A22,A34,GRFUNC_1:3;
    end;
    suppose
      InsCode I = 4;
      then consider da, db being Int-Location such that
A117: I = MultBy(da, db) by SCMFSA_2:33;
A118: Cs3i.db = Cs2i.db by A29;
A119: IncAddr(I, k) = MultBy(da, db) by A117,COMPOS_0:4;
A120: Exec(I, Cs1i).IC SCM+FSA = succ IC Cs1i by A117,SCMFSA_2:66;
      hence
      IC Comput(P1,s1,i+1) + k = IC Comput(P2,s2,i+1)
by A9,A10,A50,A17,A58,A119,SCMFSA_2:66;
      thus IncAddr(CurInstr(P1,
      Comput(P1,s1,i+1)), k)
       = CurInstr(P2,Comput(P2,s2,i+1))
       by A9,A10,A23,A50,A17,A58,A119,A120,SCMFSA_2:66;
A121: Cs3i.da = Cs2i.da by A29;
      now
A122:   dom DPp c= Data-Locations SCM+FSA by RELAT_1:58;
        let x be set such that
A123:   x in dom (Cs1i1|dom DPp);
        per cases by A33,A123,A122,SCMFSA_2:100,XBOOLE_0:def 3;
        suppose
          x in FinSeq-Locations;
          then reconsider d = x as FinSeq-Location by SCMFSA_2:def 5;
A124:     Cs1i1.d = Cs1i.d by A50,A117,SCMFSA_2:66;
          Cs2i1.d = Cs2i.d by A10,A17,A119,SCMFSA_2:66;
          hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A33,A52,A123,A124;
        end;
        suppose
A125:     da = x;
          DPp c= p by RELAT_1:59;
          then
A126:     dom DPp c= dom p by GRFUNC_1:2;
A127:     Cs1i1.x = Cs1i.da * Cs1i.db by A50,A117,A125,SCMFSA_2:66;
          Cs2i1.x = Cs2i.da * Cs2i.db by A10,A17,A119,A125,SCMFSA_2:66;
          then Cs1i1.x = Cs2i1.x by A1,A7,A33,A117,A121,A118,A123,A125,A127
,A126,A4,SCMFSA_3:8;
          hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A33,A45,A123;
        end;
        suppose
A128:     da <> x & x in Int-Locations;
          then reconsider d = x as Int-Location by AMI_2:def 16;
A129:     Cs1i1.d = Cs1i.d by A50,A117,A128,SCMFSA_2:66;
          Cs2i1.d = Cs2i.d by A10,A17,A119,A128,SCMFSA_2:66;
          hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A33,A52,A123,A129;
        end;
      end;
      then (Cs1i1|dom DPp) c= (Cs2i1|dom DPp) by A33,A44,GRFUNC_1:2;
      hence Comput(P1,s1,i+1)|dom (DataPart p)
       = Comput(P2,s2,i+1)|dom DataPart p by A33,A44,GRFUNC_1:3;
      now
        let x be set;
        assume
A130:   x in dom (DataPart Cs3i1);
        per cases by A22,A130,SCMFSA_2:100,XBOOLE_0:def 3;
        suppose
          x in FinSeq-Locations;
          then reconsider d = x as FinSeq-Location by SCMFSA_2:def 5;
A131:     Cs3i1.d = Cs3i.d by A43,A117,SCMFSA_2:66;
          Cs2i1.d = Cs2i.d by A10,A17,A119,SCMFSA_2:66;
          hence (DataPart Cs3i1).x = (DataPart Cs2i1).x by A39,A130,A131;
        end;
        suppose
A132:     da = x;
          then
A133:     Cs3i1.x = Cs3i.da * Cs3i.db by A43,A117,SCMFSA_2:66;
          Cs2i1.x = Cs2i.da * Cs2i.db by A10,A17,A119,A132,SCMFSA_2:66;
          hence (DataPart Cs3i1).x = (DataPart Cs2i1).x by A35,A121,A118,A130
,A133;
        end;
        suppose
A134:     da <> x & x in Int-Locations;
          then reconsider d = x as Int-Location by AMI_2:def 16;
A135:     Cs3i1.d = Cs3i.d by A43,A117,A134,SCMFSA_2:66;
          Cs2i1.d = Cs2i.d by A10,A17,A119,A134,SCMFSA_2:66;
          hence (DataPart Cs3i1).x = (DataPart Cs2i1).x by A39,A130,A135;
        end;
      end;
      then DataPart Cs3i1 c= DataPart Comput(P2,s2,i+1) by A22,A34,GRFUNC_1:2
;
      hence thesis by A22,A34,GRFUNC_1:3;
    end;
    suppose
      InsCode I = 5;
      then consider da, db being Int-Location such that
A136: I = Divide(da, db) by SCMFSA_2:34;
A137: Cs3i.db = Cs2i.db by A29;
A138: IncAddr(I, k) = Divide(da, db) by A136,COMPOS_0:4;
A139: Cs3i.da = Cs2i.da by A29;
        per cases;
        suppose
A140:     da <> db;
A141:     Exec(I, Cs1i).IC SCM+FSA = succ IC Cs1i by A136,SCMFSA_2:67;
          hence
          IC Comput(P1,s1,i+1) + k = IC Comput(P2,s2,
i+1) by A9,A10,A50,A17,A58,A138,SCMFSA_2:67;
          thus IncAddr(CurInstr(P1,
          Comput(P1,s1,i+1)), k)
           = CurInstr(P2,Comput(
P2,s2,i+1))
           by A9,A10,A23,A50,A17,A58,A138,A141,SCMFSA_2:67;
          now
A142:       dom DPp c= Data-Locations SCM+FSA by RELAT_1:58
;
            let x be set such that
A143:       x in dom (Cs1i1|dom DPp);
            per cases by A33,A143,A142,SCMFSA_2:100,XBOOLE_0:def 3;
            suppose
              db <> x & x in FinSeq-Locations;
              then reconsider d = x as FinSeq-Location by SCMFSA_2:def 5;
A144:         Cs1i1.d = Cs1i.d by A50,A136,SCMFSA_2:67;
              Cs2i1.d = Cs2i.d by A10,A17,A138,SCMFSA_2:67;
              hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A33,A52,A143,A144;
            end;
            suppose
A145:         da = x;
              DPp c= p by RELAT_1:59;
              then dom DPp c= dom p by GRFUNC_1:2;
              then
A146:         Cs3i.da div Cs3i.db = Cs1i.da div Cs1i.db by A1,A7,A33,A136,A140
,A143,A145,A4,SCMFSA_3:9;
A147:         Cs1i1.x = Cs1i.da div Cs1i.db by A50,A136,A140,A145,SCMFSA_2:67;
              Cs2i1 .x = Cs2i.da div Cs2i.db by A10,A17,A138,A140,A145,
SCMFSA_2:67;
              hence (Cs1i1|dom DPp).x = Cs2i1.x by A139,A137,A143,A147,A146,
FUNCT_1:47
                .= (Cs2i1|dom DPp).x by A33,A44,A143,FUNCT_1:47;
            end;
            suppose
A148:         db = x;
              DPp c= p by RELAT_1:59;
              then
A149:         dom DPp c= dom p by GRFUNC_1:2;
A150:         Cs1i1.x = Cs1i.da mod Cs1i.db by A50,A136,A148,SCMFSA_2:67;
              Cs2i1.x = Cs2i.da mod Cs2i.db by A10,A17,A138,A148,SCMFSA_2:67;
              then Cs1i1.x = Cs2i1.x by A1,A7,A33,A136,A139,A137,A143,A148
,A150,A149,A4,SCMFSA_3:10;
              hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A33,A45,A143;
            end;
            suppose
A151:         da <> x & db <> x & x in Int-Locations;
              then reconsider d = x as Int-Location by AMI_2:def 16;
A152:         Cs1i1.d = Cs1i.d by A50,A136,A151,SCMFSA_2:67;
              Cs2i1.d = Cs2i.d by A10,A17,A138,A151,SCMFSA_2:67;
              hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A33,A52,A143,A152;
            end;
          end;
          then (Cs1i1|dom DPp) c= (Cs2i1|dom DPp) by A33,A44,GRFUNC_1:2;
          hence Comput(P1,s1,i+1)|dom (DataPart p)
           = Comput(P2,s2,i+1)|dom DataPart p by A33,A44,GRFUNC_1:3;
          now
            let x be set;
            assume
A153:       x in dom (DataPart Cs3i1);
            per cases by A22,A153,SCMFSA_2:100,XBOOLE_0:def 3;
            suppose
              x in FinSeq-Locations;
              then reconsider d = x as FinSeq-Location by SCMFSA_2:def 5;
A154:         Cs3i1.d = Cs3i.d by A43,A136,SCMFSA_2:67;
              Cs2i1.d = Cs2i.d by A10,A17,A138,SCMFSA_2:67;
              hence (DataPart Cs3i1).x = (DataPart Cs2i1).x by A39,A153,A154;
            end;
            suppose
A155:         da = x;
              then
A156:         Cs3i1.x = Cs3i.da div Cs3i.db by A43,A136,A140,SCMFSA_2:67;
              Cs2i1.x = Cs2i.da div Cs2i.db by A10,A17,A138,A140,A155,
SCMFSA_2:67;
              hence (DataPart Cs3i1).x = (DataPart Cs2i1).x by A35,A139,A137
,A153,A156;
            end;
            suppose
A157:         db = x;
              then
A158:         Cs3i1.x = Cs3i.da mod Cs3i.db by A43,A136,SCMFSA_2:67;
              Cs2i1.x = Cs2i.da mod Cs2i.db by A10,A17,A138,A157,SCMFSA_2:67;
              hence (DataPart Cs3i1).x = (DataPart Cs2i1).x by A35,A139,A137
,A153,A158;
            end;
            suppose
A159:         da <> x & db <> x & x in Int-Locations;
              then reconsider d = x as Int-Location by AMI_2:def 16;
A160:         Cs3i1.d = Cs3i.d by A43,A136,A159,SCMFSA_2:67;
              Cs2i1.d = Cs2i.d by A10,A17,A138,A159,SCMFSA_2:67;
              hence (DataPart Cs3i1).x = (DataPart Cs2i1).x by A39,A153,A160;
            end;
          end;
          then
          DataPart Cs3i1 c= DataPart Comput(P2,s2,i+1) by A22,A34,GRFUNC_1:2;
          hence DataPart Cs3i1 = DataPart Comput(P2,s2,i+1) by A22,A34,
GRFUNC_1:3;
        end;
        suppose
A161:     da = db;
          then
A162:     Exec(I, Cs1i).IC SCM+FSA = succ IC Cs1i by A136,SCMFSA_2:68;
          hence
          IC Comput(P1,s1,i+1) + k = IC Comput(P2,s2,
i+1) by A9,A10,A50,A17,A58,A138,A161,SCMFSA_2:68;
          thus IncAddr(CurInstr(P1,
          Comput(P1,s1,i+1)), k)
           = CurInstr(P2,Comput(
P2,s2,i+1))
           by A9,A10,A23,A50,A17,A58,A138,A161,A162,SCMFSA_2:68;
          now
A163:       dom DPp c= Data-Locations SCM+FSA by RELAT_1:58
;
            let x be set such that
A164:       x in dom (Cs1i1|dom DPp);
            per cases by A33,A164,A163,SCMFSA_2:100,XBOOLE_0:def 3;
            suppose
              x in FinSeq-Locations;
              then reconsider d = x as FinSeq-Location by SCMFSA_2:def 5;
A165:         Cs1i1.d = Cs1i.d by A50,A136,A161,SCMFSA_2:68;
              Cs2i1.d = Cs2i.d by A10,A17,A138,A161,SCMFSA_2:68;
              hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A33,A52,A164,A165;
            end;
            suppose
A166:         da = x;
A167:         (Cs2i1|dom DPp).x = Cs2i1.x by A33,A44,A164,FUNCT_1:47;
A168:         (Cs1i|dom DPp).x = Cs1i.x by A33,A49,A164,FUNCT_1:47;
A169:         (Cs2i|dom DPp).x = Cs2i.x by A33,A51,A164,FUNCT_1:47;
A170:         (Cs1i1|dom DPp).x = Cs1i1.x by A164,FUNCT_1:47;
              Cs2i1.x = Cs2i.da mod Cs2i.db by A10,A17,A138,A161,A166,
SCMFSA_2:68;
              hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A11,A50,A136,A161
,A166,A168,A169,A170,A167,SCMFSA_2:68;
            end;
            suppose
A171:         da <> x & x in Int-Locations;
              then reconsider d = x as Int-Location by AMI_2:def 16;
A172:         Cs1i1.d = Cs1i.d by A50,A136,A161,A171,SCMFSA_2:68;
              Cs2i1.d = Cs2i.d by A10,A17,A138,A161,A171,SCMFSA_2:68;
              hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A33,A52,A164,A172;
            end;
          end;
          then (Cs1i1|dom DPp) c= (Cs2i1|dom DPp) by A33,A44,GRFUNC_1:2;
          hence Comput(P1,s1,i+1)|dom (DataPart p)
           = Comput(P2,s2,i+1)|dom DataPart p by A33,A44,GRFUNC_1:3;
          now
            let x be set;
            assume
A173:       x in dom (DataPart Cs3i1);
            per cases by A22,A173,SCMFSA_2:100,XBOOLE_0:def 3;
            suppose
              x in FinSeq-Locations;
              then reconsider d = x as FinSeq-Location by SCMFSA_2:def 5;
A174:         Cs3i1.d = Cs3i.d by A43,A136,A161,SCMFSA_2:68;
              Cs2i1.d = Cs2i.d by A10,A17,A138,A161,SCMFSA_2:68;
              hence (DataPart Cs3i1).x = (DataPart Cs2i1).x by A39,A173,A174;
            end;
            suppose
A175:         da = x;
              then
A176:         Cs3i1.x = Cs3i.da mod Cs3i.db by A43,A136,A161,SCMFSA_2:68;
              Cs2i1.x = Cs2i.da mod Cs2i.db by A10,A17,A138,A161,A175,
SCMFSA_2:68;
              hence (DataPart Cs3i1).x = (DataPart Cs2i1).x by A35,A139,A137
,A173,A176;
            end;
            suppose
A177:         da <> x & x in Int-Locations;
              then reconsider d = x as Int-Location by AMI_2:def 16;
A178:         Cs3i1.d = Cs3i.d by A43,A136,A161,A177,SCMFSA_2:68;
              Cs2i1.d = Cs2i.d by A10,A17,A138,A161,A177,SCMFSA_2:68;
              hence (DataPart Cs3i1).x = (DataPart Cs2i1).x by A39,A173,A178;
            end;
          end;
          then
          DataPart Cs3i1 c= DataPart Comput(P2,s2,i+1) by A22,A34,GRFUNC_1:2;
          hence DataPart Cs3i1 = DataPart Comput(P2,s2,i+1) by A22,A34,
GRFUNC_1:3;
        end;
    end;
    suppose
      InsCode I = 6;
      then consider loc being Element of NAT such that
A179: I = goto loc by SCMFSA_2:35;
A180: CurInstr(P2, Cs2i) = goto (loc+k) by A10,A179,SCMFSA_4:1;
      thus IC Comput(P1,s1,i+1) + k = loc + k by A50,A179,SCMFSA_2:69
        .= IC Comput(P2,s2,i+1) by A17,A180,SCMFSA_2:69;
      hence
      IncAddr(CurInstr(P1,Comput(
P1,s1,i+1)), k)
       = CurInstr(P2,Comput(P2,s2,i+1)) by A23;
      now
        let x be set;
        assume
A181:   x in dom (Cs1i1|dom DPp);
        dom DPp c= Data-Locations SCM+FSA by RELAT_1:58;
        then x in Int-Locations or x in FinSeq-Locations by A33,A181,
SCMFSA_2:100,XBOOLE_0:def 3;
        then
A182:   x is Int-Location or x is FinSeq-Location by AMI_2:def 16
,SCMFSA_2:def 5;
        then
A183:   Cs2i1.x = Cs2i.x by A17,A180,SCMFSA_2:69;
        Cs1i1.x = Cs1i.x by A50,A179,A182,SCMFSA_2:69;
        hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A33,A52,A181,A183;
      end;
      then (Cs1i1|dom DPp) c= (Cs2i1|dom DPp) by A33,A44,GRFUNC_1:2;
      hence Comput(P1,s1,i+1)|dom (DataPart p)
       = Comput(P2,s2,i+1)|dom DataPart p by A33,A44,GRFUNC_1:3;
      now
        let x be set;
        assume
A184:   x in dom (DataPart Cs3i1);
        then x in Int-Locations or x in FinSeq-Locations
         by A22,SCMFSA_2:100,XBOOLE_0:def 3;
        then
A185:   x is Int-Location or x is FinSeq-Location by AMI_2:def 16
,SCMFSA_2:def 5;
        then
A186:   Cs2i1.x = Cs2i.x by A17,A180,SCMFSA_2:69;
        Cs3i1.x = Cs3i.x by A43,A179,A185,SCMFSA_2:69;
        hence (DataPart Cs3i1).x = (DataPart Cs2i1).x by A39,A184,A186;
      end;
      then DataPart Cs3i1 c= DataPart Comput(P2,s2,i+1) by A22,A34,GRFUNC_1:2;
      hence thesis by A22,A34,GRFUNC_1:3;
    end;
    suppose
      InsCode I = 7;
      then consider loc being Element of NAT, da being
      Int-Location such that
A187: I = da=0_goto loc by SCMFSA_2:36;
A188: now
        per cases;
        case
          Cs1i.da = 0;
          hence IC Comput(P1,s1,i+1) + k = loc + k by A50,A187,SCMFSA_2:70;
        end;
        case
          Cs1i.da <> 0;
          hence
          IC Comput(P1,s1,i+1) + k = succ (IC Cs2i) by A9,A50,A58,A187,
SCMFSA_2:70;
        end;
      end;
A189: CurInstr(P2, Cs2i) = da=0_goto (loc+k)
 by A10,A187,SCMFSA_4:2;
A190: now
        per cases;
        case
          Cs2i.da = 0;
          hence IC Comput(P2,s2,i+1) = loc + k by A17,A189,SCMFSA_2:70;
        end;
        case
          Cs2i.da <> 0;
          hence IC Comput(P2,s2,i+1) = succ IC Cs2i by A17,A189,SCMFSA_2:70;
        end;
      end;
A191: Cs3i.da = Cs2i.da by A29;
A192: now
        per cases;
        suppose
          loc <> succ IC Cs1i;
          hence
          IC Comput(P1,s1,i+1) + k = IC Comput(P2,s2,
i+1) by A1,A7,A187,A191,A188,A190,A4,SCMFSA_3:11;
        end;
        suppose
          loc = succ IC Cs1i;
          hence
          IC Comput(P1,s1,i+1) + k = IC Comput(P2,s2,
i+1) by A9,A58,A188,A190;
        end;
      end;
      hence IC Comput(P1,s1,i+1) + k = IC Comput(P2,
s2,i+1);
      thus IncAddr(CurInstr(P1,
      Comput(P1,s1,i+1)), k)
       = CurInstr(P2,Comput(P2,s2,i+1))
        by A23,A192;
      now
        let x be set;
        assume
A193:   x in dom (Cs1i1|dom DPp);
        dom DPp c= Data-Locations SCM+FSA by RELAT_1:58;
        then x in Int-Locations or x in FinSeq-Locations by A33,A193,
SCMFSA_2:100,XBOOLE_0:def 3;
        then
A194:   x is Int-Location or x is FinSeq-Location by AMI_2:def 16
,SCMFSA_2:def 5;
        then
A195:   Cs2i1.x = Cs2i.x by A17,A189,SCMFSA_2:70;
        Cs1i1.x = Cs1i.x by A50,A187,A194,SCMFSA_2:70;
        hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A33,A52,A193,A195;
      end;
      then (Cs1i1|dom DPp) c= (Cs2i1|dom DPp) by A33,A44,GRFUNC_1:2;
      hence Comput(P1,s1,i+1)|dom (DataPart p)
       = Comput(P2,s2,i+1)|dom DataPart p by A33,A44,GRFUNC_1:3;
      now
        let x be set;
        assume
A196:   x in dom (DataPart Cs3i1);
        then x in Int-Locations or x in FinSeq-Locations
         by A22,SCMFSA_2:100,XBOOLE_0:def 3;
        then
A197:   x is Int-Location or x is FinSeq-Location by AMI_2:def 16
,SCMFSA_2:def 5;
        then
A198:   Cs2i1.x = Cs2i.x by A17,A189,SCMFSA_2:70;
        Cs3i1.x = Cs3i.x by A43,A187,A197,SCMFSA_2:70;
        hence (DataPart Cs3i1).x = (DataPart Cs2i1).x by A39,A196,A198;
      end;
      then DataPart Cs3i1 c= DataPart Comput(P2,s2,i+1) by A22,A34,GRFUNC_1:2
;
      hence thesis by A22,A34,GRFUNC_1:3;
    end;
    suppose
      InsCode I = 8;
      then consider loc being Element of NAT, da being
      Int-Location such that
A199: I = da>0_goto loc by SCMFSA_2:37;
A200: now
        per cases;
        case
          Cs1i.da > 0;
          hence IC Comput(P1,s1,i+1) + k = loc + k by A50,A199,SCMFSA_2:71;
        end;
        case
          Cs1i.da <= 0;
          hence
          IC Comput(P1,s1,i+1) + k = succ (IC Cs2i) by A9,A50,A58,A199,
SCMFSA_2:71;
        end;
      end;
A201: CurInstr(P2, Cs2i) = da>0_goto (loc+k)
by A10,A199,SCMFSA_4:3;
A202: now
        per cases;
        case
          Cs2i.da > 0;
          hence IC Comput(P2,s2,i+1) = loc + k by A17,A201,SCMFSA_2:71;
        end;
        case
          Cs2i.da <= 0;
          hence IC Comput(P2,s2,i+1) = succ IC Cs2i by A17,A201,SCMFSA_2:71;
        end;
      end;
A203: Cs3i.da = Cs2i.da by A29;
A204: now
        per cases;
        suppose
          loc <> succ IC Cs1i;
          hence
          IC Comput(P1,s1,i+1) + k = IC Comput(P2,s2,
i+1) by A1,A7,A199,A203,A200,A202,A4,SCMFSA_3:12;
        end;
        suppose
          loc = succ IC Cs1i;
          hence
          IC Comput(P1,s1,i+1) + k = IC Comput(P2,s2,
i+1) by A9,A58,A200,A202;
        end;
      end;
      hence IC Comput(P1,s1,i+1) + k = IC Comput(P2,
s2,i+1);
      thus IncAddr(CurInstr(P1,
      Comput(P1,s1,i+1)), k)
       = CurInstr(P2,Comput(P2,s2,i+1))
       by A23,A204;
      now
        let x be set;
        assume
A205:   x in dom (Cs1i1|dom DPp);
        dom DPp c= Data-Locations SCM+FSA by RELAT_1:58;
        then x in Int-Locations or x in FinSeq-Locations by A33,A205,
SCMFSA_2:100,XBOOLE_0:def 3;
        then
A206:   x is Int-Location or x is FinSeq-Location by AMI_2:def 16
,SCMFSA_2:def 5;
        then
A207:   Cs2i1.x = Cs2i.x by A17,A201,SCMFSA_2:71;
        Cs1i1.x = Cs1i.x by A50,A199,A206,SCMFSA_2:71;
        hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A33,A52,A205,A207;
      end;
      then (Cs1i1|dom DPp) c= (Cs2i1|dom DPp) by A33,A44,GRFUNC_1:2;
      hence Comput(P1,s1,i+1)|dom (DataPart p)
       = Comput(P2,s2,i+1)|dom DataPart p by A33,A44,GRFUNC_1:3;
      now
        let x be set;
        assume
A208:   x in dom (DataPart Cs3i1);
        then x in Int-Locations or x in FinSeq-Locations
         by A22,SCMFSA_2:100,XBOOLE_0:def 3;
        then
A209:   x is Int-Location or x is FinSeq-Location by AMI_2:def 16
,SCMFSA_2:def 5;
        then
A210:   Cs2i1.x = Cs2i.x by A17,A201,SCMFSA_2:71;
        Cs3i1.x = Cs3i.x by A43,A199,A209,SCMFSA_2:71;
        hence (DataPart Cs3i1).x = (DataPart Cs2i1).x by A39,A208,A210;
      end;
      then DataPart Cs3i1 c= DataPart Comput(P2,s2,i+1) by A22,A34,GRFUNC_1:2
;
      hence thesis by A22,A34,GRFUNC_1:3;
    end;
    suppose
      InsCode I = 9;
      then consider
      db, da being Int-Location, f being FinSeq-Location such that
A211: I = da := (f,db) by SCMFSA_2:38;
A212: Cs3i.f = Cs2i.f by A19;
A213: IncAddr(I, k) = da := (f,db) by A211,COMPOS_0:4;
A214: Exec(I, Cs1i).IC SCM+FSA = succ IC Cs1i by A211,SCMFSA_2:72;
      hence
      IC Comput(P1,s1,i+1) + k = IC Comput(P2,s2,i+1)
by A9,A10,A50,A17,A58,A213,SCMFSA_2:72;
      thus IncAddr(CurInstr(P1,
      Comput(P1,s1,i+1)), k)
       = CurInstr(P2,Comput(P2,s2,i+1))
       by A9,A10,A23,A50,A17,A58,A213,A214,SCMFSA_2:72;
A215: Cs3i.db = Cs2i.db by A29;
      now
        let x be set;
A216:   dom DPp c= Data-Locations SCM+FSA by RELAT_1:58;
        assume
A217:   x in dom (Cs1i1|dom DPp);
        per cases by A33,A217,A216,SCMFSA_2:100,XBOOLE_0:def 3;
        suppose
          x in FinSeq-Locations;
          then reconsider d = x as FinSeq-Location by SCMFSA_2:def 5;
A218:     Cs1i1.d = Cs1i.d by A50,A211,SCMFSA_2:72;
          Cs2i1.d = Cs2i.d by A10,A17,A213,SCMFSA_2:72;
          hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A33,A52,A217,A218;
        end;
        suppose
A219:     da = x;
          then consider k1 being Element of NAT such that
A220:     k1 = abs(Cs1i.db) and
A221:     Cs1i1.x = (Cs1i.f)/.k1 by A50,A211,SCMFSA_2:72;
          consider k2 being Element of NAT such that
A222:     k2 = abs(Cs2i.db) and
A223:     Cs2i1.x = (Cs2i.f)/.k2 by A10,A17,A213,A219,SCMFSA_2:72;
          DPp c= p by RELAT_1:59;
          then dom DPp c= dom p by GRFUNC_1:2;
          then (Cs3i.f)/.k2 = (Cs1i.f)/.k1 by A1,A7,A33,A211,A215,A217,A219
,A220,A222,A4,SCMFSA_3:13;
          hence
          (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A33,A45,A212,A217,A221,A223;
        end;
        suppose
A224:     da <> x & x in Int-Locations;
          then reconsider d = x as Int-Location by AMI_2:def 16;
A225:     Cs1i1.d = Cs1i.d by A50,A211,A224,SCMFSA_2:72;
          Cs2i1.d = Cs2i.d by A10,A17,A213,A224,SCMFSA_2:72;
          hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A33,A52,A217,A225;
        end;
      end;
      then (Cs1i1|dom DPp) c= (Cs2i1|dom DPp) by A33,A44,GRFUNC_1:2;
      hence Comput(P1,s1,i+1)|dom (DataPart p)
       = Comput(P2,s2,i+1)|dom DataPart p by A33,A44,GRFUNC_1:3;
      now
        let x be set;
        assume
A226:   x in dom (DataPart Cs3i1);
        per cases by A22,A226,SCMFSA_2:100,XBOOLE_0:def 3;
        suppose
          x in FinSeq-Locations;
          then reconsider f = x as FinSeq-Location by SCMFSA_2:def 5;
A227:     Cs3i1.f = Cs3i.f by A43,A211,SCMFSA_2:72;
          Cs2i1.f = Cs2i.f by A10,A17,A213,SCMFSA_2:72;
          hence (DataPart Cs3i1).x = (DataPart Cs2i1).x by A39,A226,A227;
        end;
        suppose
A228:     da = x;
          then
A229:     ex k1 being Element of NAT st k1 = abs(Cs3i.db) & Cs3i1. x =
          (Cs3i.f)/.k1 by A43,A211,SCMFSA_2:72;
          ex k2 being Element of NAT st k2 = abs(Cs2i.db) & Cs2i1. x =
          (Cs2i.f)/.k2 by A10,A17,A213,A228,SCMFSA_2:72;
          hence (DataPart Cs3i1).x = (DataPart Cs2i1).x by A35,A215,A212,A226
,A229;
        end;
        suppose
A230:     da <> x & x in Int-Locations;
          then reconsider d = x as Int-Location by AMI_2:def 16;
A231:     Cs3i1.d = Cs3i.d by A43,A211,A230,SCMFSA_2:72;
          Cs2i1.d = Cs2i.d by A10,A17,A213,A230,SCMFSA_2:72;
          hence (DataPart Cs3i1).x = (DataPart Cs2i1).x by A39,A226,A231;
        end;
      end;
      then DataPart Cs3i1 c= DataPart Comput(P2,s2,i+1) by A22,A34,GRFUNC_1:2
;
      hence thesis by A22,A34,GRFUNC_1:3;
    end;
    suppose
      InsCode I = 10;
      then consider
      db, da being Int-Location, f being FinSeq-Location such that
A232: I = (f,db):=da by SCMFSA_2:39;
A233: Cs3i.f = Cs2i.f by A19;
A234: IncAddr(I, k) = (f,db):=da by A232,COMPOS_0:4;
A235: Exec(I, Cs1i).IC SCM+FSA = succ IC Cs1i by A232,SCMFSA_2:73;
      hence
      IC Comput(P1,s1,i+1) + k = IC Comput(P2,s2,i+1)
by A9,A10,A50,A17,A58,A234,SCMFSA_2:73;
A236: Cs3i.da = Cs2i.da by A29;
      thus IncAddr(CurInstr(P1,
      Comput(P1,s1,i+1)), k)
       = CurInstr(P2,Comput(P2,s2,i+1))
       by A9,A10,A23,A50,A17,A58,A234,A235,SCMFSA_2:73;
A237: Cs3i.db = Cs2i.db by A29;
      now
        let x be set;
A238:   dom DPp c= Data-Locations SCM+FSA by RELAT_1:58;
        assume
A239:   x in dom (Cs1i1|dom DPp);
        per cases by A33,A239,A238,SCMFSA_2:100,XBOOLE_0:def 3;
        suppose
          x in Int-Locations;
          then reconsider d = x as Int-Location by AMI_2:def 16;
A240:     Cs1i1.d = Cs1i.d by A50,A232,SCMFSA_2:73;
          Cs2i1.d = Cs2i.d by A10,A17,A234,SCMFSA_2:73;
          hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A33,A52,A239,A240;
        end;
        suppose
A241:     f = x;
          then consider k1 being Element of NAT such that
A242:     k1 = abs(Cs1i.db) and
A243:     Cs1i1.x = Cs1i.f +*(k1,Cs1i.da) by A50,A232,SCMFSA_2:73;
          consider k2 being Element of NAT such that
A244:     k2 = abs(Cs2i.db) and
A245:     Cs2i1.x = Cs2i.f +*(k2,Cs2i.da) by A10,A17,A234,A241,SCMFSA_2:73;
          DPp c= p by RELAT_1:59;
          then dom DPp c= dom p by GRFUNC_1:2;
          then Cs3i.f +*(k2,Cs3i.da) = Cs1i.f +*(k1,Cs1i.da) by A1,A7,A33,A232
,A237,A239,A241,A242,A244,A4,SCMFSA_3:14;
          hence
          (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A33,A45,A236,A233,A239,A243
,A245;
        end;
        suppose
A246:     f <> x & x in FinSeq-Locations;
          then reconsider d = x as FinSeq-Location by SCMFSA_2:def 5;
A247:     Cs1i1.d = Cs1i.d by A50,A232,A246,SCMFSA_2:73;
          Cs2i1.d = Cs2i.d by A10,A17,A234,A246,SCMFSA_2:73;
          hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A33,A52,A239,A247;
        end;
      end;
      then (Cs1i1|dom DPp) c= (Cs2i1|dom DPp) by A33,A44,GRFUNC_1:2;
      hence Comput(P1,s1,i+1)|dom (DataPart p)
       = Comput(P2,s2,i+1)|dom DataPart p by A33,A44,GRFUNC_1:3;
      now
        let x be set;
        assume
A248:   x in dom (DataPart Cs3i1);
        per cases by A22,A248,SCMFSA_2:100,XBOOLE_0:def 3;
        suppose
          x in Int-Locations;
          then reconsider f = x as Int-Location by AMI_2:def 16;
A249:     Cs3i1.f = Cs3i.f by A43,A232,SCMFSA_2:73;
          Cs2i1.f = Cs2i.f by A10,A17,A234,SCMFSA_2:73;
          hence (DataPart Cs3i1).x = (DataPart Cs2i1).x by A39,A248,A249;
        end;
        suppose
A250:     f = x;
          then
A251:     ex k1 being Element of NAT st k1 = abs(Cs3i.db) & Cs3i1. x =
          Cs3i.f +*(k1,Cs3i.da) by A43,A232,SCMFSA_2:73;
          ex k2 being Element of NAT st k2 = abs(Cs2i.db) & Cs2i1. x =
          Cs2i.f +*(k2,Cs2i.da) by A10,A17,A234,A250,SCMFSA_2:73;
          hence (DataPart Cs3i1).x = (DataPart Cs2i1).x by A35,A237,A236,A233
,A248,A251;
        end;
        suppose
A252:     f <> x & x in FinSeq-Locations;
          then reconsider d = x as FinSeq-Location by SCMFSA_2:def 5;
A253:     Cs3i1.d = Cs3i.d by A43,A232,A252,SCMFSA_2:73;
          Cs2i1.d = Cs2i.d by A10,A17,A234,A252,SCMFSA_2:73;
          hence (DataPart Cs3i1).x = (DataPart Cs2i1).x by A39,A248,A253;
        end;
      end;
      then DataPart Cs3i1 c= DataPart Comput(P2,s2,i+1) by A22,A34,GRFUNC_1:2
;
      hence thesis by A22,A34,GRFUNC_1:3;
    end;
    suppose
      InsCode I = 11;
      then consider da being Int-Location, f being FinSeq-Location such that
A254: I = da :=len f by SCMFSA_2:40;
A255: IncAddr(I, k) = da :=len f by A254,COMPOS_0:4;
A256: Exec(I, Cs1i).IC SCM+FSA = succ IC Cs1i by A254,SCMFSA_2:74;
      hence
      IC Comput(P1,s1,i+1) + k = IC Comput(P2,s2,i+1)
by A9,A10,A50,A17,A58,A255,SCMFSA_2:74;
      thus IncAddr(CurInstr(P1,
      Comput(P1,s1,i+1)), k)
       = CurInstr(P2,Comput(P2,s2,i+1))
       by A9,A10,A23,A50,A17,A58,A255,A256,SCMFSA_2:74;
A257: Cs3i.f = Cs2i.f by A19;
      now
        let x be set;
A258:   dom DPp c= Data-Locations SCM+FSA by RELAT_1:58;
        assume
A259:   x in dom (Cs1i1|dom DPp);
        per cases by A33,A259,A258,SCMFSA_2:100,XBOOLE_0:def 3;
        suppose
          x in FinSeq-Locations;
          then reconsider d = x as FinSeq-Location by SCMFSA_2:def 5;
A260:     Cs1i1.d = Cs1i.d by A50,A254,SCMFSA_2:74;
          Cs2i1.d = Cs2i.d by A10,A17,A255,SCMFSA_2:74;
          hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A33,A52,A259,A260;
        end;
        suppose
A261:     da = x;
          DPp c= p by RELAT_1:59;
          then dom DPp c= dom p by GRFUNC_1:2;
          then
A262:     len(Cs3i.f) = len(Cs1i.f)
            by A1,A7,A33,A254,A259,A261,A4,SCMFSA_3:15;
A263:     Cs1i1.x = len(Cs1i.f) by A50,A254,A261,SCMFSA_2:74;
          Cs2i1.x = len(Cs2i.f) by A10,A17,A255,A261,SCMFSA_2:74;
          hence
          (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A33,A45,A257,A259,A263,A262;
        end;
        suppose
A264:     da <> x & x in Int-Locations;
          then reconsider d = x as Int-Location by AMI_2:def 16;
A265:     Cs1i1.d = Cs1i.d by A50,A254,A264,SCMFSA_2:74;
          Cs2i1.d = Cs2i.d by A10,A17,A255,A264,SCMFSA_2:74;
          hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A33,A52,A259,A265;
        end;
      end;
      then (Cs1i1|dom DPp) c= (Cs2i1|dom DPp) by A33,A44,GRFUNC_1:2;
      hence Comput(P1,s1,i+1)|dom (DataPart p)
       = Comput(P2,s2,i+1)|dom DataPart p by A33,A44,GRFUNC_1:3;
      now
        let x be set;
        assume
A266:   x in dom (DataPart Cs3i1);
        per cases by A22,A266,SCMFSA_2:100,XBOOLE_0:def 3;
        suppose
          x in FinSeq-Locations;
          then reconsider f = x as FinSeq-Location by SCMFSA_2:def 5;
A267:     Cs3i1.f = Cs3i.f by A43,A254,SCMFSA_2:74;
          Cs2i1.f = Cs2i.f by A10,A17,A255,SCMFSA_2:74;
          hence (DataPart Cs3i1).x = (DataPart Cs2i1).x by A39,A266,A267;
        end;
        suppose
A268:     da = x;
          then
A269:     Cs3i1.x = len(Cs3i.f) by A43,A254,SCMFSA_2:74;
          Cs2i1.x = len(Cs2i.f) by A10,A17,A255,A268,SCMFSA_2:74;
          hence (DataPart Cs3i1).x = (DataPart Cs2i1).x by A35,A257,A266,A269;
        end;
        suppose
A270:     da <> x & x in Int-Locations;
          then reconsider d = x as Int-Location by AMI_2:def 16;
A271:     Cs3i1.d = Cs3i.d by A43,A254,A270,SCMFSA_2:74;
          Cs2i1.d = Cs2i.d by A10,A17,A255,A270,SCMFSA_2:74;
          hence (DataPart Cs3i1).x = (DataPart Cs2i1).x by A39,A266,A271;
        end;
      end;
      then DataPart Cs3i1 c= DataPart Comput(P2,s2,i+1) by A22,A34,GRFUNC_1:2
;
      hence thesis by A22,A34,GRFUNC_1:3;
    end;
    suppose
      InsCode I = 12;
      then consider da being Int-Location, f being FinSeq-Location such that
A272: I = f:=<0,...,0>da by SCMFSA_2:41;
A273: IncAddr(I, k) = f:=<0,...,0>da by A272,COMPOS_0:4;
A274: Exec(I, Cs1i).IC SCM+FSA = succ IC Cs1i by A272,SCMFSA_2:75;
      hence
      IC Comput(P1,s1,i+1) + k = IC Comput(P2,s2,i+1)
by A9,A10,A50,A17,A58,A273,SCMFSA_2:75;
      thus IncAddr(CurInstr(P1,Comput(P1,s1,i+1)), k)
       = CurInstr(P2,Comput(P2,s2,i+1))
       by A9,A10,A23,A50,A17,A58,A273,A274,SCMFSA_2:75;
A275: Cs3i.da = Cs2i.da by A29;
      now
        let x be set;
A276:   dom DPp c= Data-Locations SCM+FSA by RELAT_1:58;
        assume
A277:   x in dom (Cs1i1|dom DPp);
        per cases by A33,A277,A276,SCMFSA_2:100,XBOOLE_0:def 3;
        suppose
          x in Int-Locations;
          then reconsider d = x as Int-Location by AMI_2:def 16;
A278:     Cs1i1.d = Cs1i.d by A50,A272,SCMFSA_2:75;
          Cs2i1.d = Cs2i.d by A10,A17,A273,SCMFSA_2:75;
          hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A33,A52,A277,A278;
        end;
        suppose
A279:     f = x;
          then consider k1 being Element of NAT such that
A280:     k1 = abs(Cs1i.da) and
A281:     Cs1i1.x = k1 |-> 0 by A50,A272,SCMFSA_2:75;
          consider k2 being Element of NAT such that
A282:     k2 = abs(Cs2i.da) and
A283:     Cs2i1.x = k2 |-> 0 by A10,A17,A273,A279,SCMFSA_2:75;
          DPp c= p by RELAT_1:59;
          then dom DPp c= dom p by GRFUNC_1:2;
          then k2 |-> 0 = k1 |->0 by A1,A7,A33,A272,A275,A277,A279,A280,A282
,A4,SCMFSA_3:16;
          hence
          (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A33,A45,A277,A281,A283;
        end;
        suppose
A284:     f <> x & x in FinSeq-Locations;
          then reconsider d = x as FinSeq-Location by SCMFSA_2:def 5;
A285:     Cs1i1.d = Cs1i.d by A50,A272,A284,SCMFSA_2:75;
          Cs2i1.d = Cs2i.d by A10,A17,A273,A284,SCMFSA_2:75;
          hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A33,A52,A277,A285;
        end;
      end;
      then (Cs1i1|dom DPp) c= (Cs2i1|dom DPp) by A33,A44,GRFUNC_1:2;
      hence Comput(P1,s1,i+1)|dom (DataPart p)
       = Comput(P2,s2,i+1)|dom DataPart p by A33,A44,GRFUNC_1:3;
      now
        let x be set;
        assume
A286:   x in dom (DataPart Cs3i1);
        per cases by A22,A286,SCMFSA_2:100,XBOOLE_0:def 3;
        suppose
          x in Int-Locations;
          then reconsider f = x as Int-Location by AMI_2:def 16;
A287:     Cs3i1.f = Cs3i.f by A43,A272,SCMFSA_2:75;
          Cs2i1.f = Cs2i.f by A10,A17,A273,SCMFSA_2:75;
          hence (DataPart Cs3i1).x = (DataPart Cs2i1).x by A39,A286,A287;
        end;
        suppose
A288:     f = x;
          then
A289:     ex k1 being Element of NAT st k1 = abs(Cs3i.da) & Cs3i1. x =
          k1 |-> 0 by A43,A272,SCMFSA_2:75;
          ex k2 being Element of NAT st k2 = abs(Cs2i.da) & Cs2i1. x =
          k2 |-> 0 by A10,A17,A273,A288,SCMFSA_2:75;
          hence (DataPart Cs3i1).x = (DataPart Cs2i1).x by A35,A275,A286,A289;
        end;
        suppose
A290:     f <> x & x in FinSeq-Locations;
          then reconsider d = x as FinSeq-Location by SCMFSA_2:def 5;
A291:     Cs3i1.d = Cs3i.d by A43,A272,A290,SCMFSA_2:75;
          Cs2i1.d = Cs2i.d by A10,A17,A273,A290,SCMFSA_2:75;
          hence (DataPart Cs3i1).x = (DataPart Cs2i1).x by A39,A286,A291;
        end;
      end;
      then DataPart Cs3i1 c= DataPart Comput(P2,s2,i+1) by A22,A34,GRFUNC_1:2;
      hence thesis by A22,A34,GRFUNC_1:3;
    end;
  end;
  reconsider ii = IC p as Element of NAT;
A292: IC SCM+FSA in dom IncIC( p,k) by MEMSTR_0:52;
  now
    thus IC Comput(P1,s1,0) + k = IC s1 + k
      .= IC  p + k by A1,A3,GRFUNC_1:2
      .= IC p + k
      .= IC IncIC( p,k) by MEMSTR_0:53
      .= IC s2 by A2,A292,GRFUNC_1:2
      .= IC Comput(P2,s2,0);
    reconsider loc = IC  p as Element of NAT;
A293: IC  p = IC s1 by A1,A3,GRFUNC_1:2;
    then IC  p = IC Comput(P1,s1,0);
    then
A294: loc in dom q by A6,A1,AMISTD_5:def 4;
A295: (IC  p) + k in dom Reloc(q,k) by A294,COMPOS_1:46;
A296: IC SCM+FSA in dom IncIC( p,k) by MEMSTR_0:52;
A297: (q).IC  p = P1.IC s1 by A293,A294,A4,GRFUNC_1:2;
    dom P2 = NAT by PARTFUN1:def 2;
    then
A298:  CurInstr(P2,Comput(P2,s2,0))
      = P2.IC Comput(P2,s2,0) by PARTFUN1:def 6
     .= P2.IC s2
     .= P2.(IC IncIC( p,k)) by A2,A296,GRFUNC_1:2
      .= P2.((IC p) +k) by MEMSTR_0:53
      .= P2.((IC  p) +k)
      .= (Reloc(q, k)).((IC  p) +k) by A295,A4,GRFUNC_1:2;
A299:  dom P1 = NAT by PARTFUN1:def 2;
     CurInstr(P1,Comput(P1,s1,0))
       = CurInstr(P1,s1)
      .= P1.IC s1 by A299,PARTFUN1:def 6;
    hence
    IncAddr(CurInstr(P1,Comput(P1,s1,0)), k)
     = CurInstr(P2,Comput(P2,s2,0)) by A298,A294,A297,COMPOS_1:35;
A300: DataPart  p c=  p by RELAT_1:59;
A301: DataPart p c= s1 by A1,A300,XBOOLE_1:1;
A302: DataPart IncIC(p,k) = DataPart p by MEMSTR_0:51;
    DataPart p c= IncIC(p,k) by A302,MEMSTR_0:12;
    then
A303: DataPart p c= s2 by A2,XBOOLE_1:1;
    thus Comput(P1,s1,0)|dom (DataPart p) = s1 | dom (DataPart p)
      .= DataPart p by A301,GRFUNC_1:23
      .= s2 | dom (DataPart p) by A303,GRFUNC_1:23
      .= Comput(P2,s2,0)|dom DataPart p;
    thus DataPart Comput(P1,s3,0) = DataPart(s1 +* DataPart s2)
      .= DataPart s2 by PBOOLE:142
      .= DataPart Comput(P2,s2,0);
  end;
  then
A304: Y[0];
  thus for i being Element of NAT holds Y[i] from NAT_1:sch 1(A304,A8);
end;

registration
 cluster SCM+FSA -> relocable1 relocable2;
 coherence
  proof
   for k being Element of NAT
    for q being non halt-free finite
      (the InstructionsF of SCM+FSA)-valued NAT-defined Function,
    p being q-autonomic non empty FinPartState of SCM+FSA,
    s1, s2 being State of SCM+FSA
   st  p c= s1 & IncIC( p,k) c= s2
for P1,P2 being Instruction-Sequence of SCM+FSA
  st q c= P1 & Reloc(q,k) c= P2
 for i being Element of NAT
 holds IncAddr(CurInstr(P1,Comput(P1,s1,i)), k)
  = CurInstr(P2,Comput(P2,s2,i)) by Th1;
  hence SCM+FSA is relocable1 by AMISTD_5:def 5;
  let k be Element of NAT;
  let q being non halt-free finite
      (the InstructionsF of SCM+FSA)-valued NAT-defined Function,
  p be q-autonomic non empty FinPartState of SCM+FSA,
      s1, s2 be State of SCM+FSA;
  assume
A1: p c= s1 & IncIC( p,k) c= s2;
  let P1,P2 being Instruction-Sequence of SCM+FSA;
  assume q c= P1 & Reloc(q,k) c= P2;
  hence for i being Element of NAT holds
   Comput(P1,s1,i)|dom DataPart p = Comput(P2,s2,i)|dom DataPart p
    by A1,Th1;
  end;
end;

