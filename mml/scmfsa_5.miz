:: Relocability for { \bf SCM_FSA }
::  by Andrzej Trybulec and Yatsuka Nakamura
::
:: Received February 22, 1996
:: Copyright (c) 1996 Association of Mizar Users

environ

 vocabularies SUBSET_1, NUMBERS, AMI_1, SCMFSA_2, AMISTD_2, ARYTM_3, FUNCT_4,
      VALUED_1, XBOOLE_0, FUNCT_1, RELAT_1, TARSKI, FSM_1, CIRCUIT2, CARD_1,
      XXREAL_0, SCMNORM, GRAPHSP, AMI_3, ARYTM_1, INT_1, COMPLEX1, PARTFUN1,
      FINSEQ_1, FINSEQ_2, GLIB_000, STRUCT_0, MSUALG_1, TURING_1, NAT_1,
      ORDINAL1, RELOC, FINSET_1;
 notations TARSKI, XBOOLE_0, ENUMSET1, SUBSET_1, NUMBERS, XCMPLX_0, INT_2,
      ORDINAL1,
      INT_1, NAT_1, NAT_D, FINSET_1, PARTFUN1, RELAT_1, FUNCT_1, FINSEQ_1,
      FINSEQ_2, FUNCT_4, FUNCT_7, VALUED_1, STRUCT_0, COMPOS_1, AMI_1,
      AMISTD_2, SCMFSA_2,
      XXREAL_0;
 constructors DOMAIN_1, XXREAL_0, NAT_D, RELSET_1,
      PRE_POLY, AMISTD_2, SCMFSA_2, SCMFSA_3;
 registrations XBOOLE_0, SETFAM_1, FUNCT_1, RELSET_1, NUMBERS, XREAL_0, INT_1,
      CARD_3, AMI_1, SCMFSA_2, ORDINAL1, FINSET_1, RELAT_1, VALUED_1,
      GRFUNC_1, FUNCT_2, AMISTD_2, SCMFSA10, COMPOS_1;
 requirements NUMERALS, SUBSET, BOOLE, ARITHM;
 definitions FUNCOP_1, COMPOS_1, AMI_1, TARSKI, AMISTD_2;
 theorems AMI_1, GRFUNC_1, NAT_1, FUNCOP_1, TARSKI, FUNCT_4, FUNCT_1, ZFMISC_1,
      RELAT_1, SCMFSA_2, SCMFSA_3, SCMFSA_4, XBOOLE_0, XBOOLE_1, VALUED_1,
      NAT_D, PBOOLE, PARTFUN1, AMISTD_2, COMPOS_1;
 schemes NAT_1;

begin  :: Relocability

reserve j, k, m for Element of NAT;

Lm1: NAT misses Int-Locations \/ FinSeq-Locations by SCMFSA_2:13,14,XBOOLE_1:70
;

canceled 9;

theorem Th10:
  for k being Element of NAT, p being autonomic FinPartState of
SCM+FSA , s1, s2 being State of SCM+FSA st p c= s1 & Relocated(p,k) c= s2 holds
  p c= s1 +* DataPart s2
proof
  let k be Element of NAT, p be autonomic FinPartState of SCM+FSA , s1, s2 be
  State of SCM+FSA such that
A1: p c= s1 and
A2: Relocated(p,k) c= s2;
  set s3 = DataPart s2;
  reconsider s = s1 +* s2|(Int-Locations \/ FinSeq-Locations) as State of
  SCM+FSA;
A3: dom p c= Int-Locations \/ FinSeq-Locations \/ {IC SCM+FSA} \/ NAT by
RELAT_1:def 18,SCMFSA_2:8;
A4: now
A5: FinSeq-Locations c= dom s2 by SCMFSA_2:70;
    Int-Locations c= dom s2 by SCMFSA_2:69;
    then Int-Locations \/ FinSeq-Locations = dom s2 /\ (Int-Locations \/
    FinSeq-Locations) by A5,XBOOLE_1:8,28;
    then
A6: dom s3 = Int-Locations \/ FinSeq-Locations by RELAT_1:90,SCMFSA_2:127;
    let x be set such that
A7: x in dom p;
A8: x in Int-Locations \/ FinSeq-Locations \/ {IC SCM+FSA} or x in NAT by A3,A7
,XBOOLE_0:def 3;
    per cases by A8,XBOOLE_0:def 3;
    suppose
A9:   x in {IC SCM+FSA};
A10:  not IC SCM+FSA in Int-Locations \/ FinSeq-Locations by SCMFSA_3:1,2
,XBOOLE_0:def 3;
      x = IC SCM+FSA by A9,TARSKI:def 1;
      then s1.x = s.x by A6,A10,FUNCT_4:12,SCMFSA_2:127;
      hence p.x = s.x by A1,A7,GRFUNC_1:8;
    end;
    suppose
A11:  x in Int-Locations \/ FinSeq-Locations;
      set DPp = DataPart p;
      x in dom p /\ (Int-Locations \/ FinSeq-Locations) by A7,A11,
XBOOLE_0:def 4;
      then
A12:  x in dom DPp by RELAT_1:90,SCMFSA_2:127;
      DPp = DataPart Relocated(p, k) by AMISTD_2:68;
      then DPp c= Relocated(p, k) by RELAT_1:88;
      then
A13:  DPp c= s2 by A2,XBOOLE_1:1;
      then dom DPp c= dom s2 by GRFUNC_1:8;
      then x in dom s2 /\ (Int-Locations \/ FinSeq-Locations) by A11,A12,
XBOOLE_0:def 4;
      then
A14:  x in dom s3 by RELAT_1:90,SCMFSA_2:127;
      DPp c= p by RELAT_1:88;
      then
A15:  DPp.x = p.x by A12,GRFUNC_1:8;
A16:  s2.x = s3.x by A11,FUNCT_1:72,SCMFSA_2:127;
      DPp.x = s2.x by A12,A13,GRFUNC_1:8;
      hence p.x = s.x by A15,A16,A14,FUNCT_4:14,SCMFSA_2:127;
    end;
    suppose
A17:  x in NAT;
      now
        assume x in dom s3;
        then x in dom s2 /\ (Int-Locations \/ FinSeq-Locations) by RELAT_1:90
,SCMFSA_2:127;
        then x in Int-Locations \/ FinSeq-Locations by XBOOLE_0:def 4;
        hence contradiction by A17,Lm1,XBOOLE_0:3;
      end;
      then s1.x = s.x by FUNCT_4:12,SCMFSA_2:127;
      hence p.x = s.x by A1,A7,GRFUNC_1:8;
    end;
  end;
  dom p c= dom s by A3,PARTFUN1:def 4,SCMFSA_2:8;
  hence thesis by A4,GRFUNC_1:8,SCMFSA_2:127;
end;

begin :: Main theorems of relocatability

theorem
  for k being Element of NAT for p being autonomic FinPartState of
  SCM+FSA st IC SCM+FSA in dom p for s being State of SCM+FSA st p c= s for i
being Element of NAT holds Comput(ProgramPart(s+*Relocated(p,k)),s+*Relocated(p
,k),i) = Comput(ProgramPart(s),s,i)
  +* Start-At(IC Comput(ProgramPart(s),s,i) +k,SCM+FSA) +* ProgramPart (
Relocated(p,k))
proof
  let k be Element of NAT;
  let p be autonomic FinPartState of SCM+FSA such that
A1: IC SCM+FSA in dom p;
  let s be State of SCM+FSA such that
A5: p c= s;
  defpred X[Nat] means Comput(ProgramPart(s+*Relocated(p,k)),s+*Relocated(p,k),
$1) =
  Comput(ProgramPart(s),s,$1)+* Start-At (IC Comput(ProgramPart(s),s,$1)+ k,
SCM+FSA)
   +* ProgramPart (
  Relocated(p,k));
A6: for i being Element of NAT st X[i] holds X[i+1]
  proof
    let i be Element of NAT such that
A7: Comput(ProgramPart(s+*Relocated(p,k)),s+*Relocated(p,k),i) = Comput(
ProgramPart(s),s,i) +* Start-At (
    IC Comput(ProgramPart(s),s,i) + k,SCM+FSA) +* ProgramPart (Relocated(p,k));
    reconsider ii = IC Comput(ProgramPart(s),s,i) as Element of NAT;
    dom (Start-At(IC Comput(ProgramPart(s),s,i) +k,SCM+FSA)) = {IC SCM+FSA}
     by FUNCOP_1:19;
    then
A8: IC SCM+FSA in dom (Start-At(IC Comput(ProgramPart(s),s,i) +k,SCM+FSA))
 by TARSKI:def 1;
    not IC SCM+FSA in dom ProgramPart(Relocated(p,k)) by COMPOS_1:12;
    then
A9: IC ( Comput(ProgramPart(s),s,i) +* Start-At(IC Comput(ProgramPart(s),s,i) +
k,SCM+FSA) +*
ProgramPart (Relocated(p,k))) = ( Comput(ProgramPart(s),s,i) +* Start-At (IC
Comput(ProgramPart(s),s,i) + k,SCM+FSA)).IC SCM+FSA by FUNCT_4:12
      .= (Start-At(IC Comput(ProgramPart(s),s,i) +k,SCM+FSA)).IC SCM+FSA by A8,
FUNCT_4:14
      .= IC Comput(ProgramPart(s),s,i) + k by FUNCOP_1:87;
A10: ProgramPart(p) c= Comput(ProgramPart(s),s,i) by A5,AMI_1:99;
    p is not NAT-defined by A1,COMPOS_1:19;
    then
A11: IC Comput(ProgramPart(s),s,i) in dom ProgramPart p by A5,SCMFSA_3:17;
    then
A12: IC Comput(ProgramPart(s),s,i) in dom IncAddr(ProgramPart p,k) by
AMISTD_2:def 15;
A13: (ProgramPart p)/.ii = (ProgramPart p).IC Comput(ProgramPart(s),s,i) by A11
,PARTFUN1:def 8
      .= ( Comput(ProgramPart(s),s,i)).IC Comput(ProgramPart(s),s,i) by A11,A10
,GRFUNC_1:8;
Z:  (ProgramPart Comput(ProgramPart(s),s,i))/.IC Comput(ProgramPart(s),s,i)
 = Comput(ProgramPart(s),s,i).IC Comput(ProgramPart(s),s,i) by COMPOS_1:38;
Y:  (ProgramPart Comput(ProgramPart(s+*Relocated(p,k)),s+*Relocated(p,k),i))/.
IC Comput(ProgramPart(s+*Relocated(p,k)),s+*Relocated(p,k),i)
 = Comput(ProgramPart(s+*Relocated(p,k)),s+*Relocated(p,k),i).
 IC Comput(ProgramPart(s+*Relocated(p,k)),s+*Relocated(p,k),i) by COMPOS_1:38;
T: ProgramPart s = ProgramPart Comput(ProgramPart(s),s,i)
by AMI_1:123;
TR: ProgramPart(s+*Relocated(p,k)) =
ProgramPart Comput(ProgramPart(s+*Relocated(p,k)),s+*Relocated(p,k),i)
by AMI_1:123;
    ProgramPart p c= p by RELAT_1:88;
    then dom ProgramPart p c= dom p by GRFUNC_1:8;
    then (IC Comput(ProgramPart(s),s,i) + k) in dom (Relocated(p,k))
     by A11,AMISTD_2:71
;
    then (IC Comput(ProgramPart(s),s,i) + k) in dom (ProgramPart (Relocated(p,k
))) by COMPOS_1:16;
    then
A14: CurInstr(ProgramPart(s+*Relocated(p,k)),
           Comput(ProgramPart(s+*Relocated(p,k)),s+*Relocated(p,k),i)) = (
   ProgramPart Relocated(p,k)).(IC Comput(ProgramPart(s),s,i) + k)
by A7,A9,Y,TR,FUNCT_4:14
      .= Reloc(ProgramPart p,k).(IC Comput(ProgramPart(s),s,i) + k)
by AMISTD_2:69
      .= Shift(IncAddr(ProgramPart p,k),k).(IC Comput(ProgramPart(s),s,i) + k)
by AMISTD_2:75
      .= IncAddr(ProgramPart p,k).ii by A12,VALUED_1:def 12
      .= IncAddr (CurInstr(ProgramPart(s),Comput(ProgramPart(s),s,i)),k)
       by A11,A13,Z,T,SCMFSA_4:24;
A15: Comput(ProgramPart(s),s,i+1) = Following(ProgramPart s,
Comput(ProgramPart(s),s,i)) by AMI_1:14;
A16: Exec(IncAddr(CurInstr(ProgramPart(s),Comput(ProgramPart(s),s,i)),k),
Comput(ProgramPart(s),s,i) +*
Start-At(IC Comput(ProgramPart(s),s,i) +k,SCM+FSA)) =
Following(ProgramPart(s),Comput(ProgramPart(s),s,i))
 +* Start-At
    ((IC Following(ProgramPart(s),Comput(ProgramPart(s),s,i))) + k,SCM+FSA)
    by SCMFSA_4:28;
    thus Comput(ProgramPart(s+*Relocated(p,k)),s+*Relocated(p,k),i+1)
     = Following(ProgramPart (s+*Relocated(p,k)),
     Comput(ProgramPart(s+*Relocated(p,k)),s+*Relocated(p,k),i)) by AMI_1:14
      .= Comput(ProgramPart(s),s,i+1) +* Start-At(IC Comput(ProgramPart(s),s,i+
1) +k,SCM+FSA) +*
    ProgramPart Relocated(p,k) by A7,A15,A14,A16,SCMFSA_3:10;
  end;
A17: Comput(ProgramPart(s),s,0) = s by AMI_1:13;
A18: IC p = IC s by A1,A5,GRFUNC_1:8;
  DataPart p c= p by RELAT_1:88;
  then
A19: DataPart p c= s by A5,XBOOLE_1:1;
  Comput(ProgramPart(s+*Relocated(p,k)),s+*Relocated(p,k),0)
    = s +* (IncrIC(NPP p,k) +* Reloc(ProgramPart p,k)) by AMI_1:13
   .= s +* (IncrIC(NPP p,k) +* ProgramPart Relocated(p,k)) by AMISTD_2:69
   .= s +* (DataPart p +* Start-At ((IC p) +k,SCM+FSA) +*
         ProgramPart Relocated(p,k)) by A1,COMPOS_1:75
   .= s +* (DataPart p +* (Start-At ((IC p) +k,SCM+FSA) +*
         ProgramPart Relocated(p,k))) by FUNCT_4:15
   .= s +* DataPart p +* (Start-At ((IC p) +k,SCM+FSA) +*
         ProgramPart Relocated(p,k)) by FUNCT_4:15
   .= s +* DataPart p +* (Start-At ((IC p) +k,SCM+FSA) +*
      ProgramPart (Relocated (p,k)))
    .= s +* DataPart p +* Start-At ((IC p) +k,SCM+FSA) +*
       ProgramPart (Relocated (p,k)) by FUNCT_4:15
    .= Comput(ProgramPart(s),s,0) +* Start-At(IC Comput(ProgramPart(s),s,0) +k,
SCM+FSA)
     +* ProgramPart
  (Relocated(p,k)) by A18,A19,A17,FUNCT_4:79;
  then
A20: X[0];
  thus for i being Element of NAT holds X[i] from NAT_1:sch 1 (A20,A6 );
end;

theorem Th12:
  for k being Element of NAT, p being autonomic FinPartState of
  SCM+FSA, s1, s2 being State of SCM+FSA st IC SCM+FSA in dom p & p c= s1 &
Relocated(p,k) c= s2 for i being Element of NAT holds IC Comput(ProgramPart(s1)
,s1,i) + k
  = IC Comput(ProgramPart(s2),s2,i) &
  IncAddr(CurInstr(ProgramPart(s1),Comput(ProgramPart(s1),s1,i)), k)
   = CurInstr(ProgramPart(s2),Comput(ProgramPart(s2),s2,i)) &
  Comput(ProgramPart(s1),s1,i)|dom (DataPart p) = Comput(ProgramPart(s2),s2,i
)|dom
  (DataPart (Relocated(p,k))) &
  DataPart Comput(ProgramPart(s1 +* DataPart s2),
s1 +* DataPart s2,i) =
  DataPart Comput(ProgramPart(s2),s2,i)
proof
  let k be Element of NAT, p be autonomic FinPartState of SCM+FSA, s1,s2 be
  State of SCM+FSA such that
A1: IC SCM+FSA in dom p and
A2: p c= s1 and
A3: Relocated(p,k) c= s2;
  set s3 = s1 +* DataPart s2;
  defpred Y[Nat] means IC Comput(ProgramPart(s1),s1,$1) + k = IC Comput(
ProgramPart(s2),s2,$1) &
 IncAddr(CurInstr(ProgramPart(s1),Comput(ProgramPart(s1),s1,$1)), k)
 = CurInstr(ProgramPart(s2),Comput(ProgramPart(s2),s2,$1)) &
 Comput(ProgramPart(s1),s1,$1)|dom (DataPart p) = Comput(ProgramPart(s2),s2,$1)
|dom (DataPart (
  Relocated(p,k))) & DataPart Comput(ProgramPart(s3),s3,$1) = DataPart Comput(
ProgramPart(s2),s2,$1);
A4: p is non NAT-defined by A1,COMPOS_1:19;
A5: p c= s3 by A2,A3,Th10;
A6: for i being Element of NAT st Y[i] holds Y[i+1]
  proof
    set DPp = DataPart p;
    let i be Element of NAT such that
A7: IC Comput(ProgramPart(s1),s1,i) + k = IC Comput(ProgramPart(s2),s2,i) and
A8: IncAddr (CurInstr(ProgramPart(s1),Comput(ProgramPart(s1),s1,i)), k)
 = CurInstr(ProgramPart(s2),Comput(ProgramPart(s2),s2,i)) and
A9: Comput(ProgramPart(s1),s1,i)|dom (DataPart p) = Comput(ProgramPart(s2),s2,i
)|dom (
    DataPart (Relocated(p,k))) and
A10: DataPart Comput(ProgramPart(s3),s3,i) = DataPart Comput(ProgramPart(s2),s2
,i);
    set Cs1i1 = Comput(ProgramPart(s1),s1,i+1);
    set Cs1i = Comput(ProgramPart(s1),s1,i);
TY: ProgramPart s2 = ProgramPart Comput(ProgramPart(s2),s2,i+1)
by AMI_1:123;
A11: dom Cs1i1 = Int-Locations \/ FinSeq-Locations \/ {IC SCM+FSA} \/ NAT
    by PARTFUN1:def 4,SCMFSA_2:8;
    set Cs3i = Comput(ProgramPart(s3),s3,i);
    set Cs2i = Comput(ProgramPart(s2),s2,i);
A12: dom Cs1i = Int-Locations \/ FinSeq-Locations \/ {IC SCM+FSA} \/ NAT
    by PARTFUN1:def 4,SCMFSA_2:8;
    set Cs2i1 = Comput(ProgramPart(s2),s2,i+1);
A13: dom Cs2i1 = Int-Locations \/ FinSeq-Locations \/ {IC SCM+FSA} \/ NAT
    by PARTFUN1:def 4,SCMFSA_2:8;
A14: dom Cs2i = Int-Locations \/ FinSeq-Locations \/ {IC SCM+FSA} \/ NAT
    by PARTFUN1:def 4,SCMFSA_2:8;
    set I = CurInstr(ProgramPart s1, Cs1i);
A15: Cs2i1 = Following(ProgramPart s2,Cs2i) by AMI_1:14
      .= Exec (CurInstr(ProgramPart s2, Cs2i), Cs2i);
A16: now
      let s be State of SCM+FSA, d be FinSeq-Location;
      d in FinSeq-Locations by SCMFSA_2:10;
      then d in Int-Locations \/ FinSeq-Locations by XBOOLE_0:def 3;
      hence d in dom DataPart s by COMPOS_1:50,SCMFSA_2:127;
    end;
A17: now
      let d be FinSeq-Location;
A18:  d in dom (DataPart Cs3i) by A16;
      hence Cs3i.d = (DataPart Cs3i).d by FUNCT_1:70
        .= Cs2i.d by A10,A18,FUNCT_1:70;
    end;
    set Cs3i1 = Comput(ProgramPart(s3),s3,i+1);
A19: dom DataPart Cs2i = Int-Locations \/ FinSeq-Locations by COMPOS_1:50
,SCMFSA_2:127;
A20: dom DataPart Cs3i1 = Int-Locations \/ FinSeq-Locations by COMPOS_1:50
,SCMFSA_2:127;
A21: now
      reconsider loc = IC Cs1i1 as Element of NAT;
      assume
A22:  IC Comput(ProgramPart(s1),s1,i+1) + k = IC Comput(ProgramPart(s2),s2,i+1)
;
      reconsider ii = loc as Element of NAT;
A23:  ii in dom ProgramPart p by A2,A4,SCMFSA_3:17;
      ProgramPart p c= p by RELAT_1:88;
      then
A24:  dom ProgramPart p c= dom p by GRFUNC_1:8;
      then loc + k in dom Relocated(p, k) by A23,AMISTD_2:71;
      then
A25:  Relocated(p, k).(loc + k) = s2.(loc+k) by A3,GRFUNC_1:8
        .= Cs2i1.(loc + k) by AMI_1:54;
Z:  (ProgramPart(s2))/.IC Comput(ProgramPart(s2),s2,
i+1)
 = Comput(ProgramPart(s2),s2,i+1).IC Comput(ProgramPart(s2),s2,i+1) by TY,
COMPOS_1:38;
      CurInstr(ProgramPart s1, Cs1i1) = s1.loc by COMPOS_1:38
        .= p.ii by A2,A23,A24,GRFUNC_1:8;
      hence
      IncAddr(CurInstr(ProgramPart(s1),Comput(ProgramPart(s1),s1,i+1)), k)
       = CurInstr(ProgramPart(s2),Comput(ProgramPart(s2),s2,i+1))
        by A22,A23,A25,Z,AMISTD_2:76;
    end;
A26: now
      let s be State of SCM+FSA, d be Int-Location;
      d in Int-Locations by SCMFSA_2:9;
      then d in Int-Locations \/ FinSeq-Locations by XBOOLE_0:def 3;
      hence d in dom DataPart s by COMPOS_1:50,SCMFSA_2:127;
    end;
A27: now
      let d be Int-Location;
A28:  d in dom DataPart Cs3i by A26;
      hence Cs3i.d = (DataPart Cs3i).d by FUNCT_1:70
        .= Cs2i.d by A10,A28,FUNCT_1:70;
    end;
    dom DPp = dom p /\(Int-Locations \/ FinSeq-Locations) by RELAT_1:90
,SCMFSA_2:127;
    then
A29: dom DPp c= {IC SCM+FSA} \/ (Int-Locations \/ FinSeq-Locations) by
XBOOLE_1:10,17;
A30: InsCode I <= 9+1 implies InsCode I <= 8+1 or InsCode I = 10 by NAT_1:8;
A31: InsCode I <= 10+1 implies InsCode I <= 10 or InsCode I = 11 by NAT_1:8;
A32: InsCode I <= 11+1 by SCMFSA_2:35;
A33: dom (Cs1i1|dom DPp) = dom Cs1i1 /\ dom DPp by RELAT_1:90
      .= dom DPp by A11,A29,XBOOLE_1:10,28;
A34: dom DataPart Cs2i1 = Int-Locations \/ FinSeq-Locations by COMPOS_1:50
,SCMFSA_2:127;
A35: now
      let x be set;
      assume that
A36:  x in dom (Cs3i1|(Int-Locations \/ FinSeq-Locations)) and
A37:  Cs3i1.x = Cs2i1.x;
      thus (DataPart Cs3i1).x = Cs2i1.x by A36,A37,FUNCT_1:70,SCMFSA_2:127
        .= (DataPart Cs2i1).x by A20,A34,A36,FUNCT_1:70,SCMFSA_2:127;
    end;
A38: dom DataPart Cs3i = Int-Locations \/ FinSeq-Locations by COMPOS_1:50
,SCMFSA_2:127;
A39: now
      let x be set;
      assume that
A40:  x in dom (DataPart Cs3i1) and
A41:  Cs3i1.x = Cs3i.x and
A42:  Cs2i1.x = Cs2i.x;
      (DataPart Cs3i).x = Cs3i.x by A38,A20,A40,FUNCT_1:70;
      hence
      (DataPart Cs3i1).x = (DataPart Cs2i1).x by A10,A19,A20,A35,A40,A41,A42,
FUNCT_1:70,SCMFSA_2:127;
    end;
A43: Cs3i1 = Following(ProgramPart s3,Cs3i) by AMI_1:14
      .= Exec (CurInstr(ProgramPart s1, Cs1i), Cs3i)
      by A2,A4,A5,SCMFSA_3:18;
A44: dom DataPart p = dom DataPart(Relocated(p, k)) by AMISTD_2:68;
    then
A45: dom (Cs2i1|dom DataPart(Relocated(p, k))) = dom Cs2i1 /\ dom DPp by
RELAT_1:90
      .= dom DPp by A13,A29,XBOOLE_1:10,28;
A46: now
      let x,d be set such that
A47:  d = x and
A48:  d in dom DPp and
A49:  Cs1i1.d = Cs2i1.d;
      thus (Cs1i1|dom DPp).x = Cs2i1.d by A33,A47,A48,A49,FUNCT_1:70
        .= (Cs2i1|dom DPp).x by A44,A45,A47,A48,FUNCT_1:70;
    end;
A50: dom (Cs1i|dom DPp) = dom Cs1i /\ dom DPp by RELAT_1:90
      .= dom DPp by A12,A29,XBOOLE_1:10,28;
    reconsider j = IC Cs1i as Element of NAT;
A51: Cs1i1 = Following(ProgramPart s1,Cs1i) by AMI_1:14
      .= Exec (CurInstr(ProgramPart s1, Cs1i), Cs1i);
A52: dom (Cs2i|dom DataPart(Relocated(p, k))) = dom Cs2i /\ dom DPp by A44,
RELAT_1:90
      .= dom DPp by A14,A29,XBOOLE_1:10,28;
A53: now
      let x,d be set such that
A54:  d = x and
A55:  d in dom DPp and
A56:  Cs1i1.d = Cs1i.d and
A57:  Cs2i1.d = Cs2i.d;
A58:  (Cs1i|dom DPp).d = Cs1i.d by A50,A55,FUNCT_1:70;
      (Cs2i|dom DPp).d = Cs2i.d by A44,A52,A55,FUNCT_1:70;
      hence (Cs1i1|dom DPp).x = Cs2i1.d by A9,A44,A33,A54,A55,A56,A57,A58,
FUNCT_1:70
        .= (Cs2i1|dom DPp).x by A44,A45,A54,A55,FUNCT_1:70;
    end;
A59: succ (IC Cs1i + k) = (j+k+1) by NAT_1:39
      .= (j+1) + k
      .= ((succ IC Cs1i) qua Element of NAT) + k by NAT_1:39;
    per cases by A32,A31,A30,NAT_1:8,33;
    suppose
      InsCode I = 0;
      then
A60:  I = halt SCM+FSA by SCMFSA_2:122;
      thus IC Comput(ProgramPart(s1),s1,i+1) + k = IC Cs1i + k by A51,A60,
AMI_1:def 8
        .= IC Comput(ProgramPart(s2),s2,i+1)
         by A7,A15,A60,A8,AMI_1:def 8;
      hence
      IncAddr(CurInstr(ProgramPart s1,Comput(
ProgramPart(s1),s1,i+1)), k)
       = CurInstr(ProgramPart s2,Comput(ProgramPart
(s2),s2,i+1)) by A21;
A62:  Cs2i1 = Cs2i by A15,A60,A8,AMI_1:def 8;
      hence Comput(ProgramPart(s1),s1,i+1)|dom (DataPart p) = Comput(
ProgramPart(s2),s2,i+1)|dom (
      DataPart (Relocated(p,k))) by A9,A51,A60,AMI_1:def 8;
      thus thesis by A10,A43,A60,A62,AMI_1:def 8;
    end;
    suppose
      InsCode I = 1;
      then consider da, db being Int-Location such that
A63:  I = da := db by SCMFSA_2:54;
A64:  IncAddr(I, k) = da := db by A63,SCMFSA_4:9;
A65:  Exec(I, Cs1i).IC SCM+FSA = succ IC Cs1i by A63,SCMFSA_2:89;
      hence
      IC Comput(ProgramPart(s1),s1,i+1) + k = IC Comput(ProgramPart(s2),s2,i+1)
by A7,A8,A51,A15,A59,A64,SCMFSA_2:89;
      thus IncAddr(CurInstr(ProgramPart s1,
      Comput(ProgramPart(s1),s1,i+1)), k)
       = CurInstr(ProgramPart s2,Comput(ProgramPart
(s2),s2,i+1))
       by A7,A8,A21,A51,A15,A59,A64,A65,SCMFSA_2:89;
A66:  Cs3i.db = Cs2i.db by A27;
      now
        let x be set;
A67:    dom DPp c= Int-Locations \/ FinSeq-Locations by RELAT_1:87,SCMFSA_2:127
;
        assume
A68:    x in dom (Cs1i1|dom DPp);
        per cases by A33,A68,A67,XBOOLE_0:def 3;
        suppose
          x in FinSeq-Locations;
          then reconsider d = x as FinSeq-Location by SCMFSA_2:12;
A69:      Cs1i1.d = Cs1i.d by A51,A63,SCMFSA_2:89;
          Cs2i1.d = Cs2i.d by A8,A15,A64,SCMFSA_2:89;
          hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A33,A53,A68,A69;
        end;
        suppose
A70:      da = x;
          DPp c= p by RELAT_1:88;
          then dom DPp c= dom p by GRFUNC_1:8;
          then
A71:      Cs3i.db = Cs1i.db by A2,A4,A5,A33,A63,A68,A70,SCMFSA_3:19;
A72:      Cs1i1.x = Cs1i.db by A51,A63,A70,SCMFSA_2:89;
          Cs2i1.x = Cs2i.db by A8,A15,A64,A70,SCMFSA_2:89;
          hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A33,A46,A66,A68,A72
,A71;
        end;
        suppose
A73:      da <> x & x in Int-Locations;
          then reconsider d = x as Int-Location by SCMFSA_2:11;
A74:      Cs1i1.d = Cs1i.d by A51,A63,A73,SCMFSA_2:89;
          Cs2i1.d = Cs2i.d by A8,A15,A64,A73,SCMFSA_2:89;
          hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A33,A53,A68,A74;
        end;
      end;
      then (Cs1i1|dom DPp) c= (Cs2i1|dom DPp) by A44,A33,A45,GRFUNC_1:8;
      hence Comput(ProgramPart(s1),s1,i+1)|dom (DataPart p) = Comput(
ProgramPart(s2),s2,i+1)|dom (
      DataPart (Relocated(p,k))) by A44,A33,A45,GRFUNC_1:9;
      now
        let x be set;
        assume
A75:    x in dom (DataPart Cs3i1);
        per cases by A20,A75,XBOOLE_0:def 3;
        suppose
          x in FinSeq-Locations;
          then reconsider f = x as FinSeq-Location by SCMFSA_2:12;
A76:      Cs3i1.f = Cs3i.f by A43,A63,SCMFSA_2:89;
          Cs2i1.f = Cs2i.f by A8,A15,A64,SCMFSA_2:89;
          hence (DataPart Cs3i1).x = (DataPart Cs2i1).x by A39,A75,A76;
        end;
        suppose
A77:      da = x;
A78:      Cs3i1.da=Cs3i.db by A43,A63,SCMFSA_2:89;
          Cs2i1.da = Cs2i.db by A8,A15,A64,SCMFSA_2:89;
          hence (DataPart Cs3i1).x = (DataPart Cs2i1).x by A27,A35,A75,A77,A78,
SCMFSA_2:127;
        end;
        suppose
A79:      da <> x & x in Int-Locations;
          then reconsider d = x as Int-Location by SCMFSA_2:11;
A80:      Cs3i1.d = Cs3i.d by A43,A63,A79,SCMFSA_2:89;
          Cs2i1.d = Cs2i.d by A8,A15,A64,A79,SCMFSA_2:89;
          hence (DataPart Cs3i1).x = (DataPart Cs2i1).x by A39,A75,A80;
        end;
      end;
      then DataPart Cs3i1 c= DataPart Comput(ProgramPart(s2),s2,i+1) by A20,A34
,GRFUNC_1:8
;
      hence thesis by A20,A34,GRFUNC_1:9;
    end;
    suppose
      InsCode I = 2;
      then consider da, db being Int-Location such that
A81:  I = AddTo(da, db) by SCMFSA_2:55;
A82:  Cs3i.db = Cs2i.db by A27;
A83:  IncAddr(I, k) = AddTo(da, db) by A81,SCMFSA_4:10;
A84:  Exec(I, Cs1i).IC SCM+FSA = succ IC Cs1i by A81,SCMFSA_2:90;
      hence
      IC Comput(ProgramPart(s1),s1,i+1) + k = IC Comput(ProgramPart(s2),s2,i+1)
by A7,A8,A51,A15,A59,A83,SCMFSA_2:90;
      thus IncAddr(CurInstr(ProgramPart s1,
      Comput(ProgramPart(s1),s1,i+1)), k)
       = CurInstr(ProgramPart s2,Comput(ProgramPart
(s2),s2,i+1))
       by A7,A8,A21,A51,A15,A59,A83,A84,SCMFSA_2:90;
A85:  Cs3i.da = Cs2i.da by A27;
      now
A86:    dom DPp c= Int-Locations \/ FinSeq-Locations by RELAT_1:87,SCMFSA_2:127
;
        let x be set such that
A87:    x in dom (Cs1i1|dom DPp);
        per cases by A33,A87,A86,XBOOLE_0:def 3;
        suppose
          x in FinSeq-Locations;
          then reconsider d = x as FinSeq-Location by SCMFSA_2:12;
A88:      Cs1i1.d=Cs1i.d by A51,A81,SCMFSA_2:90;
          Cs2i1.d = Cs2i.d by A8,A15,A83,SCMFSA_2:90;
          hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A33,A53,A87,A88;
        end;
        suppose
A89:      da = x;
          DPp c= p by RELAT_1:88;
          then
A90:      dom DPp c= dom p by GRFUNC_1:8;
A91:      Cs1i1.x = Cs1i.da + Cs1i.db by A51,A81,A89,SCMFSA_2:90;
          Cs2i1.x = Cs2i.da + Cs2i.db by A8,A15,A83,A89,SCMFSA_2:90;
          then Cs1i1.x = Cs2i1.x by A2,A4,A5,A33,A81,A85,A82,A87,A89,A91,A90,
SCMFSA_3:20;
          hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A33,A46,A87;
        end;
        suppose
A92:      da <> x & x in Int-Locations;
          then reconsider d = x as Int-Location by SCMFSA_2:11;
A93:      Cs1i1.d=Cs1i.d by A51,A81,A92,SCMFSA_2:90;
          Cs2i1.d = Cs2i.d by A8,A15,A83,A92,SCMFSA_2:90;
          hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A33,A53,A87,A93;
        end;
      end;
      then (Cs1i1|dom DPp) c= (Cs2i1|dom DPp) by A44,A33,A45,GRFUNC_1:8;
      hence Comput(ProgramPart(s1),s1,i+1)|dom (DataPart p) = Comput(
ProgramPart(s2),s2,i+1)|dom (
      DataPart (Relocated(p,k))) by A44,A33,A45,GRFUNC_1:9;
      now
        let x be set;
        assume
A94:    x in dom (DataPart Cs3i1);
        per cases by A20,A94,XBOOLE_0:def 3;
        suppose
          x in FinSeq-Locations;
          then reconsider d = x as FinSeq-Location by SCMFSA_2:12;
A95:      Cs3i1.d = Cs3i.d by A43,A81,SCMFSA_2:90;
          Cs2i1.d = Cs2i.d by A8,A15,A83,SCMFSA_2:90;
          hence (DataPart Cs3i1).x = (DataPart Cs2i1).x by A39,A94,A95;
        end;
        suppose
A96:      da = x;
          then
A97:      Cs3i1.x = Cs3i.da + Cs3i.db by A43,A81,SCMFSA_2:90;
          Cs2i1.x = Cs2i.da + Cs2i.db by A8,A15,A83,A96,SCMFSA_2:90;
          hence (DataPart Cs3i1).x = (DataPart Cs2i1).x by A35,A85,A82,A94,A97,
SCMFSA_2:127;
        end;
        suppose
A98:      da <> x & x in Int-Locations;
          then reconsider d = x as Int-Location by SCMFSA_2:11;
A99:      Cs3i1.d = Cs3i.d by A43,A81,A98,SCMFSA_2:90;
          Cs2i1.d = Cs2i.d by A8,A15,A83,A98,SCMFSA_2:90;
          hence (DataPart Cs3i1).x = (DataPart Cs2i1).x by A39,A94,A99;
        end;
      end;
      then DataPart Cs3i1 c= DataPart Comput(ProgramPart(s2),s2,i+1) by A20,A34
,GRFUNC_1:8
;
      hence thesis by A20,A34,GRFUNC_1:9;
    end;
    suppose
      InsCode I = 3;
      then consider da, db being Int-Location such that
A100: I = SubFrom(da, db) by SCMFSA_2:56;
A101: Cs3i.db = Cs2i.db by A27;
A102: IncAddr(I, k) = SubFrom(da, db) by A100,SCMFSA_4:11;
A103: Exec(I, Cs1i).IC SCM+FSA = succ IC Cs1i by A100,SCMFSA_2:91;
      hence
      IC Comput(ProgramPart(s1),s1,i+1) + k = IC Comput(ProgramPart(s2),s2,i+1)
by A7,A8,A51,A15,A59,A102,SCMFSA_2:91;
      thus IncAddr(CurInstr(ProgramPart s1,
      Comput(ProgramPart(s1),s1,i+1)), k)
       = CurInstr(ProgramPart s2,Comput(ProgramPart
(s2),s2,i+1))
       by A7,A8,A21,A51,A15,A59,A102,A103,SCMFSA_2:91;
A104: Cs3i.da = Cs2i.da by A27;
      now
A105:   dom DPp c= Int-Locations \/ FinSeq-Locations by RELAT_1:87,SCMFSA_2:127
;
        let x be set such that
A106:   x in dom (Cs1i1|dom DPp);
        per cases by A33,A106,A105,XBOOLE_0:def 3;
        suppose
          x in FinSeq-Locations;
          then reconsider d = x as FinSeq-Location by SCMFSA_2:12;
A107:     Cs1i1.d = Cs1i.d by A51,A100,SCMFSA_2:91;
          Cs2i1.d = Cs2i.d by A8,A15,A102,SCMFSA_2:91;
          hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A33,A53,A106,A107;
        end;
        suppose
A108:     da = x;
          DPp c= p by RELAT_1:88;
          then
A109:     dom DPp c= dom p by GRFUNC_1:8;
A110:     Cs1i1.x = Cs1i.da - Cs1i.db by A51,A100,A108,SCMFSA_2:91;
          Cs2i1.x = Cs2i.da - Cs2i.db by A8,A15,A102,A108,SCMFSA_2:91;
          then Cs1i.da - Cs1i.db = Cs2i1.x by A2,A4,A5,A33,A100,A104,A101,A106
,A108,A109,SCMFSA_3:21;
          hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A33,A46,A106,A110;
        end;
        suppose
A111:     da <> x & x in Int-Locations;
          then reconsider d = x as Int-Location by SCMFSA_2:11;
A112:     Cs1i1.d = Cs1i.d by A51,A100,A111,SCMFSA_2:91;
          Cs2i1.d = Cs2i.d by A8,A15,A102,A111,SCMFSA_2:91;
          hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A33,A53,A106,A112;
        end;
      end;
      then (Cs1i1|dom DPp) c= (Cs2i1|dom DPp) by A44,A33,A45,GRFUNC_1:8;
      hence Comput(ProgramPart(s1),s1,i+1)|dom (DataPart p) = Comput(
ProgramPart(s2),s2,i+1)|dom (
      DataPart (Relocated(p,k))) by A44,A33,A45,GRFUNC_1:9;
      now
        let x be set;
        assume
A113:   x in dom (DataPart Cs3i1);
        per cases by A20,A113,XBOOLE_0:def 3;
        suppose
          x in FinSeq-Locations;
          then reconsider d = x as FinSeq-Location by SCMFSA_2:12;
A114:     Cs3i1.d = Cs3i.d by A43,A100,SCMFSA_2:91;
          Cs2i1.d = Cs2i.d by A8,A15,A102,SCMFSA_2:91;
          hence (DataPart Cs3i1).x = (DataPart Cs2i1).x by A39,A113,A114;
        end;
        suppose
A115:     da = x;
          then
A116:     Cs3i1.x = Cs3i.da - Cs3i.db by A43,A100,SCMFSA_2:91;
          Cs2i1.x = Cs2i.da - Cs2i.db by A8,A15,A102,A115,SCMFSA_2:91;
          hence (DataPart Cs3i1).x = (DataPart Cs2i1).x by A35,A104,A101,A113
,A116,SCMFSA_2:127;
        end;
        suppose
A117:     da <> x & x in Int-Locations;
          then reconsider d = x as Int-Location by SCMFSA_2:11;
A118:     Cs3i1.d = Cs3i.d by A43,A100,A117,SCMFSA_2:91;
          Cs2i1.d = Cs2i.d by A8,A15,A102,A117,SCMFSA_2:91;
          hence (DataPart Cs3i1).x = (DataPart Cs2i1).x by A39,A113,A118;
        end;
      end;
      then DataPart Cs3i1 c= DataPart Comput(ProgramPart(s2),s2,i+1) by A20,A34
,GRFUNC_1:8
;
      hence thesis by A20,A34,GRFUNC_1:9;
    end;
    suppose
      InsCode I = 4;
      then consider da, db being Int-Location such that
A119: I = MultBy(da, db) by SCMFSA_2:57;
A120: Cs3i.db = Cs2i.db by A27;
A121: IncAddr(I, k) = MultBy(da, db) by A119,SCMFSA_4:12;
A122: Exec(I, Cs1i).IC SCM+FSA = succ IC Cs1i by A119,SCMFSA_2:92;
      hence
      IC Comput(ProgramPart(s1),s1,i+1) + k = IC Comput(ProgramPart(s2),s2,i+1)
by A7,A8,A51,A15,A59,A121,SCMFSA_2:92;
      thus IncAddr(CurInstr(ProgramPart s1,
      Comput(ProgramPart(s1),s1,i+1)), k)
       = CurInstr(ProgramPart s2,Comput(ProgramPart
(s2),s2,i+1))
       by A7,A8,A21,A51,A15,A59,A121,A122,SCMFSA_2:92;
A123: Cs3i.da = Cs2i.da by A27;
      now
A124:   dom DPp c= Int-Locations \/ FinSeq-Locations by RELAT_1:87,SCMFSA_2:127
;
        let x be set such that
A125:   x in dom (Cs1i1|dom DPp);
        per cases by A33,A125,A124,XBOOLE_0:def 3;
        suppose
          x in FinSeq-Locations;
          then reconsider d = x as FinSeq-Location by SCMFSA_2:12;
A126:     Cs1i1.d = Cs1i.d by A51,A119,SCMFSA_2:92;
          Cs2i1.d = Cs2i.d by A8,A15,A121,SCMFSA_2:92;
          hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A33,A53,A125,A126;
        end;
        suppose
A127:     da = x;
          DPp c= p by RELAT_1:88;
          then
A128:     dom DPp c= dom p by GRFUNC_1:8;
A129:     Cs1i1.x = Cs1i.da * Cs1i.db by A51,A119,A127,SCMFSA_2:92;
          Cs2i1.x = Cs2i.da * Cs2i.db by A8,A15,A121,A127,SCMFSA_2:92;
          then Cs1i1.x = Cs2i1.x by A2,A4,A5,A33,A119,A123,A120,A125,A127,A129
,A128,SCMFSA_3:22;
          hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A33,A46,A125;
        end;
        suppose
A130:     da <> x & x in Int-Locations;
          then reconsider d = x as Int-Location by SCMFSA_2:11;
A131:     Cs1i1.d = Cs1i.d by A51,A119,A130,SCMFSA_2:92;
          Cs2i1.d = Cs2i.d by A8,A15,A121,A130,SCMFSA_2:92;
          hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A33,A53,A125,A131;
        end;
      end;
      then (Cs1i1|dom DPp) c= (Cs2i1|dom DPp) by A44,A33,A45,GRFUNC_1:8;
      hence Comput(ProgramPart(s1),s1,i+1)|dom (DataPart p) = Comput(
ProgramPart(s2),s2,i+1)|dom (
      DataPart (Relocated(p,k))) by A44,A33,A45,GRFUNC_1:9;
      now
        let x be set;
        assume
A132:   x in dom (DataPart Cs3i1);
        per cases by A20,A132,XBOOLE_0:def 3;
        suppose
          x in FinSeq-Locations;
          then reconsider d = x as FinSeq-Location by SCMFSA_2:12;
A133:     Cs3i1.d = Cs3i.d by A43,A119,SCMFSA_2:92;
          Cs2i1.d = Cs2i.d by A8,A15,A121,SCMFSA_2:92;
          hence (DataPart Cs3i1).x = (DataPart Cs2i1).x by A39,A132,A133;
        end;
        suppose
A134:     da = x;
          then
A135:     Cs3i1.x = Cs3i.da * Cs3i.db by A43,A119,SCMFSA_2:92;
          Cs2i1.x = Cs2i.da * Cs2i.db by A8,A15,A121,A134,SCMFSA_2:92;
          hence (DataPart Cs3i1).x = (DataPart Cs2i1).x by A35,A123,A120,A132
,A135,SCMFSA_2:127;
        end;
        suppose
A136:     da <> x & x in Int-Locations;
          then reconsider d = x as Int-Location by SCMFSA_2:11;
A137:     Cs3i1.d = Cs3i.d by A43,A119,A136,SCMFSA_2:92;
          Cs2i1.d = Cs2i.d by A8,A15,A121,A136,SCMFSA_2:92;
          hence (DataPart Cs3i1).x = (DataPart Cs2i1).x by A39,A132,A137;
        end;
      end;
      then DataPart Cs3i1 c= DataPart Comput(ProgramPart(s2),s2,i+1) by A20,A34
,GRFUNC_1:8
;
      hence thesis by A20,A34,GRFUNC_1:9;
    end;
    suppose
      InsCode I = 5;
      then consider da, db being Int-Location such that
A138: I = Divide(da, db) by SCMFSA_2:58;
A139: Cs3i.db = Cs2i.db by A27;
A140: IncAddr(I, k) = Divide(da, db) by A138,SCMFSA_4:13;
A141: Cs3i.da = Cs2i.da by A27;
      now
        per cases;
        suppose
A142:     da <> db;
A143:     Exec(I, Cs1i).IC SCM+FSA = succ IC Cs1i by A138,SCMFSA_2:93;
          hence
          IC Comput(ProgramPart(s1),s1,i+1) + k = IC Comput(ProgramPart(s2),s2,
i+1) by A7,A8,A51,A15,A59,A140,SCMFSA_2:93;
          thus IncAddr(CurInstr(ProgramPart s1,
          Comput(ProgramPart(s1),s1,i+1)), k)
           = CurInstr(ProgramPart s2,Comput(
ProgramPart(s2),s2,i+1))
           by A7,A8,A21,A51,A15,A59,A140,A143,SCMFSA_2:93;
          now
A144:       dom DPp c= Int-Locations \/ FinSeq-Locations by RELAT_1:87
,SCMFSA_2:127;
            let x be set such that
A145:       x in dom (Cs1i1|dom DPp);
            per cases by A33,A145,A144,XBOOLE_0:def 3;
            suppose
              db <> x & x in FinSeq-Locations;
              then reconsider d = x as FinSeq-Location by SCMFSA_2:12;
A146:         Cs1i1.d = Cs1i.d by A51,A138,SCMFSA_2:93;
              Cs2i1.d = Cs2i.d by A8,A15,A140,SCMFSA_2:93;
              hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A33,A53,A145,A146;
            end;
            suppose
A147:         da = x;
              DPp c= p by RELAT_1:88;
              then dom DPp c= dom p by GRFUNC_1:8;
              then
A148:         Cs3i.da div Cs3i.db = Cs1i.da div Cs1i.db by A2,A4,A5,A33,A138
,A142,A145,A147,SCMFSA_3:23;
A149:         Cs1i1.x = Cs1i.da div Cs1i.db by A51,A138,A142,A147,SCMFSA_2:93;
              Cs2i1 .x = Cs2i.da div Cs2i.db by A8,A15,A140,A142,A147,
SCMFSA_2:93;
              hence (Cs1i1|dom DPp).x = Cs2i1.x by A141,A139,A145,A149,A148,
FUNCT_1:70
                .= (Cs2i1|dom DPp).x by A44,A33,A45,A145,FUNCT_1:70;
            end;
            suppose
A150:         db = x;
              DPp c= p by RELAT_1:88;
              then
A151:         dom DPp c= dom p by GRFUNC_1:8;
A152:         Cs1i1.x = Cs1i.da mod Cs1i.db by A51,A138,A150,SCMFSA_2:93;
              Cs2i1.x = Cs2i.da mod Cs2i.db by A8,A15,A140,A150,SCMFSA_2:93;
              then Cs1i1.x = Cs2i1.x by A2,A4,A5,A33,A138,A141,A139,A145,A150
,A152,A151,SCMFSA_3:24;
              hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A33,A46,A145;
            end;
            suppose
A153:         da <> x & db <> x & x in Int-Locations;
              then reconsider d = x as Int-Location by SCMFSA_2:11;
A154:         Cs1i1.d = Cs1i.d by A51,A138,A153,SCMFSA_2:93;
              Cs2i1.d = Cs2i.d by A8,A15,A140,A153,SCMFSA_2:93;
              hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A33,A53,A145,A154;
            end;
          end;
          then (Cs1i1|dom DPp) c= (Cs2i1|dom DPp) by A44,A33,A45,GRFUNC_1:8;
          hence Comput(ProgramPart(s1),s1,i+1)|dom (DataPart p) = Comput(
ProgramPart(s2),s2,i+1)|dom
          (DataPart (Relocated(p,k))) by A44,A33,A45,GRFUNC_1:9;
          now
            let x be set;
            assume
A155:       x in dom (DataPart Cs3i1);
            per cases by A20,A155,XBOOLE_0:def 3;
            suppose
              x in FinSeq-Locations;
              then reconsider d = x as FinSeq-Location by SCMFSA_2:12;
A156:         Cs3i1.d = Cs3i.d by A43,A138,SCMFSA_2:93;
              Cs2i1.d = Cs2i.d by A8,A15,A140,SCMFSA_2:93;
              hence (DataPart Cs3i1).x = (DataPart Cs2i1).x by A39,A155,A156;
            end;
            suppose
A157:         da = x;
              then
A158:         Cs3i1.x = Cs3i.da div Cs3i.db by A43,A138,A142,SCMFSA_2:93;
              Cs2i1.x = Cs2i.da div Cs2i.db by A8,A15,A140,A142,A157,
SCMFSA_2:93;
              hence (DataPart Cs3i1).x = (DataPart Cs2i1).x by A35,A141,A139
,A155,A158,SCMFSA_2:127;
            end;
            suppose
A159:         db = x;
              then
A160:         Cs3i1.x = Cs3i.da mod Cs3i.db by A43,A138,SCMFSA_2:93;
              Cs2i1.x = Cs2i.da mod Cs2i.db by A8,A15,A140,A159,SCMFSA_2:93;
              hence (DataPart Cs3i1).x = (DataPart Cs2i1).x by A35,A141,A139
,A155,A160,SCMFSA_2:127;
            end;
            suppose
A161:         da <> x & db <> x & x in Int-Locations;
              then reconsider d = x as Int-Location by SCMFSA_2:11;
A162:         Cs3i1.d = Cs3i.d by A43,A138,A161,SCMFSA_2:93;
              Cs2i1.d = Cs2i.d by A8,A15,A140,A161,SCMFSA_2:93;
              hence (DataPart Cs3i1).x = (DataPart Cs2i1).x by A39,A155,A162;
            end;
          end;
          then
          DataPart Cs3i1 c= DataPart Comput(ProgramPart(s2),s2,i+1) by A20,A34,
GRFUNC_1:8;
          hence DataPart Cs3i1 = DataPart Comput(ProgramPart(s2),s2,i+1) by A20
,A34,GRFUNC_1:9;
        end;
        suppose
A163:     da = db;
          then
A164:     Exec(I, Cs1i).IC SCM+FSA = succ IC Cs1i by A138,SCMFSA_2:94;
          hence
          IC Comput(ProgramPart(s1),s1,i+1) + k = IC Comput(ProgramPart(s2),s2,
i+1) by A7,A8,A51,A15,A59,A140,A163,SCMFSA_2:94;
          thus IncAddr(CurInstr(ProgramPart s1,
          Comput(ProgramPart(s1),s1,i+1)), k)
           = CurInstr(ProgramPart s2,Comput(
ProgramPart(s2),s2,i+1))
           by A7,A8,A21,A51,A15,A59,A140,A163,A164,SCMFSA_2:94;
          now
A165:       dom DPp c= Int-Locations \/ FinSeq-Locations by RELAT_1:87
,SCMFSA_2:127;
            let x be set such that
A166:       x in dom (Cs1i1|dom DPp);
            per cases by A33,A166,A165,XBOOLE_0:def 3;
            suppose
              x in FinSeq-Locations;
              then reconsider d = x as FinSeq-Location by SCMFSA_2:12;
A167:         Cs1i1.d = Cs1i.d by A51,A138,A163,SCMFSA_2:94;
              Cs2i1.d = Cs2i.d by A8,A15,A140,A163,SCMFSA_2:94;
              hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A33,A53,A166,A167;
            end;
            suppose
A168:         da = x;
A169:         (Cs2i1|dom DPp).x = Cs2i1.x by A44,A33,A45,A166,FUNCT_1:70;
A170:         (Cs1i|dom DPp).x = Cs1i.x by A33,A50,A166,FUNCT_1:70;
A171:         (Cs2i|dom DPp).x = Cs2i.x by A44,A33,A52,A166,FUNCT_1:70;
A172:         (Cs1i1|dom DPp).x = Cs1i1.x by A166,FUNCT_1:70;
              Cs2i1.x = Cs2i.da mod Cs2i.db by A8,A15,A140,A163,A168,
SCMFSA_2:94;
              hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A9,A44,A51,A138
,A163,A168,A170,A171,A172,A169,SCMFSA_2:94;
            end;
            suppose
A173:         da <> x & x in Int-Locations;
              then reconsider d = x as Int-Location by SCMFSA_2:11;
A174:         Cs1i1.d = Cs1i.d by A51,A138,A163,A173,SCMFSA_2:94;
              Cs2i1.d = Cs2i.d by A8,A15,A140,A163,A173,SCMFSA_2:94;
              hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A33,A53,A166,A174;
            end;
          end;
          then (Cs1i1|dom DPp) c= (Cs2i1|dom DPp) by A44,A33,A45,GRFUNC_1:8;
          hence Comput(ProgramPart(s1),s1,i+1)|dom (DataPart p) = Comput(
ProgramPart(s2),s2,i+1)|dom
          (DataPart (Relocated(p,k))) by A44,A33,A45,GRFUNC_1:9;
          now
            let x be set;
            assume
A175:       x in dom (DataPart Cs3i1);
            per cases by A20,A175,XBOOLE_0:def 3;
            suppose
              x in FinSeq-Locations;
              then reconsider d = x as FinSeq-Location by SCMFSA_2:12;
A176:         Cs3i1.d = Cs3i.d by A43,A138,A163,SCMFSA_2:94;
              Cs2i1.d = Cs2i.d by A8,A15,A140,A163,SCMFSA_2:94;
              hence (DataPart Cs3i1).x = (DataPart Cs2i1).x by A39,A175,A176;
            end;
            suppose
A177:         da = x;
              then
A178:         Cs3i1.x = Cs3i.da mod Cs3i.db by A43,A138,A163,SCMFSA_2:94;
              Cs2i1.x = Cs2i.da mod Cs2i.db by A8,A15,A140,A163,A177,
SCMFSA_2:94;
              hence (DataPart Cs3i1).x = (DataPart Cs2i1).x by A35,A141,A139
,A175,A178,SCMFSA_2:127;
            end;
            suppose
A179:         da <> x & x in Int-Locations;
              then reconsider d = x as Int-Location by SCMFSA_2:11;
A180:         Cs3i1.d = Cs3i.d by A43,A138,A163,A179,SCMFSA_2:94;
              Cs2i1.d = Cs2i.d by A8,A15,A140,A163,A179,SCMFSA_2:94;
              hence (DataPart Cs3i1).x = (DataPart Cs2i1).x by A39,A175,A180;
            end;
          end;
          then
          DataPart Cs3i1 c= DataPart Comput(ProgramPart(s2),s2,i+1) by A20,A34,
GRFUNC_1:8;
          hence DataPart Cs3i1 = DataPart Comput(ProgramPart(s2),s2,i+1) by A20
,A34,GRFUNC_1:9;
        end;
      end;
      hence thesis;
    end;
    suppose
      InsCode I = 6;
      then consider loc being Element of NAT such that
A181: I = goto loc by SCMFSA_2:59;
A182: CurInstr(ProgramPart s2, Cs2i) = goto (loc+k) by A8,A181,SCMFSA_4:14;
      thus IC Comput(ProgramPart(s1),s1,i+1) + k = loc + k by A51,A181,
SCMFSA_2:95
        .= IC Comput(ProgramPart(s2),s2,i+1) by A15,A182,SCMFSA_2:95;
      hence
      IncAddr(CurInstr(ProgramPart s1,Comput(
ProgramPart(s1),s1,i+1)), k)
       = CurInstr(ProgramPart s2,Comput(ProgramPart
(s2),s2,i+1)) by A21;
      now
        let x be set;
        assume
A183:   x in dom (Cs1i1|dom DPp);
        dom DPp c= Int-Locations \/ FinSeq-Locations by RELAT_1:87,SCMFSA_2:127
;
        then x in Int-Locations or x in FinSeq-Locations by A33,A183,
XBOOLE_0:def 3;
        then
A184:   x is Int-Location or x is FinSeq-Location by SCMFSA_2:11,12;
        then
A185:   Cs2i1.x = Cs2i.x by A15,A182,SCMFSA_2:95;
        Cs1i1.x = Cs1i.x by A51,A181,A184,SCMFSA_2:95;
        hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A33,A53,A183,A185;
      end;
      then (Cs1i1|dom DPp) c= (Cs2i1|dom DPp) by A44,A33,A45,GRFUNC_1:8;
      hence Comput(ProgramPart(s1),s1,i+1)|dom (DataPart p) = Comput(
ProgramPart(s2),s2,i+1)|dom (
      DataPart (Relocated(p,k))) by A44,A33,A45,GRFUNC_1:9;
      now
        let x be set;
        assume
A186:   x in dom (DataPart Cs3i1);
        then x in Int-Locations or x in FinSeq-Locations by A20,XBOOLE_0:def 3;
        then
A187:   x is Int-Location or x is FinSeq-Location by SCMFSA_2:11,12;
        then
A188:   Cs2i1.x = Cs2i.x by A15,A182,SCMFSA_2:95;
        Cs3i1.x = Cs3i.x by A43,A181,A187,SCMFSA_2:95;
        hence (DataPart Cs3i1).x = (DataPart Cs2i1).x by A39,A186,A188;
      end;
      then DataPart Cs3i1 c= DataPart Comput(ProgramPart(s2),s2,i+1) by A20,A34
,GRFUNC_1:8
;
      hence thesis by A20,A34,GRFUNC_1:9;
    end;
    suppose
      InsCode I = 7;
      then consider loc being Element of NAT, da being
      Int-Location such that
A189: I = da=0_goto loc by SCMFSA_2:60;
A190: now
        per cases;
        case
          Cs1i.da = 0;
          hence IC Comput(ProgramPart(s1),s1,i+1) + k = loc + k by A51,A189,
SCMFSA_2:96;
        end;
        case
          Cs1i.da <> 0;
          hence
          IC Comput(ProgramPart(s1),s1,i+1) + k = succ (IC Cs2i) by A7,A51,A59
,A189,SCMFSA_2:96;
        end;
      end;
A191: CurInstr(ProgramPart s2, Cs2i) = da=0_goto (loc+k)
 by A8,A189,SCMFSA_4:15;
A192: now
        per cases;
        case
          Cs2i.da = 0;
          hence IC Comput(ProgramPart(s2),s2,i+1) = loc + k by A15,A191,
SCMFSA_2:96;
        end;
        case
          Cs2i.da <> 0;
          hence IC Comput(ProgramPart(s2),s2,i+1) = succ IC Cs2i by A15,A191,
SCMFSA_2:96;
        end;
      end;
A193: Cs3i.da = Cs2i.da by A27;
A194: now
        per cases;
        suppose
          loc <> succ IC Cs1i;
          hence
          IC Comput(ProgramPart(s1),s1,i+1) + k = IC Comput(ProgramPart(s2),s2,
i+1) by A2,A4,A5,A189,A193,A190,A192,SCMFSA_3:25;
        end;
        suppose
          loc = succ IC Cs1i;
          hence
          IC Comput(ProgramPart(s1),s1,i+1) + k = IC Comput(ProgramPart(s2),s2,
i+1) by A7,A59,A190,A192;
        end;
      end;
      hence IC Comput(ProgramPart(s1),s1,i+1) + k = IC Comput(ProgramPart(s2),
s2,i+1);
      thus IncAddr(CurInstr(ProgramPart s1,
      Comput(ProgramPart(s1),s1,i+1)), k)
       = CurInstr(ProgramPart s2,Comput(ProgramPart
(s2),s2,i+1))
        by A21,A194;
      now
        let x be set;
        assume
A195:   x in dom (Cs1i1|dom DPp);
        dom DPp c= Int-Locations \/ FinSeq-Locations by RELAT_1:87,SCMFSA_2:127
;
        then x in Int-Locations or x in FinSeq-Locations by A33,A195,
XBOOLE_0:def 3;
        then
A196:   x is Int-Location or x is FinSeq-Location by SCMFSA_2:11,12;
        then
A197:   Cs2i1.x = Cs2i.x by A15,A191,SCMFSA_2:96;
        Cs1i1.x = Cs1i.x by A51,A189,A196,SCMFSA_2:96;
        hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A33,A53,A195,A197;
      end;
      then (Cs1i1|dom DPp) c= (Cs2i1|dom DPp) by A44,A33,A45,GRFUNC_1:8;
      hence Comput(ProgramPart(s1),s1,i+1)|dom (DataPart p) = Comput(
ProgramPart(s2),s2,i+1)|dom (
      DataPart (Relocated(p,k))) by A44,A33,A45,GRFUNC_1:9;
      now
        let x be set;
        assume
A198:   x in dom (DataPart Cs3i1);
        then x in Int-Locations or x in FinSeq-Locations by A20,XBOOLE_0:def 3;
        then
A199:   x is Int-Location or x is FinSeq-Location by SCMFSA_2:11,12;
        then
A200:   Cs2i1.x = Cs2i.x by A15,A191,SCMFSA_2:96;
        Cs3i1.x = Cs3i.x by A43,A189,A199,SCMFSA_2:96;
        hence (DataPart Cs3i1).x = (DataPart Cs2i1).x by A39,A198,A200;
      end;
      then DataPart Cs3i1 c= DataPart Comput(ProgramPart(s2),s2,i+1) by A20,A34
,GRFUNC_1:8
;
      hence thesis by A20,A34,GRFUNC_1:9;
    end;
    suppose
      InsCode I = 8;
      then consider loc being Element of NAT, da being
      Int-Location such that
A201: I = da>0_goto loc by SCMFSA_2:61;
A202: now
        per cases;
        case
          Cs1i.da > 0;
          hence IC Comput(ProgramPart(s1),s1,i+1) + k = loc + k by A51,A201,
SCMFSA_2:97;
        end;
        case
          Cs1i.da <= 0;
          hence
          IC Comput(ProgramPart(s1),s1,i+1) + k = succ (IC Cs2i) by A7,A51,A59
,A201,SCMFSA_2:97;
        end;
      end;
A203: CurInstr(ProgramPart s2, Cs2i) = da>0_goto (loc+k)
by A8,A201,SCMFSA_4:16;
A204: now
        per cases;
        case
          Cs2i.da > 0;
          hence IC Comput(ProgramPart(s2),s2,i+1) = loc + k by A15,A203,
SCMFSA_2:97;
        end;
        case
          Cs2i.da <= 0;
          hence IC Comput(ProgramPart(s2),s2,i+1) = succ IC Cs2i by A15,A203,
SCMFSA_2:97;
        end;
      end;
A205: Cs3i.da = Cs2i.da by A27;
A206: now
        per cases;
        suppose
          loc <> succ IC Cs1i;
          hence
          IC Comput(ProgramPart(s1),s1,i+1) + k = IC Comput(ProgramPart(s2),s2,
i+1) by A2,A4,A5,A201,A205,A202,A204,SCMFSA_3:26;
        end;
        suppose
          loc = succ IC Cs1i;
          hence
          IC Comput(ProgramPart(s1),s1,i+1) + k = IC Comput(ProgramPart(s2),s2,
i+1) by A7,A59,A202,A204;
        end;
      end;
      hence IC Comput(ProgramPart(s1),s1,i+1) + k = IC Comput(ProgramPart(s2),
s2,i+1);
      thus IncAddr(CurInstr(ProgramPart s1,
      Comput(ProgramPart(s1),s1,i+1)), k)
       = CurInstr(ProgramPart s2,Comput(ProgramPart
(s2),s2,i+1))
       by A21,A206;
      now
        let x be set;
        assume
A207:   x in dom (Cs1i1|dom DPp);
        dom DPp c= Int-Locations \/ FinSeq-Locations by RELAT_1:87,SCMFSA_2:127
;
        then x in Int-Locations or x in FinSeq-Locations by A33,A207,
XBOOLE_0:def 3;
        then
A208:   x is Int-Location or x is FinSeq-Location by SCMFSA_2:11,12;
        then
A209:   Cs2i1.x = Cs2i.x by A15,A203,SCMFSA_2:97;
        Cs1i1.x = Cs1i.x by A51,A201,A208,SCMFSA_2:97;
        hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A33,A53,A207,A209;
      end;
      then (Cs1i1|dom DPp) c= (Cs2i1|dom DPp) by A44,A33,A45,GRFUNC_1:8;
      hence Comput(ProgramPart(s1),s1,i+1)|dom (DataPart p) = Comput(
ProgramPart(s2),s2,i+1)|dom (
      DataPart (Relocated(p,k))) by A44,A33,A45,GRFUNC_1:9;
      now
        let x be set;
        assume
A210:   x in dom (DataPart Cs3i1);
        then x in Int-Locations or x in FinSeq-Locations by A20,XBOOLE_0:def 3;
        then
A211:   x is Int-Location or x is FinSeq-Location by SCMFSA_2:11,12;
        then
A212:   Cs2i1.x = Cs2i.x by A15,A203,SCMFSA_2:97;
        Cs3i1.x = Cs3i.x by A43,A201,A211,SCMFSA_2:97;
        hence (DataPart Cs3i1).x = (DataPart Cs2i1).x by A39,A210,A212;
      end;
      then DataPart Cs3i1 c= DataPart Comput(ProgramPart(s2),s2,i+1) by A20,A34
,GRFUNC_1:8
;
      hence thesis by A20,A34,GRFUNC_1:9;
    end;
    suppose
      InsCode I = 9;
      then consider
      db, da being Int-Location, f being FinSeq-Location such that
A213: I = da := (f,db) by SCMFSA_2:62;
A214: Cs3i.f = Cs2i.f by A17;
A215: IncAddr(I, k) = da := (f,db) by A213,SCMFSA_4:17;
A216: Exec(I, Cs1i).IC SCM+FSA = succ IC Cs1i by A213,SCMFSA_2:98;
      hence
      IC Comput(ProgramPart(s1),s1,i+1) + k = IC Comput(ProgramPart(s2),s2,i+1)
by A7,A8,A51,A15,A59,A215,SCMFSA_2:98;
      thus IncAddr(CurInstr(ProgramPart s1,
      Comput(ProgramPart(s1),s1,i+1)), k)
       = CurInstr(ProgramPart s2,Comput(ProgramPart
(s2),s2,i+1))
       by A7,A8,A21,A51,A15,A59,A215,A216,SCMFSA_2:98;
A217: Cs3i.db = Cs2i.db by A27;
      now
        let x be set;
A218:   dom DPp c= Int-Locations \/ FinSeq-Locations by RELAT_1:87,SCMFSA_2:127
;
        assume
A219:   x in dom (Cs1i1|dom DPp);
        per cases by A33,A219,A218,XBOOLE_0:def 3;
        suppose
          x in FinSeq-Locations;
          then reconsider d = x as FinSeq-Location by SCMFSA_2:12;
A220:     Cs1i1.d = Cs1i.d by A51,A213,SCMFSA_2:98;
          Cs2i1.d = Cs2i.d by A8,A15,A215,SCMFSA_2:98;
          hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A33,A53,A219,A220;
        end;
        suppose
A221:     da = x;
          then consider k1 being Element of NAT such that
A222:     k1 = abs(Cs1i.db) and
A223:     Cs1i1.x = (Cs1i.f)/.k1 by A51,A213,SCMFSA_2:98;
          consider k2 being Element of NAT such that
A224:     k2 = abs(Cs2i.db) and
A225:     Cs2i1.x = (Cs2i.f)/.k2 by A8,A15,A215,A221,SCMFSA_2:98;
          DPp c= p by RELAT_1:88;
          then dom DPp c= dom p by GRFUNC_1:8;
          then (Cs3i.f)/.k2 = (Cs1i.f)/.k1 by A2,A4,A5,A33,A213,A217,A219,A221
,A222,A224,SCMFSA_3:27;
          hence
          (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A33,A46,A214,A219,A223,A225;
        end;
        suppose
A226:     da <> x & x in Int-Locations;
          then reconsider d = x as Int-Location by SCMFSA_2:11;
A227:     Cs1i1.d = Cs1i.d by A51,A213,A226,SCMFSA_2:98;
          Cs2i1.d = Cs2i.d by A8,A15,A215,A226,SCMFSA_2:98;
          hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A33,A53,A219,A227;
        end;
      end;
      then (Cs1i1|dom DPp) c= (Cs2i1|dom DPp) by A44,A33,A45,GRFUNC_1:8;
      hence Comput(ProgramPart(s1),s1,i+1)|dom (DataPart p) = Comput(
ProgramPart(s2),s2,i+1)|dom (
      DataPart (Relocated(p,k))) by A44,A33,A45,GRFUNC_1:9;
      now
        let x be set;
        assume
A228:   x in dom (DataPart Cs3i1);
        per cases by A20,A228,XBOOLE_0:def 3;
        suppose
          x in FinSeq-Locations;
          then reconsider f = x as FinSeq-Location by SCMFSA_2:12;
A229:     Cs3i1.f = Cs3i.f by A43,A213,SCMFSA_2:98;
          Cs2i1.f = Cs2i.f by A8,A15,A215,SCMFSA_2:98;
          hence (DataPart Cs3i1).x = (DataPart Cs2i1).x by A39,A228,A229;
        end;
        suppose
A230:     da = x;
          then
A231:     ex k1 being Element of NAT st k1 = abs(Cs3i.db) & Cs3i1. x =
          (Cs3i.f)/.k1 by A43,A213,SCMFSA_2:98;
          ex k2 being Element of NAT st k2 = abs(Cs2i.db) & Cs2i1. x =
          (Cs2i.f)/.k2 by A8,A15,A215,A230,SCMFSA_2:98;
          hence (DataPart Cs3i1).x = (DataPart Cs2i1).x by A35,A217,A214,A228
,A231,SCMFSA_2:127;
        end;
        suppose
A232:     da <> x & x in Int-Locations;
          then reconsider d = x as Int-Location by SCMFSA_2:11;
A233:     Cs3i1.d = Cs3i.d by A43,A213,A232,SCMFSA_2:98;
          Cs2i1.d = Cs2i.d by A8,A15,A215,A232,SCMFSA_2:98;
          hence (DataPart Cs3i1).x = (DataPart Cs2i1).x by A39,A228,A233;
        end;
      end;
      then DataPart Cs3i1 c= DataPart Comput(ProgramPart(s2),s2,i+1) by A20,A34
,GRFUNC_1:8
;
      hence thesis by A20,A34,GRFUNC_1:9;
    end;
    suppose
      InsCode I = 10;
      then consider
      db, da being Int-Location, f being FinSeq-Location such that
A234: I = (f,db):=da by SCMFSA_2:63;
A235: Cs3i.f = Cs2i.f by A17;
A236: IncAddr(I, k) = (f,db):=da by A234,SCMFSA_4:18;
A237: Exec(I, Cs1i).IC SCM+FSA = succ IC Cs1i by A234,SCMFSA_2:99;
      hence
      IC Comput(ProgramPart(s1),s1,i+1) + k = IC Comput(ProgramPart(s2),s2,i+1)
by A7,A8,A51,A15,A59,A236,SCMFSA_2:99;
A238: Cs3i.da = Cs2i.da by A27;
      thus IncAddr(CurInstr(ProgramPart s1,
      Comput(ProgramPart(s1),s1,i+1)), k)
       = CurInstr(ProgramPart s2,Comput(ProgramPart
(s2),s2,i+1))
       by A7,A8,A21,A51,A15,A59,A236,A237,SCMFSA_2:99;
A239: Cs3i.db = Cs2i.db by A27;
      now
        let x be set;
A240:   dom DPp c= Int-Locations \/ FinSeq-Locations by RELAT_1:87,SCMFSA_2:127
;
        assume
A241:   x in dom (Cs1i1|dom DPp);
        per cases by A33,A241,A240,XBOOLE_0:def 3;
        suppose
          x in Int-Locations;
          then reconsider d = x as Int-Location by SCMFSA_2:11;
A242:     Cs1i1.d = Cs1i.d by A51,A234,SCMFSA_2:99;
          Cs2i1.d = Cs2i.d by A8,A15,A236,SCMFSA_2:99;
          hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A33,A53,A241,A242;
        end;
        suppose
A243:     f = x;
          then consider k1 being Element of NAT such that
A244:     k1 = abs(Cs1i.db) and
A245:     Cs1i1.x = Cs1i.f +*(k1,Cs1i.da) by A51,A234,SCMFSA_2:99;
          consider k2 being Element of NAT such that
A246:     k2 = abs(Cs2i.db) and
A247:     Cs2i1.x = Cs2i.f +*(k2,Cs2i.da) by A8,A15,A236,A243,SCMFSA_2:99;
          DPp c= p by RELAT_1:88;
          then dom DPp c= dom p by GRFUNC_1:8;
          then Cs3i.f +*(k2,Cs3i.da) = Cs1i.f +*(k1,Cs1i.da) by A2,A4,A5,A33
,A234,A239,A241,A243,A244,A246,SCMFSA_3:28;
          hence
          (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A33,A46,A238,A235,A241,A245
,A247;
        end;
        suppose
A248:     f <> x & x in FinSeq-Locations;
          then reconsider d = x as FinSeq-Location by SCMFSA_2:12;
A249:     Cs1i1.d = Cs1i.d by A51,A234,A248,SCMFSA_2:99;
          Cs2i1.d = Cs2i.d by A8,A15,A236,A248,SCMFSA_2:99;
          hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A33,A53,A241,A249;
        end;
      end;
      then (Cs1i1|dom DPp) c= (Cs2i1|dom DPp) by A44,A33,A45,GRFUNC_1:8;
      hence Comput(ProgramPart(s1),s1,i+1)|dom (DataPart p) = Comput(
ProgramPart(s2),s2,i+1)|dom (
      DataPart (Relocated(p,k))) by A44,A33,A45,GRFUNC_1:9;
      now
        let x be set;
        assume
A250:   x in dom (DataPart Cs3i1);
        per cases by A20,A250,XBOOLE_0:def 3;
        suppose
          x in Int-Locations;
          then reconsider f = x as Int-Location by SCMFSA_2:11;
A251:     Cs3i1.f = Cs3i.f by A43,A234,SCMFSA_2:99;
          Cs2i1.f = Cs2i.f by A8,A15,A236,SCMFSA_2:99;
          hence (DataPart Cs3i1).x = (DataPart Cs2i1).x by A39,A250,A251;
        end;
        suppose
A252:     f = x;
          then
A253:     ex k1 being Element of NAT st k1 = abs(Cs3i.db) & Cs3i1. x =
          Cs3i.f +*(k1,Cs3i.da) by A43,A234,SCMFSA_2:99;
          ex k2 being Element of NAT st k2 = abs(Cs2i.db) & Cs2i1. x =
          Cs2i.f +*(k2,Cs2i.da) by A8,A15,A236,A252,SCMFSA_2:99;
          hence (DataPart Cs3i1).x = (DataPart Cs2i1).x by A35,A239,A238,A235
,A250,A253,SCMFSA_2:127;
        end;
        suppose
A254:     f <> x & x in FinSeq-Locations;
          then reconsider d = x as FinSeq-Location by SCMFSA_2:12;
A255:     Cs3i1.d = Cs3i.d by A43,A234,A254,SCMFSA_2:99;
          Cs2i1.d = Cs2i.d by A8,A15,A236,A254,SCMFSA_2:99;
          hence (DataPart Cs3i1).x = (DataPart Cs2i1).x by A39,A250,A255;
        end;
      end;
      then DataPart Cs3i1 c= DataPart Comput(ProgramPart(s2),s2,i+1) by A20,A34
,GRFUNC_1:8
;
      hence thesis by A20,A34,GRFUNC_1:9;
    end;
    suppose
      InsCode I = 11;
      then consider da being Int-Location, f being FinSeq-Location such that
A256: I = da :=len f by SCMFSA_2:64;
A257: IncAddr(I, k) = da :=len f by A256,SCMFSA_4:19;
A258: Exec(I, Cs1i).IC SCM+FSA = succ IC Cs1i by A256,SCMFSA_2:100;
      hence
      IC Comput(ProgramPart(s1),s1,i+1) + k = IC Comput(ProgramPart(s2),s2,i+1)
by A7,A8,A51,A15,A59,A257,SCMFSA_2:100;
      thus IncAddr(CurInstr(ProgramPart s1,
      Comput(ProgramPart(s1),s1,i+1)), k)
       = CurInstr(ProgramPart s2,Comput(ProgramPart(s2),s2,i+1))
       by A7,A8,A21,A51,A15,A59,A257,A258,SCMFSA_2:100;
A259: Cs3i.f = Cs2i.f by A17;
      now
        let x be set;
A260:   dom DPp c= Int-Locations \/ FinSeq-Locations by RELAT_1:87,SCMFSA_2:127
;
        assume
A261:   x in dom (Cs1i1|dom DPp);
        per cases by A33,A261,A260,XBOOLE_0:def 3;
        suppose
          x in FinSeq-Locations;
          then reconsider d = x as FinSeq-Location by SCMFSA_2:12;
A262:     Cs1i1.d = Cs1i.d by A51,A256,SCMFSA_2:100;
          Cs2i1.d = Cs2i.d by A8,A15,A257,SCMFSA_2:100;
          hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A33,A53,A261,A262;
        end;
        suppose
A263:     da = x;
          DPp c= p by RELAT_1:88;
          then dom DPp c= dom p by GRFUNC_1:8;
          then
A264:     len(Cs3i.f) = len(Cs1i.f) by A2,A4,A5,A33,A256,A261,A263,SCMFSA_3:29;
A265:     Cs1i1.x = len(Cs1i.f) by A51,A256,A263,SCMFSA_2:100;
          Cs2i1.x = len(Cs2i.f) by A8,A15,A257,A263,SCMFSA_2:100;
          hence
          (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A33,A46,A259,A261,A265,A264;
        end;
        suppose
A266:     da <> x & x in Int-Locations;
          then reconsider d = x as Int-Location by SCMFSA_2:11;
A267:     Cs1i1.d = Cs1i.d by A51,A256,A266,SCMFSA_2:100;
          Cs2i1.d = Cs2i.d by A8,A15,A257,A266,SCMFSA_2:100;
          hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A33,A53,A261,A267;
        end;
      end;
      then (Cs1i1|dom DPp) c= (Cs2i1|dom DPp) by A44,A33,A45,GRFUNC_1:8;
      hence Comput(ProgramPart(s1),s1,i+1)|dom (DataPart p) = Comput(
ProgramPart(s2),s2,i+1)|dom (
      DataPart (Relocated(p,k))) by A44,A33,A45,GRFUNC_1:9;
      now
        let x be set;
        assume
A268:   x in dom (DataPart Cs3i1);
        per cases by A20,A268,XBOOLE_0:def 3;
        suppose
          x in FinSeq-Locations;
          then reconsider f = x as FinSeq-Location by SCMFSA_2:12;
A269:     Cs3i1.f = Cs3i.f by A43,A256,SCMFSA_2:100;
          Cs2i1.f = Cs2i.f by A8,A15,A257,SCMFSA_2:100;
          hence (DataPart Cs3i1).x = (DataPart Cs2i1).x by A39,A268,A269;
        end;
        suppose
A270:     da = x;
          then
A271:     Cs3i1.x = len(Cs3i.f) by A43,A256,SCMFSA_2:100;
          Cs2i1.x = len(Cs2i.f) by A8,A15,A257,A270,SCMFSA_2:100;
          hence (DataPart Cs3i1).x = (DataPart Cs2i1).x by A35,A259,A268,A271,
SCMFSA_2:127;
        end;
        suppose
A272:     da <> x & x in Int-Locations;
          then reconsider d = x as Int-Location by SCMFSA_2:11;
A273:     Cs3i1.d = Cs3i.d by A43,A256,A272,SCMFSA_2:100;
          Cs2i1.d = Cs2i.d by A8,A15,A257,A272,SCMFSA_2:100;
          hence (DataPart Cs3i1).x = (DataPart Cs2i1).x by A39,A268,A273;
        end;
      end;
      then DataPart Cs3i1 c= DataPart Comput(ProgramPart(s2),s2,i+1) by A20,A34
,GRFUNC_1:8
;
      hence thesis by A20,A34,GRFUNC_1:9;
    end;
    suppose
      InsCode I = 12;
      then consider da being Int-Location, f being FinSeq-Location such that
A274: I = f:=<0,...,0>da by SCMFSA_2:65;
A275: IncAddr(I, k) = f:=<0,...,0>da by A274,SCMFSA_4:20;
A276: Exec(I, Cs1i).IC SCM+FSA = succ IC Cs1i by A274,SCMFSA_2:101;
      hence
      IC Comput(ProgramPart(s1),s1,i+1) + k = IC Comput(ProgramPart(s2),s2,i+1)
by A7,A8,A51,A15,A59,A275,SCMFSA_2:101;
      thus IncAddr(CurInstr(ProgramPart s1,Comput(ProgramPart(s1),s1,i+1)), k)
       = CurInstr(ProgramPart s2,Comput(ProgramPart
(s2),s2,i+1))
       by A7,A8,A21,A51,A15,A59,A275,A276,SCMFSA_2:101;
A277: Cs3i.da = Cs2i.da by A27;
      now
        let x be set;
A278:   dom DPp c= Int-Locations \/ FinSeq-Locations by RELAT_1:87,SCMFSA_2:127
;
        assume
A279:   x in dom (Cs1i1|dom DPp);
        per cases by A33,A279,A278,XBOOLE_0:def 3;
        suppose
          x in Int-Locations;
          then reconsider d = x as Int-Location by SCMFSA_2:11;
A280:     Cs1i1.d = Cs1i.d by A51,A274,SCMFSA_2:101;
          Cs2i1.d = Cs2i.d by A8,A15,A275,SCMFSA_2:101;
          hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A33,A53,A279,A280;
        end;
        suppose
A281:     f = x;
          then consider k1 being Element of NAT such that
A282:     k1 = abs(Cs1i.da) and
A283:     Cs1i1.x = k1 |-> 0 by A51,A274,SCMFSA_2:101;
          consider k2 being Element of NAT such that
A284:     k2 = abs(Cs2i.da) and
A285:     Cs2i1.x = k2 |-> 0 by A8,A15,A275,A281,SCMFSA_2:101;
          DPp c= p by RELAT_1:88;
          then dom DPp c= dom p by GRFUNC_1:8;
          then k2 |-> 0 = k1 |->0 by A2,A4,A5,A33,A274,A277,A279,A281,A282,A284
,SCMFSA_3:30;
          hence
          (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A33,A46,A279,A283,A285;
        end;
        suppose
A286:     f <> x & x in FinSeq-Locations;
          then reconsider d = x as FinSeq-Location by SCMFSA_2:12;
A287:     Cs1i1.d = Cs1i.d by A51,A274,A286,SCMFSA_2:101;
          Cs2i1.d = Cs2i.d by A8,A15,A275,A286,SCMFSA_2:101;
          hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A33,A53,A279,A287;
        end;
      end;
      then (Cs1i1|dom DPp) c= (Cs2i1|dom DPp) by A44,A33,A45,GRFUNC_1:8;
      hence Comput(ProgramPart(s1),s1,i+1)|dom (DataPart p) = Comput(
ProgramPart(s2),s2,i+1)|dom (
      DataPart (Relocated(p,k))) by A44,A33,A45,GRFUNC_1:9;
      now
        let x be set;
        assume
A288:   x in dom (DataPart Cs3i1);
        per cases by A20,A288,XBOOLE_0:def 3;
        suppose
          x in Int-Locations;
          then reconsider f = x as Int-Location by SCMFSA_2:11;
A289:     Cs3i1.f = Cs3i.f by A43,A274,SCMFSA_2:101;
          Cs2i1.f = Cs2i.f by A8,A15,A275,SCMFSA_2:101;
          hence (DataPart Cs3i1).x = (DataPart Cs2i1).x by A39,A288,A289;
        end;
        suppose
A290:     f = x;
          then
A291:     ex k1 being Element of NAT st k1 = abs(Cs3i.da) & Cs3i1. x =
          k1 |-> 0 by A43,A274,SCMFSA_2:101;
          ex k2 being Element of NAT st k2 = abs(Cs2i.da) & Cs2i1. x =
          k2 |-> 0 by A8,A15,A275,A290,SCMFSA_2:101;
          hence (DataPart Cs3i1).x = (DataPart Cs2i1).x by A35,A277,A288,A291,
SCMFSA_2:127;
        end;
        suppose
A292:     f <> x & x in FinSeq-Locations;
          then reconsider d = x as FinSeq-Location by SCMFSA_2:12;
A293:     Cs3i1.d = Cs3i.d by A43,A274,A292,SCMFSA_2:101;
          Cs2i1.d = Cs2i.d by A8,A15,A275,A292,SCMFSA_2:101;
          hence (DataPart Cs3i1).x = (DataPart Cs2i1).x by A39,A288,A293;
        end;
      end;
      then DataPart Cs3i1 c= DataPart Comput(ProgramPart(s2),s2,i+1) by A20,A34
,GRFUNC_1:8
;
      hence thesis by A20,A34,GRFUNC_1:9;
    end;
  end;
A294: DataPart p = DataPart (Relocated(p,k)) by AMISTD_2:68;
  reconsider ii = IC p as Element of NAT;
A295: DataPart p c= p by RELAT_1:88;
A296: DataPart (Relocated(p,k)) c= Relocated(p,k) by RELAT_1:88;
A297: IC SCM+FSA in dom Relocated(p,k) by AMISTD_2:72;
  now
    thus IC Comput(ProgramPart(s1),s1,0) + k = IC s1 + k by AMI_1:13
      .= IC p + k by A1,A2,GRFUNC_1:8
      .= IC Relocated(p,k) by A1,AMISTD_2:73
      .= IC s2 by A3,A297,GRFUNC_1:8
      .= IC Comput(ProgramPart(s2),s2,0) by AMI_1:13;
    reconsider loc = IC p as Element of NAT;
A298: IncAddr(CurInstr(ProgramPart(s1),Comput(ProgramPart(s1),s1,0)), k)
 = IncAddr(CurInstr(ProgramPart s1, s1), k) by AMI_1:13
      .= IncAddr(s1.IC s1, k) by COMPOS_1:38;
A299: IC p = IC s1 by A1,A2,GRFUNC_1:8;
    then IC p = IC Comput(ProgramPart(s1),s1,0) by AMI_1:13;
    then
A300: loc in dom ProgramPart p by A2,A4,SCMFSA_3:17;
    ProgramPart p c= p by RELAT_1:88;
    then
A301: dom ProgramPart p c= dom p by GRFUNC_1:8;
    then
A302: (IC p) + k in dom Relocated(p,k) by A300,AMISTD_2:71;
A303: IC SCM+FSA in dom Relocated(p, k) by AMISTD_2:72;
A304: p.ii = s1.IC s1 by A2,A299,A300,A301,GRFUNC_1:8;
Z:  (ProgramPart s2)/.IC s2
 = s2.IC s2 by COMPOS_1:38;
    CurInstr(ProgramPart(s2),Comput(ProgramPart(s2),s2,0))
    = CurInstr(ProgramPart s2, s2) by AMI_1:13
      .= s2.(IC Relocated(p, k)) by A3,A303,Z,GRFUNC_1:8
      .= s2.((IC p) + k) by A1,AMISTD_2:73
      .= (Relocated(p,k)).((IC p) + k) by A3,A302,GRFUNC_1:8;
    hence
    IncAddr(CurInstr(ProgramPart(s1),Comput(ProgramPart(s1),s1,0)), k)
     = CurInstr(ProgramPart(s2),Comput(ProgramPart(s2),s2,0))
      by A300,A304,A298,AMISTD_2:76;
    thus Comput(ProgramPart(s1),s1,0)|dom (DataPart p) = s1 | dom (DataPart p)
by AMI_1:13
      .= DataPart p by A2,A295,GRFUNC_1:64,XBOOLE_1:1
      .= s2 | dom (DataPart p) by A3,A294,A296,GRFUNC_1:64,XBOOLE_1:1
      .= Comput(ProgramPart(s2),s2,0)|dom (DataPart (Relocated(p,k))) by A294,
AMI_1:13;
    thus DataPart Comput(ProgramPart(s3),s3,0) = DataPart(s1 +* DataPart s2)
by AMI_1:13
      .= DataPart s2 by PBOOLE:157
      .= DataPart Comput(ProgramPart(s2),s2,0) by AMI_1:13;
  end;
  then
A305: Y[0];
  thus for i being Element of NAT holds Y[i] from NAT_1:sch 1(A305,A6);
end;

theorem Th13:
  for p being autonomic FinPartState of SCM+FSA , k being Element
of NAT st IC SCM+FSA in dom p holds p is halting iff Relocated(p,k) is halting
proof
  let p be autonomic FinPartState of SCM+FSA , k be Element of NAT;
  assume
A2: IC SCM+FSA in dom p;
  hereby
    assume
A3: p is halting;
    thus Relocated(p,k) is halting
    proof
      let t be State of SCM+FSA;
      assume
A4:   Relocated(p,k) c= t;
      reconsider s = t +* p as State of SCM+FSA;
A5:   p c= t +* p by FUNCT_4:26;
      then ProgramPart s halts_on s by A3,AMI_1:def 26;
      then consider u being Element of NAT such that
A6:   CurInstr(ProgramPart(s),Comput(ProgramPart(s),s,u
))
 = halt SCM+FSA by AMI_1:146;
      take u;
     IC Comput(ProgramPart(t),t,u) in NAT;
    hence IC Comput(ProgramPart(t),t,u) in dom ProgramPart t by COMPOS_1:34;
      CurInstr(ProgramPart(t),Comput(ProgramPart(t),t,u))
       = IncAddr(halt SCM+FSA, k) by A2,A4,A5,A6,Th12
        .= halt SCM+FSA by SCMFSA_4:8;
      hence thesis;
      reconsider s3 = s +* DataPart t as State of SCM+FSA;
    end;
  end;
  assume
A7: Relocated(p,k) is halting;
  let t be State of SCM+FSA;
  reconsider s = t +* Relocated(p, k) as State of SCM+FSA;
A8: Relocated(p,k) c= t +* Relocated(p,k) by FUNCT_4:26;
  then ProgramPart s halts_on s by A7,AMI_1:def 26;
  then consider u being Element of NAT such that
A9: CurInstr(ProgramPart(s),Comput(ProgramPart(s),s,u))
= halt SCM+FSA
 by AMI_1:146;
  assume p c= t;
  then
     IncAddr(CurInstr(ProgramPart(t),Comput(ProgramPart(t),t,u)), k)
 = halt SCM+FSA by A2,A8,A9,Th12;
 then
B10: IncAddr(CurInstr(ProgramPart(t),Comput(ProgramPart(t),t,u)), k)
  = IncAddr(halt SCM+FSA, k) by AMISTD_2:30;
  take u;
     IC Comput(ProgramPart(t),t,u) in NAT;
    hence IC Comput(ProgramPart(t),t,u) in dom ProgramPart t by COMPOS_1:34;
  thus thesis by B10,AMISTD_2:34;
end;

theorem Th14:
  for k being Element of NAT for p being autonomic FinPartState of
  SCM+FSA st IC SCM+FSA in dom p for s being State of SCM+FSA st Relocated(p,k)
c= s holds for i being Element of NAT holds Comput(ProgramPart(s),s,i) = Comput
(ProgramPart(s+*p
  ),s+*p
  ,i) +* Start-At(IC Comput(ProgramPart(s+*p),s+*p,i) +k,SCM+FSA) +* s|dom
ProgramPart p +*
  ProgramPart (Relocated(p,k))
proof
  let k be Element of NAT;
  let p be autonomic FinPartState of SCM+FSA such that
A1: IC SCM+FSA in dom p;
  let s be State of SCM+FSA such that
A2: Relocated(p,k) c= s;
  defpred X[Nat] means Comput(ProgramPart(s),s,$1) = Comput(ProgramPart(s+*p),s
+*p,$1) +*
Start-At (IC Comput(ProgramPart(s+*p),s+*p,$1) + k,SCM+FSA) +* s|dom
ProgramPart p
 +* ProgramPart (
  Relocated(p,k));
A3: for i being Element of NAT st X[i] holds X[i+1]
  proof
A4: not IC SCM+FSA in dom ProgramPart p by COMPOS_1:12;
    set sdom = s|dom ProgramPart p;
    let i be Element of NAT such that
A5: Comput(ProgramPart(s),s,i) = Comput(ProgramPart(s+*p),s+*p,i) +* Start-At (
IC
Comput(ProgramPart(s+*p),s+*p,i) + k,SCM+FSA) +* s|dom ProgramPart p+*
 ProgramPart (Relocated(p,k));
    dom ProgramPart p c= the carrier of SCM+FSA by RELAT_1:def 18;
    then dom ProgramPart p c= dom s by PARTFUN1:def 4;
    then
A6: dom ProgramPart p = dom (s|dom ProgramPart p) by RELAT_1:91;
    reconsider sdom as FinPartState of SCM+FSA;
X:  rng ProgramPart s c= the Instructions of SCM+FSA by RELAT_1:def 19;
    dom ProgramPart p c= NAT by RELAT_1:def 18;
    then s|dom ProgramPart p c= ProgramPart s by RELAT_1:104;
    then rng (s|dom ProgramPart p) c= rng ProgramPart s by RELAT_1:25;
    then
B:  rng (s|dom ProgramPart p) c= the Instructions of SCM+FSA
        by X,XBOOLE_1:1;
    dom (s|dom ProgramPart p) c= NAT by A6,RELAT_1:def 18;
    then reconsider sdom as preProgram of SCM+FSA by B,RELAT_1:def 18,def 19;
    reconsider ii = IC Comput(ProgramPart(s+*p),s+*p,i) as Element of NAT;
A7: ProgramPart(p) c= Comput(ProgramPart(s+*p),s+*p,i) by AMI_1:99,FUNCT_4:26;
    dom (Start-At(IC Comput(ProgramPart(s+*p),s+*p,i) +k,SCM+FSA)) = {IC
SCM+FSA}
     by FUNCOP_1:19;
    then
A8: IC SCM+FSA in dom (Start-At(IC Comput(ProgramPart(s+*p),s+*p,i) +k,SCM+FSA)
)
 by TARSKI:def 1;
    dom (sdom) = dom s /\ dom ProgramPart p by RELAT_1:90;
    then
A9: not IC SCM+FSA in dom (sdom) by A4,XBOOLE_0:def 4;
    p is not NAT-defined by A1,COMPOS_1:19;
    then
A10: IC Comput(ProgramPart(s+*p),s+*p,i) in dom ProgramPart(p) by FUNCT_4:26
,SCMFSA_3:17;
    then
A11: IC Comput(ProgramPart(s+*p),s+*p,i) in dom IncAddr(ProgramPart p,k) by
AMISTD_2:def 15
;
    ProgramPart p c= p by RELAT_1:88;
    then dom ProgramPart p c= dom p by GRFUNC_1:8;
    then (IC Comput(ProgramPart(s+*p),s+*p,i) + k) in dom (Relocated(p,k)) by
A10,AMISTD_2:71;
    then
A12: (IC Comput(ProgramPart(s+*p),s+*p,i) + k) in dom (ProgramPart (Relocated(p
,k) ))
    by COMPOS_1:16;
A13: (ProgramPart p)/.ii = (ProgramPart p).IC Comput(ProgramPart(s+*p),s+*p,i)
by A10,PARTFUN1:def 8
      .= ( Comput(ProgramPart(s+*p),s+*p,i)).IC Comput(ProgramPart(s+*p),s+*p,i
) by A10,A7,GRFUNC_1:8;
Z:  (ProgramPart Comput(ProgramPart(s+*p),s+*p,i))/.IC Comput(ProgramPart(s+*p)
,s+*p,i)
 = Comput(ProgramPart(s+*p),s+*p,i).IC Comput(ProgramPart(s+*p),s+*p,i) by
COMPOS_1:38;
Y:  (ProgramPart Comput(ProgramPart(s),s,i))/.IC Comput(ProgramPart(s),s,i)
 = Comput(ProgramPart(s),s,i).IC Comput(ProgramPart(s),s,i) by COMPOS_1:38;
    not IC SCM+FSA in dom ProgramPart(Relocated(p,k)) by COMPOS_1:12;
    then IC ( Comput(ProgramPart(s+*p),s+*p,i) +*
     Start-At(IC Comput(ProgramPart(s+*p),s+*p,i) +k,SCM+FSA) +*
sdom +* ProgramPart Relocated(p,k)) = ( Comput(ProgramPart(s+*p),s+*p,i) +*
Start-At (IC
    Comput(ProgramPart(s+*p),s+*p,i) + k,SCM+FSA) +* sdom).IC SCM+FSA by
FUNCT_4:12
      .= ( Comput(ProgramPart(s+*p),s+*p,i) +*
       Start-At(IC Comput(ProgramPart(s+*p),s+*p,i) +k,SCM+FSA)).IC
    SCM+FSA by A9,FUNCT_4:12
      .= (Start-At(IC Comput(ProgramPart(s+*p),s+*p,i) +k,SCM+FSA)).IC SCM+FSA
       by A8,FUNCT_4:14
      .= IC Comput(ProgramPart(s+*p),s+*p,i) + k by FUNCOP_1:87;
    then
A14: CurInstr(ProgramPart Comput(ProgramPart(s),s,i),Comput(ProgramPart(s),s,i)
)
 = (ProgramPart (Relocated(p,k))).(IC
    Comput(ProgramPart(s+*p),s+*p,i) + k) by A5,A12,Y,FUNCT_4:14
      .= Reloc(ProgramPart p,k).(IC Comput(ProgramPart(s+*p),s+*p,i)
+ k) by AMISTD_2:69
      .= Shift(IncAddr(ProgramPart p,k),k).(IC Comput(ProgramPart(s+*p),s+*p,i)
+ k) by AMISTD_2:75
      .= IncAddr(ProgramPart p,k).ii by A11,VALUED_1:def 12
      .= IncAddr(CurInstr(ProgramPart Comput(ProgramPart(s+*p),s+*p,i),
      Comput(ProgramPart(s+*p),s+*p,i)),k) by A10,A13,Z,SCMFSA_4:24;
T: ProgramPart (s+*p) = ProgramPart Comput(ProgramPart(s+*p),s+*p,i)
by AMI_1:123;
A15: Comput(ProgramPart(s+*p),s+*p,i+1)
 = Following(ProgramPart(s+*p) ,Comput(ProgramPart(s
+*p),s+*p,i))
 by AMI_1:14;
S: ProgramPart s = ProgramPart Comput(ProgramPart(s),s,i)
by AMI_1:123;
    thus Comput(ProgramPart(s),s,i+1) =
    Following(ProgramPart s,Comput(ProgramPart(s),s,i)
) by AMI_1:14
      .= Exec(IncAddr(CurInstr(ProgramPart Comput(ProgramPart(s+*p),s+*p,i),
      Comput(ProgramPart(s+*p),s+*p,i)),k), ( Comput(ProgramPart(s+*p
    ),s+*p
    ,i)) +* Start-At(IC Comput(ProgramPart(s+*p),s+*p,i) +k,SCM+FSA) +* sdom )
     +* ProgramPart
    Relocated(p,k) by A5,A14,S,SCMFSA_3:10
      .= Exec(IncAddr(CurInstr(ProgramPart Comput(ProgramPart(s+*p),s+*p,i),
      Comput(ProgramPart(s+*p),s+*p,i)),k), ( Comput(ProgramPart(s+*p
    ),s+*p
    ,i)) +* Start-At(IC Comput(ProgramPart(s+*p),s+*p,i) +k,SCM+FSA)) +* sdom
     +* ProgramPart (
    Relocated(p,k)) by SCMFSA_3:10
      .= Comput(ProgramPart(s+*p),s+*p,i+1) +* Start-At(IC Comput(ProgramPart(s
+*p),s+*p,i+1) +k,SCM+FSA)
       +*
    s|dom ProgramPart p +* ProgramPart (Relocated(p,k)) by A15,T,SCMFSA_4:28;
  end;
  set IP = Start-At(IC p,SCM+FSA);
A16: dom Start-At(IC p,SCM+FSA) = {IC SCM+FSA} by FUNCOP_1:19;
A17: Start-At(IC p +k,SCM+FSA) c= Relocated(p,k) by A1,AMISTD_2:77;
  IC Comput(ProgramPart(s+*p),s+*p,0) = (s +* p).IC SCM+FSA by AMI_1:13
    .= IC p by A1,FUNCT_4:14;
  then
A18: Start-At(IC Comput(ProgramPart(s+*p),s+*p,0) +k,SCM+FSA) c= s by A2,A17,
XBOOLE_1:1;
  set DP = DataPart p;
A19: {IC SCM+FSA} misses dom DataPart p by COMPOS_1:13;
  set PP = ProgramPart p;
A20: dom DataPart p misses dom ProgramPart p by COMPOS_1:15;
  set SD = s|dom ProgramPart p;
A21: s|dom ProgramPart p c= s by RELAT_1:88;
  ProgramPart (Relocated(p,k)) c= Relocated(p,k) by RELAT_1:88;
  then
A22: ProgramPart (Relocated(p,k)) c= s by A2,XBOOLE_1:1;
  dom ProgramPart p c= the carrier of SCM+FSA by RELAT_1:def 18;
  then dom ProgramPart p c= dom s by PARTFUN1:def 4;
  then
A23: dom ProgramPart p = dom (s|dom ProgramPart p) by RELAT_1:91;
  DataPart (Relocated(p,k)) c= Relocated(p,k) by RELAT_1:88;
  then DataPart (Relocated(p,k)) c= s by A2,XBOOLE_1:1;
  then
A24: DataPart p c= s by AMISTD_2:68;
  set PR = ProgramPart (Relocated(p,k));
  set IS = Start-At(IC Comput(ProgramPart(s+*p),s+*p,0) +k,SCM+FSA);
A25: dom Start-At(IC Comput(ProgramPart(s+*p),s+*p,0) +k,SCM+FSA) = {IC SCM+FSA
}
 by FUNCOP_1:19;
  Comput(ProgramPart(s),s,0) = s by AMI_1:13
    .= s +* PR by A22,FUNCT_4:79
    .= s +* SD +* PR by A21,FUNCT_4:79
    .= s +* PP +* SD +* PR by A23,FUNCT_4:78
    .= s +* IS +* PP +* SD +* PR by A18,FUNCT_4:79
    .= s +*(IS +* PP) +* SD +* PR by FUNCT_4:15
    .= s +*(PP +* IS) +* SD +* PR by A25,COMPOS_1:14,FUNCT_4:36
    .= (s +* PP)+* IS +* SD +* PR by FUNCT_4:15
    .= (s +* DP)+* PP +* IS +* SD +* PR by A24,FUNCT_4:79
    .= (s +*(DP +* PP))+* IS +* SD +* PR by FUNCT_4:15
    .= (s +*(PP +* DP))+* IS +* SD +* PR by A20,FUNCT_4:36
    .= (s +* PP)+* DP +* IS +* SD +* PR by FUNCT_4:15
    .=((s +* PP)+* DP) +* IP +* IS +* SD +* PR by A25,A16,FUNCT_4:78
    .= (s +*(PP +* DP))+* IP +* IS +* SD +* PR by FUNCT_4:15
    .= s +*(PP +* DP +* IP) +* IS +* SD +* PR by FUNCT_4:15
    .= s +*(PP +*(DP +* IP))+* IS +* SD +* PR by FUNCT_4:15
    .= s +*(PP +*(IP +* DP))+* IS +* SD +* PR by A16,A19,FUNCT_4:36
    .= s +*(PP +* IP +* DP) +* IS +* SD +* PR by FUNCT_4:15
    .= s +*(IP +* PP +* DP) +* IS +* SD +* PR by A16,COMPOS_1:14,FUNCT_4:36
    .= s +* p +* IS +* SD +* PR by A1,COMPOS_1:18
    .= Comput(ProgramPart(s+*p),s+*p,0) +* Start-At(IC Comput(ProgramPart(s+*p)
,s+*p,0) +k,SCM+FSA)
     +* s|dom
  ProgramPart p +* ProgramPart (Relocated(p,k)) by AMI_1:13;
  then
A26: X[0];
  thus for i being Element of NAT holds X[i] from NAT_1:sch 1 (A26,A3 );
end;

theorem Th15:
  for k being Element of NAT for p being FinPartState of SCM+FSA
st IC SCM+FSA in dom p for s being State of SCM+FSA st p c= s & Relocated(p,k)
  is autonomic holds for i being Element of NAT holds Comput(ProgramPart(s),s,i
) =
Comput(ProgramPart(s+*Relocated(p,k)),s+*Relocated(p,k),i) +* Start-At (IC
Comput(ProgramPart(s+*Relocated(p,k)),s+*Relocated(p,k),
  i) -'k,SCM+FSA) +* s|dom ProgramPart Relocated(p,k) +* ProgramPart (p)
proof
  let k be Element of NAT;
  let p be FinPartState of SCM+FSA;
  assume
Z: IC SCM+FSA in dom p;
  then
A1: Start-At(IC p,SCM+FSA) c= p by FUNCOP_1:99;
  let s be State of SCM+FSA such that
A2: p c= s and
A3: Relocated(p,k) is autonomic;
A4: Start-At(IC p,SCM+FSA) c= s by A2,A1,XBOOLE_1:1;
  defpred X[Nat] means Comput(ProgramPart(s),s,$1) = Comput(ProgramPart(s+*
Relocated
  (p,k)),s+*Relocated
  (p,k),$1) +* Start-At (IC Comput(ProgramPart(s+*Relocated(p,k)),s+*Relocated(
p,k),$1) -'k,SCM+FSA)
   +* s|(dom
  ProgramPart Relocated(p,k)) +* ProgramPart p;
A5: for i being Element of NAT st X[i] holds X[i+1]
  proof
    reconsider pp = ProgramPart p as preProgram of SCM+FSA;
    set sdom = s|(dom ProgramPart Relocated(p,k));
    let i be Element of NAT such that
A6: Comput(ProgramPart(s),s,i) = Comput(ProgramPart(s+*Relocated(p,k)),s+*
Relocated(p,k),i) +* Start-At (
IC Comput(ProgramPart(s+*Relocated(p,k)),s+*Relocated(p,k),i) -'k,SCM+FSA) +*
 s|dom ProgramPart Relocated(p,k)
    +* ProgramPart p;
    dom ProgramPart Relocated(p,k) c= the carrier of SCM+FSA by RELAT_1:def 18;
    then dom ProgramPart Relocated(p,k) c= dom s by PARTFUN1:def 4;
    then
A7: dom ProgramPart Relocated(p,k) = dom (s|(dom ProgramPart Relocated(p,
    k))) by RELAT_1:91;
    reconsider sdom as FinPartState of SCM+FSA;
X:  rng ProgramPart s c= the Instructions of SCM+FSA by RELAT_1:def 19;
    dom ProgramPart Relocated(p,k) c= NAT by RELAT_1:def 18;
    then s|dom ProgramPart Relocated(p,k) c= ProgramPart s by RELAT_1:104;
    then rng (s|dom ProgramPart Relocated(p,k)) c= rng ProgramPart s
    by RELAT_1:25;
    then
B:  rng (s|(dom ProgramPart Relocated(p,k))) c=
      the Instructions of SCM+FSA by X,XBOOLE_1:1;
    dom (s|(dom ProgramPart Relocated(p,k))) c= NAT by A7,RELAT_1:def 18;
    then reconsider sdom as preProgram of SCM+FSA by B,RELAT_1:def 18,def 19;
    reconsider ii = IC Comput(ProgramPart(s+*Relocated(p,k)),s+*Relocated(p,k),
i) as Element of NAT;
    reconsider jk = IC Comput(ProgramPart(s+*Relocated(p,k)),s+*Relocated(p,k),
i) as Element of NAT;
A8: ProgramPart(Relocated(p,k)) c= Comput(ProgramPart(s+*Relocated(p,k)),s+*
Relocated(p,k),i) by AMI_1:99,FUNCT_4:26;
    IC SCM+FSA in dom Relocated(p,k) by AMISTD_2:72;
    then Relocated(p,k) is not NAT-defined by COMPOS_1:19;
    then
A9:  IC Comput(ProgramPart(s+*Relocated(p,k)),s+*Relocated(p,k),i) in dom
      ProgramPart(Relocated(p,k)) by A3,FUNCT_4:26,SCMFSA_3:17;
    then IC Comput(ProgramPart(s+*Relocated(p,k)),s+*Relocated(p,k),i) in dom
         Reloc(ProgramPart p,k) by AMISTD_2:69;
    then
A10: jk in { j+k : j in dom ProgramPart(p) } by AMISTD_2:70;
A11: not IC SCM+FSA in dom ProgramPart Relocated(p,k) by COMPOS_1:12;
    dom (sdom) = dom s /\ dom ProgramPart Relocated(p,k) by RELAT_1:90;
    then
A12: not IC SCM+FSA in dom (sdom) by A11,XBOOLE_0:def 4;
    dom (Start-At (IC Comput(ProgramPart(s+*Relocated(p,k)),s+*Relocated(p,k),i
) -'k,SCM+FSA)) = {IC
    SCM+FSA} by FUNCOP_1:19;
    then
A13: IC SCM+FSA in dom (Start-At (IC Comput(ProgramPart(s+*Relocated(p,k)),s+*
Relocated(p,k),i) -' k
    ,SCM+FSA)) by TARSKI:def 1;
    not IC SCM+FSA in dom ProgramPart p by COMPOS_1:12;
    then
A14: IC ( Comput(ProgramPart(s+*Relocated(p,k)),s+*Relocated(p,k),i) +*
Start-At (IC Comput(ProgramPart(s+*
    Relocated(p,k)),s+*
    Relocated(p,k),i) -'k,SCM+FSA) +* sdom +* ProgramPart p) =
     ( Comput(ProgramPart(s+*
    Relocated(p,k)),s+*
    Relocated(p,k),i) +*
     Start-At (IC Comput(ProgramPart(s+*Relocated(p,k)),s+*Relocated(p,k),i) -'
k,SCM+FSA) +*
    sdom).IC SCM+FSA by FUNCT_4:12
      .= ( Comput(ProgramPart(s+*Relocated(p,k)),s+*Relocated(p,k),i) +*
Start-At (IC Comput(ProgramPart(s+*
    Relocated(p,k)),s+*
    Relocated(p,k),i) -'k,SCM+FSA)).IC SCM+FSA by A12,FUNCT_4:12
      .= (Start-At
       (IC Comput(ProgramPart(s+*Relocated(p,k)),s+*Relocated(p,k),i) -'k,
SCM+FSA)).IC SCM+FSA by A13,FUNCT_4:14
      .= IC Comput(ProgramPart(s+*Relocated(p,k)),s+*Relocated(p,k),i) -' k by
FUNCOP_1:87;
    consider j being Element of NAT such that
A15: jk = j+k and
A16: j in dom ProgramPart(p) by A10;
Y:  (ProgramPart Comput(ProgramPart(s+*Relocated(p,k)),s+*Relocated(p,k),i))/.
IC Comput(ProgramPart(s+*Relocated(p,k)),s+*Relocated(p,k),i)
 = Comput(ProgramPart(s+*Relocated(p,k)),s+*Relocated(p,k),i).
 IC Comput(ProgramPart(s+*Relocated(p,k)),s+*Relocated(p,k),i) by COMPOS_1:38;
    dom Shift(pp, k) = { m+k : m in dom pp} by VALUED_1:def 12;
    then
A17: (j+k) in dom Shift(ProgramPart(p), k) by A16;
    then
A18: IncAddr((Shift(ProgramPart p, k))/.ii, k) = Reloc(
    ProgramPart p,k). (IC Comput(ProgramPart(s+*Relocated(p,k)),s+*Relocated
(p,k),i)) by A15,SCMFSA_4:24
      .= (ProgramPart Relocated(p,k)).(IC Comput(ProgramPart(s+*Relocated(p,k))
,s+*Relocated(p,k),i))
    by AMISTD_2:69
      .= CurInstr(ProgramPart Comput(ProgramPart(s+*Relocated(p,k)),s+*
Relocated(p,k),i),
       Comput(ProgramPart(s+*Relocated(p,k)),s+*Relocated(p,k),i))
        by A9,A8,Y,GRFUNC_1:8;
Y:  (ProgramPart Comput(ProgramPart(s),s,i))/.IC Comput(ProgramPart(s),s,i)
 = Comput(ProgramPart(s),s,i).IC Comput(ProgramPart(s),s,i) by COMPOS_1:38;
A19: (j+k) -' k + k = (j+k) by NAT_D:34;
    (j+k) -' k =  j by NAT_D:34;
    then CurInstr(ProgramPart Comput(ProgramPart(s),s,i),Comput(ProgramPart(s),
s,i))
     = (ProgramPart p). (IC Comput(ProgramPart(s+*
    Relocated(p,k)),s+*
    Relocated(p,k),i) -'k) by A6,A14,A15,A16,Y,FUNCT_4:14
      .= Shift(ProgramPart p, k). (IC Comput(ProgramPart(s+*Relocated(p,k)),s+*
Relocated(p,k),i)) by A15,A16,A19,VALUED_1:def 12
      .= (Shift(ProgramPart p, k))/.ii by A15,A17,PARTFUN1:def 8;
    then
A20: Exec(CurInstr(ProgramPart Comput(ProgramPart(s),s,i),Comput(ProgramPart(s)
,s,i)),
Comput(ProgramPart(s+*Relocated(p,k)),s+*Relocated(p,k),i) +*
Start-At (IC Comput(ProgramPart(s+*Relocated(p,k)),s+*Relocated(p,k),i) -'k,
SCM+FSA)) =
 Following(ProgramPart Comput(ProgramPart(s+*Relocated(p,k)),s+*Relocated(p,k),
i),
 Comput(ProgramPart(s+*Relocated(p,k)),s+*Relocated(p,k),i)) +*
Start-At ((IC
Following(ProgramPart Comput(ProgramPart(s+*Relocated(p,k)),s+*Relocated(p,k),i
),
Comput(ProgramPart(s+*Relocated(p,k)),s+*Relocated(p,k),i)))
 -'k,SCM+FSA) by A15,A18,SCMFSA_4:29;
T: ProgramPart s = ProgramPart Comput(ProgramPart(s),s,i)
by AMI_1:123;
S: ProgramPart (s+*Relocated(p,k)) = ProgramPart
Comput(ProgramPart(s+*Relocated(p,k)),s+*Relocated(p,k
),i)
by AMI_1:123;
A21: Comput(ProgramPart(s+*Relocated(p,k)),s+*Relocated(p,k),i+1)
 = Following(ProgramPart (s+*Relocated(p,k)),
 Comput(ProgramPart(s+*Relocated(p,k)),s+*Relocated(p,k),i)) by AMI_1:14;
    Comput(ProgramPart(s),s,i+1)
     = Following(ProgramPart s,Comput(ProgramPart(s),s
,i))
     by AMI_1:14
      .= Exec(CurInstr(ProgramPart Comput(ProgramPart(s),s,i),Comput(
ProgramPart(s),s,i)),
      Comput(ProgramPart(s+*Relocated(p,k)),s+*Relocated(p,k),i) +*
Start-At (IC Comput(ProgramPart(s+*Relocated(p,k)),s+*Relocated(p,k),i) -'k,
SCM+FSA) +* sdom )
 +* ProgramPart p
     by A6,T,SCMFSA_3:10
      .= Following(ProgramPart Comput(ProgramPart(s+*Relocated(p,k)),s+*
Relocated(p,k),i),
      Comput(ProgramPart(s+*Relocated(p,k)),s+*Relocated(p,k),i))
       +* Start-At ((IC
Following(ProgramPart Comput(ProgramPart(s+*Relocated(p,k)),s+*Relocated(p,k),i
),
Comput(ProgramPart(s+*Relocated(p,k)),s+*Relocated(p,k),i))) -'k,SCM+FSA) +*
sdom +*
 ProgramPart p by A20,SCMFSA_3:10;
    hence thesis by A21,S;
  end;
A22: IC SCM+FSA in dom Relocated(p,k) by AMISTD_2:72;
A23: IC Comput(ProgramPart(s+*Relocated(p,k)),s+*Relocated(p,k),0)
     = (s +* Relocated(p,k)).IC SCM+FSA by AMI_1:13
    .= IC Relocated(p,k) by A22,FUNCT_4:14;
  DataPart p c= p by RELAT_1:88;
  then
A24: DataPart p c= s by A2,XBOOLE_1:1;
  ProgramPart p c= p by RELAT_1:88;
  then
A25: ProgramPart p c= s by A2,XBOOLE_1:1;
  set DP = DataPart p;
  set IP = Start-At(IC p +k,SCM+FSA);
  set PP = ProgramPart p;
  set IS = Start-At (IC Comput(ProgramPart(s+*Relocated(p,k)),s+*Relocated(p,k)
,0)-'k,SCM+FSA);
A27: dom Start-At(IC p +k,SCM+FSA) = {IC SCM+FSA} by FUNCOP_1:19;
  set PR = ProgramPart Relocated(p,k);
  set SD = s|(dom ProgramPart Relocated(p,k));
  dom ProgramPart Relocated(p,k) c= the carrier of SCM+FSA by RELAT_1:def 18;
  then dom ProgramPart Relocated(p,k) c= dom s by PARTFUN1:def 4;
  then
A29: dom ProgramPart Relocated(p,k) = dom(s|(dom ProgramPart Relocated(p,k))
  ) by RELAT_1:91;
  {IC SCM+FSA} misses dom ProgramPart Relocated(p,k) by COMPOS_1:14;
  then
A30: {IC SCM+FSA} /\ dom ProgramPart Relocated(p,k) = {} by XBOOLE_0:def 7;
A31: dom Start-At (IC Comput(ProgramPart(s+*Relocated(p,k)),s+*Relocated(p,k),0
)-'k,SCM+FSA) =
 {IC SCM+FSA} by FUNCOP_1:19;
  then dom(Start-At (IC Comput(ProgramPart(s+*Relocated(p,k)),s+*Relocated(p,k)
,0)-'k,SCM+FSA))
   /\ dom (s|(dom
  ProgramPart Relocated(p,k))) = {IC SCM+FSA} /\ (dom s /\ dom ProgramPart
  Relocated(p,k)) by RELAT_1:90
    .= ({IC SCM+FSA} /\ dom ProgramPart Relocated(p,k)) /\ dom s by XBOOLE_1:16
    .= {} by A30;
  then
A32: dom(Start-At (IC Comput(ProgramPart(s+*Relocated(p,k)),s+*Relocated(p,k),0
)-'k,SCM+FSA))
 misses dom (s|(
  dom ProgramPart Relocated(p,k))) by XBOOLE_0:def 7;
  reconsider k as Element of NAT;
  Comput(ProgramPart(s),s,0) = s by AMI_1:13
    .= s +* PP by A25,FUNCT_4:79
    .= s +* Start-At(IC p,SCM+FSA) +* PP by A4,FUNCT_4:79
    .= s +* Start-At (IC p + k -'k,SCM+FSA) +* PP by NAT_D:34
    .= s +* IS +* PP by A23,Z,AMISTD_2:73
    .= s +* SD +* IS +* PP by FUNCT_4:80
    .= s +* PR +* SD +* IS +* PP by A29,FUNCT_4:78
    .= s +* PR +* (SD +* IS) +* PP by FUNCT_4:15
    .= s +* PR +* (IS +* SD) +* PP by A32,FUNCT_4:36
    .= s +* PR +* IS +* SD +* PP by FUNCT_4:15
    .= (s +* DP) +* PR +* IS +* SD +* PP by A24,FUNCT_4:79
    .= s +* DP +* PR +* IP +* IS +* SD +* PP by A31,A27,FUNCT_4:78
    .= s +* (DP +* PR) +* IP +* IS +* SD +* PP by FUNCT_4:15
    .= s +* (DP +* PR +* IP) +* IS +* SD +* PP by FUNCT_4:15
    .= s +* (DP +* (PR +* IP)) +* IS +* SD +* PP by FUNCT_4:15
    .= s +* (DP +* (IP +* PR)) +* IS +* SD +* PP by A27,COMPOS_1:14,FUNCT_4:36

    .= s +* (DP +* IP +* PR) +* IS +* SD +* PP by FUNCT_4:15
    .= s +* (IncrIC(NPP p,k) +* PR) +* IS +* SD +* PP by Z,COMPOS_1:75
    .= s +* Relocated(p,k) +* IS +* SD +* PP by AMISTD_2:69
    .= Comput(ProgramPart(s+*Relocated(p,k)),s+*Relocated(p,k),0) +* Start-At (
IC Comput(ProgramPart(s+*
  Relocated(p,k)),s+*
  Relocated(p,k),0)-'k,SCM+FSA) +* s|(dom ProgramPart Relocated(p,k))
   +* ProgramPart p
  by AMI_1:13;
  then
A33: X[0];
  thus for i being Element of NAT holds X[i] from NAT_1:sch 1 (A33,A5 );
end;

theorem Th16:
  for p being FinPartState of SCM+FSA st IC SCM+FSA in dom p for k
  being Element of NAT holds p is autonomic iff Relocated(p,k) is autonomic
proof
  let p be FinPartState of SCM+FSA such that
A1: IC SCM+FSA in dom p;
  let k be Element of NAT;
  hereby
    assume
A2: p is autonomic;
    thus Relocated(p,k) is autonomic
    proof
      let s1,s2 be State of SCM+FSA such that
A3:   Relocated(p,k) c= s1 and
A4:   Relocated(p,k) c= s2;
      let i be Element of NAT;
A5:   Comput(ProgramPart(s1),s1,i) = Comput(ProgramPart(s1+*p),s1+*p,i) +*
Start-At (IC Comput(ProgramPart(s1+*p),s1+*p,i) + k,SCM+FSA) +* s1|dom
ProgramPart p +* ProgramPart (Relocated(p,k))
 by A1,A2,A3,Th14;
A6:   p c= s2 +* p by FUNCT_4:26;
      p c= s1 +* p by FUNCT_4:26;
      then
A7:   Comput(ProgramPart(s1+*p),s1+*p,i)|dom (p ) = Comput(ProgramPart(s2+*p),
s2+*p,i) |dom (p ) by A2,A6,AMI_1:def 25;
      dom ProgramPart p c= the carrier of SCM+FSA by RELAT_1:def 18;
      then dom ProgramPart p c= dom s2 by PARTFUN1:def 4;
      then
A8:   dom(s2|dom ProgramPart p) = dom ProgramPart p by RELAT_1:91;
A9:   dom (Start-At ((IC Comput(ProgramPart(s2+*p),s2+*p,i))+k,SCM+FSA)) = {IC
SCM+FSA} by FUNCOP_1:19;
      then
A10:  dom(DataPart p) misses
 dom (Start-At (IC Comput(ProgramPart(s2+*p),s2+*p,i) + k,SCM+FSA))
      by COMPOS_1:13;
A11:  dom (Start-At ((IC Comput(ProgramPart(s1+*p),s1+*p,i))+k,SCM+FSA)) = {IC
SCM+FSA} by FUNCOP_1:19;
      then
A12:  dom(DataPart p) misses
 dom (Start-At (IC Comput(ProgramPart(s1+*p),s1+*p,i) + k,SCM+FSA))
      by COMPOS_1:13;
A13:  Comput(ProgramPart(s2),s2,i) = Comput(ProgramPart(s2+*p),s2+*p,i) +*
Start-At (IC Comput(ProgramPart(s2+*p),s2+*p,i) + k,SCM+FSA)
 +* s2|dom ProgramPart p +* ProgramPart (Relocated(p,k))
  by A1,A2,A4,Th14;
A14:  Comput(ProgramPart(s1),s1,i)|dom (Reloc(ProgramPart p,k)) =
      Comput(ProgramPart(s1),s1,i)|dom (ProgramPart (Relocated(p,k)))
       by AMISTD_2:69
        .= ProgramPart (Relocated(p,k)) by A5,FUNCT_4:24
        .= Comput(ProgramPart(s2),s2,i)|dom (ProgramPart (Relocated(p,k))) by
A13,FUNCT_4:24
        .= Comput(ProgramPart(s2),s2,i)|dom (Reloc(ProgramPart p,k))
by AMISTD_2:69;
      DataPart p c= p by RELAT_1:88;
      then
A15:  dom DataPart p c= dom p by GRFUNC_1:8;
      dom ProgramPart p c= the carrier of SCM+FSA by RELAT_1:def 18;
      then dom ProgramPart p c= dom s1 by PARTFUN1:def 4;
      then
A16:  dom(s1|dom ProgramPart p) = dom ProgramPart p by RELAT_1:91;
A17:  dom(DataPart p) misses dom(ProgramPart(Relocated(p,k)))by COMPOS_1:15;
      then
A18:  Comput(ProgramPart(s1),s1,i)|dom (DataPart p) = ( Comput(ProgramPart(s1+*
p),s1+*p,i) +*
Start-At (IC Comput(ProgramPart(s1+*p),s1+*p,i) + k,SCM+FSA)
 +* s1|dom ProgramPart p) | dom(DataPart
      p) by A5,FUNCT_4:76
        .= ( Comput(ProgramPart(s1+*p),s1+*p,i) +*
         Start-At (IC Comput(ProgramPart(s1+*p),s1+*p,i) + k,SCM+FSA))
      | dom(DataPart p) by A16,COMPOS_1:15,FUNCT_4:76
        .= ( Comput(ProgramPart(s1+*p),s1+*p,i)) | dom (DataPart p) by A12,
FUNCT_4:76
        .= ( Comput(ProgramPart(s2+*p),s2+*p,i)) | dom (DataPart p) by A7,A15,
RELAT_1:188
        .= ( Comput(ProgramPart(s2+*p),s2+*p,i) +*
         Start-At (IC Comput(ProgramPart(s2+*p),s2+*p,i) + k,SCM+FSA))
      | dom(DataPart p) by A10,FUNCT_4:76
        .= ( Comput(ProgramPart(s2+*p),s2+*p,i) +*
         Start-At (IC Comput(ProgramPart(s2+*p),s2+*p,i) + k,SCM+FSA)
      +* s2|dom ProgramPart p) | dom(DataPart p) by A8,COMPOS_1:15,FUNCT_4:76
        .= Comput(ProgramPart(s2),s2,i)|dom (DataPart p) by A13,A17,FUNCT_4:76;
A19:  {IC SCM+FSA} c= dom p by A1,ZFMISC_1:37;
A20:  Start-At (IC Comput(ProgramPart(s1+*p),s1+*p,i),SCM+FSA) = Comput(
ProgramPart(s1+*p),s1+*p,i)|{IC
      SCM+FSA} by COMPOS_1:10
        .= Comput(ProgramPart(s2+*p),s2+*p,i)|{IC SCM+FSA} by A7,A19,
RELAT_1:188
        .= Start-At (IC Comput(ProgramPart(s2+*p),s2+*p,i),SCM+FSA) by
COMPOS_1:10
;
A21:  dom (Start-At(IC p +k,SCM+FSA)) = {IC SCM+FSA} by FUNCOP_1:19;
      then
A22:  dom (Start-At(IC p +k,SCM+FSA)) misses dom ProgramPart (Relocated(p,k))
      by COMPOS_1:14;
      then
A23:  Comput(ProgramPart(s1),s1,i)|dom (Start-At(IC p +k,SCM+FSA)) = ( Comput(
ProgramPart(s1+*p),s1+*p,i
) +* Start-At (IC Comput(ProgramPart(s1+*p),s1+*p,i) + k,SCM+FSA)
 +* s1|dom ProgramPart p) |dom (
      Start-At(IC p +k,SCM+FSA)) by A5,FUNCT_4:76
        .= ( Comput(ProgramPart(s1+*p),s1+*p,i) +*
         Start-At (IC Comput(ProgramPart(s1+*p),s1+*p,i) + k,SCM+FSA))
      |dom (Start-At(IC p +k,SCM+FSA)) by A21,A16,COMPOS_1:14,FUNCT_4:76
        .= Start-At (IC Comput(ProgramPart(s1+*p),s1+*p,i) + k,SCM+FSA) by A21
,A11,FUNCT_4:24
        .= Start-At (IC Comput(ProgramPart(s2+*p),s2+*p,i) + k,SCM+FSA) by A20,
COMPOS_1:43
        .= ( Comput(ProgramPart(s2+*p),s2+*p,i) +*
         Start-At (IC Comput(ProgramPart(s2+*p),s2+*p,i) + k,SCM+FSA))
      |dom (Start-At(IC p +k,SCM+FSA)) by A21,A9,FUNCT_4:24
        .= ( Comput(ProgramPart(s2+*p),s2+*p,i) +*
         Start-At (IC Comput(ProgramPart(s2+*p),s2+*p,i) + k,SCM+FSA)
      +* s2|dom ProgramPart p) |dom (Start-At(IC p +k,SCM+FSA))
       by A21,A8,COMPOS_1:14,FUNCT_4:76
        .= Comput(ProgramPart(s2),s2,i)|dom (Start-At(IC p +k,SCM+FSA))
         by A13,A22,FUNCT_4:76;
U2: dom Start-At((IC p)+k,SCM+FSA) = {IC SCM+FSA} by FUNCOP_1:19;
U:  dom NPP p = {IC SCM+FSA} \/ dom DataPart p by A1,COMPOS_1:70;
Y1: Comput(ProgramPart s1,s1,i)|dom NPP p
       = Comput(ProgramPart s1,s1,i)|{IC SCM+FSA}
          \/ Comput(ProgramPart s1,s1,i)|dom DataPart p by U,RELAT_1:107
       .= Comput(ProgramPart s2,s2,i)|dom NPP p by U,U2,A23,A18,RELAT_1:107;
Y:  dom IncrIC(NPP p,k)
      = dom NPP p \/ dom Start-At((IC NPP p)+k,SCM+FSA) by FUNCT_4:def 1
     .= dom NPP p \/ dom Start-At((IC p)+k,SCM+FSA) by A1,COMPOS_1:72;
X1: Comput(ProgramPart s1,s1,i)|dom IncrIC(NPP p,k)
     = Comput(ProgramPart s1,s1,i)|dom NPP p
        \/ Comput(ProgramPart s1,s1,i)|dom Start-At((IC p)+k,SCM+FSA)
                                                  by Y,RELAT_1:107
    .= Comput(ProgramPart s2,s2,i)|dom IncrIC(NPP p,k)
         by Y,Y1,A23,RELAT_1:107;
X:    dom Relocated (p,k)
       = dom IncrIC(NPP p,k) \/ dom Reloc(ProgramPart p,k) by FUNCT_4:def 1;
     hence Comput(ProgramPart(s1),s1,i)|dom Relocated (p,k)
        = Comput(ProgramPart(s1),s1,i)|dom IncrIC(NPP p,k)
           \/ Comput(ProgramPart(s1),s1,i)|dom Reloc(ProgramPart p,k)
                                                  by RELAT_1:107
       .= Comput(ProgramPart(s2),s2,i)|dom Relocated (p,k)
           by X1,A14,X,RELAT_1:107;
    end;
  end;
  assume
A25: Relocated(p,k) is autonomic;
  thus p is autonomic
  proof
    DataPart (Relocated(p,k)) c= Relocated(p,k) by RELAT_1:88;
    then DataPart p c= Relocated(p,k) by AMISTD_2:68;
    then
A26: dom (DataPart p) c= dom (Relocated(p,k)) by GRFUNC_1:8;
    let s1,s2 be State of SCM+FSA such that
A27: p c= s1 and
A28: p c= s2;
    let i be Element of NAT;
A29: Comput(ProgramPart(s2),s2,i) = Comput(ProgramPart(s2+*Relocated(p,k)),s2+*
Relocated(p,k),i) +* Start-At (IC
Comput(ProgramPart(s2+*Relocated(p,k)),s2+*Relocated(p,k),i) -'k,SCM+FSA) +*
 s2|dom ProgramPart Relocated(p,k) +*
    ProgramPart (p) by A1,A25,A28,Th15;
A30: Comput(ProgramPart(s1),s1,i) = Comput(ProgramPart(s1+*Relocated(p,k)),s1+*
Relocated(p,k),i) +* Start-At (IC
Comput(ProgramPart(s1+*Relocated(p,k)),s1+*Relocated(p,k),i) -'k,SCM+FSA) +*
 s1|dom ProgramPart Relocated(p,k) +*
    ProgramPart (p) by A1,A25,A27,Th15;
    then
A31: Comput(ProgramPart(s1),s1,i)|dom (ProgramPart p) = ProgramPart (p) by
FUNCT_4:24
      .= Comput(ProgramPart(s2),s2,i)|dom (ProgramPart p) by A29,FUNCT_4:24;
    dom ProgramPart Relocated(p,k) c= the carrier of SCM+FSA by RELAT_1:def 18;
    then dom ProgramPart Relocated(p,k) c= dom s1 by PARTFUN1:def 4;
    then
A32: dom(s1|dom ProgramPart Relocated(p,k)) = dom ProgramPart Relocated(p,
    k) by RELAT_1:91;
A33: Relocated(p,k) c= s2 +* Relocated(p,k) by FUNCT_4:26;
    Relocated(p,k) c= s1 +* Relocated(p,k) by FUNCT_4:26;
    then
A34: Comput(ProgramPart(s1+*Relocated(p,k)),s1+*Relocated(p,k),i)|dom (
Relocated(p,k)) = Comput(ProgramPart(
    s2+*Relocated(p,k)),
    s2+*Relocated(p,k),i)|dom (Relocated(p,k)) by A25,A33,AMI_1:def 25;
    dom ProgramPart Relocated(p,k) c= the carrier of SCM+FSA by RELAT_1:def 18;
    then dom ProgramPart Relocated(p,k) c= dom s2 by PARTFUN1:def 4;
    then
A35: dom(s2|dom ProgramPart Relocated(p,k)) = dom ProgramPart Relocated(p,
    k) by RELAT_1:91;
A36: dom (Start-At ((IC Comput(ProgramPart(s2+*Relocated(p,k)),s2+*Relocated(p,
k),i)) -'k,SCM+FSA)) = {IC
    SCM+FSA} by FUNCOP_1:19;
    then
A37: dom(DataPart p) misses dom(Start-At (IC Comput(ProgramPart(s2+*Relocated(p
,k
    )),s2+*Relocated(p,k
    ),i) -'k,SCM+FSA)) by COMPOS_1:13;
A38: dom (Start-At ((IC Comput(ProgramPart(s1+*Relocated(p,k)),s1+*Relocated(p,
k),i)) -'k,SCM+FSA)) = {IC
    SCM+FSA} by FUNCOP_1:19;
    then
A39: dom(DataPart p) misses dom(Start-At (IC Comput(ProgramPart(s1+*Relocated(p
,k
    )),s1+*Relocated(p,k
    ),i) -'k,SCM+FSA)) by COMPOS_1:13;
A40: dom (DataPart p) misses dom (ProgramPart p) by COMPOS_1:15;
    then
A41: Comput(ProgramPart(s1),s1,i)|dom (DataPart p) = ( Comput(ProgramPart(s1+*
Relocated(p,k)
    ),s1+*Relocated(p,k)
    ,i) +* Start-At (IC Comput(ProgramPart(s1+*Relocated(p,k)),s1+*Relocated(p,
k),i) -'k,SCM+FSA)
     +* s1|dom
    ProgramPart Relocated(p,k)) | dom(DataPart p) by A30,FUNCT_4:76
      .= ( Comput(ProgramPart(s1+*Relocated(p,k)),s1+*Relocated(p,k),i) +*
Start-At (IC Comput(ProgramPart(s1
    +*Relocated(p,k)),s1
    +*Relocated(p,k),i) -'k,SCM+FSA)) | dom(DataPart p)
     by A32,COMPOS_1:15,FUNCT_4:76
      .= ( Comput(ProgramPart(s1+*Relocated(p,k)),s1+*Relocated(p,k),i)) | dom
(DataPart p) by A39,FUNCT_4:76
      .= ( Comput(ProgramPart(s2+*Relocated(p,k)),s2+*Relocated(p,k),i)) | dom
(DataPart p) by A34,A26,RELAT_1:188
      .= ( Comput(ProgramPart(s2+*Relocated(p,k)),s2+*Relocated(p,k),i) +*
Start-At (IC Comput(ProgramPart(s2
    +*Relocated(p,k)),s2
    +*Relocated(p,k),i) -'k,SCM+FSA)) | dom(DataPart p) by A37,FUNCT_4:76
      .= ( Comput(ProgramPart(s2+*Relocated(p,k)),s2+*Relocated(p,k),i) +*
Start-At (IC Comput(ProgramPart(s2
+*Relocated(p,k)),s2
+*Relocated(p,k),i) -'k,SCM+FSA) +* s2|dom ProgramPart Relocated(p,k)) |
 dom(DataPart
    p) by A35,COMPOS_1:15,FUNCT_4:76
      .= Comput(ProgramPart(s2),s2,i)|dom (DataPart p) by A29,A40,FUNCT_4:76;
    IC SCM+FSA in dom Relocated(p,k) by AMISTD_2:72;
    then
A42: {IC SCM+FSA} c= dom Relocated(p,k) by ZFMISC_1:37;
A43: Start-At (IC Comput(ProgramPart(s1+*Relocated(p,k)),s1+*Relocated(p,k),i),
SCM+FSA) = Comput(ProgramPart(s1+*
    Relocated(p,k)),s1+*
    Relocated(p,k),i)|{IC SCM+FSA} by COMPOS_1:10
      .= Comput(ProgramPart(s2+*Relocated(p,k)),s2+*Relocated(p,k),i)|{IC
SCM+FSA} by A34,A42,RELAT_1:188
      .= Start-At (IC Comput(ProgramPart(s2+*Relocated(p,k)),s2+*Relocated(p,k)
,i),SCM+FSA) by COMPOS_1:10;
A44: dom (Start-At(IC p,SCM+FSA)) = {IC SCM+FSA} by FUNCOP_1:19;
    then
A45: dom (Start-At(IC p,SCM+FSA)) misses dom (ProgramPart p) by COMPOS_1:14;
    then
A46: Comput(ProgramPart(s1),s1,i)|dom (Start-At(IC p,SCM+FSA)) =
 ( Comput(ProgramPart(s1+*Relocated
    (p,k)),s1+*Relocated
    (p,k),i) +* Start-At (IC Comput(ProgramPart(s1+*Relocated(p,k)),s1+*
Relocated(p,k),i) -'k,SCM+FSA)
     +* s1|dom
    ProgramPart Relocated(p,k)) |dom (Start-At(IC p,SCM+FSA)) by A30,FUNCT_4:76
      .= ( Comput(ProgramPart(s1+*Relocated(p,k)),s1+*Relocated(p,k),i) +*
Start-At (IC Comput(ProgramPart(s1
+*Relocated(p,k)),s1
+*Relocated(p,k),i) -'k,SCM+FSA)) |dom (Start-At(IC p,SCM+FSA))
 by A44,A32,COMPOS_1:14,FUNCT_4:76
      .= Start-At (IC Comput(ProgramPart(s1+*Relocated(p,k)),s1+*Relocated(p,k)
,i) -'k,SCM+FSA)
       by A44,A38,FUNCT_4:24
      .= Start-At (IC Comput(ProgramPart(s2+*Relocated(p,k)),s2+*Relocated(p,k)
,i) -'k,SCM+FSA)
       by A43,COMPOS_1:44
      .= ( Comput(ProgramPart(s2+*Relocated(p,k)),s2+*Relocated(p,k),i) +*
Start-At (IC Comput(ProgramPart(s2
    +*Relocated(p,k)),s2
    +*Relocated(p,k),i) -'k,SCM+FSA)) |dom (Start-At(IC p,SCM+FSA))
     by A44,A36,FUNCT_4:24
      .= ( Comput(ProgramPart(s2+*Relocated(p,k)),s2+*Relocated(p,k),i) +*
Start-At (IC Comput(ProgramPart(s2
+*Relocated(p,k)),s2
+*Relocated(p,k),i) -'k,SCM+FSA) +* s2|dom ProgramPart Relocated(p,k))
 |dom (Start-At
    (IC p,SCM+FSA)) by A44,A35,COMPOS_1:14,FUNCT_4:76
      .= Comput(ProgramPart(s2),s2,i)|dom (Start-At(IC p,SCM+FSA)) by A29,A45,
FUNCT_4:76;
A47: Comput(ProgramPart(s1),s1,i)|dom (Start-At(IC p,SCM+FSA) +* ProgramPart p)
=
Comput(ProgramPart(s1),s1,i)|(dom (Start-At(IC p,SCM+FSA)) \/ dom (ProgramPart
p)) by FUNCT_4:def 1
      .= Comput(ProgramPart(s2),s2,i)|dom (Start-At(IC p,SCM+FSA)) \/
       Comput(ProgramPart(s2),s2,i)|dom (
    ProgramPart p) by A46,A31,RELAT_1:107
      .= Comput(ProgramPart(s2),s2,i)|(dom (Start-At(IC p,SCM+FSA)) \/
       dom (ProgramPart p)) by RELAT_1:107
      .= Comput(ProgramPart(s2),s2,i)|dom (Start-At(IC p,SCM+FSA) +*
ProgramPart p) by FUNCT_4:def 1;
    thus Comput(ProgramPart(s1),s1,i)|dom p =
     Comput(ProgramPart(s1),s1,i)|dom (Start-At(IC p,SCM+FSA) +*
    ProgramPart p +* DataPart p ) by A1,COMPOS_1:18
      .= Comput(ProgramPart(s1),s1,i)|(dom (Start-At(IC p,SCM+FSA) +*
ProgramPart p)
       \/ dom (
    DataPart p)) by FUNCT_4:def 1
      .= Comput(ProgramPart(s2),s2,i)|dom (Start-At(IC p,SCM+FSA) +*
ProgramPart p ) \/
    Comput(ProgramPart(s2),s2,i)|dom (DataPart p) by A41,A47,RELAT_1:107
      .= Comput(ProgramPart(s2),s2,i)|(dom (Start-At(IC p,SCM+FSA) +*
ProgramPart p)
       \/ dom (
    DataPart p)) by RELAT_1:107
      .= Comput(ProgramPart(s2),s2,i)|dom (Start-At(IC p,SCM+FSA) +*
ProgramPart p
       +* DataPart
    p) by FUNCT_4:def 1
      .= Comput(ProgramPart(s2),s2,i)|dom p by A1,COMPOS_1:18;
  end;
end;

theorem Th17:
  for p being halting autonomic FinPartState of SCM+FSA st IC
  SCM+FSA in dom p for k being Element of NAT
   holds DataPart(Result(ProgramPart(p),p)) =
  DataPart(Result(ProgramPart(Relocated(p,k)),Relocated(p,k)))
proof
  let p be halting autonomic FinPartState of SCM+FSA such that
A1: IC SCM+FSA in dom p;
  let k be Element of NAT;
  consider s being State of SCM+FSA such that
A2: p c= s by PBOOLE:156;
A3: Relocated(p,k) is autonomic by A1,Th16;
A4: Relocated(p,k) is halting by A1,Th13;
  ProgramPart s halts_on s by A2,AMI_1:def 26;
  then consider j1 being Element of NAT such that
A5: Result(ProgramPart(s),s) = Comput(ProgramPart(s),s,j1) and
A6: CurInstr(ProgramPart s, Result(ProgramPart(s),s)) =
halt SCM+FSA by AMI_1:def 22;
  consider t being State of SCM+FSA such that
A7: Relocated(p,k) c= t by PBOOLE:156;
  (ProgramPart t).(IC Comput(ProgramPart(t),t,j1))
   = t.(IC Comput(ProgramPart(t),t,j1)) by COMPOS_1:2
  .= CurInstr(ProgramPart t,Comput(ProgramPart(t),t,j1))
   by COMPOS_1:38
    .= IncAddr(CurInstr(ProgramPart(s),Comput(ProgramPart(s),s,j1)), k)
     by A1,A2,A7,Th12
    .= halt SCM+FSA by A5,A6,SCMFSA_4:8;
  then
A8: Result(ProgramPart(t),t) = Comput(ProgramPart(t),t,j1) by AMI_1:56;
  thus DataPart(Result(ProgramPart(p),p)) = DataPart((Result(ProgramPart(s),s))
|dom p) by A2,AMI_1:def 29
    .= (Result(ProgramPart(s),s)) | (dom p /\(Int-Locations \/ FinSeq-Locations
)) by RELAT_1:100,SCMFSA_2:127
    .= (Result(ProgramPart(s),s)) | dom DataPart p by RELAT_1:90,SCMFSA_2:127
    .= (Result(ProgramPart(t),t)) | dom (DataPart Relocated(p,k)) by A1,A2,A5
,A7,A8,Th12
    .= (Result(ProgramPart(t),t)) | (dom Relocated(p,k) /\ (Int-Locations \/
  FinSeq-Locations)) by RELAT_1:90,SCMFSA_2:127
    .= DataPart((Result(ProgramPart(t),t)) | dom Relocated(p,k)) by RELAT_1:100
,SCMFSA_2:127
    .= DataPart (Result(ProgramPart(Relocated(p,k)),Relocated(p,k))) by A7,A4
,A3,AMI_1:def 29;
  reconsider s3 = s +* DataPart t as State of SCM+FSA;
end;

:: Relocatability

theorem
  for F being PartFunc of FinPartSt SCM+FSA, FinPartSt SCM+FSA, p being
  FinPartState of SCM+FSA st IC SCM+FSA in dom p & F is data-only for k being
  Element of NAT holds ProgramPart p, p computes F
   iff ProgramPart Relocated( p,k) ,Relocated( p,k) computes F
proof
  let F be PartFunc of FinPartSt SCM+FSA ,FinPartSt SCM+FSA, p be FinPartState
  of SCM+FSA such that
A1: IC SCM+FSA in dom p and
A2: F is data-only;
  let k be Element of NAT;
F1: ProgramPart p +* p = p by FUNCT_4:119;
F2: ProgramPart Relocated(p,k) +* Relocated(p,k) = Relocated(p,k)
              by FUNCT_4:119;
  hereby
    assume
A3: ProgramPart p, p computes F;
    thus ProgramPart Relocated( p,k) ,Relocated( p,k) computes F
    proof
      let x be set;
      assume
A4:   x in dom F;
      then consider d1 being FinPartState of SCM+FSA such that
A5:   x = d1 and
A6:   ProgramPart p +* p +* d1 is pre-program of SCM+FSA and
A7:   F.d1 c= Result(ProgramPart p,p +* d1) by A3,AMI_1:def 30;
      dom F c= FinPartSt SCM+FSA by RELAT_1:def 18;
      then reconsider d = x as FinPartState of SCM+FSA by A4,COMPOS_1:25;
      reconsider d as data-only FinPartState of SCM+FSA by A2,A4,
COMPOS_1:def 24;
X:    Relocated(p,k) +* d = Relocated(p +* d,k) by AMISTD_2:78;
xx:   dom d misses NAT by COMPOS_1:40;
      then
x:    ProgramPart(p +* d)= ProgramPart p by FUNCT_4:76;
y:    ProgramPart(Relocated(p,k) +* d) = ProgramPart Relocated(p,k)
               by xx,FUNCT_4:76;
      dom(p +* d) = dom p \/ dom d by FUNCT_4:def 1;
      then
A8:   IC SCM+FSA in dom(p +* d) by A1,XBOOLE_0:def 3;
  then
A9:   DataPart(Result(ProgramPart p,p +* d1))
        = DataPart(Result(ProgramPart Relocated(p,k),Relocated(p +* d,k)))
      by A5,A6,F1,Th17,x,X,y
        .= DataPart(Result(ProgramPart Relocated(p,k),Relocated(p,k) +* d))
         by AMISTD_2:78;
      reconsider Fs1 = F.d1 as FinPartState of SCM+FSA by A7;
      take d;
      thus x=d;
      Relocated(p,k) +* d = Relocated((p +* d) ,k) by AMISTD_2:78;
      hence ProgramPart Relocated(p,k) +* Relocated(p,k) +* d
       is pre-program of SCM+FSA by A5,A6,A8,Th13,Th16,F1,F2;
A10:  Fs1 is data-only by A2,A4,A5,COMPOS_1:def 24;
      then F.d1 c= DataPart(Result(ProgramPart p,p +* d1)) by A7,COMPOS_1:17;
      hence thesis by A5,A10,A9,COMPOS_1:17;
    end;
  end;
  assume
A11: ProgramPart Relocated( p,k) ,Relocated( p,k) computes F;
  let x be set;
  assume
A12: x in dom F;
  then consider d1 being FinPartState of SCM+FSA such that
A13: x = d1 and
A14: ProgramPart Relocated(p,k) +* Relocated(p,k) +* d1
     is pre-program of SCM+FSA
      and
A15: F.d1 c= Result(ProgramPart Relocated (p,k),Relocated (p,k) +* d1)
by A11,AMI_1:def 30;
  dom F c= FinPartSt SCM+FSA by RELAT_1:def 18;
  then reconsider d = x as FinPartState of SCM+FSA by A12,COMPOS_1:25;
  reconsider d as data-only FinPartState of SCM+FSA by A2,A12,COMPOS_1:def 24;
X:    Relocated(p,k) +* d = Relocated(p +* d,k) by AMISTD_2:78;
xx:   dom d misses NAT by COMPOS_1:40;
      then
x:    ProgramPart(p +* d)= ProgramPart p by FUNCT_4:76;
y:    ProgramPart(Relocated(p,k) +* d) = ProgramPart Relocated(p,k)
               by xx,FUNCT_4:76;
  dom(p +* d) = dom p \/ dom d by FUNCT_4:def 1;
  then
A16: IC SCM+FSA in dom(p +* d) by A1,XBOOLE_0:def 3;
A17: Relocated(p,k) +* d = Relocated((p +* d),k) by AMISTD_2:78;
  then
A18: p +* d is autonomic by A13,A14,A16,Th16,F2;
  then
A19: p +* d is halting by A13,A14,A17,A16,Th13,F2;
A20: DataPart(Result(ProgramPart Relocated(p,k),Relocated(p,k) +* d1))
      = DataPart(Result(ProgramPart(Relocated(p,k)),Relocated(p +*d,k)))
       by A13,A17,Th13,F2,A16,Th16
    .= DataPart(Result(ProgramPart p,p +* d))
     by A16,A18,A19,Th17,x,y,X;
  take d;
  thus x=d;
  thus ProgramPart p +* p +* d is pre-program of SCM+FSA
   by A13,A14,A17,A16,A18,Th13,F1,F2;
  reconsider Fs1 = F.d1 as FinPartState of SCM+FSA by A15;
A21: Fs1 is data-only by A2,A12,A13,COMPOS_1:def 24;
  then F.d1 c= DataPart(Result(ProgramPart Relocated(p,k),Relocated(p,k)
+* d1)) by A15,COMPOS_1:17;
  hence thesis by A13,A21,A20,COMPOS_1:17;
end;

