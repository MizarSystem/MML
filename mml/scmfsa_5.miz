:: Relocability for { \bf SCM_FSA }
::  by Andrzej Trybulec and Yatsuka Nakamura
::
:: Received February 22, 1996
:: Copyright (c) 1996 Association of Mizar Users

environ

 vocabularies AMI_1, SCMFSA_2, RELOC, AMI_3, FUNCT_4, AMI_5, BOOLE, RELAT_1,
      FUNCT_1, AMI_2, ARYTM_1, NAT_1, ABSVALUE, FINSEQ_1, FINSEQ_2, CARD_3,
      PARTFUN1, FINSEQ_4, ARYTM, SCMNORM;
 notations TARSKI, XBOOLE_0, ENUMSET1, SUBSET_1, NUMBERS, XCMPLX_0, INT_2,
      INT_1, NAT_1, NAT_D,
      PARTFUN1, RELAT_1, FUNCT_1, FINSEQ_1, FINSEQ_2,
      FUNCT_2, FUNCT_4, FUNCT_7, CARD_3, STRUCT_0, AMI_1, SCMNORM, SCMFSA_2,
      SCMFSA_4, XXREAL_0;
 constructors DOMAIN_1, XXREAL_0, NAT_1, INT_2, RELOC, PARTFUN1, SCMFSA_4,
      SCMNORM, NAT_D;
 registrations XBOOLE_0, SETFAM_1, FUNCT_1, RELSET_1, FRAENKEL, NUMBERS,
      XREAL_0, INT_1, CARD_3, AMI_1, SCMFSA_2, ORDINAL1, SCMNORM, FINSEQ_1,
      FUNCT_4, FINSET_1;
 requirements NUMERALS, SUBSET, BOOLE, ARITHM;
 definitions FUNCOP_1, AMI_1, TARSKI, SCMFSA_2, SCMNORM;
 theorems AMI_1, GRFUNC_1, NAT_1, FUNCOP_1, TARSKI, FUNCT_4, FUNCT_1, FUNCT_2,
      ZFMISC_1, RELAT_1, RELSET_1, SCMFSA_2, ENUMSET1, SCMFSA_3, SCMFSA_4,
      XBOOLE_0, XBOOLE_1, PARTFUN1, FINSET_1, CARD_3, BINARITH, ORDINAL1,
      VALUED_1, SCMNORM, NAT_D;
 schemes NAT_1;

begin  :: Relocability

reserve j, k, m for Element of NAT;

definition
  let p be FinPartState of SCM+FSA, k be Element of NAT;
  func Relocated( p, k ) -> FinPartState of SCM+FSA equals
  Start-At ((IC p)+k)+* IncAddr([Shift(ProgramPart(p),k)],k)+*DataPart p;
  correctness;
end;

Lm1: NAT misses Int-Locations \/ FinSeq-Locations
by SCMFSA_2:13,14,XBOOLE_1:70;

theorem Th1:
  for p being FinPartState of SCM+FSA,k being Element of NAT
  holds DataPart(Relocated(p,k)) = DataPart(p)
proof
  let p be FinPartState of SCM+FSA,k be Element of NAT;
A3: DataPart Start-At ((IC p)+k) = {} by AMI_1:138;
A4: dom IncAddr([Shift(ProgramPart(p),k)],k) c= NAT by AMI_1:def 40;
A5: dom DataPart p c= Int-Locations \/ FinSeq-Locations
                      by RELAT_1:87,SCMFSA_2:127;
  reconsider kk = DataPart Start-At ((IC p)+k) as Function;
  reconsider rr = DataPart (IncAddr([Shift(ProgramPart(p),k)],k)+*DataPart p)
                 as Function;
  thus DataPart(Relocated(p,k))
    = DataPart
    (Start-At ((IC p)+k)+* (IncAddr([Shift(ProgramPart p,k)],k)+*DataPart p))
       by FUNCT_4:15
    .= kk +* rr by FUNCT_4:75
    .= DataPart(IncAddr([Shift(ProgramPart p,k)],k)+*DataPart p)
                            by A3,FUNCT_4:21
    .= DataPart p by A4,A5,Lm1,FUNCT_4:81,SCMFSA_2:127;
end;

theorem Th2:
  for p being FinPartState of SCM+FSA,k being Element of NAT
  holds ProgramPart(Relocated(p,k)) = IncAddr([Shift(ProgramPart p,k)],k)
proof
  let p be FinPartState of SCM+FSA,k be Element of NAT;
  set X = (Start-At ((IC p)+k)) | NAT;
  consider x being Element of dom X;
  now
    assume dom X <> {};
    then x in dom X;
    then
A1: x in dom (Start-At ((IC p)+k)) /\ NAT by RELAT_1:90;
    then x in NAT by XBOOLE_0:def 3;
    then reconsider x as Instruction-Location of SCM+FSA by AMI_1:def 4;
    x in dom (Start-At ((IC p)+k)) by A1,XBOOLE_0:def 3;
    then x in {IC SCM+FSA} by FUNCOP_1:19;
    then x = IC SCM+FSA by TARSKI:def 1;
    hence contradiction by AMI_1:48;
  end;
  then
A2: (Start-At ((IC p)+k)) | NAT = {} by FUNCT_2:55;
A3: dom IncAddr([Shift(ProgramPart p,k)],k) c= NAT by AMI_1:def 40;
A4: dom DataPart p c= Int-Locations \/ FinSeq-Locations
                      by RELAT_1:87,SCMFSA_2:127;
  reconsider kk = (Start-At ((IC p)+k)) | NAT as Function;
  reconsider rr = (IncAddr([Shift(ProgramPart p,k)],k)+*DataPart p)
  | NAT as Function;
  thus ProgramPart(Relocated(p,k))
  =(Start-At ((IC p)+k)+* (IncAddr([Shift(ProgramPart p,k)],k)+*DataPart p))
  | NAT by FUNCT_4:15
    .= kk +* rr by FUNCT_4:75
    .= (IncAddr([Shift(ProgramPart p,k)],k)+*DataPart p) | NAT by A2,FUNCT_4:21
    .= IncAddr([Shift(ProgramPart p,k)],k) by A3,A4,Lm1,FUNCT_4:81;
end;

theorem Th3:
  for p being FinPartState of SCM+FSA holds dom ProgramPart(Relocated(p,k))
  = { j+k: j in dom ProgramPart(p) }
proof
  let p be FinPartState of SCM+FSA;
  thus dom ProgramPart(Relocated(p,k))
  = dom IncAddr([Shift(ProgramPart p,k)],k) by Th2
    .= dom [Shift(ProgramPart p,k)] by SCMFSA_4:def 6
    .= { j+k: j in dom ProgramPart(p) } by VALUED_1:def 12;
end;

theorem Th4:
  for p being FinPartState of SCM+FSA, k being Element of NAT,
  l being Instruction-Location of SCM+FSA
  holds l in dom p iff l+k in dom Relocated(p,k)
proof
  let p be FinPartState of SCM+FSA,k be Element of NAT,
  l be Instruction-Location of SCM+FSA;
  reconsider m = l as Element of NAT by ORDINAL1:def 13;
A3: dom ProgramPart(Relocated(p,k))
  = { j+k: j in dom ProgramPart(p) } by Th3;
  ProgramPart(Relocated(p,k)) c= Relocated(p,k) by RELAT_1:88;
  then
A4: dom ProgramPart(Relocated(p,k)) c= dom Relocated(p,k) by GRFUNC_1:8;
  hereby
    assume l in dom p;
    then insloc m in dom ProgramPart p by AMI_1:106;
    then l + k in dom ProgramPart(Relocated(p,k)) by A3;
    hence l + k in dom Relocated(p,k) by A4;
  end;
  assume l + k in dom Relocated(p,k);
  then l + k in dom ProgramPart(Relocated(p,k)) by AMI_1:106;
  then consider j such that
A5: l + k = j+k and
A6:  j in dom ProgramPart p by A3;
  ProgramPart p c= p by RELAT_1:88;
  then dom ProgramPart p c= dom p by GRFUNC_1:8;
  hence l in dom p by A5,A6;
end;

theorem Th5:
  for p being FinPartState of SCM+FSA , k being Element of NAT
  holds IC SCM+FSA in dom Relocated(p,k)
proof
  let p be FinPartState of SCM+FSA, k be Element of NAT;
A1: Relocated(p,k)
  = Start-At ((IC p)+k) +* (IncAddr([Shift(ProgramPart p,k)],k)+*DataPart p)
  by FUNCT_4:15;
  dom(Start-At((IC p)+k)) = {IC SCM+FSA} by FUNCOP_1:19;
  then IC SCM+FSA in dom (Start-At((IC p)+k)) by TARSKI:def 1;
  hence IC SCM+FSA in dom Relocated(p,k) by A1,FUNCT_4:13;
end;

theorem Th6:
  for p being FinPartState of SCM+FSA, k being Element of NAT
  holds IC Relocated(p,k) = (IC p) + k
proof
  let p be FinPartState of SCM+FSA, k be Element of NAT;
A1: Relocated(p,k) = Start-At ((IC p)+k)
  +* (IncAddr([Shift(ProgramPart p,k)],k)+*DataPart p) by FUNCT_4:15;
  ProgramPart(Relocated(p,k)) = IncAddr([Shift(ProgramPart p,k)],k) by Th2;
  then not IC SCM+FSA in dom(IncAddr([Shift(ProgramPart p,k)],k)) &
  not IC SCM+FSA in dom(DataPart p) by AMI_1:100,101;
  then
A2: not IC SCM+FSA in dom(IncAddr([Shift(ProgramPart p,k)],k)+*DataPart p )
  by FUNCT_4:13;
  IC SCM+FSA in dom Relocated(p,k) by Th5;
  hence IC Relocated(p,k) = Relocated(p,k).IC SCM+FSA by AMI_1:def 43
    .= (Start-At ((IC p)+k)).IC SCM+FSA by A1,A2,FUNCT_4:12
    .= (IC p) +k by FUNCOP_1:87;
end;

theorem Th7:
  for p being FinPartState of SCM+FSA, k being Element of NAT,
  loc being Element of NAT, I being Instruction of SCM+FSA
  st loc in dom ProgramPart p & I = p.loc
  holds IncAddr(I, k) = (Relocated(p, k)).(loc + k)
proof
  let p be FinPartState of SCM+FSA, k be Element of NAT,
  loc be Element of NAT,
  I be Instruction of SCM+FSA such that
A1: loc in dom ProgramPart p & I = p.loc;
A2: ProgramPart p c= p by RELAT_1:88;
  reconsider i = loc as Element of NAT;
  i+k in { j+k : j in dom ProgramPart(p) } by A1;
  then
A4: loc + k in dom ProgramPart(Relocated(p, k)) by Th3;
A5: loc in dom IncAddr([ProgramPart p],k) by A1,SCMFSA_4:def 6;
A6: I = (ProgramPart p).loc by A1,A2,GRFUNC_1:8;
  ProgramPart (Relocated(p, k)) c= (Relocated(p, k)) by RELAT_1:88;
  then (Relocated(p, k)).(loc+k)
  = (ProgramPart(Relocated(p, k))).(loc+k) by A4,GRFUNC_1:8
    .= (IncAddr([Shift(ProgramPart p,k)],k)).(loc+k) by Th2
    .= (Shift(IncAddr([ProgramPart p],k),k)).(loc+k) by SCMFSA_4:35
    .= (IncAddr([ProgramPart p],k)).loc by A5,VALUED_1:def 12
    .= IncAddr(pi([ProgramPart p], loc),k) by A1,SCMFSA_4:24
    .= IncAddr(I,k) by A1,A6,AMI_1:def 47;
  hence thesis;
end;

theorem Th8:
  for p being FinPartState of SCM+FSA,k being Element of NAT
  holds Start-At (IC p + k) c= Relocated(p,k)
proof
  let p be FinPartState of SCM+FSA, k be Element of NAT;
A1: Start-At (IC p + k) = {[IC SCM+FSA,IC p + k]} by FUNCT_4:87;
A2: IC SCM+FSA in dom (Relocated(p,k)) by Th5;
A3: IC Relocated(p,k) = IC p + k by Th6;
  IC Relocated(p,k) = Relocated(p,k).IC SCM+FSA by A2,AMI_1:def 43;
  then
A4: [IC SCM+FSA,IC p + k] in Relocated(p,k) by A2,A3,FUNCT_1:def 4;
  thus Start-At (IC p + k) c= Relocated(p,k)
  proof
    let x be set;
    assume x in Start-At (IC p + k);
    hence x in Relocated(p,k) by A1,A4,TARSKI:def 1;
  end;
end;

theorem Th9:
  for s being data-only FinPartState of SCM+FSA,
  p being FinPartState of SCM+FSA,
  k being Element of NAT st IC SCM+FSA in dom p holds
  Relocated((p +* s), k) = Relocated(p,k) +* s
proof
  let s be data-only FinPartState of SCM+FSA, p be FinPartState of SCM+FSA,
  k be Element of NAT;
  assume
A1: IC SCM+FSA in dom p;
  then
A2: IC SCM+FSA in dom p \/ dom s by XBOOLE_0:def 2;
A3: not IC SCM+FSA in Int-Locations \/ FinSeq-Locations
  proof
    assume
A4: not thesis;
    per cases by A4,XBOOLE_0:def 2;
    suppose IC SCM+FSA in Int-Locations;
      then IC SCM+FSA is Int-Location by SCMFSA_2:11;
      hence contradiction by SCMFSA_2:81;
    end;
    suppose IC SCM+FSA in FinSeq-Locations;
      then IC SCM+FSA is FinSeq-Location by SCMFSA_2:12;
      hence contradiction by SCMFSA_2:82;
    end;
  end;
A5: dom s c= Int-Locations \/ FinSeq-Locations by AMI_1:139,SCMFSA_2:127;
  then
A6: not IC SCM+FSA in dom s by A3;
  IC SCM+FSA in dom (p +* s) by A2,FUNCT_4:def 1;
  then
A7: IC (p +* s) = (p +* s).IC SCM+FSA by AMI_1:def 43
    .= p.IC SCM+FSA by A2,A6,FUNCT_4:def 1
    .= IC p by A1,AMI_1:def 43;
  dom s misses NAT by A5,Lm1,XBOOLE_1:63;
  then
A8: ProgramPart (p +* s) = ProgramPart p by FUNCT_4:76;
A9: DataPart (p +* s) = DataPart p +* DataPart s by FUNCT_4:75
    .= DataPart p +* s by A5,RELAT_1:97,SCMFSA_2:127;
  thus Relocated((p +* s), k) = Relocated(p,k) +*s by A7,A8,A9,FUNCT_4:15;
end;

theorem Th10:
  for k being Element of NAT, p being autonomic FinPartState of SCM+FSA ,
  s1, s2 being State of SCM+FSA st p c= s1 & Relocated(p,k) c= s2
  holds p c= s1 +* DataPart s2
proof
  let k be Element of NAT, p be autonomic FinPartState of SCM+FSA ,
  s1, s2 be State of SCM+FSA such that
A1: p c= s1 & Relocated(p,k) c= s2;
  reconsider s = s1 +*
  s2|(Int-Locations \/ FinSeq-Locations) as State of SCM+FSA;
  set s3 = DataPart s2;
A2: dom p c= Int-Locations \/ FinSeq-Locations \/ {IC SCM+FSA} \/ NAT
  by AMI_1:80,SCMFSA_2:8;
  then
A3: dom p c= dom s by AMI_1:79,SCMFSA_2:8;
  now
    let x be set such that
A4: x in dom p;
    Int-Locations c= dom s2 & FinSeq-Locations c= dom s2 by SCMFSA_2:69 ,70;
    then Int-Locations \/ FinSeq-Locations =
    dom s2 /\ (Int-Locations \/ FinSeq-Locations) by XBOOLE_1:8,28;
    then
A5: dom s3 = Int-Locations \/ FinSeq-Locations by RELAT_1:90,SCMFSA_2:127;
A6: x in Int-Locations \/ FinSeq-Locations \/ {IC SCM+FSA} or x in NAT
    by A2,A4,XBOOLE_0:def 2;
    per cases by A6,XBOOLE_0:def 2;
    suppose x in {IC SCM+FSA};
      then
A7:   x = IC SCM+FSA by TARSKI:def 1;
      not IC SCM+FSA in
      Int-Locations \/ FinSeq-Locations by SCMFSA_3:1,2,XBOOLE_0:def 2;
      then s1.x = s.x by A5,A7,FUNCT_4:12,SCMFSA_2:127;
      hence p.x = s.x by A1,A4,GRFUNC_1:8;
    end;
    suppose
A8:   x in Int-Locations \/ FinSeq-Locations;
      set DPp = DataPart p;
      x in dom p /\ (Int-Locations \/
      FinSeq-Locations) by A4,A8,XBOOLE_0:def 3;
      then
A10:  x in dom DPp by RELAT_1:90,SCMFSA_2:127;
      DPp c= p by RELAT_1:88;
      then
A11:  DPp.x = p.x by A10,GRFUNC_1:8;
      DPp = DataPart Relocated(p, k) by Th1;
      then DPp c= Relocated(p, k) by RELAT_1:88;
      then
A12:  DPp c= s2 by A1,XBOOLE_1:1;
      then
A13:  DPp.x = s2.x by A10,GRFUNC_1:8;
A14:  dom DPp c= dom s2 by A12,GRFUNC_1:8;
A15:  s2.x = s3.x by A8,FUNCT_1:72,SCMFSA_2:127;
      x in dom s2 /\ (Int-Locations \/ FinSeq-Locations) by A8,A10,A14,
      XBOOLE_0:def 3;
      then x in dom s3 by RELAT_1:90,SCMFSA_2:127;
      hence p.x = s.x by A11,A13,A15,FUNCT_4:14,SCMFSA_2:127;
    end;
    suppose
A16:  x in NAT;
      now
        assume x in dom s3;
        then x in dom s2 /\ (Int-Locations \/ FinSeq-Locations)
         by RELAT_1:90,SCMFSA_2:127;
        then x in Int-Locations \/ FinSeq-Locations by XBOOLE_0:def 3;
        hence contradiction by A16,Lm1,XBOOLE_0:3;
      end;
      then s1.x = s.x by FUNCT_4:12,SCMFSA_2:127;
      hence p.x = s.x by A1,A4,GRFUNC_1:8;
    end;
  end;
  hence p c= s1 +* DataPart s2 by A3,GRFUNC_1:8,SCMFSA_2:127;
end;

begin :: Main theorems of relocatability

theorem
  for k being Element of NAT
  for p being autonomic FinPartState of SCM+FSA st IC SCM+FSA in dom p
  for s being State of SCM+FSA st p c= s for i being Element of NAT
  holds Computation(s+*Relocated(p,k),i)
  = Computation(s,i) +* Start-At (IC Computation(s,i) + k)
  +* ProgramPart (Relocated(p,k))
proof
  let k be Element of NAT;
  let p be autonomic FinPartState of SCM+FSA such that
A1: IC SCM+FSA in dom p;
  let s be State of SCM+FSA such that
A2: p c= s;
  dom DataPart p misses {IC SCM+FSA} by AMI_1:100,ZFMISC_1:56;
  then
A3: dom DataPart p misses dom (Start-At ((IC p) + k)) by FUNCOP_1:19;
  (NAT) misses dom DataPart p by RELAT_1:87,SCMFSA_2:127,Lm1,XBOOLE_1:63;
  then dom DataPart p misses dom (ProgramPart (Relocated(p,k))) by RELSET_1:12,
  XBOOLE_1:63;
  then dom DataPart p /\ dom (ProgramPart (Relocated(p,k))) = {} by
  XBOOLE_0:def 7;
  then dom DataPart p /\ dom (Start-At ((IC p) + k))
  \/ dom DataPart p /\ dom (ProgramPart (Relocated(p,k))) = {}
  by A3,XBOOLE_0:def 7;
  then dom DataPart p /\ (dom (Start-At ((IC p) + k))
  \/ dom (ProgramPart (Relocated(p,k)))) = {} by XBOOLE_1:23;
  then dom DataPart p misses (dom (Start-At ((IC p) + k))
  \/ dom (ProgramPart (Relocated(p,k)))) by XBOOLE_0:def 7;
  then dom DataPart p misses dom (Start-At ((IC p) + k)
  +* ProgramPart (Relocated(p,k))) by FUNCT_4:def 1;
  then
A5: (Start-At ((IC p) + k) +* ProgramPart (Relocated(p,k))) +* DataPart p
  = DataPart p +* (Start-At ((IC p) + k) +*
  ProgramPart (Relocated(p,k))) by FUNCT_4:36;
A6: IC p = p.IC SCM+FSA by A1,AMI_1:def 43
    .= IC s by A1,A2,GRFUNC_1:8;
  DataPart p c= p by RELAT_1:88;
  then
A7: DataPart p c= s by A2,XBOOLE_1:1;
A8: Computation(s,0) = s by AMI_1:13;
  defpred X[Element of NAT] means Computation(s+*Relocated(p,k),$1)
  = Computation(s,$1)+* Start-At (IC Computation(s,$1)+ k)
  +* ProgramPart (Relocated(p,k));
   Computation(s+*Relocated(p,k),0)= s +* (Start-At ((IC p)+k) +*
  IncAddr([Shift(ProgramPart p,k)],k)+*DataPart p) by AMI_1:13
    .= s +* ((Start-At ((IC p) + k) +*
  ProgramPart (Relocated(p,k))) +* DataPart p) by Th2
    .= s +* DataPart p +* (Start-At ((IC p) + k) +*
  ProgramPart (Relocated(p,k))) by A5,FUNCT_4:15
    .= s +* DataPart p +* Start-At ((IC p) + k) +*
  ProgramPart (Relocated(p,k)) by FUNCT_4:15
    .= Computation(s,0) +* Start-At (IC Computation(s,0) + k)
  +* ProgramPart (Relocated(p,k)) by A6,A7,A8, FUNCT_4:79;
  then
A9: X[0];
A10: for i being Element of NAT st X[i] holds X[i+1]
  proof
    let i be Element of NAT such that
A11: Computation(s+*Relocated(p,k),i)
    = Computation(s,i) +* Start-At (IC Computation(s,i) + k)
    +* ProgramPart (Relocated(p,k));
A12:  Computation(s,i+1) = Following( Computation(s,i)) by AMI_1:14;
    dom (Start-At (IC Computation(s,i) + k)) = {IC SCM+FSA} by FUNCOP_1:19;
    then
A13: IC SCM+FSA in dom (Start-At (IC Computation(s,i) + k)) by
    TARSKI:def 1;
    not IC SCM+FSA in dom ProgramPart(Relocated(p,k)) by AMI_1:101;
    then
A14: IC ( Computation(s,i) +* Start-At (IC Computation(s,i) + k)
    +* [ProgramPart (Relocated(p,k))]) = ( Computation(s,i)
    +* Start-At (IC Computation(s,i) + k)).IC SCM+FSA by FUNCT_4:12
      .= (Start-At (IC Computation(s,i) + k)).IC SCM+FSA by A13,FUNCT_4:14
      .= IC Computation(s,i) + k by FUNCOP_1:87;
    p is not programmed by A1,AMI_1:109;
    then
A15: IC Computation(s,i) in dom [ProgramPart p] by A2,SCMFSA_3:17;
    then
A16: IC Computation(s,i) in dom IncAddr([ProgramPart p],k)
    by SCMFSA_4:def 6;
A17: ProgramPart(p) c= Computation(s,i) by A2,AMI_1:99;
    reconsider ii = IC Computation(s,i) as Element of NAT
     by ORDINAL1:def 13;
A18: pi([ProgramPart p],ii)
    = [ProgramPart p].IC Computation(s,i) by A15,AMI_1:def 47
      .= ( Computation(s,i)).IC Computation(s,i) by A15,A17,GRFUNC_1:8;
    ProgramPart p c= p by RELAT_1:88;
    then dom ProgramPart p c= dom p by GRFUNC_1:8;
    then (IC Computation(s,i) + k) in dom (Relocated(p,k)) by A15,Th4;
    then (IC Computation(s,i) + k) in dom (ProgramPart (Relocated(p,k)))
    by AMI_1:106;
    then
A19: CurInstr ( Computation(s+*Relocated(p,k),i))
    = (ProgramPart (Relocated(p,k))).(IC Computation(s,i) + k)
    by A11,A14,FUNCT_4:14
      .= IncAddr([Shift(ProgramPart p,k)],k).(IC Computation(s,i) + k)
    by Th2
      .= Shift(IncAddr([ProgramPart p],k),k).(IC Computation(s,i) + k)
    by SCMFSA_4:35
      .= IncAddr([ProgramPart p],k).ii by A16,VALUED_1:def 12
      .= IncAddr (CurInstr  Computation(s,i),k) by A15,A18,SCMFSA_4:24;
A20: Exec(IncAddr(CurInstr  Computation(s,i),k),  Computation(s,i)
    +* Start-At (IC Computation(s,i) + k)) = Following( Computation(s,i))
    +* Start-At ((IC Following Computation(s,i)) + k) by SCMFSA_4:28;
    thus Computation(s+*Relocated(p,k),i+1)
    = Following( Computation(s+*Relocated(p,k),i)) by AMI_1:14
      .= Computation(s,i+1) +* Start-At (IC Computation(s,i+1) + k)
    +* [ProgramPart Relocated(p,k)] by A11,A12,A19,A20,SCMFSA_3:10
      .= Computation(s,i+1) +* Start-At (IC Computation(s,i+1) + k)
    +* ProgramPart Relocated(p,k);
  end;
  thus for i being Element of NAT holds X[i] from NAT_1:sch 1 (A9,A10);
end;

theorem Th12:
  for k being Element of NAT, p being autonomic FinPartState of SCM+FSA,
  s1, s2 being State of SCM+FSA
  st IC SCM+FSA in dom p & p c= s1 & Relocated(p,k) c= s2
  for i being Element of NAT holds
  IC Computation(s1,i) + k = IC Computation(s2,i) &
  IncAddr(CurInstr( Computation(s1,i)), k) = CurInstr( Computation(s2,i)) &
   Computation(s1,i)|dom (DataPart p)
  = Computation(s2,i)|dom (DataPart (Relocated(p,k))) &
   DataPart Computation(s1 +* DataPart s2,i) = DataPart Computation(s2,i)
proof
  let k be Element of NAT, p be autonomic FinPartState of SCM+FSA,
  s1,s2 be State of SCM+FSA such that
A1: IC SCM+FSA in dom p and
A2: p c= s1 and
A3: Relocated(p,k) c= s2;
  set s3 = s1 +* DataPart s2;
A5: IC SCM+FSA in dom Relocated(p,k) by Th5;
A6: DataPart p = DataPart (Relocated(p,k)) by Th1;
A7: DataPart p c= p by RELAT_1:88;
A8: DataPart (Relocated(p,k)) c= Relocated(p,k) by RELAT_1:88;
A9: p is non programmed by A1,AMI_1:109;
A10: p c= s3 by A2,A3,Th10;
  defpred Y[Element of NAT] means
  IC Computation(s1,$1) + k = IC Computation(s2,$1) &
  IncAddr(CurInstr( Computation(s1,$1)), k) = CurInstr( Computation(s2,$1)) &
   Computation(s1,$1)|dom (DataPart p)
  = Computation(s2,$1)|dom (DataPart (Relocated(p,k))) &
   DataPart Computation(s3,$1) = DataPart Computation(s2,$1);
    reconsider ii = IC p as Element of NAT;
  now
    thus IC Computation(s1,0) + k = IC s1 + k by AMI_1:13
      .= IC p + k by A1,A2,AMI_1:97
      .= IC Relocated(p,k) by Th6
      .= IC s2 by A3,A5,AMI_1:97
      .= IC Computation(s2,0) by AMI_1:13;
    reconsider loc = IC p as Instruction-Location of SCM+FSA;
A11: IC p = IC s1 by A1,A2,AMI_1:97;
    then IC p = IC Computation(s1,0) by AMI_1:13;
    then
A12: loc in dom ProgramPart p by A2,A9,SCMFSA_3:17;
    ProgramPart p c= p by RELAT_1:88;
    then
A13: dom ProgramPart p c= dom p by GRFUNC_1:8;
    then
A14: p.ii = s1.IC s1 by A2,A11,A12,GRFUNC_1:8;
A15: IncAddr(CurInstr( Computation(s1,0)), k)
    = IncAddr(CurInstr(s1), k) by AMI_1:13
      .= IncAddr(s1.IC s1, k);
A16: IC SCM+FSA in dom Relocated(p, k) by Th5;
A17: (IC p) + k in dom Relocated(p,k) by A12,A13,Th4;
    CurInstr( Computation(s2,0)) = CurInstr(s2) by AMI_1:13
      .= s2.(IC Relocated(p, k)) by A3,A16,AMI_1:97
      .= s2.((IC p) + k) by Th6
      .= (Relocated(p,k)).((IC p) + k) by A3,A17,GRFUNC_1:8;
    hence IncAddr(CurInstr( Computation(s1,0)), k)
    = CurInstr( Computation(s2,0)) by A12,A14,A15,Th7;
    thus Computation(s1,0)|dom (DataPart p)
    = s1 | dom (DataPart p) by AMI_1:13
      .= DataPart p by A2,A7,GRFUNC_1:64,XBOOLE_1:1
      .= s2 | dom (DataPart p) by A3,A6,A8,GRFUNC_1:64,XBOOLE_1:1
      .= Computation(s2,0)|dom (DataPart (Relocated(p,k))) by A6,
    AMI_1:13;
    thus DataPart Computation(s3,0)
    = DataPart(s1 +* DataPart s2) by AMI_1:13
      .= DataPart s2 by CARD_3:99
      .= DataPart Computation(s2,0) by AMI_1:13;
  end;
  then
A19: Y[0];
A20: for i being Element of NAT st Y[i] holds Y[i+1]
  proof
    let i be Element of NAT such that
A21: IC Computation(s1,i) + k = IC Computation(s2,i) and
A22: IncAddr
    (CurInstr( Computation(s1,i)), k) = CurInstr( Computation(s2,i)) and
A23:  Computation(s1,i)|dom (DataPart p)
    = Computation(s2,i)|dom (DataPart (Relocated(p,k))) and
A24:  DataPart Computation(s3,i) = DataPart Computation(s2,i);
    set Cs1i = Computation(s1,i);
    set Cs2i = Computation(s2,i);
    set Cs3i = Computation(s3,i);
    set Cs1i1 = Computation(s1,i+1);
    set Cs2i1 = Computation(s2,i+1);
    set Cs3i1 = Computation(s3,i+1);
    set DPp = DataPart p;
A25: dom DataPart p = dom DataPart(Relocated(p, k)) by Th1;
A26: dom Cs1i1 = Int-Locations \/ FinSeq-Locations \/ {IC SCM+FSA} \/ NAT
    by AMI_1:79,SCMFSA_2:8;
A27: dom Cs2i1 = Int-Locations \/ FinSeq-Locations \/ {IC SCM+FSA} \/ NAT
    by AMI_1:79,SCMFSA_2:8;
A28: dom Cs1i = Int-Locations \/ FinSeq-Locations \/ {IC SCM+FSA} \/ NAT
    by AMI_1:79,SCMFSA_2:8;
A29: dom Cs2i = Int-Locations \/ FinSeq-Locations \/ {IC SCM+FSA} \/ NAT
    by AMI_1:79,SCMFSA_2:8;
    dom DPp = dom p /\(Int-Locations \/ FinSeq-Locations)
            by FUNCT_1:68,SCMFSA_2:127;
    then
A30: dom DPp c= {IC SCM+FSA} \/ (Int-Locations \/
    FinSeq-Locations) by XBOOLE_1:10,17;
A31: dom (Cs1i1|dom DPp) = dom Cs1i1 /\ dom DPp by FUNCT_1:68
      .= dom DPp by A26,A30,XBOOLE_1:10,28;
A32: dom (Cs2i1|dom DataPart(Relocated(p, k)))
    = dom Cs2i1 /\ dom DPp by A25,FUNCT_1:68
      .= dom DPp by A27,A30,XBOOLE_1:10,28;
A33: dom (Cs1i|dom DPp) = dom Cs1i /\ dom DPp by FUNCT_1:68
      .= dom DPp by A28,A30,XBOOLE_1:10,28;
A34: dom (Cs2i|dom DataPart(Relocated(p, k)))
    = dom Cs2i /\ dom DPp by A25,FUNCT_1:68
      .= dom DPp by A29,A30,XBOOLE_1:10,28;
A35: dom DataPart Cs3i =
    Int-Locations \/ FinSeq-Locations by SCMNORM:14,SCMFSA_2:127;
A36: dom DataPart Cs2i =
    Int-Locations \/ FinSeq-Locations by SCMNORM:14,SCMFSA_2:127;
A37: dom DataPart Cs3i1 =
    Int-Locations \/ FinSeq-Locations by SCMNORM:14,SCMFSA_2:127;
A38: dom DataPart Cs2i1 =
    Int-Locations \/ FinSeq-Locations by SCMNORM:14,SCMFSA_2:127;
A39: now
      let s be State of SCM+FSA, d be Int-Location;
      d in Int-Locations by SCMFSA_2:9;
      then d in Int-Locations \/ FinSeq-Locations by XBOOLE_0:def 2;
      hence d in dom DataPart s by SCMNORM:14,SCMFSA_2:127;
    end;
A40: now
      let s be State of SCM+FSA, d be FinSeq-Location;
      d in FinSeq-Locations by SCMFSA_2:10;
      then d in Int-Locations \/ FinSeq-Locations by XBOOLE_0:def 2;
      hence d in dom DataPart s by SCMNORM:14,SCMFSA_2:127;
    end;
A41: now
      let d be Int-Location;
A42:  d in dom DataPart Cs3i & d in dom DataPart Cs3i by A39;
      hence Cs3i.d = (DataPart Cs3i).d by FUNCT_1:70
        .= Cs2i.d by A24,A42,FUNCT_1:70;
    end;
A43: now
      let d be FinSeq-Location;
A44:  d in dom (DataPart Cs3i) &
      d in dom (DataPart Cs3i) by A40;
      hence Cs3i.d = (DataPart Cs3i).d by FUNCT_1:70
        .= Cs2i.d by A24,A44,FUNCT_1:70;
    end;
A45: now
      let x,d be set such that
A46:  d = x & d in dom DPp and
A47:  Cs1i1.d = Cs1i.d & Cs2i1.d = Cs2i.d;
      (Cs1i|dom DPp).d = Cs1i.d & (Cs2i|dom DPp).d = Cs2i.d
      by A25,A33,A34,A46,FUNCT_1:70;
      hence (Cs1i1|dom DPp).x = Cs2i1.d by A23,A25,A31,A46,A47,FUNCT_1:70
        .= (Cs2i1|dom DPp).x by A25,A32,A46,FUNCT_1:70;
    end;
A48: now
      let x,d be set such that
A49:  d = x & d in dom DPp and
A50:  Cs1i1.d = Cs2i1.d;
      thus (Cs1i1|dom DPp).x = Cs2i1.d by A31,A49,A50,FUNCT_1:70
        .= (Cs2i1|dom DPp).x by A25,A32,A49,FUNCT_1:70;
    end;
A51: now
      let x be set;
      assume
A52:  x in dom (Cs3i1|(Int-Locations \/ FinSeq-Locations)) &
      Cs3i1.x = Cs2i1.x;
      hence (DataPart Cs3i1).x
      = Cs2i1.x by FUNCT_1:70,SCMFSA_2:127
        .= (DataPart Cs2i1).x
      by A37,A38,A52,FUNCT_1:70,SCMFSA_2:127;
    end;
A53: now
      let x be set;
      assume
A54:  x in dom (DataPart Cs3i1) &
      Cs3i1.x = Cs3i.x & Cs2i1.x = Cs2i.x;
      then (DataPart Cs3i).x = Cs3i.x &
      (DataPart Cs2i).x = Cs2i.x
      by A35,A36,A37,FUNCT_1:70;
      hence (DataPart Cs3i1).x
      = (DataPart Cs2i1).x by A24,A51,A54,SCMFSA_2:127;
    end;
A55: now
      assume
A56:  IC Computation(s1,i+1) + k = IC Computation(s2,i+1);
      reconsider loc = IC Cs1i1 as Instruction-Location of SCM+FSA;
      reconsider ii = loc as Element of NAT by ORDINAL1:def 13;
A57:  ii in dom ProgramPart p by A2,A9,SCMFSA_3:17;
      ProgramPart p c= p by RELAT_1:88;
      then
A58:  dom ProgramPart p c= dom p by GRFUNC_1:8;
A59:  CurInstr(Cs1i1) = s1.loc by AMI_1:54
        .= p.ii by A2,A57,A58,GRFUNC_1:8;
      loc + k in dom Relocated(p, k) by A57,A58,Th4;
      then Relocated(p, k).(loc + k) = s2.(loc+k) by A3,GRFUNC_1:8
        .= Cs2i1.(loc + k) by AMI_1:54;
      hence IncAddr(CurInstr( Computation(s1,i+1)), k)
      = CurInstr( Computation(s2,i+1)) by A56,A57,A59,Th7;
    end; :: INNERLEMMA
A60: Cs1i1 = Following Cs1i by AMI_1:14
      .= Exec (CurInstr Cs1i, Cs1i);
A61: Cs2i1 = Following Cs2i by AMI_1:14
      .= Exec (CurInstr Cs2i, Cs2i);
A62: Cs3i1 = Following Cs3i by AMI_1:14
      .= Exec (CurInstr Cs1i, Cs3i) by A2,A9,A10,SCMFSA_3:18;
  reconsider j = IC Cs1i as Element of NAT by ORDINAL1:def 13;
A64: Next (IC Cs1i + k) = insloc(j+k+1) by NAT_1:39
      .= insloc(j+1) + k
      .= ((Next IC Cs1i) qua Instruction-Location of SCM+FSA) + k
    by NAT_1:39;
    set I = CurInstr(Cs1i);
A65: InsCode I <= 11+1 by SCMFSA_2:35;
A66: InsCode I <= 10+1 implies InsCode I <= 10 or InsCode I = 11 by NAT_1:8;
A67: InsCode I <= 9+1 implies InsCode I <= 8+1 or InsCode I = 10 by NAT_1:8;
    per cases by A65,A66,A67,NAT_1:8,33;
    suppose InsCode I = 0;
      then
A68:  I = halt SCM+FSA by SCMFSA_2:122;
      then
A69:  CurInstr(Cs2i) = halt SCM+FSA by A22,SCMFSA_4:8;
      thus IC Computation(s1,i+1) + k = IC Cs1i + k by A60,A68,AMI_1:def 8
        .= IC Computation(s2,i+1) by A21,A61,A69,AMI_1:def 8;
      hence IncAddr(CurInstr( Computation(s1,i+1)), k)
      = CurInstr( Computation(s2,i+1)) by A55;
A70:  Cs2i1 = Cs2i & Cs1i1 = Cs1i by A60,A61,A68,A69,AMI_1:def 8;
      hence  Computation(s1,i+1)|dom (DataPart p)
      = Computation(s2,i+1)|dom (DataPart (Relocated(p,k))) by A23;
      thus DataPart Cs3i1 =
      DataPart Cs2i1
      by A24,A62,A68,A70,AMI_1:def 8;
    end;
    suppose InsCode I = 1;
      then consider da, db being Int-Location such that
A71:  I = da := db by SCMFSA_2:54;
A72:  IncAddr(I, k) = da := db by A71,SCMFSA_4:9;
A73:  Exec(I, Cs1i).IC SCM+FSA = Next IC Cs1i by A71,SCMFSA_2:89;
A74:  Cs3i.db = Cs2i.db by A41; thus
      IC Computation(s1,i+1) + k
      = IC Computation(s2,i+1) by A21,A22,A60,A61,A64,A72,A73,SCMFSA_2:89;
      thus IncAddr(CurInstr( Computation(s1,i+1)), k)
      = CurInstr( Computation(s2,i+1)) by A21,A22,A55,A60,A61,A64,A72,A73,
      SCMFSA_2:89;
      now
        let x be set;
        assume
A75:    x in dom (Cs1i1|dom DPp);
A76:    dom DPp c= Int-Locations \/ FinSeq-Locations
                      by RELAT_1:87,SCMFSA_2:127;
        per cases by A31,A75,A76,XBOOLE_0:def 2;
        suppose x in FinSeq-Locations;
          then reconsider d = x as FinSeq-Location by SCMFSA_2:12;

Cs1i1.d = Cs1i.d & Cs2i1.d = Cs2i.d by A22,A60,A61,A71,A72,SCMFSA_2:89;
          hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A31,A45,A75;
        end;
        suppose
A77:      da = x;
          then
A78:      Cs1i1.x = Cs1i.db by A60,A71,SCMFSA_2:89;
A79:      Cs2i1.x = Cs2i.db by A22,A61,A72,A77,SCMFSA_2:89;
          DPp c= p by RELAT_1:88;
          then dom DPp c= dom p by GRFUNC_1:8;
          then Cs3i.db = Cs1i.db by A2,A9,A10,A31,A71,A75,A77,SCMFSA_3:19;

hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A31,A48,A74,A75,A78,A79;
        end;
        suppose
A80:      da <> x & x in Int-Locations;
          then reconsider d = x as Int-Location by SCMFSA_2:11;
          Cs1i1.d = Cs1i.d & Cs2i1.d = Cs2i.d by A22,A60,A61,A71,A72,A80,
          SCMFSA_2:89;
          hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A31,A45,A75;
        end;
      end;
      then (Cs1i1|dom DPp) c= (Cs2i1|dom DPp) by A25,A31,A32,GRFUNC_1:8;
      hence  Computation(s1,i+1)|dom (DataPart p)
      = Computation(s2,i+1)|dom (DataPart (Relocated(p,k)))
      by A25,A31,A32,GRFUNC_1:9;
      now
        let x be set;
        assume
A81:    x in dom (DataPart Cs3i1);
        per cases by A37,A81,XBOOLE_0:def 2;
        suppose x in FinSeq-Locations;
          then reconsider f = x as FinSeq-Location by SCMFSA_2:12;
A82:      Cs3i1.f = Cs3i.f by A62,A71,SCMFSA_2:89;
          Cs2i1.f = Cs2i.f by A22,A61,A72,SCMFSA_2:89;
          hence (DataPart Cs3i1).x =
          (DataPart Cs2i1).x by A53,A81,A82;
        end;
        suppose
A83:      da = x;
          Cs2i1.da = Cs2i.db & Cs3i1.da=Cs3i.db by A22,A61,A62,A71,A72,
          SCMFSA_2:89;
          hence (DataPart Cs3i1).x =
          (DataPart Cs2i1).x by A41,A51,A81,A83,SCMFSA_2:127;
        end;
        suppose
A84:      da <> x & x in Int-Locations;
          then reconsider d = x as Int-Location by SCMFSA_2:11;
A85:      Cs3i1.d = Cs3i.d by A62,A71,A84,SCMFSA_2:89;
          Cs2i1.d = Cs2i.d by A22,A61,A72,A84,SCMFSA_2:89;
          hence (DataPart Cs3i1).x =
          (DataPart Cs2i1).x by A53,A81,A85;
        end;
      end;
      then DataPart Cs3i1 c=
       DataPart Computation(s2,i+1)
      by A37,A38,GRFUNC_1:8;
      hence DataPart Cs3i1 =
       DataPart Computation(s2,i+1)
      by A37,A38,GRFUNC_1:9;
    end;
    suppose InsCode I = 2;
      then consider da, db being Int-Location such that
A86:  I = AddTo(da, db) by SCMFSA_2:55;
A87:  IncAddr(I, k) = AddTo(da, db) by A86,SCMFSA_4:10;
A88:  Exec(I, Cs1i).IC SCM+FSA = Next IC Cs1i by A86,SCMFSA_2:90;
A89:  Cs3i.da = Cs2i.da by A41;
A90:  Cs3i.db = Cs2i.db by A41; thus
      IC Computation(s1,i+1) + k
      = IC Computation(s2,i+1) by A21,A22,A60,A61,A64,A87,A88,SCMFSA_2:90;
      thus IncAddr(CurInstr( Computation(s1,i+1)), k)
      = CurInstr( Computation(s2,i+1)) by A21,A22,A55,A60,A61,A64,A87,A88,
      SCMFSA_2:90;
      now
        let x be set such that
A91:    x in dom (Cs1i1|dom DPp);
A92:    dom DPp c= Int-Locations \/ FinSeq-Locations
                      by RELAT_1:87,SCMFSA_2:127;
        per cases by A31,A91,A92,XBOOLE_0:def 2;
        suppose x in FinSeq-Locations;
          then reconsider d = x as FinSeq-Location by SCMFSA_2:12;
          Cs1i1.d=Cs1i.d & Cs2i1.d = Cs2i.d
          by A22,A60,A61,A86,A87,SCMFSA_2:90;
          hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A31,A45,A91;
        end;
        suppose
A93:      da = x;
          then
A94:      Cs1i1.x = Cs1i.da + Cs1i.db by A60,A86,SCMFSA_2:90;
          DPp c= p by RELAT_1:88;
          then
A95:      dom DPp c= dom p by GRFUNC_1:8;
          Cs2i1.x = Cs2i.da + Cs2i.db by A22,A61,A87,A93,SCMFSA_2:90;

then Cs1i1.x = Cs2i1.x by A2,A9,A10,A31,A86,A89,A90,A91,A93,A94,A95,SCMFSA_3:
          20;
          hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A31,A48,A91;
        end;
        suppose
A96:      da <> x & x in Int-Locations;
          then reconsider d = x as Int-Location by SCMFSA_2:11;
          Cs1i1.d=Cs1i.d & Cs2i1.d = Cs2i.d
          by A22,A60,A61,A86,A87,A96,SCMFSA_2:90;
          hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A31,A45,A91;
        end;
      end;
      then (Cs1i1|dom DPp) c= (Cs2i1|dom DPp) by A25,A31,A32,GRFUNC_1:8;
      hence  Computation(s1,i+1)|dom (DataPart p)
      = Computation(s2,i+1)|dom (DataPart (Relocated(p,k)))
      by A25,A31,A32,GRFUNC_1:9;
      now
        let x be set;
        assume
A97:    x in dom (DataPart Cs3i1);
        per cases by A37,A97,XBOOLE_0:def 2;
        suppose x in FinSeq-Locations;
          then reconsider d = x as FinSeq-Location by SCMFSA_2:12;
A98:      Cs3i1.d = Cs3i.d by A62,A86,SCMFSA_2:90;
          Cs2i1.d = Cs2i.d by A22,A61,A87,SCMFSA_2:90;
          hence (DataPart Cs3i1).x =
          (DataPart Cs2i1).x by A53,A97,A98;
        end;
        suppose
A99:      da = x;
          then
A100:     Cs2i1.x = Cs2i.da + Cs2i.db by A22,A61,A87,SCMFSA_2:90;
          Cs3i1.x = Cs3i.da + Cs3i.db by A62,A86,A99,SCMFSA_2:90;
          hence (DataPart Cs3i1).x =
          (DataPart Cs2i1).x
          by A51,A89,A90,A97,A100,SCMFSA_2:127;
        end;
        suppose
A101:     da <> x & x in Int-Locations;
          then reconsider d = x as Int-Location by SCMFSA_2:11;
A102:     Cs3i1.d = Cs3i.d by A62,A86,A101,SCMFSA_2:90;
          Cs2i1.d = Cs2i.d by A22,A61,A87,A101,SCMFSA_2:90;
          hence (DataPart Cs3i1).x =
          (DataPart Cs2i1).x by A53,A97,A102;
        end;
      end;
      then DataPart Cs3i1 c=
       DataPart Computation(s2,i+1)
      by A37,A38,GRFUNC_1:8;
      hence DataPart Cs3i1 =
       DataPart Computation(s2,i+1)
      by A37,A38,GRFUNC_1:9;
    end;
    suppose InsCode I = 3;
      then consider da, db being Int-Location such that
A103: I = SubFrom(da, db) by SCMFSA_2:56;
A104: IncAddr(I, k) = SubFrom(da, db) by A103,SCMFSA_4:11;
A105: Exec(I, Cs1i).IC SCM+FSA = Next IC Cs1i by A103,SCMFSA_2:91;
A106: Cs3i.da = Cs2i.da by A41;
A107: Cs3i.db = Cs2i.db by A41; thus
      IC Computation(s1,i+1) + k
      = IC Computation(s2,i+1) by A21,A22,A60,A61,A64,A104,A105,SCMFSA_2:91;
      thus IncAddr(CurInstr( Computation(s1,i+1)), k)
      = CurInstr( Computation(s2,i+1)) by A21,A22,A55,A60,A61,A64,A104,A105
      ,SCMFSA_2:91;
      now
        let x be set such that
A108:   x in dom (Cs1i1|dom DPp);
A109:   dom DPp c= Int-Locations \/ FinSeq-Locations
                      by RELAT_1:87,SCMFSA_2:127;
        per cases by A31,A108,A109,XBOOLE_0:def 2;
        suppose x in FinSeq-Locations;
          then reconsider d = x as FinSeq-Location by SCMFSA_2:12;
          Cs1i1.d = Cs1i.d &
          Cs2i1.d = Cs2i.d by A22,A60,A61,A103,A104,SCMFSA_2:91;
          hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A31,A45,A108;
        end;
        suppose
A110:     da = x;
          then
A111:     Cs1i1.x = Cs1i.da - Cs1i.db by A60,A103,SCMFSA_2:91;
          DPp c= p by RELAT_1:88;
          then
A112:     dom DPp c= dom p by GRFUNC_1:8;
          Cs2i1.x = Cs2i.da - Cs2i.db by A22,A61,A104,A110,SCMFSA_2:91;

then Cs1i.da - Cs1i.db = Cs2i1.x by A2,A9,A10,A31,A103,A106,A107,A108, A110
          ,A112,SCMFSA_3:21;
          hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A31,A48,A108,A111;
        end;
        suppose
A113:     da <> x & x in Int-Locations;
          then reconsider d = x as Int-Location by SCMFSA_2:11;
          Cs1i1.d = Cs1i.d &
          Cs2i1.d = Cs2i.d by A22,A60,A61,A103,A104,A113,SCMFSA_2:91;
          hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A31,A45,A108;
        end;
      end;
      then (Cs1i1|dom DPp) c= (Cs2i1|dom DPp) by A25,A31,A32,GRFUNC_1:8;
      hence  Computation(s1,i+1)|dom (DataPart p)
      = Computation(s2,i+1)|dom (DataPart (Relocated(p,k)))
      by A25,A31,A32,GRFUNC_1:9;
      now
        let x be set;
        assume
A114:   x in dom (DataPart Cs3i1);
        per cases by A37,A114,XBOOLE_0:def 2;
        suppose x in FinSeq-Locations;
          then reconsider d = x as FinSeq-Location by SCMFSA_2:12;
A115:     Cs3i1.d = Cs3i.d by A62,A103,SCMFSA_2:91;
          Cs2i1.d = Cs2i.d by A22,A61,A104,SCMFSA_2:91;
          hence (DataPart Cs3i1).x =
          (DataPart Cs2i1).x by A53,A114,A115;
        end;
        suppose
A116:     da = x;
          then
A117:     Cs2i1.x = Cs2i.da - Cs2i.db by A22,A61,A104,SCMFSA_2: 91;
          Cs3i1.x = Cs3i.da - Cs3i.db by A62,A103,A116,SCMFSA_2:91;
          hence (DataPart Cs3i1).x =
          (DataPart Cs2i1).x
          by A51,A106,A107,A114,A117,SCMFSA_2:127;
        end;
        suppose
A118:     da <> x & x in Int-Locations;
          then reconsider d = x as Int-Location by SCMFSA_2:11;
A119:     Cs3i1.d = Cs3i.d by A62,A103,A118,SCMFSA_2:91;
          Cs2i1.d = Cs2i.d by A22,A61,A104,A118,SCMFSA_2:91;
          hence (DataPart Cs3i1).x =
          (DataPart Cs2i1).x by A53,A114,A119;
        end;
      end;
      then DataPart Cs3i1 c=
       DataPart Computation(s2,i+1)
      by A37,A38,GRFUNC_1:8;
      hence DataPart Cs3i1 =
       DataPart Computation(s2,i+1)
      by A37,A38,GRFUNC_1:9;
    end;
    suppose InsCode I = 4;
      then consider da, db being Int-Location such that
A120: I = MultBy(da, db) by SCMFSA_2:57;
A121: IncAddr(I, k) = MultBy(da, db) by A120,SCMFSA_4:12;
A122: Exec(I, Cs1i).IC SCM+FSA = Next IC Cs1i by A120,SCMFSA_2:92;
A123: Cs3i.da = Cs2i.da by A41;
A124: Cs3i.db = Cs2i.db by A41; thus
      IC Computation(s1,i+1) + k
      = IC Computation(s2,i+1) by A21,A22,A60,A61,A64,A121,A122,SCMFSA_2:92;
      thus IncAddr(CurInstr( Computation(s1,i+1)), k)
      = CurInstr( Computation(s2,i+1)) by A21,A22,A55,A60,A61,A64,A121,A122
      ,SCMFSA_2:92;
      now
        let x be set such that
A125:   x in dom (Cs1i1|dom DPp);
A126:   dom DPp c= Int-Locations \/ FinSeq-Locations
                      by RELAT_1:87,SCMFSA_2:127;
        per cases by A31,A125,A126,XBOOLE_0:def 2;
        suppose x in FinSeq-Locations;
          then reconsider d = x as FinSeq-Location by SCMFSA_2:12;
          Cs1i1.d = Cs1i.d &
          Cs2i1.d = Cs2i.d by A22,A60,A61,A120,A121,SCMFSA_2:92;
          hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A31,A45,A125;
        end;
        suppose
A127:     da = x;
          then
A128:     Cs1i1.x = Cs1i.da * Cs1i.db by A60,A120,SCMFSA_2:92;
          DPp c= p by RELAT_1:88;
          then
A129:     dom DPp c= dom p by GRFUNC_1:8;
          Cs2i1.x = Cs2i.da * Cs2i.db by A22,A61,A121,A127,SCMFSA_2:92;

then Cs1i1.x = Cs2i1.x by A2,A9,A10,A31,A120,A123,A124,A125,A127,A128,A129,
          SCMFSA_3:22;
          hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A31,A48,A125;
        end;
        suppose
A130:     da <> x & x in Int-Locations;
          then reconsider d = x as Int-Location by SCMFSA_2:11;
          Cs1i1.d = Cs1i.d &
          Cs2i1.d = Cs2i.d by A22,A60,A61,A120,A121,A130,SCMFSA_2:92;
          hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A31,A45,A125;
        end;
      end;
      then (Cs1i1|dom DPp) c= (Cs2i1|dom DPp) by A25,A31,A32,GRFUNC_1:8;
      hence  Computation(s1,i+1)|dom (DataPart p)
      = Computation(s2,i+1)|dom (DataPart (Relocated(p,k)))
      by A25,A31,A32,GRFUNC_1:9;
      now
        let x be set;
        assume
A131:   x in dom (DataPart Cs3i1);
        per cases by A37,A131,XBOOLE_0:def 2;
        suppose x in FinSeq-Locations;
          then reconsider d = x as FinSeq-Location by SCMFSA_2:12;
A132:     Cs3i1.d = Cs3i.d by A62,A120,SCMFSA_2:92;
          Cs2i1.d = Cs2i.d by A22,A61,A121,SCMFSA_2:92;
          hence (DataPart Cs3i1).x =
          (DataPart Cs2i1).x by A53,A131,A132;
        end;
        suppose
A133:     da = x;
          then
A134:     Cs2i1.x = Cs2i.da * Cs2i.db by A22,A61,A121,SCMFSA_2: 92;
          Cs3i1.x = Cs3i.da * Cs3i.db by A62,A120,A133,SCMFSA_2:92;
          hence (DataPart Cs3i1).x =
          (DataPart Cs2i1).x
          by A51,A123,A124,A131,A134,SCMFSA_2:127;
        end;
        suppose
A135:     da <> x & x in Int-Locations;
          then reconsider d = x as Int-Location by SCMFSA_2:11;
A136:     Cs3i1.d = Cs3i.d by A62,A120,A135,SCMFSA_2:92;
          Cs2i1.d = Cs2i.d by A22,A61,A121,A135,SCMFSA_2:92;
          hence (DataPart Cs3i1).x =
          (DataPart Cs2i1).x by A53,A131,A136;
        end;
      end;
      then DataPart Cs3i1 c=
       DataPart Computation(s2,i+1)
      by A37,A38,GRFUNC_1:8;
      hence DataPart Cs3i1 =
       DataPart Computation(s2,i+1)
      by A37,A38,GRFUNC_1:9;
    end;
    suppose InsCode I = 5;
      then consider da, db being Int-Location such that
A137: I = Divide(da, db) by SCMFSA_2:58;
A138: IncAddr(I, k) = Divide(da, db) by A137,SCMFSA_4:13;
A139: Cs3i.da = Cs2i.da by A41;
A140: Cs3i.db = Cs2i.db by A41;
      now per cases;
        suppose
A141:     da <> db;
A142:     Exec(I, Cs1i).IC SCM+FSA = Next IC Cs1i by A137,SCMFSA_2:93;
          hence IC Computation(s1,i+1) + k
          = IC Computation(s2,i+1) by A21,A22,A60,A61,A64,A138,SCMFSA_2:93;
          thus IncAddr(CurInstr( Computation(s1,i+1)), k)

= CurInstr( Computation(s2,i+1)) by A21,A22,A55,A60,A61,A64,A138,A142
          ,SCMFSA_2:93;
          now
            let x be set such that
A143:       x in dom (Cs1i1|dom DPp);
A144:       dom DPp c= Int-Locations \/ FinSeq-Locations
                      by RELAT_1:87,SCMFSA_2:127;
            per cases by A31,A143,A144,XBOOLE_0:def 2;
            suppose db <> x & x in FinSeq-Locations;
              then reconsider d = x as FinSeq-Location by SCMFSA_2:12;
              Cs1i1.d = Cs1i.d &
              Cs2i1.d = Cs2i.d by A22,A60,A61,A137,A138,SCMFSA_2:93;
              hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A31,A45,A143;
            end;
            suppose
A145:         da = x;
              then
A146:         Cs1i1.x = Cs1i.da div Cs1i.db by A60,A137,A141,SCMFSA_2:93;
A147:         Cs2i1
              .x = Cs2i.da div Cs2i.db by A22,A61,A138,A141,A145,SCMFSA_2:93;
              DPp c= p by RELAT_1:88;
              then dom DPp c= dom p by GRFUNC_1:8;
              then Cs3i.da div Cs3i.db = Cs1i.da div Cs1i.db
              by A2,A9,A10,A31,A137,A141,A143,A145,SCMFSA_3:23;
              hence (Cs1i1|dom DPp).x
              = Cs2i1.x by A139,A140,A143,A146,A147,FUNCT_1:70
                .= (Cs2i1|dom DPp).x by A25,A31,A32,A143,FUNCT_1:70;
            end;
            suppose
A148:         db = x;
              then
A149:         Cs1i1.x = Cs1i.da mod Cs1i.db by A60,A137, SCMFSA_2:93;
              DPp c= p by RELAT_1:88;
              then
A150:         dom DPp c= dom p by GRFUNC_1:8;
              Cs2i1.x = Cs2i.da mod Cs2i.db by A22,A61,A138,A148,SCMFSA_2:93;

then Cs1i1.x = Cs2i1.x by A2,A9,A10,A31,A137,A139,A140,A141,A143,A148,A149,
              A150,SCMFSA_3:24;
              hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A31,A48,A143;
            end;
            suppose
A151:         da <> x & db <> x & x in Int-Locations;
              then reconsider d = x as Int-Location by SCMFSA_2:11;
              Cs1i1.d = Cs1i.d &
              Cs2i1.d = Cs2i.d by A22,A60,A61,A137,A138,A151,SCMFSA_2:93;
              hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A31,A45,A143;
            end;
          end;
          then (Cs1i1|dom DPp) c= (Cs2i1|dom DPp) by A25,A31,A32,GRFUNC_1:8;
          hence  Computation(s1,i+1)|dom (DataPart p)
          = Computation(s2,i+1)|dom (DataPart (Relocated(p,k)))
          by A25,A31,A32,GRFUNC_1:9;
          now
            let x be set;
            assume
A152:       x in dom (DataPart Cs3i1);
            per cases by A37,A152,XBOOLE_0:def 2;
            suppose x in FinSeq-Locations;
              then reconsider d = x as FinSeq-Location by SCMFSA_2:12;
A153:         Cs3i1.d = Cs3i.d by A62,A137,SCMFSA_2:93;
              Cs2i1.d = Cs2i.d by A22,A61,A138,SCMFSA_2:93;
              hence (DataPart Cs3i1).x =
              (DataPart Cs2i1).x by A53,A152,A153;
            end;
            suppose
A154:         da = x;
              then
A155:         Cs2i1.x = Cs2i.da div Cs2i.db by A22,A61,A138, A141,SCMFSA_2:93;
              Cs3i1.x = Cs3i.da div Cs3i.db by A62,A137,A141,A154,SCMFSA_2:93;
              hence (DataPart Cs3i1).x =
              (DataPart Cs2i1).x
              by A51,A139,A140,A152,A155,SCMFSA_2:127;
            end;
            suppose
A156:         db = x;
              then
A157:         Cs2i1.x = Cs2i.da mod Cs2i.db by A22,A61,A138, SCMFSA_2:93;
              Cs3i1.x = Cs3i.da mod Cs3i.db by A62,A137,A156,SCMFSA_2:93;
              hence (DataPart Cs3i1).x =
              (DataPart Cs2i1).x
              by A51,A139,A140,A152,A157,SCMFSA_2:127;
            end;
            suppose
A158:         da <> x & db <> x & x in Int-Locations;
              then reconsider d = x as Int-Location by SCMFSA_2:11;
A159:         Cs3i1.d = Cs3i.d by A62,A137,A158,SCMFSA_2:93;
              Cs2i1.d = Cs2i.d by A22,A61,A138,A158,SCMFSA_2:93;
              hence (DataPart Cs3i1).x =
              (DataPart Cs2i1).x by A53,A152,A159;
            end;
          end;
          then DataPart Cs3i1 c=
           DataPart Computation(s2,i+1)
          by A37,A38,GRFUNC_1:8;
          hence DataPart Cs3i1 =
           DataPart Computation(s2,i+1)
          by A37,A38,GRFUNC_1:9;
        end;
        suppose
A160:     da = db;
          then
A161:     Exec(I, Cs1i).IC SCM+FSA = Next IC Cs1i by A137, SCMFSA_2:94;
          hence IC Computation(s1,i+1) + k

= IC Computation(s2,i+1) by A21,A22,A60,A61,A64,A138,A160,SCMFSA_2:94;
          thus IncAddr(CurInstr( Computation(s1,i+1)), k)

= CurInstr( Computation(s2,i+1)) by A21,A22,A55,A60,A61,A64,A138,A160
          ,A161,SCMFSA_2:94;
          now
            let x be set such that
A162:       x in dom (Cs1i1|dom DPp);
A163:       dom DPp c= Int-Locations \/ FinSeq-Locations
                      by RELAT_1:87,SCMFSA_2:127;
            per cases by A31,A162,A163,XBOOLE_0:def 2;
            suppose x in FinSeq-Locations;
              then reconsider d = x as FinSeq-Location by SCMFSA_2:12;
              Cs1i1.d = Cs1i.d &
              Cs2i1.d = Cs2i.d by A22,A60,A61,A137,A138,A160,SCMFSA_2:94;
              hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A31,A45,A162;
            end;
            suppose
A164:         da = x;
              then
A165:         Cs2i1.x = Cs2i.da mod Cs2i.db by A22,A61,A138, A160,SCMFSA_2:94;
A166:         (Cs1i|dom DPp).x = Cs1i.x & (Cs2i|dom DPp).x = Cs2i.x
              by A25,A31,A33,A34,A162,FUNCT_1:70;
              (Cs1i1|dom DPp).x = Cs1i1.x & (Cs2i1|dom DPp).x = Cs2i1.x
              by A25,A31,A32,A162,FUNCT_1:70;
              hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x
              by A23,A25,A60,A137,A160,A164,A165,A166,SCMFSA_2:94;
            end;
            suppose
A167:         da <> x & x in Int-Locations;
              then reconsider d = x as Int-Location by SCMFSA_2:11;
              Cs1i1.d = Cs1i.d &
              Cs2i1.d = Cs2i.d by A22,A60,A61,A137,A138,A160,A167,SCMFSA_2:94;
              hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A31,A45,A162;
            end;
          end;
          then (Cs1i1|dom DPp) c= (Cs2i1|dom DPp) by A25,A31,A32,GRFUNC_1:8;
          hence  Computation(s1,i+1)|dom (DataPart p)
          = Computation(s2,i+1)|dom (DataPart (Relocated(p,k)))
          by A25,A31,A32,GRFUNC_1:9;
          now
            let x be set;
            assume
A168:       x in dom (DataPart Cs3i1);
            per cases by A37,A168,XBOOLE_0:def 2;
            suppose x in FinSeq-Locations;
              then reconsider d = x as FinSeq-Location by SCMFSA_2:12;
A169:         Cs3i1.d = Cs3i.d by A62,A137,A160,SCMFSA_2:94;
              Cs2i1.d = Cs2i.d by A22,A61,A138,A160,SCMFSA_2:94;
              hence (DataPart Cs3i1).x =
              (DataPart Cs2i1).x by A53,A168,A169;
            end;
            suppose
A170:         da = x;
              then
A171:         Cs2i1.x = Cs2i.da mod Cs2i.db by A22,A61,A138, A160,SCMFSA_2:94;
              Cs3i1.x = Cs3i.da mod Cs3i.db by A62,A137,A160,A170,SCMFSA_2:94;
              hence (DataPart Cs3i1).x =
              (DataPart Cs2i1).x
              by A51,A139,A140,A168,A171,SCMFSA_2:127;
            end;
            suppose
A172:         da <> x & x in Int-Locations;
              then reconsider d = x as Int-Location by SCMFSA_2:11;
A173:         Cs3i1.d = Cs3i.d by A62,A137,A160,A172,SCMFSA_2:94;
              Cs2i1.d = Cs2i.d by A22,A61,A138,A160,A172,SCMFSA_2:94;
              hence (DataPart Cs3i1).x =
              (DataPart Cs2i1).x by A53,A168,A173;
            end;
          end;
          then DataPart Cs3i1 c=
           DataPart Computation(s2,i+1)
          by A37,A38,GRFUNC_1:8;
          hence DataPart Cs3i1 =
           DataPart Computation(s2,i+1)
          by A37,A38,GRFUNC_1:9;
        end;
      end;
      hence IC Computation(s1,i+1) + k = IC Computation(s2,i+1) &
      IncAddr(CurInstr( Computation(s1,i+1)), k)
      = CurInstr( Computation(s2,i+1)) &
       Computation(s1,i+1)|dom (DataPart p)
      = Computation(s2,i+1)|dom (DataPart (Relocated(p,k))) &
      DataPart Cs3i1 =
       DataPart Computation(s2,i+1);
    end;
    suppose InsCode I = 6;
      then consider loc being Instruction-Location of SCM+FSA such that
A174: I = goto loc by SCMFSA_2:59;
A175: CurInstr(Cs2i) = goto (loc+k) by A22,A174,SCMFSA_4:14; thus
      IC Computation(s1,i+1) + k = loc + k by A60,A174,SCMFSA_2:95
        .= IC Computation(s2,i+1) by A61,A175,SCMFSA_2:95;
      hence IncAddr(CurInstr( Computation(s1,i+1)), k)
      = CurInstr( Computation(s2,i+1)) by A55;
      now
        let x be set;
        assume
A176:   x in dom (Cs1i1|dom DPp);
        dom DPp c= Int-Locations \/ FinSeq-Locations
                      by RELAT_1:87,SCMFSA_2:127;
        then x in Int-Locations or x in FinSeq-Locations by A31,A176,
        XBOOLE_0:def 2;
        then x is Int-Location or x is FinSeq-Location by SCMFSA_2:11,12;

then Cs1i1.x = Cs1i.x & Cs2i1.x = Cs2i.x by A60,A61,A174,A175,SCMFSA_2:95;
        hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A31,A45,A176;
      end;
      then (Cs1i1|dom DPp) c= (Cs2i1|dom DPp) by A25,A31,A32,GRFUNC_1:8;
      hence  Computation(s1,i+1)|dom (DataPart p)
      = Computation(s2,i+1)|dom (DataPart (Relocated(p,k)))
      by A25,A31,A32,GRFUNC_1:9;
      now
        let x be set;
        assume
A177:   x in dom (DataPart Cs3i1);
        then x in Int-Locations or x in FinSeq-Locations by A37,XBOOLE_0:def 2;
        then x is Int-Location or x is FinSeq-Location by SCMFSA_2:11,12;
        then Cs3i1.x = Cs3i.x & Cs2i1.x = Cs2i.x
        by A61,A62,A174,A175,SCMFSA_2:95;
        hence (DataPart Cs3i1).x =
        (DataPart Cs2i1).x by A53,A177;
      end;
      then DataPart Cs3i1 c=
       DataPart Computation(s2,i+1)
      by A37,A38,GRFUNC_1:8;
      hence DataPart Cs3i1 =
       DataPart Computation(s2,i+1)
      by A37,A38,GRFUNC_1:9;
    end;
    suppose InsCode I = 7;
      then consider loc being Instruction-Location of SCM+FSA,
      da being Int-Location such that
A178: I = da=0_goto loc by SCMFSA_2:60;
A179: CurInstr(Cs2i) = da=0_goto (loc+k) by A22,A178,SCMFSA_4:15;
A180: Cs3i.da = Cs2i.da by A41;
A181: now per cases;
        case Cs1i.da = 0;
          hence IC Computation(s1,i+1) + k
          = loc + k by A60,A178,SCMFSA_2:96;
        end;
        case Cs1i.da <> 0;
          hence IC Computation(s1,i+1) + k
          = Next (IC Cs2i) by A21,A60,A64,A178,SCMFSA_2:96;
        end;
      end;
A182: now per cases;
        case Cs2i.da = 0;
          hence IC Computation(s2,i+1) = loc + k by A61,A179,SCMFSA_2:96;
        end;
        case Cs2i.da <> 0;
          hence IC Computation(s2,i+1)
          = Next IC Cs2i by A61,A179,SCMFSA_2:96;
        end;
      end;
A183: now per cases;
        suppose loc <> Next IC Cs1i;
          hence IC Computation(s1,i+1) + k
          = IC Computation(s2,i+1) by A2,A9,A10,A178,A180,A181,A182,
          SCMFSA_3:25;
        end;
        suppose loc = Next IC Cs1i;
          hence IC Computation(s1,i+1) + k
          = IC Computation(s2,i+1) by A21,A64,A181,A182;
        end;
      end;
      hence IC Computation(s1,i+1) + k = IC Computation(s2,i+1);
      thus IncAddr(CurInstr( Computation(s1,i+1)), k)
      = CurInstr( Computation(s2,i+1)) by A55,A183;
      now
        let x be set;
        assume
A184:   x in dom (Cs1i1|dom DPp);
        dom DPp c= Int-Locations \/ FinSeq-Locations
                      by RELAT_1:87,SCMFSA_2:127;
        then x in Int-Locations or x in FinSeq-Locations by A31,A184,
        XBOOLE_0:def 2;
        then x is Int-Location or x is FinSeq-Location by SCMFSA_2:11,12;

then Cs1i1.x = Cs1i.x & Cs2i1.x = Cs2i.x by A60,A61,A178,A179,SCMFSA_2:96;
        hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A31,A45,A184;
      end;
      then (Cs1i1|dom DPp) c= (Cs2i1|dom DPp) by A25,A31,A32,GRFUNC_1:8;
      hence  Computation(s1,i+1)|dom (DataPart p)
      = Computation(s2,i+1)|dom (DataPart (Relocated(p,k)))
      by A25,A31,A32,GRFUNC_1:9;
      now
        let x be set;
        assume
A185:   x in dom (DataPart Cs3i1);
        then x in Int-Locations or x in FinSeq-Locations by A37,XBOOLE_0:def 2;
        then x is Int-Location or x is FinSeq-Location by SCMFSA_2:11,12;
        then Cs3i1.x = Cs3i.x & Cs2i1.x = Cs2i.x
        by A61,A62,A178,A179,SCMFSA_2:96;
        hence (DataPart Cs3i1).x =
        (DataPart Cs2i1).x by A53,A185;
      end;
      then DataPart Cs3i1 c=
       DataPart Computation(s2,i+1)
      by A37,A38,GRFUNC_1:8;
      hence DataPart Cs3i1 =
       DataPart Computation(s2,i+1)
      by A37,A38,GRFUNC_1:9;
    end;
    suppose InsCode I = 8;
      then consider loc being Instruction-Location of SCM+FSA,
      da being Int-Location such that
A186: I = da>0_goto loc by SCMFSA_2:61;
A187: CurInstr(Cs2i) = da>0_goto (loc+k) by A22,A186,SCMFSA_4:16;
A188: Cs3i.da = Cs2i.da by A41;
A189: now per cases;
        case Cs1i.da > 0;
          hence IC Computation(s1,i+1) + k
          = loc + k by A60,A186,SCMFSA_2:97;
        end;
        case Cs1i.da <= 0;
          hence IC Computation(s1,i+1) + k
          = Next (IC Cs2i) by A21,A60,A64,A186,SCMFSA_2:97;
        end;
      end;
A190: now per cases;
        case Cs2i.da > 0;
          hence IC Computation(s2,i+1) = loc + k by A61,A187,SCMFSA_2:97;
        end;
        case Cs2i.da <= 0;
          hence IC Computation(s2,i+1)
          = Next IC Cs2i by A61,A187,SCMFSA_2:97;
        end;
      end;
A191: now per cases;
        suppose loc <> Next IC Cs1i;
          hence IC Computation(s1,i+1) + k
          = IC Computation(s2,i+1) by A2,A9,A10,A186,A188,A189,A190,
          SCMFSA_3:26;
        end;
        suppose loc = Next IC Cs1i;
          hence IC Computation(s1,i+1) + k
          = IC Computation(s2,i+1) by A21,A64,A189,A190;
        end;
      end;
      hence IC Computation(s1,i+1) + k = IC Computation(s2,i+1);
      thus IncAddr(CurInstr( Computation(s1,i+1)), k)
      = CurInstr( Computation(s2,i+1)) by A55,A191;
      now
        let x be set;
        assume
A192:   x in dom (Cs1i1|dom DPp);
        dom DPp c= Int-Locations \/ FinSeq-Locations
                      by RELAT_1:87,SCMFSA_2:127;
        then x in Int-Locations or x in FinSeq-Locations by A31,A192,
        XBOOLE_0:def 2;
        then x is Int-Location or x is FinSeq-Location by SCMFSA_2:11,12;

then Cs1i1.x = Cs1i.x & Cs2i1.x = Cs2i.x by A60,A61,A186,A187,SCMFSA_2:97;
        hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A31,A45,A192;
      end;
      then (Cs1i1|dom DPp) c= (Cs2i1|dom DPp) by A25,A31,A32,GRFUNC_1:8;
      hence  Computation(s1,i+1)|dom (DataPart p)
      = Computation(s2,i+1)|dom (DataPart (Relocated(p,k)))
      by A25,A31,A32,GRFUNC_1:9;
      now
        let x be set;
        assume
A193:   x in dom (DataPart Cs3i1);
        then x in Int-Locations or x in FinSeq-Locations by A37,XBOOLE_0:def 2;
        then x is Int-Location or x is FinSeq-Location by SCMFSA_2:11,12;
        then Cs3i1.x = Cs3i.x & Cs2i1.x = Cs2i.x
        by A61,A62,A186,A187,SCMFSA_2:97;
        hence (DataPart Cs3i1).x =
        (DataPart Cs2i1).x by A53,A193;
      end;
      then DataPart Cs3i1 c=
       DataPart Computation(s2,i+1)
      by A37,A38,GRFUNC_1:8;
      hence DataPart Cs3i1 =
       DataPart Computation(s2,i+1)
      by A37,A38,GRFUNC_1:9;
    end;
    suppose InsCode I = 9;

then consider db, da being Int-Location, f being FinSeq-Location such that
A194: I = da := (f,db) by SCMFSA_2:62;
A195: IncAddr(I, k) = da := (f,db) by A194,SCMFSA_4:17;
A196: Exec(I, Cs1i).IC SCM+FSA = Next IC Cs1i by A194,SCMFSA_2:98;
A197: Cs3i.db = Cs2i.db by A41;
A198: Cs3i.f = Cs2i.f by A43; thus
      IC Computation(s1,i+1) + k
      = IC Computation(s2,i+1) by A21,A22,A60,A61,A64,A195,A196,SCMFSA_2:98;
      thus IncAddr(CurInstr( Computation(s1,i+1)), k)
      = CurInstr( Computation(s2,i+1)) by A21,A22,A55,A60,A61,A64,A195,A196
      ,SCMFSA_2:98;
      now
        let x be set;
        assume
A199:   x in dom (Cs1i1|dom DPp);
A200:   dom DPp c= Int-Locations \/ FinSeq-Locations
 by RELAT_1:87,SCMFSA_2:127;
        per cases by A31,A199,A200,XBOOLE_0:def 2;
        suppose x in FinSeq-Locations;
          then reconsider d = x as FinSeq-Location by SCMFSA_2:12;
          Cs1i1.d = Cs1i.d & Cs2i1.d = Cs2i.d by A22,A60,A61,A194,A195,
          SCMFSA_2:98;
          hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A31,A45,A199;
        end;
        suppose
A201:     da = x;
          then consider k1 being Element of NAT such that
A202:     k1 = abs(Cs1i.db) & Cs1i1.x = (Cs1i.f)/.k1 by A60,A194,SCMFSA_2:98;
          consider k2 being Element of NAT such that
A203:     k2 = abs(Cs2i.db) & Cs2i1.x = (Cs2i.f)/.k2
          by A22,A61,A195,A201,SCMFSA_2:98;
          DPp c= p by RELAT_1:88;
          then dom DPp c= dom p by GRFUNC_1:8;
          then (Cs3i.f)/.k2 = (Cs1i.f)/.k1
          by A2,A9,A10,A31,A194,A197,A199,A201,A202,A203,SCMFSA_3:27;

hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A31,A48,A198,A199,A202,A203;
        end;
        suppose
A204:     da <> x & x in Int-Locations;
          then reconsider d = x as Int-Location by SCMFSA_2:11;
          Cs1i1.d = Cs1i.d & Cs2i1.d = Cs2i.d by A22,A60,A61,A194,A195,A204,
          SCMFSA_2:98;
          hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A31,A45,A199;
        end;
      end;
      then (Cs1i1|dom DPp) c= (Cs2i1|dom DPp) by A25,A31,A32,GRFUNC_1:8;
      hence  Computation(s1,i+1)|dom (DataPart p)
      = Computation(s2,i+1)|dom (DataPart (Relocated(p,k)))
      by A25,A31,A32,GRFUNC_1:9;
      now
        let x be set;
        assume
A205:   x in dom (DataPart Cs3i1);
        per cases by A37,A205,XBOOLE_0:def 2;
        suppose x in FinSeq-Locations;
          then reconsider f = x as FinSeq-Location by SCMFSA_2:12;
A206:     Cs3i1.f = Cs3i.f by A62,A194,SCMFSA_2:98;
          Cs2i1.f = Cs2i.f by A22,A61,A195,SCMFSA_2:98;
          hence (DataPart Cs3i1).x =
          (DataPart Cs2i1).x by A53,A205,A206;
        end;
        suppose
A207:     da = x;
          then consider k1 being Element of NAT such that
A208:     k1 = abs(Cs3i.db) & Cs3i1.x = (Cs3i.f)/.k1 by A62,A194,SCMFSA_2:98;
          consider k2 being Element of NAT such that
A209:     k2 = abs(Cs2i.db) & Cs2i1.x = (Cs2i.f)/.k2
          by A22,A61,A195,A207,SCMFSA_2:98;
          thus (DataPart Cs3i1).x =

(DataPart Cs2i1).x by A51,A197,A198,A205,A208,SCMFSA_2:127
          ,A209;
        end;
        suppose
A210:     da <> x & x in Int-Locations;
          then reconsider d = x as Int-Location by SCMFSA_2:11;
A211:     Cs3i1.d = Cs3i.d by A62,A194,A210,SCMFSA_2:98;
          Cs2i1.d = Cs2i.d by A22,A61,A195,A210,SCMFSA_2:98;
          hence (DataPart Cs3i1).x =
          (DataPart Cs2i1).x by A53,A205,A211;
        end;
      end;
      then DataPart Cs3i1 c=
       DataPart Computation(s2,i+1)
      by A37,A38,GRFUNC_1:8;
      hence DataPart Cs3i1 =
       DataPart Computation(s2,i+1)
      by A37,A38,GRFUNC_1:9;
    end;
    suppose InsCode I = 10;

then consider db, da being Int-Location, f being FinSeq-Location such that
A212: I = (f,db):=da by SCMFSA_2:63;
A213: IncAddr(I, k) = (f,db):=da by A212,SCMFSA_4:18;
A214: Exec(I, Cs1i).IC SCM+FSA = Next IC Cs1i by A212,SCMFSA_2:99;
A215: Cs3i.db = Cs2i.db by A41;
A216: Cs3i.da = Cs2i.da by A41;
A217: Cs3i.f = Cs2i.f by A43; thus
      IC Computation(s1,i+1) + k
      = IC Computation(s2,i+1) by A21,A22,A60,A61,A64,A213,A214,SCMFSA_2:99;
      thus IncAddr(CurInstr( Computation(s1,i+1)), k)
      = CurInstr( Computation(s2,i+1)) by A21,A22,A55,A60,A61,A64,A213,A214
      ,SCMFSA_2:99;
      now
        let x be set;
        assume
A218:   x in dom (Cs1i1|dom DPp);
A219:   dom DPp c= Int-Locations \/ FinSeq-Locations
                      by RELAT_1:87,SCMFSA_2:127;
        per cases by A31,A218,A219,XBOOLE_0:def 2;
        suppose x in Int-Locations;
          then reconsider d = x as Int-Location by SCMFSA_2:11;
          Cs1i1.d = Cs1i.d & Cs2i1.d = Cs2i.d by A22,A60,A61,A212,A213,
          SCMFSA_2:99;
          hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A31,A45,A218;
        end;
        suppose
A220:     f = x;
          then consider k1 being Element of NAT such that
A221:     k1 = abs(Cs1i.db) & Cs1i1.x = Cs1i.f +*(k1,Cs1i.da)
          by A60,A212,SCMFSA_2:99;
          consider k2 being Element of NAT such that
A222:     k2 = abs(Cs2i.db) & Cs2i1.x = Cs2i.f +*(k2,Cs2i.da)
          by A22,A61,A213,A220,SCMFSA_2:99;
          DPp c= p by RELAT_1:88;
          then dom DPp c= dom p by GRFUNC_1:8;
          then Cs3i.f +*(k2,Cs3i.da) = Cs1i.f +*(k1,Cs1i.da)
          by A2,A9,A10,A31,A212,A215,A218,A220,A221,A222,SCMFSA_3:28;

hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A31,A48,A216,A217,A218,A221
          ,A222;
        end;
        suppose
A223:     f <> x & x in FinSeq-Locations;
          then reconsider d = x as FinSeq-Location by SCMFSA_2:12;
          Cs1i1.d = Cs1i.d & Cs2i1.d = Cs2i.d by A22,A60,A61,A212,A213,A223,
          SCMFSA_2:99;
          hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A31,A45,A218;
        end;
      end;
      then (Cs1i1|dom DPp) c= (Cs2i1|dom DPp) by A25,A31,A32,GRFUNC_1:8;
      hence  Computation(s1,i+1)|dom (DataPart p)
      = Computation(s2,i+1)|dom (DataPart (Relocated(p,k)))
      by A25,A31,A32,GRFUNC_1:9;
      now
        let x be set;
        assume
A224:   x in dom (DataPart Cs3i1);
        per cases by A37,A224,XBOOLE_0:def 2;
        suppose x in Int-Locations;
          then reconsider f = x as Int-Location by SCMFSA_2:11;
A225:     Cs3i1.f = Cs3i.f by A62,A212,SCMFSA_2:99;
          Cs2i1.f = Cs2i.f by A22,A61,A213,SCMFSA_2:99;
          hence (DataPart Cs3i1).x =
          (DataPart Cs2i1).x by A53,A224,A225;
        end;
        suppose
A226:     f = x;
          then consider k1 being Element of NAT such that
A227:     k1 = abs(Cs3i.db) & Cs3i1.x = Cs3i.f +*(k1,Cs3i.da)
          by A62,A212,SCMFSA_2:99;
          consider k2 being Element of NAT such that
A228:     k2 = abs(Cs2i.db) & Cs2i1.x = Cs2i.f +*(k2,Cs2i.da)
          by A22,A61,A213,A226,SCMFSA_2:99;
          thus (DataPart Cs3i1).x =
          (DataPart Cs2i1).x
          by A51,A215,A216,A217,A224,A227,A228,SCMFSA_2:127;
        end;
        suppose
A229:     f <> x & x in FinSeq-Locations;
          then reconsider d = x as FinSeq-Location by SCMFSA_2:12;
A230:     Cs3i1.d = Cs3i.d by A62,A212,A229,SCMFSA_2:99;
          Cs2i1.d = Cs2i.d by A22,A61,A213,A229,SCMFSA_2:99;
          hence (DataPart Cs3i1).x =
          (DataPart Cs2i1).x by A53,A224,A230;
        end;
      end;
      then DataPart Cs3i1 c=
       DataPart Computation(s2,i+1)
      by A37,A38,GRFUNC_1:8;
      hence DataPart Cs3i1 =
       DataPart Computation(s2,i+1)
      by A37,A38,GRFUNC_1:9;
    end;
    suppose InsCode I = 11;
      then consider da being Int-Location, f being FinSeq-Location such that
A231: I = da :=len f by SCMFSA_2:64;
A232: IncAddr(I, k) = da :=len f by A231,SCMFSA_4:19;
A233: Exec(I, Cs1i).IC SCM+FSA = Next IC Cs1i by A231,SCMFSA_2:100;
A234: Cs3i.f = Cs2i.f by A43; thus
      IC Computation(s1,i+1) + k

= IC Computation(s2,i+1) by A21,A22,A60,A61,A64,A232,A233,SCMFSA_2:100;
      thus IncAddr(CurInstr( Computation(s1,i+1)), k)
      = CurInstr( Computation(s2,i+1)) by A21,A22,A55,A60,A61,A64,A232,A233
      ,SCMFSA_2:100;
      now
        let x be set;
        assume
A235:   x in dom (Cs1i1|dom DPp);
A236:   dom DPp c= Int-Locations \/ FinSeq-Locations
                      by RELAT_1:87,SCMFSA_2:127;
        per cases by A31,A235,A236,XBOOLE_0:def 2;
        suppose x in FinSeq-Locations;
          then reconsider d = x as FinSeq-Location by SCMFSA_2:12;
          Cs1i1.d = Cs1i.d & Cs2i1.d = Cs2i.d by A22,A60,A61,A231,A232,
          SCMFSA_2:100;
          hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A31,A45,A235;
        end;
        suppose
A237:     da = x;
          then
A238:     Cs1i1.x = len(Cs1i.f) by A60,A231,SCMFSA_2:100;
A239:     Cs2i1.x = len(Cs2i.f) by A22,A61,A232,A237,SCMFSA_2:100;
          DPp c= p by RELAT_1:88;
          then dom DPp c= dom p by GRFUNC_1:8;

then len(Cs3i.f) = len(Cs1i.f) by A2,A9,A10,A31,A231,A235,A237,SCMFSA_3: 29;

hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A31,A48,A234,A235,A238,A239;
        end;
        suppose
A240:     da <> x & x in Int-Locations;
          then reconsider d = x as Int-Location by SCMFSA_2:11;
          Cs1i1.d = Cs1i.d & Cs2i1.d = Cs2i.d by A22,A60,A61,A231,A232,A240,
          SCMFSA_2:100;
          hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A31,A45,A235;
        end;
      end;
      then (Cs1i1|dom DPp) c= (Cs2i1|dom DPp) by A25,A31,A32,GRFUNC_1:8;
      hence  Computation(s1,i+1)|dom (DataPart p)
      = Computation(s2,i+1)|dom (DataPart (Relocated(p,k)))
      by A25,A31,A32,GRFUNC_1:9;
      now
        let x be set;
        assume
A241:   x in dom (DataPart Cs3i1);
        per cases by A37,A241,XBOOLE_0:def 2;
        suppose x in FinSeq-Locations;
          then reconsider f = x as FinSeq-Location by SCMFSA_2:12;
A242:     Cs3i1.f = Cs3i.f by A62,A231,SCMFSA_2:100;
          Cs2i1.f = Cs2i.f by A22,A61,A232,SCMFSA_2:100;
          hence (DataPart Cs3i1).x =
          (DataPart Cs2i1).x by A53,A241,A242;
        end;
        suppose
A243:     da = x;
          then
A244:     Cs3i1.x = len(Cs3i.f) by A62,A231,SCMFSA_2:100;
          Cs2i1.x = len(Cs2i.f) by A22,A61,A232,A243,SCMFSA_2:100;
          hence (DataPart Cs3i1).x =
          (DataPart Cs2i1).x by A51,A234,A241,A244,SCMFSA_2:127;
        end;
        suppose
A245:     da <> x & x in Int-Locations;
          then reconsider d = x as Int-Location by SCMFSA_2:11;
A246:     Cs3i1.d = Cs3i.d by A62,A231,A245,SCMFSA_2:100;
          Cs2i1.d = Cs2i.d by A22,A61,A232,A245,SCMFSA_2:100;
          hence (DataPart Cs3i1).x =
          (DataPart Cs2i1).x by A53,A241,A246;
        end;
      end;
      then DataPart Cs3i1 c=
       DataPart Computation(s2,i+1)
      by A37,A38,GRFUNC_1:8;
      hence DataPart Cs3i1 =
       DataPart Computation(s2,i+1)
      by A37,A38,GRFUNC_1:9;
    end;
    suppose InsCode I = 12;
      then consider da being Int-Location, f being FinSeq-Location such that
A247: I = f:=<0,...,0>da by SCMFSA_2:65;
A248: IncAddr(I, k) = f:=<0,...,0>da by A247,SCMFSA_4:20;
A249: Exec(I, Cs1i).IC SCM+FSA = Next IC Cs1i by A247,SCMFSA_2:101;
A250: Cs3i.da = Cs2i.da by A41; thus
      IC Computation(s1,i+1) + k

= IC Computation(s2,i+1) by A21,A22,A60,A61,A64,A248,A249,SCMFSA_2:101;
      thus IncAddr(CurInstr( Computation(s1,i+1)), k)
      = CurInstr( Computation(s2,i+1)) by A21,A22,A55,A60,A61,A64,A248,A249
      ,SCMFSA_2:101;
      now
        let x be set;
        assume
A251:   x in dom (Cs1i1|dom DPp);
A252:   dom DPp c= Int-Locations \/ FinSeq-Locations
                      by RELAT_1:87,SCMFSA_2:127;
        per cases by A31,A251,A252,XBOOLE_0:def 2;
        suppose x in Int-Locations;
          then reconsider d = x as Int-Location by SCMFSA_2:11;
          Cs1i1.d = Cs1i.d & Cs2i1.d = Cs2i.d by A22,A60,A61,A247,A248,
          SCMFSA_2:101;
          hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A31,A45,A251;
        end;
        suppose
A253:     f = x;
          then consider k1 being Element of NAT such that
A254:     k1 = abs(Cs1i.da) & Cs1i1.x = k1 |-> 0 by A60,A247,SCMFSA_2:101;
          consider k2 being Element of NAT such that
A255:     k2 = abs(Cs2i.da) & Cs2i1.x = k2 |-> 0
          by A22,A61,A248,A253,SCMFSA_2:101;
          DPp c= p by RELAT_1:88;
          then dom DPp c= dom p by GRFUNC_1:8;

then k2 |-> 0 = k1 |->0 by A2,A9,A10,A31,A247,A250,A251,A253,A254,A255,
          SCMFSA_3:30;

hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A31,A48,A251,A254,A255;
        end;
        suppose
A256:     f <> x & x in FinSeq-Locations;
          then reconsider d = x as FinSeq-Location by SCMFSA_2:12;
          Cs1i1.d = Cs1i.d & Cs2i1.d = Cs2i.d by A22,A60,A61,A247,A248,A256,
          SCMFSA_2:101;
          hence (Cs1i1|dom DPp).x = (Cs2i1|dom DPp).x by A31,A45,A251;
        end;
      end;
      then (Cs1i1|dom DPp) c= (Cs2i1|dom DPp) by A25,A31,A32,GRFUNC_1:8;
      hence  Computation(s1,i+1)|dom (DataPart p)
      = Computation(s2,i+1)|dom (DataPart (Relocated(p,k)))
      by A25,A31,A32,GRFUNC_1:9;
      now
        let x be set;
        assume
A257:   x in dom (DataPart Cs3i1);
        per cases by A37,A257,XBOOLE_0:def 2;
        suppose x in Int-Locations;
          then reconsider f = x as Int-Location by SCMFSA_2:11;
A258:     Cs3i1.f = Cs3i.f by A62,A247,SCMFSA_2:101;
          Cs2i1.f = Cs2i.f by A22,A61,A248,SCMFSA_2:101;
          hence (DataPart Cs3i1).x =
          (DataPart Cs2i1).x by A53,A257,A258;
        end;
        suppose
A259:     f = x;
          then consider k1 being Element of NAT such that
A260:     k1 = abs(Cs3i.da) & Cs3i1.x = k1 |-> 0 by A62,A247,SCMFSA_2:101;
          consider k2 being Element of NAT such that
A261:     k2 = abs(Cs2i.da) & Cs2i1.x = k2 |-> 0
          by A22,A61,A248,A259,SCMFSA_2:101;
          thus (DataPart Cs3i1).x =
          (DataPart Cs2i1).x
          by A51,A250,A257,A260,A261,SCMFSA_2:127;
        end;
        suppose
A262:     f <> x & x in FinSeq-Locations;
          then reconsider d = x as FinSeq-Location by SCMFSA_2:12;
A263:     Cs3i1.d = Cs3i.d by A62,A247,A262,SCMFSA_2:101;
          Cs2i1.d = Cs2i.d by A22,A61,A248,A262,SCMFSA_2:101;
          hence (DataPart Cs3i1).x =
          (DataPart Cs2i1).x by A53,A257,A263;
        end;
      end;
      then DataPart Cs3i1 c=
       DataPart Computation(s2,i+1)
      by A37,A38,GRFUNC_1:8;
      hence DataPart Cs3i1 =
       DataPart Computation(s2,i+1)
      by A37,A38,GRFUNC_1:9;
    end;
  end;
  thus for i being Element of NAT holds Y[i] from NAT_1:sch 1(A19,A20);
end;

theorem Th13:
  for p being autonomic FinPartState of SCM+FSA , k being Element of NAT
  st IC SCM+FSA in dom p holds p is halting iff Relocated(p,k) is halting
proof
  let p be autonomic FinPartState of SCM+FSA , k be Element of NAT;
  assume
A1: IC SCM+FSA in dom p;
  hereby
    assume
A2: p is halting;
    thus Relocated(p,k) is halting
    proof
      let t be State of SCM+FSA;
      assume
A3:   Relocated(p,k) c= t;
      reconsider s = t +* p as State of SCM+FSA;
A4:   p c= t +* p by FUNCT_4:26;
      then s is halting by A2,AMI_1:def 26;
      then consider u being Element of NAT such that
A5:   CurInstr( Computation(s,u)) = halt SCM+FSA by AMI_1:def 20;
      reconsider s3 = s +* DataPart t as State of SCM+FSA;
A6:   CurInstr( Computation(t,u)) = IncAddr(halt SCM+FSA, k)
      by A1,A3,A4,A5,Th12
        .= halt SCM+FSA by SCMFSA_4:8;
      take u;
      thus thesis by A6;
    end;
  end;
  assume
A7: Relocated(p,k) is halting;
  let t be State of SCM+FSA;
  assume
A8: p c= t;
  reconsider s = t +* Relocated(p, k) as State of SCM+FSA;
A9: Relocated(p,k) c= t +* Relocated(p,k) by FUNCT_4:26;
  then s is halting by A7,AMI_1:def 26;
  then consider u being Element of NAT such that
A10: CurInstr( Computation(s,u)) = halt SCM+FSA by AMI_1:def 20;
  reconsider s3 = t +* DataPart s as State of SCM+FSA;
A11: IncAddr(CurInstr( Computation(t,u)), k) = halt SCM+FSA
  by A1,A8,A9,A10,Th12;
  take u;
A12: not 0 in {6,7,8};
  InsCode CurInstr( Computation(t,u)) = 0 by A11,SCMFSA_2:124,SCMFSA_4: 22;
  hence CurInstr( Computation(t,u)) = halt SCM+FSA by A11,A12,SCMFSA_4:def 3;
end;

theorem Th14:
  for k being Element of NAT
  for p being autonomic FinPartState of SCM+FSA st IC SCM+FSA in dom p
  for s being State of SCM+FSA st Relocated(p,k) c= s holds
  for i being Element of NAT holds  Computation(s,i)
  = Computation(s+*p,i) +* Start-At (IC Computation(s+*p,i) + k)
  +* s|dom ProgramPart p +* ProgramPart (Relocated(p,k))
proof
  let k be Element of NAT;
  let p be autonomic FinPartState of SCM+FSA such that
A1: IC SCM+FSA in dom p;
  let s be State of SCM+FSA such that
A2: Relocated(p,k) c= s;
A3: dom Start-At (IC Computation(s+*p,0) + k) = {IC SCM+FSA} by FUNCOP_1:19
  ;
A4: dom Start-At(IC p) = {IC SCM+FSA} by FUNCOP_1:19;
  ProgramPart (Relocated(p,k)) c= Relocated(p,k) by RELAT_1:88;
  then
A5: ProgramPart (Relocated(p,k)) c= s by A2,XBOOLE_1:1;
A6: s|dom ProgramPart p c= s by RELAT_1:88;
  dom [ProgramPart p] c= the carrier of SCM+FSA by AMI_1:80;
  then dom ProgramPart p c= dom s by AMI_1:79;
  then
A7: dom ProgramPart p = dom (s|dom ProgramPart p) by RELAT_1:91;
A8: IC Computation(s+*p,0) = (s +* p).IC SCM+FSA by AMI_1:13
    .= p.IC SCM+FSA by A1,FUNCT_4:14
    .= IC p by A1,AMI_1:def 43;
  Start-At (IC p + k ) c= Relocated(p,k) by Th8;
  then
A9: Start-At (IC Computation(s+*p,0) + k) c= s by A2,A8,XBOOLE_1:1;
  DataPart (Relocated(p,k)) c= Relocated(p,k) by RELAT_1:88;
  then DataPart (Relocated(p,k)) c= s by A2,XBOOLE_1:1;
  then
A10: DataPart p c= s by Th1;
A11: dom DataPart p misses dom ProgramPart p by AMI_1:104;
A12: {IC SCM+FSA} misses dom DataPart p by AMI_1:102;
  set IS = Start-At (IC Computation(s+*p,0) + k);
  set IP = Start-At (IC p);
  set SD = s|dom ProgramPart p;
  set PP = ProgramPart p;
  set DP = DataPart p;
  set PR = ProgramPart (Relocated(p,k));
  defpred X[Element of NAT] means  Computation(s,$1)
  = Computation(s+*p,$1) +* Start-At (IC Computation(s+*p,$1) + k)
  +* s|dom ProgramPart p +* ProgramPart (Relocated(p,k));
  now thus Computation(s,0) = s by AMI_1:13
      .= s +* PR by A5,FUNCT_4:79
      .= s +* SD +* PR by A6,FUNCT_4:79
      .= s +* PP +* SD +* PR by A7,FUNCT_4:78
      .= s +* IS +* PP +* SD +* PR by A9,FUNCT_4:79
      .= s +*(IS +* PP) +* SD +* PR by FUNCT_4:15
      .= s +*(PP +* IS) +* SD +* PR by A3,AMI_1:103,FUNCT_4:36
      .= (s +* PP)+* IS +* SD +* PR by FUNCT_4:15
      .= (s +* DP)+* PP +* IS +* SD +* PR by A10,FUNCT_4:79
      .= (s +*(DP +* PP))+* IS +* SD +* PR by FUNCT_4:15
      .= (s +*(PP +* DP))+* IS +* SD +* PR by A11,FUNCT_4:36
      .= (s +* PP)+* DP +* IS +* SD +* PR by FUNCT_4:15
      .=((s +* PP)+* DP) +* IP +* IS +* SD +* PR by A3,A4,FUNCT_4:78
      .= (s +*(PP +* DP))+* IP +* IS +* SD +* PR by FUNCT_4:15
      .= s +*(PP +* DP +* IP) +* IS +* SD +* PR by FUNCT_4:15
      .= s +*(PP +*(DP +* IP))+* IS +* SD +* PR by FUNCT_4:15
      .= s +*(PP +*(IP +* DP))+* IS +* SD +* PR by A4,A12,FUNCT_4:36
      .= s +*(PP +* IP +* DP) +* IS +* SD +* PR by FUNCT_4:15
      .= s +*(IP +* PP +* DP) +* IS +* SD +* PR by A4,AMI_1:103,FUNCT_4:36
      .= s +* p +* IS +* SD +* PR by A1,AMI_1:108
      .= Computation(s+*p,0) +* Start-At (IC Computation(s+*p,0) + k)
    +* s|dom ProgramPart p +* ProgramPart (Relocated(p,k)) by AMI_1:13;
  end;
  then
A13: X[0];
A14: for i being Element of NAT st X[i] holds X[i+1]
  proof
    let i be Element of NAT such that
A15:  Computation(s,i)
    = Computation(s+*p,i) +* Start-At (IC Computation(s+*p,i) + k)
    +* s|dom ProgramPart p+* ProgramPart (Relocated(p,k));
    reconsider sdom = s|dom ProgramPart p
    as Element of sproduct the Object-Kind of SCM+FSA;
    dom [ProgramPart p] c= the carrier of SCM+FSA by AMI_1:80;
    then dom ProgramPart p c= dom s by AMI_1:79;
    then
A16: dom ProgramPart p = dom (s|dom ProgramPart p) by RELAT_1:91;
    then reconsider sdom as FinPartState of SCM+FSA by FINSET_1:29;
    dom (s|dom [ProgramPart p]) c= NAT by A16,AMI_1:def 40;
    then reconsider sdom as preProgram of SCM+FSA by AMI_1:def 40;
A17:  Computation(s+*p,i+1) = Following( Computation(s+*p,i))
    by AMI_1:14;
    dom (Start-At (IC Computation(s+*p,i) + k)) = {IC SCM+FSA}
    by FUNCOP_1:19;
    then
A18: IC SCM+FSA in dom (Start-At (IC Computation(s+*p,i) + k))
    by TARSKI:def 1;
A19: not IC SCM+FSA in dom ProgramPart(Relocated(p,k)) by AMI_1:101;
A20: dom (sdom) = dom s /\ dom ProgramPart p by RELAT_1:90;
    not IC SCM+FSA in dom ProgramPart p by AMI_1:101;
    then
A21: not IC SCM+FSA in dom (sdom) by A20,XBOOLE_0:def 3;
A22: now thus IC ( Computation(s+*p,i)
      +* Start-At (IC Computation(s+*p,i) + k) +* sdom
      +* [ProgramPart Relocated(p,k)]) = ( Computation(s+*p,i)
      +* Start-At (IC Computation(s+*p,i) + k)
      +* sdom).IC SCM+FSA by A19,FUNCT_4:12
        .= ( Computation(s+*p,i)
      +* Start-At (IC Computation(s+*p,i) + k)).IC SCM+FSA
      by A21,FUNCT_4:12
        .= (Start-At (IC Computation(s+*p,i) + k)).IC SCM+FSA
      by A18,FUNCT_4:14
        .= IC Computation(s+*p,i) + k by FUNCOP_1:87;
    end;
    p is not programmed by A1,AMI_1:109;
    then
A23: IC Computation(s+*p,i) in dom ProgramPart(p) by FUNCT_4:26,
    SCMFSA_3:17;
    then
A24: IC Computation(s+*p,i) in dom IncAddr([ProgramPart p],k)
    by SCMFSA_4:def 6;
A25: ProgramPart(p) c= Computation(s+*p,i) by AMI_1:99,FUNCT_4:26;
    reconsider ii = IC Computation(s+*p,i) as Element of NAT
     by ORDINAL1:def 13;
A26: pi([ProgramPart p],ii)
    = [ProgramPart p].IC Computation(s+*p,i) by A23,AMI_1:def 47
      .= ( Computation(s+*p,i)).IC Computation(s+*p,i)
    by A23,A25,GRFUNC_1:8;
    ProgramPart p c= p by RELAT_1:88;
    then dom ProgramPart p c= dom p by GRFUNC_1:8;
    then (IC Computation(s+*p,i) + k) in dom (Relocated(p,k)) by A23,Th4;
    then (IC Computation(s+*p,i) + k) in dom (ProgramPart (Relocated(p,k)
    )) by AMI_1:106;
    then
A27: CurInstr  Computation(s,i)
    = (ProgramPart (Relocated(p,k))).(IC Computation(s+*p,i) + k)
    by A15,A22,FUNCT_4:14
      .= IncAddr([Shift(ProgramPart p,k)],k).(IC Computation(s+*p,i) + k)
    by Th2
      .= Shift(IncAddr([ProgramPart p],k),k).(IC Computation(s+*p,i) + k)
    by SCMFSA_4:35
      .= IncAddr([ProgramPart p],k).ii by A24,
    VALUED_1:def 12
      .= IncAddr(CurInstr ( Computation(s+*p,i)),k) by A23,A26,SCMFSA_4:24;
    thus Computation(s,i+1) = Following( Computation(s,i)) by AMI_1:14
      .= Exec(IncAddr(CurInstr ( Computation(s+*p,i)),k),
    ( Computation(s+*p,i)) +* Start-At (IC ( Computation(s+*p,i)) + k)
    +* sdom ) +* [ProgramPart Relocated(p,k)] by A15,A27,SCMFSA_3:10
      .= Exec(IncAddr(CurInstr ( Computation(s+*p,i)),k),
    ( Computation(s+*p,i))
    +* Start-At (IC ( Computation(s+*p,i)) + k))
    +* sdom +* ProgramPart (Relocated(p,k)) by SCMFSA_3:10
      .= Computation(s+*p,i+1)
    +* Start-At (IC Computation(s+*p,i+1) + k)
    +* s|dom ProgramPart p +* ProgramPart (Relocated(p,k)) by A17,
    SCMFSA_4:28;
  end;
  thus for i being Element of NAT holds X[i] from NAT_1:sch 1 (A13,A14);
end;

theorem Th15:
  for k being Element of NAT
  for p being FinPartState of SCM+FSA st IC SCM+FSA in dom p
  for s being State of SCM+FSA st p c= s & Relocated(p,k) is autonomic holds
  for i being Element of NAT holds  Computation(s,i)
  = Computation(s+*Relocated(p,k),i)
  +* Start-At (IC Computation(s+*Relocated(p,k),i) -' k)
  +* s|dom ProgramPart Relocated(p,k) +* ProgramPart (p)
proof
  let k be Element of NAT;
  let p be FinPartState of SCM+FSA such that
A1: IC SCM+FSA in dom p;
  let s be State of SCM+FSA such that
A2: p c= s and
A3: Relocated(p,k) is autonomic;
A4: dom Start-At (IC Computation(s+*Relocated(p,k),0)-' k) = {IC SCM+FSA}
  by FUNCOP_1:19;
A5: dom Start-At((IC p)+k) = {IC SCM+FSA} by FUNCOP_1:19;
  ProgramPart p c= p by RELAT_1:88;
  then
A6: ProgramPart p c= s by A2,XBOOLE_1:1;
  Start-At (IC p) c= p by A1,AMI_1:110;
  then
A7: Start-At (IC p) c= s by A2,XBOOLE_1:1;
  dom [ProgramPart Relocated(p,k)] c= the carrier of SCM+FSA by AMI_1:80;
  then
A8: dom ProgramPart Relocated(p,k) c= dom s by AMI_1:79;
A9: IC SCM+FSA in dom Relocated(p,k) by Th5;
A10: now thus IC Computation(s+*Relocated(p,k),0)
    = (s +* Relocated(p,k)).IC SCM+FSA by AMI_1:13
      .= Relocated(p,k).IC SCM+FSA by A9,FUNCT_4:14
      .= IC Relocated(p,k) by A9,AMI_1:def 43;
  end;
  DataPart p c= p by RELAT_1:88;
  then
A11: DataPart p c= s by A2,XBOOLE_1:1;
A12: dom DataPart p misses dom ProgramPart Relocated(p,k) by AMI_1:104;
A13: {IC SCM+FSA} misses dom DataPart p by AMI_1:102;
  {IC SCM+FSA} misses dom ProgramPart Relocated(p,k) by AMI_1:103;
  then
A14: {IC SCM+FSA} /\ dom ProgramPart Relocated(p,k) = {} by XBOOLE_0:def 7;
A15: now dom(Start-At (IC Computation(s+*Relocated(p,k),0)-' k))
    /\ dom (s|(dom ProgramPart Relocated(p,k))) = {IC SCM+FSA} /\ (dom s /\
    dom ProgramPart Relocated(p,k)) by A4,RELAT_1:90

.= ({IC SCM+FSA} /\ dom ProgramPart Relocated(p,k)) /\ dom s by XBOOLE_1:16
      .= {} by A14;
    hence dom(Start-At (IC Computation(s+*Relocated(p,k),0)-' k))
    misses dom (s|(dom ProgramPart Relocated(p,k))) by XBOOLE_0:def 7;
  end;
A16: dom ProgramPart Relocated(p,k) =
  dom(s|(dom ProgramPart Relocated(p,k))) by A8,RELAT_1:91;
  set IS = Start-At (IC Computation(s+*Relocated(p,k),0)-' k);
  set IP = Start-At((IC p)+k);
  set SD = s|(dom ProgramPart Relocated(p,k));
  set PP = ProgramPart p;
  set DP = DataPart p;
  set PR = ProgramPart Relocated(p,k);
  defpred X[Element of NAT] means  Computation(s,$1)
  = Computation(s+*Relocated(p,k),$1)
  +* Start-At (IC Computation(s+*Relocated(p,k),$1) -' k)
  +* s|(dom ProgramPart Relocated(p,k)) +* ProgramPart p;
  now thus Computation(s,0) = s by AMI_1:13
      .= s +* PP by A6,FUNCT_4:79
      .= s +* Start-At (IC p) +* PP by A7,FUNCT_4:79
      .= s +* Start-At (IC p + k -' k) +* PP by NAT_D:34
      .= s +* IS +* PP by A10,Th6
      .= s +* SD +* IS +* PP by FUNCT_4:80
      .= s +* PR +* SD +* IS +* PP by A16,FUNCT_4:78
      .= s +* PR +* (SD +* IS) +* PP by FUNCT_4:15
      .= s +* PR +* (IS +* SD) +* PP by A15,FUNCT_4:36
      .= s +* PR +* IS +* SD +* PP by FUNCT_4:15
      .= (s +* DP) +* PR +* IS +* SD +* PP by A11,FUNCT_4:79
      .= (s +*(DP +* PR))+* IS +* SD +* PP by FUNCT_4:15
      .= (s +*(PR +* DP))+* IS +* SD +* PP by A12,FUNCT_4:36
      .= (s +* PR) +* DP +* IS +* SD +* PP by FUNCT_4:15
      .=((s +* PR) +* DP) +* IP +* IS +* SD +* PP by A4,A5,FUNCT_4:78
      .= (s +*(PR +* DP))+* IP +* IS +* SD +* PP by FUNCT_4:15
      .= s +*(PR +* DP +* IP) +* IS +* SD +* PP by FUNCT_4:15
      .= s +*(PR +* (DP +* IP))+* IS +* SD +* PP by FUNCT_4:15
      .= s +*(PR +* (IP +* DP))+* IS +* SD +* PP by A5,A13,FUNCT_4:36
      .= s +*(PR +* IP +* DP) +* IS +* SD +* PP by FUNCT_4:15;
  end;
  then  Computation(s,0)
  = s +*(IP +* PR +* DP) +* IS +* SD +* PP by A5,AMI_1:103,FUNCT_4:36
    .= s +* Relocated(p,k) +* IS +* SD +* PP by Th2
    .= Computation(s+*Relocated(p,k),0)
  +* Start-At (IC Computation(s+*Relocated(p,k),0)-' k)
  +* s|(dom ProgramPart Relocated(p,k)) +* ProgramPart p by AMI_1:13;
  then
A17: X[0];
A18: for i being Element of NAT st X[i] holds X[i+1]
  proof
    let i be Element of NAT such that
A19:  Computation(s,i) = Computation(s+*Relocated(p,k),i)
    +* Start-At (IC Computation(s+*Relocated(p,k),i) -' k)
    +* s|dom ProgramPart Relocated(p,k) +* ProgramPart p;
    reconsider sdom = s|(dom ProgramPart Relocated(p,k))
    as Element of sproduct the Object-Kind of SCM+FSA;
    dom [ProgramPart Relocated(p,k)] c= the carrier of SCM+FSA by AMI_1:80;
    then dom ProgramPart Relocated(p,k) c= dom s by AMI_1:79;
    then
A20: dom ProgramPart Relocated(p,k) =
    dom (s|(dom ProgramPart Relocated(p,k))) by RELAT_1:91;
    then reconsider sdom as FinPartState of SCM+FSA by FINSET_1:29;
    dom (s|(dom [ProgramPart Relocated(p,k)])) c= NAT by A20,AMI_1:def 40;
    then reconsider sdom as preProgram of SCM+FSA by AMI_1:def 40;
A21:  Computation(s+*Relocated(p,k),i+1)
    = Following( Computation(s+*Relocated(p,k),i)) by AMI_1:14;
    dom (Start-At (IC Computation(s+*Relocated(p,k),i) -' k))
    = {IC SCM+FSA} by FUNCOP_1:19;
    then
A22: IC SCM+FSA in
    dom (Start-At (IC Computation(s+*Relocated(p,k),i) -' k))
    by TARSKI:def 1;
A23: not IC SCM+FSA in dom ProgramPart p by AMI_1:101;
A24: dom (sdom) = dom s /\ dom ProgramPart Relocated(p,k) by RELAT_1:90;
    not IC SCM+FSA in dom ProgramPart Relocated(p,k) by AMI_1:101;
    then
A25: not IC SCM+FSA in dom (sdom) by A24,XBOOLE_0:def 3;
A26: IC ( Computation(s+*Relocated(p,k),i)
    +* Start-At (IC Computation(s+*Relocated(p,k),i) -' k) +* sdom
    +* [ProgramPart p]) = ( Computation(s+*Relocated(p,k),i)
    +* Start-At (IC Computation(s+*Relocated(p,k),i) -' k)
    +* sdom).IC SCM+FSA by A23,FUNCT_4:12
      .= ( Computation(s+*Relocated(p,k),i)
    +* Start-At (IC Computation(s+*Relocated(p,k),i) -' k)).IC SCM+FSA
    by A25,FUNCT_4:12
      .= (Start-At (IC Computation(s+*Relocated(p,k),i) -' k)).IC SCM+FSA
    by A22,FUNCT_4:14
      .= IC Computation(s+*Relocated(p,k),i) -' k by FUNCOP_1:87;
    IC SCM+FSA in dom Relocated(p,k) by Th5;
    then Relocated(p,k) is not programmed by AMI_1:109;
    then
A27: IC Computation(s+*Relocated(p,k),i)
    in dom ProgramPart(Relocated(p,k)) by A3,FUNCT_4:26,SCMFSA_3:17;
A28: ProgramPart(Relocated(p,k)) c= Computation(s+*Relocated(p,k),i)
    by AMI_1:99,FUNCT_4:26;
  reconsider jk = IC Computation(s+*Relocated(p,k),i) as Element of NAT
        by ORDINAL1:def 13;
    jk in { j+k : j in dom ProgramPart(p) } by A27,Th3;
    then consider j being Element of NAT such that
A30: jk = j+k & j in dom ProgramPart(p);
A31: insloc(j+k) -' k + k = insloc(j+k) by NAT_D:34;
A32: insloc(j+k) -' k = insloc j by NAT_D:34;
    reconsider pp = [ProgramPart p] as preProgram of SCM+FSA;
    dom Shift(pp, k) = { m+k : m in dom pp} by VALUED_1:def 12;
    then
A33: insloc(j+k) in dom Shift(ProgramPart(p), k) by A30;
    reconsider ii = IC Computation(s+*Relocated(p,k),i) as Element of NAT
     by ORDINAL1:def 13;
A34: CurInstr  Computation(s,i) = (ProgramPart p).
    (IC Computation(s+*Relocated(p,k),i) -' k) by A19,A26,A30,A32,
    FUNCT_4:14
      .= Shift(ProgramPart p, k).
    (IC Computation(s+*Relocated(p,k),i)) by A30,A31,VALUED_1:def 12
      .= pi([Shift(ProgramPart p, k)],ii)
    by A30,A33,AMI_1:def 47;
    IncAddr(pi([Shift(ProgramPart p, k)],ii), k)
    = IncAddr([Shift(ProgramPart p,k)],k).
    (IC Computation(s+*Relocated(p,k),i)) by A30,A33,SCMFSA_4:24

.= (ProgramPart Relocated(p,k)).(IC Computation(s+*Relocated(p,k),i))
    by Th2

.= CurInstr ( Computation(s+*Relocated(p,k),i)) by A27,A28,GRFUNC_1:8;
    then
A35: Exec(CurInstr  Computation(s,i),  Computation(s+*Relocated(p,k),i)
    +* Start-At (IC Computation(s+*Relocated(p,k),i) -' k))
    = Following( Computation(s+*Relocated(p,k),i))

+* Start-At ((IC Following Computation(s+*Relocated(p,k),i)) -' k) by
    A30,A34,SCMFSA_4:29;
     Computation(s,i+1) = Following( Computation(s,i)) by AMI_1:14
      .= Exec(CurInstr  Computation(s,i),
     Computation(s+*Relocated(p,k),i)
    +* Start-At (IC Computation(s+*Relocated(p,k),i) -' k)
    +* sdom ) +* [ProgramPart p] by A19,SCMFSA_3:10
      .= Following( Computation(s+*Relocated(p,k),i))
    +* Start-At ((IC Following Computation(s+*Relocated(p,k),i)) -' k)
    +* sdom +* ProgramPart p by A35,SCMFSA_3:10;
    hence  Computation(s,i+1) = Computation(s+*Relocated(p,k),i+1)
    +* Start-At (IC Computation(s+*Relocated(p,k),i+1) -' k)
    +* s|dom ProgramPart Relocated(p,k) +* ProgramPart p by A21;
  end;
  thus for i being Element of NAT holds X[i] from NAT_1:sch 1 (A17,A18);
end;

theorem Th16:
  for p being FinPartState of SCM+FSA st IC SCM+FSA in dom p
  for k being Element of NAT holds
  p is autonomic iff Relocated(p,k) is autonomic
proof
  let p be FinPartState of SCM+FSA such that
A1: IC SCM+FSA in dom p;
  let k be Element of NAT;
  hereby
    assume
A2: p is autonomic;
    thus Relocated(p,k) is autonomic
    proof
      let s1,s2 be State of SCM+FSA such that
A3:   Relocated(p,k) c= s1 & Relocated(p,k) c= s2;
      let i be Element of NAT;
A4:    Computation(s1,i)
      = Computation(s1+*p,i) +* Start-At (IC Computation(s1+*p,i) + k)
      +* s1|dom ProgramPart p +* ProgramPart (Relocated(p,k))
      by A1,A2,A3,Th14;
A5:    Computation(s2,i)
      = Computation(s2+*p,i) +* Start-At (IC Computation(s2+*p,i) + k)
      +* s2|dom ProgramPart p +* ProgramPart (Relocated(p,k))
      by A1,A2,A3,Th14;
      p c= s1 +* p & p c= s2 +* p by FUNCT_4:26;
      then
A6:    Computation(s1+*p,i)|dom (p ) = Computation(s2+*p,i) |dom (p )
      by A2,AMI_1:def 25;
A7:   dom (Start-At ((IC p)+k)) = {IC SCM+FSA} by FUNCOP_1:19;
A8:   dom (Start-At ((IC Computation(s1+*p,i))+k)) = {IC SCM+FSA}
      by FUNCOP_1:19;
A9:   dom (Start-At ((IC Computation(s2+*p,i))+k)) = {IC SCM+FSA}
      by FUNCOP_1:19;
A10:  {IC SCM+FSA} c= dom p by A1,ZFMISC_1:37;
A11:  Start-At (IC Computation(s1+*p,i))
      = Computation(s1+*p,i)|{IC SCM+FSA} by AMI_1:95
        .= Computation(s2+*p,i)|{IC SCM+FSA} by A6,A10,RELAT_1:188
        .= Start-At (IC Computation(s2+*p,i)) by AMI_1:95;
A12:  dom (Start-At ((IC p) + k))
      misses dom ProgramPart (Relocated(p,k)) by A7,AMI_1:103;
      dom [ProgramPart p] c= the carrier of SCM+FSA by AMI_1:80;
      then dom ProgramPart p c= dom s1 by AMI_1:79;
      then
A13:  dom(s1|dom ProgramPart p) = dom ProgramPart p by RELAT_1:91;
      dom [ProgramPart p] c= the carrier of SCM+FSA by AMI_1:80;
      then dom ProgramPart p c= dom s2 by AMI_1:79;
      then
A14:  dom(s2|dom ProgramPart p) = dom ProgramPart p by RELAT_1:91;
A15:   Computation(s1,i)|dom (Start-At ((IC p)+k))
      = ( Computation(s1+*p,i) +* Start-At (IC Computation(s1+*p,i) + k)
      +* s1|dom ProgramPart p) |dom (Start-At ((IC p)+k)) by A4,A12,FUNCT_4:76

.= ( Computation(s1+*p,i) +* Start-At (IC Computation(s1+*p,i) + k))
      |dom (Start-At ((IC p)+k)) by A7,A13,AMI_1:103,FUNCT_4:76
        .= Start-At (IC Computation(s1+*p,i) + k) by A7,A8,FUNCT_4:24
        .= Start-At (IC Computation(s2+*p,i) + k) by A11,SCMNORM:9

.= ( Computation(s2+*p,i) +* Start-At (IC Computation(s2+*p,i) + k))
      |dom (Start-At ((IC p)+k)) by A7,A9,FUNCT_4:24

.= ( Computation(s2+*p,i) +* Start-At (IC Computation(s2+*p,i) + k)
      +* s2|dom ProgramPart p)
      |dom (Start-At ((IC p)+k)) by A7,A14,AMI_1:103,FUNCT_4:76
        .= Computation(s2,i)|dom (Start-At ((IC p)+k)) by A5,A12,FUNCT_4:76;
A16:   Computation(s1,i)|dom (IncAddr([Shift(ProgramPart p,k)],k))
      = Computation(s1,i)|dom (ProgramPart (Relocated(p,k))) by Th2
        .= ProgramPart (Relocated(p,k)) by A4,FUNCT_4:24
        .= Computation(s2,i)|dom (ProgramPart (Relocated(p,k)))
      by A5,FUNCT_4:24
        .= Computation(s2,i)|dom (IncAddr([Shift(ProgramPart p,k)],k)) by Th2;
      DataPart p c= p by RELAT_1:88;
      then
A17:  dom DataPart p c= dom p by GRFUNC_1:8;
A18:  dom(DataPart p) misses dom(ProgramPart(Relocated(p,k)))by AMI_1:104;
A19:  dom(DataPart p) misses dom (Start-At (IC Computation(s1+*p,i) + k))
      by A8,AMI_1:102;
A20:  dom(DataPart p) misses dom (Start-At (IC Computation(s2+*p,i) + k))
      by A9,AMI_1:102;
A21:   Computation(s1,i)|dom (DataPart p)
      = ( Computation(s1+*p,i) +* Start-At (IC Computation(s1+*p,i) + k)
      +* s1|dom ProgramPart p) | dom(DataPart p) by A4,A18,FUNCT_4:76
.= ( Computation(s1+*p,i) +* Start-At (IC Computation(s1+*p,i) + k))
      | dom(DataPart p) by A13,AMI_1:104,FUNCT_4:76
        .= ( Computation(s1+*p,i)) | dom (DataPart p) by A19,FUNCT_4:76
        .= ( Computation(s2+*p,i)) | dom (DataPart p) by A6,A17,RELAT_1:188
.= ( Computation(s2+*p,i) +* Start-At (IC Computation(s2+*p,i) + k))
      | dom(DataPart p) by A20,FUNCT_4:76
.= ( Computation(s2+*p,i) +* Start-At (IC Computation(s2+*p,i) + k)
      +* s2|dom ProgramPart p) | dom(DataPart p) by A14,AMI_1:104,FUNCT_4:76
        .= Computation(s2,i)|dom (DataPart p) by A5,A18,FUNCT_4:76;
A22:   Computation(s1,i)|dom (Start-At ((IC p)+k) +*
      IncAddr([Shift(ProgramPart p,k)],k))
      = Computation(s1,i)|(dom (Start-At ((IC p)+k)) \/
      dom (IncAddr([Shift(ProgramPart p,k)],k))) by FUNCT_4:def 1
        .= Computation(s2,i)|dom (Start-At ((IC p)+k)) \/
       Computation(s2,i)|dom (IncAddr([Shift(ProgramPart p,k)],k)) by A15,A16,
      RELAT_1:107
        .= Computation(s2,i)|(dom (Start-At ((IC p)+k)) \/
      dom (IncAddr([Shift(ProgramPart p,k)],k))) by RELAT_1:107
        .= Computation(s2,i)|dom (Start-At ((IC p)+k) +*
      IncAddr([Shift(ProgramPart p,k)],k)) by FUNCT_4:def 1;
      thus Computation(s1,i)|dom Relocated(p,k)
      = Computation(s1,i)|(dom (Start-At ((IC p)+k) +*
      IncAddr([Shift(ProgramPart p,k)],k)) \/
      dom (DataPart p)) by FUNCT_4:def 1
        .= Computation(s2,i)|dom (Start-At ((IC p)+k) +*
      IncAddr([Shift(ProgramPart p,k)],k)) \/
       Computation(s2,i)|dom (DataPart p) by A21,A22,RELAT_1:107
        .= Computation(s2,i)|(dom (Start-At ((IC p)+k) +*
      IncAddr([Shift(ProgramPart p,k)],k)) \/ dom (DataPart p)) by RELAT_1:107
        .= Computation(s2,i)|dom Relocated(p,k) by FUNCT_4:def 1;
    end;
  end;
  assume
A23: Relocated(p,k) is autonomic;
  thus p is autonomic
  proof
    let s1,s2 be State of SCM+FSA such that
A24: p c= s1 & p c= s2;
    let i be Element of NAT;
A25:  Computation(s1,i) = Computation(s1+*Relocated(p,k),i)
    +* Start-At (IC Computation(s1+*Relocated(p,k),i) -' k)
    +* s1|dom ProgramPart Relocated(p,k) +* ProgramPart (p)
    by A1,A23,A24,Th15;
A26:  Computation(s2,i) = Computation(s2+*Relocated(p,k),i)
    +* Start-At (IC Computation(s2+*Relocated(p,k),i) -' k)
    +* s2|dom ProgramPart Relocated(p,k) +* ProgramPart (p)
    by A1,A23,A24,Th15;
    Relocated(p,k) c= s1 +* Relocated(p,k) &
    Relocated(p,k) c= s2 +* Relocated(p,k) by FUNCT_4:26;
    then
A27:  Computation(s1+*Relocated(p,k),i)|dom (Relocated(p,k))
    = Computation(s2+*Relocated(p,k),i)|dom (Relocated(p,k)) by A23,
    AMI_1:def 25;
A28: dom (Start-At (IC p)) = {IC SCM+FSA} by FUNCOP_1:19;
A29: dom (Start-At ((IC Computation(s1+*Relocated(p,k),i)) -' k))
    = {IC SCM+FSA} by FUNCOP_1:19;
A30: dom (Start-At ((IC Computation(s2+*Relocated(p,k),i)) -' k))
    = {IC SCM+FSA} by FUNCOP_1:19;
    IC SCM+FSA in dom Relocated(p,k) by Th5;
    then
A31: {IC SCM+FSA} c= dom Relocated(p,k) by ZFMISC_1:37;
A32: Start-At (IC Computation(s1+*Relocated(p,k),i))
    = Computation(s1+*Relocated(p,k),i)|{IC SCM+FSA} by AMI_1:95
      .= Computation(s2+*Relocated(p,k),i)|{IC SCM+FSA}
    by A27,A31,RELAT_1:188
      .= Start-At (IC Computation(s2+*Relocated(p,k),i)) by AMI_1:95;
A33: dom (Start-At (IC p)) misses dom (ProgramPart p) by A28,AMI_1:103;
    dom [ProgramPart Relocated(p,k)] c= the carrier of SCM+FSA by AMI_1:80;
    then dom ProgramPart Relocated(p,k) c= dom s1 by AMI_1:79;
    then
A34: dom(s1|dom ProgramPart Relocated(p,k))
    = dom ProgramPart Relocated(p,k) by RELAT_1:91;
    dom [ProgramPart Relocated(p,k)] c= the carrier of SCM+FSA by AMI_1:80;
    then dom ProgramPart Relocated(p,k) c= dom s2 by AMI_1:79;
    then
A35: dom(s2|dom ProgramPart Relocated(p,k))
    = dom ProgramPart Relocated(p,k) by RELAT_1:91;
A36:  Computation(s1,i)|dom (Start-At (IC p))
    = ( Computation(s1+*Relocated(p,k),i)
    +* Start-At (IC Computation(s1+*Relocated(p,k),i) -' k)
    +* s1|dom ProgramPart Relocated(p,k))
    |dom (Start-At (IC p)) by A25,A33,FUNCT_4:76
      .= ( Computation(s1+*Relocated(p,k),i)
    +* Start-At (IC Computation(s1+*Relocated(p,k),i) -' k))
    |dom (Start-At (IC p)) by A28,A34,AMI_1:103,FUNCT_4:76
      .= Start-At (IC Computation(s1+*Relocated(p,k),i) -' k)
    by A28,A29,FUNCT_4:24
      .= Start-At (IC Computation(s2+*Relocated(p,k),i) -' k)
    by A32,SCMNORM:10
      .= ( Computation(s2+*Relocated(p,k),i)
    +* Start-At (IC Computation(s2+*Relocated(p,k),i) -' k))
    |dom (Start-At (IC p)) by A28,A30,FUNCT_4:24
      .= ( Computation(s2+*Relocated(p,k),i)
    +* Start-At (IC Computation(s2+*Relocated(p,k),i) -' k)
    +* s2|dom ProgramPart Relocated(p,k))
    |dom (Start-At (IC p)) by A28,A35,AMI_1:103,FUNCT_4:76
      .= Computation(s2,i)|dom (Start-At (IC p)) by A26,A33,FUNCT_4:76;
A37:  Computation(s1,i)|dom (ProgramPart p)
    = ProgramPart (p) by A25,FUNCT_4:24
      .= Computation(s2,i)|dom (ProgramPart p) by A26,FUNCT_4:24;
    DataPart (Relocated(p,k)) c= Relocated(p,k) by RELAT_1:88;
    then DataPart p c= Relocated(p,k) by Th1;
    then
A38: dom (DataPart p) c= dom (Relocated(p,k)) by GRFUNC_1:8;
A39: dom (DataPart p) misses dom (ProgramPart p) by AMI_1:104;
A40: dom(DataPart p) misses
    dom(Start-At (IC Computation(s1+*Relocated(p,k),i) -' k))
    by A29,AMI_1:102;
A41: dom(DataPart p) misses
    dom(Start-At (IC Computation(s2+*Relocated(p,k),i) -' k))
    by A30,AMI_1:102;
A42:  Computation(s1,i)|dom (DataPart p)
    = ( Computation(s1+*Relocated(p,k),i)
    +* Start-At (IC Computation(s1+*Relocated(p,k),i) -' k)
    +* s1|dom ProgramPart Relocated(p,k))
    | dom(DataPart p) by A25,A39,FUNCT_4:76
      .= ( Computation(s1+*Relocated(p,k),i) +*
    Start-At (IC Computation(s1+*Relocated(p,k),i) -' k))
    | dom(DataPart p) by A34,AMI_1:104,FUNCT_4:76
      .= ( Computation(s1+*Relocated(p,k),i)) | dom (DataPart p)
    by A40,FUNCT_4:76
      .= ( Computation(s2+*Relocated(p,k),i)) | dom (DataPart p)
    by A27,A38,RELAT_1:188
      .= ( Computation(s2+*Relocated(p,k),i) +*
    Start-At (IC Computation(s2+*Relocated(p,k),i) -' k))
    | dom(DataPart p) by A41,FUNCT_4:76
      .= ( Computation(s2+*Relocated(p,k),i)
    +* Start-At (IC Computation(s2+*Relocated(p,k),i) -' k)
    +* s2|dom ProgramPart Relocated(p,k))
    | dom(DataPart p) by A35,AMI_1:104,FUNCT_4:76
      .= Computation(s2,i)|dom (DataPart p) by A26,A39,FUNCT_4:76;
A43:  Computation(s1,i)|dom (Start-At (IC p) +* ProgramPart p)
    = Computation(s1,i)|(dom (Start-At (IC p)) \/ dom (ProgramPart p))
    by FUNCT_4:def 1
      .= Computation(s2,i)|dom (Start-At (IC p)) \/
     Computation(s2,i)|dom (ProgramPart p) by A36,A37,RELAT_1:107
      .= Computation(s2,i)|(dom (Start-At (IC p)) \/ dom (ProgramPart p))
    by RELAT_1:107
      .= Computation(s2,i)|dom (Start-At (IC p) +* ProgramPart p)
    by FUNCT_4:def 1;
    thus Computation(s1,i)|dom p
    = Computation(s1,i)|dom (Start-At (IC p) +* ProgramPart p +*
    DataPart p ) by A1,AMI_1:108
      .= Computation(s1,i)|(dom (Start-At (IC p) +* ProgramPart p) \/
    dom (DataPart p)) by FUNCT_4:def 1
      .= Computation(s2,i)|dom (Start-At (IC p) +* ProgramPart p ) \/
     Computation(s2,i)|dom (DataPart p) by A42,A43,RELAT_1:107
      .= Computation(s2,i)|(dom (Start-At (IC p) +* ProgramPart p) \/
    dom (DataPart p)) by RELAT_1:107
      .= Computation(s2,i)|dom (Start-At (IC p) +*
    ProgramPart p +* DataPart p) by FUNCT_4:def 1
      .= Computation(s2,i)|dom p by A1,AMI_1:108;
  end;
end;

theorem Th17:
  for p being halting autonomic FinPartState of SCM+FSA st IC SCM+FSA in dom p
  for k being Element of NAT holds
  DataPart(Result(p)) = DataPart(Result(Relocated(p,k)))
proof
  let p be halting autonomic FinPartState of SCM+FSA such that
A1: IC SCM+FSA in dom p;
  let k be Element of NAT;
  consider s being State of SCM+FSA such that
A2: p c= s by CARD_3:97;
  s is halting by A2,AMI_1:def 26;
  then consider j1 being Element of NAT such that
A3: Result(s) = Computation(s,j1) and
A4: CurInstr(Result(s)) = halt SCM+FSA by AMI_1:def 22;
  consider t being State of SCM+FSA such that
A5: Relocated(p,k) c= t by CARD_3:97;
  reconsider s3 = s +* DataPart t as State of SCM+FSA;
  t.(IC Computation(t,j1)) = CurInstr Computation(t,j1) by AMI_1:54
    .= IncAddr(CurInstr( Computation(s,j1)), k) by A1,A2,A5,Th12
    .= halt SCM+FSA by A3,A4,SCMFSA_4:8;
  then
A7: Result t = Computation(t,j1) by AMI_1:56;
A9: Relocated(p,k) is halting & Relocated(p,k) is autonomic by A1,Th13,Th16;
  thus DataPart(Result(p))
    = DataPart((Result s)|dom p) by A2,AMI_1:def 28
    .= (Result s) | (dom p /\(Int-Locations \/
  FinSeq-Locations)) by RELAT_1:100,SCMFSA_2:127
    .= (Result s) | dom DataPart p by RELAT_1:90,SCMFSA_2:127
    .= (Result t) | dom (DataPart Relocated(p,k)) by A3,A7,A1,A2,A5,Th12
    .= (Result t) | (dom Relocated(p,k) /\ (Int-Locations \/
  FinSeq-Locations)) by RELAT_1:90,SCMFSA_2:127
    .= DataPart((Result t) | dom Relocated(p,k)) by RELAT_1:100,SCMFSA_2:127
    .= DataPart (Result(Relocated(p,k))) by A5,A9,AMI_1:def 28;
end;

:: Relocatability

theorem
  for F being PartFunc of FinPartSt SCM+FSA, FinPartSt SCM+FSA,
  p being FinPartState of SCM+FSA st IC SCM+FSA in dom p & F is data-only
  for k being Element of NAT holds p computes F iff Relocated( p,k) computes F
proof
  let F be PartFunc of FinPartSt SCM+FSA ,FinPartSt SCM+FSA,
  p be FinPartState of SCM+FSA such that
A1: IC SCM+FSA in dom p and
A2: F is data-only;
  let k be Element of NAT;
  hereby
    assume
A3: p computes F;
    thus Relocated( p,k) computes F
    proof
      let x be set;
      assume
A4:   x in dom F;
      dom F c= FinPartSt SCM+FSA by RELSET_1:12;
      then reconsider s = x as FinPartState of SCM+FSA by A4,AMI_1:125;
      reconsider s as data-only FinPartState of SCM+FSA by A2,A4,AMI_1:def 51;
      take s;
      thus x=s;
      consider s1 being FinPartState of SCM+FSA such that
A5:   x = s1 & p +* s1 is pre-program of SCM+FSA &
      F.s1 c= Result(p +* s1) by A3,A4,AMI_1:def 29;
      reconsider Fs1 = F.s1 as FinPartState of SCM+FSA
       by A5,CARD_3:80;
A6:   Fs1 is data-only by A2,A4,A5,AMI_1:def 51;
      then
A7:   F.s1 c= DataPart(Result(p +* s1)) by A5,AMI_1:107;
A8:   Relocated(p,k) +* s = Relocated((p +* s) ,k) by A1,Th9;
      dom(p +* s) = dom p \/ dom s by FUNCT_4:def 1;
      then
A9:   IC SCM+FSA in dom(p +* s) by A1,XBOOLE_0:def 2;
      hence Relocated(p,k) +* s is pre-program of SCM+FSA by A5,A8,Th13,Th16;
      DataPart(Result(p +* s1))
      = DataPart(Result(Relocated(p +* s,k))) by A5,A9,Th17
        .= DataPart(Result(Relocated(p,k) +* s)) by A1,Th9;
      hence F.s c= Result(Relocated(p,k) +* s) by A5,A6,A7,AMI_1:107;
    end;
  end;
  assume
A10: Relocated( p,k) computes F;
  let x be set;
  assume
A11: x in dom F;
  dom F c= FinPartSt SCM+FSA by RELSET_1:12;
  then reconsider s = x as FinPartState of SCM+FSA by A11,AMI_1:125;
  reconsider s as data-only FinPartState of SCM+FSA by A2,A11,AMI_1:def 51;
  take s;
  thus x=s;
  consider s1 being FinPartState of SCM+FSA such that
A12: x = s1 & Relocated(p,k) +* s1 is pre-program of SCM+FSA &
  F.s1 c= Result (Relocated(p,k) +* s1) by A10,A11,AMI_1:def 29;
  reconsider Fs1 = F.s1 as FinPartState of SCM+FSA
   by A12,CARD_3:80;
A13: Fs1 is data-only by A2,A11,A12,AMI_1:def 51;
  then
A14: F.s1 c= DataPart(Result(Relocated(p,k) +* s1)) by A12,AMI_1:107;
A15: Relocated(p,k) +* s = Relocated((p +* s),k) by A1,Th9;
  dom(p +* s) = dom p \/ dom s by FUNCT_4:def 1;
  then
A16: IC SCM+FSA in dom(p +* s) by A1,XBOOLE_0:def 2;
  then
A17: p +* s is autonomic by A12,A15,Th16;
  then
A18: p +* s is halting by A12,A15,A16,Th13;
  thus p +* s is pre-program of SCM+FSA by A12,A15,A16,A17,Th13;
  DataPart(Result(Relocated(p,k) +* s1))
  = DataPart(Result(Relocated(p +* s,k))) by A1,A12,Th9
    .= DataPart(Result(p +* s)) by A16,A17,A18,Th17;
  hence F.s c= Result(p +* s) by A12,A13,A14,AMI_1:107;
end;

