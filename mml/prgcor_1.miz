:: Correctness of Non Overwriting Programs. {P}art {I}
::  by Yatsuka Nakamura
::
:: Received December 5, 2003
:: Copyright (c) 2003 Association of Mizar Users

environ

 vocabulary RELAT_1, FUNCT_1, FINSEQ_1, ARYTM_1, ARYTM_3, INT_1, NAT_1,
      PARTFUN1, GROUP_1, PRGCOR_1;
 notation TARSKI, XCMPLX_0, XREAL_0, FUNCT_1, FINSEQ_1, INT_1, BINARITH,
      RELSET_1, PARTFUN1, NAT_1, EULER_2;
 constructors WELLORD2, FINSEQOP, REAL_1, SQUARE_1, TOPREAL1, FINSEQ_4, SEQ_1,
      XCMPLX_0, CQC_LANG, RFINSEQ, INTEGRA2, INT_1, ABSVALUE, BINARITH,
      RELSET_1, PARTFUN1, NEWTON, NAT_1, ORDINAL1, ORDINAL2, XREAL_0, EULER_2;
 clusters NUMBERS, FINSET_1, PRELAMB, FUNCT_1, RELSET_1, FINSEQ_1, XREAL_0,
      ARYTM_3, FUNCT_2, REAL_1, NAT_1, RFINSEQ, INTEGRA2, INT_1, SQUARE_1,
      ABSVALUE, PARTFUN1, NEWTON, ORDINAL1, ORDINAL2;
 requirements REAL, NUMERALS, BOOLE, SUBSET, ARITHM;
 definitions TARSKI;
 theorems AXIOMS, FINSEQ_1, REAL_1, NAT_1, FUNCT_1, SQUARE_1, XCMPLX_1, PRE_FF,
      INT_1, GOBOARD9, NEWTON, BINARITH, JORDAN4, GR_CY_1, CARD_4, HEINE,
      JORDAN3, SCMFSA9A, JORDAN1D, FINSEQ_3;
 schemes NAT_1, FINSEQ_1;

begin
::----------------------
::----------------------
::  Non overwriting program is a program where each variable used in it
::is written only just one time, but the control variables used for
::for-statement are exceptional.  Contrarily, variables are allowed
::to be read many times.
::    There are other restriction for non overwriting program. For statements,
::only the followings are allowed: substituting-statement, if-else-statement,
::for-statement(with break and without break), function(correct one)-call
::-statement and return-statement.
::   Grammars of non overwriting program is like one of C-language.
::   For type of variables, 'int','real","char" and "float" can be used, and
::and array of them can also be used. For operation, "+", "-" and "*"
::are used for a type int, "+","-","*" and "/" are used for a type float.
::    User can also define structures like in C.
::    Non overwriting program can be translated to (predicative) logic
::formula in definition part to define functions. If a new function
::is correctly defined, a corresponding program is correct, if it does not use
::arrays. If it uses arrays, area check is necessary in the following
::theorem.
::    Semantic correctness is shown by some theorems following the definition.
::These theorems must tie up the result of the program and mathematical concepts
::introduced before.
::   Correctness is proven function-wise. We must use only
::correctness-proven functions to define a new function(to write a new
::program as a form of a function).
::  Here, we present two program of division function of two natural
::numbers and of two integers. An algorithm is checked for each case, by
::proving correctness of the definitions.
::  We also do an area check of index of arrays used in one of the programs.
::---------
:: type correspondence:
::  int .....> Integer
::  float .....> Real
::  char ......> Subset of A
::---------
:: statement correspondence:
::   We use tr(statement_i) for translated logic formula corresponding
:: to statement_i.
::  i=j+k-l;  ....>    i=j+k-l
::  i=j*k;  ....>    i=j*k
::  x=y*z/s;  ....>   x=y*z/s
::  statement_1;statement2;statement3;...
::   .......>    tr(statement_1)& tr(statement_2)& tr(statement_3)&...
::  if (statement_1){statement_2;statement_3;...}
::   .......>    tr(statement_1) implies tr(statement_2)& tr(statement_3)&..;
::  if (statement_1){statement_2;statement_3;...} else statement_4;
::   .......>  (tr(statement_1) implies tr(statement_2)& tr(statement_3)&..)&
::             (not tr(statement_1) implies tr(statement_4));
::  for (i=1;i++;i<=n)statement_1;
::   .......> for i being Integer st 1<=i & i<=n holds tr(statement_1);
::  for (i=1;i++;i<=n){statement_1;statement_2;...;if (statement_3)break;}
::   .......> (ex j being Integer st 1<=j & j<=n &
::                 (for i being Integer st 1<=i & i<j holds
::                  tr(statement_1 for i)& tr(statement_2 for i)&...
::                                & not (statement_3 for i))&
::                 &tr(statement_1 for j)& tr(statement_2 for j)&...
::                 &statement_3 for j)
::                or
::                 (for i being Integer st 1<=i & i<=n holds
::                  tr(statement_1 for i)& tr(statement_2 for i)&...
::                                & not (statement_3 for i));
:: ***If "break" is expected in the above "for statement",
:: then "or" part can be deleted.
::------
:: arrays correspondence:
::  int a[n+1]   .....> ex a being FinSequence of INT st len a=n & ...;
::  float x[n+1] .....> ex x being FinSequence of REAL st len x=n & ...;
::  Declaration of variables corresponds to existential statement.
::------
:: various correctness problem:
::   1. mathematical algorithm   .....>  a function is well defined in Mizar
::   2. semantic correctness   .....> by theorems connecting it with
::         other mathematical or computational concepts in Mizar
::   3. area check of variable of array .....> by a theorem checking
::                                                the area, in Mizar
::   4. Is the translation to logic formula correct?
::                    ......> by other methods outside of Mizar
::   5. overflow problem  .....> by other theorems, maybe in Mizar
::   6. error about float .....> avoid "=" sign in if clause,
::                 or corresponding float to other types not Real
::   7. translation of usual programs to non overwriting programs
::                    ......>  by other methods outside of Mizar
::------
:: other comments:
::   A concept of non overwriting is important, not only
:: because of proving correctness, but because of debugging and
:: safety of data.
::   As memory is now cheap enough, it is wise to save all history of
:: variables in a program.
::-------------------------
::-------------------------

theorem Th1: for n,m,k being Nat holds (n+k)-'(m+k)=n-'m
proof let n,m,k be Nat;
  A1: n+k-(m+k)=n-m by XCMPLX_1:32;
  per cases;
  suppose A2: n-m>=0;
    then n-'m=n-m by BINARITH:def 3;
   hence (n+k)-'(m+k)=n-'m by A2,A1,BINARITH:def 3;
  end;
  suppose A3: n-m<0;
    then n-'m=0 by BINARITH:def 3;
   hence (n+k)-'(m+k)=n-'m by A3,A1,BINARITH:def 3;
end;
end;

reserve t for Nat;

theorem Th2: for n,k being Nat st k>0 & n mod (2*k)>=k holds
  n mod (2*k)-k= n mod k & (n mod k) +k = n mod (2*k)
proof let n,k be Nat;
 assume A1: k>0 & n mod (2*k)>=k;
    ( ex t st n = 2*k * t + (n mod (2*k)) & n mod (2*k) < 2*k )
            or n mod (2*k) = 0 & 2*k = 0 by NAT_1:def 2;
  then consider t such that
  A2: n=2*k*t + (n mod (2*k)) by A1;
     (n mod (2*k))-k>=0 by A1,SQUARE_1:12;
  then A3: (n mod (2*k))-'k=(n mod (2*k))-k by BINARITH:def 3;
  then A4: n=2*k*t+(k+(n mod (2*k)-'k)) by A2,XCMPLX_1:27
  .=2*k*t+k+ ((n mod (2*k))-'k) by XCMPLX_1:1
  .=k*(2*t)+ k*1+ ((n mod (2*k))-'k) by XCMPLX_1:4
  .=k*(2*t+1)+((n mod (2*k))-'k) by XCMPLX_1:8;
     2*k>2*0 by A1,REAL_1:70;
  then n mod (2*k)<2*k by NAT_1:46;
  then A5: (n mod (2*k))-k<2*k-k by REAL_1:54;
     2*k-k=k+k-k by XCMPLX_1:11 .=k by XCMPLX_1:26;
  hence ((n mod (2*k))-k)= (n mod k) by A3,NAT_1:def 2,A5,A4;
 hence thesis by XCMPLX_1:27;
end;

theorem Th3: for n,k being Nat st k>0 & n mod (2*k)>=k holds
  n div k= (n div (2*k))*2+1
proof let n,k be Nat;assume
 A1: k>0 & n mod (2*k)>=k;
 then 2*k>2*0 by REAL_1:70;
 then A2: n=2*k*( n div (2*k))+ (n mod (2*k)) by NAT_1:47
  .=2*k*( n div (2*k))+((n mod k) +k) by Th2,A1
  .=k*2*( n div (2*k))+k+(n mod k) by XCMPLX_1:1
  .=k*(2*( n div (2*k)))+k*1+(n mod k) by XCMPLX_1:4
  .=k*(2*( n div (2*k))+1)+(n mod k) by XCMPLX_1:8;
     n mod k<k by A1,NAT_1:46;
 hence thesis by A2,NAT_1:def 1;
end;

theorem Th4: for n,k being Nat st k>0 & n mod (2*k)<k holds
  n mod (2*k)= n mod k
proof let n,k be Nat;
 assume A1: k>0 & n mod (2*k)<k;
  then A2: 2*k>2*0 by REAL_1:70;
    ( ex t st n = 2*k * t + (n mod (2*k)) & n mod (2*k) < 2*k )
            or n mod (2*k) = 0 & 2*k = 0 by NAT_1:def 2;
  then consider t such that
  A3: n=2*k*t + (n mod (2*k)) by A2;
     n=k*(2*t)+ (n mod (2*k)) by A3,XCMPLX_1:4;
 hence thesis by NAT_1:def 2,A1;
end;

theorem Th5: for n,k being Nat st k>0 & n mod (2*k)<k holds
  n div k= (n div (2*k))*2
proof let n,k be Nat;assume
  A1: k>0 & n mod (2*k)<k;
  then 2*k>2*0 by REAL_1:70;
  then A2: n=2*k*( n div (2*k))+ (n mod (2*k)) by NAT_1:47
  .=2*k*( n div (2*k))+((n mod k)) by Th4,A1
  .=k*(2*( n div (2*k)))+(n mod k) by XCMPLX_1:4;
     n mod k<k by A1,NAT_1:46;
 hence thesis by A2,NAT_1:def 1;
end;

registration let C be set, f be PartFunc of C, INT, x be set;
 cluster f.x -> integer;
 coherence
 proof
   per cases;
   suppose x in dom f;
     then f.x in rng f by FUNCT_1:def 5;
    hence thesis by INT_1:12;
   end;
   suppose not x in dom f;
    hence thesis by FUNCT_1:def 4;
 end;
 end;
end;

theorem Th6: for m,n being Nat st m>0 holds ex i being Nat st
 (for k2 being Nat st k2<i holds m*(2|^k2)<=n)
 & m*(2|^i)>n
proof let m,n be Nat;
 assume A1: m>0;
     2|^(n+1-'1)>n+1-'1 by HEINE:8;
  then A2: m*(2|^(n+1-'1))>m*(n+1-'1) by A1,REAL_1:70;
  A3: n+1-1=n by XCMPLX_1:26;
  A4: n>=0 by NAT_1:18;
  then A5: n+1-'1=n by BINARITH:def 3,A3;
     m>=0+1 by A1,NAT_1:38;
  then m*n>=1*n by A4,AXIOMS:25;
  then A6: m*(2|^(n+1-'1))> n by AXIOMS:22,A2,A5;
  defpred P[Nat] means
      m*(2|^($1))> n;
  A7: ex k being Nat st P[k] by A6;
     ex k being Nat st P[k] & for j being Nat st P[j] holds k<=j
                   from NAT_1:sch 5(A7);
  then consider k being Nat such that
  A8: P[k] & for j being Nat st P[j] holds k<=j;
     for k2 being Nat st k2<k holds m*(2|^(k2))<=n by A8;
 hence thesis by A8;
end;

theorem Th7: for i being Integer,f being FinSequence st 1<=i & i<=len f
holds i in dom f
proof let i be Integer,f be FinSequence;
 assume A1: 1<=i & i<=len f;
  then i>=0 by AXIOMS:22;
  then i is Nat by INT_1:16;
 hence i in dom f by A1,FINSEQ_3:27;
end;

:: Overwrting program to divide n by m (n>=0&m>0),where division / used is
:: special, because it is achieved by shifting a word.

:: int idiv1_prg(int n,int m){
::   int sm,sn,pn,i,j;
::   if(n<m){return 0;}
::   sm=m;
::   for (i=1;i<=n;i++){sm=sm*2; if (sm >n)break;}
::   pn=0;sn=n;sm=sm/2;
::   for (j=1;j<=i;j++){
::   if(sn>=sm){sn=sn-sm;sm=sm/2;pn=pn*2+1;} else {sm=sm/2;pn=pn*2;}
::   }
::   return pn;
:: }

:: Non overwrting program same as above, assuming n>=0 & m>0

:: int idiv1_prg(int n,int m){
::    int sm[n+1+1],sn[n+1+1],pn[n+1+1],i,j;
::    if (n<m){return 0;}
::    sm[1]=m;
::    for (i=1;i<=n;i++){
::     sm[i+1]=sm[i]*2;
::     if(sm[i+1]>n){break;}
::     }
::    pn[i+1]=0;sn[i+1]=n;
::    for (j=1;j<=i;j++){
::     if(sn[i+1-(j-1)]>=sm[i+1-j]){sn[i+1-j]=sn[i+1-(j-1)]-sm[i+1-j];
::           pn[i+1-j]=pn[i+1-(j-1)]*2+1;}
::        else {sn[i+1-j]=sn[i+1-(j-1)]; pn[i+1-j]=pn[i+1-(j-1)]*2;}
::        }
::     return pn[1];
::   }

definition let n,m be Integer;
assume A1: n>=0 & m>0;
func idiv1_prg(n,m) -> Integer means   :Def1:
    ex sm,sn,pn being FinSequence of INT st
      len sm=n+1 & len sn=n+1 & len pn=n+1 &
    (n<m implies it=0)&
    (not (n<m) implies
    sm.1=m &
     ( ex i being Integer st 1<=i & i<=n &
       ((for k being Integer st 1<=k & k<i holds
            sm.(k+1)=sm.(k)*2 & not(sm.(k+1)>n))
        &   sm.(i+1)=sm.(i)*2 & sm.(i+1)>n
       )
       &
       pn.(i+1)=0 & sn.(i+1)=n &
       (for j being Integer st 1<=j & j<=i holds
        (sn.(i+1- (j- 1))>=sm.(i+1- j) implies
             sn.(i+1- j)=sn.(i+1- (j- 1))-sm.(i+1- j)
             &
             pn.(i+1- j)=pn.(i+1- (j- 1))*2+1
        )&
        (not sn.(i+1- (j- 1))>=sm.(i+1- j) implies
             sn.(i+1- j)=sn.(i+1- (j- 1))
             &
             pn.(i+1- j)=pn.(i+1- (j- 1))*2
        )
       )&
       it=pn.1
     )
    );
existence
proof
  reconsider n2=n,m2=m as Nat by A1,INT_1:16;
  per cases;
  suppose A2: n<m;
   deffunc F1(Nat) = 1;
      ex ssm being FinSequence st len ssm=n2+1 &
                for k2 being Nat st k2 in (Seg (n2+1)) holds
   ssm.k2=F1(k2) from FINSEQ_1:sch 2;
   then consider ssm being FinSequence such that
   A3: len ssm=n+1 & for k2 being Nat st k2 in (Seg (n2+1)) holds
        ssm.k2=1;
      rng ssm c= INT
   proof let y be set;assume
        y in rng ssm;
     then consider x being set such that
     A4: x in dom ssm & y=ssm.x by FUNCT_1:def 5;
     A5: dom ssm=Seg len ssm by FINSEQ_1:def 3;
     reconsider n=x as Nat by A4;
        ssm.n=1 by A3,A4,A5;
    hence y in INT by A4,INT_1:12;
   end;
   then reconsider ssm as FinSequence of INT by FINSEQ_1:def 4;
   set ssn=ssm,ppn=ssm;
      len ssm=n+1 & len ssn=n+1 & len ppn=n+1 &
    (n<m implies n div m=0)&
    (not (n<m) implies
    ssm.1=m &
     ( ex i being Integer st 1<=i & i<=n &
       ((for k being Integer st 1<=k & k<i holds
            ssm.(k+1)=ssm.(k)*2 & not(ssm.(k+1)>n))
        &   ssm.(i+1)=ssm.(i)*2 & ssm.(i+1)>n
       )
       &
       ppn.(i+1)=0 & ssn.(i+1)=n &
       (for j being Integer st 1<=j & j<=i holds
        (ssn.(i+1- (j- 1))>=ssm.(i+1- j) implies
             ssn.(i+1- j)=ssn.(i+1- (j- 1))-ssm.(i+1- j)
             &
             ppn.(i+1- j)=ppn.(i+1- (j- 1))*2+1
        )&
        (not ssn.(i+1- (j- 1))>=ssm.(i+1- j) implies
             ssn.(i+1- j)=ssn.(i+1- (j- 1))
             &
             ppn.(i+1- j)=ppn.(i+1- (j- 1))*2
        )
       )&
       n div m=ppn.1
     )
    ) by A1,A2,A3,PRE_FF:4;
   hence thesis;
  end;
  suppose A6: n>=m;  then n>0 by A1;
   then n2>=0+1 by NAT_1:38;
   then 1< n2+1 by NAT_1:38;
   then A7: 1 in Seg (n2+1) by FINSEQ_1:3;
   deffunc F1(Nat) = m2*(2|^($1-'1));
      ex ssm being FinSequence st len ssm=n2+1 &
                for k2 being Nat st k2 in (Seg (n2+1)) holds
   ssm.k2=F1(k2) from FINSEQ_1:sch 2;
   then consider ssm being FinSequence such that
   A8: len ssm=n+1 & for k2 being Nat st k2 in (Seg (n2+1)) holds
        ssm.k2=m*(2|^(k2-'1));
      rng ssm c= INT
   proof let y be set;assume
        y in rng ssm;
     then consider x being set such that
     A9: x in dom ssm & y=ssm.x by FUNCT_1:def 5;
     A10: dom ssm=Seg len ssm by FINSEQ_1:def 3;
     reconsider n=x as Nat by A9;
        ssm.n=m*(2|^(n-'1)) by A8,A9,A10;
    hence y in INT by A9,INT_1:12;
   end;
   then reconsider ssm as FinSequence of INT by FINSEQ_1:def 4;
   deffunc F(Nat) = n2 mod (m2*(2|^($1-'1)));
      ex ssn being FinSequence st len ssn=n2+1 &
   for k2 being Nat st k2 in (Seg (n2+1)) holds
   ssn.k2=F(k2) from FINSEQ_1:sch 2;
   then consider ssn being FinSequence such that
   A11: len ssn=n+1 & for k2 being Nat st k2 in (Seg (n2+1)) holds
        ssn.k2=n2 mod (m2*(2|^(k2-'1)));
      rng ssn c= INT
   proof let y be set;assume
        y in rng ssn;
     then consider x being set such that
     A12: x in dom ssn & y=ssn.x by FUNCT_1:def 5;
     A13: dom ssn=Seg len ssn by FINSEQ_1:def 3;
     reconsider n3=x as Nat by A12;
        ssn.n3=n2 mod (m2*(2|^(n3-'1))) by A11,A12,A13;
    hence y in INT by A12,INT_1:12;
   end;
   then reconsider ssn as FinSequence of INT by FINSEQ_1:def 4;
   deffunc F3(Nat)= n2 div (m2*(2|^($1-'1)));
      ex ppn being FinSequence st len ppn=n2+1 &
     for k2 being Nat st k2 in (Seg (n2+1)) holds
   ppn.k2= F3(k2) from FINSEQ_1:sch 2;
   then consider ppn being FinSequence such that
   A14: len ppn=n+1 &
   for k2 being Nat st k2 in (Seg (n2+1)) holds
        ppn.k2= n2 div (m2*(2|^(k2-'1)));
      rng ppn c= INT
   proof let y be set;assume
        y in rng ppn;
     then consider x being set such that
     A15: x in dom ppn & y=ppn.x by FUNCT_1:def 5;
     A16: dom ppn=Seg len ppn by FINSEQ_1:def 3;
     reconsider n3=x as Nat by A15;
        ppn.n3=n2 div (m2*(2|^(n3-'1))) by A14,A15,A16;
    hence y in INT by A15,INT_1:12;
   end;
   then reconsider ppn as FinSequence of INT by FINSEQ_1:def 4;
   A17: ppn.1=n2 div (m2*(2|^(1-'1))) by A14,A7
           .=n2 div (m2*(2|^(0))) by GOBOARD9:1
           .=n2 div m2*1 by NEWTON:9.=n2 div m2;
   A18: ssm.1=m*(2|^(1-'1)) by A8,A7 .=m*(2|^(0)) by GOBOARD9:1
            .=m*1 by NEWTON:9
            .=m;
    consider ii0 being Nat such that
    A19: (for k2 being Nat st k2<ii0 holds m*(2|^(k2))<=n2)
      & m2*(2|^(ii0))>n2 by Th6,A1;
    reconsider i0=ii0 as Integer;
       now assume i0=0;
      then m2*1>n2 by NEWTON:9,A19;
     hence contradiction by A6;
    end;
    then ii0>0 by NAT_1:19;
    then A20: ii0>=0+1 by NAT_1:38;
    then A21: i0-1>=0 by SQUARE_1:12;
    A22: now assume i0>n2;
      then A23: m*(2|^n2) <= n2 by A19;
      A24: 2|^n2 >0 by HEINE:5;
         1+0<=m2 by A1,NAT_1:38;
      then 1*(2|^n2)<=m2*(2|^n2) by A24,AXIOMS:25;
      then A25: (2|^n2)<=n2 by A23,AXIOMS:22;
         n2+1<= 2|^n2 by HEINE:7;
     hence contradiction by NAT_1:38,A25;
    end;
    then A26: i0+1<=n2+1 by REAL_1:55;
       i0<n2+1 by A22,NAT_1:38;
    then A27: ii0 in Seg(n2+1) by FINSEQ_1:3,A20;
       1<=i0+1 by A20,NAT_1:38;
    then ii0+1 in Seg(n2+1) by A26,FINSEQ_1:3;
    then A28: ssm.(i0+1)=m*(2|^(ii0+1-'1)) by A8;
       ii0+1-' 1=i0 by BINARITH:39 .=i0-1+1 by XCMPLX_1:27
             .=ii0-' 1+1 by A21,BINARITH:def 3;
    then 2|^(ii0+1-'1)=(2|^(ii0-'1))*2 by NEWTON:11;
    then A29: ssm.(i0+1)
              =m*(2|^(ii0-'1))*2 by A28,XCMPLX_1:4
              .=(ssm.i0)*2 by A8,A27;
    A30: for k being Nat st 1<=k & k<i0 holds
            ssm.(k+1)=ssm.(k)*2 & not(ssm.(k+1)>n)
     proof let k be Nat;
      assume A31: 1<=k & k<i0;
        then A32: k<=n2 by A22,AXIOMS:22;
        A33: k-1>=0 by A31,SQUARE_1:12;
        A34: 1<k+1 by A31,NAT_1:38;
        A35: k+1-'1=k by BINARITH:39;
           k+1<=n2+1 by REAL_1:55,A32;
        then k+1 in Seg (n2+1) by FINSEQ_1:3,A34;
        then A36: ssm.(k+1)=m*(2|^(k+1-'1)) by A8;
           k<=n2+1 by A32,NAT_1:37;
        then k in Seg (n2+1) by A31,FINSEQ_1:3;
        then A37: ssm.(k)=m*(2|^(k-'1)) by A8;
           k+1-'1=k by BINARITH:39 .=k-1+1 by XCMPLX_1:27
             .=k-' 1+1 by A33,BINARITH:def 3;
        then 2|^(k+1-'1)=(2|^(k-'1))*2 by NEWTON:11;
      hence ssm.(k+1)=ssm.(k)*2 & not(ssm.(k+1)>n) by A19,A31,A35,A36,A37,
XCMPLX_1:4;
     end;
    A38: for k being Integer st 1<=k & k<i0 holds
            ssm.(k+1)=ssm.(k)*2 & not(ssm.(k+1)>n)
    proof let k be Integer;
     assume A39: 1<=k & k<i0;  then 0<=k by AXIOMS:22;
      then reconsider kk=k as Nat by INT_1:16;
         ssm.(kk+1)=ssm.(kk)*2 & not(ssm.(kk+1)>n) by A39,A30;
     hence ssm.(k+1)=ssm.(k)*2 & not(ssm.(k+1)>n);
    end;
    A40: 1<=1+ii0 by NAT_1:29;
    A41: ii0+1-'1=ii0 by BINARITH:39;
       i0+1<=n2+1 by A22,REAL_1:55;
    then A42: ii0+1 in (Seg (n2+1)) by A40,FINSEQ_1:3;
    then A43:  ssm.(i0+1)>n by A19,A41,A8;
        i0 <n2+1 by A22,NAT_1:38;
     then A44: ii0+1<=n2+1 by NAT_1:38;
        0<=ii0 by NAT_1:18;
     then 0+1<=i0+1 by REAL_1:55;
     then ii0+1 in Seg (n2+1) by A44,FINSEQ_1:3;
     then A45: ssn.(i0+1)=n2 mod (m2*(2|^(ii0+1-'1))) by A11;
     reconsider k5=m2*(2|^(ii0+1-'1)) as Nat;
     A46: k5>n2 by A19,BINARITH:39;
        n2 div (m2*(2|^(ii0+1-'1)))=0 by A19,A41,JORDAN4:5;
     then A47:  ppn.(i0+1)=0 & ssn.(i0+1)=n by A14,A42,A45,A46,GR_CY_1:4;
        for j being Integer st 1<=j & j<=i0 holds
        (ssn.(i0+1- (j- 1))>=ssm.(i0+1- j) implies
             ssn.(i0+1- j)=ssn.(i0+1- (j- 1))-ssm.(i0+1- j)
             &
             ppn.(i0+1- j)=ppn.(i0+1- (j- 1))*2+1
        )&
        (not ssn.(i0+1- (j- 1))>=ssm.(i0+1- j) implies
             ssn.(i0+1- j)=ssn.(i0+1- (j- 1))
             &
             ppn.(i0+1- j)=ppn.(i0+1- (j- 1))*2
        )
      proof let j be Integer;
       assume A48: 1<=j & j<=i0;
        then 0<=j by AXIOMS:22;
        then reconsider jj=j as Nat by INT_1:16;
        A49: i0-j>=0 by SQUARE_1:12,A48;
        then A50: ii0-' jj=i0-j by BINARITH:def 3;
        A51: j-1>=0 by A48,SQUARE_1:12;
        thus (ssn.(i0+1- (j- 1))>=ssm.(i0+1- j) implies
             ssn.(i0+1- j)=ssn.(i0+1- (j- 1))-ssm.(i0+1- j)
             &
             ppn.(i0+1- j)=ppn.(i0+1- (j- 1))*2+1
        )
        proof assume
          A52: ssn.(i0+1- (j- 1))>=ssm.(i0+1- j);
          A53: jj-' 1=j-1 by A51,BINARITH:def 3;
          A54: j+1<=i0+1 by A48,REAL_1:55;
             j<j+1 by REAL_1:69;
          then A55: j<i0+1 by AXIOMS:22,A54;
             ii0<ii0+1 by NAT_1:38;
          then j<i0+1 by A48,AXIOMS:22;
          then A56: i0+1-j>0 by SQUARE_1:11;
          then A57: ii0+1-' jj=i0+1-j by BINARITH:def 3;
          then A58: ii0+1-' jj=i0-j+1 by XCMPLX_1:29;
          A59: ii0+1-' jj=i0+1-j by A56,BINARITH:def 3;
             jj-' 1<=j by GOBOARD9:2;
          then jj-' 1<i0+1 by AXIOMS:22,A55;
          then ii0+1-(jj -' 1)>=0 by SQUARE_1:12;
          then A60: ii0+1-' (jj-' 1)=i0+1-(jj-' 1) by BINARITH:def 3
                        .=i0+1-j+1 by A53,XCMPLX_1:37;
          then A61: ii0+1-' (jj-' 1)-' 1=ii0+1-' jj
                                by A57,BINARITH:39;
          A62: ii0+1-' (jj-' 1)=i0+1-(j-1) by A60,XCMPLX_1:37;
             ii0<ii0+1 by NAT_1:38;
          then j<i0+1 by A48,AXIOMS:22;
          then i0+1-j>=0 by SQUARE_1:12;
          then A63: ii0+1-' jj=i0+1-j by BINARITH:def 3;
             i0+1<=n2+j by A22,REAL_1:55,A48;
          then i0+1-j<=n2+j-j by REAL_1:49;
          then i0+1-j<=n2 by XCMPLX_1:26;
          then A64: ii0+1-' jj+1<=n2+1 by REAL_1:55,A63;
             1<=ii0+1-' (jj-' 1) by A57,A60,NAT_1:29;
          then A65: ii0+1-' (jj-' 1) in Seg (n2+1) by A57,A60,A64,FINSEQ_1:
3;
          then A66: ssn.(ii0+1-' (jj-' 1))=n2 mod (m2*(2|^(ii0+1-' (jj-' 1)-'
1
)))
                               by A11;
          A67: ii0+1-' jj>=0+1 by NAT_1:38,A57,A56;
          then ii0+1-' jj -1>=0 by SQUARE_1:12;
          then A68: ii0+1-' jj -' 1=i0+1-j-1 by A57,BINARITH:def 3
                             .=i0-j+1-1 by XCMPLX_1:29
                             .=i0-j by XCMPLX_1:26;
          A69: ii0+1-' jj<=i0+1 by GOBOARD9:2;
             i0+1<=n2+1 by REAL_1:55,A22;
          then n2+1>=(ii0+1-' jj) by A69,AXIOMS:22;
          then A70: ii0+1-' (jj) in Seg (n2+1) by A67,FINSEQ_1:3;
          then A71: ssn.(ii0+1-' jj)=n2 mod (m2*(2|^(ii0+1-' jj-' 1))) by A11;
          A72: jj-' 1=j-1 by A51,BINARITH:def 3;
          A73: j+1<=i0+1 by A48,REAL_1:55;
             jj<jj+1 by NAT_1:38;
          then A74: j<i0+1 by AXIOMS:22,A73;
             jj-' 1<=jj by GOBOARD9:2;
          then jj-' 1<i0+1 by AXIOMS:22,A74;
          then ii0+1-(jj -' 1)>=0 by SQUARE_1:12;
          then ii0+1-' (jj-' 1)=i0+1-(jj-' 1) by BINARITH:def 3
                        .=ii0+1-' jj+1 by A57,A72,XCMPLX_1:37;
          then A75: ssn.(ii0+1-' (jj-' 1))
          =n2 mod (m2*(2|^(ii0+1-' jj))) by A66,BINARITH:39;
             i0-j+1>=0+1 by A49,REAL_1:55;
          then ii0+1-' jj-1>=0 by SQUARE_1:12,A58;
          then A76: ii0+1-' jj-' 1 =i0-j+1-1 by BINARITH:def 3,A58
                       .=i0-j by XCMPLX_1:26 .=ii0-' jj
                                    by A49,BINARITH:def 3;
          A77: m2*(2|^(ii0+1-' jj))=m2*(2|^(ii0-' jj+1)) by A50,A57,XCMPLX_1:
29
          .=m2*((2|^(ii0-' jj))*2) by NEWTON:11
          .=2*(m2*(2|^(ii0-' jj))) by XCMPLX_1:4;
          A78: ssm.(ii0+1-' jj)=m2*(2|^(ii0-' jj)) by A76,A8,A70;
             2|^(ii0-' jj)<>0 by CARD_4:51;
          then 2|^(ii0-' jj)>0 by NAT_1:19;
          then A79: m2*(2|^(ii0-' jj))> m2*0 by A1,REAL_1:70;
          then A80: ssn.(ii0+1-' (jj-' 1))-ssm.(ii0+1-' jj)
          = n2 mod (m2*(2|^(ii0-' jj))) by A52,A59,A62,A75,A77,A78,
Th2;
             ppn.(ii0+1-' jj)=n2 div (m2*(2|^(ii0+1-' jj-' 1))) by A14,
A70
         .= (n2 div (m2*(2|^(ii0+1-' (jj-' 1)-' 1))))*2+1
            by A52,A57,A61,A62,A66,A76,A77,A78,A79,Th3
         .= ppn.(ii0+1-' (jj-' 1))*2+1 by A14,A65;
         hence ssn.(i0+1- j)=ssn.(i0+1- (j- 1))-ssm.(i0+1- j)
             &
             ppn.(i0+1- j)=ppn.(i0+1- (j- 1))*2+1 by A49,A57,A62,A68,A71,
A80,BINARITH:def 3;
        end;
        thus (not ssn.(i0+1- (j- 1))>=ssm.(i0+1- j) implies
             ssn.(i0+1- j)=ssn.(i0+1- (j- 1))
             &
             ppn.(i0+1- j)=ppn.(i0+1- (j- 1))*2
        )
        proof assume
         A81: not ssn.(i0+1- (j- 1))>=ssm.(i0+1- j);
          A82: jj-' 1=j-1 by A51,BINARITH:def 3;
          A83: j+1<=i0+1 by A48,REAL_1:55;
             jj<jj+1 by NAT_1:38;
          then A84: j<i0+1 by AXIOMS:22,A83;
             ii0<ii0+1 by NAT_1:38;
          then j<i0+1 by A48,AXIOMS:22;
          then A85: i0+1-j>0 by SQUARE_1:11;
          then A86: ii0+1-' jj=i0+1-j by BINARITH:def 3;
          then A87: ii0+1-' jj=i0-j+1 by XCMPLX_1:29;
             jj-' 1<=jj by GOBOARD9:2;
          then jj-' 1<i0+1 by AXIOMS:22,A84;
          then i0+1-(jj -' 1)>=0 by SQUARE_1:12;
          then A88: ii0+1-' (jj-' 1)=i0+1-(jj-' 1) by BINARITH:def 3
                        .=i0+1-j+1 by A82,XCMPLX_1:37;
          then A89: ii0+1-' (jj-' 1)-' 1=ii0+1-' jj
                                     by A86,BINARITH:39;
             ii0<ii0+1 by NAT_1:38;
          then j<i0+1 by A48,AXIOMS:22;
          then i0+1-j>=0 by SQUARE_1:12;
          then A90: ii0+1-' jj=i0+1-j by BINARITH:def 3;
             i0+1<=n2+j by A22,REAL_1:55,A48;
          then i0+1-j<=n2+j-j by REAL_1:49;
          then i0+1-j<=n2 by XCMPLX_1:26;
          then A91: ii0+1-' jj+1<=n2+1 by A90,REAL_1:55;
             1<=ii0+1-' (jj-' 1) by A86,A88,NAT_1:29;
          then A92: ii0+1-' (jj-' 1) in Seg (n2+1) by A86,A88,A91,FINSEQ_1:
3;
          then A93: ssn.(ii0+1-' (jj-' 1))=n2 mod (m2*(2|^(ii0+1-' (jj-' 1)-'
1
)))
                               by A11;
          A94: ii0+1-' jj>=0+1 by NAT_1:38,A86,A85;
          then ii0+1-' jj -1>=0 by SQUARE_1:12;
          then A95: ii0+1-' jj -' 1=i0+1-j-1 by A86,BINARITH:def 3
                             .=i0-j+1-1 by XCMPLX_1:29
                             .=i0-j by XCMPLX_1:26;
          A96: ii0+1-' jj<=ii0+1 by GOBOARD9:2;
             i0+1<=n2+1 by REAL_1:55,A22;
          then n2+1>=(ii0+1-' jj) by A96,AXIOMS:22;
          then A97: ii0+1-' (jj) in Seg (n2+1) by A94,FINSEQ_1:3;
          then ssn.(ii0+1-' jj)=n2 mod (m2*(2|^(ii0+1-' jj-' 1))) by A11;
          then A98: ssn.(ii0+1-' jj)
            =n2 mod (m2*(2|^(ii0-' jj))) by A95,A49,BINARITH:def 3;
          A99: jj-' 1=j-1 by A51,BINARITH:def 3;
          A100: j+1<=i0+1 by A48,REAL_1:55;
             jj<jj+1 by NAT_1:38;
          then A101: j<i0+1 by AXIOMS:22,A100;
             jj-' 1<=j by GOBOARD9:2;
          then jj-' 1<i0+1 by AXIOMS:22,A101;
          then i0+1-(jj -' 1)>=0 by SQUARE_1:12;
          then A102: ii0+1-' (jj-' 1)=i0+1-(jj-' 1) by BINARITH:def 3
                        .=i0+1-j+1 by A99,XCMPLX_1:37
                        .=ii0+1-' jj+1 by A85,BINARITH:def 3;
          A103: ii0+1-' (jj-' 1)=i0+1-(j-1) by A88,XCMPLX_1:37;
          A104: ssn.(ii0+1-' (jj-' 1))
           =n2 mod (m2*(2|^(ii0+1-' jj))) by A93,A102,BINARITH:39;
             i0-j+1>=0+1 by A49,REAL_1:55;
          then ii0+1-' jj-1>=0 by SQUARE_1:12,A87;
          then A105: ii0+1-' jj-' 1 =i0-j+1-1 by BINARITH:def 3,A87
                       .=i0-j by XCMPLX_1:26 .=ii0-' jj
                                      by A49,BINARITH:def 3;
          A106: m2*(2|^(ii0+1-' jj))=m2*(2|^(ii0-' jj+1)) by A50,A86,XCMPLX_1:
29
          .=m2*((2|^(ii0-' jj))*2) by NEWTON:11
          .=2*(m2*(2|^(ii0-' jj))) by XCMPLX_1:4;
          A107: ssm.(ii0+1-' jj)=m2*(2|^(ii0-' jj)) by A8,A97,A105;
             2|^(ii0-' jj)<>0 by CARD_4:51;
          then 2|^(ii0-' jj)>0 by NAT_1:19;
          then A108: m2*(2|^(ii0-' jj))> m2*0 by A1,REAL_1:70;
             ppn.(ii0+1-' jj)=n2 div (m2*(2|^(ii0+1-' jj-' 1))) by A14,
A97
         .= (n2 div (m2*(2|^(ii0+1-' (jj-' 1)-' 1))))*2
                         by A81,A86,A89,A93,A103,A105,A106,A107,A108,Th5
         .= ppn.(ii0+1-' (jj-' 1))*2 by A14,A92;
         hence thesis by A81,A86,A98,A103,A104,A106,A107,A108,Th4;
        end;
      end;
  hence thesis by A29,A17,A18,A8,A11,A14,A6,A22,A38,A47,A43,A20;
end;
end;
uniqueness
proof
  let t1,t2 be Integer;
  assume A109:  (ex sm,sn,pn being FinSequence of INT st
      len sm=n+1 & len sn=n+1 & len pn=n+1 &
    (n<m implies t1=0)&
    (not (n<m) implies
    sm.1=m &
     ( ex i being Integer st 1<=i & i<=n &
       ((for k being Integer st 1<=k & k<i holds
            sm.(k+1)=sm.(k)*2 & not(sm.(k+1)>n))
        &   sm.(i+1)=sm.(i)*2 & sm.(i+1)>n
       )
       &
       pn.(i+1)=0 & sn.(i+1)=n &
       (for j being Integer st 1<=j & j<=i holds
        (sn.(i+1- (j- 1))>=sm.(i+1- j) implies
             sn.(i+1- j)=sn.(i+1- (j- 1))-sm.(i+1- j)
             &
             pn.(i+1- j)=pn.(i+1- (j- 1))*2+1
        )&
        (not sn.(i+1- (j- 1))>=sm.(i+1- j) implies
             sn.(i+1- j)=sn.(i+1- (j- 1))
             &
             pn.(i+1- j)=pn.(i+1- (j- 1))*2
        )
       )&
       t1=pn.1
     )
    )
  )
  &
   (ex sm,sn,pn being FinSequence of INT st
      len sm=n+1 & len sn=n+1 & len pn=n+1 &
    (n<m implies t2=0)&
    (not (n<m) implies
    sm.1=m &
     ( ex i being Integer st 1<=i & i<=n &
       ((for k being Integer st 1<=k & k<i holds
            sm.(k+1)=sm.(k)*2 & not(sm.(k+1)>n))
        &   sm.(i+1)=sm.(i)*2 & sm.(i+1)>n
       )
       &
       pn.(i+1)=0 & sn.(i+1)=n &
       (for j being Integer st 1<=j & j<=i holds
        (sn.(i+1- (j- 1))>=sm.(i+1- j) implies
             sn.(i+1- j)=sn.(i+1- (j- 1))-sm.(i+1- j)
             &
             pn.(i+1- j)=pn.(i+1- (j- 1))*2+1
        )&
        (not sn.(i+1- (j- 1))>=sm.(i+1- j) implies
             sn.(i+1- j)=sn.(i+1- (j- 1))
             &
             pn.(i+1- j)=pn.(i+1- (j- 1))*2
        )
       )&
       t2=pn.1
     )
    ));
    then consider sm1,sn1,pn1 being FinSequence of INT such that
    A110:  len sm1=n+1 & len sn1=n+1 & len pn1=n+1 &
    (n<m implies t1=0)&
    (not (n<m) implies
    sm1.1=m &
     ( ex i being Integer st 1<=i & i<=n &
       ((for k being Integer st 1<=k & k<i holds
            sm1.(k+1)=sm1.(k)*2 & not(sm1.(k+1)>n))
        &   sm1.(i+1)=sm1.(i)*2 & sm1.(i+1)>n
       )
       &
       pn1.(i+1)=0 & sn1.(i+1)=n &
       (for j being Integer st 1<=j & j<=i holds
        (sn1.(i+1- (j- 1))>=sm1.(i+1- j) implies
             sn1.(i+1- j)=sn1.(i+1- (j- 1))-sm1.(i+1- j)
             &
             pn1.(i+1- j)=pn1.(i+1- (j- 1))*2+1
        )&
        (not sn1.(i+1- (j- 1))>=sm1.(i+1- j) implies
             sn1.(i+1- j)=sn1.(i+1- (j- 1))
             &
             pn1.(i+1- j)=pn1.(i+1- (j- 1))*2
        )
       )&
       t1=pn1.1
     )
    );
    consider sm2,sn2,pn2 being FinSequence of INT such that
    A111:  len sm2=n+1 & len sn2=n+1 & len pn2=n+1 &
    (n<m implies t2=0)&
    (not (n<m) implies
    sm2.1=m &
     ( ex i being Integer st 1<=i & i<=n &
       ((for k being Integer st 1<=k & k<i holds
            sm2.(k+1)=sm2.(k)*2 & not(sm2.(k+1)>n))
        &   sm2.(i+1)=sm2.(i)*2 & sm2.(i+1)>n
       )
       &
       pn2.(i+1)=0 & sn2.(i+1)=n &
       (for j being Integer st 1<=j & j<=i holds
        (sn2.(i+1- (j- 1))>=sm2.(i+1- j) implies
             sn2.(i+1- j)=sn2.(i+1- (j- 1))-sm2.(i+1- j)
             &
             pn2.(i+1- j)=pn2.(i+1- (j- 1))*2+1
        )&
        (not sn2.(i+1- (j- 1))>=sm2.(i+1- j) implies
             sn2.(i+1- j)=sn2.(i+1- (j- 1))
             &
             pn2.(i+1- j)=pn2.(i+1- (j- 1))*2
        )
       )&
       t2=pn2.1
     )
    ) by A109;
      now per cases;
   suppose n<m;
    hence t1=t2 by A110,A111;
   end;
   suppose A112: n>=m;
     then consider i1 being Integer such that
     A113: 1<=i1 & i1<=n &
       ((for k being Integer st 1<=k & k<i1 holds
            sm1.(k+1)=sm1.(k)*2 & not(sm1.(k+1)>n))
        &   sm1.(i1+1)=sm1.(i1)*2 & sm1.(i1+1)>n
       )
       &
       pn1.(i1+1)=0 & sn1.(i1+1)=n &
       (for j being Integer st 1<=j & j<=i1 holds
        (sn1.(i1+1- (j- 1))>=sm1.(i1+1- j) implies
             sn1.(i1+1- j)=sn1.(i1+1- (j- 1))-sm1.(i1+1- j)
             &
             pn1.(i1+1- j)=pn1.(i1+1- (j- 1))*2+1
        )&
        (not sn1.(i1+1- (j- 1))>=sm1.(i1+1- j) implies
             sn1.(i1+1- j)=sn1.(i1+1- (j- 1))
             &
             pn1.(i1+1- j)=pn1.(i1+1- (j- 1))*2
        )
       )&
       t1=pn1.1 by A110;
     consider i2 being Integer such that
     A114: 1<=i2 & i2<=n &
       ((for k being Integer st 1<=k & k<i2 holds
            sm2.(k+1)=sm2.(k)*2 & not(sm2.(k+1)>n))
        &   sm2.(i2+1)=sm2.(i2)*2 & sm2.(i2+1)>n
       )
       &
       pn2.(i2+1)=0 & sn2.(i2+1)=n &
       (for j being Integer st 1<=j & j<=i2 holds
        (sn2.(i2+1- (j- 1))>=sm2.(i2+1- j) implies
             sn2.(i2+1- j)=sn2.(i2+1- (j- 1))-sm2.(i2+1- j)
             &
             pn2.(i2+1- j)=pn2.(i2+1- (j- 1))*2+1
        )&
        (not sn2.(i2+1- (j- 1))>=sm2.(i2+1- j) implies
             sn2.(i2+1- j)=sn2.(i2+1- (j- 1))
             &
             pn2.(i2+1- j)=pn2.(i2+1- (j- 1))*2
        )
       )&
       t2=pn2.1 by A111,A112;
        i1>=0 by A113,AXIOMS:22;
     then reconsider ii1=i1 as Nat by INT_1:16;
        i2>=0 by A114,AXIOMS:22;
     then reconsider ii2=i2 as Nat by INT_1:16;
     A115: now assume A116: i1<i2;
       A117: for k being Integer st 1<=k & k<=i1+1 holds sm1.k=sm2.k
       proof let k be Integer;
        assume A118: 1<=k & k<=i1+1;
         then 0<=k by AXIOMS:22;
         then reconsider kh=k as Nat by INT_1:16;
            k-1>=0 by A118,SQUARE_1:12;
         then A119: kh-' 1=k-1 by BINARITH:def 3;
         then A120: kh-' 1+1=k by XCMPLX_1:27;
            k-1<=i1+1-1 by A118,REAL_1:49;
         then A121: kh-' 1<=i1 by A119,XCMPLX_1:26;
            ii1<ii1+1 by NAT_1:38;
         then A122: kh-' 1<i1+1 by A121,AXIOMS:22;
         defpred P[Nat] means $1<i1+1 implies sm1.($1+1)=sm2.($1+1);
         A123: P[0] by A110,A111,A112;
         A124: for e being Nat st P[e] holds P[e+1]
         proof let e be Nat;
          assume A125: P[e];
           per cases;
           suppose e+1<i1+1;
             then e+1+1<=ii1+1 by NAT_1:38;
             then e+1+1-1<=i1+1-1 by REAL_1:49;
             then e+1<=i1+1-1 by XCMPLX_1:26;
             then A126: e+1<=i1 by XCMPLX_1:26;
             then A127: e+1 <i2 by A116,AXIOMS:22;
                e>=0 by NAT_1:18;
             then A128: 0+1<=e+1 by REAL_1:55;
               A129: e<e+1 by NAT_1:38;
               now per cases;
             case e+1<i1;
              hence sm1.(e+1+1)=(sm1.(e+1))*2 by A128,A113;
             end;
             case e+1>=i1;  then e+1=i1 by A126,AXIOMS:21;
              hence sm1.(e+1+1)=(sm1.(e+1))*2 by A113;
             end;
             end;
            hence P[e+1] by A114,A125,A127,A128,A129,AXIOMS:22;
           end;
           suppose e+1>=i1+1;
            hence P[e+1];
         end;
         end;
            for e being Nat holds P[e] from NAT_1:sch 1(A123,A124);
        hence sm1.k=sm2.k by A122,A120;
       end;
          0<=ii1 by NAT_1:18;
       then 0+1<=i1+1 by REAL_1:55;
       then A130: sm1.(i1+1)=sm2.(i1+1) by A117;
       per cases;
       suppose 0<i1;
        thus contradiction by A113,A114,A116,A130;
       end;
       suppose A131: 0>=i1;
           ii1>=0 by NAT_1:18;
        then i1=0 by A131;
        hence contradiction by A113;
     end;
     end;
      A132: now assume A133: i2<i1;
       A134: for k being Integer st 1<=k & k<=i2+1 holds sm2.k=sm1.k
       proof let k be Integer;
        assume A135: 1<=k & k<=i2+1;
         then 0<=k by AXIOMS:22;
         then reconsider kh=k as Nat by INT_1:16;
            k-1>=0 by SQUARE_1:12,A135;
         then A136: kh-'1=k-1 by BINARITH:def 3;
         then A137: kh-'1+1=k by XCMPLX_1:27;
            k-1<=i2+1-1 by A135,REAL_1:49;
         then A138: kh-'1<=i2 by A136,XCMPLX_1:26;
            ii2<ii2+1 by NAT_1:38;
         then A139: kh-'1<i2+1 by A138,AXIOMS:22;
         defpred P[Nat] means $1<i2+1 implies sm2.($1+1)=sm1.($1+1);
         A140: P[0] by A110,A111,A112;
         A141: for e being Nat st P[e] holds P[e+1]
         proof let e be Nat;
          assume A142: P[e];
           per cases;
           suppose e+1<i2+1;
             then e+1+1<=ii2+1 by NAT_1:38;
             then e+1+1-1<=i2+1-1 by REAL_1:49;
             then e+1<=i2+1-1 by XCMPLX_1:26;
             then A143: e+1<=i2 by XCMPLX_1:26;
             then A144: e+1 <i1 by A133,AXIOMS:22;
                e>=0 by NAT_1:18;
             then A145: 0+1<=e+1 by REAL_1:55;
              A146: e<e+1 by NAT_1:38;
                now per cases;
             case e+1<i2;
              hence sm2.(e+1+1)=(sm2.(e+1))*2 by A145,A114;
             end;
             case e+1>=i2;  then e+1=i2 by A143,AXIOMS:21;
              hence sm2.(e+1+1)=(sm2.(e+1))*2 by A114;
             end;
             end;
            hence P[e+1] by A113,A142,A144,A145,A146,AXIOMS:22;
           end;
           suppose e+1>=i2+1;
            hence P[e+1];
         end;
         end;
            for e being Nat holds P[e] from NAT_1:sch 1(A140,A141);
        hence sm2.k=sm1.k by A139,A137;
       end;
          0<=ii2 by NAT_1:18;
       then 0+1<=i2+1 by REAL_1:55;
       then A147: sm2.(i2+1)=sm1.(i2+1) by A134;
       per cases;
       suppose 0<i2;
        thus contradiction by A113,A114,A133,A147;
       end;
       suppose A148: 0>=i2;
           ii2>=0 by NAT_1:18;
        then i2=0 by A148;
        hence contradiction by A114;
     end;
     end;
     then A149: i1=i2 by A115,AXIOMS:21;
     A150: ii1<ii1+1 by NAT_1:38;
     defpred P2[Nat] means 1<=$1 & $1<=i1+1 implies sm1.$1=sm2.$1;
     A151: P2[0];
     A152: for kk being Nat st P2[kk] holds P2[kk+1]
     proof let kk be Nat;
      assume A153: P2[kk];
          1<=kk+1 & kk+1<=i1+1 implies sm1.(kk+1)=sm2.(kk+1)
       proof
        assume A154: 1<=kk+1 & kk+1<=i1+1;
         per cases by A154,REAL_1:def 5;
         suppose A155: kk+1<i1+1;
             then kk+1-1<=i2+1-1 by REAL_1:49,A149;
             then kk <=i2+1-1 by XCMPLX_1:26;
             then A156: kk<=i2 by XCMPLX_1:26;
                now per cases;
             case 0<kk;
               then A157: 0+1<=kk by NAT_1:38;
               A158: kk<i1 by A155,REAL_1:55;
                 now per cases;
               case kk<i2;
                hence sm2.(kk+1)=(sm2.(kk))*2 by A157,A114;
               end;
               case kk>=i2;  then kk=i2 by A156,AXIOMS:21;
                hence sm2.(kk+1)=(sm2.(kk))*2 by A114;
               end;
               end;
              hence sm1.(kk+1)=sm2.(kk+1) by A113,A150,A153,A157,A158,AXIOMS:
22;
             end;
             case 0>=kk;
               then kk=0 by NAT_1:18;
              hence sm1.(kk+1)=sm2.(kk+1) by A110,A111,A112;
             end;
             end;
            hence sm1.(kk+1)=sm2.(kk+1);
         end;
         suppose kk+1=i1+1; then kk+1-1=i1 by XCMPLX_1:26;
             then  kk=i1 by XCMPLX_1:26;
              hence sm1.(kk+1)=sm2.(kk+1) by A113,A114,A149,A153,
                   NAT_1:38;
       end;
       end;
      hence P2[kk+1];
     end;
     A159: for jj being Nat holds P2[jj] from NAT_1:sch 1(A151,A152);
     A160: for jj being Integer st 1<=jj & jj<=i1+1 holds sm1.jj=sm2.jj
      proof let jj be Integer;
       assume A161: 1<=jj & jj<=i1+1;  then 0<jj by AXIOMS:22;
        then reconsider jj2=jj as Nat by INT_1:16;
           sm1.(jj2)=sm2.(jj2) by A159,A161;
       hence sm1.jj=sm2.jj;
      end;
     defpred P3[Nat] means 1<=$1 & $1<=i1+1 implies
               sn1.(ii1+1+1-'$1)=sn2.(ii1+1+1-'$1);
     A162: P3[0];
     A163: for kk being Nat st P3[kk] holds P3[kk+1]
     proof let kk be Nat;
      assume A164: P3[kk];
          1<=kk+1 & kk+1<=i1+1 implies
                  sn1.(ii1+1+1-'(kk+1))=sn2.(ii1+1+1-'(kk+1))
       proof
        assume 1<=kk+1 & kk+1<=i1+1;
             then kk+1-1<=i2+1-1 by REAL_1:49,A149;
             then A165: kk <=i2+1-1 by XCMPLX_1:26;
             then A166: kk<=i2 by XCMPLX_1:26;
             per cases;
             suppose 0<kk;
               then A167: 0+1<=kk by NAT_1:38;
               then A168: kk-1>=0 by SQUARE_1:12;
               A169: kk<i1+1 by A149,A150,A166,AXIOMS:22;
                  kk-' 1<=kk by GOBOARD9:2;
               then kk-' 1<i1+1 by AXIOMS:22,A169;
               then i1+1-(kk -' 1)>=0 by SQUARE_1:12;
               then A170: ii1+1-' (kk-' 1)=i1+1-(kk-' 1) by BINARITH:def 3
                        .=i1+1-(kk-1) by A168,BINARITH:def 3;
                  i1+1-kk>0 by A169,SQUARE_1:11;
               then A171: ii1+1-' kk=i1+1-kk by BINARITH:def 3;
                  now per cases;
               case A172: kk<=i2;
               then A173: (sn1.(ii1+1-'(kk-'1))>=sm1.(ii1+1-'kk) implies
                  sn1.(ii1+1-'kk)=sn1.(ii1+1-'(kk-'1))-sm1.(ii1+1-'kk)
                  &
                  pn1.(ii1+1-'kk)=pn1.(ii1+1-'(kk-'1))*2+1
               )&
               (not sn1.(ii1+1-'(kk-'1))>=sm1.(ii1+1-'kk) implies
                  sn1.(ii1+1-'kk)=sn1.(ii1+1-'(kk-'1))
                  &
                  pn1.(ii1+1-'kk)=pn1.(ii1+1-'(kk-'1))*2
               ) by A170,A171,A113,A167,A149;
               A174: (sn2.(ii1+1-'(kk-'1))>=sm2.(ii1+1-'kk) implies
                  sn2.(ii1+1-'kk)=sn2.(ii1+1-'(kk-'1))-sm2.(ii1+1-'kk)
                  &
                  pn2.(ii1+1-'kk)=pn2.(ii1+1-'(kk-'1))*2+1
               )&
               (not sn2.(ii1+1-'(kk-'1))>=sm2.(ii1+1-'kk) implies
                  sn2.(ii1+1-'kk)=sn2.(ii1+1-'(kk-'1))
                  &
                  pn2.(ii1+1-'kk)=pn2.(ii1+1-'(kk-'1))*2
               ) by A170,A171,A114,A167,A172,A149;
                   ii1<ii1+1 by NAT_1:38;
                then kk<i1+1 by A149,A172,AXIOMS:22;
                then A175: i1+1-kk>0 by SQUARE_1:11;
                then ii1+1-'kk=i1+1-kk by BINARITH:def 3;
                then A176: ii1+1-'kk>=0+1 by A175,NAT_1:38;
                   kk-1>=0 by A167,SQUARE_1:12;
                then kk-'1=kk-1 by BINARITH:def 3;
                 then kk=kk-'1+1 by XCMPLX_1:27;
                then A177: ii1+1+1-'kk = ii1+1-'(kk-'1) by Th1;
                A178:   1<=ii1+1-'kk & ii1+1-'kk<=i1+1 by A176,GOBOARD9:2;
                    ii1+1+1-'(kk+1)=ii1+1-'kk by Th1;
                hence sn1.(ii1+1+1-'(kk+1))=sn2.(ii1+1+1-'(kk+1)) by A164,
A167,A173,A174,NAT_1:38,A149,A172,A177,A178,A160;
               end;
               case kk>i2;
                hence contradiction by A165,XCMPLX_1:26;
               end;
               end;
              hence sn1.(ii1+1+1-'(kk+1))=sn2.(ii1+1+1-'(kk+1));
             end;
             suppose 0>=kk;
               then A179: kk=0 by NAT_1:18;
                  ii1+1+1-'(kk+1)=ii1+1-'kk by Th1 .=ii1+1 by A179,JORDAN3
:2;
              hence sn1.(ii1+1+1-'(kk+1))=sn2.(ii1+1+1-'(kk+1)) by A113,A114,
A115,A132,AXIOMS:21;
       end;
       end;
      hence P3[kk+1];
     end;
     A180: for jj being Nat holds P3[jj] from NAT_1:sch 1(A162,A163);
     defpred P4[Nat] means 1<=$1 & $1<=i1+1 implies
               pn1.(ii1+1+1-'$1)=pn2.(ii1+1+1-'$1);
     A181: P4[0];
     A182: for kk being Nat st P4[kk] holds P4[kk+1]
     proof let kk be Nat;
      assume A183: P4[kk];
          1<=kk+1 & kk+1<=i1+1 implies
                  pn1.(ii1+1+1-'(kk+1))=pn2.(ii1+1+1-'(kk+1))
       proof
        assume 1<=kk+1 & kk+1<=i1+1;
             then kk+1-1<=i2+1-1 by REAL_1:49,A149;
             then A184: kk <=i2+1-1 by XCMPLX_1:26;
             then A185: kk<=i2 by XCMPLX_1:26;
             per cases;
             suppose 0<kk;
               then A186: 0+1<=kk by NAT_1:38;
               then A187: kk-1>=0 by SQUARE_1:12;
               then A188: kk-1=kk-'1 by BINARITH:def 3;
                  kk-'1<kk-'1+1 by NAT_1:38;
               then kk-'1<kk by A188,XCMPLX_1:27;
               then kk-'1<i2 by A185,AXIOMS:22;
               then kk-'1<i2+1 by A150,A149,AXIOMS:22;
               then i1+1-(kk -' 1)>=0 by SQUARE_1:12,A149;
               then A189: ii1+1-' (kk-' 1)=i1+1-(kk-' 1) by BINARITH:def 3
                        .=i1+1-(kk-1) by A187,BINARITH:def 3;
                  kk<ii1+1 by A149,A185,NAT_1:38;
               then i1+1-kk>0 by SQUARE_1:11;
               then A190: ii1+1-' kk=i1+1-kk by BINARITH:def 3;
                  now per cases;
               case A191: kk<=i2;
               then A192: (sn1.(ii1+1-'(kk-'1))>=sm1.(ii1+1-'kk) implies
                  sn1.(ii1+1-'kk)=sn1.(ii1+1-'(kk-'1))-sm1.(ii1+1-'kk)
                  &
                  pn1.(ii1+1-'kk)=pn1.(ii1+1-'(kk-'1))*2+1
               )&
               (not sn1.(ii1+1-'(kk-'1))>=sm1.(ii1+1-'kk) implies
                  sn1.(ii1+1-'kk)=sn1.(ii1+1-'(kk-'1))
                  &
                  pn1.(ii1+1-'kk)=pn1.(ii1+1-'(kk-'1))*2
               ) by A190,A189,A113,A186,A149;
               A193: (sn2.(ii1+1-'(kk-'1))>=sm2.(ii1+1-'kk) implies
                  sn2.(ii1+1-'kk)=sn2.(ii1+1-'(kk-'1))-sm2.(ii1+1-'kk)
                  &
                  pn2.(ii1+1-'kk)=pn2.(ii1+1-'(kk-'1))*2+1
               )&
               (not sn2.(ii1+1-'(kk-'1))>=sm2.(ii1+1-'kk) implies
                  sn2.(ii1+1-'kk)=sn2.(ii1+1-'(kk-'1))
                  &
                  pn2.(ii1+1-'kk)=pn2.(ii1+1-'(kk-'1))*2
               ) by A190,A189,A114,A186,A191,A149;
                   ii1<ii1+1 by NAT_1:38;
                then A194: kk<i1+1 by A149,A191,AXIOMS:22;
                then A195: i1+1-kk>0 by SQUARE_1:11;
                then ii1+1-'kk=i1+1-kk by BINARITH:def 3;
                then A196: ii1+1-'kk>=0+1 by A195,NAT_1:38;
                   kk-1>=0 by A186,SQUARE_1:12;
                then kk-'1=kk-1 by BINARITH:def 3;
                 then kk=kk-'1+1 by XCMPLX_1:27;
                then A197: ii1+1+1-'kk = ii1+1-'(kk-'1) by Th1;
                   1<=ii1+1-'kk & ii1+1-'kk<=i1+1 by A196,GOBOARD9:2;
                then A198: sm1.(ii1+1-'kk)=sm2.(ii1+1-'kk) by A160;
                    ii1+1+1-'(kk+1)=ii1+1-'kk by Th1;
                hence pn1.(ii1+1+1-'(kk+1))=pn2.(ii1+1+1-'(kk+1)) by A183,
A186,A192,A193,A194,A197,A198,A180;
               end;
               case kk>i2;
                hence contradiction by A184,XCMPLX_1:26;
               end;
               end;
              hence pn1.(ii1+1+1-'(kk+1))=pn2.(ii1+1+1-'(kk+1));
             end;
             suppose 0>=kk;
               then A199: kk=0 by NAT_1:18;
                  ii1+1+1-'(kk+1)=ii1+1-'kk by Th1 .=i1+1 by A199,JORDAN3:
2
;
              hence pn1.(ii1+1+1-'(kk+1))=pn2.(ii1+1+1-'(kk+1)) by A113,A114,
A115,A132,AXIOMS:21;
       end;
       end;
      hence P4[kk+1];
     end;
     A200: for jj being Nat holds P4[jj] from NAT_1:sch 1(A181,A182);
     A201: for jj being Integer st 1<=jj & jj<=i1+1 holds
                  pn1.(i1+1+1- jj)=pn2.(i1+1+1- jj)
      proof let jj be Integer;
       assume A202: 1<=jj & jj<=i1+1;  then 0<=jj by AXIOMS:22;
        then reconsider j2=jj as Nat by INT_1:16;
           ii1+1<ii1+1+1 by NAT_1:38;
        then jj<ii1+1+1 by A202,AXIOMS:22;
        then ii1+1+1-j2>=0 by SQUARE_1:12;
        then ii1+1+1-' j2=ii1+1+1-jj by BINARITH:def 3;
       hence pn1.(i1+1+1- jj)=pn2.(i1+1+1- jj) by A202,A200;
      end;
     A203: 1<=1+ii1 by NAT_1:29;
        i1+1+1- (i1+1)=1 by XCMPLX_1:26;
    hence t1=t2 by A113,A114,A201,A203;
  end;
  end;
  hence thesis;
end;
end;

:: The following theorem is about array index area checking.
:: Each index of an array appeared in the program is checked
:: at the place just in front of the place the array is used,
:: if it remains in the defined area of array.
theorem     for n,m being Integer st n>=0 & m>0 holds
   for sm,sn,pn being FinSequence of INT,i being Integer st
      len sm=n+1 & len sn=n+1 & len pn=n+1 &
    (not (n<m) implies
     sm.1=m &
     ( 1<=i & i<=n &
       ((for k being Integer st 1<=k & k<i holds
        sm.(k+1)=sm.(k)*2 & not(sm.(k+1)>n))
        & sm.(i+1)=sm.(i)*2 & sm.(i+1)>n
       )
       &
       pn.(i+1)=0 & sn.(i+1)=n &
       (for j being Integer st 1<=j & j<=i holds
        (sn.(i+1- (j- 1))>=sm.(i+1- j) implies
             sn.(i+1- j)=sn.(i+1- (j- 1))-sm.(i+1- j) &
             pn.(i+1- j)=pn.(i+1- (j- 1))*2+1
        )&
        (not sn.(i+1- (j- 1))>=sm.(i+1- j) implies
             sn.(i+1- j)=sn.(i+1- (j- 1))
             &
             pn.(i+1- j)=pn.(i+1- (j- 1))*2
        )
       )& idiv1_prg(n,m)=pn.1
     )
    )
    holds
      len sm=n+1 & len sn=n+1 & len pn=n+1 &
    (n<m implies idiv1_prg(n,m)=0)&
    (not (n<m) implies
    1 in dom sm & sm.1=m &
     ( 1<=i & i<=n &
       ((for k being Integer st 1<=k & k<i holds
        k+1 in dom sm & k in dom sm & sm.(k+1)=sm.(k)*2 & not(sm.(k+1)>n))
        & i+1 in dom sm & i in dom sm & sm.(i+1)=sm.(i)*2 & sm.(i+1)>n
       )
       &
       i+1 in dom pn & pn.(i+1)=0 & i+1 in dom sn & sn.(i+1)=n &
       (for j being Integer st 1<=j & j<=i holds
        i+1-(j-1) in dom sn & i+1-j in dom sm &
        (sn.(i+1- (j- 1))>=sm.(i+1- j) implies
           i+1-j in dom sn & i+1-j in dom sm &
             sn.(i+1- j)=sn.(i+1- (j- 1))-sm.(i+1- j)
             & i+1-j in dom pn & i+1-(j-1) in dom pn &
             pn.(i+1- j)=pn.(i+1- (j- 1))*2+1
        )&
        (not sn.(i+1- (j- 1))>=sm.(i+1- j) implies
             i+1-j in dom sn & i+1-(j-1) in dom sn &
             sn.(i+1- j)=sn.(i+1- (j- 1))
             & i+1-j in dom pn & i+1-(j-1) in dom pn &
             pn.(i+1- j)=pn.(i+1- (j- 1))*2
        )
       ) & 1 in dom pn &
       idiv1_prg(n,m) =pn.1
     )
    )
proof let n,m be Integer;
 assume A1: n>=0 & m>0;
 let sm,sn,pn be FinSequence of INT,i be Integer;
  assume A2: len sm=n+1 & len sn=n+1 & len pn=n+1 &
    (not (n<m) implies
     sm.1=m &
     ( 1<=i & i<=n &
       ((for k being Integer st 1<=k & k<i holds
        sm.(k+1)=sm.(k)*2 & not(sm.(k+1)>n))
        & sm.(i+1)=sm.(i)*2 & sm.(i+1)>n
       )
       &
       pn.(i+1)=0 & sn.(i+1)=n &
       (for j being Integer st 1<=j & j<=i holds
        (sn.(i+1- (j- 1))>=sm.(i+1- j) implies
             sn.(i+1- j)=sn.(i+1- (j- 1))-sm.(i+1- j) &
             pn.(i+1- j)=pn.(i+1- (j- 1))*2+1
        )&
        (not sn.(i+1- (j- 1))>=sm.(i+1- j) implies
             sn.(i+1- j)=sn.(i+1- (j- 1))
             &
             pn.(i+1- j)=pn.(i+1- (j- 1))*2
        )
       )& idiv1_prg(n,m)=pn.1
     )
    );
    reconsider n2=n as Nat by A1,INT_1:16;
       (not (n<m) implies
    1 in dom sm & sm.1=m &
     ( 1<=i & i<=n &
       ((for k being Integer st 1<=k & k<i holds
        k+1 in dom sm & k in dom sm & sm.(k+1)=sm.(k)*2 & not(sm.(k+1)>n))
        & i+1 in dom sm & i in dom sm & sm.(i+1)=sm.(i)*2 & sm.(i+1)>n
       )
       &
       i+1 in dom pn & pn.(i+1)=0 & i+1 in dom sn & sn.(i+1)=n &
       (for j being Integer st 1<=j & j<=i holds
        i+1-(j-1) in dom sn & i+1-j in dom sm &
        (sn.(i+1- (j- 1))>=sm.(i+1- j) implies
           i+1-j in dom sn & i+1-j in dom sm &
             sn.(i+1- j)=sn.(i+1- (j- 1))-sm.(i+1- j)
             & i+1-j in dom pn & i+1-(j-1) in dom pn &
             pn.(i+1- j)=pn.(i+1- (j- 1))*2+1
        )&
        (not sn.(i+1- (j- 1))>=sm.(i+1- j) implies
             i+1-j in dom sn & i+1-(j-1) in dom sn &
             sn.(i+1- j)=sn.(i+1- (j- 1))
             & i+1-j in dom pn & i+1-(j-1) in dom pn &
             pn.(i+1- j)=pn.(i+1- (j- 1))*2
        )
       ) & 1 in dom pn &
       idiv1_prg(n,m) =pn.1
     )
    )
    proof
     assume A3: not (n<m);
        1<=n2+1 by NAT_1:37;
      then A4: 1 in Seg len sm by A2,FINSEQ_1:3;
      A5: (for j being Integer st 1<=j & j<=i holds
        i+1-(j-1) in dom sn & i+1-j in dom sm &
        (sn.(i+1- (j- 1))>=sm.(i+1- j) implies
           i+1-j in dom sn & i+1-j in dom sm &
             sn.(i+1- j)=sn.(i+1- (j- 1))-sm.(i+1- j)
             & i+1-j in dom pn & i+1-(j-1) in dom pn &
             pn.(i+1- j)=pn.(i+1- (j- 1))*2+1
        )&
        (not sn.(i+1- (j- 1))>=sm.(i+1- j) implies
             i+1-j in dom sn & i+1-(j-1) in dom sn &
             sn.(i+1- j)=sn.(i+1- (j- 1))
             & i+1-j in dom pn & i+1-(j-1) in dom pn &
             pn.(i+1- j)=pn.(i+1- (j- 1))*2
        )
       )
       proof let j be Integer;
        assume A6: 1<=j & j<=i;
         then A7: 0<=i-j by SQUARE_1:12;
         A8: i-j<i-j+1 by REAL_1:69;
         then 0<=i-j+1 by A7,AXIOMS:22;
         then 0+1<=i-j+1+1 by REAL_1:55;
         then 1<=i+1-j+1 by XCMPLX_1:29;
         then A9: 1<=i+1-(j-1) by XCMPLX_1:37;
         A10: i+1<=n2+1 by A3,A2,REAL_1:55;
            j-1>=0 by A6,SQUARE_1:12;
         then i+1+0<=i+1+(j-1) by REAL_1:55;
         then i+1-(j-1)<=i+1+(j-1)-(j-1) by REAL_1:49;
         then i+1-(j-1)<=i+1 by XCMPLX_1:26;
         then A11: i+1-(j-1)<=n2+1 by A10,AXIOMS:22;
            0<i-j+1 by A6,A8,SQUARE_1:12;
         then reconsider ij=i-j+1 as Nat by INT_1:16;
            0+1<=ij by A7,A8,NAT_1:38;
         then A12: 1<=i+1-j by XCMPLX_1:29;
         A13: i+1<=n2+1 by A3,A2,REAL_1:55;
            j>=0 by A6,AXIOMS:22;
         then i+1+0<=i+1+j by REAL_1:55;
         then i+1-j<=i+1+j-j by REAL_1:49;
         then i+1-j<=i+1 by XCMPLX_1:26;
         then i+1-j<=n2+1 by A13,AXIOMS:22;
        hence thesis by A2,A3,A6,A9,A11,A12,Th7;
       end;
         i>=0 by AXIOMS:22,A2,A3;
      then reconsider i2=i as Nat by INT_1:16;
      A14: i2+1<=n2+1 by A2,A3,REAL_1:55;
         1<=i2+1 by NAT_1:37;
      then A15: i2+1 in Seg (n2+1) by FINSEQ_1:3,A14;
      A16: i2<=n2+1 by A2,A3,NAT_1:38;
      then A17: i2 in Seg (n2+1) by A2,A3,FINSEQ_1:3;
          for k being Integer st 1<=k & k<i holds
        k+1 in dom sm & k in dom sm & sm.(k+1)=sm.(k)*2 & not(sm.(k+1)>n)
        proof let k be Integer;
         assume A18: 1<=k & k<i;
          then 0<=k by AXIOMS:22;
          then reconsider k2=k as Nat by INT_1:16;
          A19: k2<n2+1 by A18,AXIOMS:22,A16;
          then A20: k in Seg (n2+1) by A18,FINSEQ_1:3;
          A21: k2+1<=n2+1 by A19,NAT_1:38;
             1<=k2+1 by NAT_1:37;
          then k2+1 in Seg (n2+1) by FINSEQ_1:3,A21;
         hence k+1 in dom sm & k in dom sm &
         sm.(k+1)=sm.(k)*2 & not(sm.(k+1)>n) by A2,A3,A18,A20,FINSEQ_1:def 3;
        end;
     hence thesis by A2,A3,A4,A5,A15,A17,FINSEQ_1:def 3;
    end;
    hence thesis by A1,A2,Def1;
end;

theorem Th9: for n,m being Nat st m>0 holds
 idiv1_prg(n qua Integer,m qua Integer)=n div m
proof let n2,m2 be Nat;
 assume A1: m2>0;
  then A2: n2>=0 & m2>0 by NAT_1:18;
  reconsider n=n2,m=m2 as Integer;
    now per cases;
  suppose A3: n<m;
    then A4: n div m=0 by PRE_FF:4,A2;
   deffunc F1(Nat) = 1;
      ex ssm being FinSequence st len ssm=n2+1 &
                for k2 being Nat st k2 in (Seg (n2+1)) holds
   ssm.k2=F1(k2) from FINSEQ_1:sch 2;
   then consider ssm being FinSequence such that
   A5: len ssm=n+1 & for k2 being Nat st k2 in (Seg (n2+1)) holds
        ssm.k2=1;
      rng ssm c= INT
   proof let y be set;assume
        y in rng ssm;
     then consider x being set such that
     A6: x in dom ssm & y=ssm.x by FUNCT_1:def 5;
     A7: dom ssm=Seg len ssm by FINSEQ_1:def 3;
     reconsider n=x as Nat by A6;
        ssm.n=1 by A5,A6,A7;
    hence y in INT by A6,INT_1:12;
   end;
   then reconsider ssm as FinSequence of INT by FINSEQ_1:def 4;
   set ssn=ssm,ppn=ssm;
      len ssm=n+1 & len ssn=n+1 & len ppn=n+1 &
    (n<m implies n2 div m2=0)&
    (not (n<m) implies
    ssm.1=m &
     ( ex i being Integer st 1<=i & i<=n &
       ((for k being Integer st 1<=k & k<i holds
            ssm.(k+1)=ssm.(k)*2 & not(ssm.(k+1)>n))
        &   ssm.(i+1)=ssm.(i)*2 & ssm.(i+1)>n
       )
       &
       ppn.(i+1)=0 & ssn.(i+1)=n &
       (for j being Integer st 1<=j & j<=i holds
        (ssn.(i+1- (j- 1))>=ssm.(i+1- j) implies
             ssn.(i+1- j)=ssn.(i+1- (j- 1))-ssm.(i+1- j)
             &
             ppn.(i+1- j)=ppn.(i+1- (j- 1))*2+1
        )&
        (not ssn.(i+1- (j- 1))>=ssm.(i+1- j) implies
             ssn.(i+1- j)=ssn.(i+1- (j- 1))
             &
             ppn.(i+1- j)=ppn.(i+1- (j- 1))*2
        )
       )&
       n2 div m2=ppn.1
     )
    ) by A3,A4,A5,SCMFSA9A:5;
   hence
       ex sm,sn,pn being FinSequence of INT st
      len sm=n+1 & len sn=n+1 & len pn=n+1 &
    (n<m implies n2 div m2=0)&
    (not (n<m) implies
    sm.1=m &
     ( ex i being Integer st 1<=i & i<=n &
       ((for k being Integer st 1<=k & k<i holds
            sm.(k+1)=sm.(k)*2 & not(sm.(k+1)>n))
        &   sm.(i+1)=sm.(i)*2 & sm.(i+1)>n
       )
       &
       pn.(i+1)=0 & sn.(i+1)=n &
       (for j being Integer st 1<=j & j<=i holds
        (sn.(i+1- (j- 1))>=sm.(i+1- j) implies
             sn.(i+1- j)=sn.(i+1- (j- 1))-sm.(i+1- j)
             &
             pn.(i+1- j)=pn.(i+1- (j- 1))*2+1
        )&
        (not sn.(i+1- (j- 1))>=sm.(i+1- j) implies
             sn.(i+1- j)=sn.(i+1- (j- 1))
             &
             pn.(i+1- j)=pn.(i+1- (j- 1))*2
        )
       )&
       n2 div m2=pn.1
     )
    );
  end;
  suppose A8: n>=m;  then n>0 by A1;
   then n2>=0+1 by NAT_1:38;
   then 1< n2+1 by NAT_1:38;
   then A9: 1 in Seg (n2+1) by FINSEQ_1:3;
   deffunc F1(Nat) = m2*(2|^($1-'1));
      ex ssm being FinSequence st len ssm=n2+1 &
                for k2 being Nat st k2 in (Seg (n2+1)) holds
   ssm.k2=F1(k2) from FINSEQ_1:sch 2;
   then consider ssm being FinSequence such that
   A10: len ssm=n+1 & for k2 being Nat st k2 in (Seg (n2+1)) holds
        ssm.k2=m*(2|^(k2-'1));
      rng ssm c= INT
   proof let y be set;assume
        y in rng ssm;
     then consider x being set such that
     A11: x in dom ssm & y=ssm.x by FUNCT_1:def 5;
     A12: dom ssm=Seg len ssm by FINSEQ_1:def 3;
     reconsider n=x as Nat by A11;
        ssm.n=m*(2|^(n-'1)) by A10,A11,A12;
    hence y in INT by A11,INT_1:12;
   end;
   then reconsider ssm as FinSequence of INT by FINSEQ_1:def 4;
   deffunc F(Nat) = n2 mod (m2*(2|^($1-'1)));
      ex ssn being FinSequence st len ssn=n2+1 &
   for k2 being Nat st k2 in (Seg (n2+1)) holds
   ssn.k2=F(k2) from FINSEQ_1:sch 2;
   then consider ssn being FinSequence such that
   A13: len ssn=n+1 & for k2 being Nat st k2 in (Seg (n2+1)) holds
        ssn.k2=n2 mod (m2*(2|^(k2-'1)));
      rng ssn c= INT
   proof let y be set;assume
        y in rng ssn;
     then consider x being set such that
     A14: x in dom ssn & y=ssn.x by FUNCT_1:def 5;
     A15: dom ssn=Seg len ssn by FINSEQ_1:def 3;
     reconsider n3=x as Nat by A14;
        ssn.n3=n2 mod (m2*(2|^(n3-'1))) by A13,A14,A15;
    hence y in INT by A14,INT_1:12;
   end;
   then reconsider ssn as FinSequence of INT by FINSEQ_1:def 4;
   deffunc F3(Nat)= n2 div (m2*(2|^($1-'1)));
      ex ppn being FinSequence st len ppn=n2+1 &
     for k2 being Nat st k2 in (Seg (n2+1)) holds
   ppn.k2= F3(k2) from FINSEQ_1:sch 2;
   then consider ppn being FinSequence such that
   A16: len ppn=n+1 &
   for k2 being Nat st k2 in (Seg (n2+1)) holds
        ppn.k2= n2 div (m2*(2|^(k2-'1)));
      rng ppn c= INT
   proof let y be set;assume
        y in rng ppn;
     then consider x being set such that
     A17: x in dom ppn & y=ppn.x by FUNCT_1:def 5;
     A18: dom ppn=Seg len ppn by FINSEQ_1:def 3;
     reconsider n3=x as Nat by A17;
        ppn.n3=n2 div (m2*(2|^(n3-'1))) by A16,A17,A18;
    hence y in INT by A17,INT_1:12;
   end;
   then reconsider ppn as FinSequence of INT by FINSEQ_1:def 4;
   A19: ppn.1=n2 div (m2*(2|^(1-'1))) by A16,A9
           .=n2 div (m2*(2|^(0))) by GOBOARD9:1
           .=n2 div m2*1 by NEWTON:9.=n2 div m2;
   A20: ssm.1=m*(2|^(1-'1)) by A10,A9 .=m*(2|^(0)) by GOBOARD9:1
            .=m*1 by NEWTON:9
            .=m;
    consider ii0 being Nat such that
    A21: (for k2 being Nat st k2<ii0 holds m*(2|^(k2))<=n2)
      & m2*(2|^(ii0))>n2 by A1,Th6;
    reconsider i0=ii0 as Integer;
       now assume i0=0;
      then m2*1>n2 by NEWTON:9,A21;
     hence contradiction by A8;
    end;
    then ii0>0 by NAT_1:19;
    then A22: ii0>=0+1 by NAT_1:38;
    then A23: i0-1>=0 by SQUARE_1:12;
    A24: now assume i0>n2;
      then A25: m*(2|^n2) <= n2 by A21;
      A26: 2|^n2 >0 by HEINE:5;
         1+0<=m2 by A1,NAT_1:38;
      then 1*(2|^n2)<=m2*(2|^n2) by A26,AXIOMS:25;
      then A27: (2|^n2)<=n2 by A25,AXIOMS:22;
         n2+1<= 2|^n2 by HEINE:7;
     hence contradiction by NAT_1:38,A27;
    end;
    then A28: i0+1<=n2+1 by REAL_1:55;
       i0<n2+1 by A24,NAT_1:38;
    then A29: ii0 in Seg(n2+1) by FINSEQ_1:3,A22;
       1<=i0+1 by A22,NAT_1:38;
    then A30: ii0+1 in Seg(n2+1) by A28,FINSEQ_1:3;
       ii0+1-' 1=i0 by BINARITH:39 .=i0-1+1 by XCMPLX_1:27
             .=ii0-' 1+1 by A23,BINARITH:def 3;
    then A31: 2|^(ii0+1-'1)=(2|^(ii0-'1))*2 by NEWTON:11;
    A32: ssm.(i0+1)=m*(2|^(ii0+1-'1)) by A10,A30
              .=m*(2|^(ii0-'1))*2 by A31,XCMPLX_1:4
              .=(ssm.i0)*2 by A10,A29;
    A33: for k being Nat st 1<=k & k<i0 holds
            ssm.(k+1)=ssm.(k)*2 & not(ssm.(k+1)>n)
     proof let k be Nat;
      assume A34: 1<=k & k<i0;
        then A35: k<=n2 by A24,AXIOMS:22;
        A36: k-1>=0 by A34,SQUARE_1:12;
        A37: 1<k+1 by A34,NAT_1:38;
        A38: k+1-'1=k by BINARITH:39;
           k+1<=n2+1 by REAL_1:55,A35;
        then k+1 in Seg (n2+1) by FINSEQ_1:3,A37;
        then A39: ssm.(k+1)=m*(2|^(k+1-'1)) by A10;
           k<=n2+1 by A35,NAT_1:37;
        then k in Seg (n2+1) by A34,FINSEQ_1:3;
        then A40: ssm.(k)=m*(2|^(k-'1)) by A10;
           k+1-'1=k by BINARITH:39 .=k-1+1 by XCMPLX_1:27
             .=k-' 1+1 by A36,BINARITH:def 3;
        then 2|^(k+1-'1)=(2|^(k-'1))*2 by NEWTON:11;
      hence ssm.(k+1)=ssm.(k)*2 & not(ssm.(k+1)>n) by A21,A34,A38,A39,A40,
XCMPLX_1:4;
     end;
    A41: for k being Integer st 1<=k & k<i0 holds
            ssm.(k+1)=ssm.(k)*2 & not(ssm.(k+1)>n)
    proof let k be Integer;
     assume A42: 1<=k & k<i0;  then 0<=k by AXIOMS:22;
      then reconsider kk=k as Nat by INT_1:16;
         ssm.(kk+1)=ssm.(kk)*2 & not(ssm.(kk+1)>n) by A42,A33;
     hence ssm.(k+1)=ssm.(k)*2 & not(ssm.(k+1)>n);
    end;
    A43: 1<=1+ii0 by NAT_1:29;
    A44: ii0+1-'1=ii0 by BINARITH:39;
       i0+1<=n2+1 by A24,REAL_1:55;
    then A45: ii0+1 in (Seg (n2+1)) by A43,FINSEQ_1:3;
    then A46:  ssm.(i0+1)>n by A21,A44,A10;
        i0 <n2+1 by A24,NAT_1:38;
     then A47: ii0+1<=n2+1 by NAT_1:38;
        0<=ii0 by NAT_1:18;
     then 0+1<=i0+1 by REAL_1:55;
     then ii0+1 in Seg (n2+1) by A47,FINSEQ_1:3;
     then A48: ssn.(i0+1)=n2 mod (m2*(2|^(ii0+1-'1))) by A13;
     reconsider k5=m2*(2|^(ii0+1-'1)) as Nat;
     A49: k5>n2 by A21,BINARITH:39;
        n2 div (m2*(2|^(ii0+1-'1)))=0 by A21,A44,JORDAN4:5;
     then A50:  ppn.(i0+1)=0 & ssn.(i0+1)=n by A16,A45,A48,A49,GR_CY_1:4;
        for j being Integer st 1<=j & j<=i0 holds
        (ssn.(i0+1- (j- 1))>=ssm.(i0+1- j) implies
             ssn.(i0+1- j)=ssn.(i0+1- (j- 1))-ssm.(i0+1- j)
             &
             ppn.(i0+1- j)=ppn.(i0+1- (j- 1))*2+1
        )&
        (not ssn.(i0+1- (j- 1))>=ssm.(i0+1- j) implies
             ssn.(i0+1- j)=ssn.(i0+1- (j- 1))
             &
             ppn.(i0+1- j)=ppn.(i0+1- (j- 1))*2
        )
      proof let j be Integer;
       assume A51: 1<=j & j<=i0;
        then 0<=j by AXIOMS:22;
        then reconsider jj=j as Nat by INT_1:16;
        A52: i0-j>=0 by SQUARE_1:12,A51;
        then A53: ii0-' jj=i0-j by BINARITH:def 3;
        A54: j-1>=0 by A51,SQUARE_1:12;
        hereby assume
          A55: ssn.(i0+1- (j- 1))>=ssm.(i0+1- j);
          A56: jj-' 1=j-1 by A54,BINARITH:def 3;
          A57: j+1<=i0+1 by A51,REAL_1:55;
             j<j+1 by REAL_1:69;
          then A58: j<i0+1 by AXIOMS:22,A57;
             ii0<ii0+1 by NAT_1:38;
          then j<i0+1 by A51,AXIOMS:22;
          then A59: i0+1-j>0 by SQUARE_1:11;
          then A60: ii0+1-' jj=i0+1-j by BINARITH:def 3;
          then A61: ii0+1-' jj=i0-j+1 by XCMPLX_1:29;
          A62: ii0+1-' jj=i0+1-j by A59,BINARITH:def 3;
             jj-' 1<=j by GOBOARD9:2;
          then jj-' 1<i0+1 by AXIOMS:22,A58;
          then ii0+1-(jj -' 1)>=0 by SQUARE_1:12;
          then A63: ii0+1-' (jj-' 1)=i0+1-(jj-' 1) by BINARITH:def 3
                        .=i0+1-j+1 by A56,XCMPLX_1:37;
          then A64: ii0+1-' (jj-' 1)-' 1=ii0+1-' jj
                                by A60,BINARITH:39;
          A65: ii0+1-' (jj-' 1)=i0+1-(j-1) by A63,XCMPLX_1:37;
             ii0<ii0+1 by NAT_1:38;
          then j<i0+1 by A51,AXIOMS:22;
          then i0+1-j>=0 by SQUARE_1:12;
          then A66: ii0+1-' jj=i0+1-j by BINARITH:def 3;
             i0+1<=n2+j by A24,REAL_1:55,A51;
          then i0+1-j<=n2+j-j by REAL_1:49;
          then i0+1-j<=n2 by XCMPLX_1:26;
          then A67: ii0+1-' jj+1<=n2+1 by REAL_1:55,A66;
             1<=ii0+1-' (jj-' 1) by A60,A63,NAT_1:29;
          then A68: ii0+1-' (jj-' 1) in Seg (n2+1) by A60,A63,A67,FINSEQ_1:
3;
          A69: ii0+1-' jj>=0+1 by NAT_1:38,A60,A59;
          then ii0+1-' jj -1>=0 by SQUARE_1:12;
          then A70: ii0+1-' jj -' 1=i0+1-j-1 by A60,BINARITH:def 3
                             .=i0-j+1-1 by XCMPLX_1:29
                             .=i0-j by XCMPLX_1:26;
          A71: ii0+1-' jj<=i0+1 by GOBOARD9:2;
             i0+1<=n2+1 by REAL_1:55,A24;
          then n2+1>=(ii0+1-' jj) by A71,AXIOMS:22;
          then A72: ii0+1-' (jj) in Seg (n2+1) by A69,FINSEQ_1:3;
          then A73: ssn.(ii0+1-' jj)=n2 mod (m2*(2|^(ii0+1-' jj-' 1))) by A13;
          A74: jj-' 1=j-1 by A54,BINARITH:def 3;
          A75: j+1<=i0+1 by A51,REAL_1:55;
             jj<jj+1 by NAT_1:38;
          then A76: j<i0+1 by AXIOMS:22,A75;
             jj-' 1<=jj by GOBOARD9:2;
          then jj-' 1<i0+1 by AXIOMS:22,A76;
          then ii0+1-(jj -' 1)>=0 by SQUARE_1:12;
          then ii0+1-' (jj-' 1)=i0+1-(jj-' 1) by BINARITH:def 3
                        .=i0+1-j+1 by A74,XCMPLX_1:37
                        .=ii0+1-' jj+1 by A59,BINARITH:def 3;
          then A77: ssn.(ii0+1-' (jj-' 1))
           =n2 mod (m2*(2|^(ii0+1-' jj+1-' 1))) by A13,A68
          .=n2 mod (m2*(2|^(ii0+1-' jj))) by BINARITH:39;
             i0-j+1>=0+1 by A52,REAL_1:55;
          then ii0+1-' jj-1>=0 by SQUARE_1:12,A61;
          then A78: ii0+1-' jj-' 1 =i0-j+1-1 by BINARITH:def 3,A61
                       .=i0-j by XCMPLX_1:26 .=ii0-' jj
                                    by A52,BINARITH:def 3;
          A79: m2*(2|^(ii0+1-' jj))=m2*(2|^(ii0-' jj+1)) by A53,A60,XCMPLX_1
:29
          .=m2*((2|^(ii0-' jj))*2) by NEWTON:11
          .=2*(m2*(2|^(ii0-' jj))) by XCMPLX_1:4;
          A80: ssm.(ii0+1-' jj)=m2*(2|^(ii0-' jj)) by A10,A72,A78;
             2|^(ii0-' jj)<>0 by CARD_4:51;
          then 2|^(ii0-' jj)>0 by NAT_1:19;
          then A81: m2*(2|^(ii0-' jj))> m2*0 by A1,REAL_1:70;
          then A82: ssn.(ii0+1-' (jj-' 1))-ssm.(ii0+1-' jj)
          = n2 mod (m2*(2|^(ii0-' jj))) by A55,A62,A65,A77,A79,A80,
Th2;
             ppn.(ii0+1-' jj)=n2 div (m2*(2|^(ii0+1-' jj-' 1))) by A16,
A72
         .= (n2 div (m2*(2|^(ii0+1-' (jj-' 1)-' 1))))*2+1
                         by A55,A60,A64,A65,A77,A78,A79,A80,A81,Th3
         .= ppn.(ii0+1-' (jj-' 1))*2+1 by A16,A68;
         hence ssn.(i0+1- j)=ssn.(i0+1- (j- 1))-ssm.(i0+1- j)
             &
             ppn.(i0+1- j)=ppn.(i0+1- (j- 1))*2+1 by A52,A60,A65,A70,A73,
A82,
BINARITH:def 3;
        end;
        thus thesis
        proof assume
         A83: not ssn.(i0+1- (j- 1))>=ssm.(i0+1- j);
          A84: jj-' 1=j-1 by A54,BINARITH:def 3;
          A85: j+1<=i0+1 by A51,REAL_1:55;
             jj<jj+1 by NAT_1:38;
          then A86: j<i0+1 by AXIOMS:22,A85;
             ii0<ii0+1 by NAT_1:38;
          then j<i0+1 by A51,AXIOMS:22;
          then A87: i0+1-j>0 by SQUARE_1:11;
          then A88: ii0+1-' jj=i0+1-j by BINARITH:def 3;
          then A89: ii0+1-' jj=i0-j+1 by XCMPLX_1:29;
             jj-' 1<=jj by GOBOARD9:2;
          then jj-' 1<i0+1 by AXIOMS:22,A86;
          then i0+1-(jj -' 1)>=0 by SQUARE_1:12;
          then A90: ii0+1-' (jj-' 1)=i0+1-(jj-' 1) by BINARITH:def 3
                        .=i0+1-j+1 by A84,XCMPLX_1:37;
          then A91: ii0+1-' (jj-' 1)-' 1 =ii0+1-' jj
                                     by A88,BINARITH:39;
             ii0<ii0+1 by NAT_1:38;
          then j<i0+1 by A51,AXIOMS:22;
          then i0+1-j>=0 by SQUARE_1:12;
          then A92: ii0+1-' jj=i0+1-j by BINARITH:def 3;
             i0+1<=n2+j by A24,REAL_1:55,A51;
          then i0+1-j<=n2+j-j by REAL_1:49;
          then i0+1-j<=n2 by XCMPLX_1:26;
          then A93: ii0+1-' jj+1<=n2+1 by REAL_1:55,A92;
             1<=ii0+1-' (jj-' 1) by A88,A90,NAT_1:29;
          then A94: ii0+1-' (jj-' 1) in Seg (n2+1) by A88,A90,A93,FINSEQ_1:
3;
          A95: ii0+1-' jj>=0+1 by NAT_1:38,A88,A87;
          then ii0+1-' jj -1>=0 by SQUARE_1:12;
          then A96: ii0+1-' jj -' 1=i0+1-j-1 by A88,BINARITH:def 3
                             .=i0-j+1-1 by XCMPLX_1:29
                             .=i0-j by XCMPLX_1:26;
          A97: ii0+1-' jj<=ii0+1 by GOBOARD9:2;
             i0+1<=n2+1 by REAL_1:55,A24;
          then n2+1>=(ii0+1-' jj) by A97,AXIOMS:22;
          then A98: ii0+1-' (jj) in Seg (n2+1) by A95,FINSEQ_1:3;
          then ssn.(ii0+1-' jj)=n2 mod (m2*(2|^(ii0+1-' jj-' 1))) by A13;
          then A99: ssn.(ii0+1-' jj)
            =n2 mod (m2*(2|^(ii0-' jj))) by A96,A52,BINARITH:def 3;
          A100: jj-' 1=j-1 by A54,BINARITH:def 3;
          A101: j+1<=i0+1 by A51,REAL_1:55;
             jj<jj+1 by NAT_1:38;
          then A102: j<i0+1 by AXIOMS:22,A101;
             jj-' 1<=j by GOBOARD9:2;
          then jj-' 1<i0+1 by AXIOMS:22,A102;
          then i0+1-(jj -' 1)>=0 by SQUARE_1:12;
          then A103: ii0+1-' (jj-' 1)=i0+1-(jj-' 1) by BINARITH:def 3
                        .=ii0+1-' jj+1 by A88,A100,XCMPLX_1:37;
          A104: ii0+1-' (jj-' 1)=i0+1-(j-1) by A90,XCMPLX_1:37;
          A105: ssn.(ii0+1-' (jj-' 1))
           =n2 mod (m2*(2|^(ii0+1-' jj+1-' 1))) by A13,A94,A103
          .=n2 mod (m2*(2|^(ii0+1-' jj))) by BINARITH:39;
             i0-j+1>=0+1 by A52,REAL_1:55;
          then ii0+1-' jj-1>=0 by SQUARE_1:12,A89;
          then A106: ii0+1-' jj-' 1 = ii0+1-' jj-1 by BINARITH:def 3
                       .=i0-j+1-1 by A88,XCMPLX_1:29
                       .=i0-j by XCMPLX_1:26 .=ii0-' jj
                                      by A52,BINARITH:def 3;
          A107: m2*(2|^(ii0+1-' jj))=m2*(2|^(ii0-' jj+1)) by A53,A88,XCMPLX_1
:
29
          .=m2*((2|^(ii0-' jj))*2) by NEWTON:11
          .=2*(m2*(2|^(ii0-' jj))) by XCMPLX_1:4;
          A108: ssm.(ii0+1-' jj)=m2*(2|^(ii0-' jj)) by A10,A98,A106;
             2|^(ii0-' jj)<>0 by CARD_4:51;
          then 2|^(ii0-' jj)>0 by NAT_1:19;
          then A109: m2*(2|^(ii0-' jj))> m2*0 by A1,REAL_1:70;
             ppn.(ii0+1-' jj)=n2 div (m2*(2|^(ii0+1-' jj-' 1))) by A16,
A98
         .= (n2 div (m2*(2|^(ii0+1-' (jj-' 1)-' 1))))*2
                         by A83,A88,A91,A104,A105,A106,A107,A108,A109,Th5
         .= ppn.(ii0+1-' (jj-' 1))*2 by A16,A94;
         hence ssn.(i0+1- j)=ssn.(i0+1- (j- 1))
          & ppn.(i0+1- j)=ppn.(i0+1- (j- 1))*2 by A83,A88,A99,A104,A105,A107
,A108,A109,Th4;
        end;
      end;
  hence
       ex sm,sn,pn being FinSequence of INT st
      len sm=n+1 & len sn=n+1 & len pn=n+1 &
    (n<m implies n2 div m2=0)&
    (not (n<m) implies
    sm.1=m &
     ( ex i being Integer st 1<=i & i<=n &
       ((for k being Integer st 1<=k & k<i holds
            sm.(k+1)=sm.(k)*2 & not(sm.(k+1)>n))
        &   sm.(i+1)=sm.(i)*2 & sm.(i+1)>n
       )
       &
       pn.(i+1)=0 & sn.(i+1)=n &
       (for j being Integer st 1<=j & j<=i holds
        (sn.(i+1- (j- 1))>=sm.(i+1- j) implies
             sn.(i+1- j)=sn.(i+1- (j- 1))-sm.(i+1- j)
             &
             pn.(i+1- j)=pn.(i+1- (j- 1))*2+1
        )&
        (not sn.(i+1- (j- 1))>=sm.(i+1- j) implies
             sn.(i+1- j)=sn.(i+1- (j- 1))
             &
             pn.(i+1- j)=pn.(i+1- (j- 1))*2
        )
       )&
       n2 div m2=pn.1
     )
    ) by A32,A19,A20,A10,A13,A16,A8,A24,A41,A50,A46,A22;
  end;
  end;
 hence idiv1_prg(n2 qua Integer,m2 qua Integer)=n2 div m2 by A2,Def1;
end;

theorem Th10: for n,m being Integer st n>=0 & m>0 holds
 idiv1_prg(n,m)=n div m
proof let n,m be Integer;
 assume A1: n>=0 & m>0;
  then reconsider n2=n,m2=m as Nat by INT_1:16;
     idiv1_prg(n,m)=n2 div m2 by Th9,A1;
 hence idiv1_prg(n,m)=n div m by SCMFSA9A:5;
end;

theorem Th11: for n,m being Integer,n2,m2 being Nat holds
 (m=0 & n2=n & m2=m implies n div m=0 & n2 div m2=0)&
 (n>=0 & m>0 & n2=n & m2=m implies n div m =n2 div m2)&
 (n>=0 & m<0 & n2=n & m2= -m implies
    (m2*(n2 div m2)=n2 implies n div m =-(n2 div m2))
    &(m2*(n2 div m2)<>n2 implies n div m =-(n2 div m2)-1))&
 (n<0 & m>0 & n2= -n & m2=m implies
    (m2*(n2 div m2)=n2 implies n div m =-(n2 div m2))
    &(m2*(n2 div m2)<>n2 implies n div m =-(n2 div m2)-1))&
 (n<0 & m<0 & n2= -n & m2= -m implies n div m =n2 div m2)
proof let n,m be Integer,n2,m2 be Nat;
 thus (m=0 & n2=n & m2=m implies n div m=0 & n2 div m2=0)
                             by INT_1:75,NAT_1:def 1;
 thus (n>=0 & m>0 & n2=n & m2=m implies n div m =n2 div m2) by SCMFSA9A:5;
 thus (n>=0 & m<0 & n2=n & m2= -m implies
    (m2*(n2 div m2)=n2 implies n div m =-(n2 div m2))
    &(m2*(n2 div m2)<>n2 implies n div m =-(n2 div m2)-1))
  proof assume A1: n>=0 & m<0 & n2=n & m2= -m;
   thus
       (m2*(n2 div m2)=n2 implies n div m =-(n2 div m2))
    proof assume A2: m2*(n2 div m2)=n2;
      A3: m2>0 by A1,REAL_1:66;
      then n2 = m2 * (n2 div m2) + (n2 mod m2) by NAT_1:47;
      then 0=n2+(n2 mod m2)-n2 by A2,XCMPLX_1:14;
      then A4: 0=n2 mod m2 by XCMPLX_1:26;
     thus n div m =[\ n/m /] by INT_1:def 7
         .=[\ (-n)/(-m) /] by XCMPLX_1:192
         .=(-n2) div m2 by A1,INT_1:def 7
         .= -(n2 div m2) by JORDAN1D:6,A3,A4;
    end;
   thus
       (m2*(n2 div m2)<>n2 implies n div m =-(n2 div m2)-1)
    proof assume A5: m2*(n2 div m2)<>n2;
      A6: m2>0 by A1,REAL_1:66;
      then n2 = m2 * (n2 div m2) + (n2 mod m2) by NAT_1:47;
      then A7: not n2 mod m2=0 by A5;
      A8: n div m =[\ n/m /] by INT_1:def 7
         .=[\ (-n)/(-m) /] by XCMPLX_1:192
        .=(-n2) div m2 by A1,INT_1:def 7;
           (-n2) div m2 +1= -(n2 div m2) by JORDAN1D:5,A6,A7;
     hence n div m =-(n2 div m2)-1 by A8,XCMPLX_1:26;
    end;
  end;
 thus (n<0 & m>0 & n2= -n & m2=m implies
    (m2*(n2 div m2)=n2 implies n div m =-(n2 div m2))
    &(m2*(n2 div m2)<>n2 implies n div m =-(n2 div m2)-1))
  proof assume A9: n<0 & m>0 & n2= -n & m2=m;
   thus
       (m2*(n2 div m2)=n2 implies n div m =-(n2 div m2))
    proof assume A10: m2*(n2 div m2)=n2;
         n2 = m2 * (n2 div m2) + (n2 mod m2) by A9,NAT_1:47;
      then 0=n2+(n2 mod m2)-n2 by A10,XCMPLX_1:14;
      then A11: 0=n2 mod m2 by XCMPLX_1:26;
        (n div m)=(-n2) div m by A9 .=-(n2 div m2) by JORDAN1D:6,A11,A9;
     hence n div m = -(n2 div m2);
    end;
   thus
       (m2*(n2 div m2)<>n2 implies n div m =-(n2 div m2)-1)
    proof assume A12: m2*(n2 div m2)<>n2;
         n2 = m2 * (n2 div m2) + (n2 mod m2) by A9,NAT_1:47;
      then not n2 mod m2=0 by A12;
         then (-n2) div m2 +1 = -(n2 div m2) by A9,JORDAN1D:5;::then
     hence n div m =-(n2 div m2)-1 by A9,XCMPLX_1:26;
    end;
  end;
 thus (n<0 & m<0 & n2= -n & m2= -m implies n div m =n2 div m2)
 proof assume A13: n<0 & m<0 & n2= -n & m2= -m;
  thus n div m = [\ n/m /] by INT_1:def 7
     .=[\ (-n)/(-m) /] by XCMPLX_1:192 .=(-n) div (-m) by INT_1:def 7
     .=n2 div m2 by A13,SCMFSA9A:5;
 end;
end;

::
:: int idiv_prg(int n,int m){
::   int i;
::   if (m==0){return 0;}
::   if (n>=0 && m>0){return idiv1_prg(n,m);}
::   if (n>=0 && m<0){
::    i= idiv1_prg(n,-m);
::    if((-m)*i==n){return -i;} else{return -i-1;}
::   }
::   if (n<0 && m>0){
::    i= idiv1_prg(-n,m);
::    if(m*i== -n){return -i;} else{return -i-1;}
::   }
::   return idiv1_prg(-n,-m);
::   }
::
:: One time writing program
::  Same as above.

definition let n,m be Integer;
func idiv_prg(n,m) -> Integer means
:Def2: ex i being Integer st
 (m=0 implies it=0)&
 (not m=0 implies
   (n>=0 & m>0 implies it= idiv1_prg(n,m))&
   (not (n>=0 & m>0) implies
    (n>=0 & m<0 implies i=idiv1_prg(n,-m) &
     ((-m)*i=n implies it=-i
     )&
     ((-m)*i <> n implies it= -i-1
     )
    )&
    (not (n>=0 & m<0) implies
     (n<0 & m>0 implies i=idiv1_prg(-n,m) &
      (m*i= -n implies it=-i
      )&
      (m*i <> -n implies it=-i-1
      )
     )&
     (not (n<0 & m>0) implies
       it=idiv1_prg(-n,-m)
     )
    )
   )
 );
existence
proof
 defpred P[Integer] means
 (m=0 implies n div m=0)&
 (not m=0 implies
   (n>=0 & m>0 implies n div m= idiv1_prg(n,m))&
   (not (n>=0 & m>0) implies
    (n>=0 & m<0 implies $1=idiv1_prg(n,-m) &
     ((-m)*$1=n implies n div m=-$1
     )&
     ((-m)*$1 <> n implies n div m= -$1-1
     )
    )&
    (not (n>=0 & m<0) implies
     (n<0 & m>0 implies $1=idiv1_prg(-n,m) &
      (m*$1= -n implies n div m=-$1
      )&
      (m*$1 <> -n implies n div m=-$1-1
      )
     )&
     (not (n<0 & m>0) implies
       n div m=idiv1_prg(-n,-m)
     )
    )
   )
 );
 per cases;
 suppose m=0;
  hence thesis;
 end;
 suppose A1: m<>0;
      now per cases;
   case A2: n>=0;
        now per cases by A1;
     case m>0;
       then P[idiv1_prg(n,m)] by A2,Th10;
      hence ex i being Integer st P[i];
     end;
     case A3: m<0;
       then A4: -m>0 by REAL_1:66;
       then reconsider n2=n,m2=-m as Nat by A2,INT_1:16;
          now per cases;
       case A5: (-m)* idiv1_prg(n,-m)=n;
         A6: idiv1_prg(n,-m)=n div (-m) by A4,A2,Th10;
         then m2*(n2 div m2)=n2 by Th11,A2,A4,A5;
         then n div m= -(n2 div m2) by A3,A2,Th11;
         then n div m= -idiv1_prg(n,-m) by A6,Th11,A4,A2;
        hence ex i being Integer st P[i] by A3,A2,A5;
       end;
       case A7: (-m)* idiv1_prg(n,-m)<>n;
         A8: idiv1_prg(n,-m)=n div (-m) by A4,A2,Th10;
         then m2*(n2 div m2)<>n2 by Th11,A2,A4,A7;
         then n div m= -(n2 div m2)-1 by A3,A2,Th11;
         then n div m= -(idiv1_prg(n,-m))-1 by A8,Th11,A4,A2;::then
        hence ex i being Integer st P[i] by A3,A2,A7;
       end;
       end;
      hence ex i being Integer st P[i];
     end;
     end;
    hence ex i being Integer st P[i];
   end;
   case A9: n<0;
     then A10: -n >0 by REAL_1:66;
        now per cases by A1;
     case A11: m<0;
       then A12: -m>0 by REAL_1:66;
          n div m = [\ n/m /] by INT_1:def 7
       .=[\ (-n)/(-m) /] by XCMPLX_1:192 .=(-n) div (-m) by INT_1:def 7;
       then P[idiv1_prg(-n,-m)] by A10,A12,Th10,A11,A9;
      hence ex i being Integer st P[i];
     end;
     case A13: m>0;
       then reconsider n2= -n,m2=m as Nat by A10,INT_1:16;
          now per cases;
       case A14: (m)* idiv1_prg(-n,m)= -n;
         A15: idiv1_prg(-n,m)=(-n) div (m) by A10,A13,Th10;
         then m2*(n2 div m2)=n2 by Th11,A13,A10,A14;
         then n div m= -(n2 div m2) by A13,Th11,A9;
         then n div m= -idiv1_prg(-n,m) by A15,Th11,A10,A13;::then
        hence ex i being Integer st P[i] by A13,A9,A14;
       end;
       case A16: (m)* idiv1_prg(-n,m)<> -n;
         A17: idiv1_prg(-n,m)=(-n) div (m) by A10,A13,Th10;
         then m2*(n2 div m2)<>n2 by Th11,A13,A10,A16;
         then n div m= -(n2 div m2)-1 by A13,Th11,A9;
         then n div m= -(idiv1_prg(-n,m))-1 by A17,Th11,A10,A13;
        hence ex i being Integer st P[i] by A13,A9,A16;
       end;
       end;
      hence ex i being Integer st P[i];
     end;
     end;
    hence ex i being Integer st P[i];
   end;
   end;
  hence thesis;
 end;
 end;
uniqueness;
end;

theorem    for n,m being Integer holds
 idiv_prg(n,m)=n div m
proof let n,m be Integer;
  per cases;
  suppose A1: m=0;
    then idiv_prg(n,m)=0 by Def2;
   hence idiv_prg(n,m)=n div m by A1,INT_1:75;
  end;
  suppose A2: m<>0;
       now per cases;
    case A3: n>=0;
         now per cases by A2;
      case A4: m>0;
       hence idiv_prg(n,m)=idiv1_prg(n,m) by Def2,A3
        .=n div m by Th10,A3,A4;
      end;
      case A5: m<0;
           now per cases;
        case A6: (-m)*(idiv1_prg(n,-m))=n;
          A7: -m>0 by REAL_1:66,A5;
         then reconsider m2= -m,n2= n as Nat by INT_1:16,A3;
         A8: idiv_prg(n,m)= - (idiv1_prg(n,-m))
                by A3,A6,A5,Def2;
           idiv1_prg(n,-m)=n2 div m2 by Th9,A7;
           then n div m= -(n2 div m2) by Th11,A6,A5,A3
                 .= -(n div (-m)) by Th11,A7,A3;
         hence idiv_prg(n,m)=n div m by A3,A7,A8,Th10;
        end;
        case A9: (-m)*(idiv1_prg(n,-m))<>n;
          A10: -m>0 by REAL_1:66,A5;
         then reconsider m2= -m,n2= n as Nat by INT_1:16,A3;
         A11: idiv_prg(n,m)= - (idiv1_prg(n,-m))-1
                by A3,A9,A5,Def2;
           idiv1_prg(n,-m)=n2 div m2 by Th9,A10;
           then n div m= -(n2 div m2)-1 by Th11,A9,A5,A3
                 .= -(n div (-m))-1 by Th11,A10,A3;
         hence idiv_prg(n,m)=n div m by A3,A10,A11,Th10;
        end;
        end;
       hence idiv_prg(n,m)=n div m;
      end;
      end;
     hence idiv_prg(n,m)=n div m;
    end;
    case A12: n<0;
      then A13: -n>0 by REAL_1:66;
         now per cases by A2;
      case A14: m<0;
        then A15: -m>0 by REAL_1:66;
        A16: idiv_prg(n,m)=idiv1_prg(-n,-m) by Def2,A14,A12
        .=(-n) div (-m) by Th10,A13,A15;
           n div m = [\ n/m /] by INT_1:def 7
         .=[\ (-n)/(-m) /] by XCMPLX_1:192 .=(-n) div (-m) by INT_1:def 7;
       hence idiv_prg(n,m)=(n) div (m) by A16;
      end;
      case A17: m>0;
           now per cases;
        case A18: (m)*(idiv1_prg(-n,m))= -n;
         reconsider m2= m,n2= -n as Nat by INT_1:16,A17,A13;
         A19: idiv_prg(n,m)= - (idiv1_prg(-n,m))
                by A12,A18,A17,Def2;
           idiv1_prg(-n,m)=n2 div m2 by Th9,A17;
           then n div m= -(n2 div m2) by Th11,A18,A17,A12
                 .= -((-n) div (m)) by Th11,A13,A17;
         hence idiv_prg(n,m)=n div m by A13,A17,A19,Th10;
        end;
        case A20: (m)*(idiv1_prg(-n,m))<> -n;
         reconsider m2= m,n2= -n as Nat by INT_1:16,A17,A13;
         A21: idiv_prg(n,m)= - (idiv1_prg(-n,m))-1
                by A12,A20,A17,Def2;
           idiv1_prg(-n,m)=n2 div m2 by Th9,A17;
           then n div m= -(n2 div m2)-1 by Th11,A20,A17,A12
                 .= -((-n) div (m))-1 by Th11,A13,A17;
         hence idiv_prg(n,m)=n div m by A13,A17,A21,Th10;
        end;
        end;
       hence idiv_prg(n,m)=n div m;
      end;
      end;
     hence idiv_prg(n,m)=n div m;
    end;
    end;
   hence idiv_prg(n,m)=n div m;
end;
end;

