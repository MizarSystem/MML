:: Witt's Proof of the {W}edderburn Theorem
::  by Broderick Arneson , Matthias Baaz and Piotr Rudnicki
::
:: Received December 30, 2003
:: Copyright (c) 2003 Association of Mizar Users

environ

 vocabularies WEDDWITT, ARYTM_1, ARYTM_3, FINSEQ_1, RELAT_1, FUNCT_1, RLVECT_1,
      BOOLE, FINSEQ_2, FINSEQ_4, COMPLEX1, BINOP_1, VECTSP_1, LATTICES,
      COMPLFLD, GROUP_1, REALSET1, INT_1, NAT_1, TARSKI, CARD_1, GROUP_2,
      POLYNOM2, FUNCT_4, VECTSP_2, FUNCOP_1, SEQ_1, FUNCT_2, ABSVALUE,
      UNIROOTS, PREPOWER, FINSET_1, CAT_1, RLSUB_1, GROUP_5, RLVECT_2,
      VECTSP_9, RLVECT_3, MATRLIN, SUBSET_1, EQREL_1, GROUP_3, ARYTM;
 notations TARSKI, XBOOLE_0, SUBSET_1, CARD_1, NUMBERS, XCMPLX_0, ZFMISC_1,
      XXREAL_0,
      REAL_1, INT_1, INT_2, NAT_1, NAT_D, FINSET_1, BINOP_1, RELAT_1, REALSET1,
      FUNCT_1, RELSET_1, PARTFUN1, FUNCT_2, FINSEQ_1, FINSEQ_2, BINARITH,
      RVSUM_1, COMPLFLD, POLYNOM4, RLVECT_1, STRUCT_0, GROUP_1,
      VECTSP_1, VECTSP_2, GROUP_2, PREPOWER, FUNCT_4, UNIROOTS, VECTSP_6,
      VECTSP_7, GROUP_3, GROUP_5, VECTSP_9, EQREL_1, FRAENKEL, FUNCOP_1,
      VECTSP_4, WSIERP_1, NEWTON;
 constructors SETFAM_1, WELLORD2, BINOP_1, FUNCT_4, XXREAL_0, REAL_1, NAT_D,
      EQREL_1, NEWTON, PREPOWER, BINARITH, WSIERP_1, REALSET2, VECTSP_6,
      VECTSP_7, GROUP_5, MONOID_0, VECTSP_9, POLYNOM4, UPROOTS, UNIROOTS;
 registrations XBOOLE_0, SUBSET_1, FUNCT_1, ORDINAL1, RELSET_1, FUNCOP_1,
      FINSET_1, NUMBERS, XXREAL_0, XREAL_0, NAT_1, INT_1, CARD_1, MEMBERED,
      FINSEQ_1, SEQ_1, EQREL_1, FINSEQ_2, NEWTON, STRUCT_0, VECTSP_1, COMPLFLD,
      GROUP_2, MONOID_0, FSM_1, POLYNOM1, UNIROOTS;
 requirements NUMERALS, BOOLE, SUBSET, ARITHM, REAL;
 definitions TARSKI, VECTSP_1, FUNCT_1, RLVECT_1, GROUP_1, BINOP_1, REALSET1,
      GROUP_3, GROUP_2, STRUCT_0;
 theorems GROUP_1, CARD_1, FINSEQ_1, ZFMISC_1, NAT_1, FUNCT_1, FUNCT_2,
      RELAT_1, TARSKI, XBOOLE_0, XBOOLE_1, VECTSP_1, PREPOWER, COMPLFLD,
      REAL_1, REAL_2, INT_1, RVSUM_1, FINSEQ_3, FINSEQ_2, FINSEQ_4, INT_2,
      ABSVALUE, WSIERP_1, NAT_2, PEPIN, FUNCT_7, RLVECT_1, NEWTON, FINSET_1,
      CARD_4, FUNCOP_1, VECTSP_2, CARD_2, GRAPH_5, SUBSET_1, CQC_LANG,
      WELLORD2, EULER_2, FUNCT_5, AFINSQ_1, FUNCT_4, GROUP_2, VECTSP_4,
      VECTSP_7, VECTSP_9, EQREL_1, GROUP_3, FRAENKEL, VECTSP_6, GROUP_5,
      UNIROOTS, XCMPLX_0, XREAL_1, BINARITH, XXREAL_0, ORDINAL1, NAT_D,
      STRUCT_0, PARTFUN1;
 schemes NAT_1, FUNCT_1, FUNCT_2, FINSEQ_1;

begin :: Preliminaries

theorem Th1:
for a being Element of NAT, q being Real st 1 < q & q |^ a = 1 holds a = 0
proof let a be Element of NAT, q be Real such that
A1: 1 < q and
A2: (q |^ a) = 1 and
A3: a <> 0;
        a < 1 + 1 by A1,A2,PREPOWER:21;
then A4: a <= 0 + 1 by NAT_1:13;
        0 < a by A3; then a = 1 by A4,NAT_1:8;
then (q #Z a) = q by PREPOWER:45;
 hence contradiction by A1,A2,PREPOWER:46;
end;

theorem Th2:
for a, k, r being Nat, x being Real
 st 1 < x & 0 < k holds x |^ (a*k + r) = (x |^ a)*(x |^ (a*(k-'1)+r))
proof let a,k,r be Nat, x be Real such that
A1: 1 < x and
A2: 0 < k;
    set xNak = x |^ (a*k + r);
        0+1 <= k by A2,NAT_1:13; then k = k-'1+1 by BINARITH:53;
    then xNak = (x #Z (a + (a*(k-'1)+r))) by PREPOWER:46;
    then xNak = (x #Z a)*(x #Z (a*(k-'1)+r)) by A1,PREPOWER:54;
    then xNak = (x |^ a)*(x #Z (a*(k-'1)+r)) by PREPOWER:46;
    hence thesis by PREPOWER:46;
end;

theorem Th3:
for q, a, b being Element of NAT
  st 0 < a & 1 < q & (q |^ a) -' 1 divides (q |^ b)-'1 holds a divides b
proof let q,a,b be Element of NAT such that
A1: 0 < a and
A2: 1 < q and
A3: (q |^ a)-'1 divides (q |^ b)-'1;
     set r = b mod a; set qNa = q |^ a; set qNr = q |^ r;
     defpred P[Nat] means qNa-'1 divides (q |^ (a*$1 + r))-'1;
A4:  b = a*(b div a) + r by A1,NAT_D:2;
then A5:  ex k being Nat st P[k] by A3;
     consider k being Nat such that
A6: P[k] and
A7: for n being Nat st P[n] holds k <= n from NAT_1:sch 5(A5);
        now per cases;
        suppose A8: k = 0;
        A9: now assume A10: 0 <> qNr-'1;
            then A11: 0 < qNr-'1;     r < a by A1,NAT_D:1;
            then consider m being Nat such that
            A12: a = r + m by NAT_1:10;
            A13: m <> 0 by A1,A12,NAT_D:1;
            A14: (q |^ (r + m)) = (q #Z (r + m)) by PREPOWER:46;
            A15: (q #Z (r + m)) = (q #Z r)*(q #Z m) by A2,PREPOWER:54;
            A16: (q #Z r) = (q |^ r) by PREPOWER:46;
            A17: (q #Z m) = (q |^ m) by PREPOWER:46;
            A18: (q #Z r) > 0 by A2,PREPOWER:49;
            A19:(q |^ m) >= 1 by A2,PREPOWER:19;
                m in NAT by ORDINAL1:def 13;
               then (q |^ m) <> 1 by A2,A13,Th1;
                then (q |^ m) > 1 by A19,REAL_1:def 5;
            then A20: qNr < qNa by A12,A14,A15,A16,A17,A18,REAL_2:144; then 0+
1 <= qNa by NAT_1:13;
                then qNa-'1 = qNa-1 by BINARITH:50;
            then A21: qNa-'1 = qNa+(-1);
                    0+1 <= qNr by A10,NAT_2:10; then qNr-'1 = qNr-1 by
BINARITH:50;
                then qNr-'1 = qNr+(-1);
                then qNr-'1 < qNa-'1 by A20,A21,XREAL_1:10;
                hence contradiction by A6,A8,A11,NAT_D:7;
            end;      0 < qNr by A2,PREPOWER:13; then 0+1<=qNr by NAT_1:13;
        then qNr-1+1 = 1 by A9,BINARITH:50; then r = 0 by A2,Th1;
        hence a divides b by A4,NAT_D:3;
        end;
        suppose A22: k <> 0;
       then A23: 0 < k;
       consider j being Nat such that
        A24: k = j + 1 by A22,NAT_1:6;
A25:     j in NAT by ORDINAL1:def 13;
       A26: k-1 = j by A24;      0+1<=k by A23,NAT_1:13;
       then A27: k-'1 = j by A26,BINARITH:50;
            set qNaj = (q |^ (a*j + r)); set qNak = (q |^ (a*k + r));
            set qNak1= (q |^ (a*(k-'1)+r));
         j < k by A24,XREAL_1:31;
        then A28: not qNa-'1 divides qNaj-'1 by A7,A25;
                (qNa-'1) divides -(qNa-'1) by INT_2:14;
            then A29: (qNa-'1) divides (qNak-'1)+(-(qNa-'1)) by A6,WSIERP_1:9
;
        A30: 0 < qNak by A2,PREPOWER:13;
        A31: 0 < qNa  by A2,PREPOWER:13;     0+1<=qNak by A30,NAT_1:13;
        then A32: (qNak-'1)=(qNak-1) by BINARITH:50;
              A33: 0+1<=qNa by A31,NAT_1:13;
                (qNak-1) - (qNa-1) = qNak-qNa;
            then (qNak-1) - (qNa-1) = qNa*qNak1-qNa*1 by A2,A23,Th2;
        then A34: (qNak-'1)-(qNa-'1) = qNa*(qNak1-1) by A32,A33,BINARITH:50;
                0 < qNak1 by A2,PREPOWER:13; then 0+1<= qNak1 by NAT_1:13;
        then A35: (qNak-'1)-(qNa-'1)= qNa*(qNak1-'1) by A34,BINARITH:50;
         0 < qNa by A2,PREPOWER:13; then 0+1 <= qNa by NAT_1:13;
        then qNa-'1+1 = qNa by BINARITH:53;
        then qNa-'1,qNa are_relative_prime by PEPIN:1;
        then (qNa-'1 qua Integer),qNa are_relative_prime by EULER_2:1;
        hence a divides b by A27,A28,A29,A35,INT_2:40;
    end;
    end;
    hence thesis;
end;

theorem Th4:
for n, q being Nat st 0 < q holds Card Funcs(n,q) = q |^ n
proof
  let n,q be Nat such that A1: 0 < q;
  reconsider q as Element of NAT by ORDINAL1:def 13;
    defpred P[Nat] means Card Funcs($1,q) = q|^$1;
A2: P[0] proof Funcs({},q) = {{}} by FUNCT_5:64;
    hence Card Funcs(0,q) = 1 by CARD_1:79 .= q #Z 0 by PREPOWER:44
    .= q |^ 0 by PREPOWER:46;
  end;
A3: for n being Nat st P[n] holds P[n+1]
    proof let n be Nat such that
A4:   P[n];
      reconsider n as Element of NAT by ORDINAL1:def 13;
      reconsider q' = q as non empty set by A1;
      defpred R[set, set] means
      ex x being Function of n+1,q st $1 = x & $2 = x | n;
A5:   for x being set st x in Funcs(n+1,q')
      ex y being set st y in Funcs(n,q') & R[x,y]
      proof let x be set such that A6: x in Funcs(n+1,q');
        consider f being Function such that
A7:     x = f and A8: dom f = n+1 & rng f c= q' by A6,FUNCT_2:def 2;
        reconsider f as Function of n+1,q' by A8,FUNCT_2:4;
         not n in n;
        then A9: n misses {n} by ZFMISC_1:56;
         (n+1) /\ n = (n \/ {n}) /\ n by AFINSQ_1:4;
        then (n+1) /\ n = (n /\ n) \/ ({n} /\ n) by XBOOLE_1:23;
        then (n+1) /\ n = n \/ {} by A9,XBOOLE_0:def 7;
        then A10: dom (f|n) = n by A8,FUNCT_1:68;
         rng (f|n) c= q';
        then (f|n) in Funcs(n,q') by A10,FUNCT_2:def 2;
        hence thesis by A7;
      end;
      consider G being Function of Funcs(n+1,q'), Funcs(n,q') such that
A11:  for x being set st x in Funcs(n+1,q') holds R[x,G.x]
      from FUNCT_2:sch 1(A5);
A12:  rng G = Funcs(n,q')  proof
       for x being set st x in Funcs(n,q')
      holds x in rng G
      proof let x be set such that A13: x in Funcs(n,q');
        consider y being set such that A14: y in q' by XBOOLE_0:def 1;
        reconsider g=x as Element of Funcs(n,q') by A13;
        set fx = g+* (n .--> y);
         for y being set st y in q holds g +* (n .--> y) in (G"{g})
        proof let y be set such that A15: y in q;
          consider f being Function such that
A16:      f = g+*(n.-->y);
A17:      dom g = n & dom (n.-->y) = {n} by CQC_LANG:5,FUNCT_2:def 1;
          then dom f = n \/ {n} by A16,FUNCT_4:def 1;
          then A18: dom f = n+1 by AFINSQ_1:4;
           rng (n.-->y) = {y} by CQC_LANG:5;
          then A19: rng f c= (rng g \/ {y}) by A16,FUNCT_4:18;
          consider gg being Function;
           {y} c= q by A15,ZFMISC_1:37;
          then (rng g \/ {y}) c= q by XBOOLE_1:8;
          then rng f c= q by A19,XBOOLE_1:1;
          then A20: f in Funcs(n+1,q) by A18,FUNCT_2:def 2;
          then reconsider f as Function of n+1,q by FUNCT_2:121;
           not n in n; then n misses {n} by ZFMISC_1:56;
          then A21: f|n = g by A16,A17,FUNCT_4:34;
           R[f,G.f] by A11,A20;
          then A22: G.f in {x} by A21,TARSKI:def 1;
           dom G = Funcs(n+1,q) by FUNCT_2:def 1;
          hence thesis by A16,A20,A22,FUNCT_1:def 13;
        end;
        then g +* (n .--> y) in (G"{g}) by A14;
        then consider b being set such that
A23:    b in rng G & [fx,b] in G & b in {g} by RELAT_1:166;
    b in rng G & fx in dom G & G.fx = b by A23,FUNCT_1:8;
        then R[fx,G.fx] by A11;
        then A24: fx|n = b by A23,FUNCT_1:8;
A25:    dom g = n & dom (n .--> y) = {n} by CQC_LANG:5,FUNCT_2:def 1;
         not n in n; then n misses {n} by ZFMISC_1:56;
        hence x in rng G by A23,A24,A25,FUNCT_4:34;
      end; then Funcs(n,q') c= rng G by TARSKI:def 3;
      hence thesis by XBOOLE_0:def 10;
    end;
A26: for x being Element of Funcs(n,q')
     holds G"{x} is finite & Card (G"{x}) = q
     proof let x be Element of Funcs(n,q');
       deffunc HH(set) = x +* (n .--> $1);
A27:   for y being set st y in q holds HH(y) in (G"{x})
       proof let y be set such that A28: y in q;
         consider f being Function such that
A29:     f = x+*(n.-->y);
A30:     dom x = n & dom (n.-->y) = {n} by CQC_LANG:5,FUNCT_2:def 1;
         then dom f = n \/ {n} by A29,FUNCT_4:def 1;
         then A31: dom f = n+1 by AFINSQ_1:4;
          rng (n.-->y) = {y} by CQC_LANG:5;
         then A32: rng f c= (rng x \/ {y}) by A29,FUNCT_4:18;
         consider gg being Function;
          {y} c= q by A28,ZFMISC_1:37;
         then (rng x \/ {y}) c= q by XBOOLE_1:8;
         then rng f c= q by A32,XBOOLE_1:1;
         then A33: f in Funcs(n+1,q) by A31,FUNCT_2:def 2;
         then reconsider f as Function of n+1,q by FUNCT_2:121;
          not n in n; then n misses {n} by ZFMISC_1:56;
         then A34: f|n = x by A29,A30,FUNCT_4:34;
          R[f,G.f] by A11,A33;
         then A35: G.f in {x} by A34,TARSKI:def 1;
          dom G = Funcs(n+1,q) by FUNCT_2:def 1;
         hence thesis by A29,A33,A35,FUNCT_1:def 13;
       end;
       consider H being Function of q, (G"{x}) such that
A36:   for y being set st y in q holds H.y = HH(y) from FUNCT_2:sch 2(A27);
A37:   for c being set st c in G"{x}  ex y being set st y in q & H.y = c
       proof let c be set; assume
A38:     c in G"{x};
         then consider f being Function of n+1,q' such that
A39:     c = f and
A40:     G.c = f|n by A11;
         take y = f.n;
          c in dom G & G.c in {x} by A38,FUNCT_1:def 13;
         then A41:  G.c = x by TARSKI:def 1;
          n+1 = n \/ {n} by AFINSQ_1:4;
         then dom f = n \/ {n} by FUNCT_2:def 1;
         then A42:  f = f|n +* (n .--> (f.n)) by FUNCT_7:15;
          n in n+1 by AFINSQ_1:1;
         hence y in q by FUNCT_2:7;
         hence H.y = c by A36,A39,A40,A41,A42;
       end;
        {x}<>{} & {x} c= rng G by A12,ZFMISC_1:37;
       then A43: G"{x} <> {} by RELAT_1:174;
       then A44: rng H = G"{x} by A37,FUNCT_2:16;
A45:   dom H = q by A43,FUNCT_2:def 1;
        for x1,x2 being set st x1 in dom H & x2 in dom H & H.x1 = H.x2
       holds x1 = x2
       proof let x1,x2 be set such that
A46:     x1 in dom H and A47: x2 in dom H and A48: H.x1 = H.x2;
A49:     H.x2 = x +* (n .--> x2) by A36,A47;
A50:     dom (n .--> x1) = {n} & dom (n .--> x2) = {n} by CQC_LANG:5;
         set fx1 = x +* (n .--> x1);
         set fx2 = x +* (n .--> x2);
A51:     fx1 = fx2 by A36,A46,A48,A49;
A52:     (n .--> x1).n = x1 & (n .--> x2).n = x2 by CQC_LANG:6;
A53:     n in {n} by TARSKI:def 1;
         then fx1.n = x1 by A50,A52,FUNCT_4:14;
         hence thesis by A50,A51,A52,A53,FUNCT_4:14;
       end;
       then H is one-to-one by FUNCT_1:def 8;
       then q, H.:q are_equipotent by A45,CARD_1:60;
       then q, rng H are_equipotent by A45,RELAT_1:146;
       then Card (G"{x}) = Card q by A44,CARD_1:21;
       hence thesis by CARD_1:66,CARD_4:1;
     end;
    A54: for x,y being set st x is Element of Funcs(n,q') &
        y is Element of Funcs(n,q') & x<>y holds (G"{x}) misses (G"{y})
        proof let x,y be set such that x is Element of Funcs(n,q') and
                y is Element of Funcs(n,q') and A55: x <> y;
                now assume not (G"{x}) misses (G"{y});
                then not (G"{x}) /\ (G"{y}) = {} by XBOOLE_0:def 7;
                then consider f being set such that
            A56: f in (G"{x} /\ G"{y}) by XBOOLE_0:def 1;
                  f in G"{x} by A56,XBOOLE_0:def 3;
            then A57: f in dom G & G.f in {x} by FUNCT_1:def 13;
            reconsider f as Function of n+1,q
            by A56,FUNCT_2:121;
             f in Funcs(n+1,q) by A1,FUNCT_2:11; then A58: R[f, G.f] by A11;
            then A59: f|n = x by A57,TARSKI:def 1;
                    f in G"{y} by A56,XBOOLE_0:def 3;
                then G.f in {y} by FUNCT_1:def 13;
                hence contradiction by A55,A58,A59,TARSKI:def 1;
            end;
            hence thesis;
        end;
        reconsider X = {G"{x} where x is Element of Funcs(n,q'):
                        not contradiction} as set;
    A60: union X = Funcs(n+1,q) proof
        A61: for y being set holds y in union X implies y in Funcs(n+1,q)
            proof let x be set such that A62: x in union X;
                consider Y being set such that
            A63: x in Y and A64: Y in X by A62,TARSKI:def 4;
                consider z being Element of Funcs(n,q) such that
            A65: G"{z} = Y by A64;
                thus thesis by A63,A65;
            end;
                for y being set holds y in Funcs(n+1,q) implies y in union X
            proof let x be set such that A66: x in Funcs(n+1,q);
                consider f being Function of n+1,q such that
            A67: x = f & G.x = f|n by A11,A66;
            A68: f in Funcs(n+1,q) by A1,FUNCT_2:11;
                 then f in dom G & G.f in {f|n} by A67,FUNCT_2:def 1
,TARSKI:def 1;
            then A69: f in G"{f|n} by FUNCT_1:def 13;
                consider y being set such that
            A70: y in Funcs(n,q') & R[f,y] by A5,A68;
                G"{f|n} in X by A70;
            hence thesis by A67,A69,TARSKI:def 4;
            end;hence thesis by A61,TARSKI:2;
        end;            Funcs(n+1,q) is finite by FRAENKEL:16;
        then reconsider X as finite set by A60,FINSET_1:25;
    A71: card X = q|^n proof
            deffunc FF(set) = G"{$1};
        A72: for x being set st x in Funcs(n,q) holds FF(x) in X;
            consider F being Function of Funcs(n,q),X such that
        A73: for x being set st x in Funcs(n,q) holds F.x = FF(x)
                from FUNCT_2:sch 2(A72);
        A74: for c being set st c in X ex x being set st
            x in Funcs(n,q) & c = F.x
            proof let c be set such that A75: c in X;
                consider y being Element of Funcs(n,q) such that
            A76: c = G"{y} by A75;     F.y = c by A73,A76;
                hence thesis;
            end;
            consider gg being Element of Funcs(n, q');
            A77: G"{gg} in X;
        then A78: rng F = X by A74,FUNCT_2:16;
        A79: dom F = Funcs(n,q) by A77,FUNCT_2:def 1;
                for x1,x2 being set st x1 in dom F & x2 in dom F & F.x1 = F.
x2
            holds x1 = x2
            proof let x1,x2 be set such that
            A80: x1 in dom F and A81: x2 in dom F and A82: F.x1 = F.x2;
               F.x1 = G"{x1} by A73,A80;
            then A83: G"{x1} = G"{x2} by A73,A81,A82;
                    now assume x1<>x2;
                    then (G"{x1}) misses (G"{x2}) by A54,A80,A81;
                then G"{x1} /\ G"{x1} = {} by A83,XBOOLE_0:def 7;
                    hence contradiction by A26,A80,CARD_1:78;
                end;
                hence thesis;
            end;
            then F is one-to-one by FUNCT_1:def 8;
            then Funcs(n,q), F.:(Funcs(n,q)) are_equipotent by A79,CARD_1:60;
            then Funcs(n,q), rng F are_equipotent by A79,RELAT_1:146;
            hence card X = q|^n by A4,A78,CARD_1:21;
        end;
         (for Y being set st Y in X ex B being finite set st B = Y & card
B=q &
            for Z being set st Z in X & Y <> Z
            holds Y,Z are_equipotent & Y misses Z)
        proof let Y be set such that A84: Y in X;
            consider x being Element of Funcs(n,q') such that
        A85: Y=G"{x} by A84;
        A86: Y is finite & Card Y = q by A26,A85;
            for Z being set st Z in X & Y <> Z
            holds Y,Z are_equipotent & Y misses Z
            proof let Z be set such that A87: Z in X and A88: Y <> Z;
                consider y being Element of Funcs(n,q') such that
            A89: Z=G"{y} by A87;
            A90: Z is finite & Card Z = q by A26,A89;
                    now per cases;
                    suppose x=y; hence Y misses Z by A85,A88,A89;
                    end;
                    suppose x<>y;hence Y misses Z by A54,A85,A89;
                end;
                end;hence thesis by A86,A90,CARD_1:21;
            end;hence thesis by A86;
        end;
        then ex C being finite set st
        C = union X & card C = q * card X by GROUP_2:186;
        hence thesis by A60,A71,NEWTON:11;
    end;
        for n being Nat holds P[n] from NAT_1:sch 2(A2,A3);
    hence thesis;
end;

theorem  Th5: :: SumDivision:
for f being FinSequence of NAT, i being Element of NAT
 st for j being Element of NAT st j in dom f
 holds i divides f/.j holds i divides Sum f
proof
  defpred P[Element of NAT] means for f being FinSequence of NAT st len f = $1
     for i being Element of NAT st for j being Element of NAT st j in dom f
     holds i divides f/.j
      holds i divides Sum f;
A1: P[0] proof let f be FinSequence of NAT such that A2: len f = 0;
        let i be Element of NAT such that
            for j being Element of NAT st j in dom f holds i divides f/.j;
            Sum f = 0 by A2,FINSEQ_1:32,RVSUM_1:102;
      hence thesis by NAT_D:6;
    end;
A3: for k being Element of NAT st P[k] holds P[k+1]
    proof let k be Element of NAT such that
    A4: P[k];
        let f be FinSequence of NAT such that A5: len f = k+1;
        let i be Element of NAT such that
    A6: for j being Element of NAT st j in dom f holds i divides f/.j;
            f <> {} by A5,FINSEQ_1:25;
        then consider q being FinSequence, x being set such that
    A7: f=q^<*x*> by FINSEQ_1:63;
        reconsider f1=q as FinSequence of NAT by A7,FINSEQ_1:50;
        reconsider f2=<*x*> as FinSequence of NAT by A7,FINSEQ_1:50;
            k + 1 = len f1 + len f2 by A5,A7,FINSEQ_1:35;
        then A8: k + 1 = len f1 + 1 by FINSEQ_1:56;
            for j being Element of NAT st j in dom f1 holds i divides f1/.j
        proof let j be Element of NAT such that A9: j in dom f1;
            A10: dom f1 c= dom f by A7,FINSEQ_1:39;
             then f/.j = f.j by A9,PARTFUN1:def 8 .= f1.j by A7,A9,
FINSEQ_1:def 7
                .= f1/.j by A9,PARTFUN1:def 8;
          hence thesis by A6,A9,A10;
        end;
    then A11: i divides Sum f1 by A4,A8;
            rng f2 c= NAT by FINSEQ_1:def 4; then {x} c= NAT by FINSEQ_1:55;
        then reconsider m=x as Element of NAT by ZFMISC_1:37;
    A12: f.(len f) = m by A5,A7,A8,FINSEQ_1:59;
            len f in Seg len f by A5,FINSEQ_1:5;
    then A13: len f in dom f by FINSEQ_1:def 3;
    then f/.(len f) = f.(len f) by PARTFUN1:def 8;
    then A14: i divides m by A6,A12,A13;
         Sum f = Sum f1 + m by A7,RVSUM_1:104;
      hence thesis by A11,A14,NAT_D:8;
    end;
A15:  for k being Element of NAT holds P[k] from NAT_1:sch 1(A1,A3);
    let f be FinSequence of NAT, i be Element of NAT such that
A16: for j being Element of NAT st j in dom f holds i divides f/.j;
        len f = len f;
  hence thesis by A15,A16;
end;

theorem  Th6: :: Partition1:
for X being finite set, Y being a_partition of X,
    f being FinSequence of Y st f is one-to-one & rng f = Y
for c being FinSequence of NAT st len c = len f &
      for i being Element of NAT st i in dom c holds c.i = Card (f.i)
holds card X = Sum c
proof
  defpred P[Element of NAT] means
    for X being finite set, z being a_partition of X st card z = $1
    for f being FinSequence of z st f is one-to-one & rng f = z
    for c being FinSequence of NAT st len c = len f &
        for i being Element of NAT st i in dom c holds c.i = Card (f.i)
    holds Card X = Sum c;
A1: P[0] proof let X be finite set;
        let z be a_partition of X such that A2: card z = 0;
        let f be FinSequence of z such that A3: f is one-to-one & rng f = z;
        let c be FinSequence of NAT such that A4: len c = len f &
             for i being Element of NAT st i in dom c holds c.i = Card (f.i);
    A5: z = {} by A2,GRAPH_5:5;
        union z = {} by A2,GRAPH_5:5,ZFMISC_1:2;
    then A6: X = {} by EQREL_1:def 6;     f = {} by A3,A5,FINSEQ_1:27;
        hence thesis by A4,A6,CARD_1:78,FINSEQ_1:25,RVSUM_1:102;
    end;
A7: for k being Element of NAT st P[k] holds P[k+1]
    proof let k be Element of NAT; assume
    A8: P[k];
        let X be finite set;
        let Z be a_partition of X such that A9: card Z = k + 1;
        let f be FinSequence of Z such that
    A10: f is one-to-one and A11: rng f = Z;
        let c be FinSequence of NAT such that A12: len c = len f and
    A13: for i being Element of NAT st i in dom c holds c.i = Card (f.i);
    A14: len f = k + 1 by A9,A10,A11,FINSEQ_4:77;
    A15: Z <> {} by A9,GRAPH_5:5;
        reconsider Z as non empty set by A9,GRAPH_5:5;
        reconsider f as FinSequence of Z;
    reconsider X as non empty finite set by A15,EQREL_1:41;
        reconsider fk = f|(Seg k) as FinSequence of Z by FINSEQ_1:23;
    A17: len fk = k by A14,FINSEQ_3:59;
    A18: f = fk ^ <*f.(k+1)*> by A14,FINSEQ_3:61;
        reconsider Zk = rng fk as finite set;
         union Zk c= union Z by ZFMISC_1:95;
    then A19: union Zk c= X by EQREL_1:def 6;
        reconsider fk as FinSequence of Zk by FINSEQ_1:def 4;
    A20: fk is one-to-one by A10,FUNCT_1:84;
    then A21: card Zk = k by A17,FINSEQ_4:77;
        reconsider Xk = union Zk as finite set by A19,FINSET_1:13;
        A22: now per cases;
            suppose A23: Zk = {}; consider B being a_partition of Xk;
                    B = {} by A23,EQREL_1:41,ZFMISC_1:2;
            hence Zk is a_partition of Xk by A23;
            end;
            suppose Zk <> {};
                then consider x being set such that A24: x in Zk by
XBOOLE_0:def 1;
                    x in Z by A24; then x <> {} by EQREL_1:def 6;
            A26: for a being Subset of Xk st a in Zk
                holds a<>{} & for b being Subset of Xk st b in Zk
                   holds a=b or (a misses b)
                proof let a be Subset of Xk such that A27: a in Zk;
                    A28: a in Z by A27;
                    for b being Subset of Xk st b in Zk holds a=b or
                    a misses b
                    proof let b be Subset of Xk such that A29: b in Zk;
                            a in Z & b in Z by A27,A29;
                        hence thesis by EQREL_1:def 6;
                    end; hence thesis by A28,EQREL_1:def 6;
                end;
                    Zk c= bool union Zk by ZFMISC_1:100;
            hence Zk is a_partition of Xk by A26,EQREL_1:def 6;
        end;
        end;
        reconsider ck = c|(Seg k) as FinSequence of NAT by FINSEQ_1:23;
    A30: len ck = len fk by A12,A14,A17,FINSEQ_3:59;
        for i being Element of NAT st i in dom ck holds ck.i = Card (fk.i)
        proof let i be Element of NAT; assume A31: i in dom ck;
            A32: k <= k+1 by NAT_1:11;
                then dom ck = (Seg k) by A12,A14,FINSEQ_1:21;
            then A33: dom ck = dom fk by A14,A32,FINSEQ_1:21;
            A34: dom ck c= dom c by RELAT_1:89;
                    ck.i = c.i by A31,FUNCT_1:70;
            then ck.i = Card (f.i) by A13,A31,A34;
            hence ck.i = Card (fk.i) by A31,A33,FUNCT_1:70;
        end;
    then A35: card Xk = Sum ck by A8,A20,A21,A22,A30;
        reconsider fk1 = f.(k+1) as set;
            for x being set st x in Zk holds x misses fk1
        proof let x being set such that A36: x in Zk;
        A37: x in Z by A36;
        A38: k+1 in Seg(k+1) by FINSEQ_1:6;
                dom f = Seg(len f) by FINSEQ_1:def 3;
        then A39: fk1 in rng f by A14,A38,FUNCT_1:12;
        then A40: fk1 is Subset of X by A11;
            consider i being Nat such that
        A41: i in dom fk & fk.i = x by A36,FINSEQ_2:11;
                now assume A42: fk.i = fk1;
            A43: dom fk = Seg k by A17,FINSEQ_1:def 3;
            A44: i in Seg k by A17,A41,FINSEQ_1:def 3;
                    i <= k by A41,A43,FINSEQ_1:3;
            then A45: i < k+1 by NAT_1:13;
            A46: dom f = Seg (k + 1) by A14,FINSEQ_1:def 3;
                    k <= k + 1 by NAT_1:12;
            then A47: Seg k c= Seg (k+1) by FINSEQ_1:7;
            A48: (k+1) in dom f by A46,FINSEQ_1:6;
                    fk.i = f.i by A41,FUNCT_1:70;
                hence contradiction by A10,A42,A44,A45,A46,A47,A48,
FUNCT_1:def 8;
            end; hence thesis by A37,A39,A40,A41,EQREL_1:def 6;
        end; then A49: fk1 misses Xk by ZFMISC_1:98;
    A50: union Z = X by EQREL_1:def 6;
    A51: k+1 in Seg(k+1) by FINSEQ_1:6;
            dom f = Seg(len f) by FINSEQ_1:def 3;
        then fk1 in rng f by A14,A51,FUNCT_1:12;
        then reconsider fk1 as finite set by A50,FINSET_1:25;
    A52: Z = rng fk \/ rng <*fk1*> by A11,A18,FINSEQ_1:44
         .= Zk \/ {fk1} by FINSEQ_1:56;
    A53: X = union Z by EQREL_1:def 6
       .= union Zk \/ union {fk1} by A52,ZFMISC_1:96.= Xk \/ fk1 by ZFMISC_1:31
;
            k+1 in Seg(k+1) by FINSEQ_1:6;
    then A54: k+1 in dom c by A12,A14,FINSEQ_1:def 3;  rng ck c= REAL;
        then reconsider ckc=ck as FinSequence of REAL by FINSEQ_1:def 4;
            card X = Sum ck + card fk1 by A35,A49,A53,CARD_2:53
        .= Sum ck + c.(k+1) by A13,A54
        .= Sum (ckc^<*(c.(k+1)) qua Real*>) by RVSUM_1:104 .= Sum c by A12,A14,
FINSEQ_3:61;
        hence thesis;
    end;
A55: for k being Element of NAT holds P[k] from NAT_1:sch 1(A1, A7);
 let X be finite set, Y be a_partition of X;
        card Y = card Y;
  hence thesis by A55;
end;

begin :: Class formula for groups

registration
  cluster finite Group;
  existence proof consider G being Group;     (1).G is finite by GROUP_2:80;
   hence thesis;
  end;
end;

registration
  let G be finite Group;
  cluster center G -> finite;
  correctness by GROUP_2:48;
end;

definition let G be Group, a be Element of G;
  func Centralizer a -> strict Subgroup of G means :Def1:
     the carrier of it = { b where b is Element of G : a*b = b*a };
existence proof set Car = { b where b is Element of G : a*b = b*a};
       a*1_G = a & 1_G*a = a by GROUP_1:def 5; then A1: 1_G in Car;
       for x being set st x in Car holds x in the carrier of G
   proof let x be set such that A2: x in Car;
       consider g being Element of G such that A3: x = g & a*g = g*a by A2;
     thus thesis by A3;
   end;
then A4: Car is Subset of G by TARSKI:def 3;
A5: for g1,g2 being Element of G st g1 in Car & g2 in Car
   holds g1 * g2 in Car
   proof let g1,g2 be Element of G such that
   A6: g1 in Car and A7: g2 in Car;
       consider z1 being Element of G such that
   A8: z1=g1 & z1*a = a*z1 by A6;
       consider z2 being Element of G such that
   A9: z2=g2 & z2*a = a*z2 by A7;
           a*(g1*g2) = (g1*a)*g2 by A8,GROUP_1:def 4
       .= g1*(g2*a) by A9,GROUP_1:def 4 .= g1*g2*a by GROUP_1:def 4;
     hence thesis;
   end;
   for g being Element of G st g in Car holds g" in Car
   proof let g be Element of G such that
   A10: g in Car;
   consider z1 being Element of G such that
   A11: z1=g & z1*a = a*z1 by A10;
         g"*(g*a) = a by GROUP_3:1;
     then g"*((a*g)*g") = a*g" by A11,GROUP_1:def 4; then g"*a = a*
g" by GROUP_3:1;
     hence thesis;
   end;
  hence thesis by A1,A4,A5,GROUP_2:61;
end;
uniqueness proof let H1,H2 be strict Subgroup of G such that
A12: the carrier of H1 = { b where b is Element of G: a*b = b*a} and
A13: the carrier of H2 = { b where b is Element of G: a*b = b*a};
       for g being Element of G holds g in H1 iff g in H2
   proof let g be Element of G;
       hereby assume g in H1;
       then g in the carrier of H1 by STRUCT_0:def 5;
           then consider b being Element of G such that
       A14: b = g and A15: a*b = b*a by A12;     g in the carrier of H2 by A13
,A14,A15;
         hence g in H2 by STRUCT_0:def 5;
       end;
           now assume g in H2;
       then g in the carrier of H2 by STRUCT_0:def 5;
           then consider b being Element of G such that
       A16: b = g and A17: a*b = b*a by A13;     g in the carrier of H1 by A12
,A16,A17;
         hence g in H1 by STRUCT_0:def 5;
       end;
     hence thesis;
   end;
  hence thesis by GROUP_2:def 6;
end;
end;

registration let G be finite Group;
  let a be Element of G;
  cluster Centralizer a -> finite;
  correctness by GROUP_2:48;
end;

theorem Th7:
for G being Group, a being Element of G, x being set
 st x in Centralizer a holds x in G
proof let G be Group, a be Element of G, x be set; assume
A1: x in Centralizer a;
         the carrier of Centralizer a =
        { b where b is Element of G : a*b = b*a } by Def1;
     then x in { b where b is Element of G : a*b = b*a } by A1,STRUCT_0:def 5;
     then ex b being Element of G st b = x & a*b = b*a;
 hence x in G by STRUCT_0:def 5;
end;

theorem Th8:
for G being Group, a, x being Element of G
 holds a*x = x*a iff x is Element of Centralizer a
proof let G be Group, a, x be Element of G;
A1: the carrier of Centralizer a =
        { b where b is Element of G : a*b = b*a } by Def1;
   set x' = x;
  hereby assume a*x = x*a;
    then x in the carrier of Centralizer a by A1;
   hence x is Element of Centralizer a;
  end;
  assume x is Element of Centralizer a; then x in the carrier of
Centralizer
a;
    then ex b being Element of G st b = x & a*b = b*a by A1;
  hence a*x = x*a;
end;

registration
  let G be Group, a be Element of G;
  cluster con_class a -> non empty;
  correctness by GROUP_3:98;
end;

definition let G be Group, a be Element of G;
  func a-con_map -> Function of the carrier of G, con_class a means :Def2:
   for x being Element of G holds it.x = a |^ x;
   existence proof
      defpred P[Element of G, set] means  $2 = a |^ $1;
   A1: for x being Element of G
       ex y being Element of con_class a st P[x,y]
       proof let x be Element of G;
               a |^ x in con_class a by GROUP_3:97;
         hence thesis;
       end;
          ex f being Function of the carrier of G, con_class a st
      for x being Element of G holds P[x,f.x] from FUNCT_2:sch 3(A1);
    hence thesis;
   end;
   uniqueness
   proof let it1, it2 be Function of the carrier of G, con_class a such that
   A2: for x being Element of G holds it1.x = a |^ x and
   A3: for x being Element of G holds it2.x = a |^ x;
   A4: dom it1 = the carrier of G & dom it2 = the carrier of G by FUNCT_2:def 1
;
       for x being set st x in dom it1 holds it1.x = it2.x
      proof let x be set such that A5: x in dom it1;
          reconsider y=x as Element of G by A5;
              it1.y = a |^ y & it2.y = a |^ y by A2,A3;
        hence thesis;
      end;
    hence thesis by A4,FUNCT_1:9;
   end;
end;

theorem  Th9: :: Br1:
for G being finite Group, a being Element of G, x being Element of con_class a
 holds card (a-con_map"{x}) = ord Centralizer a
proof let G be finite Group, a be Element of G, x be Element of con_class a;
    consider b being Element of G such that
A1: b = x and A2: a,b are_conjugated by GROUP_3:95;
    consider d being Element of G such that
A3: x = a |^ d by A1,A2,GROUP_3:88;
    reconsider Cad = (Centralizer a)*d as Subset of G;
    consider B,C being finite set such that B = d*(Centralizer a) and
A4: C = Cad and ord Centralizer a = card B and
A5: ord Centralizer a = card C by GROUP_2:156;
        for g being set holds g in a-con_map"{x} iff g in Cad
    proof let g be set;
    A6: now assume A7: g in a-con_map"{x};
            then g in dom (a-con_map) & a-con_map.g in {x} by FUNCT_1:def 13;
        then A8: a-con_map.g = x by TARSKI:def 1;
            reconsider y=g as Element of G by A7;
               A9: a-con_map.g = a |^ y by Def2;
        A10: y*((d"*a)*d) = y*(d"*a)*d by GROUP_1:def 4
                        .= y*d"*a*d by GROUP_1:def 4;
           y*((y"*a)*y) = y*(y"*a)*y by GROUP_1:def 4 .= a*y by GROUP_3:1;
             then y*d"*a*d*d" = a*(y*d") by A3,A8,A9,A10,GROUP_1:def 4;
            then (y*d")*a = a*(y*d") by GROUP_3:1;
            then (y*d") is Element of Centralizer a by Th8;
            then consider z being Element of G such that
        A11: z in the carrier of Centralizer a and A12: y*d" = z;
        A13: z in Centralizer a by A11,STRUCT_0:def 5;
            reconsider z as Element of G;
                y = z*d by A12,GROUP_3:1;
            hence g in Cad by A13,GROUP_2:126;
        end;
          now assume g in Cad;
        then consider z being Element of G such that
    A14: g = z*d and A15: z in Centralizer a by GROUP_2:126;
        reconsider y=g as Element of G by A14;    y*d" = z by A14,GROUP_3:1;
         then y*d" in carr(Centralizer a) by A15,STRUCT_0:def 5;
         then (y*d")*a = a*(y*d") by Th8;
        then (y*d")*a*d = a*((y*d")*d) by GROUP_1:def 4;
        then (y*d")*a*d = a*y by GROUP_3:1;
        then (y*d")*(a*d) = a*y by GROUP_1:def 4;
        then y"*((y*d")*(a*d)) = y"*a*y by GROUP_1:def 4;
        then (y"*(y*d"))*(a*d) = y"*a*y by GROUP_1:def 4;
        then d"*(a*d) = y"*a*y by GROUP_3:1;
        then x = a|^y by A3,GROUP_1:def 4; then a-con_map.y = x by Def2;
    then A16: a-con_map.y in {x} by TARSKI:def 1;
            dom (a-con_map) = the carrier of G by FUNCT_2:def 1;
        hence g in a-con_map"{x} by A16,FUNCT_1:def 13;
        end;
      hence thesis by A6;
    end;
  hence thesis by A4,A5,TARSKI:2;
end;

theorem  Th10: :: Br2:
for G being Group, a being Element of G, x, y being Element of con_class a
 st x<>y holds (a-con_map"{x}) misses (a-con_map"{y})
proof let G be Group, a be Element of G,
    x,y be Element of con_class a such that A1: x <> y;
        now assume ex g being set st g in (a-con_map"{x}) /\ (a-con_map"{y
});
        then consider g being set such that
    A2: g in (a-con_map"{x}) /\ (a-con_map"{y});
    A3: g in a-con_map"{x} & g in a-con_map"{y} by A2,XBOOLE_0:def 3;
        then a-con_map.g in {x} by FUNCT_1:def 13;
    then A4: a-con_map.g = x by TARSKI:def 1;
           a-con_map.g in {y} by A3,FUNCT_1:def 13;
      hence contradiction by A1,A4,TARSKI:def 1;
    end; then (a-con_map"{x}) /\ (a-con_map"{y}) = {} by XBOOLE_0:def 1;
    hence thesis by XBOOLE_0:def 7;
end;

theorem  Th11: :: Br3:
for G being Group, a being Element of G
 holds { a-con_map"{x} where x is Element of con_class a : not contradiction }
         is a_partition of the carrier of G
proof let G be Group, a be Element of G; reconsider X =
    {a-con_map"{x} where x is Element of con_class a:not contradiction} as set;
A1: union X = the carrier of G proof
    A2: for y being set holds y in union X implies y in the carrier of G
        proof let x be set such that A3: x in union X;
            consider Y being set such that
        A4: x in Y and A5: Y in X by A3,TARSKI:def 4;
            consider z being Element of con_class a such that
        A6: a-con_map"{z} = Y by A5;
            thus thesis by A4,A6;
        end;
            for y being set holds y in the carrier of G implies y in union X
        proof let x be set such that A7: x in the carrier of G;
            reconsider y=x as Element of G by A7;
                a |^ y in con_class a by GROUP_3:97;
            then consider z being Element of G such that
        A8: z in con_class a and A9: z = a|^y;
                a-con_map.y = z by A9,Def2;
        then A10: a-con_map.y in {z} by TARSKI:def 1;
                dom(a-con_map) = the carrier of G by FUNCT_2:def 1;
        then A11: y in a-con_map"{z} by A10,FUNCT_1:def 13;
                a-con_map"{z} in X by A8;
            hence thesis by A11,TARSKI:def 4;
        end;hence thesis by A2,TARSKI:2;
    end;
A12: for A being Subset of G st A in X holds A<>{} &
    for B being Subset of G st B in X holds A=B or A misses B
    proof let A be Subset of G such that A13: A in X;
        consider x being Element of con_class a such that
    A14: A = a-con_map"{x} by A13;
            a,x are_conjugated by GROUP_3:96;
        then consider g being Element of G such that
    A15: x = a |^ g by GROUP_3:88;
            a-con_map.g = x by A15,Def2;
    then A16: a-con_map.g in {x} by TARSKI:def 1;
         A17: dom (a-con_map) = the carrier of G by FUNCT_2:def 1;
        for B being Subset of G st B in X
        holds A=B or A misses B
        proof let B be Subset of G such that A18: B in X;
            consider y being Element of con_class a such that
        A19: B = a-con_map"{y} by A18;
          thus thesis by A14,A19,Th10;
        end; hence thesis by A14,A16,A17,FUNCT_1:def 13;
    end;
     X c= bool union X by ZFMISC_1:100;
    hence thesis by A1,A12,EQREL_1:def 6;
end;

theorem Th12:
for G being finite Group, a being Element of G
  holds Card { a-con_map"{x} where x is Element of con_class a :
                               not contradiction} = card con_class a
proof let G be finite Group, a be Element of G;
    reconsider X = { a-con_map"{x} where x is Element of con_class a:
        not contradiction} as a_partition of the carrier of G by Th11;
    deffunc FF(set) = a-con_map"{$1};
A1: for x being set st x in con_class a holds FF(x) in X;
    consider F being Function of con_class a, X such that
A2: for x being set st x in con_class a holds F.x = FF(x) from FUNCT_2:sch 2
(A1);
    consider y being Element of con_class a;
        for c being set st c in X ex x being set st x in con_class a & c = F.x
    proof let c be set such that A3: c in X;
        reconsider c as Subset of G by A3;
        consider y being Element of con_class a such that
    A4: c = a-con_map"{y} by A3;      F.y = c by A2,A4;
        hence thesis;
    end;
then A5: rng F = X by FUNCT_2:16;
A6: dom F = con_class a by FUNCT_2:def 1;
        for x1,x2 being set st x1 in dom F & x2 in dom F & F.x1=F.x2 holds x1
= x2
    proof let x1,x2 be set such that
    A7: x1 in dom F and A8: x2 in dom F and A9: F.x1 = F.x2;
        reconsider y1=x1 as Element of con_class a by A7;
        reconsider y2=x2 as Element of con_class a by A8;
         A10: a-con_map"{y1} = F.y1 & a-con_map"{y2} = F.y2 by A2;
            now assume y1<>y2;
            then (a-con_map"{y1}) misses (a-con_map"{y2}) by Th10;
        then A11: ((a-con_map"{y1}) /\ (a-con_map"{y2})) = {} by XBOOLE_0:def 7
;
            consider d being Element of G such that
        A12: d = y1 & a,d are_conjugated by GROUP_3:95;
            consider g being Element of G such that
        A13: d = a |^ g by A12,GROUP_3:def 7;
                a-con_map.g = y1 by A12,A13,Def2;
        then A14: a-con_map.g in {y1} by TARSKI:def 1;
               dom (a-con_map) = the carrier of G by FUNCT_2:def 1;
            hence contradiction by A9,A10,A11,A14,FUNCT_1:def 13;
        end; hence thesis;
    end; then F is one-to-one by FUNCT_1:def 8;
    then con_class a, F.:(con_class a) are_equipotent by A6,CARD_1:60;
    then con_class a, rng F are_equipotent by A6,RELAT_1:146;
  hence thesis by A5,CARD_1:21;
end;

theorem Th13:
for G being finite Group, a being Element of G
  holds ord G = card con_class a * ord Centralizer a
proof let G be finite Group, a be Element of G;
  reconsider
   X = {a-con_map"{x} where x is Element of con_class a: not contradiction}
          as a_partition of the carrier of G by Th11;
A1: union X = the carrier of G by EQREL_1:def 6;
A2: for A being set st A in X holds A is finite & Card A = ord Centralizer a &
      for B being set st B in X & A<>B holds A misses B
    proof let A be set such that A3: A in X;
        reconsider A as Subset of G by A3;
        consider x being Element of con_class a such that
    A4: A = a-con_map"{x} by A3;
     thus thesis by A3,A4,Th9,EQREL_1:def 6;
    end;
    reconsider k = ord Centralizer a as Element of NAT;
    for Y being set st Y in X ex B being finite set st B = Y & card B = k &
      for Z being set st Z in X & Y <> Z holds Y,Z are_equipotent & Y misses Z
    proof let Y be set such that A5: Y in X;
        reconsider Y as finite set by A2,A5;
        A6: Card Y = ord Centralizer a by A2,A5;
            for Z being set st Z in X & Y<>Z holds Y,Z are_equipotent & Y
misses Z
        proof let Z be set such that A7: Z in X and A8: Y<>Z;
        A9: Card Y = ord Centralizer a by A2,A5;
                Card Z = ord Centralizer a by A2,A7;
            hence thesis by A2,A5,A7,A8,A9,CARD_1:21;
        end;
      hence thesis by A6;
    end; then consider C being finite set such that
A10: C = union X and A11: card C = card X * k by GROUP_2:186;
        ord G =  card C by A1,A10,GROUP_1:def 15 .= card con_class a * ord
Centralizer a by A11,Th12;
    hence thesis;
end;

definition let G be Group;
  func conjugate_Classes G -> a_partition of the carrier of G equals
   {S where S is Subset of G :
                 ex a being Element of G st S = con_class a };
  correctness proof set cG = the carrier of G;
  set C = {S where S is Subset of cG:
   ex a being Element of G st S=con_class a };
      A1: C c= bool cG proof let x be set; assume x in C;
     then consider S being Subset of cG such that
   A2: S=x and ex a being Element of cG st S = con_class a;
     thus thesis by A2;
   end;
       now let x be set;
     hereby assume x in union C; then consider S being set such that
     A3: x in S and
     A4: S in C by TARSKI:def 4;
         consider S' being Subset of cG such that
     A5: S' = S and ex a being Element of G st S'=con_class a
              by A4;
       thus x in cG by A3,A5;
     end;
     assume x in cG; then reconsider x'=x as Element of cG;
     reconsider S = con_class x' as Subset of cG;
  A6: S in C;            x' in con_class x' by GROUP_3:98;
     hence x in union C by A6,TARSKI:def 4;
   end;
then A7: union C = cG by TARSKI:2;
       now let A be Subset of cG; assume A in C;
     then consider A' being Subset of cG such that
   A8: A' = A and
   A9: ex a being Element of cG st A' = con_class a;
       consider a being Element of cG such that
   A10: A' = con_class a by A9;
    thus A<>{} by A8,A9;
    let B be Subset of cG; assume B in C;
       then consider B' being Subset of cG such that
   A11: B' = B and
   A12: ex a being Element of cG st B' = con_class a;
       consider b being Element of cG such that
   A13: B' = con_class b by A12;
       assume
   A14: A <> B; assume A meets B; then consider x being set such that
   A15: x in A & x in B by XBOOLE_0:3; reconsider x as Element of cG by A15;
   A16: x,a are_conjugated by A8,A10,A15,GROUP_3:96;
       x,b are_conjugated by A11,A13,A15,GROUP_3:96;
   then A17: a,b are_conjugated by A16,GROUP_3:91;
           now let c be set;
         hereby assume
         A18: c in A;
            then reconsider c'=c as Element of cG;
                c',a are_conjugated by A8,A10,A18,GROUP_3:96;
            then c',b are_conjugated by A17,GROUP_3:91;
          hence c in B by A11,A13,GROUP_3:96;
         end;
         assume
         A19: c in B;
            then reconsider c'=c as Element of cG;
                c',b are_conjugated by A11,A13,A19,GROUP_3:96;
            then c',a are_conjugated by A17,GROUP_3:91;
         hence c in A by A8,A10,GROUP_3:96;
       end;
     hence contradiction by A14,TARSKI:2;
   end;
   hence C is a_partition of cG by A1,A7,EQREL_1:def 6;
  end;
end;

theorem Th14:
for G being Group, x being set
 holds x in conjugate_Classes G iff ex a being Element of G st con_class a = x
proof let G be Group, x be set;
  hereby assume x in conjugate_Classes G;
    then ex S being Subset of G st
       x=S & ex a being Element of G st S = con_class a;
   hence ex a being Element of G st con_class a = x;
  end;
  given a being Element of G such that
A1: con_class a = x;
  thus x in conjugate_Classes G by A1;
end;

theorem  Th15: :: :: ClassFormula Class formula for finite groups
for G being finite Group, f being FinSequence of conjugate_Classes G
 st f is one-to-one & rng f = conjugate_Classes G
  for c being FinSequence of NAT
   st len c = len f & for i being Element of NAT st i in dom c
   holds c.i = Card (f.i)
    holds ord G = Sum c
proof let G be finite Group;
    let f be FinSequence of conjugate_Classes G such that
A1: f is one-to-one and A2: rng f = conjugate_Classes G;
    let c be FinSequence of NAT such that
A3: len c = len f and A4: for i being Element of NAT st i in dom c
holds c.i = Card (f.i);
       card the carrier of G = Sum c by A1,A2,A3,A4,Th6;
    hence thesis by GROUP_1:def 15;
end;

begin :: Centers and centralizers of skew fields

theorem  Th16: :: DIM:
for F being finite Field, V being VectSp of F, n, q being Nat
 st V is finite-dimensional & n = dim V & q = Card the carrier of F
  holds Card the carrier of V = q |^ n
proof let F be finite Field, V be VectSp of F, n, q be Nat such that
A1: V is finite-dimensional and
A2: n = dim V and
A3: q = Card the carrier of F;
   consider B being finite Subset of V such that
A4: B is Basis of V by A1,VECTSP_9:def 1;
A5: B is linearly-independent by A4,VECTSP_7:def 3;
A6: Lin(B) = the VectSpStr of V by A4,VECTSP_7:def 3;
A7: Card B = n by A1,A2,A4,VECTSP_9:def 2;
     q <> 0 by A3,GRAPH_5:5;
then A8: q > 0;
      now per cases;
    suppose A9: n = 0;
    then (Omega).V = (0).V by A1,A2,VECTSP_9:33;
then the VectSpStr of V = (0).V by VECTSP_4:def 4;
    then the carrier of V = {0.V} by VECTSP_4:def 3;
    then Card the carrier of V = 1 by CARD_1:79
        .= q #Z 0 by PREPOWER:44 .= q |^ 0 by PREPOWER:46;
    hence thesis by A9;
    end;
    suppose n <> 0;
then A10: B <> 0 by A7,CARD_4:17;
    consider bf being FinSequence such that
A11: rng bf = B and A12: bf is one-to-one by FINSEQ_4:73;
        len bf = n by A7,A11,A12,FINSEQ_4:77;
then A13: Seg n = dom bf by FINSEQ_1:def 3;
A14: n in NAT by ORDINAL1:def 13;
    reconsider Vbf = bf as FinSequence of the carrier of V by A11,
FINSEQ_1:def 4;
    set cLinB = the carrier of Lin(B);
    set ntocF = n-tuples_on the carrier of F;
    defpred P[Function, set] means
    ex lc being Linear_Combination of B st
      (for i being set st i in dom $1 holds lc.(Vbf.i) = $1.i) &
      $2 = Sum(lc (#) Vbf);

A15: for x being Element of ntocF ex y being Element of cLinB st P[x,y]
    proof let f be Element of ntocF;
            ex lc being Linear_Combination of B st
        for i being set st i in dom f holds lc.(Vbf.i) = f.i
        proof
          deffunc LC(set) = f.(union (Vbf"{$1}));
        A16: for x being set st x in B holds LC(x) in the carrier of F
            proof let x be set such that A17: x in B;
                consider i being set such that
            A18: Vbf"{x} = {i} by A11,A12,A17,FUNCT_1:144;
            A19: union (Vbf"{x}) = i by A18,ZFMISC_1:31;
                    i in Vbf"{x} by A18,TARSKI:def 1;
                then i in dom Vbf & Vbf.i in {x} by FUNCT_1:def 13;
                 then i in dom f by A13,FINSEQ_2:144;
            then f.i in rng f by FUNCT_1:12;
              hence thesis by A19;
            end;
            consider lc being Function of B, the carrier of F such that
        A20: for y being set st y in B holds lc.y = LC(y) from FUNCT_2:sch 2
(A16);
            set ll=lc +* (((the carrier of V)\B) --> 0.F);
        A21: dom (((the carrier of V)\B) --> 0.F) = (the carrier of V)\B
            by FUNCOP_1:19;
            then dom ll = dom lc \/ ((the carrier of V)\B) by FUNCT_4:def 1;
            then dom ll = B \/ ((the carrier of V)\B) by FUNCT_2:def 1;
            then dom ll = B \/ (the carrier of V) by XBOOLE_1:39;
        then A22:dom ll = the carrier of V by XBOOLE_1:12;
        A23: rng (((the carrier of V)\B) --> 0.F) c= {0.F} by FUNCOP_1:19;
                {0.F} c= the carrier of F by ZFMISC_1:37;
        then A24: rng (((the carrier of V)\B) --> 0.F) c= the carrier of F
            by A23,XBOOLE_1:1;
        A25: rng ll c= rng lc \/ rng (((the carrier of V)\B)--> 0.F)
            by FUNCT_4:18;
                rng lc \/ rng (((the carrier of V)\B)--> 0.F) c=
               the carrier of F by A24,XBOOLE_1:8;
        then rng ll c= the carrier of F by A25,XBOOLE_1:1;
            then ll is Function of the carrier of V,the carrier of F
            by A22,FUNCT_2:4;
        then A26: ll is Element of Funcs(the carrier of V, the carrier of F)
            by FUNCT_2:11;

        A27: for i being set st i in dom f holds ll.(Vbf.i) = f.i
           proof let i be set such that A28: i in dom f;
            A29: i in dom Vbf by A13,A28,FINSEQ_2:144;
                then Vbf.i in B by A11,FUNCT_1:12;
                then consider y being Element of B such that
            A30: y = Vbf.i;
            A31: Vbf.i in {y} by A30,TARSKI:def 1;
                consider ee being set such that
            A32: Vbf"{y} c= {ee} by A12,FUNCT_1:159;
            A33: i in Vbf"{y} by A29,A31,FUNCT_1:def 13;
                then {i} c= {ee} by A32,ZFMISC_1:37;
                then i = ee by ZFMISC_1:24;
            then A34: Vbf"{y} = {i} by A32,A33,ZFMISC_1:39;
                    not y in (the carrier of V)\B by A10,XBOOLE_0:def 4;
                then ll.y = lc.y by A21,FUNCT_4:12;
                then ll.y = f.(union (Vbf"{y})) by A10,A20;
              hence thesis by A30,A34,ZFMISC_1:31;
            end;

        A35: for v being Element of V st not v in B
            holds ll.v = 0.F
            proof let v be Element of V;
                assume not v in B;
            then A36: v in (the carrier of V)\B by XBOOLE_0:def 4;
                then ll.v=(((the carrier of V)\B)-->0.F).v by A21,FUNCT_4:14;
              hence thesis by A36,FUNCOP_1:13;
            end;
            then reconsider L=ll as Linear_Combination of V by A26,
VECTSP_6:def 4;

                for v being Element of V
            holds v in Carrier(L) implies v in B
            proof let v be Element of V;
                assume A37: v in Carrier(L);
                    now assume not v in B;
                    then ll.v = 0.F by A35;
                  hence contradiction by A37,VECTSP_6:20;
                end;
              hence thesis;
            end; then Carrier(L) c= B by SUBSET_1:7;
            then L is Linear_Combination of B by VECTSP_6:def 7;
          hence thesis by A27;
        end;
        then consider lc being Linear_Combination of B such that
    A38: for i being set st i in dom f holds lc.(Vbf.i) = f.i;
            ex y being Element of V st y = Sum(lc (#) Vbf);
      hence thesis by A6,A38;
    end;

    consider G being Function of ntocF,cLinB such that
A39: for tup being Element of ntocF holds P[tup, G.tup]
      from FUNCT_2:sch 3(A15);
A40: dom G = ntocF by FUNCT_2:def 1;

A41: for L being Linear_Combination of B holds
      ex nt being Element of ntocF st
      for i being set st i in dom nt holds nt.i = L.(Vbf.i)
    proof let L be Linear_Combination of B;
        deffunc F(set) = L.(Vbf.$1);
    A42: for x being set st x in Seg n holds F(x) in the carrier of F
        proof let x be set such that A43: x in Seg n;
                Vbf.x in rng Vbf by A13,A43,FUNCT_1:12;
            then consider vv be Element of V such that
        A44: Vbf.x = vv;
                L.vv in the carrier of F;
          hence thesis by A44;
        end;
        consider f being Function of Seg n, the carrier of F such that
   A45: for x being set st x in Seg n holds f.x = F(x) from FUNCT_2:sch 2(A42);
   A46: dom f = Seg n by FUNCT_2:def 1;
   A47: rng f c= the carrier of F;
A48: n is Element of NAT by ORDINAL1:def 13;
     f is FinSequence-like by A46,FINSEQ_1:def 2;
        then reconsider ff=f as FinSequence of the carrier of F
        by A47,FINSEQ_1:def 4;
            len ff = n by A46,A48,FINSEQ_1:def 3;
        then ff is Element of ntocF by FINSEQ_2:110;
      hence thesis by A45,A46;
    end;

    :: Show G is surjective
        for c being set st c in cLinB ex x being set st x in ntocF & c = G.x
    proof let c be set such that A49: c in cLinB;
            c in (Lin(B)) by A49,STRUCT_0:def 5;
        then consider l being Linear_Combination of B such that
    A50: c = Sum(l) by VECTSP_7:12;
            Carrier(l) c= rng Vbf by A11,VECTSP_6:def 7;
    then A51: Sum(l (#) Vbf) = Sum(l) by A12,VECTSP_9:7;
        consider t being Element of ntocF such that
    A52: for i being set st i in dom t holds t.i = l.(Vbf.i) by A41;
        consider lc being Linear_Combination of B such that
    A53: (for i being set st i in dom t holds lc.(Vbf.i) = t.i) and
    A54: G.t = Sum(lc (#) Vbf) by A39;
            for v being Element of V holds l.v = lc.v
        proof let v be Element of V;
                now per cases;
                suppose v in rng Vbf;
                    then consider x being set such that
                A55: [x,v] in Vbf by RELAT_1:def 5;
                A56: x in dom Vbf & Vbf.x = v by A55,FUNCT_1:8;
                then A57: x in dom t by A13,FINSEQ_2:144;
                    then l.(Vbf.x) = t.x by A52;
                hence thesis by A53,A56,A57;

                end;
                suppose A58: not v in rng Vbf;
                        now assume A59: v in Carrier(l);
                            Carrier(l) c= rng Vbf by A11,VECTSP_6:def 7;
                        hence contradiction by A58,A59;
                    end;
                then A60: l.v = 0.F by VECTSP_6:20;
                        now assume A61: v in Carrier(lc);
                            Carrier(lc) c= rng Vbf by A11,VECTSP_6:def 7;
                        hence contradiction by A58,A61;
                    end;
              hence thesis by A60,VECTSP_6:20;
            end;
            end;
          hence thesis;
        end; then G.t = Sum(l (#) Vbf) by A54,VECTSP_6:def 10;
      hence thesis by A50,A51;
    end;
then A62: rng G = cLinB by FUNCT_2:16;

    :: Show G is injective
        for x1,x2 being set st x1 in dom G & x2 in dom G & G.x1 = G.x2
      holds x1 = x2
    proof let x1,x2 be set such that
    A63: x1 in dom G and A64: x2 in dom G and A65: G.x1 = G.x2;
        reconsider t1=x1 as Element of ntocF by A63;
        reconsider t2=x2 as Element of ntocF by A64;
        reconsider v1=G.t1 as Element of Lin(B);
        reconsider v2=G.t2 as Element of Lin(B);
        consider L1 being Linear_Combination of B such that
    A66: (for i being set st i in dom t1 holds L1.(Vbf.i) = t1.i) &
        G.t1 = Sum(L1 (#) Vbf) by A39;
        consider L2 being Linear_Combination of B such that
    A67: (for i being set st i in dom t2 holds L2.(Vbf.i) = t2.i) &
        G.t2 = Sum(L2 (#) Vbf) by A39;

            Carrier(L1) c= rng Vbf by A11,VECTSP_6:def 7;
    then A68: Sum(L1) = Sum(L1 (#) Vbf) by A12,VECTSP_9:7;
            Carrier(L2) c= rng Vbf by A11,VECTSP_6:def 7;
        then Sum(L2) = Sum(L2 (#) Vbf) by A12,VECTSP_9:7;

         then Sum(L1) - Sum(L2) = 0.V by A65,A66,A67,A68,VECTSP_1:66;
    then A69: Sum(L1 - L2) = 0.V by VECTSP_6:80;
        (L1 - L2) is Linear_Combination of B by VECTSP_6:75;
    then A70: Carrier(L1 - L2) = {} by A5,A69,VECTSP_7:def 1;
A71: n is Element of NAT by ORDINAL1:def 13;
     for v being Element of V holds L1.v = L2.v
        proof let v be Element of V;
            reconsider LL = L1 - L2 as Linear_Combination of B by VECTSP_6:75;
                LL.v = 0.F by A70,VECTSP_6:20;
            then 0.F = L1.v - L2.v by VECTSP_6:73;
            hence thesis by VECTSP_1:84;
        end;
    then A72: L1 = L2 by VECTSP_6:def 10;
    A73: dom t1 = Seg n & dom t2 = Seg n by FINSEQ_2:144;
     for k being Nat st k in dom t1 holds t1.k = t2.k
        proof let k be Nat such that A74: k in dom t1;
               t1.k = L1.(Vbf.k) by A66,A74;
            hence thesis by A67,A72,A73,A74;
        end;
        hence thesis by A73,FINSEQ_1:17;
    end;
   then G is one-to-one by FUNCT_1:def 8;
   then ntocF, G.:(ntocF) are_equipotent by A40,CARD_1:60;
   then A75: ntocF, cLinB are_equipotent by A40,A62,RELAT_1:146;
A76: Card (Seg n) = Card n & Card q = Card the carrier of F
     by A3,FINSEQ_1:76;
       Card (ntocF)
   = Card Funcs (Seg n, the carrier of F) by FINSEQ_2:111
  .= Card Funcs (n, q) by A76,FUNCT_5:68
  .= q |^ n by A8,Th4;
 hence thesis by A6,A75,CARD_1:21;
end;
end;
hence thesis;
end;

definition
  let R be Skew-Field;
  func center R -> strict Field means :Def4:
   the carrier of it = {x where x is Element of R:
                    for s being Element of R holds x*s = s*x} &
   the add of it =  (the add of R)||the carrier of it &
   the mult of it =  (the mult of R)||the carrier of it &
   0.it = 0.R &
   1.it = 1.R;
  existence proof
   set cR = the carrier of R;
   set ccs = {x where x is Element of R:
                  for s being Element of R holds x*s = s*x};
       now let s be Element of cR;
     thus (0.R)*s = 0.R by VECTSP_1:39 .= s*(0.R) by VECTSP_1:36;
   end;
then A1: 0.R in ccs;
   then reconsider ccs as non empty set;
A2: ccs c= cR proof let x be set; assume x in ccs;
    then ex x' being Element of cR st
    x'=x & for s being Element of R holds x'*s = s*x';
    hence thesis;
   end;
   set acs = (the add of R)||ccs;
   set mcs = (the mult of R)||ccs;
   set Zs = 0.R;  set Us = 1_R;
A3: [:ccs,ccs:] c= [:cR,cR:] proof let x be set; assume x in [:ccs,ccs:];
     then consider a,b being set such that
   A4: a in ccs & b in ccs and
   A5: x =[a,b] by ZFMISC_1:def 2;
      thus x in [:cR,cR:] by A2,A4,A5,ZFMISC_1:def 2;
   end;
   then reconsider acs as Function of [:ccs,ccs:],cR by FUNCT_2:38;
      rng acs c= ccs proof let y be set; assume y in rng acs;
    then consider x being set such that
   A6: x in dom acs and
   A7: y = acs.x by FUNCT_1:def 5;
        consider a,b being set such that
   A8: a in ccs & b in ccs and
   A9: x = [a,b] by A6,ZFMISC_1:def 2;
       reconsider a,b as Element of cR by A2,A8;
   A10: ex a' being Element of cR st a'=a &
         for s being Element of R holds a'*s = s*a'  by A8;
   A11: ex b' being Element of cR st b'=b &
         for s being Element of R holds b'*s = s*b' by A8;
    [a,b] in [:ccs,ccs:] by A8,ZFMISC_1:def 2;
   then A12: a+b = acs.x by A9,FUNCT_1:72;
           now let s be Element of cR;
        thus (a+b)*s=a*s+b*s by VECTSP_1:def 12
           .= s*a+b*s by A10 .= s*a+s*b by A11 .=s*(a+b) by VECTSP_1:def 11;
       end;
    hence y in ccs by A7,A12;
   end;
   then reconsider acs as BinOp of ccs by FUNCT_2:8;
   reconsider mcs as Function of [:ccs,ccs:],cR by A3,FUNCT_2:38;
      rng mcs c= ccs proof let y be set; assume y in rng mcs;
    then consider x being set such that
   A13: x in dom mcs and
   A14: y = mcs.x by FUNCT_1:def 5;
       consider a,b being set such that
   A15: a in ccs & b in ccs and
   A16: x = [a,b] by A13,ZFMISC_1:def 2;
       reconsider a,b as Element of cR by A2,A15;
      A17: ex a' being Element of cR st a'=a &
         for s being Element of R holds a'*s = s*a'  by A15;
   A18: ex b' being Element of cR st b'=b &
         for s being Element of R holds b'*s = s*b' by A15;
    [a,b] in [:ccs,ccs:] by A15,ZFMISC_1:def 2;
   then A19: a*b = mcs.x by A16,FUNCT_1:72;
         now let s be Element of cR;
      thus (a*b)*s=a*(b*s) by GROUP_1:def 4
         .= a*(s*b) by A18 .= (a*s)*b by GROUP_1:def 4 .= (s*a)*b by A17
       .= s*(a*b) by GROUP_1:def 4;
     end;
    hence y in ccs by A14,A19;
   end;
   then reconsider mcs as BinOp of ccs by FUNCT_2:8;
   reconsider Zs as Element of ccs by A1;
       now let s be Element of cR;
     thus (1_R)*s = s by VECTSP_1:def 19 .= s*(1_R) by VECTSP_1:def 13;
   end;
   then Us in ccs;
   then reconsider Us as Element of ccs;
   reconsider cs = doubleLoopStr (# ccs, acs, mcs, Us, Zs #)
                   as non empty doubleLoopStr;
A20: 0.cs = Zs;
   set ccs1 = the carrier of cs;
A21: now let x,s be Element of cR; assume x in ccs;
    then ex x' being Element of cR st x'=x &
     for s being Element of R holds x'*s = s*x';
    hence x*s=s*x;
   end;
A22: now let a,b be Element of cR, c,d be Element of ccs1 such that
   A23: a=c & b=d;
      [c,d] in [:ccs,ccs:] by ZFMISC_1:def 2;
    hence a*b= c*d by A23,FUNCT_1:72;
   end;
A24: for a,b being Element of cR, c,d be Element of ccs1 st a=c & b=d
    holds a+b= c+d
     proof let a,b being Element of cR, c,d be Element of ccs1 such that
A25:     a=c & b=d;
        [c,d] in [:ccs,ccs:] by ZFMISC_1:def 2;
      hence a+b = c+d by A25,FUNCT_1:72;
     end;
A26: cs is Abelian proof let x,y be Element of ccs1;
       x in ccs1 & y in ccs1;
    then reconsider x'=x,y'=y as Element of cR by A2;
    thus x+y = y'+x' by A24 .= y+x by A24;
   end;
A27: cs is add-associative proof let x,y,z be Element of ccs1;
       x in ccs1 & y in ccs1 & z in ccs1;
    then reconsider x'=x,y'=y,z'=z as Element of cR by A2;
    A28: x'+y'=x+y by A24;   A29: y'+z'=y+z by A24;
    thus (x+y)+z = (x'+y')+z' by A24,A28 .= x'+(y'+z') by RLVECT_1:def 6
    .= x+(y+z) by A24,A29;
   end;
A30: cs is right_zeroed proof let x be Element of ccs1;
        x in ccs1; then reconsider x'=x as Element of cR by A2;
    thus x + 0.cs = x'+0.R by A24 .= x by RLVECT_1:def 7;
   end;
A31: cs is right_complementable proof let x be Element of ccs1;
        x in ccs1; then reconsider x'=x as Element of cR by A2;
    consider y' being Element of cR such that
   A32: x' + y' = 0.R by RLVECT_1:def 8;
         now let s be Element of cR;
   A33: s*x'=x'*s by A21;
          0.R*s=0.R by VECTSP_1:39 .= s*0.R by VECTSP_1:36;
        then x'*s+y'*s=s*(x'+y') by A32,VECTSP_1:def 12;
       then x'*s+y'*s=s*x'+s*y' by VECTSP_1:def 11;
       then (-(x'*s)+x'*s)+y'*s=-(s*x')+(s*x'+s*y') by A33,RLVECT_1:def 6;
       then 0.R+y'*s=-(s*x')+(s*x'+s*y') by RLVECT_1:16;
       then y'*s=-(s*x')+(s*x'+s*y') by RLVECT_1:10;
       then y'*s=(-(s*x')+s*x')+s*y' by RLVECT_1:def 6;
       then y'*s=0.R+s*y' by RLVECT_1:16;
      hence y'*s=s*y' by RLVECT_1:10;
      end; then y' in ccs1; then reconsider y=y' as Element of ccs1;
           x'+y'=x+y by A24;
    hence ex y being Element of ccs1 st x + y = 0.cs by A32;
   end;
A34: cs is associative proof let x,y,z be Element of ccs1;
       x in ccs1 & y in ccs1 & z in ccs1;
    then reconsider x'=x,y'=y,z'=z as Element of cR by A2;
    A35: x'*y'=x*y by A22;   A36: y'*z'=y*z by A22;
    thus (x*y)*z = (x'*y')*z' by A22,A35 .= x'*(y'*z') by GROUP_1:def 4
    .= x*(y*z) by A22,A36;
   end;
A37: cs is commutative proof let x,y be Element of ccs1;
          x in ccs1 & y in ccs1;
    then reconsider x'=x,y'=y as Element of cR by A2;
    thus x*y = x'*y' by A22 .= y'*x' by A21 .= y*x by A22;
   end;
A38: now
     let x, e be Element of cs;
     assume
A39:   e = 1_R;
A40: [x,e] in [:ccs,ccs:] by ZFMISC_1:106;
      x in ccs;
     then reconsider y=x as Element of R by A2;
     thus x*e = y*1_R by A39,A40,FUNCT_1:72
     .= x by GROUP_1:def 5;
     hence e*x=x by A37,GROUP_1:def 16;
   end;
   reconsider e = 1_R as Element of cs;
A41: cs is well-unital
   proof let x be Element of cs;
     thus thesis by A38;
   end;
A42: 1.cs = 1.R;
A43: cs is distributive proof let x,y,z be Element of ccs1;
       x in ccs1 & y in ccs1 & z in ccs1;
    then reconsider x'=x,y'=y,z'=z as Element of cR by A2;
   A44: y+z=y'+z' by A24;   A45: x'*y'=x*y by A22;   A46: x'*z'=x*z by A22;
   A47: y'*x'=y*x by A22;   A48: z'*x'=z*x by A22;
    thus x*(y+z) = x'*(y'+z') by A22,A44 .= x'*y'+x'*z' by VECTSP_1:def 18
    .= x*y+x*z by A24,A45,A46;
    thus (y+z)*x = (y'+z')*x' by A22,A44 .= y'*x'+z'*x' by VECTSP_1:def 18
    .= y*x+z*x by A24,A47,A48;
   end;
A49: cs is Field-like proof let x be Element of ccs1 such that
   A50: x <> 0.cs;
          x in ccs1; then reconsider x'=x as Element of cR by A2;
       consider y' being Element of cR such that
   A51: x'*y'=1.R by A50,VECTSP_1:def 20;
         now let s be Element of cR;
           (1_R)*s = s by VECTSP_1:def 19 .= s*(1_R) by VECTSP_1:def 13;
       then x'*y'*s = (s*x')*y' by A51,GROUP_1:def 4;
       then x'*y'*s = x'*s*y' by A21;
       then x'"*(x'*y')*s = x'"*(x'*s*y') by GROUP_1:def 4;
       then x'"*(x'*y')*s = x'"*(x'*s)*y' by GROUP_1:def 4;
       then x'"*x'*y'*s = x'"*(x'*s)*y' by GROUP_1:def 4;
       then x'"*x'*y'*s = x'"*x'*s*y' by GROUP_1:def 4;
       then (1_R)*y'*s = x'"*x'*s*y' by A50,VECTSP_2:43;
       then (1_R)*y'*s = (1_R)*s*y' by A50,VECTSP_2:43;
       then y'*s = (1_R)*s*y' by VECTSP_1:def 19;
      hence y'*s=s*y' by VECTSP_1:def 19;
     end; then y' in ccs1; then reconsider y=y' as Element of ccs1;
       take y;
       thus x*y= 1.cs by A22,A51;
   end;

    0.R <> 1.R by STRUCT_0:def 8;
   then reconsider cs as strict Field
      by A20,A26,A27,A30,A31,A34,A37,A41,A42,A43,A49,STRUCT_0:def 8;
   take cs;
   thus thesis;
  end;
  uniqueness;
end;

theorem  Th17: :: Center0:
for R being Skew-Field holds the carrier of center R c= the carrier of R
proof let R be Skew-Field;
      for x being set st x in the carrier of center R holds x in the carrier
of R
  proof let y be set such that
  A1: y in the carrier of center R;
        y in {x where x is Element of R: for s being Element of R holds x*s =
s*x}
       by A1,Def4;
      then consider x being Element of R such that
  A2: x = y and for s being Element of R holds x*s = s*x;
    thus thesis by A2;
  end;
  hence thesis by TARSKI:def 3;
end;

registration let R be finite Skew-Field;
  cluster center R -> finite;
  correctness proof
         the carrier of center R c= the carrier of R by Th17;
     then the carrier of center R is finite by FINSET_1:13;
     hence thesis by STRUCT_0:def 11;
  end;
end;

theorem  Th18: :: Center1:
for R being Skew-Field, y being Element of R
 holds y in center R iff for s being Element of R holds y*s = s*y
proof let R be Skew-Field, y be Element of R;
    hereby assume y in center R;
        then y in the carrier of center R by STRUCT_0:def 5;
        then y in {x where x is Element of R:
        for s being Element of R holds x*s = s*x}
        by Def4;
        then consider x being Element of R such that
    A1: x = y and A2: for s being Element of R holds x*s=s*x;
      thus for s being Element of R holds y*s = s*y by A1,A2;
    end;
        now assume for s being Element of R holds y*s = s*y;
        then y in {x where x is Element of R:
        for s being Element of R holds x*s = s*x};
        then y is Element of center R by Def4;
     hence y in center R by STRUCT_0:def 5;
    end;
  hence thesis;
end;

theorem  Th19: :: Center1a:
for R being Skew-Field holds 0.R in center R
proof let R be Skew-Field;
            for s being Element of R holds 0.R*s = s*0.R
        proof let s be Element of R;
                0.R*s = 0.R by VECTSP_1:39 .= s*0.R by VECTSP_1:36;
          hence thesis;
        end;
 hence thesis by Th18;
end;

theorem  Th20: :: Center1b:
for R being Skew-Field holds 1_R in center R
proof let R be Skew-Field;
      for s being Element of R holds (1_R)*s = s*(1_R)
   proof let s be Element of R;
        (1_R)*s = s by VECTSP_1:def 19 .= s*(1_R) by VECTSP_1:def 13;
    hence thesis;
   end;
 hence thesis by Th18;
end;

theorem  Th21: :: Center2:
for R being finite Skew-Field holds 1 < card (the carrier of center R)
proof let R be finite Skew-Field;
A1: 1.R = 1_R;
        0.R <> 1.R by STRUCT_0:def 8;
then A2: card {0.R, 1.R} = 2  by CARD_2:76;
        0.R in center R by Th19;
then A3: 0.R in the carrier of center R by STRUCT_0:def 5;
        for s being Element of R holds (1.R)*s = s*(1.R)
    proof let s be Element of R;
          s*(1.R) = s by A1,VECTSP_1:def 13 .= (1.R)*s by A1,VECTSP_1:def 19;
      hence thesis;
    end;
    then 1.R in center R by Th18;
    then 1.R in the carrier of center R by STRUCT_0:def 5;
    then {0.R, 1.R} c= the carrier of center R by A3,ZFMISC_1:38;
    then 2 <= card the carrier of center R by A2,NAT_1:44;
  hence thesis by XXREAL_0:2;
end;

theorem  Th22: :: Center3:
for R being finite Skew-Field holds
  card the carrier of center R = card the carrier of R iff R is commutative
proof let R be finite Skew-Field;
   set X = the carrier of R;  set Y = the carrier of center R;
   hereby assume A1: card X = card Y;
   A2: Y c= X by Th17;
       then card (X \ Y) = card X - card X by A1,CARD_2:63; then X \ Y = {}
by CARD_4:17;
       then X c= Y by XBOOLE_1:37;
   then A3: X = Y by A2,XBOOLE_0:def 10;
           for x being Element of X
         holds for s being Element of X holds x*s=s*x
       proof let x be Element of X;     x in center R by A3,STRUCT_0:def 5;
         hence thesis by Th18;
       end;
     hence R is commutative by GROUP_1:def 16;
   end;
       now assume A4: R is commutative;
           for x being set st x in X holds x in Y
       proof let x be set such that A5: x in X;
               for x being Element of X holds x is Element of Y
           proof let x be Element of X;
                 for y being Element of X holds x*y = y*x by A4,GROUP_1:def 16;
             then x in center R by Th18;
             hence thesis by STRUCT_0:def 5;
           end; then x is Element of Y by A5;
         hence thesis;
       end;
   then A6: X c= Y by TARSKI:def 3;            Y c= X by Th17;
     hence card Y = card X by A6,XBOOLE_0:def 10;
   end;
 hence thesis;
end;

theorem  Th23: :: Center4:
for R being Skew-Field
 holds the carrier of center R = (the carrier of center MultGroup R) \/ {0.R}
proof let R being Skew-Field;
A1: the carrier of center MultGroup R c= the carrier of MultGroup R
    by GROUP_2:def 5;
A2: the carrier of MultGroup R = (the carrier of R) \ {0.R} by UNIROOTS:def 1;
A3: (the carrier of MultGroup R)\/ {0.R} = the carrier of R by UNIROOTS:18;
A4: the carrier of center R c= the carrier of R by Th17;
A5:(the carrier of center MultGroup R) \/ {0.R} c= the carrier of center R
   proof
   let x be set;
   assume A6: x in (the carrier of center MultGroup R) \/ {0.R};
   per cases by A6,XBOOLE_0:def 2;
   suppose A7: x in the carrier of center MultGroup R;
      then reconsider a = x as Element of MultGroup R by A1;
      A8: a in center MultGroup R by A7,STRUCT_0:def 5;
      reconsider a1 = a as Element of R by UNIROOTS:22;
          now let b be Element of R;
        thus a1*b = b*a1 proof
        per cases by A3,XBOOLE_0:def 2;
        suppose b in (the carrier of MultGroup R);
          then reconsider b1 = b as Element of MultGroup R;
         thus a1*b = a*b1 by UNIROOTS:19 .= b1*a by A8,GROUP_5:89 .= b*a1 by
UNIROOTS:19;
        end;
        suppose b in {0.R};
        then A9: b = 0.R by TARSKI:def 1;
         hence a1*b = 0.R by VECTSP_1:36 .= b*a1 by A9,VECTSP_1:39;
        end;
        end;
      end;
      then a1 in center R by Th18;
    hence thesis by STRUCT_0:def 5;
   end;
   suppose x in {0.R}; then x = 0.R by TARSKI:def 1;
     then x in center R by Th19;
    hence x in the carrier of center R by STRUCT_0:def 5;
  end;
  end;
      the carrier of center R c= (the carrier of center MultGroup R) \/ {0.R}
  proof
   let x be set; assume
  A10: x in the carrier of center R;
      then reconsider a = x as Element of center R;
      reconsider a1 = a as Element of R by A4,A10;
   per cases;
   suppose a1 = 0.R; then a1 in {0.R} by TARSKI:def 1;
    hence x in (the carrier of center MultGroup R) \/ {0.R} by XBOOLE_0:def 2;
   end;
   suppose a1 <> 0.R;
   then not a1 in {0.R} by TARSKI:def 1;
       then reconsider a2 = a1 as Element of MultGroup R by A2,XBOOLE_0:def 4;
           now let b be Element of MultGroup R;
        b in the carrier of MultGroup R;
         then reconsider b1 = b as Element of R by A2;
       A11: x in center R by A10,STRUCT_0:def 5;
        thus a2*b=a1*b1 by UNIROOTS:19 .= b1*a1 by A11,Th18
          .= b*a2 by UNIROOTS:19;
       end;
       then a1 in center MultGroup R by GROUP_5:89;
       then a1 in the carrier of center MultGroup R by STRUCT_0:def 5;
    hence x in (the carrier of center MultGroup R) \/ {0.R} by XBOOLE_0:def 2;

  end;
  end;
 hence thesis by A5,XBOOLE_0:def 10;
end;

definition
  let R be Skew-Field, s be Element of R;
A1: 1.R = 1_R;
  func centralizer s -> strict Skew-Field means :Def5:
   the carrier of it = {x where x is Element of R: x*s = s*x} &
   the add of it =  (the add of R)||the carrier of it &
   the mult of it =  (the mult of R)||the carrier of it &
   0.it = 0.R &
   1.it = 1.R;
  existence proof
   set cR = the carrier of R;
   set ccs = {x where x is Element of R: x*s = s*x};
       (0.R)*s = 0.R by VECTSP_1:39 .= s*(0.R) by VECTSP_1:36;
   then 0.R in ccs;
   then reconsider ccs as non empty set;
A2: ccs c= cR proof let x be set; assume x in ccs;
    then ex x' being Element of cR st x'=x & x'*s=s*x';
    hence thesis;
   end;
   set acs = (the add of R)||ccs;
   set mcs = (the mult of R)||ccs;
   set Zs = 0.R;  set Us = 1.R;
A3: [:ccs,ccs:] c= [:cR,cR:] proof let x be set; assume x in [:ccs,ccs:];
     then consider a,b being set such that
   A4: a in ccs & b in ccs and
   A5: x =[a,b] by ZFMISC_1:def 2;
      thus x in [:cR,cR:] by A2,A4,A5,ZFMISC_1:def 2;
   end;
   then reconsider acs as Function of [:ccs,ccs:],cR by FUNCT_2:38;
      rng acs c= ccs proof let y be set; assume y in rng acs;
    then consider x being set such that
   A6: x in dom acs and
   A7: y = acs.x by FUNCT_1:def 5;
        consider a,b being set such that
   A8: a in ccs & b in ccs and
   A9: x = [a,b] by A6,ZFMISC_1:def 2;
       reconsider a,b as Element of cR by A2,A8;
   A10: ex a' being Element of cR st a'=a & a'*s=s*a' by A8;
   A11: ex b' being Element of cR st b'=b & b'*s=s*b' by A8;
    [a,b] in [:ccs,ccs:] by A8,ZFMISC_1:def 2;
   then A12: a+b = acs.x by A9,FUNCT_1:72;
           (a+b)*s=s*a+s*b by A10,A11,VECTSP_1:def 12
       .=s*(a+b) by VECTSP_1:def 11;
    hence y in ccs by A7,A12;
   end;
   then reconsider acs as BinOp of ccs by FUNCT_2:8;
   reconsider mcs as Function of [:ccs,ccs:],cR by A3,FUNCT_2:38;
      rng mcs c= ccs proof let y be set; assume y in rng mcs;
    then consider x being set such that
   A13: x in dom mcs and
   A14: y = mcs.x by FUNCT_1:def 5;
       consider a,b being set such that
   A15: a in ccs & b in ccs and
   A16: x = [a,b] by A13,ZFMISC_1:def 2;
       reconsider a,b as Element of cR by A2,A15;
   A17: ex a' being Element of cR st a'=a & a'*s=s*a' by A15;
   A18: ex b' being Element of cR st b'=b & b'*s=s*b' by A15;
    [a,b] in [:ccs,ccs:] by A15,ZFMISC_1:def 2;
   then A19: a*b = mcs.x by A16,FUNCT_1:72;
           (a*b)*s=a*(s*b) by A18,GROUP_1:def 4 .= (a*s)*b by GROUP_1:def 4
       .= s*(a*b) by A17,GROUP_1:def 4;
    hence y in ccs by A14,A19;
   end;
   then reconsider mcs as BinOp of ccs by FUNCT_2:8;
    (0.R)*s = 0.R by VECTSP_1:39 .= s*(0.R) by VECTSP_1:36;
   then Zs in ccs;
   then reconsider Zs as Element of ccs;
       (1.R)*s = s by A1,VECTSP_1:def 19 .= s*(1.R) by A1,VECTSP_1:def 13;
   then Us in ccs;
   then reconsider Us as Element of ccs;
   reconsider cs = doubleLoopStr (# ccs, acs, mcs, Us, Zs #)
                   as non empty doubleLoopStr;
A20: 0.cs = Zs;
A21: 1.cs = Us;
A22: now
     let x, e be Element of cs;
     assume
A23:   e = 1.R;
A24: [x,e] in [:ccs,ccs:] by ZFMISC_1:106;
A25: [e,x] in [:ccs,ccs:] by ZFMISC_1:106;
      x in ccs;
     then reconsider y=x as Element of R by A2;
     thus x*e = y*1.R by A23,A24,FUNCT_1:72
     .= x by A1,GROUP_1:def 5;
     thus e*x = 1.R*y by A23,A25,FUNCT_1:72
     .= x by A1,GROUP_1:def 5;
   end;
   reconsider e = 1.R as Element of cs;
A26: cs is well-unital
   proof let x be Element of cs;
     thus thesis by A22;
   end;
A27: 1.cs = 1.R;
   set ccs1 = the carrier of cs;
A28: now let x be Element of cR; assume x in ccs;
    then ex x' being Element of cR st x'=x & x'*s = s*x';
    hence x*s=s*x;
   end;
A29: now let a,b be Element of cR, c,d be Element of ccs1 such that
   A30: a=c & b=d;
    [c,d] in [:ccs,ccs:] by ZFMISC_1:def 2;
    hence a*b= c*d by A30,FUNCT_1:72;
   end;
A31: for a,b being Element of cR, c,d be Element of ccs1 st a=c & b=d
     holds a+b = c+d
      proof let a,b being Element of cR, c,d be Element of ccs1 such that
A32:      a=c & b=d;
         [c,d] in [:ccs,ccs:] by ZFMISC_1:def 2;
       hence a+b = c+d by A32,FUNCT_1:72;
      end;
A33: cs is Abelian proof let x,y be Element of ccs1;
       x in ccs1 & y in ccs1;
    then reconsider x'=x,y'=y as Element of cR by A2;
    thus x+y = y'+x' by A31 .= y+x by A31;
   end;
A34: cs is add-associative proof let x,y,z be Element of ccs1;
       x in ccs1 & y in ccs1 & z in ccs1;
    then reconsider x'=x,y'=y,z'=z as Element of cR by A2;
    A35: x'+y'=x+y by A31;   A36: y'+z'=y+z by A31;
    thus (x+y)+z = (x'+y')+z' by A31,A35 .= x'+(y'+z') by RLVECT_1:def 6
    .= x+(y+z) by A31,A36;
   end;
A37: cs is right_zeroed proof let x be Element of ccs1;
        x in ccs1; then reconsider x'=x as Element of cR by A2;
    thus x + 0.cs = x'+0.R by A31 .= x by RLVECT_1:def 7;
   end;
A38: cs is right_complementable proof let x be Element of ccs1;
        x in ccs1; then reconsider x'=x as Element of cR by A2;
    consider y' being Element of cR such that
   A39: x' + y' = 0.R by RLVECT_1:def 8;
   A40: s*x'=x'*s by A28;
        0.R*s=0.R by VECTSP_1:39 .= s*0.R by VECTSP_1:36;
       then x'*s+y'*s=s*(x'+y') by A39,VECTSP_1:def 12;
       then x'*s+y'*s=s*x'+s*y' by VECTSP_1:def 11;
       then (-(x'*s)+x'*s)+y'*s=-(s*x')+(s*x'+s*y') by A40,RLVECT_1:def 6;
       then 0.R+y'*s=-(s*x')+(s*x'+s*y') by RLVECT_1:16;
       then y'*s=-(s*x')+(s*x'+s*y') by RLVECT_1:10;
       then y'*s=(-(s*x')+s*x')+s*y' by RLVECT_1:def 6;
       then y'*s=0.R+s*y' by RLVECT_1:16; then y'*s=s*y' by RLVECT_1:10;
       then y' in ccs1; then reconsider y=y' as Element of ccs1;
           x'+y'=x+y by A31;
    hence ex y being Element of ccs1 st x + y = 0.cs by A39;
   end;
A41: cs is associative proof let x,y,z be Element of ccs1;
       x in ccs1 & y in ccs1 & z in ccs1;
    then reconsider x'=x,y'=y,z'=z as Element of cR by A2;
    A42: x'*y'=x*y by A29;   A43: y'*z'=y*z by A29;
    thus (x*y)*z = (x'*y')*z' by A29,A42 .= x'*(y'*z') by GROUP_1:def 4
    .= x*(y*z) by A29,A43;
   end;
A44: cs is distributive proof let x,y,z be Element of ccs1;
       x in ccs1 & y in ccs1 & z in ccs1;
    then reconsider x'=x,y'=y,z'=z as Element of cR by A2;
   A45: y+z=y'+z' by A31;   A46: x'*y'=x*y by A29;   A47: x'*z'=x*z by A29;
   A48: y'*x'=y*x by A29;   A49: z'*x'=z*x by A29;
    thus x*(y+z) = x'*(y'+z') by A29,A45 .= x'*y'+x'*z' by VECTSP_1:def 18
    .= x*y+x*z by A31,A46,A47;
    thus (y+z)*x = (y'+z')*x' by A29,A45 .= y'*x'+z'*x' by VECTSP_1:def 18
    .= y*x+z*x by A31,A48,A49;
   end;
A50: cs is Field-like proof let x be Element of ccs1 such that
   A51: x <> 0.cs;
          x in ccs1; then reconsider x'=x as Element of cR by A2;
       consider y' being Element of cR such that
   A52: x'*y'=1.R by A51,VECTSP_1:def 20;
           (1.R)*s = s by A1,VECTSP_1:def 19 .= s*(1.R) by A1,VECTSP_1:def 13;
       then x'*y'*s = (s*x')*y' by A52,GROUP_1:def 4;
       then x'*y'*s = x'*s*y' by A28;
        then x'"*(x'*y')*s = x'"*(x'*s*y') by GROUP_1:def 4;
       then x'"*(x'*y')*s = x'"*(x'*s)*y' by GROUP_1:def 4;
       then x'"*x'*y'*s = x'"*(x'*s)*y' by GROUP_1:def 4;
       then x'"*x'*y'*s = x'"*x'*s*y' by GROUP_1:def 4;
       then (1_R)*y'*s = x'"*x'*s*y' by A51,VECTSP_2:43;
       then (1_R)*y'*s = (1_R)*s*y' by A51,VECTSP_2:43;
       then y'*s = (1_R)*s*y' by VECTSP_1:def 19;
       then y'*s=s*y' by VECTSP_1:def 19; then y' in ccs1;
       then reconsider y=y' as Element of ccs1;
       take y;
       thus x*y= 1.cs by A29,A52;
   end;
    0.R <> 1.R by STRUCT_0:def 8;
   then cs is non degenerated by A20,A27,STRUCT_0:def 8;
   hence thesis by A20,A21,A26,A33,A34,A37,A38,A41,A44,A50;
  end;
  uniqueness;
end;

theorem  Th24: :: Central00:
for R be Skew-Field, s be Element of R
 holds the carrier of centralizer s c= the carrier of R
proof let R be Skew-Field, s be Element of R;
   set cs = centralizer s; set ccs = the carrier of cs;
A1: ccs = {x where x is Element of R: x*s = s*x} by Def5;
  let x be set;
  assume x in the carrier of centralizer s;
   then ex a being Element of R st a=x & a*s=s*a by A1;
  hence x in the carrier of R;
end;

theorem  Th25: :: Central02a:
for R be Skew-Field, s, a be Element of R
 holds a in the carrier of centralizer s iff a*s = s*a
proof let R be Skew-Field, s, a be Element of R;
   set cs = centralizer s; set ccs = the carrier of cs;
A1: ccs = {x where x is Element of R: x*s = s*x} by Def5;
 hereby assume a in the carrier of centralizer s;
   then ex x being Element of R st a=x & x*s=s*x by A1;
  hence a*s = s*a;
 end;
 assume a*s = s*a;
 hence a in the carrier of centralizer s by A1;
end;

theorem  :: Central02b:
    for R be Skew-Field, s be Element of R
  holds the carrier of center R c= the carrier of centralizer s
proof let R be Skew-Field, s be Element of R;
 let x be set; assume
A1: x in the carrier of center R;
      the carrier of center R c= the carrier of R by Th17;
   then reconsider a = x as Element of R by A1;
       a in center R by A1,STRUCT_0:def 5;
   then a*s=s*a by Th18;
 hence x in the carrier of centralizer s by Th25;
end;

theorem  Th27: :: Central02:
for R be Skew-Field, s, a, b be Element of R
 st a in the carrier of center R & b in the carrier of centralizer s
  holds a*b in the carrier of centralizer s
proof let R be Skew-Field, s, a, b be Element of R such that
A1: a in the carrier of center R and
A2: b in the carrier of centralizer s;
  set cs = centralizer s; set ccs = the carrier of cs;
A3: ccs = {x where x is Element of R: x*s = s*x} by Def5;
A4: a in center R by A1,STRUCT_0:def 5;
      a*b*s=a*(b*s) by GROUP_1:def 4
  .= (b*s)*a by A4,Th18
  .= (s*b)*a by A2,Th25
  .= s*(b*a) by GROUP_1:def 4
  .= s*(a*b) by A4,Th18;
 hence a*b in the carrier of centralizer s by A3;
end;

theorem  Th28: :: Central0:
for R be Skew-Field, s be Element of R
  holds 0.R is Element of centralizer s & 1_R is Element of centralizer s
 proof let R be Skew-Field, s be Element of R;
A1: 0.R = 0.centralizer s by Def5;
    1.centralizer s = 1_R by Def5;
  hence thesis by A1;
 end;

registration let R be finite Skew-Field;
  let s be Element of R;
  cluster centralizer s -> finite;
  correctness proof
       the carrier of centralizer s c= the carrier of R by Th24;
   then the carrier of centralizer s is finite by FINSET_1:13;
   hence thesis by STRUCT_0:def 11;
  end;
end;

theorem  Th29: :: Central1:
for R be finite Skew-Field, s be Element of R
  holds 1 < card (the carrier of centralizer s)
proof let R be finite Skew-Field, s be Element of R;
        0.R <> 1.R by STRUCT_0:def 8;
then A1: card {0.R, 1.R} = 2  by CARD_2:76;
        0.R is Element of centralizer s &
    1_R is Element of centralizer s by Th28;
    then {0.R, 1_R} c= the carrier of centralizer s by ZFMISC_1:38;
    then 2 <= card the carrier of centralizer s by A1,NAT_1:44;
  hence thesis by XXREAL_0:2;
end;

theorem  Th30: :: Central2a:
for R being Skew-Field, s being Element of R, t being Element of MultGroup R
 st t = s
  holds the carrier of centralizer s = (the carrier of Centralizer t) \/ {0.R}
proof let R be Skew-Field, s be Element of R,
          t be Element of MultGroup R such that
A1: t = s;
  set ct = Centralizer t, cs = centralizer s;
  set cct = the carrier of ct, ccs = the carrier of cs;
A2: the carrier of MultGroup R = (the carrier of R) \ {0.R} by UNIROOTS:def 1;
A3: cct = { b where b is Element of MultGroup R : t*b = b*t } by Def1;
A4: ccs = {x where x is Element of R: x*s = s*x} by Def5;
       now let x be set;
     hereby assume x in ccs;
       then consider c being Element of R such that
     A5: c = x and
     A6: c*s=s*c by A4;
     per cases;
     suppose c = 0.R; then c in {0.R} by TARSKI:def 1;
      hence x in cct \/ {0.R} by A5,XBOOLE_0:def 2;
     end;
     suppose c <> 0.R; then not c in {0.R} by TARSKI:def 1;
      then reconsider c1 = c as Element of MultGroup R by A2,XBOOLE_0:def 4;
          t*c1 = s*c by A1,UNIROOTS:19 .= c1*t by A1,A6,UNIROOTS:19;
       then c in cct by A3;
      hence x in cct \/ {0.R} by A5,XBOOLE_0:def 2;
     end;
     end;
     assume A7: x in cct \/ {0.R};
     per cases by A7,XBOOLE_0:def 2;
     suppose x in cct; then consider b being Element of MultGroup R such
that
     A8: x = b and
     A9: t*b = b*t by A3;
         reconsider b1 = b as Element of R by UNIROOTS:22;
             b1*s = t*b by A1,A9,UNIROOTS:19 .= s*b1 by A1,UNIROOTS:19;
      hence x in ccs by A4,A8;
     end;
     suppose x in {0.R};
     then A10: x = 0.R by TARSKI:def 1;
             0.R*s = 0.R by VECTSP_1:39 .= s*0.R by VECTSP_1:36;
     hence x in ccs by A4,A10;
   end;
   end;
  hence thesis by TARSKI:2;
end;

theorem  Th31: :: Central2:
for R being finite Skew-Field, s being Element of R,
    t being Element of MultGroup R st t = s
  holds ord Centralizer t = card (the carrier of centralizer s) - 1
proof let R be finite Skew-Field, s be Element of R,
          t be Element of MultGroup R such that
A1: t = s;
  set ct = Centralizer t, cs = centralizer s;
  set cct = the carrier of ct, ccs = the carrier of cs;
      the carrier of MultGroup R = (the carrier of R) \ {0.R}
    by UNIROOTS:def 1;
  then not 0.R in the carrier of MultGroup R by ZFMISC_1:64;
  then not 0.R in MultGroup R by STRUCT_0:def 5;
  then not 0.R in ct by Th7;
then A2: not 0.R in cct by STRUCT_0:def 5;
      cct \/ {0.R} = ccs by A1,Th30;
then card ccs = card cct +1 by A2,CARD_2:54;
  hence ord Centralizer t = card (ccs) - 1 by GROUP_1:def 15;
end;

begin :: Vector spaces over centers of skew fields

definition
  let R be Skew-Field;
  func VectSp_over_center R -> strict VectSp of center R means :Def6:
  the LoopStr of it = the LoopStr of R &
  the lmult of it = (the mult of R )
                     | [:the carrier of center R, the carrier of R:];
  existence proof
  set cR = center R; set ccR = the carrier of cR;
  set ccs = the carrier of R;
  set lm = (the mult of R)|[:ccR, ccs:];
  A1: ccR c= the carrier of R by Th17;
  A2: dom (the mult of R) = [:the carrier of R,the carrier of R:]
      by FUNCT_2:def 1;
          [:ccR, ccs:] c= [:the carrier of R,the carrier of R:] proof
         let x be set;  assume x in [:ccR, ccs:];
          then consider x1, x2 being set such that
      A3: x1 in ccR and
      A4: x2 in ccs and
      A5: x = [x1,x2] by ZFMISC_1:def 2;
         thus thesis by A1,A3,A4,A5,ZFMISC_1:def 2;
      end;
  then A6: dom lm = [:ccR, ccs:] by A2,RELAT_1:91;
       now let x be set; assume
   A7: x in [:ccR, ccs:];
     then consider x1, x2 being set such that
   A8: x1 in ccR and
   A9: x2 in ccs and
   A10: x = [x1,x2] by ZFMISC_1:def 2;
     reconsider x1 as Element of R by A1,A8;
     reconsider x2 as Element of R by A9;
         lm.x = x1*x2 by A7,A10,FUNCT_1:72;
    hence lm.x in ccs;
   end;
  then reconsider lm  as Function of [:ccR,ccs:], ccs by A6,FUNCT_2:5;
   set Vos = VectSpStr(#
     ccs,     the add of R,
     0.R,        lm #);
     set cV = the carrier of Vos;
     set aV = the add of Vos, ac = the add of R;
     set ZV = 0.Vos, Zc = 0.R;
A11: Vos is VectSp-like proof
     let x,y be Element of ccR, v,w be Element of cV;
     x in ccR & y in ccR;
     then reconsider xx=x, yy=y as Element of R by A1;
     reconsider vv=v, ww=w as Element of R;
   A12: the mult of cR =  (the mult of R)||ccR by Def4;
   A13: the add of cR = (the add of R)||ccR by Def4;
   A14: [x,w] in [:ccR,ccs:] by ZFMISC_1:def 2;
   A15: [x,v+w] in [:ccR,ccs:] by ZFMISC_1:def 2;
   A16: [y,v] in [:ccR,ccs:] by ZFMISC_1:def 2;
   A17: [x,v] in [:ccR,ccs:] by ZFMISC_1:def 2;
   A18: [x+y,v] in [:ccR,ccs:] by ZFMISC_1:def 2;
   A19: [x,y*v] in [:ccR,ccs:] by ZFMISC_1:def 2;
   A20: [y,v] in [:ccR,ccs:] by ZFMISC_1:def 2;
   A21: [x*y,v] in [:ccR,ccs:] by ZFMISC_1:def 2;
   A22: [x,y] in [:ccR,ccR:] by ZFMISC_1:def 2;
     thus x*(v+w) = xx*(vv+ww) by A15,FUNCT_1:72
     .= xx*vv+xx*ww by VECTSP_1:def 11
     .= (the add of R).[x*v,(the mult of R).[xx,ww]] by A17,FUNCT_1:72
     .= x*v+x*w by A14,FUNCT_1:72;
     thus (x+y)*v =
 (the mult of R).[(the add of cR).[x,y],vv] by A18,FUNCT_1:72
     .= (xx+yy)*vv by A13,A22,FUNCT_1:72
     .= xx*vv+yy*vv by VECTSP_1:def 12
     .= (the add of R).[x*v,(the mult of R).[yy,vv]] by A17,FUNCT_1:72
     .= x*v+y*v by A16,FUNCT_1:72;
     thus (x*y)*v =
 (the mult of R).[(the mult of cR).(x,y),vv] by A21,FUNCT_1:72
     .= xx*yy*vv by A12,A22,FUNCT_1:72
     .= xx*(yy*vv) by GROUP_1:def 4
     .= (the mult of R).[xx,lm.(y,v)] by A20,FUNCT_1:72
     .= x*(y*v) by A19,FUNCT_1:72;
         1_R in center R by Th20; then 1_R in ccR by STRUCT_0:def 5;
   then A23: [1_ R,vv] in [:ccR, ccs:] by ZFMISC_1:def 2;
     thus (1_cR)*v = lm.(1_R,vv) by Def4
     .= (1_R)*vv by A23,FUNCT_1:72
     .= v by VECTSP_1:def 19;
   end;
A24: Vos is add-associative proof let u,v,w be Element of cV;
     reconsider uu=u,vv=v, ww=w as Element of ccs;
    thus (u + v) + w =
 uu+vv+ww         .= uu+(vv+ww) by RLVECT_1:def 6
        .= u + (v + w);
   end;
A25: Vos is right_zeroed proof let v be Element of cV;
     reconsider vv = v as Element of ccs;
    thus v + 0.Vos = vv+0.R .= v by RLVECT_1:def 7;
   end;
A26: Vos is right_complementable proof let v be Element of cV;
     reconsider vv = v as Element of ccs;
     consider ww being Element of ccs such that
   A27: vv + ww = 0.R by RLVECT_1:def 8;
     reconsider w = ww as Element of cV;
         v+w = 0.Vos by A27;
     hence ex w being Element of cV st v + w = 0.Vos;
   end;
    Vos is Abelian proof let v,w be Element of cV;
     reconsider vv = v, ww = w as Element of ccs;
    thus v+w = ww + vv by RLVECT_1:5
            .= w+v;
   end;
   hence thesis by A11,A24,A25,A26;
  end;
  uniqueness;
end;

theorem  Th32: :: CardCenter1:
for R being finite Skew-Field
 holds card the carrier of R =
     (card (the carrier of center R)) |^ (dim VectSp_over_center R)
proof let R be finite Skew-Field;
    set Z = center R;    set cZ = the carrier of Z;    set q = card cZ;
    set vR = VectSp_over_center R;     set n = dim vR;
    A1: the LoopStr of vR = the LoopStr of R by Def6;
    reconsider cvRS = [#]the carrier of vR as Subset of vR;
    consider B being Basis of vR;
    B is finite by A1,FINSET_1:13;
    then vR is finite-dimensional by VECTSP_9:def 1;
  hence thesis by A1,Th16;
end;

theorem  Th33: :: DimCenter:
for R being finite Skew-Field holds 0 < dim VectSp_over_center R
proof let R be finite Skew-Field;
    set q = card the carrier of center R;    set n = dim VectSp_over_center R;
    set Rs = MultGroup R;
        card the carrier of R = q |^ n by Th32;
then A1: ord Rs = (q |^ n) - 1 by UNIROOTS:21;
       now assume A2: n = 0;      q |^ n = q #Z n by PREPOWER:46;
         then ord Rs = 1 - 1 by A1,A2,PREPOWER:44;
       hence contradiction by GROUP_1:90;
    end;
  hence thesis;
end;

definition let R be Skew-Field, s be Element of R;
  func VectSp_over_center s -> strict VectSp of center R means :Def7:
  the LoopStr of it = the LoopStr of centralizer s &
  the lmult of it = (the mult of R)
                 | [:the carrier of center R, the carrier of centralizer s:];
  existence proof
  set cR = center R; set ccR = the carrier of cR;
  set cs = centralizer s; set ccs = the carrier of cs;
  set lm = (the mult of R)|[:ccR, ccs:];
  A1: ccR c= the carrier of R by Th17;
  A2: ccs c= the carrier of R by Th24;
  A3: dom (the mult of R) = [:the carrier of R,the carrier of R:]
      by FUNCT_2:def 1;
          [:ccR, ccs:] c= [:the carrier of R,the carrier of R:] proof
         let x be set;  assume x in [:ccR, ccs:];
          then consider x1, x2 being set such that
      A4: x1 in ccR and
      A5: x2 in ccs and
      A6: x = [x1,x2] by ZFMISC_1:def 2;
         thus thesis by A1,A2,A4,A5,A6,ZFMISC_1:def 2;
      end;
  then A7: dom lm = [:ccR, ccs:] by A3,RELAT_1:91;
       now let x be set; assume
   A8: x in [:ccR, ccs:];
     then consider x1, x2 being set such that
   A9: x1 in ccR and
   A10: x2 in ccs and
   A11: x = [x1,x2] by ZFMISC_1:def 2;
     reconsider x1 as Element of R by A1,A9;
     reconsider x2 as Element of R by A2,A10;
         lm.x = x1*x2 by A8,A11,FUNCT_1:72;
    hence lm.x in ccs by A9,A10,Th27;
   end;
  then reconsider lm  as Function of [:ccR,ccs:], ccs by A7,FUNCT_2:5;
   set Vos = VectSpStr(#
     the carrier of centralizer s,     the add of centralizer s,
     0.centralizer s,        lm #);
     set cV = the carrier of Vos;
     set aV = the add of Vos, ac = the add of centralizer s;
     set ZV = 0.Vos, Zc = 0.centralizer s;
A12: Vos is VectSp-like proof
     let x,y be Element of ccR, v,w be Element of cV;
     x in ccR & y in ccR;
     then reconsider xx=x, yy=y as Element of R by A1;
      v in ccs & w in ccs;
     then reconsider vv=v, ww=w as Element of R by A2;
   A13: the mult of cR =  (the mult of R)||ccR by Def4;
   A14: the add of cR = (the add of R)||ccR by Def4;
   A15: the add of cs = (the add of R)||ccs by Def5;
   A16: [x,w] in [:ccR,ccs:] by ZFMISC_1:def 2;
   A17: [x,v+w] in [:ccR,ccs:] by ZFMISC_1:def 2;
   A18: [v,w] in [:ccs,ccs:] by ZFMISC_1:def 2;
   A19: [y,v] in [:ccR,ccs:] by ZFMISC_1:def 2;
   A20: [x,v] in [:ccR,ccs:] by ZFMISC_1:def 2;
   A21: [x+y,v] in [:ccR,ccs:] by ZFMISC_1:def 2;
   A22: [x,y*v] in [:ccR,ccs:] by ZFMISC_1:def 2;
   A23: [y,v] in [:ccR,ccs:] by ZFMISC_1:def 2;
   A24: [x*y,v] in [:ccR,ccs:] by ZFMISC_1:def 2;
   A25: [x,y] in [:ccR,ccR:] by ZFMISC_1:def 2;
A26:  [x*v,x*w] in [:ccs,ccs:] by ZFMISC_1:def 2;
A27:  [x*v,y*v] in [:ccs,ccs:] by ZFMISC_1:def 2;
     thus x*(v+w) = (the mult of R).[x,aV.[v,w]] by A17,FUNCT_1:72
     .= xx*(vv+ww) by A15,A18,FUNCT_1:72
     .= xx*vv+xx*ww by VECTSP_1:def 11
     .= (the add of R).[x*v,(the mult of R).[xx,ww]] by A20,FUNCT_1:72
     .= (the add of R).[x*v,x*w] by A16,FUNCT_1:72
     .= x*v+x*w by A15,A26,FUNCT_1:72;
     thus (x+y)*v =
 (the mult of R).[(the add of cR).[x,y],vv] by A21,FUNCT_1:72
     .= (xx+yy)*vv by A14,A25,FUNCT_1:72
     .= xx*vv+yy*vv by VECTSP_1:def 12
     .= (the add of R).[x*v,(the mult of R).[yy,vv]] by A20,FUNCT_1:72
     .= (the add of R).[x*v,lm.(y,v)] by A19,FUNCT_1:72
     .= x*v+y*v by A15,A27,FUNCT_1:72;
     thus (x*y)*v =
 (the mult of R).[(the mult of cR).(x,y),vv] by A24,FUNCT_1:72
     .= xx*yy*vv by A13,A25,FUNCT_1:72
     .= xx*(yy*vv) by GROUP_1:def 4
     .= (the mult of R).[xx,lm.(y,v)] by A23,FUNCT_1:72
     .= x*(y*v) by A22,FUNCT_1:72;
         1_R in center R by Th20; then 1_R in ccR by STRUCT_0:def 5;
     then A28: [1_R,vv] in [:ccR, ccs:] by ZFMISC_1:def 2;
     thus (1_cR)*v = lm.(1_R,vv) by Def4
     .= (1_R)*vv by A28,FUNCT_1:72
     .= v by VECTSP_1:def 19;
   end;
A29: Vos is add-associative proof let u,v,w be Element of cV;
     reconsider uu=u,vv=v, ww=w as Element of ccs;
    thus (u + v) + w =
 uu+vv+ww         .= uu+(vv+ww) by RLVECT_1:def 6
        .= u + (v + w);
   end;
A30: Vos is right_zeroed proof let v be Element of cV;
     reconsider vv = v as Element of ccs;
    thus v + 0.Vos = vv+0.cs .= v by RLVECT_1:def 7;
   end;
A31: Vos is right_complementable proof let v be Element of cV;
     reconsider vv = v as Element of ccs;
     consider ww being Element of ccs such that
   A32: vv + ww = 0.cs by RLVECT_1:def 8;
     reconsider w = ww as Element of cV;
         v+w = 0.Vos by A32;
     hence ex w being Element of cV st v + w = 0.Vos;
   end;
    Vos is Abelian proof let v,w be Element of cV;
     reconsider vv = v, ww = w as Element of ccs;
    thus v+w = ww + vv by RLVECT_1:5
            .= w+v;
   end;
   hence thesis by A12,A29,A30,A31;
  end;
  uniqueness;
end;

theorem  Th34: :: CardCentral:
for R being finite Skew-Field, s being Element of R
  holds card the carrier of (centralizer s) =
        (card (the carrier of center R)) |^ (dim VectSp_over_center s)
proof let R be finite Skew-Field, s be Element of R;
    set Z = center R;
    set cZ = the carrier of Z;
    set q = card cZ;
    set vR = VectSp_over_center s;
    A1: the LoopStr of vR = the LoopStr of centralizer s by Def7;
    set n = dim vR;
    reconsider cvRS = [#]the carrier of vR as Subset of vR;
    consider B being Basis of vR;
    B is finite by A1,FINSET_1:13;
    then vR is finite-dimensional by VECTSP_9:def 1;
  hence thesis by A1,Th16;
end;

theorem  Th35: :: DimCentral:
for R being finite Skew-Field, s being Element of R
  holds 0 < dim VectSp_over_center s
proof let R be finite Skew-Field, s be Element of R;
    set q = card the carrier of center R;    set ns= dim VectSp_over_center s;
        now assume A1: ns = 0;      q |^ ns = q #Z ns by PREPOWER:46;
        then q |^ ns = 1 by A1,PREPOWER:44;
        then card the carrier of centralizer s = 1 by Th34;
      hence contradiction by Th29;
    end;
  hence thesis;
end;

theorem  Th36: :: Skew1:
for R being finite Skew-Field, r being Element of R
 st r is Element of MultGroup R
  holds
((card (the carrier of center R)) |^ (dim VectSp_over_center r) - 1) divides
((card (the carrier of center R)) |^ (dim VectSp_over_center R) - 1)
proof let R be finite Skew-Field, r be Element of R such that
A1: r is Element of MultGroup R;
    set G = MultGroup R;    set q = card (the carrier of center R);
    set qr= card (the carrier of centralizer r);
    set n = dim VectSp_over_center R;    set ns= dim VectSp_over_center r;
    reconsider s=r as Element of MultGroup R by A1;
        card the carrier of R = q |^ n by Th32;
    then ord G = (q |^ n) - 1 by UNIROOTS:21;
    then q |^ n - 1 = card con_class s * ord Centralizer s by Th13;
    then ord Centralizer s divides (q |^ n - 1) by INT_1:def 9;
    then (qr - 1) divides (q |^ n -1) by Th31;
  hence thesis by Th34;
end;

theorem  Th37: :: Skew2:
for R being finite Skew-Field, s being Element of R
 st s is Element of MultGroup R
  holds (dim VectSp_over_center s) divides (dim VectSp_over_center R)
proof let R be finite Skew-Field, s be Element of R such that
A1: s is Element of MultGroup R;
    set Vs= VectSp_over_center s;    set n = dim VectSp_over_center R;
    set ns= dim VectSp_over_center s;   set q = card the carrier of center R;
A2: n in NAT & ns in NAT by ORDINAL1:def 13;
A3: 0 < n & 0 < ns by Th33,Th35;
A4: 1 < q by Th21;
    then 0 < q |^ ns by PREPOWER:13; then 0+1 < q |^ ns + 1 by XREAL_1:10;
then A5: 1 <= q |^ ns by NAT_1:13;
        0 < q |^ n by A4,PREPOWER:13; then 0+1 < q |^ n + 1 by XREAL_1:10;
then 1 <= q |^ n by NAT_1:13;
then A6: (q |^ n - 1) = (q |^ n -' 1) by BINARITH:50;
A7: (q |^ ns - 1) = (q |^ ns -' 1) by A5,BINARITH:50;
        (q |^ ns - 1) divides (q |^ n - 1) by A1,Th36;
  hence thesis by A2,A3,A4,A6,A7,Th3;
end;

theorem  Th38: :: MGC1:
for R being finite Skew-Field holds
  card the carrier of center MultGroup R = card (the carrier of center R) - 1
proof let R be finite Skew-Field;
   A1: the carrier of MultGroup R = (the carrier of R) \ {0.R}
     by UNIROOTS:def 1;
       the carrier of center MultGroup R c= the carrier of MultGroup R
   by GROUP_2:def 5;
then A2: not 0.R in the carrier of center MultGroup R by A1,ZFMISC_1:64;
      the carrier of center R = (the carrier of center MultGroup R) \/ {0.R}
  by Th23;
  then card the carrier of center R = card (the carrier of center MultGroup
R) + 1
   by A2,CARD_2:54;
 hence thesis;
end;

begin :: Witt's proof of Wedderburn's theorem

theorem
    for R being finite Skew-Field holds R is commutative
proof let R be finite Skew-Field such that
A1: not R is commutative;

set Z = center R;                    set cZ = the carrier of Z;
set q = card cZ;                     set vR = VectSp_over_center R;
set n = dim vR;                      set Rs = MultGroup R;
set cR = the carrier of R;           set cRs = the carrier of Rs;
set cZs = the carrier of center Rs;

A2: card cR = q |^ n by Th32;
then A3: ord Rs = (q |^ n) - 1 by UNIROOTS:21;
A4: 1 < q  by Th21;
      then A5: 1+-1 < q + -1 by XREAL_1:10;
    then reconsider natq1 = q - 1 as Element of NAT by INT_1:16;
   0 < n by Th33; then 0+1 < n + 1 by XREAL_1:10;
then A6: 1 <= n by NAT_1:13;
        now assume A7: n = 1;
          card cR = (q #Z n ) by A2,PREPOWER:46;
      then card cR = q by A7,PREPOWER:45;
     hence contradiction by A1,Th22;
    end;
then A8: 1 < n by A6,REAL_1:def 5;
    set A = {X where X is Subset of cRs :
                     X in conjugate_Classes Rs & card X = 1};
    set B = conjugate_Classes Rs \ A;
        for x being set st x in A holds x in conjugate_Classes Rs
    proof let x be set; assume x in A;
        then ex y being Subset of cRs
         st x=y & y in conjugate_Classes Rs & Card y = 1;
     hence thesis;
    end;
then A9: A c= conjugate_Classes Rs by TARSKI:def 3;
then A10: conjugate_Classes Rs = A \/ B by XBOOLE_1:45;
    consider f being Function such that
A11: dom f = cZs and
A12: for x being set st x in cZs holds f.x = {x} from FUNCT_1:sch 3;
A13: f is one-to-one proof let x1,x2 be set;
      assume x1 in dom f & x2 in dom f & f.x1 = f.x2;
        then f.x1 = {x1} & f.x2 = {x2} & f.x1 = f.x2 by A11,A12;
      hence x1 = x2 by ZFMISC_1:6;
     end;
         now let x be set;
      hereby assume x in rng f; then consider xx being set such that
     A14: xx in dom f and
     A15: x = f.xx by FUNCT_1:def 5;
     A16: x = {xx} by A11,A12,A14,A15;
     A17: cZs c= cRs by GROUP_2:def 5;
         then reconsider X = x as Subset of cRs by A11,A14,A16,ZFMISC_1:37;
         reconsider xx as Element of Rs by A11,A14,A17;
             xx in center Rs by A11,A14,STRUCT_0:def 5;
         then con_class xx = {xx} by GROUP_5:93;
     then A18: X in conjugate_Classes Rs by A16;      card X = 1 by A16,
CARD_1:79;
       hence x in A by A18;
      end;
      assume x in A; then consider X being Subset of cRs such that
     A19: x = X and
     A20: X in conjugate_Classes Rs and
     A21: card X = 1;
          consider a being Element of cRs such that
     A22: con_class a = X by A20,Th14;
     A23: a in con_class a by GROUP_3:98;
         consider xx being set such that
     A24: X = {xx} by A21,CARD_2:60;
     A25: a = xx by A22,A23,A24,TARSKI:def 1;
         then a in center Rs by A22,A24,GROUP_5:93;
     then A26: a in cZs by STRUCT_0:def 5; then f.a = {a} by A12;
      hence x in rng f by A11,A19,A24,A25,A26,FUNCT_1:12;
     end;
then rng f = A by TARSKI:2;
then A27: A, cZs are_equipotent by A11,A13,WELLORD2:def 4;
        card cZs = natq1 by Th38;
then A28: Card A = natq1 by A27,CARD_1:21;
        A is finite by A9,FINSET_1:13;
    then consider f1 being FinSequence such that
A29: rng f1 = A and A30: f1 is one-to-one by FINSEQ_4:73;
    consider f2 being FinSequence such that
A31: rng f2 = B and A32: f2 is one-to-one by FINSEQ_4:73;
    set f = f1^f2;
A33: rng f = conjugate_Classes Rs by A10,A29,A31,FINSEQ_1:44;
        now given x being set such that
    A34: x in A /\ B;     x in A & x in B by A34,XBOOLE_0:def 3;
     hence contradiction by XBOOLE_0:def 4;
    end;
    then A /\ B = {} by XBOOLE_0:def 1;
    then rng f1 misses rng f2 by A29,A31,XBOOLE_0:def 7;
then A35: f is one-to-one FinSequence of conjugate_Classes Rs
            by A30,A32,A33,FINSEQ_1:def 4,FINSEQ_3:98;
    deffunc F(set) = Card(f1.$1);
    consider p1 being FinSequence such that
A36: len p1 = len f1 &
    for i being Nat st i in Seg len f1 holds p1.i = F(i)
    from FINSEQ_1:sch 2;
A37: dom p1 = Seg len f1 by A36,FINSEQ_1:def 3;
        for x being set st x in rng p1 holds x in NAT proof let x be set such
that
    A38: x in rng p1;
        consider i being Nat such that
    A39: i in dom p1 & p1.i = x by A38,FINSEQ_2:11;
    A40: x = Card(f1.i) by A36,A37,A39;
            i in dom f1 by A36,A39,FINSEQ_3:31; then f1.i in A by A29,
FUNCT_1:12;
        then consider X being Subset of cRs such that
    A41: f1.i = X & X in conjugate_Classes Rs & card X = 1;
     thus thesis by A40,A41;
    end;
    then rng p1 c= NAT by TARSKI:def 3;
    then reconsider c1=p1 as FinSequence of NAT by FINSEQ_1:def 4;
A42: len c1 = natq1 by A28,A29,A30,A36,FINSEQ_4:77;
A43: for i being Element of NAT st i in dom c1 holds c1.i = 1 proof
      let i be Element of NAT such that
     A44: i in dom c1;
             i in dom f1 by A36,A44,FINSEQ_3:31; then f1.i in A by A29,
FUNCT_1:12;
         then ex X being Subset of cRs
               st f1.i = X & X in conjugate_Classes Rs & card X = 1;
      hence thesis by A36,A37,A44;
     end;
         for x being set st x in rng c1 holds x in {1} proof
      let x be set; assume x in rng c1;
      then consider i being Nat such that
     A45: i in dom c1 & x = c1.i by FINSEQ_2:11;
             x = 1 by A43,A45;
       hence thesis by TARSKI:def 1;
      end;
then A46: rng c1 c= {1} by TARSKI:def 3;
         for x being set st x in {1} holds x in rng c1 proof
      let x be set such that
     A47: x in {1};
             Seg len c1 = dom c1 by FINSEQ_1:def 3;
     then A48: len c1 in dom c1 by A5,A42,FINSEQ_1:5;
         then c1.(len c1) = 1 by A43; then c1.(len c1) = x by A47,TARSKI:def 1;
      hence thesis by A48,FUNCT_1:12;
     end;
     then {1}c= rng c1 by TARSKI:def 3; then rng c1={1} by A46,XBOOLE_0:def 10;
     then c1 = (dom c1) --> 1 by FUNCOP_1:15;
     then c1 = Seg (len c1) --> 1 by FINSEQ_1:def 3;
     then c1 = (len c1) |-> 1 by FINSEQ_2:def 2;
     then Sum c1 = (len c1)*1 by RVSUM_1:110;
then A49: Sum c1 = natq1 by A28,A29,A30,A36,FINSEQ_4:77;
     deffunc P2(set) = Card(f2.$1);
     consider p2 being FinSequence such that
A50: len p2 = len f2 &
     for i being Nat st i in Seg len f2 holds p2.i = P2(i)
     from FINSEQ_1:sch 2;
A51: dom p2 = Seg len f2 by A50,FINSEQ_1:def 3;
        for x being set st x in rng p2 holds x in NAT proof
     let x be set; assume x in rng p2;
     then consider i being Nat such
that
    A52: i in dom p2 & p2.i = x by FINSEQ_2:11;
    A53: x = Card(f2.i) by A50,A51,A52;
            i in dom f2 by A50,A52,FINSEQ_3:31;
        then f2.i in conjugate_Classes Rs \ A by A31,FUNCT_1:12;
        then f2.i in conjugate_Classes Rs by XBOOLE_0:def 4;
        then consider a being Element of cRs such that
    A54: con_class a = f2.i by Th14;
            card con_class a is Element of NAT;
     hence thesis by A53,A54;
    end; then rng p2 c= NAT by TARSKI:def 3;
    then reconsider c2=p2 as FinSequence of NAT by FINSEQ_1:def 4;
    set c = c1^c2;
    reconsider c as FinSequence of NAT;
        len c = len f1 + len f2 by A36,A50,FINSEQ_1:35;
then A55: len c = len f by FINSEQ_1:35;
        for i being Element of NAT st i in dom c holds c.i = Card (f.i) proof
     let i be Element of NAT such that
    A56: i in dom c;
            now per cases by A56,FINSEQ_1:38;
         suppose A57: i in dom c1;
         then A58: i in dom f1 by A36,FINSEQ_3:31;
                 c.i = c1.i by A57,FINSEQ_1:def 7 .= Card(f1.i) by A36,A37,A57
               .= Card(f.i) by A58,FINSEQ_1:def 7;
          hence thesis;
         end;
         suppose ex j being Nat st j in dom c2 & i = len c1 + j;
             then consider j being Nat such that
         A59: j in dom c2 and A60: i = len c1 + j;
         A61: j in dom f2 by A50,A59,FINSEQ_3:31;
                 c.i = c2.j by A59,A60,FINSEQ_1:def 7 .= Card(f2.j) by A50,A51
,A59
                .= Card(f.i) by A36,A60,A61,FINSEQ_1:def 7;
          hence thesis;
        end;
        end;
     hence thesis;
    end;
then ord Rs = Sum c by A33,A35,A55,Th15;
then A62: (q |^ n) - 1 = Sum c2 + (q - 1) by A3,A49,RVSUM_1:105;
    reconsider q as non empty Element of NAT by Th21;
    reconsider n as non empty Element of NAT by Th33,ORDINAL1:def 13;
     q in COMPLEX by XCMPLX_0:def 2;
    then reconsider qc=q as Element of F_Complex by COMPLFLD:def 1;
    set pnq = eval(cyclotomic_poly n,qc);
    reconsider pnq as Integer by UNIROOTS:56;
    reconsider abspnq = abs(pnq) as Element of NAT;
    reconsider nataq1 = abs(q-1) as Element of NAT;
        (q |^ n) <> 0 by PREPOWER:12; then (q |^ n) > 0;
    then (q |^ n)+1 > 0+1 by XREAL_1:10; then (q |^ n) >= 1 by NAT_1:13;
    then (q |^ n) +- 1 >= 1 +- 1 by XREAL_1:9;
    then reconsider qn1=((q |^ n) - 1) as Element of NAT by INT_1:16;
        pnq divides (q |^ n) - 1 by UNIROOTS:62;
    then abspnq divides abs((q |^ n) - 1) by INT_2:21;
then A63: abspnq divides qn1 by ABSVALUE:def 1;
        for i being Element of NAT st i in dom c2 holds abspnq divides c2/.i
       proof
     let i be Element of NAT such that A64: i in dom c2;
             c2.i = Card (f2.i) by A50,A51,A64;
    then A65: c2/.i = Card (f2.i) by A64,PARTFUN1:def 8;
    A66: i in dom f2 by A50,A64,FINSEQ_3:31;
         then f2.i in conjugate_Classes Rs \ A by A31,FUNCT_1:12;
         then f2.i in conjugate_Classes Rs & not f2.i in A by XBOOLE_0:def 4;
         then consider a being Element of cRs such that
    A67: con_class a = f2.i by Th14;
        reconsider a as Element of Rs;
        reconsider s=a as Element of R by UNIROOTS:22;
        set ns = dim VectSp_over_center s; set ca = card con_class a;
        set oa = ord Centralizer a;
    A68: ord Rs = ca * oa + 0 by Th13; A69: 0 < oa by GROUP_1:90;
        then A70: (ord Rs) div oa = ca by A68,NAT_D:def 1;
    A71: qn1 div oa = ca by A3,A68,A69,NAT_D:def 1;
            (q |^ ns) <> 0 by PREPOWER:12; then (q |^ ns) > 0;
        then (q |^ ns)+1 > 0+1 by XREAL_1:10; then (q |^ ns) >= 1 by NAT_1:13
;
        then (q |^ ns) +- 1 >= 1 +- 1 by XREAL_1:9;
        then reconsider qns1=(q |^ ns - 1) as Element of NAT by INT_1:16;
        A72: oa = (card the carrier of (centralizer s)) - 1 by Th31
          .= qns1 by Th34;
        reconsider ns as non empty Element of NAT by Th35,ORDINAL1:def 13;
    A73: ns divides n by Th37;
    then A74: ns <= n by NAT_D:7;
            now assume A75: ns = n;
         qn1 <> 0 by A4,PEPIN:26;
        then A76: Card (f2.i) = 1 by A3,A67,A70,A72,A75,NAT_2:5;
                f2.i in B by A31,A66,FUNCT_1:12;
        then f2.i in conjugate_Classes Rs & not f2.i in A by XBOOLE_0:def 4;
         hence contradiction by A76;
        end;
        then ns < n by A74,REAL_1:def 5;
        then pnq divides ((qn1 qua Integer) div qns1) by A73,UNIROOTS:63;
        then abspnq divides abs(qn1 div qns1) by INT_2:21;
     hence thesis by A65,A67,A71,A72,ABSVALUE:def 1;
    end;
    then abspnq divides Sum c2 by Th5;
then A77: abspnq divides natq1 by A62,A63,NAT_D:10;
        abspnq > q - 1 by A4,A8,UNIROOTS:64;
 hence contradiction by A5,A77,NAT_D:7;
end;

theorem
   for R being Skew-Field holds 1.center R = 1.R by Def4;

theorem
   for R being Skew-Field, s being Element of R holds 1.centralizer s = 1.R
               by Def5;
