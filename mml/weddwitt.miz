:: Witt's Proof of the {W}edderburn Theorem
::  by Broderic Arneson , Matthias Baaz and Piotr Rudnicki
::
:: Received December 30, 2003
:: Copyright (c) 2003 Association of Mizar Users

environ

 vocabulary WEDDWITT, ARYTM_1, ARYTM_3, FINSEQ_1, RELAT_1, FUNCT_1, RLVECT_1,
      BOOLE, FINSEQ_2, FINSEQ_4, COMPLEX1, BINOP_1, VECTSP_1, LATTICES,
      COMPLFLD, GROUP_1, REALSET1, INT_1, NAT_1, TARSKI, CARD_1, GROUP_2,
      POLYNOM2, FUNCT_4, VECTSP_2, FUNCOP_1, SEQ_1, FUNCT_2, ABSVALUE,
      UNIROOTS, PREPOWER, FINSET_1, CAT_1, RLSUB_1, GROUP_5, RLVECT_2,
      SETFAM_1, VECTSP_9, RLVECT_3, MATRLIN, SUBSET_1, EQREL_1, GROUP_3;
 notation TARSKI, XBOOLE_0, SUBSET_1, STRUCT_0, NUMBERS, ARYTM_0, XREAL_0,
      ZFMISC_1, REAL_1, INT_1, INT_2, NAT_1, RLVECT_1, VECTSP_1, VECTSP_2,
      BINOP_1, RELAT_1, FUNCT_1, FUNCT_2, FINSEQ_1, FINSEQ_2, FINSEQ_4,
      BINARITH, RVSUM_1, COMPLFLD, POLYNOM4, CARD_1, GROUP_2, PREPOWER,
      FINSET_1, GROUP_1, FUNCT_4, CQC_LANG, WSIERP_1, UNIROOTS, SETFAM_1,
      VECTSP_6, VECTSP_7, GROUP_3, GROUP_5, VECTSP_9, EQREL_1, FRAENKEL,
      FUNCOP_1, VECTSP_4, EULER_2;
 constructors ARYTM_0, REAL_1, MONOID_0, WELLORD2, INT_2, COMPLSP1, BINARITH,
      POLYNOM4, COMPLEX1, POLYNOM5, PREPOWER, DOMAIN_1, PRE_CIRC, FINSEQOP,
      ALGSTR_1, RLVECT_2, CQC_LANG, WSIERP_1, UPROOTS, UNIROOTS, BINOP_1,
      VECTSP_6, VECTSP_7, VECTSP_9, GROUP_5, EQREL_1, EULER_2, BINOP_2;
 clusters STRUCT_0, RELSET_1, BINARITH, VECTSP_1, VECTSP_2, FINSEQ_2, POLYNOM1,
      MONOID_0, NAT_1, INT_1, POLYNOM5, FINSEQ_1, FINSET_1, CARD_1, FSM_1,
      FUNCT_1, NUMBERS, SUBSET_1, ORDINAL2, CQC_LANG, UNIROOTS, GROUP_2,
      REAL_1, FUNCOP_1;
 requirements NUMERALS, BOOLE, SUBSET, ARITHM, REAL;
 definitions TARSKI, VECTSP_1, FUNCT_1, RLVECT_1;
 theorems GROUP_1, CARD_1, FINSEQ_1, ZFMISC_1, NAT_1, FUNCT_1, FUNCT_2,
      RELAT_1, TARSKI, XBOOLE_0, XBOOLE_1, VECTSP_1, PREPOWER, RELSET_1,
      COMPLFLD, BINOP_1, REAL_1, XCMPLX_1, REAL_2, INT_1, SCMFSA_7, AMI_5,
      AXIOMS, RVSUM_1, FINSEQ_3, FINSEQ_2, FINSEQ_4, INT_2, SCMFSA9A, SCPINVAR,
      ABSVALUE, WSIERP_1, NAT_2, PEPIN, FUNCT_7, RLVECT_1, NEWTON, FINSET_1,
      CARD_4, FUNCOP_1, VECTSP_2, CARD_2, GRAPH_5, SUBSET_1, CQC_LANG,
      WELLORD2, EULER_2, FUNCT_5, AFINSQ_1, FUNCT_4, GROUP_2, VECTSP_4,
      VECTSP_7, VECTSP_9, EQREL_1, SETFAM_1, GROUP_3, FRAENKEL, VECTSP_6,
      GROUP_5, UNIROOTS;
 schemes NAT_1, FUNCT_1, FUNCT_2, FINSEQ_1;

begin :: Preliminaries

theorem Th1: :: Th1:
for a being Nat, q being Real st 1 < q & q |^ a = 1 holds a = 0
proof let a be Nat, q be Real such that
A1: 1 < q and
A2: (q |^ a) = 1 and
A3: a <> 0;
       a < 1 + 1 by A1,A2,PREPOWER:21;
then A4: a <= 0 + 1 by NAT_1:38;
       0 < a by A3,NAT_1:19; then a = 1 by A4,NAT_1:26;
then (q #Z a) = q by PREPOWER:45;
 hence contradiction by A1,A2,PREPOWER:46;
end;

theorem Th2: :: Th2:
for a, k, r being Nat, x being Real
 st 1 < x & 0 < k holds x |^ (a*k + r) = (x |^ a)*(x |^ (a*(k-'1)+r))
proof let a,k,r be Nat, x be Real such that
A1: 1 < x and
A2: 0 < k;
A3: 0 <> x by A1;
    set xNak = x |^ (a*k + r);
       0+1 <= k by A2,NAT_1:38; then k = k-'1+1 by AMI_5:4;
    then xNak = (x #Z (a + (a*(k-'1)+r))) by PREPOWER:46;
    then xNak = (x #Z a)*(x #Z (a*(k-'1)+r)) by A3,PREPOWER:54;
    then xNak = (x |^ a)*(x #Z (a*(k-'1)+r)) by PREPOWER:46;
    hence thesis by PREPOWER:46;
end;

theorem Th3: :: Th3:
for q, a, b being Nat
  st 0 < a & 1 < q & (q |^ a) -' 1 divides (q |^ b)-'1 holds a divides b
proof let q,a,b be Nat such that
A1: 0 < a and
A2: 1 < q and
A3: (q |^ a)-'1 divides (q |^ b)-'1;
A4: 0 <> q by A2;
then A5: 0 < q by NAT_1:19;
     set r = b mod a; set qNa = q |^ a; set qNr = q |^ r;
     defpred P[Nat] means qNa-'1 divides (q |^ (a*$1 + r))-'1;
A6:  b = a*(b div a) + r by A1,NAT_1:47;
then A7:  ex k being Nat st P[k] by A3;
     consider k being Nat such that
A8: P[k] and
A9: for n being Nat st P[n] holds k <= n from NAT_1:sch 5(A7);
       now per cases;
        suppose A10: k = 0;
        A11: now assume A12: 0 <> qNr-'1;
            then A13: 0 < qNr-'1 by NAT_1:19;    qNr <> 0 by A12,NAT_2:10;
            then A14: 0 < qNr by NAT_1:19;    r < a by A1,NAT_1:46;
                then consider m being Nat such that
            A15: a = r + m by NAT_1:28;
            A16: m <> 0 by A1,A15,NAT_1:46;
            A17: (q |^ (r + m)) = (q #Z (r + m)) by PREPOWER:46;
            A18: (q #Z (r + m)) = (q #Z r)*(q #Z m) by A4,PREPOWER:54;
            A19: (q #Z r) = (q |^ r) by PREPOWER:46;
            A20: (q #Z m) = (q |^ m) by PREPOWER:46;
                    0 < q by A4,NAT_1:19;
            then A21: (q #Z r) > 0 by PREPOWER:49;
            A22:(q |^ m) >= 1 by A2,PREPOWER:19;
                   (q |^ m) <> 1 by A2,A16,Th1;
                then (q |^ m) > 1 by A22,REAL_1:def 5;
            then A23: qNr < qNa by A15,A17,A18,A19,A20,A21,REAL_2:144;
                then 0 < qNa by A14,AXIOMS:22; then 0+1 <= qNa by NAT_1:38;
                then qNa-'1 = qNa-1 by SCMFSA_7:3;
            then A24: qNa-'1 = qNa+(-1);
                   0+1 <= qNr by A14,NAT_1:38; then qNr-'1 = qNr-1 by SCMFSA_7
:3
;
                then qNr-'1 = qNr+(-1);
                then qNr-'1 < qNa-'1 by A23,A24,REAL_1:67;
                hence contradiction by A8,A10,A13,NAT_1:54;
            end;     0 < qNr by A5,PREPOWER:13; then 0+1<=qNr by NAT_1:38;
        then qNr-1+1 = 1 by A11,SCMFSA_7:3; then r = 0 by A2,Th1;
        hence a divides b by A6,NAT_1:49;
        end;
        suppose A25: k <> 0;
       then A26: 0 < k by NAT_1:19;  consider j being Nat such that
        A27: k = j + 1 by A25,NAT_1:22;
       A28: k-1 = j by A27;     0+1<=k by A26,NAT_1:38;
       then A29: k-'1 = j by A28,SCMFSA_7:3;
            set qNaj = (q |^ (a*j + r)); set qNak = (q |^ (a*k + r));
            set qNak1= (q |^ (a*(k-'1)+r));
               j < k by A27,REAL_1:69;
        then A30: not qNa-'1 divides qNaj-'1 by A9;
        A31: (qNa-'1) divides (qNak-'1 qua Integer) by A8,SCPINVAR:2;
               (qNa-'1) divides -(qNa-'1) by INT_2:14;
            then (qNa-'1) divides (qNak-'1)+(-(qNa-'1)) by A31,WSIERP_1:9
;
        then A32: (qNa-'1) divides (qNak-'1) - (qNa-'1);
        A33: 0 < qNak by A5,PREPOWER:13;
        A34: 0 < qNa  by A5,PREPOWER:13;    0+1<=qNak by A33,NAT_1:38;
        then A35: (qNak-'1)=(qNak-1) by SCMFSA_7:3;
              A36: 0+1<=qNa by A34,NAT_1:38;
               (qNak-1) - (qNa-1) = qNak-qNa;
            then (qNak-1) - (qNa-1) = qNa*qNak1-qNa*1 by A2,A26,Th2;
        then A37: (qNak-'1)-(qNa-'1) = qNa*(qNak1-1) by A35,A36,SCMFSA_7:3;
               0 < qNak1 by A5,PREPOWER:13; then 0+1<= qNak1 by NAT_1:38;
        then A38: (qNak-'1)-(qNa-'1)= qNa*(qNak1-'1) by A37,SCMFSA_7:3;
               0 < qNa by A5,PREPOWER:13; then 0+1 <= qNa by NAT_1:38;
            then qNa-'1+1 = qNa by AMI_5:4;
            then qNa-'1,qNa are_relative_prime by PEPIN:1;
            then (qNa-'1 qua Integer),qNa are_relative_prime by EULER_2:1;
            then (qNa-'1 qua Integer) divides qNak1-'1 by A32,A38,INT_2:40
;
        hence a divides b by A29,A30,SCPINVAR:2;
    end;
    end;
    hence thesis;
end;

theorem Th4: :: Lm1:
for n, q being Nat st 0 < q holds Card Funcs(n,q) = q |^ n
proof let n,q be Nat such that A1: 0 < q;
    defpred P[Nat] means Card Funcs($1,q) = q|^$1;
A2: P[0] proof Funcs({},q) = {{}} by FUNCT_5:64;
      hence Card Funcs(0,q) = 1 by CARD_1:79 .= q #Z 0 by PREPOWER:44
            .= q |^ 0 by PREPOWER:46;
    end;
A3: for n being Nat st P[n] holds P[n+1]
    proof let n be Nat such that
    A4: P[n];
        reconsider q' = q as non empty set by A1;
        defpred R[set, set] means
        ex x being Function of n+1,q st $1 = x & $2 = x | n;
    A5: for x being set st x in Funcs(n+1,q')
            ex y being set st y in Funcs(n,q') & R[x,y]
        proof let x be set such that A6: x in Funcs(n+1,q');
            consider f being Function such that
        A7: x = f and A8: dom f = n+1 & rng f c= q' by A6,FUNCT_2:def 2;
            reconsider f as Function of n+1,q' by A8,FUNCT_2:4;
               not n in n;
        then A9: n misses {n} by ZFMISC_1:56;
               (n+1) /\ n = (n \/ {n}) /\ n by AFINSQ_1:4;
            then (n+1) /\ n = (n /\ n) \/ ({n} /\ n) by XBOOLE_1:23;
            then (n+1) /\ n = n \/ {} by A9,XBOOLE_0:def 7;
        then A10: dom (f|n) = n by A8,FUNCT_1:68;
               rng (f|n) c= rng f by FUNCT_1:76;
            then rng (f|n) c= q' by A8,XBOOLE_1:1;
            then (f|n) in Funcs(n,q') by A10,FUNCT_2:def 2;
            hence thesis by A7;
        end;
        consider G being Function of Funcs(n+1,q'), Funcs(n,q') such that
    A11: for x being set st x in Funcs(n+1,q') holds R[x,G.x] from FUNCT_2:sch
1
(A5);
    A12: rng G = Funcs(n,q')  proof
        A13: rng G c= Funcs(n,q') by RELSET_1:12;
               for x being set st x in Funcs(n,q')
              holds x in rng G
            proof let x be set such that A14: x in Funcs(n,q');
                consider y being set such that A15: y in q' by XBOOLE_0:def 1;
                reconsider g=x as Element of Funcs(n,q') by A14;
                set fx = g+* (n .--> y);
       for y being set st y in q holds g +* (n .--> y) in (G"{g})
        proof let y be set such that A16: y in q;
            consider f being Function such that
        A17: f = g+*(n.-->y);
        A18: dom g = n & dom (n.-->y) = {n} by CQC_LANG:5,FUNCT_2:def 1;
            then dom f = n \/ {n} by A17,FUNCT_4:def 1;
        then A19: dom f = n+1 by AFINSQ_1:4;
               rng (n.-->y) = {y} by CQC_LANG:5;
        then A20: rng f c= (rng g \/ {y}) by A17,FUNCT_4:18;
            consider gg being Function such that
        A21: gg = g & dom gg = n & rng gg c= q by FUNCT_2:def 2;
               {y} c= q by A16,ZFMISC_1:37;
            then (rng g \/ {y}) c= q by A21,XBOOLE_1:8;
            then rng f c= q by A20,XBOOLE_1:1;
        then A22: f in Funcs(n+1,q) by A19,FUNCT_2:def 2;
            then reconsider f as Function of n+1,q by FUNCT_2:121;
               not n in n; then n misses {n} by ZFMISC_1:56;
        then A23: f|n = g by A17,A18,FUNCT_4:34;           R[f,G.f] by A11,A22;
        then A24: G.f in {x} by A23,TARSKI:def 1;
               dom G = Funcs(n+1,q) by FUNCT_2:def 1;
            hence thesis by A17,A22,A24,FUNCT_1:def 13;
        end;
                then g +* (n .--> y) in (G"{g}) by A15;
                then consider b being set such that
            A25: b in rng G & [fx,b] in G & b in {g} by RELAT_1:166;
            A26: b in rng G & fx in dom G & G.fx = b by A25,FUNCT_1:8;
                  dom G = Funcs(n+1,q') by FUNCT_2:def 1;
                then R[fx,G.fx] by A11,A26;
            then A27: fx|n = b by A25,FUNCT_1:8;
            A28: dom g = n & dom (n .--> y) = {n} by CQC_LANG:5,FUNCT_2:def 1;
                   not n in n; then n misses {n} by ZFMISC_1:56;
                hence x in rng G by A25,A27,A28,FUNCT_4:34;
            end; then Funcs(n,q') c= rng G by TARSKI:def 3;
            hence thesis by A13,XBOOLE_0:def 10;
        end;
    A29: for x being Element of Funcs(n,q')
          holds G"{x} is finite & Card (G"{x}) = q
        proof let x be Element of Funcs(n,q');
        deffunc HH(set) = x +* (n .--> $1);
    A30: for y being set st y in q holds HH(y) in (G"{x})
        proof let y be set such that A31: y in q;
            consider f being Function such that
        A32: f = x+*(n.-->y);
        A33: dom x = n & dom (n.-->y) = {n} by CQC_LANG:5,FUNCT_2:def 1;
            then dom f = n \/ {n} by A32,FUNCT_4:def 1;
        then A34: dom f = n+1 by AFINSQ_1:4;
               rng (n.-->y) = {y} by CQC_LANG:5;
        then A35: rng f c= (rng x \/ {y}) by A32,FUNCT_4:18;
            consider gg being Function such that
        A36: gg = x & dom gg = n & rng gg c= q by FUNCT_2:def 2;
               {y} c= q by A31,ZFMISC_1:37;
            then (rng x \/ {y}) c= q by A36,XBOOLE_1:8;
            then rng f c= q by A35,XBOOLE_1:1;
        then A37: f in Funcs(n+1,q) by A34,FUNCT_2:def 2;
            then reconsider f as Function of n+1,q by FUNCT_2:121;
               not n in n; then n misses {n} by ZFMISC_1:56;
        then A38: f|n = x by A32,A33,FUNCT_4:34;               R[f,G.f] by A11,
A37;
        then A39: G.f in {x} by A38,TARSKI:def 1;
               dom G = Funcs(n+1,q) by FUNCT_2:def 1;
          hence thesis by A32,A37,A39,FUNCT_1:def 13;
        end;
            consider H being Function of q, (G"{x}) such that
        A40: for y being set st y in q holds H.y = HH(y) from FUNCT_2:sch 2(A30
);
        A41: for c being set st c in G"{x}  ex y being set st y in q & H.y = c
            proof let c be set; assume
            A42:  c in G"{x};
                 then consider f being Function of n+1,q' such that
            A43: c = f and
            A44: G.c = f|n by A11;
                 take y = f.n;
                    c in dom G & G.c in {x} by A42,FUNCT_1:def 13;
            then A45:  G.c = x by TARSKI:def 1;
                    n+1 = n \/ {n} by AFINSQ_1:4;
                 then dom f = n \/ {n} by FUNCT_2:def 1;
            then A46:  f = f|n +* (n .--> (f.n)) by FUNCT_7:15;
                    n in n+1 by AFINSQ_1:1;
             hence y in q by FUNCT_2:7;
             hence H.y = c by A40,A43,A44,A45,A46;
            end;
               {x}<>{} & {x} c= rng G by A12,ZFMISC_1:37;
        then A47: G"{x} <> {} by RELAT_1:174;
        then A48: rng H = G"{x} by A41,FUNCT_2:16;
        A49: dom H = q by A47,FUNCT_2:def 1;
               for x1,x2 being set st x1 in dom H & x2 in dom H & H.x1 = H.
x2
              holds x1 = x2
            proof let x1,x2 be set such that
            A50: x1 in dom H and A51: x2 in dom H and A52: H.x1 = H.x2;
            A53: H.x2 = x +* (n .--> x2) by A40,A49,A51;
            A54: dom (n .--> x1) = {n} & dom (n .--> x2) = {n} by CQC_LANG:5;
                set fx1 = x +* (n .--> x1);
                set fx2 = x +* (n .--> x2);
            A55: fx1 = fx2 by A40,A49,A50,A52,A53;
            A56: (n .--> x1).n = x1 & (n .--> x2).n = x2 by CQC_LANG:6;
            A57: n in {n} by TARSKI:def 1;
            then fx1.n = x1 by A54,A56,FUNCT_4:14;
                hence thesis by A54,A55,A56,A57,FUNCT_4:14;
            end;
            then H is one-to-one by FUNCT_1:def 8;
            then q, H.:q are_equipotent by A49,CARD_1:60;
            then q, rng H are_equipotent by A49,RELAT_1:146;
             then Card (G"{x}) = Card q by A48,CARD_1:21;
            hence thesis by CARD_1:66,CARD_4:1;
        end;
    A58: for x,y being set st x is Element of Funcs(n,q') &
        y is Element of Funcs(n,q') & x<>y holds (G"{x}) misses (G"{y})
        proof let x,y be set such that x is Element of Funcs(n,q') and
               y is Element of Funcs(n,q') and A59: x <> y;
               now assume not (G"{x}) misses (G"{y});
                then not (G"{x}) /\ (G"{y}) = {} by XBOOLE_0:def 7;
                then consider f being set such that
            A60: f in (G"{x} /\ G"{y}) by XBOOLE_0:def 1;
                 f in G"{x} by A60,XBOOLE_0:def 3;
            then A61: f in dom G & G.f in {x} by FUNCT_1:def 13;
                reconsider f as Function of n+1,q
                  by A60,FUNCT_2:121;
                   f in Funcs(n+1,q) by A1,FUNCT_2:11; then A62: R[f, G.f
] by A11;
            then A63: f|n = x by A61,TARSKI:def 1;
                   f in G"{y} by A60,XBOOLE_0:def 3;
                then G.f in {y} by FUNCT_1:def 13;
                hence contradiction by A59,A62,A63,TARSKI:def 1;
            end;
            hence thesis;
        end;
        reconsider X = {G"{x} where x is Element of Funcs(n,q'):
                        not contradiction} as set;
    A64: union X = Funcs(n+1,q) proof
        A65: for y being set holds y in union X implies y in Funcs(n+1,q)
            proof let x be set such that A66: x in union X;
                consider Y being set such that
            A67: x in Y and A68: Y in X by A66,TARSKI:def 4;
                consider z being Element of Funcs(n,q) such that
            A69: G"{z} = Y by A68;
                thus thesis by A67,A69;
            end;
               for y being set holds y in Funcs(n+1,q) implies y in union X
            proof let x be set such that A70: x in Funcs(n+1,q);
                consider f being Function of n+1,q such that
            A71: x = f & G.x = f|n by A11,A70;
            A72: f in Funcs(n+1,q) by A1,FUNCT_2:11;
                 then f in dom G & G.f in {f|n} by A71,FUNCT_2:def 1,TARSKI:
def 1;
            then A73: f in G"{f|n} by FUNCT_1:def 13;
                consider y being set such that
            A74: y in Funcs(n,q') & R[f,y] by A5,A72;
               G"{f|n} in X by A74;
            hence thesis by A71,A73,TARSKI:def 4;
            end;hence thesis by A65,TARSKI:2;
        end;           Funcs(n+1,q) is finite by FRAENKEL:16;
        then reconsider X as finite set by A64,FINSET_1:25;
    A75: card X = q|^n proof
            deffunc FF(set) = G"{$1};
        A76: for x being set st x in Funcs(n,q) holds FF(x) in X;
            consider F being Function of Funcs(n,q),X such that
        A77: for x being set st x in Funcs(n,q) holds F.x = FF(x)
                from FUNCT_2:sch 2(A76);
        A78: for c being set st c in X ex x being set st
            x in Funcs(n,q) & c = F.x
            proof let c be set such that A79: c in X;
                consider y being Element of Funcs(n,q) such that
            A80: c = G"{y} by A79;    F.y = c by A77,A80;
                hence thesis;
            end;
            consider gg being Element of Funcs(n, q');
            A81: G"{gg} in X;
        then A82: rng F = X by A78,FUNCT_2:16;
        A83: dom F = Funcs(n,q) by A81,FUNCT_2:def 1;
               for x1,x2 being set st x1 in dom F & x2 in dom F & F.x1 = F.
x2
            holds x1 = x2
            proof let x1,x2 be set such that
            A84: x1 in dom F and A85: x2 in dom F and A86: F.x1 = F.x2;
            A87: x1 in Funcs(n,q) by A81,A84,FUNCT_2:def 1;
              F.x1 = G"{x1} by A77,A83,A84;
            then A88: G"{x1} = G"{x2} by A77,A83,A85,A86;
                   now assume x1<>x2;
                    then (G"{x1}) misses (G"{x2}) by A58,A83,A84,A85;
                then G"{x1} /\ G"{x1} = {} by A88,XBOOLE_0:def 7;
                    hence contradiction by A29,A87,CARD_1:78;
                end;
                hence thesis;
            end;
            then F is one-to-one by FUNCT_1:def 8;
            then Funcs(n,q), F.:(Funcs(n,q)) are_equipotent by A83,CARD_1:60;
            then Funcs(n,q), rng F are_equipotent by A83,RELAT_1:146;
            hence card X = q|^n by A4,A82,CARD_1:21;
        end;
           (for Y being set st Y in X ex B being finite set st B = Y & card
B=q &
            for Z being set st Z in X & Y <> Z
            holds Y,Z are_equipotent & Y misses Z)
        proof let Y be set such that A89: Y in X;
            consider x being Element of Funcs(n,q') such that
        A90: Y=G"{x} by A89;
        A91: Y is finite & Card Y = q by A29,A90;
           for Z being set st Z in X & Y <> Z
            holds Y,Z are_equipotent & Y misses Z
            proof let Z be set such that A92: Z in X and A93: Y <> Z;
                consider y being Element of Funcs(n,q') such that
            A94: Z=G"{y} by A92;
            A95: Z is finite & Card Z = q by A29,A94;
                   now per cases;
                    suppose x=y; hence Y misses Z by A90,A93,A94;
                    end;
                    suppose x<>y;hence Y misses Z by A58,A90,A94;
                end;
                end;hence thesis by A91,A95,CARD_1:21;
            end;hence thesis by A91;
        end;
        then consider C being finite set such that
    A96: C = union X & card C = q * card X by GROUP_2:186;
        thus thesis by A64,A75,A96,NEWTON:11;
    end;
       for n being Nat holds P[n] from NAT_1:sch 1(A2,A3);
    hence thesis;
end;

theorem  Th5: :: SumDivision:
for f being FinSequence of NAT, i being Nat
 st for j being Nat st j in dom f holds i divides f/.j holds i divides Sum f
proof
  defpred P[Nat] means for f being FinSequence of NAT st len f = $1
     for i being Nat st for j being Nat st j in dom f holds i divides f/.j
      holds i divides Sum f;
A1: P[0] proof let f be FinSequence of NAT such that A2: len f = 0;
        let i be Nat such that
           for j being Nat st j in dom f holds i divides f/.j;   Sum f = 0 by
A2,FINSEQ_1:32,RVSUM_1:102;
      hence thesis by NAT_1:53;
    end;
A3: for k being Nat st P[k] holds P[k+1]
    proof let k be Nat such that
    A4: P[k];
        let f be FinSequence of NAT such that A5: len f = k+1;
        let i be Nat such that
    A6: for j being Nat st j in dom f holds i divides f/.j;
           f <> {} by A5,FINSEQ_1:25;
        then consider q being FinSequence, x being set such that
    A7: f=q^<*x*> by FINSEQ_1:63;
        reconsider f1=q as FinSequence of NAT by A7,FINSEQ_1:50;
        reconsider f2=<*x*> as FinSequence of NAT by A7,FINSEQ_1:50;
           k + 1 = len f1 + len f2 by A5,A7,FINSEQ_1:35;
        then A8: k + 1 = len f1 + 1 by FINSEQ_1:56;
        then A9: k = len f1 + 1 - 1 by XCMPLX_1:26;
           for j being Nat st j in dom f1 holds i divides f1/.j
        proof let j be Nat such that A10: j in dom f1;
            A11: dom f1 c= dom f by A7,FINSEQ_1:39;
             then f/.j = f.j by A10,FINSEQ_4:def 4 .= f1.j by A7,A10,FINSEQ_1:
def 7
                .= f1/.j by A10,FINSEQ_4:def 4;
          hence thesis by A6,A10,A11;
        end;
    then A12: i divides Sum f1 by A4,A9;
           rng f2 c= NAT by FINSEQ_1:def 4; then {x} c= NAT by FINSEQ_1:55;
        then reconsider m=x as Nat by ZFMISC_1:37;
    A13: f.(len f) = m by A5,A7,A8,FINSEQ_1:59;
           len f in Seg len f by A5,FINSEQ_1:5;
    then A14: len f in dom f by FINSEQ_1:def 3;
    then f/.(len f) = f.(len f) by FINSEQ_4:def 4;
    then A15: i divides m by A6,A13,A14;
           rng f c= NAT & rng f1 c= NAT by FINSEQ_1:def 4;
        then rng f c= REAL & rng f1 c= REAL by XBOOLE_1:1;
        then f is FinSequence of REAL & f1 is FinSequence of REAL by FINSEQ_1:
def 4;
        then Sum f = Sum f1 + m by A7,RVSUM_1:104;
      hence thesis by A12,A15,NAT_1:55;
    end;
A16:  for k being Nat holds P[k] from NAT_1:sch 1(A1,A3);
    let f be FinSequence of NAT, i be Nat such that
A17: for j being Nat st j in dom f holds i divides f/.j;
       len f = len f;
  hence thesis by A16,A17;
end;

theorem  Th6: :: Partition1:
for X being finite set, Y being a_partition of X,
    f being FinSequence of Y st f is one-to-one & rng f = Y
for c being FinSequence of NAT st len c = len f &
      for i being Nat st i in dom c holds c.i = Card (f.i)
holds card X = Sum c
proof
  defpred P[Nat] means
    for X being finite set, z being a_partition of X st card z = $1
    for f being FinSequence of z st f is one-to-one & rng f = z
    for c being FinSequence of NAT st len c = len f &
        for i being Nat st i in dom c holds c.i = Card (f.i)
    holds Card X = Sum c;
A1: P[0] proof let X be finite set;
        let z be a_partition of X such that A2: card z = 0;
        let f be FinSequence of z such that A3: f is one-to-one & rng f = z;
        let c be FinSequence of NAT such that A4: len c = len f &
             for i being Nat st i in dom c holds c.i = Card (f.i);
    A5: z = {} by A2,GRAPH_5:5;
       union z = {} by A2,GRAPH_5:5,ZFMISC_1:2;
    then A6: X = {} by EQREL_1:def 6;    f = {} by A3,A5,FINSEQ_1:27;
        hence thesis by A4,A6,CARD_1:78,FINSEQ_1:25,RVSUM_1:102;
    end;
A7: for k being Nat st P[k] holds P[k+1]
    proof let k be Nat; assume
    A8: P[k];
        let X be finite set;
        let Z be a_partition of X such that A9: card Z = k + 1;
        let f be FinSequence of Z such that
    A10: f is one-to-one and A11: rng f = Z;
        let c be FinSequence of NAT such that A12: len c = len f and
    A13: for i being Nat st i in dom c holds c.i = Card (f.i);
    A14: len f = k + 1 by A9,A10,A11,FINSEQ_4:77;
    A15: Z <> {} by A9,GRAPH_5:5;
        reconsider Z as non empty set by A9,GRAPH_5:5;
        reconsider f as FinSequence of Z;
    A16: X <> {} by A15,EQREL_1:def 6; reconsider X as non empty finite set by
A15,EQREL_1:def 6;
        reconsider fk = f|(Seg k) as FinSequence of Z by FINSEQ_1:23;
    A17: len fk = k by A14,FINSEQ_3:59;
    A18: f = fk ^ <*f.(k+1)*> by A14,FINSEQ_3:61;
        reconsider Zk = rng fk as finite set;
    A19: Zk c= Z by A11,FUNCT_1:76;
        then union Zk c= union Z by ZFMISC_1:95;
    then A20: union Zk c= X by EQREL_1:def 6;
        reconsider fk as FinSequence of Zk by FINSEQ_1:def 4;
    A21: fk is one-to-one by A10,FUNCT_1:84;
    then A22: card Zk = k by A17,FINSEQ_4:77;
        reconsider Xk = union Zk as finite set by A20,FINSET_1:13;
        A23: now per cases;
            suppose A24: Zk = {}; consider B being a_partition of Xk;
                   B = {} by A24,EQREL_1:def 6,ZFMISC_1:2;
            hence Zk is a_partition of Xk by A24;
            end;
            suppose Zk <> {};
                then consider x being set such that A25: x in Zk by XBOOLE_0:
def 1;
                   x in Z by A19,A25; then x <> {} by A16,EQREL_1:def 6;
                then consider y being set such that A26: y in x by XBOOLE_0:def
1;
            A27: for a being Subset of Xk st a in Zk
                holds a<>{} & for b being Subset of Xk st b in Zk
                   holds a=b or (a misses b)
                proof let a be Subset of Xk such that A28: a in Zk;
                    A29: a in Z by A19,A28;
                     for b being Subset of Xk st b in Zk holds a=b or (a
misses b
)
                    proof let b be Subset of Xk such that A30: b in Zk;
                           a in Z & b in Z by A19,A28,A30;
                        hence thesis by A16,EQREL_1:def 6;
                    end; hence thesis by A16,A29,EQREL_1:def 6;
                end;
                   Zk c= bool union Zk by ZFMISC_1:100;
                then Zk is Subset-Family of Xk by SETFAM_1:def 7;
            hence Zk is a_partition of Xk by A25,A26,A27,EQREL_1:def 6;
        end;
        end;
        reconsider ck = c|(Seg k) as FinSequence of NAT by FINSEQ_1:23;
    A31: len ck = len fk by A12,A14,A17,FINSEQ_3:59;
       for i being Nat st i in dom ck holds ck.i = Card (fk.i)
        proof let i be Nat; assume A32: i in dom ck;
            A33: k <= k+1 by NAT_1:29;
                then dom ck = (Seg k) by A12,A14,FINSEQ_1:21;
            then A34: dom ck = dom fk by A14,A33,FINSEQ_1:21;
            A35: dom ck c= dom c by FUNCT_1:76;
                   ck.i = c.i by A32,FUNCT_1:70;
            then ck.i = Card (f.i) by A13,A32,A35;
            hence ck.i = Card (fk.i) by A32,A34,FUNCT_1:70;
        end;
    then A36: card Xk = Sum ck by A8,A21,A22,A23,A31;
        reconsider fk1 = f.(k+1) as set;
           for x being set st x in Zk holds x misses fk1
        proof let x being set such that A37: x in Zk;
        A38: x in Z by A19,A37;
        A39: k+1 in Seg(k+1) by FINSEQ_1:6;
               dom f = Seg(len f) by FINSEQ_1:def 3;
        then A40: fk1 in rng f by A14,A39,FUNCT_1:12;
        then A41: fk1 is Subset of X by A11;
            consider i being Nat such that
        A42: i in dom fk & fk.i = x by A37,FINSEQ_2:11;
               now assume A43: fk.i = fk1;
            A44: dom fk = Seg k by A17,FINSEQ_1:def 3;
            A45: i in Seg k by A17,A42,FINSEQ_1:def 3;
                   i <= k by A42,A44,FINSEQ_1:3;
            then A46: i < k+1 by NAT_1:38;
            A47: dom f = Seg (k + 1) by A14,FINSEQ_1:def 3;
                   k <= k + 1 by NAT_1:37;
            then A48: Seg k c= Seg (k+1) by FINSEQ_1:7;
            A49: (k+1) in dom f by A47,FINSEQ_1:6;
                   fk.i = f.i by A42,FUNCT_1:70;
                hence contradiction by A10,A43,A45,A46,A47,A48,A49,FUNCT_1:def
8;
            end; hence thesis by A11,A38,A40,A41,A42,EQREL_1:def 6;
        end; then A50: fk1 misses Xk by ZFMISC_1:98;
    A51: union Z = X by EQREL_1:def 6;
    A52: k+1 in Seg(k+1) by FINSEQ_1:6;
           dom f = Seg(len f) by FINSEQ_1:def 3;
        then fk1 in rng f by A14,A52,FUNCT_1:12;
        then reconsider fk1 as finite set by A11,A51,FINSET_1:25;
    A53: Z = rng fk \/ rng <*fk1*> by A11,A18,FINSEQ_1:44
         .= Zk \/ {fk1} by FINSEQ_1:56;
    A54: X = union Z by EQREL_1:def 6
       .= union Zk \/ union {fk1} by A53,ZFMISC_1:96.= Xk \/ fk1 by ZFMISC_1:31
;
           k+1 in Seg(k+1) by FINSEQ_1:6;
    then A55: k+1 in dom c by A12,A14,FINSEQ_1:def 3;
           rng ck c= NAT by FINSEQ_1:def 4; then rng ck c= REAL by XBOOLE_1:1;
        then reconsider ckc=ck as FinSequence of REAL by FINSEQ_1:def 4;
           card X = Sum ck + card fk1 by A36,A50,A54,CARD_2:53
        .= Sum ck + c.(k+1) by A13,A55
        .= Sum (ckc^<*(c.(k+1)) qua Real*>) by RVSUM_1:104 .= Sum c by A12,A14,
FINSEQ_3:61;
        hence thesis;
    end;
A56: for k being Nat holds P[k] from NAT_1:sch 1(A1, A7);
 let X be finite set, Y be a_partition of X;
       card Y = card Y;
  hence thesis by A56;
end;

begin :: Class formula for groups

registration
  cluster finite Group;
  existence proof consider G being Group;    (1).G is finite by GROUP_2:80;
   hence thesis;
  end;
end;

registration
  let G be finite Group;
  cluster center G -> finite;
  correctness by GROUP_2:48;
end;

definition let G be Group, a be Element of G;
  func Centralizer a -> strict Subgroup of G means :Def1:
     the carrier of it = { b where b is Element of G : a*b = b*a };
existence proof set Car = { b where b is Element of G : a*b = b*a};
      a*1.G = a & 1.G*a = a by GROUP_1:def 4; then A1: 1.G in Car;
      for x being set st x in Car holds x in the carrier of G
   proof let x be set such that A2: x in Car;
       consider g being Element of G such that A3: x = g & a*g = g*a by A2;
     thus thesis by A3;
   end;
then A4: Car is Subset of G by TARSKI:def 3;
A5: for g1,g2 being Element of G st g1 in Car & g2 in Car
   holds g1 * g2 in Car
   proof let g1,g2 be Element of G such that
   A6: g1 in Car and A7: g2 in Car;
       consider z1 being Element of G such that
   A8: z1=g1 & z1*a = a*z1 by A6;
       consider z2 being Element of G such that
   A9: z2=g2 & z2*a = a*z2 by A7;
          a*(g1*g2) = (g1*a)*g2 by A8,VECTSP_1:def 16
       .= g1*(g2*a) by A9,VECTSP_1:def 16 .= g1*g2*a by VECTSP_1:def 16;
     hence thesis;
   end;
  for g being Element of G st g in Car holds g" in Car
   proof let g be Element of G such that
   A10: g in Car;
   consider z1 being Element of G such that
   A11: z1=g & z1*a = a*z1 by A10;
        g"*(g*a) = a by GROUP_3:1;
     then g"*((a*g)*g") = a*g" by A11,VECTSP_1:def 16; then g"*a = a*
g" by GROUP_3:1;
     hence thesis;
   end;
  hence thesis by A1,A4,A5,GROUP_2:61;
end;
uniqueness proof let H1,H2 be strict Subgroup of G such that
A12: the carrier of H1 = { b where b is Element of G: a*b = b*a} and
A13: the carrier of H2 = { b where b is Element of G: a*b = b*a};
      for g being Element of G holds g in H1 iff g in H2
   proof let g be Element of G;
       hereby assume g in H1;
       then g in the carrier of H1 by RLVECT_1:def 1;
           then consider b being Element of G such that
       A14: b = g and A15: a*b = b*a by A12;    g in the carrier of H2 by A13,
A14,A15;
         hence g in H2 by RLVECT_1:def 1;
       end;
          now assume g in H2;
       then g in the carrier of H2 by RLVECT_1:def 1;
           then consider b being Element of G such that
       A16: b = g and A17: a*b = b*a by A13;    g in the carrier of H1 by A12,
A16,A17;
         hence g in H1 by RLVECT_1:def 1;
       end;
     hence thesis;
   end;
  hence thesis by GROUP_2:def 6;
end;
end;

registration let G be finite Group;
  let a be Element of G;
  cluster Centralizer a -> finite;
  correctness by GROUP_2:48;
end;

theorem  Th7: :: GCTR2:
for G being Group, a being Element of G, x being set
 st x in Centralizer a holds x in G
proof let G be Group, a be Element of G, x be set; assume
A1: x in Centralizer a;
        the carrier of Centralizer a =
        { b where b is Element of G : a*b = b*a } by Def1;
     then x in { b where b is Element of G : a*b = b*a } by A1,RLVECT_1:def 1
;
     then ex b being Element of G st b = x & a*b = b*a;
 hence x in G by RLVECT_1:def 1;
end;

theorem  Th8: :: GCTR1:
for G being Group, a, x being Element of G
 holds a*x = x*a iff x is Element of Centralizer a
proof let G be Group, a, x be Element of G;
A1: the carrier of Centralizer a =
        { b where b is Element of G : a*b = b*a } by Def1;
   set x' = x;
  hereby assume a*x = x*a;
    then x in the carrier of Centralizer a by A1;
   hence x is Element of Centralizer a;
  end;
  assume x is Element of Centralizer a; then x in the carrier of
Centralizer
a;
    then ex b being Element of G st b = x & a*b = b*a by A1;
  hence a*x = x*a;
end;

registration
  let G be Group, a be Element of G;
  cluster con_class a -> non empty;
  correctness by GROUP_3:98;
end;

definition let G be Group, a be Element of G;
  func a-con_map -> Function of the carrier of G, con_class a means :Def2:
   for x being Element of G holds it.x = a |^ x;
   existence proof
      defpred P[Element of G, set] means  $2 = a |^ $1;
   A1: for x being Element of G
       ex y being Element of con_class a st P[x,y]
       proof let x be Element of G;
              a |^ x in con_class a by GROUP_3:97;
         hence thesis;
       end;
         ex f being Function of the carrier of G, con_class a st
      for x being Element of G holds P[x,f.x] from FUNCT_2:sch 3(A1);
    hence thesis;
   end;
   uniqueness
   proof let it1, it2 be Function of the carrier of G, con_class a such that
   A2: for x being Element of G holds it1.x = a |^ x and
   A3: for x being Element of G holds it2.x = a |^ x;
   A4: dom it1 = the carrier of G & dom it2 = the carrier of G by FUNCT_2:def 1
;
      for x being set st x in dom it1 holds it1.x = it2.x
      proof let x be set such that A5: x in dom it1;
          reconsider y=x as Element of G by A5,FUNCT_2:def 1;
             it1.y = a |^ y & it2.y = a |^ y by A2,A3;
        hence thesis;
      end;
    hence thesis by A4,FUNCT_1:9;
   end;
end;

theorem  Th9: :: Br1:
for G being finite Group, a being Element of G, x being Element of con_class a
 holds card (a-con_map"{x}) = ord Centralizer a
proof let G be finite Group, a be Element of G, x be Element of con_class a;
    consider b being Element of G such that
A1: b = x and A2: a,b are_conjugated by GROUP_3:95;
    consider d being Element of G such that
A3: x = a |^ d by A1,A2,GROUP_3:88;
A4: x = d"*a*d by A3,GROUP_3:20;
    reconsider Cad = (Centralizer a)*d as Subset of G;
    consider B,C being finite set such that B = d*(Centralizer a) and
A5: C = Cad and ord Centralizer a = card B and
A6: ord Centralizer a = card C by GROUP_2:156;
       for g being set holds g in a-con_map"{x} iff g in Cad
    proof let g be set;
    A7: now assume A8: g in a-con_map"{x};
            then g in dom (a-con_map) & a-con_map.g in {x} by FUNCT_1:def 13;
        then A9: a-con_map.g = x by TARSKI:def 1;
            reconsider y=g as Element of G by A8;
               a-con_map.g = a |^ y by Def2;
        then A10: y"*a*y = d"*a*d by A4,A9,GROUP_3:20;
        A11: y*((d"*a)*d) = y*(d"*a)*d by VECTSP_1:def 16
                        .= y*d"*a*d by VECTSP_1:def 16;
          y*((y"*a)*y) = y*(y"*a)*y by VECTSP_1:def 16 .= a*y by GROUP_3:1;
             then y*d"*a*d*d" = a*(y*d") by A10,A11,VECTSP_1:def 16;
            then (y*d")*a = a*(y*d") by GROUP_3:1;
            then (y*d") is Element of Centralizer a by Th8;
            then consider z being Element of G such that
        A12: z in the carrier of Centralizer a and A13: y*d" = z;
               z in carr(Centralizer a) by A12,GROUP_2:def 9;
        then A14: z in Centralizer a by GROUP_2:88;
            reconsider z as Element of G;
               y = z*d by A13,GROUP_3:1;
            hence g in Cad by A14,GROUP_2:126;
        end;
         now assume g in Cad;
        then consider z being Element of G such that
    A15: g = z*d and A16: z in Centralizer a by GROUP_2:126;
        reconsider y=g as Element of G by A15;   y*d" = z by A15,GROUP_3:1;
         then y*d" in carr(Centralizer a) by A16,GROUP_2:88;
        then y*d" is Element of Centralizer a by GROUP_2:def 9;
         then (y*d")*a = a*(y*d") by Th8;
        then (y*d")*a*d = a*((y*d")*d) by VECTSP_1:def 16;
        then (y*d")*a*d = a*y by GROUP_3:1;
        then (y*d")*(a*d) = a*y by VECTSP_1:def 16;
        then y"*((y*d")*(a*d)) = y"*a*y by VECTSP_1:def 16;
        then (y"*(y*d"))*(a*d) = y"*a*y by VECTSP_1:def 16;
        then d"*(a*d) = y"*a*y by GROUP_3:1;
        then d"*a*d = y"*a*y by VECTSP_1:def 16;
        then x = a|^y by A4,GROUP_3:20; then a-con_map.y = x by Def2;
    then A17: a-con_map.y in {x} by TARSKI:def 1;
           dom (a-con_map) = the carrier of G by FUNCT_2:def 1;
        hence g in a-con_map"{x} by A17,FUNCT_1:def 13;
        end;
      hence thesis by A7;
    end;
  hence thesis by A5,A6,TARSKI:2;
end;

theorem  Th10: :: Br2:
for G being Group, a being Element of G, x, y being Element of con_class a
 st x<>y holds (a-con_map"{x}) misses (a-con_map"{y})
proof let G be Group, a be Element of G,
    x,y be Element of con_class a such that A1: x <> y;
       now assume ex g being set st g in (a-con_map"{x}) /\ (a-con_map"{y
});
        then consider g being set such that
    A2: g in (a-con_map"{x}) /\ (a-con_map"{y});
    A3: g in a-con_map"{x} & g in a-con_map"{y} by A2,XBOOLE_0:def 3;
        then a-con_map.g in {x} by FUNCT_1:def 13;
    then A4: a-con_map.g = x by TARSKI:def 1;
          a-con_map.g in {y} by A3,FUNCT_1:def 13;
      hence contradiction by A1,A4,TARSKI:def 1;
    end; then (a-con_map"{x}) /\ (a-con_map"{y}) = {} by XBOOLE_0:def 1;
    hence thesis by XBOOLE_0:def 7;
end;

theorem  Th11: :: Br3:
for G being Group, a being Element of G
 holds { a-con_map"{x} where x is Element of con_class a : not contradiction }
         is a_partition of the carrier of G
proof let G be Group, a be Element of G; reconsider X =
    {a-con_map"{x} where x is Element of con_class a:not contradiction} as set;
A1: union X = the carrier of G proof
    A2: for y being set holds y in union X implies y in the carrier of G
        proof let x be set such that A3: x in union X;
            consider Y being set such that
        A4: x in Y and A5: Y in X by A3,TARSKI:def 4;
            consider z being Element of con_class a such that
        A6: a-con_map"{z} = Y by A5;
            thus thesis by A4,A6;
        end;
           for y being set holds y in the carrier of G implies y in union X
        proof let x be set such that A7: x in the carrier of G;
            reconsider y=x as Element of G by A7;
               a |^ y in con_class a by GROUP_3:97;
            then consider z being Element of G such that
        A8: z in con_class a and A9: z = a|^y;
               a-con_map.y = z by A9,Def2;
        then A10: a-con_map.y in {z} by TARSKI:def 1;
               dom(a-con_map) = the carrier of G by FUNCT_2:def 1;
        then A11: y in a-con_map"{z} by A10,FUNCT_1:def 13;
               a-con_map"{z} in X by A8;
            hence thesis by A11,TARSKI:def 4;
        end;hence thesis by A2,TARSKI:2;
    end;
A12: for A being Subset of G st A in X holds A<>{} &
    for B being Subset of G st B in X holds A=B or A misses B
    proof let A be Subset of G such that A13: A in X;
        consider x being Element of con_class a such that
    A14: A = a-con_map"{x} by A13;
           a,x are_conjugated by GROUP_3:96;
        then consider g being Element of G such that
    A15: x = a |^ g by GROUP_3:88;
           a-con_map.g = x by A15,Def2;
    then A16: a-con_map.g in {x} by TARSKI:def 1;
         A17: dom (a-con_map) = the carrier of G by FUNCT_2:def 1;
       for B being Subset of G st B in X
        holds A=B or A misses B
        proof let B be Subset of G such that A18: B in X;
            consider y being Element of con_class a such that
        A19: B = a-con_map"{y} by A18;
               now per cases;
                suppose x = y; hence A=B or A misses B by A14,A19;
                end;
                suppose x<> y; thus A=B or A misses B by A14,A19,Th10;
            end;
            end; hence thesis;
        end; hence thesis by A14,A16,A17,FUNCT_1:def 13;
    end;
       X c= bool union X by ZFMISC_1:100;
    then X is Subset-Family of the carrier of G by A1,SETFAM_1:def 7;
    hence thesis by A1,A12,EQREL_1:def 6;
end;

theorem  Th12: :: Br4:
for G being finite Group, a being Element of G
  holds Card { a-con_map"{x} where x is Element of con_class a :
                               not contradiction} = card con_class a
proof let G be finite Group, a be Element of G;
    reconsider X = { a-con_map"{x} where x is Element of con_class a:
        not contradiction} as a_partition of the carrier of G by Th11;
    deffunc FF(set) = a-con_map"{$1};
A1: for x being set st x in con_class a holds FF(x) in X;
    consider F being Function of con_class a, X such that
A2: for x being set st x in con_class a holds F.x = FF(x) from FUNCT_2:sch 2
(A1);
    consider y being Element of con_class a;
       for c being set st c in X ex x being set st x in con_class a & c = F.x
    proof let c be set such that A3: c in X;
        reconsider c as Subset of G by A3;
        consider y being Element of con_class a such that
    A4: c = a-con_map"{y} by A3;     F.y = c by A2,A4;
        hence thesis;
    end;
then A5: rng F = X by FUNCT_2:16;
A6: dom F = con_class a by FUNCT_2:def 1;
       for x1,x2 being set st x1 in dom F & x2 in dom F & F.x1=F.x2 holds x1
= x2
    proof let x1,x2 be set such that
    A7: x1 in dom F and A8: x2 in dom F and A9: F.x1 = F.x2;
        reconsider y1=x1 as Element of con_class a by A7,FUNCT_2:def 1;
        reconsider y2=x2 as Element of con_class a by A8,FUNCT_2:def 1;
         A10: a-con_map"{y1} = F.y1 & a-con_map"{y2} = F.y2 by A2;
           now assume y1<>y2;
            then (a-con_map"{y1}) misses (a-con_map"{y2}) by Th10;
        then A11: ((a-con_map"{y1}) /\ (a-con_map"{y2})) = {} by XBOOLE_0:def 7
;
            consider d being Element of G such that
        A12: d = y1 & a,d are_conjugated by GROUP_3:95;
               d,a are_conjugated by A12;
            then consider g being Element of G such that
        A13: d = a |^ g by GROUP_3:def 7;
               a-con_map.g = y1 by A12,A13,Def2;
        then A14: a-con_map.g in {y1} by TARSKI:def 1;
              dom (a-con_map) = the carrier of G by FUNCT_2:def 1;
            hence contradiction by A9,A10,A11,A14,FUNCT_1:def 13;
        end; hence thesis;
    end; then F is one-to-one by FUNCT_1:def 8;
    then con_class a, F.:(con_class a) are_equipotent by A6,CARD_1:60;
    then con_class a, rng F are_equipotent by A6,RELAT_1:146;
  hence thesis by A5,CARD_1:21;
end;

theorem  Th13: :: OrdGroup1:
for G being finite Group, a being Element of G
  holds ord G = card con_class a * ord Centralizer a
proof let G be finite Group, a be Element of G;
  reconsider
   X = {a-con_map"{x} where x is Element of con_class a: not contradiction}
          as a_partition of the carrier of G by Th11;
A1: union X = the carrier of G by EQREL_1:def 6;
A2: for A being set st A in X holds A is finite & Card A = ord Centralizer a &
      for B being set st B in X & A<>B holds A misses B
    proof let A be set such that A3: A in X;
        reconsider A as Subset of G by A3;
        consider x being Element of con_class a such that
    A4: A = a-con_map"{x} by A3;
     thus thesis by A3,A4,Th9,EQREL_1:def 6;
    end;
    reconsider k = ord Centralizer a as Nat;
   for Y being set st Y in X ex B being finite set st B = Y & card B = k &
      for Z being set st Z in X & Y <> Z holds Y,Z are_equipotent & Y misses Z
    proof let Y be set such that A5: Y in X;
        reconsider Y as finite set by A2,A5;
        A6: Card Y = ord Centralizer a by A2,A5;
           for Z being set st Z in X & Y<>Z holds Y,Z are_equipotent & Y
misses Z
        proof let Z be set such that A7: Z in X and A8: Y<>Z;
        A9: Card Y = ord Centralizer a by A2,A5;
               Card Z = ord Centralizer a by A2,A7;
            hence thesis by A2,A5,A7,A8,A9,CARD_1:21;
        end;
      hence thesis by A6;
    end; then consider C being finite set such that
A10: C = union X and A11: card C = card X * k by GROUP_2:186;
       ord G =  card C by A1,A10,GROUP_1:def 14 .= card con_class a * ord
Centralizer a by A11,Th12;
    hence thesis;
end;

definition let G be Group;
  func conjugate_Classes G -> a_partition of the carrier of G equals :Def3:
  {S where S is Subset of G :
                 ex a being Element of G st S = con_class a };
  correctness proof set cG = the carrier of G;
  set C = {S where S is Subset of cG:
   ex a being Element of G st S=con_class a };
      C c= bool cG proof let x be set; assume x in C;
     then consider S being Subset of cG such that
   A1: S=x and ex a being Element of cG st S = con_class a;
     thus thesis by A1;
   end;
then A2: C is Subset-Family of cG by SETFAM_1:def 7;
      now let x be set;
     hereby assume x in union C; then consider S being set such that
     A3: x in S and
     A4: S in C by TARSKI:def 4;
         consider S' being Subset of cG such that
     A5: S' = S and ex a being Element of G st S'=con_class a
              by A4;
       thus x in cG by A3,A5;
     end;
     assume x in cG; then reconsider x'=x as Element of cG;
     reconsider S = con_class x' as Subset of cG;
  A6: S in C;           x' in con_class x' by GROUP_3:98;
     hence x in union C by A6,TARSKI:def 4;
   end;
then A7: union C = cG by TARSKI:2;
      now let A be Subset of cG; assume A in C;
     then consider A' being Subset of cG such that
   A8: A' = A and
   A9: ex a being Element of cG st A' = con_class a;
       consider a being Element of cG such that
   A10: A' = con_class a by A9;
    thus A<>{} by A8,A9;
    let B be Subset of cG; assume B in C;
       then consider B' being Subset of cG such that
   A11: B' = B and
   A12: ex a being Element of cG st B' = con_class a;
       consider b being Element of cG such that
   A13: B' = con_class b by A12;
       assume
   A14: A <> B; assume A meets B; then consider x being set such that
   A15: x in A & x in B by XBOOLE_0:3; reconsider x as Element of cG by A15;
   A16: x,a are_conjugated by A8,A10,A15,GROUP_3:96;
      x,b are_conjugated by A11,A13,A15,GROUP_3:96;
   then A17: a,b are_conjugated by A16,GROUP_3:91;
          now let c be set;
         hereby assume
         A18: c in A;
            then reconsider c'=c as Element of cG;
               c',a are_conjugated by A8,A10,A18,GROUP_3:96;
            then c',b are_conjugated by A17,GROUP_3:91;
          hence c in B by A11,A13,GROUP_3:96;
         end;
         assume
         A19: c in B;
            then reconsider c'=c as Element of cG;
               c',b are_conjugated by A11,A13,A19,GROUP_3:96;
            then c',a are_conjugated by A17,GROUP_3:91;
         hence c in A by A8,A10,GROUP_3:96;
       end;
     hence contradiction by A14,TARSKI:2;
   end;
   hence C is a_partition of cG by A2,A7,EQREL_1:def 6;
  end;
end;

theorem  Th14: :: Conj1:
for G being Group, x being set
 holds x in conjugate_Classes G iff ex a being Element of G st con_class a = x
proof let G be Group, x be set;
A1: conjugate_Classes G = {S where S is Subset of G :
       ex a being Element of G st S = con_class a } by Def3;
  hereby assume x in conjugate_Classes G;
    then ex S being Subset of G st
       x=S & ex a being Element of G st S = con_class a by A1;
   hence ex a being Element of G st con_class a = x;
  end;
  given a being Element of G such that
A2: con_class a = x;
  thus x in conjugate_Classes G by A1,A2;
end;

theorem  Th15: :: :: ClassFormula Class formula for finite groups
for G being finite Group, f being FinSequence of conjugate_Classes G
 st f is one-to-one & rng f = conjugate_Classes G
  for c being FinSequence of NAT
   st len c = len f & for i being Nat st i in dom c holds c.i = Card (f.i)
    holds ord G = Sum c
proof let G be finite Group;
    let f be FinSequence of conjugate_Classes G such that
A1: f is one-to-one and A2: rng f = conjugate_Classes G;
    let c be FinSequence of NAT such that
A3: len c = len f and A4: for i being Nat st i in dom c holds c.i = Card (f.i);
    reconsider X = the carrier of G as finite set;
      card X = Sum c by A1,A2,A3,A4,Th6;
    hence thesis by GROUP_1:def 14;
end;

begin :: Centers and centralizers of skew fields

theorem  Th16: :: DIM:
for F being finite Field, V being VectSp of F, n, q being Nat
 st V is finite-dimensional & n = dim V & q = Card the carrier of F
  holds Card the carrier of V = q |^ n
proof let F be finite Field, V be VectSp of F, n, q be Nat such that
A1: V is finite-dimensional and
A2: n = dim V and
A3: q = Card the carrier of F;
   consider B being finite Subset of V such that
A4: B is Basis of V by A1,VECTSP_9:def 1;
A5: B is linearly-independent by A4,VECTSP_7:def 3;
A6: Lin(B) = the VectSpStr of V by A4,VECTSP_7:def 3;
A7: Card B = n by A1,A2,A4,VECTSP_9:def 2;
    q <> 0 by A3,GRAPH_5:5;
then A8: q > 0 by NAT_1:19;
     now per cases;
    suppose A9: n = 0;
    then (Omega).V = (0).V by A1,A2,VECTSP_9:33;
then the VectSpStr of V = (0).V by VECTSP_4:def 4;
    then the carrier of V = {0.V} by VECTSP_4:def 3;
    then Card the carrier of V = 1 by CARD_1:79
        .= q #Z 0 by PREPOWER:44 .= q |^ 0 by PREPOWER:46;
    hence thesis by A9;
    end;
    suppose n <> 0;
then A10: B <> 0 by A7,CARD_4:17;
    consider bf being FinSequence such that
A11: rng bf = B and A12: bf is one-to-one by FINSEQ_4:73;
       len bf = n by A7,A11,A12,FINSEQ_4:77;
then A13: Seg n = dom bf by FINSEQ_1:def 3;
    reconsider Vbf = bf as FinSequence of the carrier of V by A11,FINSEQ_1:def
4;
    set cLinB = the carrier of Lin(B);
    set ntocF = n-tuples_on the carrier of F;
    defpred P[Function, set] means
    ex lc being Linear_Combination of B st
      (for i being set st i in dom $1 holds lc.(Vbf.i) = $1.i) &
      $2 = Sum(lc (#) Vbf);

A14: for x being Element of ntocF ex y being Element of cLinB st P[x,y]
    proof let f be Element of ntocF;
           ex lc being Linear_Combination of B st
        for i being set st i in dom f holds lc.(Vbf.i) = f.i
        proof
          deffunc LC(set) = f.(union (Vbf"{$1}));
        A15: for x being set st x in B holds LC(x) in the carrier of F
            proof let x be set such that A16: x in B;
                consider i being set such that
            A17: Vbf"{x} = {i} by A11,A12,A16,FUNCT_1:144;
            A18: union (Vbf"{x}) = i by A17,ZFMISC_1:31;
                   i in Vbf"{x} by A17,TARSKI:def 1;
                then i in dom Vbf & Vbf.i in {x} by FUNCT_1:def 13;
                 then i in dom f by A13,FINSEQ_2:144;
            then A19: f.i in rng f by FUNCT_1:12;
                   rng f c= the carrier of F by RELSET_1:12;
              hence thesis by A18,A19;
            end;
            consider lc being Function of B, the carrier of F such that
        A20: for y being set st y in B holds lc.y = LC(y) from FUNCT_2:sch 2
(A15);
            set ll=lc +* (((the carrier of V)\B) --> 0.F);
        A21: dom (((the carrier of V)\B) --> 0.F) = (the carrier of V)\B
            by FUNCOP_1:19;
            then dom ll = dom lc \/ ((the carrier of V)\B) by FUNCT_4:def 1;
            then dom ll = B \/ ((the carrier of V)\B) by FUNCT_2:def 1;
            then dom ll = B \/ (the carrier of V) by XBOOLE_1:39;
        then A22:dom ll = the carrier of V by XBOOLE_1:12;
        A23: rng (((the carrier of V)\B) --> 0.F) c= {0.F} by FUNCOP_1:19;
               {0.F} c= the carrier of F by ZFMISC_1:37;
        then A24: rng (((the carrier of V)\B) --> 0.F) c= the carrier of F
            by A23,XBOOLE_1:1;
        A25: rng lc c= the carrier of F by RELSET_1:12;
        A26: rng ll c= rng lc \/ rng (((the carrier of V)\B)--> 0.F)
            by FUNCT_4:18;
               rng lc \/ rng (((the carrier of V)\B)--> 0.F) c=
               the carrier of F by A24,A25,XBOOLE_1:8;
        then rng ll c= the carrier of F by A26,XBOOLE_1:1;
            then ll is Function of the carrier of V,the carrier of F
            by A22,FUNCT_2:4;
        then A27: ll is Element of Funcs(the carrier of V, the carrier of F)
            by FUNCT_2:11;

        A28: for i being set st i in dom f holds ll.(Vbf.i) = f.i
           proof let i be set such that A29: i in dom f;
            A30: i in dom Vbf by A13,A29,FINSEQ_2:144;
                then Vbf.i in B by A11,FUNCT_1:12;
                then consider y being Element of B such that
            A31: y = Vbf.i;
            A32: Vbf.i in {y} by A31,TARSKI:def 1;
                consider ee being set such that
            A33: Vbf"{y} c= {ee} by A12,FUNCT_1:159;
            A34: i in Vbf"{y} by A30,A32,FUNCT_1:def 13;
                then {i} c= {ee} by A33,ZFMISC_1:37;
                then i = ee by ZFMISC_1:24;
            then A35: Vbf"{y} = {i} by A33,A34,ZFMISC_1:39;
                   not y in (the carrier of V)\B by A10,XBOOLE_0:def 4;
                then ll.y = lc.y by A21,FUNCT_4:12;
                then ll.y = f.(union (Vbf"{y})) by A10,A20;
              hence thesis by A31,A35,ZFMISC_1:31;
            end;

        A36: for v being Element of V st not v in B
            holds ll.v = 0.F
            proof let v be Element of V;
                assume not v in B;
            then A37: v in (the carrier of V)\B by XBOOLE_0:def 4;
                then ll.v=(((the carrier of V)\B)-->0.F).v by A21,FUNCT_4:14;
              hence thesis by A37,FUNCOP_1:13;
            end;
            then reconsider L=ll as Linear_Combination of V by A27,VECTSP_6:def
4;

               for v being Element of V
            holds v in Carrier(L) implies v in B
            proof let v be Element of V;
                assume A38: v in Carrier(L);
                   now assume not v in B;
                    then ll.v = 0.F by A36;
                  hence contradiction by A38,VECTSP_6:20;
                end;
              hence thesis;
            end; then Carrier(L) c= B by SUBSET_1:7;
            then L is Linear_Combination of B by VECTSP_6:def 7;
          hence thesis by A28;
        end;
        then consider lc being Linear_Combination of B such that
    A39: for i being set st i in dom f holds lc.(Vbf.i) = f.i;
           ex y being Element of V st y = Sum(lc (#) Vbf);
      hence thesis by A6,A39;
    end;

    consider G being Function of ntocF,cLinB such that
A40: for tup being Element of ntocF holds P[tup, G.tup] from FUNCT_2:sch 3(A14)
;
A41: dom G = ntocF by FUNCT_2:def 1;

A42: for L being Linear_Combination of B holds
      ex nt being Element of ntocF st
      for i being set st i in dom nt holds nt.i = L.(Vbf.i)
    proof let L be Linear_Combination of B;
        deffunc F(set) = L.(Vbf.$1);
    A43: for x being set st x in Seg n holds F(x) in the carrier of F
        proof let x be set such that A44: x in Seg n;
               Vbf.x in rng Vbf by A13,A44,FUNCT_1:12;
            then consider vv be Element of V such that
        A45: Vbf.x = vv by A11;
               L.vv in the carrier of F;
          hence thesis by A45;
        end;
        consider f being Function of Seg n, the carrier of F such that
    A46: for x being set st x in Seg n holds f.x = F(x) from FUNCT_2:sch 2(A43)
;
    A47: dom f = Seg n by FUNCT_2:def 1;
    A48: rng f c= the carrier of F by RELSET_1:12;
           f is FinSequence-like by A47,FINSEQ_1:def 2;
        then reconsider ff=f as FinSequence of the carrier of F
        by A48,FINSEQ_1:def 4;
           len ff = n by A47,FINSEQ_1:def 3;
        then ff is Element of ntocF by FINSEQ_2:110;
      hence thesis by A46,A47;
    end;

    :: Show G is surjective
       for c being set st c in cLinB ex x being set st x in ntocF & c = G.x
    proof let c be set such that A49: c in cLinB;
           c in (Lin(B)) by A49,RLVECT_1:def 1;
        then consider l being Linear_Combination of B such that
    A50: c = Sum(l) by VECTSP_7:12;
           Carrier(l) c= rng Vbf by A11,VECTSP_6:def 7;
    then A51: Sum(l (#) Vbf) = Sum(l) by A12,VECTSP_9:7;
        consider t being Element of ntocF such that
    A52: for i being set st i in dom t holds t.i = l.(Vbf.i) by A42;
        consider lc being Linear_Combination of B such that
    A53: (for i being set st i in dom t holds lc.(Vbf.i) = t.i) and
    A54: G.t = Sum(lc (#) Vbf) by A40;
           for v being Element of V holds l.v = lc.v
        proof let v be Element of V;
               now per cases;
                suppose v in rng Vbf;
                    then consider x being set such that
                A55: [x,v] in Vbf by RELAT_1:def 5;
                A56: x in dom Vbf & Vbf.x = v by A55,FUNCT_1:8;
                then A57: x in dom t by A13,FINSEQ_2:144;
                    then l.(Vbf.x) = t.x by A52;
                hence thesis by A53,A56,A57;

                end;
                suppose A58: not v in rng Vbf;
                       now assume A59: v in Carrier(l);
                           Carrier(l) c= rng Vbf by A11,VECTSP_6:def 7;
                        hence contradiction by A58,A59;
                    end;
                then A60: l.v = 0.F by VECTSP_6:20;
                       now assume A61: v in Carrier(lc);
                           Carrier(lc) c= rng Vbf by A11,VECTSP_6:def 7;
                        hence contradiction by A58,A61;
                    end;
              hence thesis by A60,VECTSP_6:20;
            end;
            end;
          hence thesis;
        end; then G.t = Sum(l (#) Vbf) by A54,VECTSP_6:def 10;
      hence thesis by A50,A51;
    end;
then A62: rng G = cLinB by FUNCT_2:16;

    :: Show G is injective
       for x1,x2 being set st x1 in dom G & x2 in dom G & G.x1 = G.x2
      holds x1 = x2
    proof let x1,x2 be set such that
    A63: x1 in dom G and A64: x2 in dom G and A65: G.x1 = G.x2;
        reconsider t1=x1 as Element of ntocF by A63,FUNCT_2:def 1;
        reconsider t2=x2 as Element of ntocF by A64,FUNCT_2:def 1;
        reconsider v1=G.t1 as Element of Lin(B);
        reconsider v2=G.t2 as Element of Lin(B);
        consider L1 being Linear_Combination of B such that
    A66: (for i being set st i in dom t1 holds L1.(Vbf.i) = t1.i) &
        G.t1 = Sum(L1 (#) Vbf) by A40;
        consider L2 being Linear_Combination of B such that
    A67: (for i being set st i in dom t2 holds L2.(Vbf.i) = t2.i) &
        G.t2 = Sum(L2 (#) Vbf) by A40;

           Carrier(L1) c= rng Vbf by A11,VECTSP_6:def 7;
    then A68: Sum(L1) = Sum(L1 (#) Vbf) by A12,VECTSP_9:7;
           Carrier(L2) c= rng Vbf by A11,VECTSP_6:def 7;
        then Sum(L2) = Sum(L2 (#) Vbf) by A12,VECTSP_9:7;

         then Sum(L1) - Sum(L2) = 0.V by A65,A66,A67,A68,VECTSP_1:66;
    then A69: Sum(L1 - L2) = 0.V by VECTSP_6:80;
       (L1 - L2) is Linear_Combination of B by VECTSP_6:75;
    then A70: Carrier(L1 - L2) = {} by A5,A69,VECTSP_7:def 1;
           for v being Element of V holds L1.v = L2.v
        proof let v be Element of V;
            reconsider LL = L1 - L2 as Linear_Combination of B by VECTSP_6:75;
               LL.v = 0.F by A70,VECTSP_6:20;
            then 0.F = L1.v - L2.v by VECTSP_6:73;
            hence thesis by VECTSP_1:84;
        end;
    then A71: L1 = L2 by VECTSP_6:def 10;
    A72: dom t1 = Seg n & dom t2 = Seg n by FINSEQ_2:144;
           (for k being Nat st k in dom t1 holds t1.k = t2.k)
        proof let k be Nat such that A73: k in dom t1;
              t1.k = L1.(Vbf.k) by A66,A73;
            hence thesis by A67,A71,A72,A73;
        end;
        hence thesis by A72,FINSEQ_1:17;
    end;
   then G is one-to-one by FUNCT_1:def 8;
   then ntocF, G.:(ntocF) are_equipotent by A41,CARD_1:60;
   then A74: ntocF, cLinB are_equipotent by A41,A62,RELAT_1:146;
A75: Card (Seg n) = Card n & Card q = Card the carrier of F by A3,CARD_1:66,
FINSEQ_1:76;
      Card (ntocF)
   = Card Funcs (Seg n, the carrier of F) by FINSEQ_2:111
  .= Card Funcs (n, q) by A75,FUNCT_5:68
  .= q |^ n by A8,Th4;
 hence thesis by A6,A74,CARD_1:21;
end;
end;
hence thesis;
end;

definition
  let R be Skew-Field;
  func center R -> strict Field means :Def4:
   the carrier of it = {x where x is Element of R:
                    for s being Element of R holds x*s = s*x} &
   the add of it =  (the add of R) | [:the carrier of it,the carrier of it:] &
   the mult of it =  (the mult of R) | [:the carrier of it,the carrier of it:]&
   the Zero of it = the Zero of R &
   the unity of it = the unity of R;
  existence proof
   set cR = the carrier of R;
   set ccs = {x where x is Element of R:
                  for s being Element of R holds x*s = s*x};
      now let s be Element of cR;
     thus (0.R)*s = 0.R by VECTSP_1:39 .= s*(0.R) by VECTSP_1:36;
   end;
then A1: 0.R in ccs;
   then reconsider ccs as non empty set;
A2: ccs c= cR proof let x be set; assume x in ccs;
    then ex x' being Element of cR st
    x'=x & for s being Element of R holds x'*s = s*x';
    hence thesis;
   end;
   set acs = (the add of R) | [:ccs,ccs:];
   set mcs = (the mult of R) | [:ccs,ccs:];
   set Zs = the Zero of R;  set Us = the unity of R;
A3: [:ccs,ccs:] c= [:cR,cR:] proof let x be set; assume x in [:ccs,ccs:];
     then consider a,b being set such that
   A4: a in ccs & b in ccs and
   A5: x =[a,b] by ZFMISC_1:def 2;
      thus x in [:cR,cR:] by A2,A4,A5,ZFMISC_1:def 2;
   end;
   then reconsider acs as Function of [:ccs,ccs:],cR by FUNCT_2:38;
     rng acs c= ccs proof let y be set; assume y in rng acs;
    then consider x being set such that
   A6: x in dom acs and
   A7: y = acs.x by FUNCT_1:def 5;
           dom acs = [:ccs,ccs:] by FUNCT_2:def 1;
        then consider a,b being set such that
   A8: a in ccs & b in ccs and
   A9: x = [a,b] by A6,ZFMISC_1:def 2;
       reconsider a,b as Element of cR by A2,A8;
   A10: ex a' being Element of cR st a'=a &
         for s being Element of R holds a'*s = s*a'  by A8;
   A11: ex b' being Element of cR st b'=b &
         for s being Element of R holds b'*s = s*b' by A8;
   A12: [a,b] in [:ccs,ccs:] by A8,ZFMISC_1:def 2;
   A13: a+b = (the add of R).[a,b] by RLVECT_1:def 3
       .= acs.x by A9,A12,FUNCT_1:72;
          now let s be Element of cR;
        thus (a+b)*s=a*s+b*s by VECTSP_1:def 12
           .= s*a+b*s by A10 .= s*a+s*b by A11 .=s*(a+b) by VECTSP_1:def 11;
       end;
    hence y in ccs by A7,A13;
   end;
   then reconsider acs as BinOp of ccs by FUNCT_2:8;
   reconsider mcs as Function of [:ccs,ccs:],cR by A3,FUNCT_2:38;
     rng mcs c= ccs proof let y be set; assume y in rng mcs;
    then consider x being set such that
   A14: x in dom mcs and
   A15: y = mcs.x by FUNCT_1:def 5;
           dom mcs = [:ccs,ccs:] by FUNCT_2:def 1;
       then consider a,b being set such that
   A16: a in ccs & b in ccs and
   A17: x = [a,b] by A14,ZFMISC_1:def 2;
       reconsider a,b as Element of cR by A2,A16;
      A18: ex a' being Element of cR st a'=a &
         for s being Element of R holds a'*s = s*a'  by A16;
   A19: ex b' being Element of cR st b'=b &
         for s being Element of R holds b'*s = s*b' by A16;
   A20: [a,b] in [:ccs,ccs:] by A16,ZFMISC_1:def 2;
   A21: a*b = (the mult of R).(a,b) by VECTSP_1:def 10
       .= (the mult of R).[a,b] by BINOP_1:def 1
       .= mcs.x by A17,A20,FUNCT_1:72;
        now let s be Element of cR;
      thus (a*b)*s=a*(b*s) by VECTSP_1:def 16
         .= a*(s*b) by A19 .= (a*s)*b by VECTSP_1:def 16 .= (s*a)*b by A18
       .= s*(a*b) by VECTSP_1:def 16;
     end;
    hence y in ccs by A15,A21;
   end;
   then reconsider mcs as BinOp of ccs by FUNCT_2:8;
A22: Zs = 0.R by RLVECT_1:def 2;
A23: Us = 1_ R by VECTSP_1:def 9;
   reconsider Zs as Element of ccs by A1,RLVECT_1:def 2;
      now let s be Element of cR;
     thus (1_ R)*s = s by VECTSP_1:def 19 .= s*(1_ R) by VECTSP_1:def 13;
   end;
   then Us in ccs by A23;
   then reconsider Us as Element of ccs;
   reconsider cs = doubleLoopStr (# ccs, acs, mcs, Us, Zs #)
                   as non empty doubleLoopStr;
A24: 0.cs = Zs by RLVECT_1:def 2;
A25: 1_ cs = Us by VECTSP_1:def 9;
   set ccs1 = the carrier of cs;
A26: now let x,s be Element of cR; assume x in ccs;
    then ex x' being Element of cR st x'=x &
     for s being Element of R holds x'*s = s*x';
    hence x*s=s*x;
   end;
A27: now let a,b be Element of cR, c,d be Element of ccs1 such that
   A28: a=c & b=d;
   A29: [c,d] in [:ccs,ccs:] by ZFMISC_1:def 2;
    thus a*b=(the mult of R).(a,b) by VECTSP_1:def 10
     .= (the mult of R).[a,b] by BINOP_1:def 1
     .= mcs.[c,d] by A28,A29,FUNCT_1:72 .= mcs.(c,d) by BINOP_1:def 1
     .= c*d by VECTSP_1:def 10;
   end;
A30: now let a,b being Element of cR, c,d be Element of ccs1 such that
   A31: a=c & b=d;
   A32: [c,d] in [:ccs,ccs:] by ZFMISC_1:def 2;
   thus a+b= (the add of R).[a,b] by RLVECT_1:def 3
    .= acs.[c,d] by A31,A32,FUNCT_1:72 .= c+d by RLVECT_1:def 3;
   end;
A33: cs is Abelian proof let x,y be Element of ccs1;
      x in ccs1 & y in ccs1;
    then reconsider x'=x,y'=y as Element of cR by A2;
    thus x+y = y'+x' by A30 .= y+x by A30;
   end;
A34: cs is add-associative proof let x,y,z be Element of ccs1;
      x in ccs1 & y in ccs1 & z in ccs1;
    then reconsider x'=x,y'=y,z'=z as Element of cR by A2;
    A35: x'+y'=x+y by A30;   A36: y'+z'=y+z by A30;
    thus (x+y)+z = (x'+y')+z' by A30,A35 .= x'+(y'+z') by RLVECT_1:def 6
    .= x+(y+z) by A30,A36;
   end;
A37: cs is right_zeroed proof let x be Element of ccs1;
       x in ccs1; then reconsider x'=x as Element of cR by A2;
    thus x + 0.cs = x'+0.R by A22,A24,A30 .= x by RLVECT_1:def 7;
   end;
A38: cs is right_complementable proof let x be Element of ccs1;
       x in ccs1; then reconsider x'=x as Element of cR by A2;
    consider y' being Element of cR such that
   A39: x' + y' = 0.R by RLVECT_1:def 8;
        now let s be Element of cR;
   A40: s*x'=x'*s by A26;
         0.R*s=0.R by VECTSP_1:39 .= s*0.R by VECTSP_1:36;
        then x'*s+y'*s=s*(x'+y') by A39,VECTSP_1:def 12;
       then x'*s+y'*s=s*x'+s*y' by VECTSP_1:def 11;
        then (-(x'*s)+x'*s)+y'*s=-(s*x')+(s*x'+s*y') by A40,RLVECT_1:def 6
;
       then 0.R+y'*s=-(s*x')+(s*x'+s*y') by RLVECT_1:16;
       then y'*s=-(s*x')+(s*x'+s*y') by RLVECT_1:10;
       then y'*s=(-(s*x')+s*x')+s*y' by RLVECT_1:def 6;
       then y'*s=0.R+s*y' by RLVECT_1:16;
      hence y'*s=s*y' by RLVECT_1:10;
      end; then y' in ccs1; then reconsider y=y' as Element of ccs1;
          x'+y'=x+y by A30;
    hence ex y being Element of ccs1 st x + y = 0.cs by A22,A24,A39;
   end;
A41: cs is associative proof let x,y,z be Element of ccs1;
      x in ccs1 & y in ccs1 & z in ccs1;
    then reconsider x'=x,y'=y,z'=z as Element of cR by A2;
    A42: x'*y'=x*y by A27;   A43: y'*z'=y*z by A27;
    thus (x*y)*z = (x'*y')*z' by A27,A42 .= x'*(y'*z') by VECTSP_1:def 16
    .= x*(y*z) by A27,A43;
   end;
A44: cs is left_unital proof let x be Element of ccs1;
       x in ccs1; then reconsider x'=x as Element of cR by A2;
    thus (1_ cs) * x = (1_ R)*x' by A23,A25,A27 .= x by VECTSP_1:def 19;
   end;
A45: cs is distributive proof let x,y,z be Element of ccs1;
      x in ccs1 & y in ccs1 & z in ccs1;
    then reconsider x'=x,y'=y,z'=z as Element of cR by A2;
   A46: y+z=y'+z' by A30;   A47: x'*y'=x*y by A27;   A48: x'*z'=x*z by A27;
   A49: y'*x'=y*x by A27;   A50: z'*x'=z*x by A27;
    thus x*(y+z) = x'*(y'+z') by A27,A46 .= x'*y'+x'*z' by VECTSP_1:def 18
    .= x*y+x*z by A30,A47,A48;
    thus (y+z)*x = (y'+z')*x' by A27,A46 .= y'*x'+z'*x' by VECTSP_1:def 18
    .= y*x+z*x by A30,A49,A50;
   end;
A51: cs is Field-like proof let x be Element of ccs1 such that
   A52: x <> 0.cs;
         x in ccs1; then reconsider x'=x as Element of cR by A2;
       consider y' being Element of cR such that
   A53: x'*y'=1_ R by A22,A24,A52,VECTSP_1:def 20;
        now let s be Element of cR;
          (1_ R)*s = s by VECTSP_1:def 19 .= s*(1_ R) by VECTSP_1:def 13;
       then x'*y'*s = (s*x')*y' by A53,VECTSP_1:def 16;
       then x'*y'*s = x'*s*y' by A26;
        then x'"*(x'*y')*s = x'"*(x'*s*y') by VECTSP_1:def 16;
       then x'"*(x'*y')*s = x'"*(x'*s)*y' by VECTSP_1:def 16;
       then x'"*x'*y'*s = x'"*(x'*s)*y' by VECTSP_1:def 16;
       then x'"*x'*y'*s = x'"*x'*s*y' by VECTSP_1:def 16;
       then (1_ R)*y'*s = x'"*x'*s*y' by A22,A24,A52,VECTSP_2:43;
       then (1_ R)*y'*s = (1_ R)*s*y' by A22,A24,A52,VECTSP_2:43;
       then y'*s = (1_ R)*s*y' by VECTSP_1:def 19;
      hence y'*s=s*y' by VECTSP_1:def 19;
     end; then y' in ccs1; then reconsider y=y' as Element of ccs1;
       take y;
       thus x*y= 1_ cs by A23,A25,A27,A53;
   end;
A54: cs is commutative proof let x,y be Element of ccs1;
         x in ccs1 & y in ccs1;
    then reconsider x'=x,y'=y as Element of cR by A2;
    thus x*y = x'*y' by A27 .= y'*x' by A26 .= y*x by A27;
   end;
      0.R <> 1_ R by VECTSP_1:def 21;
    then cs is non degenerated by A22,A23,A24,A25,VECTSP_1:def 21;
   hence thesis by A33,A34,A37,A38,A41,A44,A45,A51,A54;
  end;
  uniqueness;
end;

theorem  Th17: :: Center0:
for R being Skew-Field holds the carrier of center R c= the carrier of R
proof let R be Skew-Field;
     for x being set st x in the carrier of center R holds x in the carrier
of R
  proof let y be set such that
  A1: y in the carrier of center R;
       y in {x where x is Element of R: for s being Element of R holds x*s =
s*x}
       by A1,Def4;
      then consider x being Element of R such that
  A2: x = y and for s being Element of R holds x*s = s*x;
    thus thesis by A2;
  end;
  hence thesis by TARSKI:def 3;
end;

registration let R be finite Skew-Field;
  cluster center R -> finite;
  correctness proof
        the carrier of center R c= the carrier of R by Th17;
     then the carrier of center R is finite by FINSET_1:13;
     hence thesis by GROUP_1:def 13;
  end;
end;

theorem  Th18: :: Center1:
for R being Skew-Field, y being Element of R
 holds y in center R iff for s being Element of R holds y*s = s*y
proof let R be Skew-Field, y be Element of R;
    hereby assume y in center R;
        then y in the carrier of center R by RLVECT_1:def 1;
        then y in {x where x is Element of R:
        for s being Element of R holds x*s = s*x}
        by Def4;
        then consider x being Element of R such that
    A1: x = y and A2: for s being Element of R holds x*s=s*x;
      thus for s being Element of R holds y*s = s*y by A1,A2;
    end;
       now assume for s being Element of R holds y*s = s*y;
        then y in {x where x is Element of R:
        for s being Element of R holds x*s = s*x};
        then y is Element of center R by Def4;
     hence y in center R by RLVECT_1:def 1;
    end;
  hence thesis;
end;

theorem  Th19: :: Center1a:
for R being Skew-Field holds 0.R in center R
proof let R be Skew-Field;
           for s being Element of R holds 0.R*s = s*0.R
        proof let s be Element of R;
               0.R*s = 0.R by VECTSP_1:39 .= s*0.R by VECTSP_1:36;
          hence thesis;
        end;
 hence thesis by Th18;
end;

theorem  Th20: :: Center1b:
for R being Skew-Field holds 1_ R in center R
proof let R be Skew-Field;
     for s being Element of R holds (1_ R)*s = s*(1_ R)
   proof let s be Element of R;
       (1_ R)*s = s by VECTSP_1:def 19 .= s*(1_ R) by VECTSP_1:def 13;
    hence thesis;
   end;
 hence thesis by Th18;
end;

theorem  Th21: :: Center2:
for R being finite Skew-Field holds 1 < card (the carrier of center R)
proof let R be finite Skew-Field;
       0.R <> 1_ R by VECTSP_1:def 21;
then A1: card {0.R, 1_ R} = 2  by CARD_2:76;
       0.R in center R by Th19;
then A2: 0.R in the carrier of center R by RLVECT_1:def 1;
       for s being Element of R holds (1_ R)*s = s*(1_ R)
    proof let s be Element of R;
         s*(1_ R) = s by VECTSP_1:def 13 .= (1_ R)*s by VECTSP_1:def 19;
      hence thesis;
    end;
    then 1_ R in center R by Th18;
    then 1_ R in the carrier of center R by RLVECT_1:def 1;
    then {0.R, 1_ R} c= the carrier of center R by A2,ZFMISC_1:38;
    then 2 <= card the carrier of center R by A1,CARD_1:80;
  hence thesis by AXIOMS:22;
end;

theorem  Th22: :: Center3:
for R being finite Skew-Field holds
  card the carrier of center R = card the carrier of R iff R is commutative
proof let R be finite Skew-Field;
   set X = the carrier of R;  set Y = the carrier of center R;
   hereby assume A1: card X = card Y;
   A2: Y c= X by Th17;
       then card (X \ Y) = card X - card X by A1,CARD_2:63; then X \ Y = {}
by CARD_4:17;
       then X c= Y by XBOOLE_1:37;
   then A3: X = Y by A2,XBOOLE_0:def 10;
          for x being Element of X
         holds for s being Element of X holds x*s=s*x
       proof let x be Element of X;    x in center R by A3,RLVECT_1:def 1;
         hence thesis by Th18;
       end;
     hence R is commutative by VECTSP_1:def 17;
   end;
      now assume A4: R is commutative;
          for x being set st x in X holds x in Y
       proof let x be set such that A5: x in X;
              for x being Element of X holds x is Element of Y
           proof let x be Element of X;
                for y being Element of X holds x*y = y*x by A4,VECTSP_1:def 17;
             then x in center R by Th18;
             hence thesis by RLVECT_1:def 1;
           end; then x is Element of Y by A5;
         hence thesis;
       end;
   then A6: X c= Y by TARSKI:def 3;           Y c= X by Th17;
     hence card Y = card X by A6,XBOOLE_0:def 10;
   end;
 hence thesis;
end;

theorem  Th23: :: Center4:
for R being Skew-Field
 holds the carrier of center R = (the carrier of center MultGroup R) \/ {0.R}
proof let R being Skew-Field;
A1: the carrier of center MultGroup R c= the carrier of MultGroup R
    by GROUP_2:def 5;
A2: the carrier of MultGroup R = (the carrier of R) \ {0.R} by UNIROOTS:def 1;
A3: (the carrier of MultGroup R)\/ {0.R} = the carrier of R by UNIROOTS:18;
A4: the carrier of center R c= the carrier of R by Th17;
A5:(the carrier of center MultGroup R) \/ {0.R} c= the carrier of center R
   proof
   let x be set;
   assume A6: x in (the carrier of center MultGroup R) \/ {0.R};
   per cases by A6,XBOOLE_0:def 2;
   suppose A7: x in the carrier of center MultGroup R;
      then reconsider a = x as Element of MultGroup R by A1;
      A8: a in center MultGroup R by A7,RLVECT_1:def 1;
      reconsider a1 = a as Element of R by UNIROOTS:22;
         now let b be Element of R;
        thus a1*b = b*a1 proof
        per cases by A3,XBOOLE_0:def 2;
        suppose b in (the carrier of MultGroup R);
          then reconsider b1 = b as Element of MultGroup R;
         thus a1*b = a*b1 by UNIROOTS:19 .= b1*a by A8,GROUP_5:89 .= b*a1 by
UNIROOTS:19;
        end;
        suppose b in {0.R};
        then A9: b = 0.R by TARSKI:def 1;
         hence a1*b = 0.R by VECTSP_1:36 .= b*a1 by A9,VECTSP_1:39;
        end;
        end;
      end;
      then a1 in center R by Th18;
    hence thesis by RLVECT_1:def 1;
   end;
   suppose x in {0.R}; then x = 0.R by TARSKI:def 1;
     then x in center R by Th19;
    hence x in the carrier of center R by RLVECT_1:def 1;
  end;
  end;
     the carrier of center R c= (the carrier of center MultGroup R) \/ {0.R}
  proof
   let x be set; assume
  A10: x in the carrier of center R;
      then reconsider a = x as Element of center R;
      reconsider a1 = a as Element of R by A4,A10;
   per cases;
   suppose a1 = 0.R; then a1 in {0.R} by TARSKI:def 1;
    hence x in (the carrier of center MultGroup R) \/ {0.R} by XBOOLE_0:def 2;
   end;
   suppose a1 <> 0.R;
   then not a1 in {0.R} by TARSKI:def 1;
       then reconsider a2 = a1 as Element of MultGroup R by A2,XBOOLE_0:def 4;
          now let b be Element of MultGroup R;
       A11: b in the carrier of MultGroup R;
           the carrier of MultGroup R c= (the carrier of R) by A2,XBOOLE_1:36;
         then reconsider b1 = b as Element of R by A11;
       A12: x in center R by A10,RLVECT_1:def 1;
        thus a2*b=a1*b1 by UNIROOTS:19 .= b1*a1 by A12,Th18
          .= b*a2 by UNIROOTS:19;
       end;
       then a1 in center MultGroup R by GROUP_5:89;
       then a1 in the carrier of center MultGroup R by RLVECT_1:def 1;
    hence x in (the carrier of center MultGroup R) \/ {0.R} by XBOOLE_0:def 2;

  end;
  end;
 hence thesis by A5,XBOOLE_0:def 10;
end;

definition
  let R be Skew-Field, s be Element of R;
  func centralizer s -> strict Skew-Field means :Def5:
   the carrier of it = {x where x is Element of R: x*s = s*x} &
   the add of it =  (the add of R) | [:the carrier of it,the carrier of it:] &
   the mult of it =  (the mult of R) | [:the carrier of it,the carrier of it:]&
   the Zero of it = the Zero of R &
   the unity of it = the unity of R;
  existence proof
   set cR = the carrier of R;
   set ccs = {x where x is Element of R: x*s = s*x};
      (0.R)*s = 0.R by VECTSP_1:39 .= s*(0.R) by VECTSP_1:36;
   then 0.R in ccs;
   then reconsider ccs as non empty set;
A1: ccs c= cR proof let x be set; assume x in ccs;
    then ex x' being Element of cR st x'=x & x'*s=s*x';
    hence thesis;
   end;
   set acs = (the add of R) | [:ccs,ccs:];
   set mcs = (the mult of R) | [:ccs,ccs:];
   set Zs = the Zero of R;  set Us = the unity of R;
A2: [:ccs,ccs:] c= [:cR,cR:] proof let x be set; assume x in [:ccs,ccs:];
     then consider a,b being set such that
   A3: a in ccs & b in ccs and
   A4: x =[a,b] by ZFMISC_1:def 2;
      thus x in [:cR,cR:] by A1,A3,A4,ZFMISC_1:def 2;
   end;
   then reconsider acs as Function of [:ccs,ccs:],cR by FUNCT_2:38;
     rng acs c= ccs proof let y be set; assume y in rng acs;
    then consider x being set such that
   A5: x in dom acs and
   A6: y = acs.x by FUNCT_1:def 5;
           dom acs = [:ccs,ccs:] by FUNCT_2:def 1;
        then consider a,b being set such that
   A7: a in ccs & b in ccs and
   A8: x = [a,b] by A5,ZFMISC_1:def 2;
       reconsider a,b as Element of cR by A1,A7;
   A9: ex a' being Element of cR st a'=a & a'*s=s*a' by A7;
   A10: ex b' being Element of cR st b'=b & b'*s=s*b' by A7;
   A11: [a,b] in [:ccs,ccs:] by A7,ZFMISC_1:def 2;
   A12: a+b = (the add of R).[a,b] by RLVECT_1:def 3
       .= acs.x by A8,A11,FUNCT_1:72;
          (a+b)*s=s*a+s*b by A9,A10,VECTSP_1:def 12
       .=s*(a+b) by VECTSP_1:def 11;
    hence y in ccs by A6,A12;
   end;
   then reconsider acs as BinOp of ccs by FUNCT_2:8;
   reconsider mcs as Function of [:ccs,ccs:],cR by A2,FUNCT_2:38;
     rng mcs c= ccs proof let y be set; assume y in rng mcs;
    then consider x being set such that
   A13: x in dom mcs and
   A14: y = mcs.x by FUNCT_1:def 5;
           dom mcs = [:ccs,ccs:] by FUNCT_2:def 1;
       then consider a,b being set such that
   A15: a in ccs & b in ccs and
   A16: x = [a,b] by A13,ZFMISC_1:def 2;
       reconsider a,b as Element of cR by A1,A15;
   A17: ex a' being Element of cR st a'=a & a'*s=s*a' by A15;
   A18: ex b' being Element of cR st b'=b & b'*s=s*b' by A15;
   A19: [a,b] in [:ccs,ccs:] by A15,ZFMISC_1:def 2;
   A20: a*b = (the mult of R).(a,b) by VECTSP_1:def 10
       .= (the mult of R).[a,b] by BINOP_1:def 1
       .= mcs.x by A16,A19,FUNCT_1:72;
          (a*b)*s=a*(s*b) by A18,VECTSP_1:def 16 .= (a*s)*b by VECTSP_1:def 16
       .= s*(a*b) by A17,VECTSP_1:def 16;
    hence y in ccs by A14,A20;
   end;
   then reconsider mcs as BinOp of ccs by FUNCT_2:8;
A21: Zs = 0.R by RLVECT_1:def 2;
A22: Us = 1_ R by VECTSP_1:def 9;
      (0.R)*s = 0.R by VECTSP_1:39 .= s*(0.R) by VECTSP_1:36;
   then Zs in ccs by A21;
   then reconsider Zs as Element of ccs;
      (1_ R)*s = s by VECTSP_1:def 19 .= s*(1_ R) by VECTSP_1:def 13;
   then Us in ccs by A22;
   then reconsider Us as Element of ccs;
   reconsider cs = doubleLoopStr (# ccs, acs, mcs, Us, Zs #)
                   as non empty doubleLoopStr;
A23: 0.cs = Zs by RLVECT_1:def 2;
A24: 1_ cs = Us by VECTSP_1:def 9;
   set ccs1 = the carrier of cs;
A25: now let x be Element of cR; assume x in ccs;
    then ex x' being Element of cR st x'=x & x'*s = s*x';
    hence x*s=s*x;
   end;
A26: now let a,b be Element of cR, c,d be Element of ccs1 such that
   A27: a=c & b=d;
   A28: [c,d] in [:ccs,ccs:] by ZFMISC_1:def 2;
    thus a*b=(the mult of R).(a,b) by VECTSP_1:def 10
     .= (the mult of R).[a,b] by BINOP_1:def 1
     .= mcs.[c,d] by A27,A28,FUNCT_1:72 .= mcs.(c,d) by BINOP_1:def 1
     .= c*d by VECTSP_1:def 10;
   end;
A29: now let a,b being Element of cR, c,d be Element of ccs1 such that
   A30: a=c & b=d;
   A31: [c,d] in [:ccs,ccs:] by ZFMISC_1:def 2;
   thus a+b= (the add of R).[a,b] by RLVECT_1:def 3
    .= acs.[c,d] by A30,A31,FUNCT_1:72 .= c+d by RLVECT_1:def 3;
   end;
A32: cs is Abelian proof let x,y be Element of ccs1;
      x in ccs1 & y in ccs1;
    then reconsider x'=x,y'=y as Element of cR by A1;
    thus x+y = y'+x' by A29 .= y+x by A29;
   end;
A33: cs is add-associative proof let x,y,z be Element of ccs1;
      x in ccs1 & y in ccs1 & z in ccs1;
    then reconsider x'=x,y'=y,z'=z as Element of cR by A1;
    A34: x'+y'=x+y by A29;   A35: y'+z'=y+z by A29;
    thus (x+y)+z = (x'+y')+z' by A29,A34 .= x'+(y'+z') by RLVECT_1:def 6
    .= x+(y+z) by A29,A35;
   end;
A36: cs is right_zeroed proof let x be Element of ccs1;
       x in ccs1; then reconsider x'=x as Element of cR by A1;
    thus x + 0.cs = x'+0.R by A21,A23,A29 .= x by RLVECT_1:def 7;
   end;
A37: cs is right_complementable proof let x be Element of ccs1;
       x in ccs1; then reconsider x'=x as Element of cR by A1;
    consider y' being Element of cR such that
   A38: x' + y' = 0.R by RLVECT_1:def 8;
   A39: s*x'=x'*s by A25;
         0.R*s=0.R by VECTSP_1:39 .= s*0.R by VECTSP_1:36;
        then x'*s+y'*s=s*(x'+y') by A38,VECTSP_1:def 12;
       then x'*s+y'*s=s*x'+s*y' by VECTSP_1:def 11;
        then (-(x'*s)+x'*s)+y'*s=-(s*x')+(s*x'+s*y') by A39,RLVECT_1:def 6
;
       then 0.R+y'*s=-(s*x')+(s*x'+s*y') by RLVECT_1:16;
       then y'*s=-(s*x')+(s*x'+s*y') by RLVECT_1:10;
       then y'*s=(-(s*x')+s*x')+s*y' by RLVECT_1:def 6;
       then y'*s=0.R+s*y' by RLVECT_1:16; then y'*s=s*y' by RLVECT_1:10;
       then y' in ccs1; then reconsider y=y' as Element of ccs1;
          x'+y'=x+y by A29;
    hence ex y being Element of ccs1 st x + y = 0.cs by A21,A23,A38;
   end;
A40: cs is associative proof let x,y,z be Element of ccs1;
      x in ccs1 & y in ccs1 & z in ccs1;
    then reconsider x'=x,y'=y,z'=z as Element of cR by A1;
    A41: x'*y'=x*y by A26;   A42: y'*z'=y*z by A26;
    thus (x*y)*z = (x'*y')*z' by A26,A41 .= x'*(y'*z') by VECTSP_1:def 16
    .= x*(y*z) by A26,A42;
   end;
A43: cs is right_unital proof let x be Element of ccs1;
       x in ccs1; then reconsider x'=x as Element of cR by A1;
    thus x*(1_ cs) = x'*(1_ R) by A22,A24,A26 .= x by VECTSP_1:def 13;
   end;
A44: cs is left_unital proof let x be Element of ccs1;
       x in ccs1; then reconsider x'=x as Element of cR by A1;
    thus (1_ cs) * x = (1_ R)*x' by A22,A24,A26 .= x by VECTSP_1:def 19;
   end;
A45: cs is distributive proof let x,y,z be Element of ccs1;
      x in ccs1 & y in ccs1 & z in ccs1;
    then reconsider x'=x,y'=y,z'=z as Element of cR by A1;
   A46: y+z=y'+z' by A29;   A47: x'*y'=x*y by A26;   A48: x'*z'=x*z by A26;
   A49: y'*x'=y*x by A26;   A50: z'*x'=z*x by A26;
    thus x*(y+z) = x'*(y'+z') by A26,A46 .= x'*y'+x'*z' by VECTSP_1:def 18
    .= x*y+x*z by A29,A47,A48;
    thus (y+z)*x = (y'+z')*x' by A26,A46 .= y'*x'+z'*x' by VECTSP_1:def 18
    .= y*x+z*x by A29,A49,A50;
   end;
A51: cs is Field-like proof let x be Element of ccs1 such that
   A52: x <> 0.cs;
         x in ccs1; then reconsider x'=x as Element of cR by A1;
       consider y' being Element of cR such that
   A53: x'*y'=1_ R by A21,A23,A52,VECTSP_1:def 20;
          (1_ R)*s = s by VECTSP_1:def 19 .= s*(1_ R) by VECTSP_1:def 13;
       then x'*y'*s = (s*x')*y' by A53,VECTSP_1:def 16;
       then x'*y'*s = x'*s*y' by A25;
        then x'"*(x'*y')*s = x'"*(x'*s*y') by VECTSP_1:def 16;
       then x'"*(x'*y')*s = x'"*(x'*s)*y' by VECTSP_1:def 16;
       then x'"*x'*y'*s = x'"*(x'*s)*y' by VECTSP_1:def 16;
       then x'"*x'*y'*s = x'"*x'*s*y' by VECTSP_1:def 16;
       then (1_ R)*y'*s = x'"*x'*s*y' by A21,A23,A52,VECTSP_2:43;
       then (1_ R)*y'*s = (1_ R)*s*y' by A21,A23,A52,VECTSP_2:43;
       then y'*s = (1_ R)*s*y' by VECTSP_1:def 19;
       then y'*s=s*y' by VECTSP_1:def 19; then y' in ccs1;
       then reconsider y=y' as Element of ccs1;
       take y;
       thus x*y= 1_ cs by A22,A24,A26,A53;
   end;
      0.R <> 1_ R by VECTSP_1:def 21;
    then cs is non degenerated by A21,A22,A23,A24,VECTSP_1:def 21;
   hence thesis by A32,A33,A36,A37,A40,A43,A44,A45,A51;
  end;
  uniqueness;
end;

theorem  Th24: :: Central00:
for R be Skew-Field, s be Element of R
 holds the carrier of centralizer s c= the carrier of R
proof let R be Skew-Field, s be Element of R;
   set cs = centralizer s; set ccs = the carrier of cs;
A1: ccs = {x where x is Element of R: x*s = s*x} by Def5;
  let x be set;
  assume x in the carrier of centralizer s;
   then ex a being Element of R st a=x & a*s=s*a by A1;
  hence x in the carrier of R;
end;

theorem  Th25: :: Central02a:
for R be Skew-Field, s, a be Element of R
 holds a in the carrier of centralizer s iff a*s = s*a
proof let R be Skew-Field, s, a be Element of R;
   set cs = centralizer s; set ccs = the carrier of cs;
A1: ccs = {x where x is Element of R: x*s = s*x} by Def5;
 hereby assume a in the carrier of centralizer s;
   then ex x being Element of R st a=x & x*s=s*x by A1;
  hence a*s = s*a;
 end;
 assume a*s = s*a;
 hence a in the carrier of centralizer s by A1;
end;

theorem  :: Central02b:
   for R be Skew-Field, s be Element of R
  holds the carrier of center R c= the carrier of centralizer s
proof let R be Skew-Field, s be Element of R;
 let x be set; assume
A1: x in the carrier of center R;
     the carrier of center R c= the carrier of R by Th17;
   then reconsider a = x as Element of R by A1;
      a in center R by A1,RLVECT_1:def 1;
   then a*s=s*a by Th18;
 hence x in the carrier of centralizer s by Th25;
end;

theorem  Th27: :: Central02:
for R be Skew-Field, s, a, b be Element of R
 st a in the carrier of center R & b in the carrier of centralizer s
  holds a*b in the carrier of centralizer s
proof let R be Skew-Field, s, a, b be Element of R such that
A1: a in the carrier of center R and
A2: b in the carrier of centralizer s;
  set cs = centralizer s; set ccs = the carrier of cs;
A3: ccs = {x where x is Element of R: x*s = s*x} by Def5;
A4: a in center R by A1,RLVECT_1:def 1;
     a*b*s=a*(b*s) by VECTSP_1:def 16
  .= (b*s)*a by A4,Th18
  .= (s*b)*a by A2,Th25
  .= s*(b*a) by VECTSP_1:def 16
  .= s*(a*b) by A4,Th18;
 hence a*b in the carrier of centralizer s by A3;
end;

theorem  Th28: :: Central0:
for R be Skew-Field, s be Element of R
  holds 0.R is Element of centralizer s & 1_ R is Element of centralizer s
proof let R be Skew-Field, s be Element of R;
       0.R*s = 0.R by VECTSP_1:39 .= s*0.R by VECTSP_1:36;
    then A1: 0.R in {x where x is Element of R: x*s = s*x};
       s*(1_ R) = s by VECTSP_1:def 13 .= (1_ R)*s by VECTSP_1:def 19;
    then 1_ R in {x where x is Element of R: x*s = s*x};
  hence thesis by A1,Def5;
end;

registration let R be finite Skew-Field;
  let s be Element of R;
  cluster centralizer s -> finite;
  correctness proof
      the carrier of centralizer s c= the carrier of R by Th24;
   then the carrier of centralizer s is finite by FINSET_1:13;
   hence thesis by GROUP_1:def 13;
  end;
end;

theorem  Th29: :: Central1:
for R be finite Skew-Field, s be Element of R
  holds 1 < card (the carrier of centralizer s)
proof let R be finite Skew-Field, s be Element of R;
       0.R <> 1_ R by VECTSP_1:def 21;
then A1: card {0.R, 1_ R} = 2  by CARD_2:76;
       0.R is Element of centralizer s &
    1_ R is Element of centralizer s by Th28;
    then {0.R, 1_ R} c= the carrier of centralizer s by ZFMISC_1:38;
    then 2 <= card the carrier of centralizer s by A1,CARD_1:80;
  hence thesis by AXIOMS:22;
end;

theorem  Th30: :: Central2a:
for R being Skew-Field, s being Element of R, t being Element of MultGroup R
 st t = s
  holds the carrier of centralizer s = (the carrier of Centralizer t) \/ {0.R}
proof let R be Skew-Field, s be Element of R,
          t be Element of MultGroup R such that
A1: t = s;
  set ct = Centralizer t, cs = centralizer s;
  set cct = the carrier of ct, ccs = the carrier of cs;
A2: the carrier of MultGroup R = (the carrier of R) \ {0.R} by UNIROOTS:def 1;
A3: cct = { b where b is Element of MultGroup R : t*b = b*t } by Def1;
A4: ccs = {x where x is Element of R: x*s = s*x} by Def5;
      now let x be set;
     hereby assume x in ccs;
       then consider c being Element of R such that
     A5: c = x and
     A6: c*s=s*c by A4;
     per cases;
     suppose c = 0.R; then c in {0.R} by TARSKI:def 1;
      hence x in cct \/ {0.R} by A5,XBOOLE_0:def 2;
     end;
     suppose c <> 0.R; then not c in {0.R} by TARSKI:def 1;
      then reconsider c1 = c as Element of MultGroup R by A2,XBOOLE_0:def 4;
         t*c1 = s*c by A1,UNIROOTS:19 .= c1*t by A1,A6,UNIROOTS:19;
       then c in cct by A3;
      hence x in cct \/ {0.R} by A5,XBOOLE_0:def 2;
     end;
     end;
     assume A7: x in cct \/ {0.R};
     per cases by A7,XBOOLE_0:def 2;
     suppose x in cct; then consider b being Element of MultGroup R such
that
     A8: x = b and
     A9: t*b = b*t by A3;
         reconsider b1 = b as Element of R by UNIROOTS:22;
            b1*s = t*b by A1,A9,UNIROOTS:19 .= s*b1 by A1,UNIROOTS:19;
      hence x in ccs by A4,A8;
     end;
     suppose x in {0.R};
     then A10: x = 0.R by TARSKI:def 1;
            0.R*s = 0.R by VECTSP_1:39 .= s*0.R by VECTSP_1:36;
     hence x in ccs by A4,A10;
   end;
   end;
  hence thesis by TARSKI:2;
end;

theorem  Th31: :: Central2:
for R being finite Skew-Field, s being Element of R,
    t being Element of MultGroup R st t = s
  holds ord Centralizer t = card (the carrier of centralizer s) - 1
proof let R be finite Skew-Field, s be Element of R,
          t be Element of MultGroup R such that
A1: t = s;
  set ct = Centralizer t, cs = centralizer s;
  set cct = the carrier of ct, ccs = the carrier of cs;
     the carrier of MultGroup R = (the carrier of R) \ {0.R}
    by UNIROOTS:def 1;
  then not 0.R in the carrier of MultGroup R by ZFMISC_1:64;
  then not 0.R in MultGroup R by RLVECT_1:def 1;
  then not 0.R in ct by Th7;
then A2: not 0.R in cct by RLVECT_1:def 1;
     cct \/ {0.R} = ccs by A1,Th30;
then card ccs = card cct +1 by A2,CARD_2:54;
  hence ord Centralizer t = card (ccs) - 1 by GROUP_1:def 14;
end;

begin :: Vector spaces over centers of skew fields

definition
  let R be Skew-Field;
  func VectSp_over_center R -> strict VectSp of center R means :Def6:
  the LoopStr of it = the LoopStr of R &
  the lmult of it = (the mult of R )
                     | [:the carrier of center R, the carrier of R:];
  existence proof
  set cR = center R; set ccR = the carrier of cR;
  set ccs = the carrier of R;
  set lm = (the mult of R)|[:ccR, ccs:];
  A1: ccR c= the carrier of R by Th17;
  A2: dom (the mult of R) = [:the carrier of R,the carrier of R:]
      by FUNCT_2:def 1;
         [:ccR, ccs:] c= [:the carrier of R,the carrier of R:] proof
         let x be set;  assume x in [:ccR, ccs:];
          then consider x1, x2 being set such that
      A3: x1 in ccR and
      A4: x2 in ccs and
      A5: x = [x1,x2] by ZFMISC_1:def 2;
         thus thesis by A1,A3,A4,A5,ZFMISC_1:def 2;
      end;
  then A6: dom lm = [:ccR, ccs:] by A2,RELAT_1:91;
      now let x be set; assume
   A7: x in [:ccR, ccs:];
     then consider x1, x2 being set such that
   A8: x1 in ccR and
   A9: x2 in ccs and
   A10: x = [x1,x2] by ZFMISC_1:def 2;
     reconsider x1 as Element of R by A1,A8;
     reconsider x2 as Element of R by A9;
        lm.x = (the mult of R).x by A7,FUNCT_1:72
     .= (the mult of R).(x1,x2) by A10,BINOP_1:def 1
     .= x1*x2 by VECTSP_1:def 10;
    hence lm.x in ccs;
   end;
  then reconsider lm  as Function of [:ccR,ccs:], ccs by A6,FUNCT_2:5;
   set Vos = VectSpStr(#
     ccs,     the add of R,
     the Zero of R,        lm #);
     set cV = the carrier of Vos;
     set aV = the add of Vos, ac = the add of R;
     set ZV = the Zero of Vos, Zc = the Zero of R;
A11: Vos is VectSp-like proof
     let x,y be Element of ccR, v,w be Element of cV;
    x in ccR & y in ccR;
     then reconsider xx=x, yy=y as Element of R by A1;
     reconsider vv=v, ww=w as Element of R;
   A12: the mult of cR =  (the mult of R) | [:ccR,ccR:] by Def4;
   A13: the add of cR = (the add of R) | [:ccR,ccR:] by Def4;
   A14: [x,w] in [:ccR,ccs:] by ZFMISC_1:def 2;
   A15: [x,v+w] in [:ccR,ccs:] by ZFMISC_1:def 2;
   A16: [y,v] in [:ccR,ccs:] by ZFMISC_1:def 2;
   A17: [x,v] in [:ccR,ccs:] by ZFMISC_1:def 2;
   A18: [x+y,v] in [:ccR,ccs:] by ZFMISC_1:def 2;
   A19: [x,y*v] in [:ccR,ccs:] by ZFMISC_1:def 2;
   A20: [y,v] in [:ccR,ccs:] by ZFMISC_1:def 2;
   A21: [x*y,v] in [:ccR,ccs:] by ZFMISC_1:def 2;
   A22: [x,y] in [:ccR,ccR:] by ZFMISC_1:def 2;
     thus x*(v+w) = lm.(x,v+w) by VECTSP_1:def 24
     .= lm.[x,v+w] by BINOP_1:def 1
     .= (the mult of R).[x,v+w] by A15,FUNCT_1:72
     .= (the mult of R).[x,(the add of R).[vv,ww]] by RLVECT_1:def 3
     .= (the mult of R).[x,vv+ww] by RLVECT_1:def 3
     .= (the mult of R).(xx,vv+ww) by BINOP_1:def 1
     .= xx*(vv+ww) by VECTSP_1:def 10
     .= xx*vv+xx*ww by VECTSP_1:def 11
     .= (the add of R).[xx*vv,xx*ww] by RLVECT_1:def 3
     .= (the add of R).[(the mult of R).(xx,vv),xx*ww] by VECTSP_1:def 10
     .= (the add of R).[(the mult of R).[xx,vv],xx*ww] by BINOP_1:def 1
     .= (the add of R).[lm.[x,v],xx*ww] by A17,FUNCT_1:72
     .= (the add of R).[lm.(x,v),xx*ww] by BINOP_1:def 1
     .= (the add of R).[x*v,xx*ww] by VECTSP_1:def 24
     .= (the add of R).[x*v,(the mult of R).(xx,ww)] by VECTSP_1:def 10
     .= (the add of R).[x*v,(the mult of R).[xx,ww]] by BINOP_1:def 1
     .= (the add of R).[x*v,lm.[x,w]] by A14,FUNCT_1:72
     .= (the add of R).[x*v,lm.(x,w)] by BINOP_1:def 1
     .= aV.[x*v,x*w] by VECTSP_1:def 24
     .= x*v+x*w by RLVECT_1:def 3;
     thus (x+y)*v = lm.(x+y,v) by VECTSP_1:def 24
     .= lm.[x+y,v] by BINOP_1:def 1
     .= (the mult of R).[x+y,vv] by A18,FUNCT_1:72
     .= (the mult of R).[(the add of cR).[x,y],vv] by RLVECT_1:def 3
     .= (the mult of R).[(the add of R).[xx,yy],vv] by A13,A22,FUNCT_1:72
     .= (the mult of R).[xx+yy,vv] by RLVECT_1:def 3
     .= (the mult of R).(xx+yy,vv) by BINOP_1:def 1
     .= (xx+yy)*vv by VECTSP_1:def 10
     .= xx*vv+yy*vv by VECTSP_1:def 12
     .= (the add of R).[xx*vv,yy*vv] by RLVECT_1:def 3
     .= (the add of R).[(the mult of R).(xx,vv),yy*vv] by VECTSP_1:def 10
     .= (the add of R).[(the mult of R).[xx,vv],yy*vv] by BINOP_1:def 1
     .= (the add of R).[lm.[x,v],yy*vv] by A17,FUNCT_1:72
     .= (the add of R).[lm.(x,v),yy*vv] by BINOP_1:def 1
     .= (the add of R).[x*v,yy*vv] by VECTSP_1:def 24
     .= (the add of R).[x*v,(the mult of R).(yy,vv)] by VECTSP_1:def 10
     .= (the add of R).[x*v,(the mult of R).[yy,vv]] by BINOP_1:def 1
     .= (the add of R).[x*v,lm.[y,v]] by A16,FUNCT_1:72
     .= (the add of R).[x*v,lm.(y,v)] by BINOP_1:def 1
     .= aV.[x*v,y*v] by VECTSP_1:def 24
     .= x*v+y*v by RLVECT_1:def 3;
     thus (x*y)*v = lm.(x*y,v) by VECTSP_1:def 24
     .= lm.[x*y,v] by BINOP_1:def 1
     .= (the mult of R).[x*y,vv] by A21,FUNCT_1:72
     .= (the mult of R).[(the mult of cR).(x,y),vv] by VECTSP_1:def 10
     .= (the mult of R).[(the mult of cR).[x,y],vv] by BINOP_1:def 1
     .= (the mult of R).[(the mult of R).[xx,yy],vv] by A12,A22,FUNCT_1:72
     .= (the mult of R).[(the mult of R).(xx,yy),vv] by BINOP_1:def 1
     .= (the mult of R).[xx*yy,vv] by VECTSP_1:def 10
     .= (the mult of R).(xx*yy,vv) by BINOP_1:def 1
     .= xx*yy*vv by VECTSP_1:def 10
     .= xx*(yy*vv) by VECTSP_1:def 16
     .= (the mult of R).(xx,yy*vv) by VECTSP_1:def 10
     .= (the mult of R).[xx,yy*vv] by BINOP_1:def 1
     .= (the mult of R).[xx,(the mult of R).(yy,vv)] by VECTSP_1:def 10
     .= (the mult of R).[xx,(the mult of R).[y,v]] by BINOP_1:def 1
     .= (the mult of R).[xx,lm.[y,v]] by A20,FUNCT_1:72
     .= (the mult of R).[xx,lm.(y,v)] by BINOP_1:def 1
     .= (the mult of R).[x,y*v] by VECTSP_1:def 24
     .= lm.[x,y*v] by A19,FUNCT_1:72
     .= lm.(x,y*v) by BINOP_1:def 1
     .= x*(y*v) by VECTSP_1:def 24;
        1_ R in center R by Th20; then 1_ R in ccR by RLVECT_1:def 1;
     then the unity of R in ccR by VECTSP_1:def 9;
   then A23: [the unity of R,vv] in [:ccR, ccs:] by ZFMISC_1:def 2;
     thus (1_ cR)*v = lm.(1_ cR,v) by VECTSP_1:def 24
     .= lm.(the unity of cR,vv) by VECTSP_1:def 9
     .= lm.(the unity of R,vv) by Def4
     .= lm.[the unity of R,vv] by BINOP_1:def 1
     .= (the mult of R).[the unity of R,vv] by A23,FUNCT_1:72
     .= (the mult of R).(the unity of R,vv) by BINOP_1:def 1
     .= (the mult of R).(1_ R,vv) by VECTSP_1:def 9
     .= (1_ R)*vv by VECTSP_1:def 10
     .= v by VECTSP_1:def 19;
   end;
A24: Vos is add-associative proof let u,v,w be Element of cV;
     reconsider uu=u,vv=v, ww=w as Element of ccs;
    thus (u + v) + w = aV.(u+v,w) by RLVECT_1:5
        .= ac.(ac.(uu,vv),ww) by RLVECT_1:5     .= ac.(uu+vv,ww) by RLVECT_1:5
        .= uu+vv+ww by RLVECT_1:5         .= uu+(vv+ww) by RLVECT_1:def 6
        .= ac.(uu,vv+ww) by RLVECT_1:5        .= aV.(u,aV.(v,w)) by RLVECT_1:5
        .= aV.(u,v+w) by RLVECT_1:5        .= u + (v + w) by RLVECT_1:5;
   end;
A25: Vos is right_zeroed proof let v be Element of cV;
     reconsider vv = v as Element of ccs;
    thus v + 0.Vos = aV.(v,0.Vos) by RLVECT_1:5
     .= ac.(vv,Zc) by RLVECT_1:def 2 .= ac.(vv,0.R) by RLVECT_1:def 2
     .= vv+0.R by RLVECT_1:5 .= v by RLVECT_1:def 7;
   end;
A26: Vos is right_complementable proof let v be Element of cV;
     reconsider vv = v as Element of ccs;
     consider ww being Element of ccs such that
   A27: vv + ww = 0.R by RLVECT_1:def 8;
     reconsider w = ww as Element of cV;
        v+w = ac.(vv,ww) by RLVECT_1:5 .= 0.R by A27,RLVECT_1:5
        .= Zc by RLVECT_1:def 2   .= 0.Vos by RLVECT_1:def 2;
     hence ex w being Element of cV st v + w = 0.Vos;
   end;
   Vos is Abelian proof let v,w be Element of cV;
     reconsider vv = v, ww = w as Element of ccs;
    thus v+w = ac.(vv,ww) by RLVECT_1:5 .= ww + vv by RLVECT_1:5
            .= aV.(w,v) by RLVECT_1:5 .= w+v by RLVECT_1:5;
   end;
   hence thesis by A11,A24,A25,A26;
  end;
  uniqueness;
end;

theorem  Th32: :: CardCenter1:
for R being finite Skew-Field
 holds card the carrier of R =
                 (card (the carrier of center R)) |^ (dim VectSp_over_center R)
proof let R be finite Skew-Field;
    set Z = center R;    set cZ = the carrier of Z;    set q = card cZ;
    set vR = VectSp_over_center R;     set n = dim vR;
    A1: the LoopStr of vR = the LoopStr of R by Def6;
    reconsider cvRS = [#]the carrier of vR as Subset of vR;
    consider B being Basis of vR;
   B is finite by A1,FINSET_1:13;
    then vR is finite-dimensional by VECTSP_9:def 1;
  hence thesis by A1,Th16;
end;

theorem  Th33: :: DimCenter:
for R being finite Skew-Field holds 0 < dim VectSp_over_center R
proof let R be finite Skew-Field;
    set q = card the carrier of center R;    set n = dim VectSp_over_center R;
    set Rs = MultGroup R;
       card the carrier of R = q |^ n by Th32;
then A1: ord Rs = (q |^ n) - 1 by UNIROOTS:21;
      now assume A2: n = 0;     (q |^ n) - 1 = (q #Z n) - 1 by PREPOWER:46;
         then ord Rs = 1 - 1 by A1,A2,PREPOWER:44;
       hence contradiction by GROUP_1:90;
    end;
  hence thesis by NAT_1:19;
end;

definition let R be Skew-Field, s be Element of R;
  func VectSp_over_center s -> strict VectSp of center R means :Def7:
  the LoopStr of it = the LoopStr of centralizer s &
  the lmult of it = (the mult of R)
                 | [:the carrier of center R, the carrier of centralizer s:];
  existence proof
  set cR = center R; set ccR = the carrier of cR;
  set cs = centralizer s; set ccs = the carrier of cs;
  set lm = (the mult of R)|[:ccR, ccs:];
  A1: ccR c= the carrier of R by Th17;
  A2: ccs c= the carrier of R by Th24;
  A3: dom (the mult of R) = [:the carrier of R,the carrier of R:]
      by FUNCT_2:def 1;
         [:ccR, ccs:] c= [:the carrier of R,the carrier of R:] proof
         let x be set;  assume x in [:ccR, ccs:];
          then consider x1, x2 being set such that
      A4: x1 in ccR and
      A5: x2 in ccs and
      A6: x = [x1,x2] by ZFMISC_1:def 2;
         thus thesis by A1,A2,A4,A5,A6,ZFMISC_1:def 2;
      end;
  then A7: dom lm = [:ccR, ccs:] by A3,RELAT_1:91;
      now let x be set; assume
   A8: x in [:ccR, ccs:];
     then consider x1, x2 being set such that
   A9: x1 in ccR and
   A10: x2 in ccs and
   A11: x = [x1,x2] by ZFMISC_1:def 2;
     reconsider x1 as Element of R by A1,A9;
     reconsider x2 as Element of R by A2,A10;
        lm.x = (the mult of R).x by A8,FUNCT_1:72
     .= (the mult of R).(x1,x2) by A11,BINOP_1:def 1
     .= x1*x2 by VECTSP_1:def 10;
    hence lm.x in ccs by A9,A10,Th27;
   end;
  then reconsider lm  as Function of [:ccR,ccs:], ccs by A7,FUNCT_2:5;
   set Vos = VectSpStr(#
     the carrier of centralizer s,     the add of centralizer s,
     the Zero of centralizer s,        lm #);
     set cV = the carrier of Vos;
     set aV = the add of Vos, ac = the add of centralizer s;
     set ZV = the Zero of Vos, Zc = the Zero of centralizer s;
A12: Vos is VectSp-like proof
     let x,y be Element of ccR, v,w be Element of cV;
    x in ccR & y in ccR;
     then reconsider xx=x, yy=y as Element of R by A1;
     v in ccs & w in ccs;
     then reconsider vv=v, ww=w as Element of R by A2;
   A13: the mult of cR =  (the mult of R) | [:ccR,ccR:] by Def4;
   A14: the add of cR = (the add of R) | [:ccR,ccR:] by Def4;
   A15: the add of cs = (the add of R) | [:ccs,ccs:] by Def5;
   A16: [x*v,x*w] in [:ccs,ccs:] by ZFMISC_1:def 2;
   A17: [x,w] in [:ccR,ccs:] by ZFMISC_1:def 2;
   A18: [x,v+w] in [:ccR,ccs:] by ZFMISC_1:def 2;
   A19: [v,w] in [:ccs,ccs:] by ZFMISC_1:def 2;
   A20: [x*v,y*v] in [:ccs,ccs:] by ZFMISC_1:def 2;
   A21: [y,v] in [:ccR,ccs:] by ZFMISC_1:def 2;
   A22: [x,v] in [:ccR,ccs:] by ZFMISC_1:def 2;
   A23: [x+y,v] in [:ccR,ccs:] by ZFMISC_1:def 2;
   A24: [x,y*v] in [:ccR,ccs:] by ZFMISC_1:def 2;
   A25: [y,v] in [:ccR,ccs:] by ZFMISC_1:def 2;
   A26: [x*y,v] in [:ccR,ccs:] by ZFMISC_1:def 2;
   A27: [x,y] in [:ccR,ccR:] by ZFMISC_1:def 2;
     thus x*(v+w) = lm.(x,v+w) by VECTSP_1:def 24
     .= lm.[x,v+w] by BINOP_1:def 1
     .= (the mult of R).[x,v+w] by A18,FUNCT_1:72
     .= (the mult of R).[x,aV.[v,w]] by RLVECT_1:def 3
     .= (the mult of R).[x,(the add of R).[vv,ww]] by A15,A19,FUNCT_1:72
     .= (the mult of R).[x,vv+ww] by RLVECT_1:def 3
     .= (the mult of R).(xx,vv+ww) by BINOP_1:def 1
     .= xx*(vv+ww) by VECTSP_1:def 10
     .= xx*vv+xx*ww by VECTSP_1:def 11
     .= (the add of R).[xx*vv,xx*ww] by RLVECT_1:def 3
     .= (the add of R).[(the mult of R).(xx,vv),xx*ww] by VECTSP_1:def 10
     .= (the add of R).[(the mult of R).[xx,vv],xx*ww] by BINOP_1:def 1
     .= (the add of R).[lm.[x,v],xx*ww] by A22,FUNCT_1:72
     .= (the add of R).[lm.(x,v),xx*ww] by BINOP_1:def 1
     .= (the add of R).[x*v,xx*ww] by VECTSP_1:def 24
     .= (the add of R).[x*v,(the mult of R).(xx,ww)] by VECTSP_1:def 10
     .= (the add of R).[x*v,(the mult of R).[xx,ww]] by BINOP_1:def 1
     .= (the add of R).[x*v,lm.[x,w]] by A17,FUNCT_1:72
     .= (the add of R).[x*v,lm.(x,w)] by BINOP_1:def 1
     .= (the add of R).[x*v,x*w] by VECTSP_1:def 24
     .= ac.[x*v,x*w] by A15,A16,FUNCT_1:72
     .= x*v+x*w by RLVECT_1:def 3;
     thus (x+y)*v = lm.(x+y,v) by VECTSP_1:def 24
     .= lm.[x+y,v] by BINOP_1:def 1
     .= (the mult of R).[x+y,vv] by A23,FUNCT_1:72
     .= (the mult of R).[(the add of cR).[x,y],vv] by RLVECT_1:def 3
     .= (the mult of R).[(the add of R).[xx,yy],vv] by A14,A27,FUNCT_1:72
     .= (the mult of R).[xx+yy,vv] by RLVECT_1:def 3
     .= (the mult of R).(xx+yy,vv) by BINOP_1:def 1
     .= (xx+yy)*vv by VECTSP_1:def 10
     .= xx*vv+yy*vv by VECTSP_1:def 12
     .= (the add of R).[xx*vv,yy*vv] by RLVECT_1:def 3
     .= (the add of R).[(the mult of R).(xx,vv),yy*vv] by VECTSP_1:def 10
     .= (the add of R).[(the mult of R).[xx,vv],yy*vv] by BINOP_1:def 1
     .= (the add of R).[lm.[x,v],yy*vv] by A22,FUNCT_1:72
     .= (the add of R).[lm.(x,v),yy*vv] by BINOP_1:def 1
     .= (the add of R).[x*v,yy*vv] by VECTSP_1:def 24
     .= (the add of R).[x*v,(the mult of R).(yy,vv)] by VECTSP_1:def 10
     .= (the add of R).[x*v,(the mult of R).[yy,vv]] by BINOP_1:def 1
     .= (the add of R).[x*v,lm.[y,v]] by A21,FUNCT_1:72
     .= (the add of R).[x*v,lm.(y,v)] by BINOP_1:def 1
     .= (the add of R).[x*v,y*v] by VECTSP_1:def 24
     .= ac.[x*v,y*v] by A15,A20,FUNCT_1:72
     .= x*v+y*v by RLVECT_1:def 3;
     thus (x*y)*v = lm.(x*y,v) by VECTSP_1:def 24
     .= lm.[x*y,v] by BINOP_1:def 1
     .= (the mult of R).[x*y,vv] by A26,FUNCT_1:72
     .= (the mult of R).[(the mult of cR).(x,y),vv] by VECTSP_1:def 10
     .= (the mult of R).[(the mult of cR).[x,y],vv] by BINOP_1:def 1
     .= (the mult of R).[(the mult of R).[xx,yy],vv] by A13,A27,FUNCT_1:72
     .= (the mult of R).[(the mult of R).(xx,yy),vv] by BINOP_1:def 1
     .= (the mult of R).[xx*yy,vv] by VECTSP_1:def 10
     .= (the mult of R).(xx*yy,vv) by BINOP_1:def 1
     .= xx*yy*vv by VECTSP_1:def 10
     .= xx*(yy*vv) by VECTSP_1:def 16
     .= (the mult of R).(xx,yy*vv) by VECTSP_1:def 10
     .= (the mult of R).[xx,yy*vv] by BINOP_1:def 1
     .= (the mult of R).[xx,(the mult of R).(yy,vv)] by VECTSP_1:def 10
     .= (the mult of R).[xx,(the mult of R).[y,v]] by BINOP_1:def 1
     .= (the mult of R).[xx,lm.[y,v]] by A25,FUNCT_1:72
     .= (the mult of R).[xx,lm.(y,v)] by BINOP_1:def 1
     .= (the mult of R).[x,y*v] by VECTSP_1:def 24
     .= lm.[x,y*v] by A24,FUNCT_1:72
     .= lm.(x,y*v) by BINOP_1:def 1
     .= x*(y*v) by VECTSP_1:def 24;
        1_ R in center R by Th20; then 1_ R in ccR by RLVECT_1:def 1;
     then the unity of R in ccR by VECTSP_1:def 9;
   then A28: [the unity of R,vv] in [:ccR, ccs:] by ZFMISC_1:def 2;
     thus (1_ cR)*v = lm.(1_ cR,v) by VECTSP_1:def 24
     .= lm.(the unity of cR,vv) by VECTSP_1:def 9
     .= lm.(the unity of R,vv) by Def4
     .= lm.[the unity of R,vv] by BINOP_1:def 1
     .= (the mult of R).[the unity of R,vv] by A28,FUNCT_1:72
     .= (the mult of R).(the unity of R,vv) by BINOP_1:def 1
     .= (the mult of R).(1_ R,vv) by VECTSP_1:def 9
     .= (1_ R)*vv by VECTSP_1:def 10
     .= v by VECTSP_1:def 19;
   end;
A29: Vos is add-associative proof let u,v,w be Element of cV;
     reconsider uu=u,vv=v, ww=w as Element of ccs;
    thus (u + v) + w = aV.(u+v,w) by RLVECT_1:5
        .= ac.(ac.(uu,vv),ww) by RLVECT_1:5     .= ac.(uu+vv,ww) by RLVECT_1:5
        .= uu+vv+ww by RLVECT_1:5         .= uu+(vv+ww) by RLVECT_1:def 6
        .= ac.(uu,vv+ww) by RLVECT_1:5        .= aV.(u,aV.(v,w)) by RLVECT_1:5
        .= aV.(u,v+w) by RLVECT_1:5        .= u + (v + w) by RLVECT_1:5;
   end;
A30: Vos is right_zeroed proof let v be Element of cV;
     reconsider vv = v as Element of ccs;
    thus v + 0.Vos = aV.(v,0.Vos) by RLVECT_1:5
     .= ac.(vv,Zc) by RLVECT_1:def 2 .= ac.(vv,0.cs) by RLVECT_1:def 2
     .= vv+0.cs by RLVECT_1:5 .= v by RLVECT_1:def 7;
   end;
A31: Vos is right_complementable proof let v be Element of cV;
     reconsider vv = v as Element of ccs;
     consider ww being Element of ccs such that
   A32: vv + ww = 0.cs by RLVECT_1:def 8;
     reconsider w = ww as Element of cV;
        v+w = ac.(vv,ww) by RLVECT_1:5 .= 0.cs by A32,RLVECT_1:5
        .= Zc by RLVECT_1:def 2   .= 0.Vos by RLVECT_1:def 2;
     hence ex w being Element of cV st v + w = 0.Vos;
   end;
   Vos is Abelian proof let v,w be Element of cV;
     reconsider vv = v, ww = w as Element of ccs;
    thus v+w = ac.(vv,ww) by RLVECT_1:5 .= ww + vv by RLVECT_1:5
            .= aV.(w,v) by RLVECT_1:5 .= w+v by RLVECT_1:5;
   end;
   hence thesis by A12,A29,A30,A31;
  end;
  uniqueness;
end;

theorem  Th34: :: CardCentral:
for R being finite Skew-Field, s being Element of R
  holds card the carrier of (centralizer s) =
        (card (the carrier of center R)) |^ (dim VectSp_over_center s)
proof let R be finite Skew-Field, s be Element of R;
    set Z = center R;
    set cZ = the carrier of Z;
    set q = card cZ;
    set vR = VectSp_over_center s;
    A1: the LoopStr of vR = the LoopStr of centralizer s by Def7;
    set n = dim vR;
    reconsider cvRS = [#]the carrier of vR as Subset of vR;
    consider B being Basis of vR;
   B is finite by A1,FINSET_1:13;
    then vR is finite-dimensional by VECTSP_9:def 1;
  hence thesis by A1,Th16;
end;

theorem  Th35: :: DimCentral:
for R being finite Skew-Field, s being Element of R
  holds 0 < dim VectSp_over_center s
proof let R be finite Skew-Field, s be Element of R;
    set q = card the carrier of center R;    set ns= dim VectSp_over_center s;
       now assume A1: ns = 0;     q |^ ns = q #Z ns by PREPOWER:46;
        then q |^ ns = 1 by A1,PREPOWER:44;
        then card the carrier of centralizer s = 1 by Th34;
      hence contradiction by Th29;
    end;
  hence thesis by NAT_1:19;
end;

theorem  Th36: :: Skew1:
for R being finite Skew-Field, r being Element of R
 st r is Element of MultGroup R
  holds
((card (the carrier of center R)) |^ (dim VectSp_over_center r) - 1) divides
((card (the carrier of center R)) |^ (dim VectSp_over_center R) - 1)
proof let R be finite Skew-Field, r be Element of R such that
A1: r is Element of MultGroup R;
    set G = MultGroup R;    set q = card (the carrier of center R);
    set qr= card (the carrier of centralizer r);
    set n = dim VectSp_over_center R;    set ns= dim VectSp_over_center r;
    reconsider s=r as Element of MultGroup R by A1;
       card the carrier of R = q |^ n by Th32;
    then ord G = (q |^ n) - 1 by UNIROOTS:21;
    then q |^ n - 1 = card con_class s * ord Centralizer s by Th13;
    then ord Centralizer s divides (q |^ n - 1) by INT_1:def 9;
    then (qr - 1) divides (q |^ n -1) by Th31;
  hence thesis by Th34;
end;

theorem  Th37: :: Skew2:
for R being finite Skew-Field, s being Element of R
 st s is Element of MultGroup R
  holds (dim VectSp_over_center s) divides (dim VectSp_over_center R)
proof let R be finite Skew-Field, s be Element of R such that
A1: s is Element of MultGroup R;
    set Vs= VectSp_over_center s;    set n = dim VectSp_over_center R;
    set ns= dim VectSp_over_center s;   set q = card the carrier of center R;
A2: 0 < n & 0 < ns by Th33,Th35;
A3: 1 < q by Th21;
then A4: 0 < q by AXIOMS:22;
    then 0 < q |^ ns by PREPOWER:13; then 0+1 < q |^ ns + 1 by REAL_1:67;
then A5: 1 <= q |^ ns by NAT_1:38;
       0 < q |^ n by A4,PREPOWER:13; then 0+1 < q |^ n + 1 by REAL_1:67;
then 1 <= q |^ n by NAT_1:38;
then A6: (q |^ n - 1) = (q |^ n -' 1) by SCMFSA_7:3;
A7: (q |^ ns - 1) = (q |^ ns -' 1) by A5,SCMFSA_7:3;
       (q |^ ns - 1) divides (q |^ n - 1) by A1,Th36;
    then (q |^ ns -'1) divides (q |^ n -'1) by A6,A7,SCPINVAR:2;
  hence thesis by A2,A3,Th3;
end;

theorem  Th38: :: MGC1:
for R being finite Skew-Field holds
  card the carrier of center MultGroup R = card (the carrier of center R) - 1
proof let R be finite Skew-Field;
   A1: the carrier of MultGroup R = (the carrier of R) \ {0.R}
     by UNIROOTS:def 1;
      the carrier of center MultGroup R c= the carrier of MultGroup R
   by GROUP_2:def 5;
then A2: not 0.R in the carrier of center MultGroup R by A1,ZFMISC_1:64;
     the carrier of center R = (the carrier of center MultGroup R) \/ {0.R}
  by Th23;
  then card the carrier of center R = card (the carrier of center MultGroup
R) + 1
   by A2,CARD_2:54;
 hence thesis;
end;

begin :: Witt's proof of Wedderburn's theorem

theorem
   for R being finite Skew-Field holds R is commutative
proof let R be finite Skew-Field such that
A1: not R is commutative;

set Z = center R;                    set cZ = the carrier of Z;
set q = card cZ;                     set vR = VectSp_over_center R;
set n = dim vR;                      set Rs = MultGroup R;
set cR = the carrier of R;           set cRs = the carrier of Rs;
set cZs = the carrier of center Rs;

A2: card cR = q |^ n by Th32;
then A3: ord Rs = (q |^ n) - 1 by UNIROOTS:21;
A4: 1 < q  by Th21;
A5: 0 <> q by Th21;
      A6: 1+-1 < q + -1 by A4,REAL_1:67;
    then reconsider nat_q1 = q - 1 as Nat by INT_1:16;
A7:  0 < n by Th33; then 0+1 < n + 1 by REAL_1:67;
then A8: 1 <= n by NAT_1:38;
       now assume A9: n = 1;
         card cR = (q #Z n ) by A2,PREPOWER:46;
      then card cR = q by A9,PREPOWER:45;
     hence contradiction by A1,Th22;
    end;
then A10: 1 < n by A8,REAL_1:def 5;
    set A = {X where X is Subset of cRs :
                     X in conjugate_Classes Rs & card X = 1};
    set B = conjugate_Classes Rs \ A;
       for x being set st x in A holds x in conjugate_Classes Rs
    proof let x be set; assume x in A;
        then ex y being Subset of cRs
         st x=y & y in conjugate_Classes Rs & Card y = 1;
     hence thesis;
    end;
then A11: A c= conjugate_Classes Rs by TARSKI:def 3;
then A12: conjugate_Classes Rs = A \/ B by XBOOLE_1:45;
    consider f being Function such that
A13: dom f = cZs and
A14: for x being set st x in cZs holds f.x = {x} from FUNCT_1:sch 3;
A15: f is one-to-one proof let x1,x2 be set;
      assume x1 in dom f & x2 in dom f & f.x1 = f.x2;
        then f.x1 = {x1} & f.x2 = {x2} & f.x1 = f.x2 by A13,A14;
      hence x1 = x2 by ZFMISC_1:6;
     end;
        now let x be set;
      hereby assume x in rng f; then consider xx being set such that
     A16: xx in dom f and
     A17: x = f.xx by FUNCT_1:def 5;
     A18: x = {xx} by A13,A14,A16,A17;
     A19: cZs c= cRs by GROUP_2:def 5;
         then reconsider X = x as Subset of cRs by A13,A16,A18,ZFMISC_1:37;
         reconsider xx as Element of Rs by A13,A16,A19;
            xx in center Rs by A13,A16,RLVECT_1:def 1;
         then con_class xx = {xx} by GROUP_5:93;
     then A20: X in conjugate_Classes Rs by A18,Th14;     card X = 1 by A18,
CARD_1:79;
       hence x in A by A20;
      end;
      assume x in A; then consider X being Subset of cRs such that
     A21: x = X and
     A22: X in conjugate_Classes Rs and
     A23: card X = 1;
          consider a being Element of cRs such that
     A24: con_class a = X by A22,Th14;
     A25: a in con_class a by GROUP_3:98;
         consider xx being set such that
     A26: X = {xx} by A23,CARD_2:60;
     A27: a = xx by A24,A25,A26,TARSKI:def 1;
         then a in center Rs by A24,A26,GROUP_5:93;
     then A28: a in cZs by RLVECT_1:def 1; then f.a = {a} by A14;
      hence x in rng f by A13,A21,A26,A27,A28,FUNCT_1:12;
     end;
then rng f = A by TARSKI:2;
then A29: A, cZs are_equipotent by A13,A15,WELLORD2:def 4;
       card cZs = nat_q1 by Th38;
then A30: Card A = nat_q1 by A29,CARD_1:21;
       A is finite by A11,FINSET_1:13;
    then consider f1 being FinSequence such that
A31: rng f1 = A and A32: f1 is one-to-one by FINSEQ_4:73;
    consider f2 being FinSequence such that
A33: rng f2 = B and A34: f2 is one-to-one by FINSEQ_4:73;
    set f = f1^f2;
A35: rng f = conjugate_Classes Rs by A12,A31,A33,FINSEQ_1:44;
       now given x being set such that
    A36: x in A /\ B;    x in A & x in B by A36,XBOOLE_0:def 3;
     hence contradiction by XBOOLE_0:def 4;
    end;
    then A /\ B = {} by XBOOLE_0:def 1;
    then rng f1 misses rng f2 by A31,A33,XBOOLE_0:def 7;
then A37: f is one-to-one FinSequence of conjugate_Classes Rs
            by A32,A34,A35,FINSEQ_1:def 4,FINSEQ_3:98;
    deffunc F(set) = Card(f1.$1);
    consider p1 being FinSequence such that
A38: len p1 = len f1 &
    for i being Nat st i in Seg len f1 holds p1.i = F(i) from FINSEQ_1:sch 2;
A39: dom p1 = Seg len f1 by A38,FINSEQ_1:def 3;
       for x being set st x in rng p1 holds x in NAT proof let x be set such
that
    A40: x in rng p1;
        consider i being Nat such that
    A41: i in dom p1 & p1.i = x by A40,FINSEQ_2:11;
    A42: x = Card(f1.i) by A38,A39,A41;
           i in dom f1 by A38,A41,FINSEQ_3:31; then f1.i in A by A31,FUNCT_1:
12;
        then consider X being Subset of cRs such that
    A43: f1.i = X & X in conjugate_Classes Rs & card X = 1;
     thus thesis by A42,A43;
    end;
    then rng p1 c= NAT by TARSKI:def 3;
    then reconsider c1=p1 as FinSequence of NAT by FINSEQ_1:def 4;
A44: len c1 = nat_q1 by A30,A31,A32,A38,FINSEQ_4:77;
A45: for i being Nat st i in dom c1 holds c1.i = 1 proof
      let i be Nat such that
     A46: i in dom c1;
            i in dom f1 by A38,A46,FINSEQ_3:31; then f1.i in A by A31,FUNCT_1:
12
;
         then ex X being Subset of cRs
               st f1.i = X & X in conjugate_Classes Rs & card X = 1;
      hence thesis by A38,A39,A46;
     end;
        for x being set st x in rng c1 holds x in {1} proof
      let x be set; assume x in rng c1; then consider i being Nat such
that
     A47: i in dom c1 & x = c1.i by FINSEQ_2:11;
            x = 1 by A45,A47;
       hence thesis by TARSKI:def 1;
      end;
then A48: rng c1 c= {1} by TARSKI:def 3;
        for x being set st x in {1} holds x in rng c1 proof
      let x be set such that
     A49: x in {1};
            Seg len c1 = dom c1 by FINSEQ_1:def 3;
     then A50: len c1 in dom c1 by A6,A44,FINSEQ_1:5;
         then c1.(len c1) = 1 by A45; then c1.(len c1) = x by A49,TARSKI:def
1;
      hence thesis by A50,FUNCT_1:12;
     end;
     then {1}c= rng c1 by TARSKI:def 3; then rng c1={1} by A48,XBOOLE_0:def
10;
     then c1 = (dom c1) --> 1 by FUNCOP_1:15;
     then c1 = Seg (len c1) --> 1 by FINSEQ_1:def 3;
     then c1 = (len c1) |-> 1 by FINSEQ_2:def 2;
     then Sum c1 = (len c1)*1 by RVSUM_1:110;
then A51: Sum c1 = nat_q1 by A30,A31,A32,A38,FINSEQ_4:77;
     deffunc P2(set) = Card(f2.$1);
     consider p2 being FinSequence such that
A52: len p2 = len f2 &
     for i being Nat st i in Seg len f2 holds p2.i = P2(i) from FINSEQ_1:sch 2;
A53: dom p2 = Seg len f2 by A52,FINSEQ_1:def 3;
       for x being set st x in rng p2 holds x in NAT proof
     let x be set; assume x in rng p2; then consider i being Nat such
that
    A54: i in dom p2 & p2.i = x by FINSEQ_2:11;
    A55: x = Card(f2.i) by A52,A53,A54;
           i in dom f2 by A52,A54,FINSEQ_3:31;
        then f2.i in conjugate_Classes Rs \ A by A33,FUNCT_1:12;
        then f2.i in conjugate_Classes Rs by XBOOLE_0:def 4;
        then consider a being Element of cRs such that
    A56: con_class a = f2.i by Th14;
           card con_class a is Nat;
     hence thesis by A55,A56;
    end; then rng p2 c= NAT by TARSKI:def 3;
    then reconsider c2=p2 as FinSequence of NAT by FINSEQ_1:def 4;
    set c = c1^c2;
    reconsider c as FinSequence of NAT;
       len c = len f1 + len f2 by A38,A52,FINSEQ_1:35;
then A57: len c = len f by FINSEQ_1:35;
       for i being Nat st i in dom c holds c.i = Card (f.i) proof
     let i be Nat such that
    A58: i in dom c;
           now per cases by A58,FINSEQ_1:38;
         suppose A59: i in dom c1;
         then A60: i in dom f1 by A38,FINSEQ_3:31;
                c.i = c1.i by A59,FINSEQ_1:def 7 .= Card(f1.i) by A38,A39,A59
               .= Card(f.i) by A60,FINSEQ_1:def 7;
          hence thesis;
         end;
         suppose ex j being Nat st j in dom c2 & i = len c1 + j;
             then consider j being Nat such that
         A61: j in dom c2 and A62: i = len c1 + j;
         A63: j in dom f2 by A52,A61,FINSEQ_3:31;
                c.i = c2.j by A61,A62,FINSEQ_1:def 7 .= Card(f2.j) by A52,A53,
A61
                .= Card(f.i) by A38,A62,A63,FINSEQ_1:def 7;
          hence thesis;
        end;
        end;
     hence thesis;
    end;
then A64: ord Rs = Sum c by A35,A37,A57,Th15;
       rng c1 c= NAT & rng c2 c= NAT by FINSEQ_1:def 4;
    then rng c1 c= REAL & rng c2 c= REAL by XBOOLE_1:1;
    then c1 is FinSequence of REAL&c2 is FinSequence of REAL by FINSEQ_1:def 4
;
then A65: (q |^ n) - 1 = Sum c2 + (q - 1) by A3,A51,A64,RVSUM_1:105;
    reconsider q as non empty Nat by A5;
    reconsider n as non empty Nat by Th33;
    consider qc being Element of COMPLEX such that
A66: qc = q & qc = [*q,0*] by UNIROOTS:6;
    reconsider qc as Element of F_Complex by COMPLFLD:def 1;
    set pnq = eval(cyclotomic_poly n,qc);
    reconsider pnq as Integer by A66,UNIROOTS:56;
    reconsider abs_pnq = abs(pnq) as Nat;
    reconsider nat_aq1 = abs(q-1) as Nat;
       (q |^ n) <> 0 by PREPOWER:12; then (q |^ n) > 0 by NAT_1:19;
    then (q |^ n)+1 > 0+1 by REAL_1:67; then (q |^ n) >= 1 by NAT_1:38;
    then A67: (q |^ n) +- 1 >= 1 +- 1 by REAL_1:55;
    then reconsider qn1=((q |^ n) - 1) as Nat by INT_1:16;
       pnq divides (q |^ n) - 1 by A66,UNIROOTS:62;
    then abs_pnq divides abs((q |^ n) - 1) by INT_2:21;
then A68: abs_pnq divides qn1 by A67,ABSVALUE:def 1;
       for i being Nat st i in dom c2 holds abs_pnq divides c2/.i proof
     let i be Nat such that A69: i in dom c2;
            c2.i = Card (f2.i) by A52,A53,A69;
    then A70: c2/.i = Card (f2.i) by A69,FINSEQ_4:def 4;
    A71: i in dom f2 by A52,A69,FINSEQ_3:31;
         then f2.i in conjugate_Classes Rs \ A by A33,FUNCT_1:12;
         then f2.i in conjugate_Classes Rs & not f2.i in A by XBOOLE_0:def 4;
         then consider a being Element of cRs such that
    A72: con_class a = f2.i by Th14;
        reconsider a as Element of Rs;
        reconsider s=a as Element of R by UNIROOTS:22;
        set ns = dim VectSp_over_center s; set ca = card con_class a;
        set oa = ord Centralizer a;
    A73: ord Rs = ca * oa + 0 by Th13;
           oa <> 0 by GROUP_1:90; then A74: 0 < oa by NAT_1:19;
        then A75: (ord Rs) div oa = ca by A73,NAT_1:def 1;
    A76: qn1 div oa = ca by A3,A73,A74,NAT_1:def 1;
           (q |^ ns) <> 0 by PREPOWER:12; then (q |^ ns) > 0 by NAT_1:19;
        then (q |^ ns)+1 > 0+1 by REAL_1:67; then (q |^ ns) >= 1 by NAT_1:38;
        then (q |^ ns) +- 1 >= 1 +- 1 by REAL_1:55;
        then reconsider qns1=(q |^ ns - 1) as Nat by INT_1:16;
        A77: oa = (card the carrier of (centralizer s)) - 1 by Th31
          .= qns1 by Th34;
    A78: (qn1 qua Integer) div qns1 = qn1 div qns1 by SCMFSA9A:5;
    A79: qn1 div qns1 >= 0 by NAT_1:18;
        reconsider ns as non empty Nat by Th35;
    A80: ns divides n by Th37;
    then A81: ns <= n by A7,NAT_1:54;
           now assume A82: ns = n;
             now assume qn1 = 0; then q |^ n - 1 + 1 = 0+1;
            then q |^ n = 1 by XCMPLX_1:27;
           hence contradiction by A4,A7,PEPIN:26;
          end;
        then A83: Card (f2.i) = 1 by A3,A72,A75,A77,A82,NAT_2:5;
               f2.i in B by A33,A71,FUNCT_1:12;
            then f2.i in conjugate_Classes Rs & not f2.i in A by XBOOLE_0:def
4;
         hence contradiction by A83;
        end;
        then ns < n by A81,REAL_1:def 5;
        then pnq divides ((qn1 qua Integer) div qns1) by A66,A80,UNIROOTS:63;
        then abs_pnq divides abs(qn1 div qns1) by A78,INT_2:21;
     hence thesis by A70,A72,A76,A77,A79,ABSVALUE:def 1;
    end;
    then abs_pnq divides Sum c2 by Th5;
then A84: abs_pnq divides nat_q1 by A65,A68,NAT_1:57;
       abs_pnq > q - 1 by A4,A10,A66,UNIROOTS:64;
 hence contradiction by A6,A84,NAT_1:54;
end;

