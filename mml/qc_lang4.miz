:: The Subformula Tree of a Formula of the First Order Language
::  by Oleg Okhotnikov
::
:: Received October 2, 1995
:: Copyright (c) 1995 Association of Mizar Users

environ

 vocabularies NUMBERS, SUBSET_1, FINSEQ_1, RELAT_1, TREES_1, XBOOLE_0, ARYTM_3,
      XXREAL_0, ORDINAL4, CARD_1, FUNCT_1, TARSKI, TREES_2, TREES_9, ORDINAL1,
      NAT_1, ZFMISC_1, MCART_1, FINSET_1, QC_LANG1, ZF_LANG, CLASSES2, TREES_4,
      QC_LANG4;
 notations TARSKI, XBOOLE_0, ZFMISC_1, SUBSET_1, CARD_1, NUMBERS, XCMPLX_0,
      NAT_1, RELAT_1, FUNCT_1, FUNCT_2, BINOP_1, FINSET_1, FINSEQ_1, FINSEQ_4,
      TREES_1, TREES_2, TREES_4, TREES_9, QC_LANG1, QC_LANG2, MCART_1,
      XXREAL_0;
 constructors BINOP_1, XXREAL_0, XREAL_0, NAT_1, FINSEQ_4, TREES_4, TREES_9,
      QC_LANG2, RELSET_1;
 registrations SUBSET_1, ORDINAL1, RELSET_1, FINSET_1, XREAL_0, NAT_1,
      FINSEQ_1, TREES_1, TREES_2, TREES_A, TREES_9, CARD_1, RELAT_1;
 requirements NUMERALS, REAL, BOOLE, SUBSET, ARITHM;
 definitions TARSKI, XBOOLE_0, TREES_2, TREES_4, BINOP_1;
 theorems TARSKI, NAT_1, RELAT_1, FUNCT_1, FINSEQ_1, TREES_1, TREES_2, TREES_9,
      GRFUNC_1, QC_LANG1, QC_LANG2, TREES_A, FINSET_1, MCART_1, ZFMISC_1,
      FUNCT_2, CARD_1, XBOOLE_0, XBOOLE_1, FINSEQ_6, XREAL_1, XXREAL_0,
      ORDINAL1;
 schemes NAT_1, TREES_2, FINSEQ_1, FUNCT_2, CLASSES1;

begin

canceled 3;

theorem Th4:
  for n being Element of NAT, r being FinSequence ex q being
  FinSequence st q = r|Seg n & q is_a_prefix_of r
proof
  let n be Element of NAT, r be FinSequence;
  r|Seg n is FinSequence by FINSEQ_1:19;
  then consider q being FinSequence such that
A1: q = r|Seg n;
  q is_a_prefix_of r by A1,TREES_1:def 1;
  hence thesis by A1;
end;

canceled;

theorem Th6:
  for D being non empty set, r being FinSequence of D, r1,r2 being
FinSequence, k being Element of NAT st k+1 <= len r & r1 = r|Seg (k+1) & r2 = r
  |Seg k holds ex x being Element of D st r1 = r2^<*x*>
proof
  let D be non empty set, r be FinSequence of D, r1,r2 be FinSequence, k be
  Element of NAT;
  assume that
A1: k+1 <= len r and
A2: r1 = r|Seg (k+1) and
A3: r2 = r|Seg k;
  k < len r by A1,NAT_1:13;
  then
A4: len r2 = k by A3,FINSEQ_1:21;
  r2 is_a_prefix_of r by A3,TREES_1:def 1;
  then
A5: ex q2 being FinSequence st r = r2^q2 by TREES_1:8;
  then reconsider r99 = r2 as FinSequence of D by FINSEQ_1:50;
  r1 is_a_prefix_of r by A2,TREES_1:def 1;
  then
A6: ex q1 being FinSequence st r = r1^q1 by TREES_1:8;
  then reconsider r9 = r1 as FinSequence of D by FINSEQ_1:50;
A7: len r1 = k+1 by A1,A2,FINSEQ_1:21;
A8: now
    assume
    r9 is_a_prefix_of r99;
    then k+1 <= k+0 by A7,A4,NAT_1:44;
    hence contradiction by XREAL_1:8;
  end;
  r9,r99 are_c=-comparable by A6,A5,TREES_A:1;
  then r99 is_a_prefix_of r9 by A8,XBOOLE_0:def 9;
  then consider s being FinSequence such that
A9: r9 = r99^s by TREES_1:8;
  reconsider s as FinSequence of D by A9,FINSEQ_1:50;
A10: len s = 1
  proof
    consider m being Element of NAT such that
A11: m = len s;
    k + 1 = k + m by A7,A4,A9,A11,FINSEQ_1:35;
    hence thesis by A11;
  end;
  consider x being set such that
A12: x = s.1;
  1 in {1} by TARSKI:def 1;
  then 1 in dom s by A10,FINSEQ_1:4,def 3;
  then
A13: x in rng s by A12,FUNCT_1:def 5;
A14: rng s c= D by FINSEQ_1:def 4;
  s = <*x*> by A10,A12,FINSEQ_1:57;
  hence thesis by A9,A13,A14;
end;

theorem Th7:
  for D being non empty set, r being FinSequence of D, r1 being
FinSequence st 1 <= len r & r1 = r|Seg 1 holds ex x being Element of D st r1 =
  <*x*>
proof
  let D be non empty set, r be FinSequence of D, r1 be FinSequence;
  assume that
A1: 1 <= len r and
A2: r1 = r|Seg 1;
  consider x being set such that
A3: x = r1.1;
  1 in {1} by TARSKI:def 1;
  then 1 in dom r1 by A1,A2,FINSEQ_1:4,21;
  then
A4: x in rng r1 by A3,FUNCT_1:def 5;
  len r1 = 1 by A1,A2,FINSEQ_1:21;
  then
A5: r1 = <*x*> by A3,FINSEQ_1:57;
  r1 is_a_prefix_of r by A2,TREES_1:def 1;
  then ex q1 being FinSequence st r = r1^q1 by TREES_1:8;
  then reconsider r9 = r1 as FinSequence of D by FINSEQ_1:50;
  rng r9 c= D by FINSEQ_1:def 4;
  hence thesis by A5,A4;
end;

reserve T for DecoratedTree,
  p for FinSequence of NAT;

theorem Th8:
  T.p = (T|p).{}
proof
  <*>NAT in (dom T)|p by TREES_1:47;
  then (T|p).<*>NAT = T.(p^<*>NAT) by TREES_2:def 11
    .= T.p by FINSEQ_1:47;
  hence thesis;
end;

reserve T for finite-branching DecoratedTree,
  t for Element of dom T,
  x for
  FinSequence,
  n, k, m for Element of NAT;

theorem Th9:
  succ(T,t) = T*(t succ)
proof
  ex q being Element of dom T st q = t & succ(T,t) = T*(q succ) by TREES_9:
  def 6;
  hence thesis;
end;

theorem Th10:
  dom (T*(t succ)) = dom (t succ)
proof
  rng (t succ) c= dom T by FINSEQ_1:def 4;
  hence thesis by RELAT_1:46;
end;

theorem Th11:
  dom succ(T,t) = dom (t succ)
proof
  thus dom succ(T,t) = dom (T*(t succ)) by Th9
    .= dom (t succ) by Th10;
end;

theorem Th12:
  t^<*n*> in dom T iff n+1 in dom (t succ)
proof
  now
    assume
    t^<*n*> in dom T;
    then t^<*n*> in succ t;
    then n < card succ t by TREES_9:7;
    then n < len (t succ) by TREES_9:def 5;
    then
A1: n+1 <= len (t succ) by NAT_1:13;
    0 <= n by NAT_1:2;
    then 0+1 <= n+1 by XREAL_1:8;
    then n+1 in Seg len (t succ) by A1,FINSEQ_1:3;
    hence n+1 in dom (t succ) by FINSEQ_1:def 3;
  end;
  hence t^<*n*> in dom T implies n+1 in dom (t succ);
  assume
  n+1 in dom (t succ);
  then n+1 in Seg len (t succ) by FINSEQ_1:def 3;
  then n+1 <= len (t succ) by FINSEQ_1:3;
  then n < len (t succ) by NAT_1:13;
  then n < card succ t by TREES_9:def 5;
  then t^<*n*> in succ t by TREES_9:7;
  hence thesis;
end;

theorem Th13:
  for T, x, n st x^<*n*> in dom T holds T.(x^<*n*>) = succ(T,x).(n
  +1)
proof
  let T, x, n;
  assume
A1: x^<*n*> in dom T;
  x is_a_prefix_of x^<*n*> by TREES_1:8;
  then x in dom T by A1,TREES_1:45;
  then consider q being Element of dom T such that
A2: q = x and
A3: succ(T,x) = T*(q succ) by TREES_9:def 6;
A4: n+1 in dom (q succ) by A1,A2,Th12;
  then n+1 in Seg len (q succ) by FINSEQ_1:def 3;
  then n+1 <= len (q succ) by FINSEQ_1:3;
  then
A5: n < len (q succ) by NAT_1:13;
  n+1 in dom (T*(q succ)) by A4,Th10;
  then succ(T,x).(n+1) = T.((q succ).(n+1)) by A3,FUNCT_1:22
    .= T.(x^<*n*>) by A2,A5,TREES_9:def 5;
  hence thesis;
end;

reserve x, x9 for Element of dom T,
  y9 for set;

theorem Th14:
  x9 in succ x implies T.x9 in rng succ(T,x)
proof
  assume
  x9 in succ x;
  then consider n such that
A1: x9 = x^<*n*> and
  x^<*n*> in dom T;
A2: T.x9 = (succ(T,x)).(n+1) by A1,Th13;
  dom (succ(T,x)) = dom (T*(x succ)) by Th9
    .= dom (x succ) by Th10;
  then n+1 in dom succ(T,x) by A1,Th12;
  hence thesis by A2,FUNCT_1:def 5;
end;

theorem Th15:
  y9 in rng succ(T,x) implies ex x9 st y9 = T.x9 & x9 in succ x
proof
  consider k be Nat such that
A1: dom succ(T,x) = Seg k by FINSEQ_1:def 2;
  assume
  y9 in rng succ(T,x);
  then consider n9 being set such that
A2: n9 in dom succ(T,x) and
A3: y9 = (succ(T,x)).n9 by FUNCT_1:def 5;
  Seg k = { m : 1 <= m & m <= k } by FINSEQ_1:def 1;
  then consider m9 being Element of NAT such that
A4: n9 = m9 and
A5: 1 <= m9 and
  m9 <= k by A2,A1;
  m9 <> 0 by A5;
  then consider n being Nat such that
A6: n+1 = m9 by NAT_1:6;
  reconsider n as Element of NAT by ORDINAL1:def 13;
  n+1 in dom (x succ) by A2,A4,A6,Th11;
  then x^<*n*> in dom T by Th12;
  then consider x9 such that
A7: x9 = x^<*n*>;
A8: x9 in succ x by A7;
  y9 = T.x9 by A3,A4,A6,A7,Th13;
  hence thesis by A8;
end;

reserve n,k1,k2,l,k,m for Element of NAT,
  x,y,y1,y2 for set;

scheme
  ExDecTrees { D() -> non empty set, d() -> Element of D(), G(set) ->
FinSequence of D() }: ex T being finite-branching DecoratedTree of D() st T.{}
  = d() & for t being Element of dom T, w being Element of D() st w = T.t holds
  succ(T,t) = G(w) proof
  defpred P[set,set] means (len G($1) = 0 & $2 = {}) or len G($1) <> 0 & ex m
  st m+1 = len G($1) & $2 = {0} \/ Seg m;
A1: for x st x in D() ex y st P[x,y]
  proof
    let x such that
    x in D();
    per cases;
    suppose
      len G(x) = 0;
      hence thesis;
    end;
    suppose
      len G(x) <> 0;
      then consider m being Nat such that
A2:   m+1 = len G(x) by NAT_1:6;
      reconsider m as Element of NAT by ORDINAL1:def 13;
      ex y st y = {0} \/ Seg m;
      hence thesis by A2;
    end;
  end;
  ex F being Function st dom F = D() & for x st x in D() holds P[x,F.x]
  from CLASSES1:sch 1(A1);
  then consider F being Function such that
A3: for x st x in D() holds len G(x) = 0 & F.x = {} or len G(x) <> 0 &
  ex m st m+1 = len G(x) & F.x = {0} \/ Seg m;
  deffunc F(set) = F.$1;
A4: for k,x st x in D() holds k in F(x) iff k+1 in Seg len G(x)
  proof
    let k,x such that
A5: x in D();
    now
      assume
A6:   k in F(x);
      then consider m such that
A7:   m+1 = len G(x) and
A8:   F.x = {0} \/ Seg m by A3,A5;
      0 <= k & k <= m
      proof
        per cases by A6,A8,XBOOLE_0:def 3;
        suppose
          k in {0};
          then k = 0 by TARSKI:def 1;
          hence thesis by NAT_1:2;
        end;
        suppose
A9:       k in Seg m;
          then 0+1 <= k by FINSEQ_1:3;
          hence thesis by A9,FINSEQ_1:3,NAT_1:13;
        end;
      end;
      then 0+1 <= k+1 & k+1 <= m+1 by XREAL_1:8;
      hence k+1 in Seg len G(x) by A7,FINSEQ_1:3;
    end;
    hence k in F(x) implies k+1 in Seg len G(x);
    assume
A10: k+1 in Seg len G(x);
    then len G(x) <> 0;
    then consider m such that
A11: m+1 = len G(x) and
A12: F.x = {0} \/ Seg m by A3,A5,FINSEQ_1:4;
    k in {0} \/ Seg m
    proof
      per cases;
      suppose
        k = 0;
        then k in {0} by TARSKI:def 1;
        hence thesis by XBOOLE_0:def 3;
      end;
      suppose
        k <> 0;
        then 0 < k by NAT_1:3;
        then
A13:    0+1 <= k by NAT_1:13;
        k+1 <= len G(x) by A10,FINSEQ_1:3;
        then k <= m by A11,XREAL_1:8;
        then k in Seg m by A13,FINSEQ_1:3;
        hence thesis by XBOOLE_0:def 3;
      end;
    end;
    hence thesis by A12;
  end;
A14: for x being set, t being Element of dom T st x in D() holds { t^<*k*>:
  k in F(x)} = { t^<*m*>: m+1 in Seg len G(x)}
  proof
    let x be set, t be Element of dom T such that
A15: x in D();
    thus { t^<*k*>: k in F(x)} c= { t^<*m*>: m+1 in Seg len G(x)}
    proof
      let y be set;
      assume
      y in { t^<*k*>: k in F(x)};
      then consider k such that
A16:  y = t^<*k*> and
A17:  k in F(x);
      k+1 in Seg len G(x) by A4,A15,A17;
      hence thesis by A16;
    end;
    thus { t^<*m*>: m+1 in Seg len G(x)} c= { t^<*k*>: k in F(x)}
    proof
      let y be set;
      assume
      y in { t^<*m*>: m+1 in Seg len G(x)};
      then consider m such that
A18:  y = t^<*m*> and
A19:  m+1 in Seg len G(x);
      m in F(x) by A4,A15,A19;
      hence thesis by A18;
    end;
  end;
  defpred P[set,set] means ex x,n st x in D() & $1 = [x,n] & (n in F(x) & $2 =
  G(x).(n+1) or not n in F(x) & $2 = d());
A20: for c being Element of [:D(),NAT:] ex y being Element of D() st P[c,y]
  proof
    let c be Element of [:D(),NAT:];
    c`1 in D() & c`2 in NAT by MCART_1:10;
    then consider x being Element of D(), n being Element of NAT such that
A21: x = c`1 & n = c`2;
A22: c = [x,n] by A21,MCART_1:23;
    per cases;
    suppose
A23:  n in F(x);
      then n+1 in Seg len G(x) by A4;
      then n+1 in dom G(x) by FINSEQ_1:def 3;
      then
A24:  G(x).(n+1) in rng G(x) by FUNCT_1:def 5;
      rng G(x) c= D() by FINSEQ_1:def 4;
      hence thesis by A22,A23,A24;
    end;
    suppose
      not n in F(x);
      hence thesis by A22;
    end;
  end;
  ex S being Function of [:D(),NAT:],D() st for c being Element of [:D(),
  NAT:] holds P[c,S.c] from FUNCT_2:sch 3(A20);
  then consider S being Function of [: D(), NAT :],D() such that
A25: for c being Element of [: D(), NAT :] holds P[c,S.c];
A26: for n,x,m st m+1 = len G(x) & x in D() holds n in F(x) iff 0 <= n & n
  <= m
  proof
    let n,x,m such that
A27: m+1 = len G(x) and
A28: x in D();
    thus n in F(x) implies 0 <= n & n <= m
    proof
A29:  ex k st k+1 = len G(x) & F(x) = {0} \/ Seg k by A3,A27,A28;
      assume
A30:  n in F(x);
      per cases by A27,A30,A29,XBOOLE_0:def 3;
      suppose
        n in {0};
        then n = 0 by TARSKI:def 1;
        hence thesis by NAT_1:2;
      end;
      suppose
A31:    n in Seg m;
        then 1 <= n by FINSEQ_1:3;
        hence thesis by A31,FINSEQ_1:3,XXREAL_0:2;
      end;
    end;
    thus 0 <= n & n <= m implies n in F(x)
    proof
      assume that
      0 <= n and
A32:  n <= m;
A33:  ex k st k+1 = len G(x) & F(x) = {0} \/ Seg k by A3,A27,A28;
      per cases;
      suppose
        n = 0;
        then n in {0} by TARSKI:def 1;
        hence thesis by A33,XBOOLE_0:def 3;
      end;
      suppose
        n <> 0;
        then 0 < n by NAT_1:3;
        then 0+1 <= n by NAT_1:13;
        then n in Seg m by A32,FINSEQ_1:3;
        hence thesis by A27,A33,XBOOLE_0:def 3;
      end;
    end;
  end;
A34: for d being Element of D(), k1,k2 st k1 <= k2 & k2 in F(d) holds k1 in
  F(d)
  proof
    let d be Element of D(), k1,k2;
    assume that
A35: k1 <= k2 and
A36: k2 in F(d);
    ex m st m+1 = len G(d) & F.d = {0} \/ Seg m by A3,A36;
    then consider m such that
A37: m+1 = len G(d);
    k2 <= m by A26,A36,A37;
    then 0 <= k1 & k1 <= m by A35,NAT_1:2,XXREAL_0:2;
    hence thesis by A26,A37;
  end;
  consider T being DecoratedTree of D() such that
A38: T.{} = d() & for t being Element of dom T holds succ t = { t^<*k*>:
k in F(T.t)} & for n st n in F(T.t) holds T.(t^<*n*>) = S.(T.t,n) from TREES_2:
  sch 8(A34);
  for t being Element of dom T holds succ t is finite
  proof
    let t be Element of dom T;
    defpred P[set,set] means ex m st m+1 = $1 & $2 = t^<*m*>;
A39: for k be Nat st k in Seg len G(T.t) ex x st P[k,x]
    proof
      let k be Nat;
      assume
      k in Seg len G(T.t);
      then k <> 0 by FINSEQ_1:3;
      then consider m being Nat such that
A40:  m+1 = k by NAT_1:6;
      reconsider m as Element of NAT by ORDINAL1:def 13;
      ex x st x = t^<*m*>;
      hence thesis by A40;
    end;
    ex L being FinSequence st dom L = Seg len G(T.t) & for k be Nat st k
    in Seg len G(T.t) holds P[k,L.k] from FINSEQ_1:sch 1(A39);
    then consider L being FinSequence such that
A41: dom L = Seg len G(T.t) and
A42: for k be Nat st k in Seg len G(T.t) holds P[k,L.k];
A43: for k st 1 <= k+1 & k+1 <= len G(T.t) holds L.(k+1) = t^<*k*>
    proof
      let k;
      assume
      1 <= k+1 & k+1 <= len G(T.t);
      then k+1 in Seg len G(T.t) by FINSEQ_1:3;
      then ex m st m+1 = k+1 & L.(k+1) = t^<*m*> by A42;
      hence thesis;
    end;
A44: succ t = { t^<*k*>: k in F(T.t)} by A38;
    succ t c= rng L
    proof
      let x;
      assume
      x in succ t;
      then consider k such that
A45:  x = t^<*k*> and
A46:  k in F(T.t) by A44;
A47:  k+1 in Seg len G(T.t) by A4,A46;
      then 1 <= k+1 & k+1 <= len G(T.t) by FINSEQ_1:3;
      then L.(k+1) = t^<*k*> by A43;
      hence thesis by A41,A45,A47,FUNCT_1:def 5;
    end;
    hence thesis;
  end;
  then dom T is finite-branching by TREES_9:def 2;
  then reconsider T as finite-branching DecoratedTree of D() by TREES_9:def 4;
A48: for n, x st x in D() & n in F(x) holds S.(x,n) = G(x).(n+1)
  proof
    let n, x such that
A49: x in D() and
A50: n in F(x);
    [x,n]`1 = x & [x,n]`2 = n by MCART_1:def 1,def 2;
    then [x,n] in [: D(), NAT :] by A49,MCART_1:11;
    then consider c being Element of [:D(),NAT:] such that
A51: c = [x,n];
    consider x9 being set, n9 being Element of NAT such that
    x9 in D() and
A52: c = [x9,n9] and
A53: n9 in F(x9) & S.c = G(x9).(n9+1) or not n9 in F(x9) & S.c = d()
    by A25;
    x9 = x by A51,A52,ZFMISC_1:33;
    hence thesis by A50,A51,A52,A53,ZFMISC_1:33;
  end;
  now
    let t be Element of dom T, w be Element of D() such that
A54: w = T . t;
    succ t = { t^<*k*>: k in F(w)} by A38,A54;
    then
A55: succ t = { t^<*k*>: k+1 in Seg len G(w)} by A14;
A56: dom G(w) = Seg len G(w) by FINSEQ_1:def 3;
A57: dom (t succ) = Seg len (t succ) by FINSEQ_1:def 3;
A58: dom (t succ) c= dom G(w)
    proof
      let n9 be set;
A59:  Seg len (t succ) = { k : 1 <= k & k <= len (t succ)} by FINSEQ_1:
      def 1;
      assume
      n9 in dom (t succ);
      then consider m such that
A60:  n9 = m and
A61:  1 <= m and
A62:  m <= len (t succ) by A57,A59;
      0 <> m by A61;
      then consider n being Nat such that
A63:  m = n+1 by NAT_1:6;
      reconsider n as Element of NAT by ORDINAL1:def 13;
      n+1 in dom (t succ) by A57,A59,A61,A62,A63;
      then t^<*n*> in dom T by Th12;
      then t^<*n*> in succ t;
      then consider k such that
A64:  t^<*k*> = t^<*n*> and
A65:  k+1 in Seg len G(w) by A55;
      <*k*> = <*n*> by A64,FINSEQ_1:46;
      hence thesis by A56,A60,A63,A65,TREES_1:23;
    end;
    dom G(w) c= dom (t succ)
    proof
      let n9 be set;
A66:  Seg len G(w) = { k : 1 <= k & k <= len G(w)} by FINSEQ_1:def 1;
      assume
      n9 in dom G(w);
      then consider m such that
A67:  n9 = m and
A68:  1 <= m and
A69:  m <= len G(w) by A56,A66;
      0 <> m by A68;
      then consider n being Nat such that
A70:  m = n+1 by NAT_1:6;
      reconsider n as Element of NAT by ORDINAL1:def 13;
      n+1 in Seg len G(w) by A66,A68,A69,A70;
      then t^<*n*> in succ t by A55;
      hence thesis by A67,A70,Th12;
    end;
    then
A71: dom G(w) = dom (t succ) by A58,XBOOLE_0:def 10;
    then
A72: dom succ(T,t) = dom G(w) by Th11;
    for m be Nat st m in dom succ(T,t) holds (succ(T,t)).m = G(w).m
    proof
      let m be Nat;
A73:  Seg len G(w) = { k : 1 <= k & k <= len G(w)} by FINSEQ_1:def 1;
      assume
A74:  m in dom succ(T,t);
      then
A75:  m in Seg len G(w) by A72,FINSEQ_1:def 3;
    then len G(w) <> 0;
      then consider l such that
A76:  l+1 = len G(T.t) and
A77:  F.(T.t) = {0} \/ Seg l by A3,A54,FINSEQ_1:4;
      consider k such that
A78:  m = k and
A79:  1 <= k and
A80:  k <= len G(w) by A75,A73;
      0 <> k by A79;
      then consider n being Nat such that
A81:  m = n+1 by A78,NAT_1:6;
      reconsider n as Element of NAT by ORDINAL1:def 13;
A82:  n <= l by A54,A78,A80,A81,A76,XREAL_1:8;
A83:  n in {0} \/ Seg l
      proof
        per cases;
        suppose
          n = 0;
          then n in {0} by TARSKI:def 1;
          hence thesis by XBOOLE_0:def 3;
        end;
        suppose
          n <> 0;
          then 0 < n by NAT_1:3;
          then 0+1 <= n by NAT_1:13;
          then n in Seg l by A82,FINSEQ_1:3;
          hence thesis by XBOOLE_0:def 3;
        end;
      end;
      n+1 in dom (t succ) by A74,A81,Th11;
      then t^<*n*> in dom T by Th12;
      then succ(T,t).(n+1) = T.(t^<*n*>) by Th13
        .= S.(T.t,n) by A38,A77,A83
        .= G(w).(n+1) by A48,A54,A77,A83;
      hence thesis by A81;
    end;
    hence succ(T,t) = G(w) by A71,Th11,FINSEQ_1:17;
  end;
  hence thesis by A38;
end;

theorem Th16:
  for T being Tree, t being Element of T holds ProperPrefixes t is
  finite Chain of T
proof
  let T be Tree, t be Element of T;
  ProperPrefixes t c= T & for p,q being FinSequence of NAT st p in
ProperPrefixes t & q in ProperPrefixes t holds p,q are_c=-comparable by TREES_1
  :42,def 5;
  hence thesis by TREES_2:def 3;
end;

theorem Th17:
  for T being Tree holds T-level 0 = {{}}
proof
  let T be Tree;
A1: {{}} c= { w where w is Element of T : len w = 0 }
  proof
    let x;
    assume
    x in {{}};
    then
A2: x = {} by TARSKI:def 1;
    {} in T by TREES_1:47;
    then consider t being Element of T such that
A3: t = {};
    len t = 0 by A3;
    hence thesis by A2,A3;
  end;
  { w where w is Element of T : len w = 0 } c= {{}}
  proof
    let x;
    assume
    x in { w where w is Element of T : len w = 0 };
    then consider w being Element of T such that
A4: w = x and
A5: len w = 0;
    w = {} by A5;
    hence thesis by A4,TARSKI:def 1;
  end;
  hence thesis by A1,XBOOLE_0:def 10;
end;

theorem Th18:
  for T being Tree holds T-level (n+1) = union { succ w where w is
  Element of T : len w = n }
proof
  let T be Tree;
  thus T-level (n+1) c= union { succ w where w is Element of T : len w = n }
  proof
    let x;
    assume
A1: x in T-level (n+1);
    then reconsider t = x as Element of T;
    t|Seg n is FinSequence of NAT by FINSEQ_1:23;
    then consider s being FinSequence of NAT such that
A2: s = t|Seg n;
    s is_a_prefix_of t by A2,TREES_1:def 1;
    then reconsider s as Element of T by TREES_1:45;
A3: ex w9 being Element of T st t = w9 & len w9 = n+1 by A1;
    n+0 <= n+1 by XREAL_1:8;
    then len s = n by A3,A2,FINSEQ_1:21;
    then
A4: succ s in { succ w where w is Element of T : len w = n };
    Seg (n+1) = dom t by A3,FINSEQ_1:def 3;
    then t = t|Seg (n+1) by RELAT_1:98;
    then ex m st t = s^<*m*> by A3,A2,Th6;
    then t in succ s;
    hence thesis by A4,TARSKI:def 4;
  end;
  thus union { succ w where w is Element of T : len w = n } c= T-level (n+1)
  proof
    set X = { succ w where w is Element of T : len w = n };
    let x;
    assume
    x in union X;
    then consider Y being set such that
A5: x in Y and
A6: Y in X by TARSKI:def 4;
    consider w being Element of T such that
A7: Y = succ w and
A8: len w = n by A6;
    reconsider t = x as Element of T by A5,A7;
    consider k such that
A9: t = w^<*k*> and
    w^<*k*> in T by A5,A7;
    len <*k*> = 1 by FINSEQ_1:57;
    then len t = n+1 by A8,A9,FINSEQ_1:35;
    hence thesis;
  end;
end;

theorem Th19:
  for T being finite-branching Tree, n being Element of NAT holds
  T-level n is finite
proof
  let T be finite-branching Tree;
  defpred Q[Element of NAT] means T-level $1 is finite;
A1: for n st Q[n] holds Q[n+1]
  proof
    let n such that
A2: T-level n is finite;
    set X = { succ w where w is Element of T : len w = n };
A3: X is finite
    proof
      defpred P[set,set] means ex w be Element of T st $1=w & $2=succ w;
A4:   for x st x in T-level n ex y being set st P[x,y]
      proof
        let x;
        assume
        x in T-level n;
        then consider w being Element of T such that
A5:     w = x;
        consider y such that
A6:     y = succ w;
        take y,w;
        thus thesis by A5,A6;
      end;
      consider f being Function such that
A7:   dom f = T-level n & for x st x in T-level n holds P[x,f.x] from
      CLASSES1:sch 1(A4);
A8:   X c= rng f
      proof
        let x;
        assume
        x in X;
        then consider w being Element of T such that
A9:     x = succ w and
A10:    len w = n;
A11:    w in T-level n by A10;
        then ex w9 being Element of T st w = w9 & f.w = succ w9 by A7;
        hence thesis by A7,A9,A11,FUNCT_1:def 5;
      end;
      card rng f c= card dom f by CARD_1:28;
      then rng f is finite by A2,A7;
      hence thesis by A8;
    end;
A12: for Y being set st Y in X holds Y is finite
    proof
      let Y be set;
      assume
      Y in X;
      then ex w being Element of T st Y = succ w & len w = n;
      hence thesis;
    end;
    T-level (n+1) = union { succ w where w is Element of T : len w = n }
    by Th18;
    hence thesis by A3,A12,FINSET_1:25;
  end;
A13: Q[0] by Th17;
  thus for n holds Q[n] from NAT_1:sch 1(A13,A1);
end;

theorem Th20:
  for T being finite-branching Tree holds T is finite iff ex n
  being Element of NAT st T-level n = {}
proof
  let T be finite-branching Tree;
  deffunc F(Element of NAT) = T-level $1;
  now
    assume
A1: T is finite;
    now
      assume
A2:   not ex n being Element of NAT st T-level n = {};
A3:   for n ex C being finite Chain of T st card C = n
      proof
        let n;
        T-level n <> {} by A2;
        then consider t being set such that
A4:     t in T-level n by XBOOLE_0:def 1;
        consider w being Element of T such that
        t = w and
A5:     len w = n by A4;
        ProperPrefixes w is finite Chain of T by Th16;
        then consider C being finite Chain of T such that
A6:     C = ProperPrefixes w;
        card C = n by A5,A6,TREES_1:68;
        hence thesis;
      end;
      for t being Element of T holds succ t is finite;
      then ex C being Chain of T st not C is finite by A3,TREES_2:31;
      hence contradiction by A1;
    end;
    hence ex n being Element of NAT st T-level n = {};
  end;
  hence T is finite implies ex n being Element of NAT st T-level n = {};
  given n such that
A7: T-level n = {};
  set X = { F(m) where m is Element of NAT : m <= n };
A8: T c= union X
  proof
    let x;
    assume
    x in T;
    then reconsider t = x as Element of T;
    consider m such that
A9: m = len t;
A10: t in F(m) by A9;
    len t < n
    proof
      consider q being FinSequence such that
A11:  q = t|Seg n and
A12:  q is_a_prefix_of t by Th4;
      assume
      n <= len t;
      then
A13:  len q = n by A11,FINSEQ_1:21;
      reconsider q as Element of T by A12,TREES_1:45;
      q in T-level n by A13;
      hence contradiction by A7;
    end;
    then F(m) in X by A9;
    hence thesis by A10,TARSKI:def 4;
  end;
A14: X is finite
  proof
    defpred P[set,set] means ex l,m st m = l+1 & $1 = m & F(l) = $2;
A15: for k be Nat st k in Seg(n+1) ex x st P[k,x]
    proof
      let k be Nat;
      assume
      k in Seg(n+1);
      then 0 <> k by FINSEQ_1:3;
      then consider l being Nat such that
A16:  k = l+1 by NAT_1:6;
      reconsider l as Element of NAT by ORDINAL1:def 13;
      consider x such that
A17:  x = F(l);
      take x,l,l+1;
      thus thesis by A16,A17;
    end;
    consider p being FinSequence such that
A18: dom p = Seg(n+1) & for k be Nat st k in Seg(n+1) holds P[k,p.k]
    from FINSEQ_1:sch 1(A15);
A19: for k st k+1 in Seg (n+1) holds p.(k+1) = F(k)
    proof
      let k;
      assume
      k+1 in Seg (n+1);
      then ex l,m st m = l+1 & k+1 = m & F(l) = p.(k+1) by A18;
      hence thesis;
    end;
    X c= rng p
    proof
      let y;
      assume
      y in X;
      then consider m such that
A20:  y = F(m) and
A21:  m <= n;
      0 <= m by NAT_1:2;
      then
A22:  0+1 <= m+1 by XREAL_1:8;
      m+1 <= n+1 by A21,XREAL_1:8;
      then
A23:  m+1 in Seg (n+1) by A22,FINSEQ_1:3;
      then p.(m+1) = F(m) by A19;
      hence thesis by A18,A20,A23,FUNCT_1:def 5;
    end;
    hence thesis;
  end;
  for Y being set st Y in X holds Y is finite
  proof
    let Y be set;
    assume
    Y in X;
    then ex m st Y = F(m) & m <= n;
    hence thesis by Th19;
  end;
  then union X is finite by A14,FINSET_1:25;
  hence thesis by A8;
end;

theorem Th21:
  for T being finite-branching Tree st not T is finite ex C being
  Chain of T st not C is finite
proof
  let T be finite-branching Tree such that
A1: not T is finite;
A2: for n ex C being finite Chain of T st card C = n
  proof
    let n;
    T-level n <> {} by A1,Th20;
    then consider t being set such that
A3: t in T-level n by XBOOLE_0:def 1;
A4: ex w being Element of T st t = w & len w = n by A3;
    reconsider t as Element of T by A3;
    ProperPrefixes t is finite Chain of T by Th16;
    then consider C being finite Chain of T such that
A5: C = ProperPrefixes t;
    card C = n by A4,A5,TREES_1:68;
    hence thesis;
  end;
  for t being Element of T holds succ t is finite;
  hence thesis by A2,TREES_2:31;
end;

theorem Th22:
  for T being finite-branching Tree st not T is finite ex B being
  Branch of T st not B is finite
proof
  let T be finite-branching Tree;
  assume
  not T is finite;
  then consider C being Chain of T such that
A1: not C is finite by Th21;
  consider B being Branch of T such that
A2: C c= B by TREES_2:30;
  not B is finite by A1,A2;
  hence thesis;
end;

theorem Th23:
  for T being Tree, C being Chain of T, t being Element of T st t
  in C & not C is finite ex t9 being Element of T st t9 in C & t
  is_a_proper_prefix_of t9
proof
  let T be Tree, C be Chain of T, t be Element of T such that
A1: t in C and
A2: not C is finite;
  now
    assume
A3: not ex t9 being Element of T st t9 in C & t is_a_proper_prefix_of
    t9;
A4: for t9 being Element of T st t9 in C holds t9 is_a_prefix_of t
    proof
      let t9 be Element of T such that
A5:   t9 in C;
      now
        assume
A6:     not t9 is_a_prefix_of t;
        t,t9 are_c=-comparable by A1,A5,TREES_2:def 3;
        then t is_a_prefix_of t9 by A6,XBOOLE_0:def 9;
        then t is_a_proper_prefix_of t9 by A6,XBOOLE_0:def 8;
        hence contradiction by A3,A5;
      end;
      hence thesis;
    end;
    C c= ProperPrefixes t \/ {t}
    proof
      let x be set;
      assume
A7:   x in C;
      then reconsider t9 = x as Element of T;
A8:   t9 is_a_prefix_of t by A4,A7;
      t9 in ProperPrefixes t \/ {t}
      proof
        per cases by A8,XBOOLE_0:def 8;
        suppose
          t9 is_a_proper_prefix_of t;
          then t9 in ProperPrefixes t by TREES_1:36;
          hence thesis by XBOOLE_0:def 3;
        end;
        suppose
          t9 = t;
          then t9 in {t} by TARSKI:def 1;
          hence thesis by XBOOLE_0:def 3;
        end;
      end;
      hence thesis;
    end;
    hence contradiction by A2;
  end;
  hence thesis;
end;

theorem Th24:
  for T being Tree, B being Branch of T, t being Element of T st t
  in B & not B is finite ex t9 being Element of T st t9 in B & t9 in succ t
proof
  let T be Tree, B be Branch of T, t be Element of T;
  assume
  t in B & not B is finite;
  then consider t99 being Element of T such that
A1: t99 in B and
A2: t is_a_proper_prefix_of t99 by Th23;
  t is_a_prefix_of t99 by A2,XBOOLE_0:def 8;
  then consider r being FinSequence such that
A3: t99 = t^r by TREES_1:8;
  reconsider r as FinSequence of NAT by A3,FINSEQ_1:50;
  r|Seg 1 is FinSequence of NAT by FINSEQ_1:23;
  then consider r1 being FinSequence of NAT such that
A4: r1 = r|Seg 1;
  1 <= len r
  proof
    len t < len t99 by A2,TREES_1:24;
    then consider m being Nat such that
A5: (len t) + m = len t99 by NAT_1:10;
    m <> 0 by A2,A5,TREES_1:24;
    then 0 < m by NAT_1:3;
    then
A6: 0+1 <= m by NAT_1:13;
    len t99 = (len t) + len r by A3,FINSEQ_1:35;
    hence thesis by A5,A6;
  end;
  then consider n such that
A7: r1 = <*n*> by A4,Th7;
A8: r1 is_a_prefix_of r by A4,TREES_1:def 1;
  then
A9: t^r1 is_a_prefix_of t99 by A3,FINSEQ_6:15;
  t^<*n*> in T by A3,A7,A8,FINSEQ_6:15,TREES_1:45;
  then consider t9 being Element of T such that
A10: t9 = t^<*n*>;
  t9 in succ t by A10;
  hence thesis by A1,A7,A9,A10,TREES_2:27;
end;

theorem Th25:
  for f being Function of NAT,NAT st (for n holds f.(n+1) qua
Element of NAT <= f.n qua Element of NAT) ex m st for n st m <= n holds f.n = f
  .m
proof
  let f be Function of NAT,NAT such that
A1: for n holds f.(n+1) qua Element of NAT <= f.n qua Element of NAT;
A2: for m,k st m <= k holds f.k qua Element of NAT <= f.m qua Element of NAT
  proof
    defpred P[Element of NAT] means for m st m <= $1 holds f.$1 qua Element of
    NAT <= f.m qua Element of NAT;
A3: for k st P[k] holds P[k + 1]
    proof
      let k such that
A4:   P[k];
      now
        let m;
        assume
A5:     m <= k+1;
        per cases by A5,NAT_1:8;
        suppose
A6:       m <= k;
          reconsider fk = f.k, fm = f.m, fk1 = f.(k+1) as Element of NAT;
A7:       fk1 <= fk by A1;
          fk <= fm by A4,A6;
          hence f.(k+1) qua Element of NAT <= f.m qua Element of NAT by A7
          ,XXREAL_0:2;
        end;
        suppose
          m = k+1;
          hence f.(k+1) qua Element of NAT <= f.m qua Element of NAT;
        end;
      end;
      hence thesis;
    end;
A8: P[0]
    proof
      let m such that
A9:   m <= 0;
      0 <= m by NAT_1:2;
      hence thesis by A9,XXREAL_0:1;
    end;
A10: for k holds P[k] from NAT_1:sch 1(A8,A3);
    let m,k;
    assume
    m <= k;
    hence thesis by A10;
  end;
  defpred P[set] means $1 in rng f;
A11: ex k be Nat st P[k]
  proof
    consider y such that
A12: y = f.0;
    reconsider k = y as Element of NAT by A12;
    take k;
    dom f = NAT by FUNCT_2:def 1;
    hence thesis by A12,FUNCT_1:def 5;
  end;
  ex k be Nat st P[k] & for n be Nat st P[n] holds k <= n from NAT_1:sch
  5(A11);
  then consider l be Nat such that
A13: l in rng f and
A14: for n be Nat st n in rng f holds l <= n;
  consider x such that
A15: x in dom f and
A16: l = f.x by A13,FUNCT_1:def 5;
  reconsider m = x as Element of NAT by A15,FUNCT_2:def 1;
A17: dom f = NAT by FUNCT_2:def 1;
  for k st m <= k holds f.k = f.m
  proof
    let k such that
A18: m <= k;
    now
      reconsider fk = f.k, fm = f.m as Element of NAT;
      assume
A19:  f.k <> f.m;
      fk <= fm by A2,A18;
      then
A20:  fk < fm by A19,XXREAL_0:1;
      f.k in rng f by A17,FUNCT_1:def 5;
      hence contradiction by A14,A16,A20;
    end;
    hence thesis;
  end;
  hence thesis;
end;

scheme
  FinDecTree { D() -> non empty set, T() -> finite-branching DecoratedTree of
  D(), F(Element of D()) -> Element of NAT }: T() is finite
provided
A1: for t,t9 being Element of dom T(), d being Element of D() st t9 in
succ t & d = T().t9 holds F(d) < F(T().t)
proof
  now
    assume
    not T() is finite;
    then not dom T() is finite by FINSET_1:29;
    then consider B being Branch of dom T() such that
A2: not B is finite by Th22;
    defpred P[set,set] means ex t,t9 being Element of dom T() st t9 in succ t
    & t in B & t9 in B & $1 = T().t & $2 = T().t9;
    defpred Q[set] means ex t being Element of dom T() st t in B & $1 = T().t;
A3: for x st x in D() & Q[x] ex y st y in D() & P[x,y] & Q[y]
    proof
      let x;
      assume that
      x in D() and
A4:   Q[x];
      consider t being Element of dom T() such that
A5:   t in B and
A6:   x = T() .t by A4;
      consider t9 being Element of dom T() such that
A7:   t9 in B & t9 in succ t by A2,A5,Th24;
      ex y st y = T().t9;
      hence thesis by A5,A6,A7;
    end;
    {} in B by TREES_2:28;
    then Q[T().{}];
    then
A8: T().{} in D() & Q[T().{}];
    ex g being Function st dom g = NAT & rng g c= D() & g.0 = T().{} &
    for k holds P[g.k,g.(k+1)] & Q[g.k] from TREES_2:sch 5(A8,A3);
    then consider g being Function such that
    dom g = NAT and
    rng g c= D() and
    g.0 = T().{} and
A9: for k holds (ex t,t9 being Element of dom T() st t9 in succ t & t
in B & t9 in B & g.k = T().t & g.(k+1) = T().t9) & ex t being Element of dom T(
    ) st t in B & g.k = T().t;
    defpred P[set,set] means ex d being Element of D() st d = g.$1 & $2 = F(d);
A10: for x st x in NAT ex y st y in NAT & P[x,y]
    proof
      let x;
      assume
      x in NAT;
      then reconsider k = x as Element of NAT;
      consider t being Element of dom T() such that
      t in B and
A11:  g.k = T().t by A9;
      ex y st y = F(T().t);
      hence thesis by A11;
    end;
    ex f being Function of NAT,NAT st for x st x in NAT holds P[x,f.x]
    from FUNCT_2:sch 1(A10);
    then consider f being Function of NAT,NAT such that
A12: for x st x in NAT ex d being Element of D() st d = g.x & f.x = F(
    d);
A13: for k ex t,t9 being Element of dom T() st t9 in succ t & t in B & t9
    in B & f.k = F(T().t) & f.(k+1) = F(T().t9)
    proof
      let k;
A14:  ex t,t9 being Element of dom T() st t9 in succ t & t in B & t9 in B
      & g.k = T().t & g.(k+1) = T().t9 by A9;
      (ex d being Element of D() st d = g.k & f.k = F(d) )& ex d1 being
      Element of D() st d1 = g.(k+1) & f.(k+1) = F (d1) by A12;
      hence thesis by A14;
    end;
A15: for n ex t,t9 being Element of dom T() st t9 in succ t & f.n = F(T().
t) & f.(n+1) = F(T().t9) & f.(n+1) qua Element of NAT < f.n qua Element of NAT
    proof
      let n;
      ex t,t9 being Element of dom T() st t9 in succ t & t in B & t9 in B
      & f.n = F(T().t) & f.(n+1) = F(T().t9) by A13;
      hence thesis by A1;
    end;
    for n holds f.(n+1) qua Element of NAT <= f.n qua Element of NAT
    proof
      let n;
      ex t,t9 being Element of dom T() st t9 in succ t & f.n = F(T().t) &
f.(n+1) = F(T().t9) & f.(n+1) qua Element of NAT < f.n qua Element of NAT by
      A15;
      hence thesis;
    end;
    then consider m such that
A16: for n st m <= n holds f.n = f.m by Th25;
A17: m+0 <= m+1 by XREAL_1:8;
    ex t,t9 being Element of dom T() st t9 in succ t & f.m = F(T().t) & f.
(m+1) = F(T().t9) & f.(m+1) qua Element of NAT < f.m qua Element of NAT by A15;
    hence contradiction by A16,A17;
    consider k;
  end;
  hence thesis;
end;

reserve D for non empty set,
  T for DecoratedTree of D;

begin

reserve F, G, G9,H, H9 for Element of QC-WFF;

canceled 2;

theorem Th28:
  F is_subformula_of G implies len @ F <= len @ G
proof
  assume
A1: F is_subformula_of G;
  per cases;
  suppose
    F = G;
    hence thesis;
  end;
  suppose
    F <> G;
    then F is_proper_subformula_of G by A1,QC_LANG2:def 22;
    hence thesis by QC_LANG2:74;
  end;
end;

theorem
  F is_subformula_of G & len @ F = len @ G implies F = G
proof
  assume that
A1: F is_subformula_of G and
A2: len @ F = len @ G;
  now
    assume
    F <> G;
    then F is_proper_subformula_of G by A1,QC_LANG2:def 22;
    hence contradiction by A2,QC_LANG2:74;
  end;
  hence thesis;
end;

definition
  let p be Element of QC-WFF;
  func list_of_immediate_constituents(p) -> FinSequence of QC-WFF equals
  :Def1
  :
  <*> QC-WFF if p = VERUM or p is atomic, <* the_argument_of p *> if p is
  negative, <* the_left_argument_of p, the_right_argument_of p *> if p is
  conjunctive otherwise <* the_scope_of p *>;
  coherence;
  consistency by QC_LANG1:51;
end;

theorem Th30:
  k in dom list_of_immediate_constituents(F) & G = (
  list_of_immediate_constituents(F)).k implies G is_immediate_constituent_of F
proof
  assume that
A1: k in dom list_of_immediate_constituents(F) and
A2: G = (list_of_immediate_constituents(F)).k;
A3: F <> VERUM & not F is atomic by A1,Def1,RELAT_1:60;
  per cases by A3,QC_LANG1:33;
  suppose
A4: F is negative;
    then
A5: list_of_immediate_constituents(F) = <* the_argument_of F *> by
    Def1;
    then k in Seg 1 by A1,FINSEQ_1:def 8;
    then k = 1 by FINSEQ_1:4,TARSKI:def 1;
    then G = the_argument_of F by A2,A5,FINSEQ_1:def 8;
    hence thesis by A4,QC_LANG2:65;
  end;
  suppose
A6: F is universal;
    then
A7: not F is conjunctive by QC_LANG1:51;
    ( not F is atomic)& not F is negative by A6,QC_LANG1:51;
    then
A8: list_of_immediate_constituents(F) = <* the_scope_of F *> by A6,
    A7,Def1,QC_LANG1:51;
    then k in Seg 1 by A1,FINSEQ_1:def 8;
    then k = 1 by FINSEQ_1:4,TARSKI:def 1;
    then G = the_scope_of F by A2,A8,FINSEQ_1:def 8;
    hence thesis by A6,QC_LANG2:67;
  end;
  suppose
A9: F is conjunctive;
A10: <* the_left_argument_of F, the_right_argument_of F *>.2 =
    the_right_argument_of F by FINSEQ_1:61;
A11: <* the_left_argument_of F, the_right_argument_of F *>.1 =
    the_left_argument_of F by FINSEQ_1:61;
A12: list_of_immediate_constituents(F) = <* the_left_argument_of F,
    the_right_argument_of F *> by A9,Def1;
    len <* the_left_argument_of F, the_right_argument_of F *> = 2 by
    FINSEQ_1:61;
    then
A13: k in {1,2} by A1,A12,FINSEQ_1:4,def 3;
    now
      per cases by A13,TARSKI:def 2;
      suppose
        k = 1;
        hence thesis by A2,A9,A12,A11,QC_LANG2:66;
      end;
      suppose
        k = 2;
        hence thesis by A2,A9,A12,A10,QC_LANG2:66;
      end;
    end;
    hence thesis;
  end;
  suppose
A14: F is universal;
    then
A15: not F is conjunctive by QC_LANG1:51;
    ( not F is atomic)& not F is negative by A14,QC_LANG1:51;
    then
A16: list_of_immediate_constituents(F) = <* the_scope_of F *> by A14,
    A15,Def1,QC_LANG1:51;
    then k in Seg 1 by A1,FINSEQ_1:def 8;
    then k = 1 by FINSEQ_1:4,TARSKI:def 1;
    then G = the_scope_of F by A2,A16,FINSEQ_1:def 8;
    hence thesis by A14,QC_LANG2:67;
  end;
end;

theorem Th31:
  rng list_of_immediate_constituents(F) = { G where G is Element
  of QC-WFF : G is_immediate_constituent_of F }
proof
  thus rng list_of_immediate_constituents(F) c= { G where G is Element of
  QC-WFF : G is_immediate_constituent_of F }
  proof
    let y be set;
    assume
A1: y in rng list_of_immediate_constituents(F);
    rng list_of_immediate_constituents(F) c= QC-WFF by FINSEQ_1:def 4;
    then reconsider G = y as Element of QC-WFF by A1;
    ex x being set st x in dom list_of_immediate_constituents(F) & y = (
    list_of_immediate_constituents(F)).x by A1,FUNCT_1:def 5;
    then G is_immediate_constituent_of F by Th30;
    hence thesis;
  end;
  thus { G where G is Element of QC-WFF : G is_immediate_constituent_of F } c=
  rng list_of_immediate_constituents(F)
  proof
    let x be set;
    assume
    x in { G where G is Element of QC-WFF : G
    is_immediate_constituent_of F };
    then consider G such that
A2: x = G and
A3: G is_immediate_constituent_of F;
    ex n st n in dom list_of_immediate_constituents(F) & G = (
    list_of_immediate_constituents(F)).n
    proof
A4:   F <> VERUM by A3,QC_LANG2:58;
      per cases by A3,A4,QC_LANG1:33,QC_LANG2:64;
      suppose
        F is negative;
        then
A5:     list_of_immediate_constituents(F) = <* the_argument_of F *> & G =
        the_argument_of F by A3,Def1,QC_LANG2:65;
        consider n such that
A6:     n = 1;
        dom <* the_argument_of F *> = Seg 1 & <* the_argument_of F *>.n =
        the_argument_of F by A6,FINSEQ_1:def 8;
        hence thesis by A6,A5,FINSEQ_1:5;
      end;
      suppose
A7:     F is conjunctive;
A8:     <* the_left_argument_of F, the_right_argument_of F *>.2 =
        the_right_argument_of F by FINSEQ_1:61;
        len <* the_left_argument_of F, the_right_argument_of F *> = 2 by
        FINSEQ_1:61;
        then
A9:     dom <* the_left_argument_of F, the_right_argument_of F *> = Seg 2
        by FINSEQ_1:def 3;
A10:    list_of_immediate_constituents(F) = <* the_left_argument_of F,
        the_right_argument_of F *> by A7,Def1;
A11:    <* the_left_argument_of F, the_right_argument_of F *>.1 =
        the_left_argument_of F by FINSEQ_1:61;
        now
          per cases by A3,A7,QC_LANG2:66;
          suppose
A12:        G = the_left_argument_of F;
            1 in {1,2} by TARSKI:def 2;
            hence thesis by A10,A11,A9,A12,FINSEQ_1:4;
          end;
          suppose
            G = the_right_argument_of F;
            hence thesis by A10,A8,A9,FINSEQ_1:5;
            consider n;
          end;
        end;
        hence thesis;
      end;
      suppose
A13:    F is universal;
        then
A14:    not F is conjunctive by QC_LANG1:51;
        ( not F is atomic)& not F is negative by A13,QC_LANG1:51;
        then
A15:    list_of_immediate_constituents(F) = <* the_scope_of F *> by A13,
        A14,Def1,QC_LANG1:51;
        consider n such that
A16:    n = 1;
A17:    G = the_scope_of F by A3,A13,QC_LANG2:67;
        dom <* the_scope_of F *> = Seg 1 & <* the_scope_of F *>.n =
        the_scope_of F by A16,FINSEQ_1:def 8;
        hence thesis by A15,A16,A17,FINSEQ_1:5;
      end;
    end;
    hence thesis by A2,FUNCT_1:def 5;
  end;
end;

definition
  let p be Element of QC-WFF;
  func tree_of_subformulae(p) -> finite DecoratedTree of QC-WFF means
  :Def2:
  it.{} = p & for x being Element of dom it holds succ(it,x) =
  list_of_immediate_constituents(it.x);
  existence
  proof
    deffunc F(Element of QC-WFF) = len @ $1;
    consider W being finite-branching DecoratedTree of QC-WFF such that
A1: W.{} = p & for x being Element of dom W, w being Element of QC-WFF
st w = W.x holds succ(W,x) = list_of_immediate_constituents w from ExDecTrees;
A2: for t,t9 being Element of dom W, d being Element of QC-WFF st t9 in
    succ t & d = W.t9 holds F(d) < F(W.t)
    proof
      let t,t9 be Element of dom W, d be Element of QC-WFF such that
A3:   t9 in succ t and
A4:   d = W.t9;
      consider n such that
A5:   t9 = t^<*n*> and
      t^<*n*> in dom W by A3;
A6:   W.t9 = succ(W,t).(n+1) by A5,Th13
        .= (list_of_immediate_constituents(W.t)).(n+1) by A1;
      dom list_of_immediate_constituents(W.t) = dom succ(W,t) by A1
        .= dom (t succ) by Th11;
      then n+1 in dom list_of_immediate_constituents(W.t) by A5,Th12;
      hence thesis by A4,A6,Th30,QC_LANG2:71;
    end;
    W is finite from FinDecTree(A2);
    then reconsider W as finite DecoratedTree of QC-WFF;
    take W;
    thus thesis by A1;
  end;
  uniqueness
  proof
    let t1, t2 be finite DecoratedTree of QC-WFF;
A7: for t1, t2 being finite DecoratedTree of QC-WFF st ( t1.{} = p & for
x being Element of dom t1 holds succ(t1,x) = list_of_immediate_constituents(t1.
    x) ) & ( t2.{} = p & for x being Element of dom t2 holds succ(t2,x) =
    list_of_immediate_constituents(t2.x) ) holds t1 c= t2
    proof
      let t1, t2 be finite DecoratedTree of QC-WFF;
      assume that
A8:   t1.{} = p and
A9:   for x being Element of dom t1 holds succ(t1,x) =
      list_of_immediate_constituents(t1.x) and
A10:  t2.{} = p and
A11:  for x being Element of dom t2 holds succ(t2,x) =
      list_of_immediate_constituents(t2.x);
      defpred P[set] means $1 in dom t2 & t1.$1 = t2.$1;
A12:  for t being Element of dom t1, n st P[t] & t^<*n*> in dom t1 holds
      P[t^<*n*>]
      proof
        let t be Element of dom t1, n;
        assume that
A13:    P[t] and
A14:    t^<*n*> in dom t1;
        reconsider t9 = t as Element of dom t2 by A13;
A15:    succ(t1,t) = list_of_immediate_constituents(t2.t9) by A9,A13
          .= succ(t2,t9) by A11;
        t^<*n*> in succ t by A14;
        then n < card succ t by TREES_9:7;
        then n < len (t succ) by TREES_9:def 5;
        then n < len succ(t1,t) by TREES_9:29;
        then n < len (t9 succ) by A15,TREES_9:29;
        then n < card succ t9 by TREES_9:def 5;
        then
A16:    t9^<*n*> in succ t9 by TREES_9:7;
        hence t^<*n*> in dom t2;
        thus t1.(t^<*n*>) = succ(t2,t9).(n+1) by A14,A15,Th13
          .= t2.(t^<*n*>) by A16,Th13;
      end;
A17:  P[{}] by A8,A10,TREES_1:47;
A18:  for t being Element of dom t1 holds P[t] from TREES_2:sch 1(A17,A12
      );
      then for t being set st t in dom t1 holds t in dom t2;
      then
A19:  dom t1 c= dom t2 by TARSKI:def 3;
      for x being set st x in dom t1 holds t1.x = t2.x by A18;
      hence thesis by A19,GRFUNC_1:8;
    end;
    assume
    ( t1.{} = p & for x being Element of dom t1 holds succ(t1,x) =
list_of_immediate_constituents(t1.x) )&( t2.{} = p & for x being Element of dom
    t2 holds succ(t2,x) = list_of_immediate_constituents(t2.x) );
    then t1 c= t2 & t2 c= t1 by A7;
    hence thesis by XBOOLE_0:def 10;
  end;
end;

reserve t, t9, t99 for Element of dom tree_of_subformulae(F);

canceled 2;

theorem Th34:
  F in rng tree_of_subformulae(F)
proof
  (tree_of_subformulae(F)).{} = F & {} in dom tree_of_subformulae(F) by
  Def2, TREES_1:47;
  hence thesis by FUNCT_1:def 5;
end;

theorem Th35:
  t^<*n*> in dom tree_of_subformulae(F) implies ex G st G = (
  tree_of_subformulae(F)).(t^<*n*>) & G is_immediate_constituent_of (
  tree_of_subformulae(F)).t
proof
A1: succ t = {t^<*k*>: t^<*k*> in dom tree_of_subformulae(F)};
  assume
  t^<*n*> in dom tree_of_subformulae(F);
  then consider t9 such that
A2: t9 = t^<*n*>;
A3: rng list_of_immediate_constituents((tree_of_subformulae(F)).t) = { G1
  where G1 is Element of QC-WFF : G1 is_immediate_constituent_of (
  tree_of_subformulae(F)).t } by Th31;
  consider G such that
A4: G = (tree_of_subformulae(F)).t9;
  t9 in {t^<*k*>: t^<*k*> in dom tree_of_subformulae(F)} by A2;
  then G in rng succ((tree_of_subformulae(F)),t) by A4,A1,Th14;
  then G in rng list_of_immediate_constituents((tree_of_subformulae(F)).t) by
  Def2;
  hence thesis by A2,A4,A3;
end;

theorem Th36:
  H is_immediate_constituent_of (tree_of_subformulae(F)).t iff ex
n st t^<*n*> in dom tree_of_subformulae(F) & H = (tree_of_subformulae(F)).(t^<*
  n*>)
proof
  now
    set G = (tree_of_subformulae(F)).t;
    assume
    H is_immediate_constituent_of (tree_of_subformulae(F)).t;
    then H in {H1 where H1 is Element of QC-WFF : H1
    is_immediate_constituent_of G };
    then
A1: H in rng list_of_immediate_constituents(G) by Th31;
    succ(tree_of_subformulae(F),t) = list_of_immediate_constituents(G) by
    Def2;
    then consider t9 such that
A2: H = (tree_of_subformulae(F)).t9 and
A3: t9 in succ t by A1,Th15;
    ex n st t9 = t^<*n*> & t^<*n*> in dom tree_of_subformulae(F) by A3;
    hence ex n st t^<*n*> in dom tree_of_subformulae(F) & H = (
    tree_of_subformulae(F)).(t^<*n*>) by A2;
  end;
  hence H is_immediate_constituent_of (tree_of_subformulae(F)).t implies ex n
st t^<*n*> in dom tree_of_subformulae(F) & H = (tree_of_subformulae(F)).(t^<*n
  *>);
  given n such that
A4: t^<*n*> in dom tree_of_subformulae(F) and
A5: H = (tree_of_subformulae(F)).(t^<*n*>);
  ex G st G = (tree_of_subformulae(F)).(t^<*n*>) & G
  is_immediate_constituent_of (tree_of_subformulae(F)).t by A4,Th35;
  hence thesis by A5;
end;

theorem Th37:
  G in rng tree_of_subformulae(F) & H is_immediate_constituent_of
  G implies H in rng tree_of_subformulae(F)
proof
  assume that
A1: G in rng tree_of_subformulae(F) and
A2: H is_immediate_constituent_of G;
  consider x being set such that
A3: x in dom tree_of_subformulae(F) and
A4: G = (tree_of_subformulae(F)).x by A1,FUNCT_1:def 5;
  consider t such that
A5: t = x by A3;
  ex n st t^<*n*> in dom tree_of_subformulae(F) & H = ( tree_of_subformulae
  (F)).(t^<*n*>) by A2,A4,A5,Th36;
  hence thesis by FUNCT_1:def 5;
end;

theorem Th38:
  G in rng tree_of_subformulae(F) & H is_subformula_of G implies H
  in rng tree_of_subformulae(F)
proof
  assume that
A1: G in rng tree_of_subformulae(F) and
A2: H is_subformula_of G;
  consider n being Element of NAT, L being FinSequence such that
A3: 1 <= n and
A4: len L = n and
A5: L.1 = H and
A6: L.n = G and
A7: for k st 1 <= k & k < n ex H1,G1 being Element of QC-WFF st L.k = H1
  & L.(k+1) = G1 & H1 is_immediate_constituent_of G1 by A2,QC_LANG2:def 21;
  defpred P[Nat] means ex H9 st H9 = L.($1+1) & ($1+1) in dom L & H9 in rng
  tree_of_subformulae(F);
A8: for k being Nat st k <> 0 & P[k] ex m being Nat st m < k & P[m]
  proof
A9: Seg n = dom L by A4,FINSEQ_1:def 3;
    let k be Nat;
    assume that
A10: k <> 0 and
A11: P[k];
    consider m being Nat such that
A12: m+1 = k by A10,NAT_1:6;
    0 < k by A10,NAT_1:3;
    then
A13: 0+1 <= k by NAT_1:13;
    Seg len L = dom L by FINSEQ_1:def 3;
    then
A14: k+1 <= n by A4,A11,FINSEQ_1:3;
    then k in NAT & k < n by NAT_1:13,ORDINAL1:def 13;
    then
A15: ex H1,G1 being Element of QC-WFF st L.k = H1 & L.(k+1) = G1 & H1
    is_immediate_constituent_of G1 by A7,A13;
    k <= n by A14,NAT_1:13;
    then
A16: k in dom L by A13,A9,FINSEQ_1:3;
    m < k by A12,NAT_1:13;
    hence thesis by A11,A12,A15,A16,Th37;
  end;
A17: ex k being Nat st P[k]
  proof
    0 <> n by A3;
    then
A18: ex k being Nat st k+1 = n by NAT_1:6;
    Seg n = dom L by A4,FINSEQ_1:def 3;
    hence thesis by A1,A6,A18,FINSEQ_1:5;
  end;
  P[0] from NAT_1:sch 7(A17,A8);
  hence thesis by A5;
end;

theorem Th39:
  G in rng tree_of_subformulae(F) iff G is_subformula_of F
proof
  now
    set T = dom tree_of_subformulae(F);
    defpred P[set] means ex H st (tree_of_subformulae(F)).$1 = H & H
    is_subformula_of F;
    assume
    G in rng tree_of_subformulae(F);
    then consider t being set such that
A1: t in dom tree_of_subformulae(F) and
A2: (tree_of_subformulae(F)).t = G by FUNCT_1:def 5;
    reconsider t as Element of T by A1;
A3: for t being Element of T, n st P[t] & t^<*n*> in T holds P[t^<*n*>]
    proof
      let t be Element of T, n;
      assume that
A4:   P[t] and
A5:   t^<*n*> in T;
      (tree_of_subformulae(F)).(t^<*n*>) is Element of QC-WFF by A5,
      FUNCT_1:172;
      then consider H9 such that
A6:   (tree_of_subformulae(F)).(t^<*n*>) = H9;
      consider H such that
A7:   (tree_of_subformulae(F)).t = H and
A8:   H is_subformula_of F by A4;
      ex G9 st G9 = (tree_of_subformulae(F)).(t^<*n*>) & G9
      is_immediate_constituent_of (tree_of_subformulae(F)).t by A5,Th35;
      then H9 is_subformula_of H by A7,A6,QC_LANG2:72;
      hence thesis by A8,A6,QC_LANG2:77;
    end;
A9: P[{}]
    proof
      take F;
      thus thesis by Def2;
    end;
    for t being Element of T holds P[t] from TREES_2:sch 1(A9,A3);
    then ex H st (tree_of_subformulae(F)).t = H & H is_subformula_of F;
    hence G is_subformula_of F by A2;
  end;
  hence G in rng tree_of_subformulae(F) implies G is_subformula_of F;
  assume
  G is_subformula_of F;
  hence thesis by Th34,Th38;
end;

theorem
  rng tree_of_subformulae(F) = Subformulae(F)
proof
  thus rng tree_of_subformulae(F) c= Subformulae(F)
  proof
    let y be set;
    assume
A1: y in rng tree_of_subformulae(F);
    then y is Element of QC-WFF by RELAT_1:202;
    then consider G such that
A2: G = y;
    G is_subformula_of F by A1,A2,Th39;
    hence thesis by A2,QC_LANG2:def 23;
  end;
  thus Subformulae(F) c= rng tree_of_subformulae(F)
  proof
    let y be set;
    assume
    y in Subformulae(F);
    then ex G st G = y & G is_subformula_of F by QC_LANG2:def 23;
    hence thesis by Th39;
  end;
end;

theorem
  t9 in succ t implies (tree_of_subformulae(F)).t9
  is_immediate_constituent_of (tree_of_subformulae(F)).t
proof
  assume
  t9 in succ t;
  then ex n st t9 = t^<*n*> & t^<*n*> in dom tree_of_subformulae(F);
  hence thesis by Th36;
end;

reserve x,y1,y2 for set;

theorem Th42:
  t is_a_prefix_of t9 implies (tree_of_subformulae(F)).t9
  is_subformula_of (tree_of_subformulae(F)).t
proof
  assume
  t is_a_prefix_of t9;
  then consider r being FinSequence such that
A1: t9 = t^r by TREES_1:8;
  reconsider r as FinSequence of NAT by A1,FINSEQ_1:50;
  consider n such that
A2: n = len r;
  defpred P[set,set] means ex G being QC-formula, m,k1 being Nat, r1 being
  FinSequence st G = $2 & m = $1 & m+k1 = n+1 & r1 = r|Seg k1 & G = (
  tree_of_subformulae(F)).(t^r1);
A3: for k be Nat st k in Seg(n+1) ex x st P[k,x]
  proof
    let k be Nat;
    assume
    k in Seg(n+1);
    then k <= n+1 by FINSEQ_1:3;
    then consider k1 being Nat such that
A4: k+k1 = n+1 by NAT_1:10;
    reconsider k1 as Element of NAT by ORDINAL1:def 13;
    r|Seg k1 is FinSequence by FINSEQ_1:19;
    then consider r1 being FinSequence such that
A5: r1 = r|Seg k1;
    t^r1 in dom tree_of_subformulae(F)
    proof
      ex q being FinSequence st q = r|Seg k1 & q is_a_prefix_of r by Th4;
      hence thesis by A1,A5,FINSEQ_6:15,TREES_1:45;
    end;
    then reconsider t1 = t^r1 as Element of dom tree_of_subformulae(F);
    consider G being QC-formula such that
A6: G = (tree_of_subformulae(F)).t1;
    take G,G,k,k1,r1;
    thus thesis by A4,A5,A6;
  end;
  ex L being FinSequence st dom L = Seg(n+1) & for k be Nat st k in Seg(n
  +1) holds P[k,L.k] from FINSEQ_1:sch 1(A3);
  then consider L being FinSequence such that
A7: dom L = Seg (n+1) and
A8: for k be Nat st k in Seg (n+1) holds ex G being QC-formula, m,k1
being Nat, r1 being FinSequence st G = L.k & m = k & m+k1 = n+1 & r1 = r|Seg k1
  & G = (tree_of_subformulae(F)).(t^r1);
A9: len L = n+1 by A7,FINSEQ_1:def 3;
A10: for k st 1 <= k & k <= n+1 ex G being QC-formula, k1 being Nat, r1
  being FinSequence st G = L.k & k+k1 = n+1 & r1 = r|Seg k1 & G = (
  tree_of_subformulae(F)).(t^r1)
  proof
    let k;
    assume
    1 <= k & k <= n+1;
    then k in Seg (n+1) by FINSEQ_1:3;
    then
    ex G being QC-formula, m,k1 being Nat, r1 being FinSequence st G = L.k
& m = k & m+k1 = n+1 & r1 = r|Seg k1 & G = ( tree_of_subformulae(F)).(t^r1) by
    A8;
    hence thesis;
  end;
A11: for k st 1 <= k & k < n+1 ex H1,G1 being Element of QC-WFF st L.k = H1
  & L.(k+1) = G1 & H1 is_immediate_constituent_of G1
  proof
    let k;
    assume that
A12: 1 <= k and
A13: k < n+1;
    consider H1 being QC-formula, k1 being Nat, r1 being FinSequence such that
A14: H1 = L.k and
A15: k+k1 = n+1 and
A16: r1 = r|Seg k1 and
A17: H1 = (tree_of_subformulae(F)).(t^r1) by A10,A12,A13;
    1 <= k+1 & k+1 <= n+1 by A12,A13,NAT_1:13;
    then consider
    G1 being QC-formula, k2 being Nat, r2 being FinSequence such that
A18: G1 = L.(k+1) and
A19: (k+1)+k2 = n+1 and
A20: r2 = r|Seg k2 and
A21: G1 = (tree_of_subformulae(F)).(t^r2) by A10;
    reconsider k1,k2 as Element of NAT by ORDINAL1:def 13;
    k1+1 <= n+1 by A12,A15,XREAL_1:8;
    then k2+1 <= len r by A2,A15,A19,XREAL_1:8;
    then consider m such that
A22: r1 = r2^<*m*> by A15,A16,A19,A20,Th6;
    t^r2 in dom tree_of_subformulae(F)
    proof
      ex q being FinSequence st q = r|Seg k2 & q is_a_prefix_of r by Th4;
      hence thesis by A1,A20,FINSEQ_6:15,TREES_1:45;
    end;
    then reconsider t2 = t^r2 as Element of dom tree_of_subformulae(F);
A23: t2^<*m*> = t^r1 by A22,FINSEQ_1:45;
    t2^<*m*> in dom tree_of_subformulae(F)
    proof
      ex q being FinSequence st q = r|Seg k1 & q is_a_prefix_of r by Th4;
      hence thesis by A1,A16,A23,FINSEQ_6:15,TREES_1:45;
    end;
    then H1 is_immediate_constituent_of G1 by A17,A21,A23,Th36;
    hence thesis by A14,A18;
  end;
  0 < n+1 by NAT_1:3;
  then
A24: 0+1 <= n+1 by NAT_1:13;
  then consider
  G being QC-formula, k1 being Nat, r1 being FinSequence such that
A25: G = L.1 and
A26: 1+k1 = n+1 and
A27: r1 = r|Seg k1 and
A28: G = (tree_of_subformulae(F)).(t^r1) by A10;
A29: L.(n+1) = (tree_of_subformulae(F)).t
  proof
    consider G being QC-formula, k1 being Nat, r1 being FinSequence such that
A30: G = L.(n+1) and
A31: (n+1)+k1 = n+1 & r1 = r|Seg k1 and
A32: G = (tree_of_subformulae(F)).(t^r1) by A24,A10;
    Seg k1 = {} by A31;
    then r1 = {} by A31,FINSEQ_1:4,RELAT_1:110;
    hence thesis by A30,A32,FINSEQ_1:47;
  end;
  dom r = Seg k1 by A2,A26,FINSEQ_1:def 3;
  then t9 = t^r1 by A1,A27,RELAT_1:98;
  hence thesis by A24,A9,A25,A28,A29,A11,QC_LANG2:def 21;
end;

theorem Th43:
  t is_a_proper_prefix_of t9 implies len @((tree_of_subformulae(F)
  ).t9) < len @((tree_of_subformulae(F)).t)
proof
  set G = (tree_of_subformulae(F)).t;
  set H = (tree_of_subformulae(F)).t9;
  assume
A1: t is_a_proper_prefix_of t9;
  then
A2: t is_a_prefix_of t9 by XBOOLE_0:def 8;
A3: now
    consider r being FinSequence such that
A4: t9 = t^r by A2,TREES_1:8;
    reconsider r as FinSequence of NAT by A4,FINSEQ_1:50;
A5: 1 <= len r
    proof
      reconsider t1 = {} as Element of dom tree_of_subformulae(F) by TREES_1:
      47;
      r <> {} & t1 is_a_prefix_of r by A1,A4,FINSEQ_1:47,XBOOLE_1:2;
      then
A6:   t1 is_a_proper_prefix_of r by XBOOLE_0:def 8;
      len t1 = 0;
      then 0 < len r by A6,TREES_1:24;
      then 0+1 <= len r by NAT_1:13;
      hence thesis;
    end;
    defpred P[set,set] means ex t1 being Element of dom tree_of_subformulae(F)
, r1 being FinSequence, m being Nat st m = $1 & r1 = r|Seg m & t1 = t^r1 & $2 =
    (tree_of_subformulae(F)).t1;
A7: for k be Nat st k in Seg len r ex x st P[k,x]
    proof
      let k be Nat such that
A8:   k in Seg len r;
      r|Seg k is FinSequence by FINSEQ_1:19;
      then consider r1 being FinSequence such that
A9:   r1 = r|Seg k;
      r1 is_a_prefix_of r by A8,A9,TREES_1:def 1;
      then t^r1 in dom tree_of_subformulae(F) by A4,
      FINSEQ_6:15,TREES_1:45;
      then consider t1 being Element of dom tree_of_subformulae(F) such that
A10:  t1 = t^r1;
      ex x st x = (tree_of_subformulae(F)).t1;
      hence thesis by A9,A10;
    end;
    ex L being FinSequence st dom L = Seg len r & for k be Nat st k in
    Seg len r holds P[k,L.k] from FINSEQ_1:sch 1(A7);
    then consider L being FinSequence such that
    dom L = Seg len r and
A11: for k be Nat st k in Seg len r holds ex t1 being Element of dom
tree_of_subformulae(F), r1 being FinSequence, m being Nat st m = k & r1 = r|Seg
    m & t1 = t^r1 & L.k = (tree_of_subformulae(F)).t1;
    for k st 1 <= k & k <= len r holds ex t1 being Element of dom
tree_of_subformulae(F), r1 being FinSequence st r1 = r|Seg k & t1 = t^r1 & L.k
    = (tree_of_subformulae(F)).t1
    proof
      let k;
      assume
      1 <= k & k <= len r;
      then k in Seg len r by FINSEQ_1:3;
      then ex t1 being Element of dom tree_of_subformulae(F), r1 being
      FinSequence, m being Nat st m = k & r1 = r|Seg m & t1 = t^r1 & L.k = (
      tree_of_subformulae(F)).t1 by A11;
      hence thesis;
    end;
    then consider t1 being Element of dom tree_of_subformulae(F), r1 being
    FinSequence such that
A12: r1 = r|Seg 1 and
A13: t1 = t^r1 and
    L.1 = (tree_of_subformulae(F)).t1 by A5;
    set H1 = (tree_of_subformulae(F)).t1;
A14: H1 is_immediate_constituent_of G
    proof
      ex m being Element of NAT st r1 = <*m*> by A5,A12,Th7;
      hence thesis by A13,Th36;
    end;
    r1 is_a_prefix_of r by A12,TREES_1:def 1;
    then t1 is_a_prefix_of t9 by A4,A13,FINSEQ_6:15;
    then
A15: len @ H <= len @ H1 by Th28,Th42;
    assume
    len @ H = len @ G;
    hence contradiction by A15,A14,QC_LANG2:71;
  end;
  len @ H <= len @ G by A2,Th28,Th42;
  hence thesis by A3,XXREAL_0:1;
end;

theorem Th44:
  t is_a_proper_prefix_of t9 implies (tree_of_subformulae(F)).t9
  <> (tree_of_subformulae(F)).t
proof
  set G = (tree_of_subformulae(F)).t;
  set H = (tree_of_subformulae(F)).t9;
  assume
  t is_a_proper_prefix_of t9;
  then len @H < len @G by Th43;
  hence thesis;
end;

theorem Th45:
  t is_a_proper_prefix_of t9 implies (tree_of_subformulae(F)).t9
  is_proper_subformula_of (tree_of_subformulae(F)).t
proof
  set G = (tree_of_subformulae(F)).t;
  set H = (tree_of_subformulae(F)).t9;
  assume
A1: t is_a_proper_prefix_of t9;
  then t is_a_prefix_of t9 by XBOOLE_0:def 8;
  then
A2: H is_subformula_of G by Th42;
  H <> G by A1,Th44;
  hence thesis by A2,QC_LANG2:def 22;
end;

theorem
  (tree_of_subformulae(F)).t = F iff t = {}
proof
  now
    reconsider t1 = {} as Element of dom tree_of_subformulae(F) by TREES_1:47;
    assume
A1: (tree_of_subformulae(F)).t = F;
A2: t1 is_a_prefix_of t by XBOOLE_1:2;
    assume
    t <> {};
    then t1 is_a_proper_prefix_of t by A2,XBOOLE_0:def 8;
    then (tree_of_subformulae(F)).t is_proper_subformula_of (
    tree_of_subformulae(F)).t1 by Th45;
    hence contradiction by A1,Def2;
  end;
  hence (tree_of_subformulae(F)).t = F implies t = {};
  assume
  t = {};
  hence thesis by Def2;
end;

theorem Th47:
  t <> t9 & (tree_of_subformulae(F)).t = (tree_of_subformulae(F)).
  t9 implies not t,t9 are_c=-comparable
proof
  assume that
A1: t <> t9 and
A2: (tree_of_subformulae(F)).t = (tree_of_subformulae(F)).t9;
  assume
A3: t,t9 are_c=-comparable;
  per cases by A3,XBOOLE_0:def 9;
  suppose
    t is_a_prefix_of t9;
    then t is_a_proper_prefix_of t9 by A1,XBOOLE_0:def 8;
    hence contradiction by A2,Th45;
  end;
  suppose
    t9 is_a_prefix_of t;
    then t9 is_a_proper_prefix_of t by A1,XBOOLE_0:def 8;
    hence contradiction by A2,Th45;
  end;
end;

definition
  let F, G be Element of QC-WFF;
  func F-entry_points_in_subformula_tree_of G -> AntiChain_of_Prefixes of dom
  tree_of_subformulae(F) means
  :Def3:
  for t being Element of dom
  tree_of_subformulae(F) holds t in it iff (tree_of_subformulae(F)).t = G;
  existence
  proof
    consider X being set such that
A1: X = { t where t is Element of dom tree_of_subformulae(F) : (
    tree_of_subformulae(F)).t = G };
A2: X is AntiChain_of_Prefixes of dom tree_of_subformulae(F)
    proof
A3:   for p1,p2 being FinSequence st p1 in X & p2 in X & p1 <> p2 holds
      not p1,p2 are_c=-comparable
      proof
        let p1,p2 be FinSequence;
        assume that
A4:     p1 in X & p2 in X and
A5:     p1 <> p2;
        (ex t1 being Element of dom tree_of_subformulae(F) st t1 = p1 & (
        tree_of_subformulae(F)).t1 = G )& ex t2 being Element of dom
tree_of_subformulae(F) st t2 = p2 & (tree_of_subformulae(F)).t2 = G by A1,A4;
        hence thesis by A5,Th47;
      end;
      for x being set st x in X holds x is FinSequence
      proof
        let x be set;
        assume
        x in X;
        then ex t being Element of dom tree_of_subformulae(F) st t = x & (
        tree_of_subformulae(F)).t = G by A1;
        hence thesis;
      end;
      then reconsider X as AntiChain_of_Prefixes by A3,TREES_1:def 13;
      X c= dom tree_of_subformulae(F)
      proof
        let x be set;
        assume
        x in X;
        then ex t being Element of dom tree_of_subformulae(F) st t = x & (
        tree_of_subformulae(F)).t = G by A1;
        hence thesis;
      end;
      hence thesis by TREES_1:def 14;
    end;
    for t being Element of dom tree_of_subformulae(F) holds t in X iff (
    tree_of_subformulae(F)).t = G
    proof
      let t be Element of dom tree_of_subformulae(F);
      thus t in X iff (tree_of_subformulae(F)).t = G
      proof
        now
          assume
          t in X;
          then ex t9 being Element of dom tree_of_subformulae(F) st t9 = t & (
          tree_of_subformulae(F)).t9 = G by A1;
          hence (tree_of_subformulae(F)).t = G;
        end;
        hence t in X implies (tree_of_subformulae(F)).t = G;
        assume
        (tree_of_subformulae(F)).t = G;
        hence thesis by A1;
      end;
    end;
    hence thesis by A2;
  end;
  uniqueness
  proof
    let P1,P2 be AntiChain_of_Prefixes of dom tree_of_subformulae(F);
    assume
A6: for t being Element of dom tree_of_subformulae(F) holds t in P1
    iff (tree_of_subformulae(F)).t = G;
    assume
A7: for t being Element of dom tree_of_subformulae(F) holds t in P2
    iff (tree_of_subformulae(F)).t = G;
    thus P1 c= P2
    proof
      let x be set such that
A8:   x in P1;
      P1 c= dom tree_of_subformulae(F) by TREES_1:def 14;
      then reconsider t = x as Element of dom tree_of_subformulae(F) by A8;
      (tree_of_subformulae(F)).t = G by A6,A8;
      hence thesis by A7;
    end;
    thus P2 c= P1
    proof
      let x be set such that
A9:   x in P2;
      P2 c= dom tree_of_subformulae(F) by TREES_1:def 14;
      then reconsider t = x as Element of dom tree_of_subformulae(F) by A9;
      (tree_of_subformulae(F)).t = G by A7,A9;
      hence thesis by A6;
    end;
  end;
end;

canceled;

theorem Th49:
  F-entry_points_in_subformula_tree_of G = { t where t is Element
  of dom tree_of_subformulae(F) : (tree_of_subformulae(F)).t = G }
proof
  thus F-entry_points_in_subformula_tree_of G c= { t where t is Element of dom
  tree_of_subformulae(F) : (tree_of_subformulae(F)).t = G }
  proof
    let x be set;
    assume
A1: x in F-entry_points_in_subformula_tree_of G;
    F-entry_points_in_subformula_tree_of G c= dom tree_of_subformulae(F)
    by TREES_1:def 14;
    then reconsider t9 = x as Element of dom tree_of_subformulae(F) by A1;
    (tree_of_subformulae(F)).t9 = G by A1,Def3;
    hence thesis;
  end;
  thus { t where t is Element of dom tree_of_subformulae(F) : (
  tree_of_subformulae(F)).t = G } c= F-entry_points_in_subformula_tree_of G
  proof
    let x be set;
    assume
    x in { t where t is Element of dom tree_of_subformulae(F) : (
    tree_of_subformulae(F)).t = G };
    then ex t9 st t9 = x & (tree_of_subformulae(F)).t9 = G;
    hence thesis by Def3;
  end;
end;

theorem Th50:
  G is_subformula_of F iff F-entry_points_in_subformula_tree_of G
  <> {}
proof
  now
    assume
    G is_subformula_of F;
    then G in rng tree_of_subformulae(F) by Th39;
    then ex x being set st x in dom tree_of_subformulae(F) & G = (
    tree_of_subformulae(F)).x by FUNCT_1:def 5;
    hence F-entry_points_in_subformula_tree_of G <> {} by Def3;
  end;
  hence G is_subformula_of F implies F-entry_points_in_subformula_tree_of G <>
  {};
  assume
  F-entry_points_in_subformula_tree_of G <> {};
  then consider x being set such that
A1: x in F-entry_points_in_subformula_tree_of G by XBOOLE_0:def 1;
  x in { t where t is Element of dom tree_of_subformulae(F) : (
  tree_of_subformulae(F)).t = G } by A1,Th49;
  then ex t st x = t & (tree_of_subformulae(F)).t = G;
  then G in rng tree_of_subformulae(F) by FUNCT_1:def 5;
  hence thesis by Th39;
end;

theorem Th51:
  t9 = t^<*m*> & (tree_of_subformulae(F)).t is negative implies (
tree_of_subformulae(F)).t9 = the_argument_of (tree_of_subformulae(F)).t & m = 0
proof
  set G = (tree_of_subformulae(F)).t;
  set H = (tree_of_subformulae(F)).t9;
  assume that
A1: t9 = t^<*m*> and
A2: G is negative;
A3: dom <* the_argument_of G *> = Seg 1 by FINSEQ_1:def 8;
A4: succ(tree_of_subformulae(F),t) = list_of_immediate_constituents(G) & ex
  q being Element of dom tree_of_subformulae(F) st q = t & succ(
  tree_of_subformulae(F),t) = tree_of_subformulae(F)*(q succ) by Def2, TREES_9:
  def 6;
  list_of_immediate_constituents(G) = <* the_argument_of G *> by A2,Def1;
  then dom <* the_argument_of G *> = dom (t succ) by A4,Th10;
  then m+1 in dom <* the_argument_of G *> by A1,Th12;
  then
A5: m+1 = 0+1 by A3,FINSEQ_1:4,TARSKI:def 1;
  H is_immediate_constituent_of G by A1,Th36;
  hence thesis by A2,A5,QC_LANG2:65;
  consider q being Element of dom tree_of_subformulae(F);
end;

theorem Th52:
  t9 = t^<*m*> & (tree_of_subformulae(F)).t is conjunctive implies
(tree_of_subformulae(F)).t9 = the_left_argument_of (tree_of_subformulae(F)).t &
  m = 0 or (tree_of_subformulae(F)).t9 = the_right_argument_of (
  tree_of_subformulae(F)).t & m = 1
proof
  set G = (tree_of_subformulae(F)).t;
  set H = (tree_of_subformulae(F)).t9;
  assume that
A1: t9 = t^<*m*> and
A2: G is conjunctive;
A3: list_of_immediate_constituents(G) = <* the_left_argument_of G,
  the_right_argument_of G *> by A2,Def1;
  len <* the_left_argument_of G, the_right_argument_of G *> = 2 by
  FINSEQ_1:61;
  then
A4: dom <* the_left_argument_of G, the_right_argument_of G *> = Seg 2 by
  FINSEQ_1:def 3;
A5: succ(tree_of_subformulae(F),t) = list_of_immediate_constituents(G) by
  Def2;
  ex q being Element of dom tree_of_subformulae(F) st q = t & succ(
  tree_of_subformulae(F),t) = tree_of_subformulae(F)*(q succ) by TREES_9:def 6;
  then
  dom <* the_left_argument_of G, the_right_argument_of G *> = dom (t succ)
  by A5,A3,Th10;
  then
  m+1 in dom <* the_left_argument_of G, the_right_argument_of G *> by A1,
  Th12;
  then
A6: m+1 = 0+1 or m+1 = 1+1 by A4,FINSEQ_1:4,TARSKI:def 2;
  per cases by A6;
  suppose
A7: m = 0;
    H = succ(tree_of_subformulae(F),t).(m+1) by A1,Th13
      .= the_left_argument_of G by A5,A3,A7,FINSEQ_1:61;
    hence thesis by A7;
  end;
  suppose
A8: m = 1;
    H = succ(tree_of_subformulae(F),t).(m+1) by A1,Th13
      .= the_right_argument_of G by A5,A3,A8,FINSEQ_1:61;
    hence thesis by A8;
  end;
end;

theorem Th53:
  t9 = t^<*m*> & (tree_of_subformulae(F)).t is universal implies (
  tree_of_subformulae(F)).t9 = the_scope_of (tree_of_subformulae(F)).t & m = 0
proof
  set G = (tree_of_subformulae(F)).t;
  set H = (tree_of_subformulae(F)).t9;
  assume that
A1: t9 = t^<*m*> and
A2: G is universal;
A3: dom <* the_scope_of G *> = Seg 1 by FINSEQ_1:def 8;
A4: succ(tree_of_subformulae(F),t) = list_of_immediate_constituents(G) & ex
  q being Element of dom tree_of_subformulae(F) st q = t & succ(
  tree_of_subformulae(F),t) = tree_of_subformulae(F)*(q succ) by Def2, TREES_9:
  def 6;
  G is non atomic non negative non conjunctive by A2,QC_LANG1:51;
  then list_of_immediate_constituents(G) = <* the_scope_of G *> by A2,
  Def1,
  QC_LANG1:51;
  then dom <* the_scope_of G *> = dom (t succ) by A4,Th10;
  then m+1 in dom <* the_scope_of G *> by A1,Th12;
  then
A5: m+1 = 0+1 by A3,FINSEQ_1:4,TARSKI:def 1;
  H is_immediate_constituent_of G by A1,Th36;
  hence thesis by A2,A5,QC_LANG2:67;
end;

theorem Th54:
  (tree_of_subformulae(F)).t is negative implies t^<*0*> in dom
tree_of_subformulae(F) & (tree_of_subformulae(F)).(t^<*0*>) = the_argument_of (
  tree_of_subformulae(F)).t
proof
  consider H;
  set G = (tree_of_subformulae(F)).t;
  consider H such that
A1: H = the_argument_of G;
  assume
A2: G is negative;
  then H is_immediate_constituent_of G by A1,QC_LANG2:65;
  then consider m such that
A3: t^<*m*> in dom tree_of_subformulae(F) and
  H = (tree_of_subformulae(F)).(t^<*m*>) by Th36;
  m = 0 by A2,A3,Th51;
  hence thesis by A2,A3,Th51;
end;

reserve x,y for set;

Lm1: dom <* x, y *> = Seg 2
proof
  thus dom <* x, y *> = Seg len <* x, y *> by FINSEQ_1:def 3
    .= Seg 2 by FINSEQ_1:61;
end;

theorem Th55:
  (tree_of_subformulae(F)).t is conjunctive implies t^<*0*> in dom
  tree_of_subformulae(F) & (tree_of_subformulae(F)).(t^<*0*>) =
  the_left_argument_of (tree_of_subformulae(F)).t & t^<*1*> in dom
  tree_of_subformulae(F) & (tree_of_subformulae(F)).(t^<*1*>) =
  the_right_argument_of (tree_of_subformulae(F)).t
proof
  set G = (tree_of_subformulae(F)).t;
  assume
A1: G is conjunctive;
  (tree_of_subformulae(F))*(t succ) = (succ(tree_of_subformulae(F),t))
  proof
    ex q being Element of dom tree_of_subformulae(F) st q = t & succ(
tree_of_subformulae(F),t) = (tree_of_subformulae(F))*(q succ) by TREES_9:def 6;
    hence thesis;
  end;
  then
A2: dom (t succ) = dom (succ(tree_of_subformulae(F),t)) by Th10
    .= dom (list_of_immediate_constituents(G)) by Def2
    .= dom <* the_left_argument_of G, the_right_argument_of G *> by A1,Def1
    .= {1,2} by Lm1,FINSEQ_1:4;
A3: 0+1 in {1,2} by TARSKI:def 2;
  then t^<*0*> in dom tree_of_subformulae(F) by A2,Th12;
  then
  (tree_of_subformulae(F)).(t^<*0*>) = (succ(tree_of_subformulae(F),t)).(0
  +1) by Th13
    .= (list_of_immediate_constituents(G)).1 by Def2
    .= <* the_left_argument_of G, the_right_argument_of G *>.1 by A1,Def1
    .= the_left_argument_of G by FINSEQ_1:61;
  hence
  t^<*0*> in dom tree_of_subformulae(F) & (tree_of_subformulae(F)).(t^<*0
  *>) = the_left_argument_of (tree_of_subformulae(F)).t by A2,A3,Th12;
A4: 1+1 in {1,2} by TARSKI:def 2;
  then t^<*1*> in dom tree_of_subformulae(F) by A2,Th12;
  then
  (tree_of_subformulae(F)).(t^<*1*>) = (succ(tree_of_subformulae(F),t)).(
  1+1) by Th13
    .= (list_of_immediate_constituents(G)).2 by Def2
    .= <* the_left_argument_of G, the_right_argument_of G *>.2 by A1,Def1
    .= the_right_argument_of G by FINSEQ_1:61;
  hence thesis by A2,A4,Th12;
end;

theorem Th56:
  (tree_of_subformulae(F)).t is universal implies t^<*0*> in dom
  tree_of_subformulae(F) & (tree_of_subformulae(F)).(t^<*0*>) = the_scope_of (
  tree_of_subformulae(F)).t
proof
  consider H;
  set G = (tree_of_subformulae(F)).t;
  consider H such that
A1: H = the_scope_of G;
  assume
A2: G is universal;
  then H is_immediate_constituent_of G by A1,QC_LANG2:67;
  then consider m such that
A3: t^<*m*> in dom tree_of_subformulae(F) and
  H = (tree_of_subformulae(F)).(t^<*m*>) by Th36;
  m = 0 by A2,A3,Th53;
  hence thesis by A2,A3,Th53;
end;

reserve t for Element of dom tree_of_subformulae(F),
  s for Element of dom
  tree_of_subformulae(G);

theorem Th57:
  t in F-entry_points_in_subformula_tree_of G & s in G
  -entry_points_in_subformula_tree_of H implies t^s in F
  -entry_points_in_subformula_tree_of H
proof
  defpred P[Element of NAT] means for F,G,H,t,s holds G = (tree_of_subformulae
  (F)).t & H = (tree_of_subformulae(G)).s & len s = $1 implies t^s in F
  -entry_points_in_subformula_tree_of H;
A1: for k st P[k] holds P[k + 1]
  proof
    let k such that
A2: P[k];
    thus P[k + 1]
    proof
A3:   1 in {1} by TARSKI:def 1;
      let F,G,H,t,s;
      assume that
A4:   G = (tree_of_subformulae(F)).t and
A5:   H = (tree_of_subformulae(G)).s and
A6:   len s = k+1;
      consider v being FinSequence, x being set such that
A7:   s = v^<*x*> and
A8:   len v = k by A6,TREES_2:4;
      reconsider u = <*x*> as FinSequence of NAT by A7,FINSEQ_1:50;
A9:   rng u c= NAT by FINSEQ_1:def 4;
      dom u = Seg 1 & u.1 = x by FINSEQ_1:def 8;
      then x in rng u by A3,FINSEQ_1:4,FUNCT_1:def 5;
      then reconsider m = x as Element of NAT by A9;
      reconsider v as FinSequence of NAT by A7,FINSEQ_1:50;
      reconsider s9 = v as Element of dom tree_of_subformulae(G) by A7,
      TREES_1:46;
      consider H9 such that
A10:  H9 = (tree_of_subformulae(G)).s9;
A11:  t^s9 in F-entry_points_in_subformula_tree_of H9 by A2,A4,A8,A10;
      F-entry_points_in_subformula_tree_of H9 c= dom tree_of_subformulae(
      F) by TREES_1:def 14;
      then consider t9 being Element of dom tree_of_subformulae(F) such that
A12:  t9 = t^s9 by A11;
A13:  H9 = (tree_of_subformulae(F)).t9 by A11,A12,Def3;
A14:  s = s9^<*m*> by A7;
      then
A15:  H is_immediate_constituent_of H9 by A5,A10,Th36;
A16:  H = (tree_of_subformulae(F)).(t9^<*m*>) & t9^<*m*> in dom
      tree_of_subformulae(F)
      proof
A17:    H9 <> VERUM by A15,QC_LANG2:58;
        now
          per cases by A15,A17,QC_LANG1:33,QC_LANG2:64;
          suppose
A18:        H9 is negative;
            then H = the_argument_of H9 & m = 0 by A5,A7,A14,A10,Th51;
            hence thesis by A13,A18,Th54;
          end;
          suppose
A19:        H9 is conjunctive;
            then H = the_left_argument_of H9 & m = 0 or H =
            the_right_argument_of H9 & m = 1 by A5,A14,A10,Th52;
            hence thesis by A13,A19,Th55;
          end;
          suppose
A20:        H9 is universal;
            then H = the_scope_of H9 & m = 0 by A5,A7,A14,A10,Th53;
            hence thesis by A13,A20,Th56;
          end;
        end;
        hence thesis;
      end;
      t^s = t9^<*m*> by A7,A12,FINSEQ_1:45;
      hence thesis by A16,Def3;
    end;
  end;
A21: P[0]
  proof
    let F,G,H,t,s;
    assume that
A22: G = (tree_of_subformulae(F)).t and
A23: H = (tree_of_subformulae(G)).s and
A24: len s = 0;
A25: s = {} by A24;
    then
A26: t^s = t by FINSEQ_1:47;
    H = G by A23,A25,Def2;
    hence thesis by A22,A26,Def3;
  end;
  for k holds P[k] from NAT_1:sch 1(A21,A1);
  then
A27: G = (tree_of_subformulae(F)).t & H = (tree_of_subformulae(G)).s & len s
  = len s implies t^s in F-entry_points_in_subformula_tree_of H;
  assume
  t in F-entry_points_in_subformula_tree_of G & s in G
  -entry_points_in_subformula_tree_of H;
  hence thesis by A27,Def3;
end;

reserve t for Element of dom tree_of_subformulae(F),
  s for FinSequence;

theorem Th58:
  t in F-entry_points_in_subformula_tree_of G & t^s in F
  -entry_points_in_subformula_tree_of H implies s in G
  -entry_points_in_subformula_tree_of H
proof
  defpred P[Element of NAT] means for F,G,H,t,s holds G = (tree_of_subformulae
  (F)).t & t^s in F-entry_points_in_subformula_tree_of H & len s = $1 implies s
  in G-entry_points_in_subformula_tree_of H;
A1: for k st P[k] holds P[k + 1]
  proof
    let k such that
A2: P[k];
    thus P[k + 1]
    proof
      let F,G,H,t,s;
      assume that
A3:   G = (tree_of_subformulae(F)).t and
A4:   t^s in F-entry_points_in_subformula_tree_of H and
A5:   len s = k+1;
      consider v being FinSequence, x being set such that
A6:   s = v^<*x*> and
A7:   len v = k by A5,TREES_2:4;
      F-entry_points_in_subformula_tree_of H = { t1 where t1 is Element
of dom tree_of_subformulae(F) : (tree_of_subformulae(F)).t1 = H } by Th49;
      then consider t99 such that
A8:   t99 = t^s and
A9:   (tree_of_subformulae(F)).t99 = H by A4;
      reconsider s1 = s as FinSequence of NAT by A8,FINSEQ_1:50;
A10:  s1 = v^<*x*> by A6;
      then reconsider u = <*x*> as FinSequence of NAT by FINSEQ_1:50;
      reconsider v as FinSequence of NAT by A10,FINSEQ_1:50;
A11:  rng u c= NAT by FINSEQ_1:def 4;
A12:  1 in {1} by TARSKI:def 1;
      dom u = Seg 1 & u.1 = x by FINSEQ_1:def 8;
      then x in rng u by A12,FINSEQ_1:4,FUNCT_1:def 5;
      then reconsider m = x as Element of NAT by A11;
      consider t9 being FinSequence of NAT such that
A13:  t9 = t^v;
A14:  t99 = t9^<*m*> by A6,A8,A13,FINSEQ_1:45;
      then t9 is_a_prefix_of t99 by TREES_1:8;
      then reconsider t9 as Element of dom tree_of_subformulae(F) by
      TREES_1:45;
      consider H9 such that
A15:  H9 = (tree_of_subformulae(F)).t9;
      t^v in F-entry_points_in_subformula_tree_of H9 by A13,A15,Def3;
      then
A16:  v in G-entry_points_in_subformula_tree_of H9 by A2,A3,A7;
      G-entry_points_in_subformula_tree_of H9 = { v1 where v1 is Element
of dom tree_of_subformulae(G) : (tree_of_subformulae(G)).v1 = H9 } by Th49;
      then
A17:  ex v1 being Element of dom tree_of_subformulae(G) st v = v1 & (
      tree_of_subformulae(G)).v1 = H9 by A16;
      then reconsider v as Element of dom tree_of_subformulae(G);
A18:  H is_immediate_constituent_of H9 by A9,A14,A15,Th36;
      H = (tree_of_subformulae(G)).(v^<*m*>) & v^<*m*> in dom
      tree_of_subformulae(G)
      proof
A19:    H9 <> VERUM by A18,QC_LANG2:58;
        now
          per cases by A18,A19,QC_LANG1:33,QC_LANG2:64;
          suppose
A20:        H9 is negative;
            then H = the_argument_of H9 & m = 0 by A9,A14,A15,Th51;
            hence thesis by A17,A20,Th54;
          end;
          suppose
A21:        H9 is conjunctive;
            then H = the_left_argument_of H9 & m = 0 or H =
            the_right_argument_of H9 & m = 1 by A9,A14,A15,Th52;
            hence thesis by A17,A21,Th55;
          end;
          suppose
A22:        H9 is universal;
            then H = the_scope_of H9 & m = 0 by A9,A14,A15,Th53;
            hence thesis by A17,A22,Th56;
          end;
        end;
        hence thesis;
      end;
      hence thesis by A6,Def3;
    end;
  end;
A23: P[0]
  proof
    let F,G,H,t,s;
    assume that
A24: G = (tree_of_subformulae(F)).t and
A25: t^s in F-entry_points_in_subformula_tree_of H and
A26: len s = 0;
A27: s = {} by A26;
    then reconsider s9 = s as Element of dom tree_of_subformulae(G) by
    TREES_1:
    47;
A28: G = (tree_of_subformulae(G)).s9 by A27,Def2;
    F-entry_points_in_subformula_tree_of H = { t1 where t1 is Element of
    dom tree_of_subformulae(F) : (tree_of_subformulae(F)).t1 = H } by Th49;
    then ex t9 st t9 = t^s & (tree_of_subformulae(F)).t9 = H by A25;
    then H = G by A24,A27,FINSEQ_1:47;
    hence thesis by A28,Def3;
  end;
  for k holds P[k] from NAT_1:sch 1(A23,A1);
  then
A29: G = (tree_of_subformulae(F)).t & t^s in F
  -entry_points_in_subformula_tree_of H & len s = len s implies s in G
  -entry_points_in_subformula_tree_of H;
  assume
  t in F-entry_points_in_subformula_tree_of G & t^s in F
  -entry_points_in_subformula_tree_of H;
  hence thesis by A29,Def3;
end;

theorem Th59:
  for F,G,H holds { t^s where t is Element of dom
  tree_of_subformulae(F), s is Element of dom tree_of_subformulae(G) : t in F
  -entry_points_in_subformula_tree_of G & s in G
-entry_points_in_subformula_tree_of H } c= F-entry_points_in_subformula_tree_of
  H
proof
  let F,G,H;
  let x be set;
  assume
  x in { t^s where t is Element of dom tree_of_subformulae(F), s is
  Element of dom tree_of_subformulae(G) : t in F
  -entry_points_in_subformula_tree_of G & s in G
  -entry_points_in_subformula_tree_of H };
  then
  ex t being Element of dom tree_of_subformulae(F), s being Element of dom
tree_of_subformulae(G) st x = t^s & t in F -entry_points_in_subformula_tree_of
  G & s in G -entry_points_in_subformula_tree_of H;
  hence thesis by Th57;
end;

theorem Th60:
  (tree_of_subformulae(F))|t = tree_of_subformulae((
  tree_of_subformulae(F)).t)
proof
  set T1 = (tree_of_subformulae(F))|t;
  set T2 = tree_of_subformulae((tree_of_subformulae(F)).t);
  thus
A1: dom T1 = dom T2
  proof
    let p be FinSequence of NAT;
    now
      consider G such that
A2:   G = (tree_of_subformulae(F)).t;
A3:   t in F-entry_points_in_subformula_tree_of G by A2,Def3;
      consider t9 being FinSequence of NAT such that
A4:   t9 = t^p;
      assume
      p in dom T1;
      then p in (dom tree_of_subformulae(F))|t by TREES_2:def 11;
      then reconsider t9 as Element of dom tree_of_subformulae(F) by
      A4, TREES_1
      :def 9;
      consider H such that
A5:   H = (tree_of_subformulae(F)).t9;
A6:   G-entry_points_in_subformula_tree_of H c= dom T2 by A2, TREES_1:def
      14;
      t9 in F-entry_points_in_subformula_tree_of H by A5,Def3;
      then p in G-entry_points_in_subformula_tree_of H by A3,A4,Th58;
      hence p in dom T2 by A6;
    end;
    hence p in dom T1 implies p in dom T2;
    now
      consider G such that
A7:   G = (tree_of_subformulae(F)).t;
      assume
      p in dom T2;
      then reconsider s = p as Element of dom tree_of_subformulae(G) by A7;
      consider H such that
A8:   H = (tree_of_subformulae(G)).s;
A9:   s in G-entry_points_in_subformula_tree_of H by A8,Def3;
A10:  F-entry_points_in_subformula_tree_of H c= dom tree_of_subformulae(F
      ) by TREES_1:def 14;
      t in F-entry_points_in_subformula_tree_of G by A7,Def3;
      then t^s in F-entry_points_in_subformula_tree_of H by A9,Th57;
      then s in (dom tree_of_subformulae(F))|t by A10,TREES_1:def 9;
      hence p in dom T1 by TREES_2:def 11;
    end;
    hence thesis;
  end;
  now
    let p be Node of T1;
    consider G such that
A11: G = (tree_of_subformulae(F)).t;
    reconsider s = p as Element of dom tree_of_subformulae(G) by A1,A11;
A12: dom T1 = (dom tree_of_subformulae(F))|t by TREES_2:def 11;
    then reconsider t9= t^s as Element of dom tree_of_subformulae(F) by
    TREES_1:def 9;
    consider H such that
A13: H = T1.p;
A14: t in F-entry_points_in_subformula_tree_of G by A11,Def3;
    T1.p = (tree_of_subformulae(F)).(t^p) by A12,TREES_2:def 11;
    then t9 in F-entry_points_in_subformula_tree_of H by A13,Def3;
    then s in G-entry_points_in_subformula_tree_of H by A14,Th58;
    hence T1.p = T2.p by A11,A13,Def3;
  end;
  hence for p being Node of T1 holds T1.p = T2.p;
end;

theorem Th61:
  t in F-entry_points_in_subformula_tree_of G iff (
  tree_of_subformulae(F))|t = tree_of_subformulae(G)
proof
  now
    assume
    t in F-entry_points_in_subformula_tree_of G;
    then (tree_of_subformulae(F)).t = G by Def3;
    hence (tree_of_subformulae(F))|t = tree_of_subformulae(G) by Th60;
  end;
  hence t in F-entry_points_in_subformula_tree_of G implies (
  tree_of_subformulae(F))|t = tree_of_subformulae(G);
  now
    assume
    (tree_of_subformulae(F))|t = tree_of_subformulae(G);
    then
A1: (tree_of_subformulae(F)).t = (tree_of_subformulae(G)).{} by Th8;
    (tree_of_subformulae(G)).{} = G by Def2;
    hence t in F-entry_points_in_subformula_tree_of G by A1,Def3;
  end;
  hence thesis;
end;

theorem
  F-entry_points_in_subformula_tree_of G = { t where t is Element of dom
tree_of_subformulae(F) : (tree_of_subformulae(F))|t = tree_of_subformulae(G) }
proof
  thus F-entry_points_in_subformula_tree_of G c= { t where t is Element of dom
tree_of_subformulae(F) : (tree_of_subformulae(F))|t = tree_of_subformulae(G) }
  proof
    let x be set;
    assume
A1: x in F-entry_points_in_subformula_tree_of G;
    F-entry_points_in_subformula_tree_of G c= dom tree_of_subformulae(F)
    by TREES_1:def 14;
    then reconsider t9 = x as Element of dom tree_of_subformulae(F) by A1;
    (tree_of_subformulae(F))|t9 = tree_of_subformulae(G) by A1,Th61;
    hence thesis;
  end;
  thus { t where t is Element of dom tree_of_subformulae(F) : (
  tree_of_subformulae(F))|t = tree_of_subformulae(G) } c= F
  -entry_points_in_subformula_tree_of G
  proof
    let x be set;
    assume
    x in { t where t is Element of dom tree_of_subformulae(F) : (
    tree_of_subformulae(F))|t = tree_of_subformulae(G) };
    then
    ex t9 st t9 = x & (tree_of_subformulae(F))|t9 = tree_of_subformulae(G);
    hence thesis by Th61;
  end;
end;

reserve C for Chain of dom tree_of_subformulae(F);

theorem
  for F,G,H,C st G in { (tree_of_subformulae(F)).t where t is Element of
dom tree_of_subformulae(F) : t in C } & H in { (tree_of_subformulae(F)).t where
t is Element of dom tree_of_subformulae(F) : t in C } holds G is_subformula_of
  H or H is_subformula_of G
proof
  let F,G,H,C;
  assume that
A1: G in { (tree_of_subformulae(F)).t where t is Element of dom
  tree_of_subformulae(F) : t in C } and
A2: H in { (tree_of_subformulae(F)).t where t is Element of dom
  tree_of_subformulae(F) : t in C };
  consider t9 such that
A3: G = (tree_of_subformulae(F)).t9 and
A4: t9 in C by A1;
  consider t99 such that
A5: H = (tree_of_subformulae(F)).t99 and
A6: t99 in C by A2;
A7: t9,t99 are_c=-comparable by A4,A6,TREES_2:def 3;
  per cases by A7,XBOOLE_0:def 9;
  suppose
    t9 is_a_prefix_of t99;
    hence thesis by A3,A5,Th42;
  end;
  suppose
    t99 is_a_prefix_of t9;
    hence thesis by A3,A5,Th42;
  end;
end;

definition
  let F be Element of QC-WFF;
  mode Subformula of F -> Element of QC-WFF means
    :Def4:
    it is_subformula_of F;
  existence;
end;

definition
  let F be Element of QC-WFF;
  let G be Subformula of F;
  mode Entry_Point_in_Subformula_Tree of G -> Element of dom
    tree_of_subformulae(F) means
    :Def5:
    (tree_of_subformulae(F)).it = G;
  existence
  proof
    G is_subformula_of F by Def4;
    then G in rng tree_of_subformulae(F) by Th39;
    then ex x being set st x in dom tree_of_subformulae(F) & (
    tree_of_subformulae(F)).x = G by FUNCT_1:def 5;
    hence thesis;
  end;
end;

reserve G for Subformula of F;
reserve t, t9 for Entry_Point_in_Subformula_Tree of G;

canceled;

theorem
  t <> t9 implies not t,t9 are_c=-comparable
proof
  assume
A1: t <> t9;
  (tree_of_subformulae(F)).t = G & (tree_of_subformulae(F)).t9 = G by Def5;
  hence thesis by A1,Th47;
end;

definition
  let F be Element of QC-WFF;
  let G be Subformula of F;
  func entry_points_in_subformula_tree(G) -> non empty AntiChain_of_Prefixes
  of dom tree_of_subformulae(F) equals
  F-entry_points_in_subformula_tree_of G;
  coherence
  proof
    G is_subformula_of F by Def4;
    hence thesis by Th50;
  end;
end;

canceled;

theorem Th67:
  t in entry_points_in_subformula_tree(G)
proof
  (tree_of_subformulae(F)).t = G by Def5;
  hence thesis by Def3;
end;

theorem Th68:
  entry_points_in_subformula_tree(G) = { t where t is
  Entry_Point_in_Subformula_Tree of G : t = t }
proof
  thus entry_points_in_subformula_tree(G) c= { t where t is
  Entry_Point_in_Subformula_Tree of G : t = t }
  proof
    let x be set;
    assume
    x in entry_points_in_subformula_tree(G);
    then x in { t where t is Element of dom tree_of_subformulae(F) : (
    tree_of_subformulae(F)).t = G } by Th49;
    then consider t9 being Element of dom tree_of_subformulae(F) such that
A1: t9 = x and
A2: (tree_of_subformulae(F)).t9 = G;
    reconsider t9 as Entry_Point_in_Subformula_Tree of G by A2,Def5;
    t9 = t9;
    hence thesis by A1;
  end;
  thus { t where t is Entry_Point_in_Subformula_Tree of G : t = t } c=
  entry_points_in_subformula_tree(G)
  proof
    let x be set;
    assume
    x in { t where t is Entry_Point_in_Subformula_Tree of G : t = t };
    then ex t st t = x & t = t;
    hence thesis by Th67;
  end;
end;

reserve G1, G2 for Subformula of F,
  t1 for Entry_Point_in_Subformula_Tree of
  G1,
  s for Element of dom tree_of_subformulae(G1);

theorem Th69:
  s in G1-entry_points_in_subformula_tree_of G2 implies t1^s is
  Entry_Point_in_Subformula_Tree of G2
proof
  (tree_of_subformulae(F)).t1 = G1 by Def5;
  then
A1: t1 in F-entry_points_in_subformula_tree_of G1 by Def3;
  assume
  s in G1-entry_points_in_subformula_tree_of G2;
  then
A2: t1^s in F-entry_points_in_subformula_tree_of G2 by A1,Th57;
  F-entry_points_in_subformula_tree_of G2 c= dom tree_of_subformulae(F) by
  TREES_1:def 14;
  then reconsider t9 = t1^s as Element of dom tree_of_subformulae(F) by A2;
  (tree_of_subformulae(F)).t9 = G2 by A2,Def3;
  hence thesis by Def5;
end;

reserve s for FinSequence;

theorem
  t1^s is Entry_Point_in_Subformula_Tree of G2 implies s in G1
  -entry_points_in_subformula_tree_of G2
proof
  consider t9 being FinSequence such that
A1: t9 = t1^s;
  (tree_of_subformulae(F)).t1 = G1 by Def5;
  then
A2: t1 in F-entry_points_in_subformula_tree_of G1 by Def3;
  assume
  t1^s is Entry_Point_in_Subformula_Tree of G2;
  then
  t9 in { t2 where t2 is Entry_Point_in_Subformula_Tree of G2 : t2 = t2 }
  by A1;
  then t9 in entry_points_in_subformula_tree(G2) by Th68;
  hence thesis by A2,A1,Th58;
end;

theorem Th71:
  for F,G1,G2 holds { t^s where t is
Entry_Point_in_Subformula_Tree of G1, s is Element of dom tree_of_subformulae(
  G1) : s in G1-entry_points_in_subformula_tree_of G2 } = { t^s where t is
Element of dom tree_of_subformulae(F), s is Element of dom tree_of_subformulae(
  G1) : t in F-entry_points_in_subformula_tree_of G1 & s in G1
  -entry_points_in_subformula_tree_of G2 }
proof
  let F,G1,G2;
  thus { t^s where t is Entry_Point_in_Subformula_Tree of G1, s is Element of
  dom tree_of_subformulae(G1) : s in G1-entry_points_in_subformula_tree_of G2 }
c= { t^s where t is Element of dom tree_of_subformulae(F), s is Element of dom
  tree_of_subformulae(G1) : t in F-entry_points_in_subformula_tree_of G1 & s in
  G1-entry_points_in_subformula_tree_of G2 }
  proof
    let x be set;
    assume
    x in { t^s where t is Entry_Point_in_Subformula_Tree of G1, s is
    Element of dom tree_of_subformulae(G1) : s in G1
    -entry_points_in_subformula_tree_of G2 };
    then consider
    t1 being Entry_Point_in_Subformula_Tree of G1, s1 being Element
    of dom tree_of_subformulae(G1) such that
A1: x = t1^s1 & s1 in G1-entry_points_in_subformula_tree_of G2;
    (tree_of_subformulae(F)).t1 = G1 by Def5;
    then t1 in F-entry_points_in_subformula_tree_of G1 by Def3;
    hence thesis by A1;
  end;
  thus { t^s where t is Element of dom tree_of_subformulae(F), s is Element of
dom tree_of_subformulae(G1) : t in F-entry_points_in_subformula_tree_of G1 & s
  in G1-entry_points_in_subformula_tree_of G2 } c= { t^s where t is
Entry_Point_in_Subformula_Tree of G1, s is Element of dom tree_of_subformulae(
  G1) : s in G1-entry_points_in_subformula_tree_of G2 }
  proof
    let x be set;
    assume
    x in { t^s where t is Element of dom tree_of_subformulae(F), s is
    Element of dom tree_of_subformulae(G1) : t in F
    -entry_points_in_subformula_tree_of G1 & s in G1
    -entry_points_in_subformula_tree_of G2 };
    then consider
    t1 being Element of dom tree_of_subformulae(F), s1 being Element
    of dom tree_of_subformulae(G1) such that
A2: x = t1^s1 and
A3: t1 in F-entry_points_in_subformula_tree_of G1 and
A4: s1 in G1-entry_points_in_subformula_tree_of G2;
    (tree_of_subformulae(F)).t1 = G1 by A3,Def3;
    then reconsider t1 as Entry_Point_in_Subformula_Tree of G1 by Def5;
    x = t1^s1 by A2;
    hence thesis by A4;
  end;
end;

theorem
  for F,G1,G2 holds { t^s where t is Entry_Point_in_Subformula_Tree of
  G1, s is Element of dom tree_of_subformulae(G1) : s in G1
-entry_points_in_subformula_tree_of G2 } c= entry_points_in_subformula_tree(G2)
proof
  let F,G1,G2;
  { t^s where t is Entry_Point_in_Subformula_Tree of G1, s is Element of
dom tree_of_subformulae(G1) : s in G1-entry_points_in_subformula_tree_of G2 } =
  { t^s where t is Element of dom tree_of_subformulae(F), s is Element of dom
  tree_of_subformulae(G1) : t in F-entry_points_in_subformula_tree_of G1 & s in
  G1-entry_points_in_subformula_tree_of G2 } by Th71;
  hence thesis by Th59;
end;

reserve G1, G2 for Subformula of F,
  t1 for Entry_Point_in_Subformula_Tree of
  G1,
  t2 for Entry_Point_in_Subformula_Tree of G2;

theorem
  (ex t1,t2 st t1 is_a_prefix_of t2) implies G2 is_subformula_of G1
proof
  given t1,t2 such that
A1: t1 is_a_prefix_of t2;
  (tree_of_subformulae(F)).t1 = G1 & (tree_of_subformulae(F)).t2 = G2 by
  Def5;
  hence thesis by A1,Th42;
end;

theorem
  G2 is_subformula_of G1 implies for t1 ex t2 st t1 is_a_prefix_of t2
proof
  assume
A1: G2 is_subformula_of G1;
  now
    let t1;
    consider H being Element of QC-WFF such that
A2: H = G2;
    reconsider H as Subformula of G1 by A1,A2,Def4;
    consider s being Entry_Point_in_Subformula_Tree of H;
    (tree_of_subformulae(G1)).s = H by Def5;
    then s in G1-entry_points_in_subformula_tree_of G2 by A2,Def3;
    then t1^s is Entry_Point_in_Subformula_Tree of G2 by Th69;
    then consider t2 such that
A3: t2 = t1^s;
    take t2;
    thus t1 is_a_prefix_of t2 by A3,TREES_1:8;
  end;
  hence thesis;
end;

