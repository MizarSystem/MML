:: Series on Complex {B}anach Algebra
::  by Noboru Endou
::
:: Received April 6, 2004
:: Copyright (c) 2004 Association of Mizar Users

environ

 vocabularies NUMBERS, RLVECT_1, ALGSTR_0, XBOOLE_0, CLVECT_1, NAT_1, SUBSET_1,
      FUNCT_1, SUPINF_2, SERIES_1, ARYTM_3, CARD_1, SEQ_2, FUNCOP_1, REAL_1,
      XXREAL_0, NORMSP_1, ARYTM_1, CARD_3, ORDINAL2, LOPBAN_3, RSSPACE3,
      VALUED_0, RELAT_1, XREAL_0, ORDINAL1, COMPLEX1, CFUNCT_1, XXREAL_2,
      CLOPBAN1, SEQ_1, POWER, CLOPBAN2, MESFUNC1, REWRITE1, VECTSP_1, PREPOWER,
      STRUCT_0, COMSEQ_3, PRE_TOPC, VALUED_1;
 notations TARSKI, SUBSET_1, RELAT_1, FUNCT_1, FUNCT_2, PRE_TOPC, DOMAIN_1,
      FUNCOP_1, XXREAL_0, XREAL_0, COMPLEX1, REAL_1, NAT_1, STRUCT_0, ALGSTR_0,
      ORDINAL1, NUMBERS, RLVECT_1, VECTSP_1, NORMSP_1, VALUED_1, SEQ_1,
      VALUED_0, SEQ_2, SERIES_1, PREPOWER, POWER, CFUNCT_1, CLVECT_1, CSSPACE3,
      BHSP_4, CLOPBAN1, CLOPBAN2, LOPBAN_3, RECDEF_1;
 constructors DOMAIN_1, XXREAL_0, REAL_1, NAT_1, COMPLEX1, SEQ_2, PREPOWER,
      SERIES_1, BHSP_3, BHSP_4, LOPBAN_3, CSSPACE3, CLOPBAN2, SEQ_1, VALUED_1,
      PARTFUN1, RECDEF_1, RELSET_1;
 registrations XBOOLE_0, SUBSET_1, ORDINAL1, RELSET_1, NUMBERS, XXREAL_0,
      XREAL_0, MEMBERED, STRUCT_0, CLOPBAN2, ALGSTR_0, VALUED_1, FUNCT_2,
      VALUED_0, FUNCOP_1;
 requirements SUBSET, REAL, BOOLE, NUMERALS, ARITHM;
 definitions SEQ_2, SERIES_1, CLVECT_1, BHSP_3, RLVECT_1, BINOP_1, ALGSTR_0,
      VECTSP_1;
 theorems ABSVALUE, RLVECT_1, VECTSP_1, SEQ_1, SEQ_2, SEQM_3, SERIES_1, NAT_1,
      INT_1, FUNCT_2, SEQ_4, PREPOWER, CLVECT_1, CSSPACE3, LOPBAN_3, CLOPBAN1,
      CFUNCDOM, CLOPBAN2, GROUP_1, FUNCOP_1, XREAL_1, COMPLEX1, XXREAL_0,
      ORDINAL1, BHSP_4, NORMSP_1, ALGSTR_0, VALUED_0;
 schemes NAT_1, FUNCT_2;

begin :: Basic Properties of Sequences of Complex Normed Space

theorem Th1:
  for X be add-associative right_zeroed right_complementable (non
empty CNORMSTR) for seq be sequence of X st (for n be Element of NAT holds seq.
  n = 0.X) holds for m be Element of NAT holds (Partial_Sums seq).m = 0.X
proof
  let X be add-associative right_zeroed right_complementable (non empty
  CNORMSTR);
  let seq be sequence of X such that
A1: for n be Element of NAT holds seq.n = 0.X;
  let m be Element of NAT;
  defpred P[Element of NAT] means seq.$1 = (Partial_Sums seq).$1;
A2: for k be Element of NAT st P[k] holds P[k+1]
  proof
    let k be Element of NAT such that
A3: P[k];
    thus seq.(k+1) = 0.X + seq.(k+1) by RLVECT_1:10
      .= (Partial_Sums seq).k + seq.(k+1) by A1,A3
      .= (Partial_Sums seq).(k+1) by BHSP_4:def 1;
  end;
A4: P[0] by BHSP_4:def 1;
  for n be Element of NAT holds P[n] from NAT_1:sch 1(A4,A2);
  then seq = Partial_Sums seq by FUNCT_2:113;
  hence thesis by A1;
end;

definition
  let X be ComplexNormSpace;
  canceled;
  let seq be sequence of X;
  attr seq is summable means
  :Def2:
  Partial_Sums seq is convergent;
end;

registration
  let X be ComplexNormSpace;
  cluster summable sequence of X;
  existence
  proof
    reconsider C = NAT --> 0.X as sequence of X;
    take C;
    take 0.X;
    let p be Real such that
A1: 0<p;
    take 0;
    let m be Element of NAT such that
    0<=m;
    for n be Element of NAT holds C.n = 0.X by FUNCOP_1:13;
    then ||.Partial_Sums C.m-0.X.|| = ||.0.X-0.X.|| by Th1
      .=0 by CLVECT_1:108;
    hence thesis by A1;
  end;
end;

definition
  let X be ComplexNormSpace;
  let seq be sequence of X;
  func Sum seq -> Element of X equals
  lim Partial_Sums seq;
  correctness;
end;

definition
  let X be ComplexNormSpace;
  let seq be sequence of X;
  attr seq is norm_summable means
  :Def4:
  ||.seq.|| is summable;
end;

theorem Th2:
  for X be ComplexNormSpace, seq be sequence of X, m be Element of
  NAT holds 0 <= ||.seq.||.m
proof
  let X be ComplexNormSpace;
  let seq be sequence of X;
  let m be Element of NAT;
  ||.seq.||.m = ||.seq.m.|| by CLVECT_1:def 17;
  hence thesis by CLVECT_1:106;
end;

theorem Th3:
  for X be ComplexNormSpace, x,y,z be Element of X holds ||.x-y.||
  = ||.(x-z)+(z-y).||
proof
  let X be ComplexNormSpace;
  let x,y,z be Element of X;
  thus ||.x-y.|| = ||.x-0.X-y.|| by RLVECT_1:26
    .= ||.x-(z-z)-y.|| by RLVECT_1:16
    .= ||.(x-z)+z-y.|| by RLVECT_1:43
    .= ||.(x-z)+(z-y).|| by RLVECT_1:def 6;
end;

theorem Th4:
  for X be ComplexNormSpace, seq be sequence of X holds seq is
  convergent implies for s be Real st 0 < s ex n be Element of NAT st for m be
  Element of NAT st n<=m holds ||.seq.m -seq.n.||<s
proof
  let X be ComplexNormSpace;
  let seq be sequence of X;
  assume
  seq is convergent;
  then consider g1 be Element of X such that
A1: for s be Real st 0<s ex n be Element of NAT st for m be Element of
  NAT st n<=m holds ||.seq.m -g1.||<s by CLVECT_1:def 16;
  let s be Real;
  assume
  0 < s;
  then consider n be Element of NAT such that
A2: for m be Element of NAT st n<=m holds ||.seq.m -g1.||<s/2 by A1,
  XREAL_1:217;
  now
    let m be Element of NAT;
    assume
    n<=m;
    then
A3: ||.seq.m -g1.||<s/2 by A2;
A4: ||.seq.m -g1+(g1-seq.n).||<=||.seq.m -g1.||+||.g1-seq.n.|| & ||.seq.m
    -g1+( g1-seq.n).|| = ||.seq.m -seq.n.|| by Th3,CLVECT_1:def 11;
    ||.seq.n -g1.||<s/2 by A2;
    then ||.g1-seq.n.||<s/2 by CLVECT_1:109;
    then ||.seq.m -g1.||+||.g1-seq.n.||<s/2+s/2 by A3,XREAL_1:10;
    hence ||.seq.m -seq.n.|| < s by A4,XXREAL_0:2;
  end;
  hence thesis;
end;

theorem Th5:
  for X be ComplexNormSpace, seq be sequence of X holds seq is
Cauchy_sequence_by_Norm iff for p be Real st p > 0 holds ex n be Element of NAT
  st for m be Element of NAT st n <= m holds ||.seq.m-seq.n.||< p
proof
  let X be ComplexNormSpace;
  let seq be sequence of X;
A1: now
    assume
A2: for p be Real st p > 0 holds ex n be Element of NAT st for m be
    Element of NAT st n <= m holds ||.seq.m-seq.n.||< p;
    now
      let s be Real;
      assume
      0<s;
      then consider k be Element of NAT such that
A3:   for m be Element of NAT st k<=m holds ||.seq.m -seq.k.||<s/2 by
      A2, XREAL_1:217;
      now
        let m,n be Element of NAT such that
A4:     k<=m and
A5:     k<=n;
        ||.seq.n -seq.k.||<s/2 by A3,A5;
        then
A6:     ||.seq.k-seq.n.||<s/2 by CLVECT_1:109;
        ||.seq.m -seq.k.||<s/2 by A3,A4;
        then
A7:     ||.seq.m -seq.k.||+||.seq.k-seq.n.||<s/2+s/2 by
        A6, XREAL_1:
        10;
        ||.seq.m -seq.k+(seq.k-seq.n).|| <=||.seq.m -seq.k.||+||.seq.k-
seq.n.|| & ||.seq.m -seq.k+(seq.k-seq.n).|| =||.seq.m -seq.n.|| by Th3,CLVECT_1
        :def 11;
        hence ||.seq.m -seq.n.|| < s by A7,XXREAL_0:2;
      end;
      hence ex k be Element of NAT st for m,n be Element of NAT st k <= m & k
      <=n holds ||.seq.m-seq.n.||< s;
    end;
    hence seq is Cauchy_sequence_by_Norm by CSSPACE3:10;
  end;
  now
    assume
A8: seq is Cauchy_sequence_by_Norm;
    thus for p be Real st p > 0 holds ex n be Element of NAT st for m be
    Element of NAT st n <= m holds ||.seq.m-seq.n.||< p
    proof
      let p be Real;
      assume
      p >0;
      then consider n be Element of NAT such that
A9:   for m,k be Element of NAT st n <= m & n <=k holds ||.seq.m-seq.k
      .||< p by A8,CSSPACE3:10;
      for m be Element of NAT st n <= m holds ||.seq.m-seq.n.||<p by A9;
      hence thesis;
    end;
  end;
  hence thesis by A1;
end;

theorem Th6:
  for X be ComplexNormSpace, seq be sequence of X st (for n be
  Element of NAT holds seq.n = 0.X) holds for m be Element of NAT holds (
  Partial_Sums ||.seq.||).m = 0
proof
  let X be ComplexNormSpace;
  let seq be sequence of X such that
A1: for n be Element of NAT holds seq.n = 0.X;
  let m be Element of NAT;
  defpred P[Element of NAT] means ||.seq.||.$1 = (Partial_Sums ||.seq.||).$1;
A2: for k be Element of NAT st P[k] holds P[k+1]
  proof
    let k be Element of NAT such that
A3: P[k];
    thus ||.seq.||.(k+1) =0 + ||.seq.||.(k+1)
      .= ||.0.X.|| + ||.seq.||.(k+1) by CLVECT_1:103
      .= ||.seq.k.|| + ||.seq.||.(k+1) by A1
      .= (Partial_Sums ||.seq.||).k + ||.seq.||.(k+1) by A3,CLVECT_1:def 17
      .= (Partial_Sums ||.seq.||).(k+1) by SERIES_1:def 1;
  end;
A4: P[0] by SERIES_1:def 1;
  for n be Element of NAT holds P[n] from NAT_1:sch 1(A4,A2);
  hence (Partial_Sums ||.seq.||).m = ||.seq.||.m
    .= ||.seq.m.|| by CLVECT_1:def 17
    .= ||.0.X.|| by A1
    .= 0 by CLVECT_1:103;
end;

canceled 3;

theorem Th10:
  for X be ComplexNormSpace, seq,seq1 be sequence of X holds seq1
  is subsequence of seq & seq is convergent implies seq1 is convergent
proof
  let X be ComplexNormSpace;
  let seq,seq1 be sequence of X;
  assume that
A1: seq1 is subsequence of seq and
A2: seq is convergent;
  consider g1 be Element of X such that
A3: for p be Real st 0<p ex n be Element of NAT st for m be Element of
  NAT st n<=m holds ||.(seq.m)-g1.||< p by A2,CLVECT_1:def 16;
  take g=g1;
  let p be Real;
  assume
  0<p;
  then consider n1 be Element of NAT such that
A4: for m be Element of NAT st n1<=m holds ||.(seq.m)-g1.||<p by A3;
  take n=n1;
  let m be Element of NAT such that
A5: n<=m;
  consider Nseq be increasing sequence of NAT such that
A6: seq1=seq*Nseq by A1,VALUED_0:def 17;
  m<=Nseq.m by SEQM_3:33;
  then
A7: n<=Nseq.m by A5,XXREAL_0:2;
  seq1.m=seq.(Nseq.m) by A6,FUNCT_2:21;
  hence thesis by A4,A7;
end;

theorem Th11:
  for X be ComplexNormSpace, seq,seq1 be sequence of X holds seq1
  is subsequence of seq & seq is convergent implies lim seq1=lim seq
proof
  let X be ComplexNormSpace;
  let seq,seq1 be sequence of X;
  assume that
A1: seq1 is subsequence of seq and
A2: seq is convergent;
  consider Nseq be increasing sequence of NAT such that
A3: seq1=seq*Nseq by A1,VALUED_0:def 17;
A4: now
    let p be Real;
    assume
    0<p;
    then consider n1 be Element of NAT such that
A5: for m be Element of NAT st n1<=m holds ||.(seq.m)-(lim seq).||<p
    by A2,CLVECT_1:def 18;
    take n=n1;
    let m be Element of NAT such that
A6: n<=m;
    m<=Nseq.m by SEQM_3:33;
    then
A7: n<=Nseq.m by A6,XXREAL_0:2;
    seq1.m=seq.(Nseq.m) by A3,FUNCT_2:21;
    hence ||.(seq1.m)-(lim seq).||<p by A5,A7;
  end;
  seq1 is convergent by A1,A2,Th10;
  hence thesis by A4,CLVECT_1:def 18;
end;

:: Norm Space versions of SEQ_4_33 - SEQ_4_39

canceled;

theorem
  for X be ComplexNormSpace, seq,seq1 be sequence of X, k be Element of
NAT holds seq is convergent implies (seq ^\k) is convergent & lim (seq ^\k)=lim
  seq by Th10,Th11;

theorem Th14:
  for X be ComplexNormSpace, seq,seq1 be sequence of X holds seq
  is convergent & (ex k be Element of NAT st seq=seq1 ^\k) implies seq1 is
  convergent
proof
  let X be ComplexNormSpace;
  let seq,seq1 be sequence of X;
  assume that
A1: seq is convergent and
A2: ex k be Element of NAT st seq=seq1 ^\k;
  consider k be Element of NAT such that
A3: seq=seq1 ^\k by A2;
  consider g1 be Element of X such that
A4: for p be Real st 0<p ex n be Element of NAT st for m be Element of
  NAT st n<=m holds ||.seq.m-g1.||<p by A1,CLVECT_1:def 16;
  take g=g1;
  let p be Real;
  assume
  0<p;
  then consider n1 be Element of NAT such that
A5: for m be Element of NAT st n1<=m holds ||.seq.m-g1.||<p by A4;
  take n=n1+k;
  let m be Element of NAT;
  assume
A6: n<=m;
  then consider l be Nat such that
A7: m=n1+k+l by NAT_1:10;
  reconsider l as Element of NAT by ORDINAL1:def 13;
  m-k=n1+l+0 by A7;
  then consider m1 be Element of NAT such that
A8: m1=m-k;
  now
    assume
    not n1<=m1;
    then m1+k<n1+k by XREAL_1:8;
    hence contradiction by A6,A8;
  end;
  then
A9: ||.seq.m1-g1.||<p by A5;
  m1+k=m by A8;
  hence thesis by A3,A9,NAT_1:def 3;
end;

theorem Th15:
  for X be ComplexNormSpace, seq,seq1 be sequence of X holds seq
is convergent & (ex k be Element of NAT st seq=seq1 ^\k) implies lim seq1 =lim
  seq
proof
  let X be ComplexNormSpace;
  let seq,seq1 be sequence of X;
  assume that
A1: seq is convergent and
A2: ex k be Element of NAT st seq=seq1 ^\k;
  consider k be Element of NAT such that
A3: seq=seq1 ^\k by A2;
A4: now
    let p be Real;
    assume
    0<p;
    then consider n1 be Element of NAT such that
A5: for m be Element of NAT st n1<=m holds ||.seq.m-(lim seq).||<p by
    A1,CLVECT_1:def 18;
    take n=n1+k;
    let m be Element of NAT;
    assume
A6: n<=m;
    then consider l be Nat such that
A7: m=n1+k+l by NAT_1:10;
    reconsider l as Element of NAT by ORDINAL1:def 13;
    m-k=n1+l+0 by A7;
    then consider m1 be Element of NAT such that
A8: m1=m-k;
    now
      assume
      not n1<=m1;
      then m1+k<n1+k by XREAL_1:8;
      hence contradiction by A6,A8;
    end;
    then
A9: ||.seq.m1-(lim seq) .||<p by A5;
    m1+k=m by A8;
    hence ||.seq1.m-(lim seq).||<p by A3,A9,NAT_1:def 3;
  end;
  seq1 is convergent by A1,A2,Th14;
  hence thesis by A4,CLVECT_1:def 18;
end;

theorem Th16:
  for X be ComplexNormSpace, seq be sequence of X holds seq is
  constant implies seq is convergent
proof
  let X be ComplexNormSpace;
  let seq be sequence of X;
  assume
  seq is constant;
  then consider r be Element of X such that
A1: for n be Nat holds seq.n=r by VALUED_0:def 18;
  take g=r;
  let p be Real such that
A2: 0<p;
  take n=0;
  let m be Element of NAT such that
  n<=m;
  ||.(seq.m)-g.||=||.r-g.|| by A1
    .=||.0.X.|| by RLVECT_1:28
    .=0 by CLVECT_1:103;
  hence thesis by A2;
end;

theorem Th17:
  for X be ComplexNormSpace, seq be sequence of X st (for n be
  Element of NAT holds seq.n = 0.X) holds seq is norm_summable
proof
  let X be ComplexNormSpace;
  let seq be sequence of X such that
A1: for n be Element of NAT holds seq.n = 0.X;
  take 0;
  let p be real number such that
A2: 0<p;
  take 0;
  let m be Element of NAT such that
  0<=m;
  abs((Partial_Sums ||.seq.||).m-0) = abs(0-0) by A1,Th6
    .= 0 by ABSVALUE:def 1;
  hence thesis by A2;
end;

registration
  let X be ComplexNormSpace;
  cluster norm_summable sequence of X;
  existence
  proof
    reconsider C = NAT --> 0.X as sequence of X;
    take C;
    for n be Element of NAT holds C.n = 0.X by FUNCOP_1:13;
    hence thesis by Th17;
  end;
end;

:: Norm Space versions of SERIES_1_7 - SERIES_1_16

theorem Th18:
  for X be ComplexNormSpace, s be sequence of X holds s is
  summable implies s is convergent & lim s = 0.X
proof
  let X be ComplexNormSpace;
  let s be sequence of X;
  assume
  s is summable;
  then
A1: Partial_Sums(s) is convergent by Def2;
  then
A2: Partial_Sums(s) ^\1 is convergent by Th10;
  lim(Partial_Sums(s) ^\1) = lim(Partial_Sums(s)) by A1,Th11;
  then
A3: lim(Partial_Sums(s) ^\1 - Partial_Sums(s)) = lim(Partial_Sums(s)) - lim(
  Partial_Sums(s)) by A1,A2,CLVECT_1:122
    .= 0.X by RLVECT_1:28;
  now
    let n be Element of NAT;
    (Partial_Sums(s)).(n+1) = (Partial_Sums(s)).n + s.(n+1) by BHSP_4:def
    1;
    then (Partial_Sums(s)).(n+1) = (Partial_Sums(s)).n + (s ^\1).n by
    NAT_1:
    def 3;
    then (Partial_Sums(s) ^\1).n = (s ^\1).n+ (Partial_Sums(s)).n by
    NAT_1:
    def 3;
    then (Partial_Sums(s) ^\1).n- (Partial_Sums(s)).n = (s ^\1).n+ ( (
    Partial_Sums(s)).n- (Partial_Sums(s)).n ) by RLVECT_1:def 6;
    then (Partial_Sums(s) ^\1).n- (Partial_Sums(s)).n = (s ^\1).n+ ( 0.X) by
    RLVECT_1:28;
    hence (Partial_Sums(s) ^\1).n- (Partial_Sums(s)).n = (s ^\1).n by
    RLVECT_1:10;
  end;
  then
A4: s ^\1 = Partial_Sums(s) ^\1 - Partial_Sums(s) by NORMSP_1:def 6;
  then s ^\1 is convergent by A1,A2,CLVECT_1:116;
  hence thesis by A3,A4,Th14,Th15;
end;

theorem Th19:
  for X be ComplexNormSpace, s1,s2 be sequence of X holds
  Partial_Sums(s1)+Partial_Sums(s2) = Partial_Sums(s1+s2)
proof
  let X be ComplexNormSpace;
  let s1,s2 be sequence of X;
A1: now
    let n be Element of NAT;
    thus (Partial_Sums(s1) + Partial_Sums(s2)).(n+1) = Partial_Sums(s1).(n+1)
    + Partial_Sums(s2).(n+1) by NORMSP_1:def 5
      .= Partial_Sums(s1).n + s1.(n+1) + Partial_Sums(s2).(n+1) by BHSP_4:
    def 1
      .= Partial_Sums(s1).n+s1.(n+1)+(s2.(n+1) + Partial_Sums(s2).n) by
    BHSP_4:def 1
      .= Partial_Sums(s1).n+s1.(n+1)+s2.(n+1)+Partial_Sums(s2).n by RLVECT_1
    :def 6
      .= Partial_Sums(s1).n+(s1.(n+1)+s2.(n+1)) + Partial_Sums(s2).n by
    RLVECT_1:def 6
      .= Partial_Sums(s1).n+(s1+s2).(n+1)+Partial_Sums(s2).n by NORMSP_1:def
    5
      .= Partial_Sums(s1).n+Partial_Sums(s2).n+(s1+s2).(n+1) by RLVECT_1:def
    6
      .= (Partial_Sums(s1)+Partial_Sums(s2)).n+(s1+s2).(n+1) by NORMSP_1:def
    5;
  end;
  (Partial_Sums(s1) + Partial_Sums(s2)).0 = Partial_Sums(s1).0 +
  Partial_Sums(s2).0 by NORMSP_1:def 5
    .= s1.0 + Partial_Sums(s2).0 by BHSP_4:def 1
    .= s1.0 + s2.0 by BHSP_4:def 1
    .= (s1+s2).0 by NORMSP_1:def 5;
  hence thesis by A1,BHSP_4:def 1;
end;

theorem Th20:
  for X be ComplexNormSpace, s1,s2 be sequence of X holds
  Partial_Sums(s1)-Partial_Sums(s2) = Partial_Sums(s1-s2)
proof
  let X be ComplexNormSpace;
  let s1,s2 be sequence of X;
A1: now
    let n be Element of NAT;
    thus (Partial_Sums(s1) - Partial_Sums(s2)).(n+1) = Partial_Sums(s1).(n+1)
    - Partial_Sums(s2).(n+1) by NORMSP_1:def 6
      .= (Partial_Sums(s1).n + s1.(n+1)) - Partial_Sums(s2).(n+1) by BHSP_4:
    def 1
      .= (Partial_Sums(s1).n+s1.(n+1))-(s2.(n+1) + Partial_Sums(s2).n) by
    BHSP_4:def 1
      .= (Partial_Sums(s1).n+s1.(n+1))-s2.(n+1)-Partial_Sums(s2).n by
    RLVECT_1:41
      .= Partial_Sums(s1).n+(s1.(n+1)-s2.(n+1))-Partial_Sums(s2).n by
    RLVECT_1:def 6
      .= (s1-s2).(n+1)+Partial_Sums(s1).n-Partial_Sums(s2).n by NORMSP_1:def
    6
      .= (s1-s2).(n+1)+(Partial_Sums(s1).n-Partial_Sums(s2).n) by RLVECT_1:
    def 6
      .= (Partial_Sums(s1)-Partial_Sums(s2)).n+(s1-s2).(n+1) by NORMSP_1:def
    6;
  end;
  (Partial_Sums(s1) - Partial_Sums(s2)).0 = Partial_Sums(s1).0 -
  Partial_Sums(s2).0 by NORMSP_1:def 6
    .= s1.0 - Partial_Sums(s2).0 by BHSP_4:def 1
    .= s1.0 - s2.0 by BHSP_4:def 1
    .= (s1-s2).0 by NORMSP_1:def 6;
  hence thesis by A1,BHSP_4:def 1;
end;

registration
  let X be ComplexNormSpace;
  let seq be norm_summable sequence of X;
  cluster ||.seq.|| -> summable;
  coherence by Def4;
end;

registration
  let X be ComplexNormSpace;
  cluster summable -> convergent sequence of X;
  coherence by Th18;
end;

theorem Th21:
  for X be ComplexNormSpace, seq1,seq2 be sequence of X st seq1 is
summable & seq2 is summable holds seq1+seq2 is summable & Sum(seq1+seq2) = Sum(
  seq1)+Sum(seq2)
proof
  let X be ComplexNormSpace;
  let seq1,seq2 be sequence of X;
  assume
  seq1 is summable & seq2 is summable;
  then
A1: Partial_Sums(seq1) is convergent & Partial_Sums(seq2) is convergent by
  Def2;
  then
A2: Partial_Sums(seq1)+Partial_Sums(seq2) is convergent by
  CLVECT_1:115;
A3: Partial_Sums(seq1)+Partial_Sums(seq2) =Partial_Sums(seq1+seq2) by Th19;
  Sum(seq1+seq2)=lim(Partial_Sums(seq1)+Partial_Sums(seq2)) by Th19
    .=lim(Partial_Sums(seq1))+lim(Partial_Sums(seq2)) by A1,CLVECT_1:121;
  hence thesis by A2,A3,Def2;
end;

theorem Th22:
  for X be ComplexNormSpace, seq1,seq2 be sequence of X st seq1 is
summable & seq2 is summable holds seq1-seq2 is summable & Sum(seq1-seq2)= Sum(
  seq1)-Sum(seq2)
proof
  let X be ComplexNormSpace;
  let seq1,seq2 be sequence of X;
  assume
  seq1 is summable & seq2 is summable;
  then
A1: Partial_Sums(seq1) is convergent & Partial_Sums(seq2) is convergent by
  Def2;
  then
A2: Partial_Sums(seq1)-Partial_Sums(seq2) is convergent by
  CLVECT_1:116;
A3: Partial_Sums(seq1)-Partial_Sums(seq2) = Partial_Sums(seq1-seq2) by Th20;
  Sum(seq1-seq2)=lim(Partial_Sums(seq1)-Partial_Sums(seq2)) by Th20
    .=lim(Partial_Sums(seq1))-lim(Partial_Sums(seq2)) by A1,CLVECT_1:122;
  hence thesis by A2,A3,Def2;
end;

registration
  let X be ComplexNormSpace;
  let seq1,seq2 be summable sequence of X;
  cluster seq1 + seq2 -> summable;
  coherence by Th21;
  cluster seq1 - seq2 -> summable;
  coherence by Th22;
end;

theorem Th23:
  for X be ComplexNormSpace, seq be sequence of X, z be Complex
  holds Partial_Sums(z * seq) = z * Partial_Sums(seq)
proof
  let X be ComplexNormSpace;
  let seq be sequence of X;
  let z be Complex;
  defpred P[Element of NAT] means Partial_Sums(z * seq).$1 = (z * Partial_Sums
  (seq)).$1;
A1: now
    let n be Element of NAT;
    assume
A2: P[n];
    Partial_Sums(z * seq).(n+1) =Partial_Sums(z * seq).n + (z * seq).(n+1)
    by BHSP_4:def 1
      .=(z * Partial_Sums(seq).n )+ (z * seq).(n+1) by A2,CLVECT_1:def 15
      .=(z * Partial_Sums(seq).n )+ (z * seq.(n+1)) by CLVECT_1:def 15
      .= z * ( Partial_Sums(seq).n + seq.(n+1)) by CLVECT_1:def 2
      .= z * ( Partial_Sums(seq).(n+1)) by BHSP_4:def 1
      .= (z * Partial_Sums(seq)).(n+1) by CLVECT_1:def 15;
    hence P[n+1];
  end;
  Partial_Sums(z * seq).0 = (z * seq).0 by BHSP_4:def 1
    .=z * seq.0 by CLVECT_1:def 15
    .=z * Partial_Sums(seq).0 by BHSP_4:def 1
    .=(z * Partial_Sums(seq)).0 by CLVECT_1:def 15;
  then
A3: P[0];
  for n be Element of NAT holds P[n] from NAT_1:sch 1(A3,A1);
  hence thesis by FUNCT_2:113;
end;

theorem Th24:
  for X be ComplexNormSpace, seq be summable sequence of X, z be
  Complex holds z *seq is summable & Sum(z *seq)= z * Sum(seq)
proof
  let X be ComplexNormSpace;
  let seq be summable sequence of X;
  let z be Complex;
A1: Partial_Sums(z *seq)=(z *Partial_Sums(seq)) by Th23;
A2: Partial_Sums(seq) is convergent by Def2;
  then
A3: (z *Partial_Sums(seq)) is convergent by CLVECT_1:118;
  Sum(z *seq)=lim((z *Partial_Sums(seq))) by Th23
    .=z * Sum(seq) by A2,CLVECT_1:124;
  hence thesis by A3,A1,Def2;
end;

registration
  let X be ComplexNormSpace;
  let z be Complex, seq be summable sequence of X;
  cluster z *seq -> summable;
  coherence by Th24;
end;

theorem Th25:
  for X be ComplexNormSpace, s,s1 be sequence of X st for n be
Element of NAT holds s1.n=s.0 holds Partial_Sums(s^\1) = (Partial_Sums(s)^\1) -
  s1
proof
  let X be ComplexNormSpace;
  let s,s1 be sequence of X;
  assume
A1: for n be Element of NAT holds s1.n=s.0;
A2: now
    let k be Element of NAT;
    thus ((Partial_Sums(s)^\1) - s1).(k+1) = (Partial_Sums(s)^\1).(k+1) - s1.(
    k+1) by NORMSP_1:def 6
      .= (Partial_Sums(s)^\1).(k+1) - s.0 by A1
      .= Partial_Sums(s).(k+1+1) - s.0 by NAT_1:def 3
      .= s.(k+1+1) + Partial_Sums(s).(k+1) - s.0 by BHSP_4:def 1
      .= s.(k+1+1) + Partial_Sums(s).(k+1) - s1.k by A1
      .= s.(k+1+1) + (Partial_Sums(s).(k+1) - s1.k) by RLVECT_1:def 6
      .= s.(k+1+1) + ((Partial_Sums(s)^\1).k - s1.k) by NAT_1:def 3
      .= s.(k+1+1) + ((Partial_Sums(s)^\1) - s1).k by NORMSP_1:def 6
      .= ((Partial_Sums(s)^\1) - s1).k + (s^\1).(k+1) by NAT_1:def 3;
  end;
  ((Partial_Sums(s)^\1) - s1).0 = (Partial_Sums(s)^\1).0 - s1.0 by
  NORMSP_1:def 6
    .= (Partial_Sums(s)^\1).0 - s.0 by A1
    .= Partial_Sums(s).(0+1) - s.0 by NAT_1:def 3
    .= Partial_Sums(s).0 + s.(0+1) - s.0 by BHSP_4:def 1
    .= s.(0+1) + s.0 - s.0 by BHSP_4:def 1
    .= s.(0+1) + (s.0 - s.0) by RLVECT_1:def 6
    .= s.(0+1) + 0.X by RLVECT_1:28
    .=s.(0+1) by RLVECT_1:10
    .= (s^\1).0 by NAT_1:def 3;
  hence thesis by A2,BHSP_4:def 1;
end;

theorem Th26:
  for X be ComplexNormSpace, s be sequence of X holds s is
  summable implies for n be Element of NAT holds s^\n is summable
proof
  let X be ComplexNormSpace;
  let s be sequence of X;
  defpred X[Element of NAT] means s^\$1 is summable;
A1: for n be Element of NAT st X[n] holds X[n+1]
  proof
    let n be Element of NAT;
    reconsider s1 = NAT --> (s^\n).0 as sequence of X;
    for k be Element of NAT holds s1.k = (s^\n).0 by FUNCOP_1:13;
    then
A2: Partial_Sums(s^\n^\1) = (Partial_Sums(s^\n)^\1) - s1 by Th25;
    assume
    s^\n is summable;
    then Partial_Sums(s^\n) is convergent by Def2;
    then
A3: Partial_Sums(s^\n)^\1 is convergent by Th10;
    s1 is convergent by Th16;
    then s^\(n+1)=(s^\n)^\1 & Partial_Sums(s^\n^\1) is convergent by A3,
    A2,
    CLVECT_1:116,NAT_1:49;
    hence thesis by Def2;
  end;
  assume
  s is summable;
  then
A4: X[0] by NAT_1:48;
  thus for n be Element of NAT holds X[n] from NAT_1:sch 1(A4,A1);
end;

registration
  let X be ComplexNormSpace;
  let seq be summable sequence of X, n be Element of NAT;
  cluster seq^\n -> summable;
  coherence by Th26;
end;

theorem Th27:
  for X be ComplexNormSpace, seq be sequence of X holds
  Partial_Sums ||.seq.|| is bounded_above iff seq is norm_summable
proof
  let X be ComplexNormSpace;
  let seq be sequence of X;
  for n be Element of NAT holds 0 <=||.seq.||.n by Th2;
  then Partial_Sums(||.seq.||) is bounded_above iff ||.seq.|| is summable by
  SERIES_1:20;
  hence thesis by Def4;
end;

registration
  let X be ComplexNormSpace;
  let seq be norm_summable sequence of X;
  cluster Partial_Sums ||.seq.|| -> bounded_above;
  coherence by Th27;
end;

theorem Th28:
  for X be ComplexBanachSpace, seq be sequence of X holds seq is
  summable iff for p be Real st 0 <p holds ex n be Element of NAT st for m be
Element of NAT st n <= m holds ||.Partial_Sums(seq).m-Partial_Sums(seq).n.||<p
proof
  let X be ComplexBanachSpace;
  let seq be sequence of X;
A1: now
    assume
    for p be Real st 0<p holds ex n be Element of NAT st for m be
Element of NAT st n <= m holds ||.Partial_Sums(seq).m-Partial_Sums(seq).n.||< p
    ;
    then Partial_Sums(seq) is Cauchy_sequence_by_Norm by Th5;
    then Partial_Sums(seq) is convergent by CLOPBAN1:def 14;
    hence seq is summable by Def2;
  end;
  now
    assume
    seq is summable;
    then Partial_Sums(seq) is convergent by Def2;
    hence
    for p be Real st 0<p holds ex n be Element of NAT st for m be Element
    of NAT st n <= m holds ||.Partial_Sums(seq).m-Partial_Sums(seq).n.||<p by
    Th4;
  end;
  hence thesis by A1;
end;

theorem Th29:
  for X be ComplexNormSpace, s be sequence of X, n,m be Element of
  NAT st n<=m holds ||.Partial_Sums(s).m - Partial_Sums(s).n.|| <= abs(
  Partial_Sums(||.s.||).m - Partial_Sums(||.s.||).n)
proof
  let X be ComplexNormSpace;
  let s be sequence of X;
  set s1=Partial_Sums(s);
  set s2=Partial_Sums(||.s.||);
  let n,m be Element of NAT;
  assume
  n<=m;
  then reconsider k=m-n as Element of NAT by INT_1:18;
  defpred X[Element of NAT] means ||.s1.(n+$1) - s1.n.|| <= abs(s2.(n+$1) - s2
  .n);
A1: n+k = m;
  now
    let k be Element of NAT;
    ||.s.k.|| >=0 by CLVECT_1:106;
    hence ||.s.||.k >= 0 by CLVECT_1:def 17;
  end;
  then
A2: s2 is non-decreasing by SERIES_1:19;
A3: for k be Element of NAT st X[k] holds X[k+1]
  proof
    let k be Element of NAT;
A4: abs(s2.(n+(k+1)) - s2.n) = abs(s2.(n+k) + ( ||.s.||).(n+k+1) - s2.n)
    by SERIES_1:def 1
      .= abs(s2.(n+k) + ||.s.(n+k+1).||-s2.n) by CLVECT_1:def 17
      .= abs(||.s.(n+k+1).|| + (s2.(n+k) - s2.n));
    ||. s1.(n+(k+1)) - s1.n.|| = ||. s.(n+k+1) + s1.(n+k) - s1.n .|| by
    BHSP_4:def 1
      .= ||. s.(n+k+1) + (s1.(n+k) - s1.n).|| by RLVECT_1:def 6;
    then
A5: ||. s1.(n+(k+1))-s1.n .|| <= ||.s.(n+k+1).||+||.s1.(n+k) - s1.n.|| by
    CLVECT_1:def 11;
    s2.(n+k)>=s2.n by A2,SEQM_3:11;
    then
A6: s2.(n+k) - s2.n >= 0 by XREAL_1:50;
    assume
    ||. s1.(n+k) - s1.n.|| <= abs(s2.(n+k) - s2.n);
    then
    ||.s.(n+k+1).|| + ||. s1.(n+k) - s1.n.|| <= ||.s.(n+k+1).|| + abs(s2.
    (n+k) - s2.n) by XREAL_1:9;
    then ||. s1.(n+(k+1))-s1.n.|| <= ||. s.(n+k+1).||+ abs(s2.(n+k)-s2.n) by
    A5,XXREAL_0:2;
    then
A7: ||. s1.(n+(k+1))-s1.n .|| <= ||. s.(n+k+1).||+(s2.(n+k)-s2.n) by
    A6,ABSVALUE:def 1;
    ||. s .(n+k+1) .|| >= 0 by CLVECT_1:106;
    hence thesis by A6,A7,A4,ABSVALUE:def 1;
  end;
  ||.s1.(n+0) - s1.n.|| = ||.0.X.|| by RLVECT_1:28
    .= 0 by CLVECT_1:103;
  then
A8: X[0] by COMPLEX1:132;
  for k be Element of NAT holds X[k] from NAT_1:sch 1(A8,A3);
  hence thesis by A1;
end;

theorem Th30:
  for X be ComplexBanachSpace, seq be sequence of X holds seq is
  norm_summable implies seq is summable
proof
  let X be ComplexBanachSpace;
  let seq be sequence of X;
  assume
  seq is norm_summable;
  then
A1: Partial_Sums(||.seq.||) is convergent by SERIES_1:def 2;
  now
    let p be Real;
    assume
    0<p;
    then consider n be Element of NAT such that
A2: for m be Element of NAT st n <= m holds abs(Partial_Sums(||.seq.||
    ).m-Partial_Sums(||.seq.||).n)< p by A1,SEQ_4:58;
    take n;
    let m be Element of NAT;
    assume
A3: n <= m;
    then
A4: ||.Partial_Sums(seq).m-Partial_Sums(seq).n.|| <= abs(Partial_Sums(||.
    seq.||).m-Partial_Sums(||.seq.||).n) by Th29;
    abs(Partial_Sums(||.seq.||).m-Partial_Sums(||.seq.||).n)< p by A2,A3;
    hence ||.Partial_Sums(seq).m-Partial_Sums(seq).n.|| <p by A4,XXREAL_0:2;
  end;
  hence thesis by Th28;
end;

theorem
  for X be ComplexNormSpace, rseq1 be Real_Sequence, seq2 be sequence of
X holds rseq1 is summable & (ex m be Element of NAT st for n be Element of NAT
  st m<=n holds ||.seq2.n.|| <= rseq1.n ) implies seq2 is norm_summable
proof
  let X be ComplexNormSpace;
  let rseq1 be Real_Sequence;
  let seq2 be sequence of X;
  assume that
A1: rseq1 is summable and
A2: ex m be Element of NAT st for n be Element of NAT st m<=n holds ||.
  seq2.n.|| <= rseq1.n;
  consider m be Element of NAT such that
A3: for n be Element of NAT st m<=n holds ||.seq2.n.|| <= rseq1.n by A2;
A4: now
    let n be Element of NAT;
    ||.seq2.n.||=||.seq2.||.n by CLVECT_1:def 17;
    hence 0 <= ||.seq2.||.n by CLVECT_1:106;
  end;
  now
    let n be Element of NAT;
    assume
    m <= n;
    then ||.seq2.n.|| <= rseq1.n by A3;
    hence ||.seq2.||.n <= rseq1.n by CLVECT_1:def 17;
  end;
  hence ||.seq2.|| is summable by A1,A4,SERIES_1:22;
end;

theorem
  for X be ComplexNormSpace, seq1,seq2 be sequence of X holds (for n be
  Element of NAT holds 0 <= ||.seq1.||.n & ||.seq1.||.n <= ||.seq2.||.n) & seq2
is norm_summable implies seq1 is norm_summable & Sum ||.seq1.|| <= Sum ||.seq2
  .||
proof
  let X be ComplexNormSpace;
  let seq1,seq2 be sequence of X;
  assume
  ( for n be Element of NAT holds 0 <= ||.seq1.||.n & ||.seq1.||.n <=
  ||. seq2.|| .n)& seq2 is norm_summable;
  hence ||.seq1.|| is summable & Sum(||.seq1.||) <=Sum(||.seq2.||) by
  SERIES_1:24;
end;

theorem
  for X be ComplexNormSpace, seq be sequence of X holds (for n be
  Element of NAT holds ||.seq.||.n>0) & (ex m be Element of NAT st for n be
Element of NAT st n >=m holds ||.seq.||.(n+1)/||.seq.||.n >= 1) implies not seq
  is norm_summable by SERIES_1:31;

theorem
  for X be ComplexNormSpace, seq be sequence of X, rseq1 be
Real_Sequence holds (for n be Element of NAT holds rseq1.n = n-root (||.seq.||.
  n)) & rseq1 is convergent & lim rseq1 < 1 implies seq is norm_summable
proof
  let X be ComplexNormSpace;
  let seq be sequence of X;
  let rseq1 be Real_Sequence;
  assume
A1: ( for n be Element of NAT holds rseq1.n = n-root (||.seq.||.n))&
  rseq1 is convergent & lim rseq1 < 1;
  for n be Element of NAT holds ||.seq.||.n >=0 by Th2;
  hence ||.seq.|| is summable by A1,SERIES_1:32;
end;

theorem
  for X be ComplexNormSpace, seq be sequence of X, rseq1 be
Real_Sequence holds (for n be Element of NAT holds rseq1.n = n-root (||.seq.||.
n)) & (ex m be Element of NAT st for n be Element of NAT st m<=n holds rseq1.n
  >= 1) implies ||.seq.|| is not summable
proof
  let X be ComplexNormSpace;
  let seq be sequence of X;
  let rseq1 be Real_Sequence;
  assume
A1: ( for n be Element of NAT holds rseq1.n = n-root (||.seq.||.n))& ex
  m be Element of NAT st for n be Element of NAT st m<=n holds rseq1.n>= 1;
  for n be Element of NAT holds ||.seq.||.n >=0 by Th2;
  hence thesis by A1,SERIES_1:33;
end;

theorem
  for X be ComplexNormSpace, seq be sequence of X, rseq1 be
Real_Sequence holds (for n be Element of NAT holds rseq1.n = n-root (||.seq.||.
  n)) & rseq1 is convergent & lim rseq1 > 1 implies seq is not norm_summable
proof
  let X be ComplexNormSpace;
  let seq be sequence of X;
  let rseq1 be Real_Sequence;
  assume
A1: ( for n be Element of NAT holds rseq1.n = n-root (||.seq.||.n))&
  rseq1 is convergent & lim rseq1 > 1;
  for n be Element of NAT holds ||.seq.||.n >=0 by Th2;
  hence ||.seq.|| is not summable by A1,SERIES_1:34;
end;

theorem
  for X be ComplexNormSpace, seq be sequence of X, rseq1 be
  Real_Sequence st ||.seq.|| is non-increasing & (for n be Element of NAT holds
  rseq1.n = 2 to_power n *||.seq.||.(2 to_power n)) holds (seq is norm_summable
  iff rseq1 is summable)
proof
  let X be ComplexNormSpace;
  let seq be sequence of X;
  let rseq1 be Real_Sequence;
  assume
  ||.seq.|| is non-increasing & for n be Element of NAT holds rseq1.n
  = 2 to_power n *||.seq.||.(2 to_power n);
  then
  for n be Element of NAT holds ||.seq.|| is non-increasing & ||.seq.||.n
  >= 0 & rseq1.n = 2 to_power n *||.seq.||.(2 to_power n) by Th2;
  then ||.seq.|| is summable iff rseq1 is summable by SERIES_1:35;
  hence thesis by Def4;
end;

theorem
  for X be ComplexNormSpace, seq be sequence of X, p be Real st p>1 & (
for n be Element of NAT st n >=1 holds ||.seq.||.n = 1/ (n to_power p) ) holds
  seq is norm_summable
proof
  let X be ComplexNormSpace;
  let seq be sequence of X;
  let p be Real;
  assume
  p>1 & for n be Element of NAT st n >=1 holds ||. seq .|| .n = 1/n
  to_power p;
  then ||.seq.|| is summable by SERIES_1:36;
  hence thesis by Def4;
end;

theorem
  for X be ComplexNormSpace, seq be sequence of X, p be Real holds p<=1
  & (for n be Element of NAT st n >=1 holds ||.seq.||.n=1/n to_power p) implies
  not seq is norm_summable by SERIES_1:37;

theorem
  for X be ComplexNormSpace, seq be sequence of X, rseq1 be
Real_Sequence holds (for n be Element of NAT holds seq.n<>0.X & rseq1.n=||.seq
  .||.(n+1)/||.seq.||.n) & rseq1 is convergent & lim rseq1 < 1 implies seq is
  norm_summable
proof
  let X be ComplexNormSpace;
  let seq be sequence of X;
  let rseq1 be Real_Sequence;
  assume that
A1: for n be Element of NAT holds seq.n<>0.X & rseq1.n=||.seq.||.(n+1)/
  ||. seq.||.n and
A2: rseq1 is convergent & lim rseq1 < 1;
  now
    let n be Element of NAT;
A3: 0 <=||.seq.||.n by Th2;
A4: 0 <=||.seq.||.(n+1) by Th2;
A5: abs((||.seq.||)).(n+1) =abs((||.seq.||).(n+1)) by SEQ_1:16
      .=||.seq.||.(n+1) by A4,ABSVALUE:def 1;
A6: seq.n<>0.X & ||.seq.||.n =||.seq.n.|| by A1,CLVECT_1:def 17;
    abs((||.seq.||)).n =abs((||.seq.||).n) by SEQ_1:16
      .=||.seq.||.n by A3,ABSVALUE:def 1;
    hence (||.seq.||).n <>0 & rseq1.n=abs((||.seq.||)).(n+1)/abs((||.seq.||)).
    n by A1,A5,A6,CLVECT_1:def 11;
  end;
  then ||.seq.|| is absolutely_summable by A2,SERIES_1:42;
  then
A7: abs(||.seq.||) is summable by SERIES_1:def 5;
  now
    let n be Element of NAT;
A8: 0 <=||.seq.||.n by Th2;
    thus abs((||.seq.||)).n =abs((||.seq.||).n) by SEQ_1:16
      .=||.seq.||.n by A8,ABSVALUE:def 1;
  end;
  then abs((||.seq.||)) =||.seq.|| by FUNCT_2:113;
  hence thesis by A7,Def4;
end;

theorem
  for X be ComplexNormSpace, seq be sequence of X holds (for n be
Element of NAT holds seq.n<>0.X) & (ex m be Element of NAT st for n be Element
  of NAT st n >=m holds ||.seq.||.(n+1)/||.seq.||.n >= 1) implies seq is not
  norm_summable
proof
  let X be ComplexNormSpace;
  let seq be sequence of X;
  assume that
A1: for n be Element of NAT holds seq.n <> 0.X and
A2: ex m be Element of NAT st for n be Element of NAT st n >=m holds ||.
  seq.||.(n+1)/||.seq.||.n >= 1;
  consider m be Element of NAT such that
A3: for n be Element of NAT st n >=m holds ||.seq.||.(n+1)/||.seq.||.n
  >= 1 by A2;
A4: now
    let n be Element of NAT such that
A5: n>=m;
A6: 0 <=||.seq.||.n by Th2;
A7: 0 <=||.seq.||.(n+1) by Th2;
A8: abs((||.seq.||)).(n+1) =abs((||.seq.||).(n+1)) by SEQ_1:16
      .=||.seq.||.(n+1) by A7,ABSVALUE:def 1;
    abs((||.seq.||)).n =abs((||.seq.||).n) by SEQ_1:16
      .=||.seq.||.n by A6,ABSVALUE:def 1;
    hence abs((||.seq.||)).(n+1)/abs((||.seq.||)).n >= 1 by A3,A5,A8;
  end;
  now
    let n be Element of NAT;
    seq.n <> 0.X by A1;
    then ||.seq.n.||<>0 by CLVECT_1:def 11;
    hence ||.seq.||.n <>0 by CLVECT_1:def 17;
  end;
  hence ||.seq.|| is not summable by A4,SERIES_1:44;
end;

registration
  let X be ComplexBanachSpace;
  cluster norm_summable -> summable sequence of X;
  coherence by Th30;
end;

begin :: Basic Properties of Sequence of Complex_Banach_Algebra

theorem Th42:
  for X be Complex_Banach_Algebra holds for x,y,z being Element of
  X, a,b be Complex holds x+y = y+x & (x+y)+z = x+(y+z) & x+(0.X) = x & (ex t
being Element of X st x+t= 0.X) & (x*y)*z = x*(y*z) & 1r*x=x & 0c*x=0.X & a*0.X
=0.X& (-1r)*x=-x & x*(1.X) = x & (1.X)*x = x & x*(y+z) = x*y + x*z & (y+z)*x =
y*x + z*x & a*(x*y) = (a*x)*y & a*(x+y) = a*x + a*y & (a+b)*x = a*x + b*x & (a*
b)*x = a*(b*x) & (a*b)*(x*y)=(a*x)*(b*y) & a*(x*y)=x*(a*y) & 0.X * x = 0.X & x*
0.X =0.X & x*(y-z) = x*y-x*z & (y-z)*x = y*x-z*x & x+y-z = x+(y-z) & x-y+z = x-
(y-z) & x-y-z = x-(y+z) & x+y=(x-z)+(z+y) & x-y=(x-z)+(z-y) & x=(x-y)+y & x=y-(
  y-x) & ( ||.x.|| = 0 iff x = 0.X ) & ||.a * x.|| = |.a.| * ||.x.|| & ||.x + y
.|| <= ||.x.|| + ||.y.|| & ||. x*y .|| <= ||.x.|| * ||.y.|| & ||. 1.X .|| = 1 &
  X is complete
proof
  let X be Complex_Banach_Algebra;
  let x,y,z being Element of X;
  let a,b be Complex;
  thus x+y = y+x;
  thus (x+y)+z = x+(y+z) by RLVECT_1:def 6;
  thus x+(0.X) = x by RLVECT_1:def 7;
  thus ex t being Element of X st x+t=0.X by ALGSTR_0:def 11;
  thus (x*y)*z = x*(y*z) by GROUP_1:def 4;
  thus 1r*x = x by CLVECT_1:def 2;
  thus 0c*x = 0.X by CLVECT_1:2;
  thus a*0.X =0.X by CLVECT_1:2;
  thus (-1r)*x = -x by CLVECT_1:4;
  thus x*(1.X) = x & (1.X)*x= x & x*(y+z) = x*y + x*z & (y+z)*x = y*x + z*x &
a*(x*y) = (a*x)*y & a*(x+y) = a*x + a*y & (a+b)*x = a*x + b*x & (a*b)*x = a*(b*
  x) by CFUNCDOM:def 9,VECTSP_1:def 11,def 12,def 13,def 19;
  thus (a*b)*(x*y) =a*(b*(x*y)) by CFUNCDOM:def 9
    .=a*(x*(b*y) ) by CLOPBAN2:def 11
    .=(a*x)*(b*y) by CFUNCDOM:def 9;
  thus a*(x*y)=x*(a*y) by CLOPBAN2:def 11;
A1: x*(y-z)+x*z =x*((y-z)+z) by VECTSP_1:def 11
    .=x*(y-(z-z)) by RLVECT_1:43
    .=x*(y-0.X) by RLVECT_1:28
    .=x*y by RLVECT_1:26;
  x*0.X =x*(0.X+0.X) by RLVECT_1:def 7
    .=x*0.X + x*0.X by VECTSP_1:def 11;
  then 0.X = x*0.X + x*0.X-x* 0.X by RLVECT_1:28;
  then 0.X = x*0.X + (x*0.X-x* 0.X) by RLVECT_1:def 6;
  then
A2: 0.X = x*0.X + 0.X by RLVECT_1:28;
  0.X*x =(0.X+0.X)*x by RLVECT_1:def 7
    .=0.X*x + 0.X*x by VECTSP_1:def 12;
  then 0.X = 0.X*x + 0.X*x-0.X * x by RLVECT_1:28;
  then 0.X = 0.X*x + (0.X*x-0.X * x) by RLVECT_1:def 6;
  then 0.X = 0.X*x + 0.X by RLVECT_1:28;
  hence 0.X * x = 0.X & x*0.X =0.X by A2,RLVECT_1:def 7;
  thus x*(y-z) =x*(y-z)+0.X by RLVECT_1:10
    .=x*(y-z)+(x*z-x*z) by RLVECT_1:28
    .=x*y-x*z by A1,RLVECT_1:def 6;
A3: (y-z)*x+z*x =((y-z)+z)*x by VECTSP_1:def 12
    .=(y-(z-z))*x by RLVECT_1:43
    .=(y-0.X)*x by RLVECT_1:28
    .=y*x by RLVECT_1:26;
  thus (y-z)*x =(y-z)*x+0.X by RLVECT_1:10
    .=(y-z)*x+(z*x-z*x) by RLVECT_1:28
    .=y*x-z*x by A3,RLVECT_1:def 6;
  thus x+y-z = x+(y-z) by RLVECT_1:def 6;
  thus x-y+z = x-(y-z) by RLVECT_1:43;
  thus x-y-z = x-(y+z) by RLVECT_1:41;
  thus (x-z)+(z+y)=(x-z)+z+y by RLVECT_1:def 6
    .=x-(z-z)+y by RLVECT_1:43
    .=x-0.X + y by RLVECT_1:28
    .=x+y by RLVECT_1:26;
  thus (x-z)+(z-y) =x-z+z-y by RLVECT_1:def 6
    .=x-(z-z)-y by RLVECT_1:43
    .=x-0.X -y by RLVECT_1:28
    .=x-y by RLVECT_1:26;
  thus (x-y)+y=x-(y-y) by RLVECT_1:43
    .=x-0.X by RLVECT_1:28
    .=x by RLVECT_1:26;
  thus y-(y-x)=y-y + x by RLVECT_1:43
    .=0.X + x by RLVECT_1:28
    .=x by RLVECT_1:10;
  thus ( ||.x.|| = 0 iff x = 0.X ) & ||.a * x.|| = |.a.| * ||.x.|| & ||.x + y
.|| <= ||.x.|| + ||.y.|| & ||. x*y .|| <= ||.x.|| * ||.y.|| by CLOPBAN2:def 9,
  CLVECT_1:def 11;
  thus ||. 1.X .|| = 1 by CLOPBAN2:def 10;
  thus thesis;
end;

registration
  cluster -> well-unital Complex_Banach_Algebra;
  coherence
  proof
    let X be Complex_Banach_Algebra;
    let x be Element of X;
    thus thesis by Th42;
  end;
end;

definition
  let X be non empty Normed_Complex_AlgebraStr;
  let S be sequence of X;
  let a be Element of X;
  canceled 3;
  func a * S -> sequence of X means
  for n be Element of NAT holds it.n = a * S
  .n;
  existence
  proof
    deffunc F(Element of NAT) = a * S.$1;
    ex S being sequence of X st for n be Element of NAT holds S.n = F(n)
    from FUNCT_2:sch 4;
    hence thesis;
  end;
  uniqueness
  proof
    let S1,S2 be sequence of X;
    assume that
A1: for n be Element of NAT holds S1.n = a * S.n and
A2: for n be Element of NAT holds S2.n = a * S.n;
    for n be Element of NAT holds S1.n = S2.n
    proof
      let n be Element of NAT;
      S1.n = a * S.n by A1;
      hence thesis by A2;
    end;
    hence thesis by FUNCT_2:113;
  end;
end;

definition
  let X be non empty Normed_Complex_AlgebraStr;
  let S be sequence of X;
  let a be Element of X;
  func S*a -> sequence of X means
  for n be Element of NAT holds it.n = S.n*a;
  existence
  proof
    deffunc F(Element of NAT) = S.$1 *a;
    ex S being sequence of X st for n be Element of NAT holds S.n = F(n)
    from FUNCT_2:sch 4;
    hence thesis;
  end;
  uniqueness
  proof
    let S1, S2 be sequence of X;
    assume that
A1: for n be Element of NAT holds S1.n = S.n *a and
A2: for n be Element of NAT holds S2.n = S.n *a;
    for n be Element of NAT holds S1.n = S2.n
    proof
      let n be Element of NAT;
      S1.n = S.n *a by A1;
      hence thesis by A2;
    end;
    hence thesis by FUNCT_2:113;
  end;
end;

definition
  let X be non empty Normed_Complex_AlgebraStr;
  let seq1,seq2 be sequence of X;
  func seq1 * seq2 -> sequence of X means
  for n be Element of NAT holds it.n =
  seq1.n * seq2.n;
  existence
  proof
    deffunc F(Element of NAT) = seq1.$1 * seq2.$1;
    ex S being sequence of X st for n be Element of NAT holds S.n = F(n)
    from FUNCT_2:sch 4;
    hence thesis;
  end;
  uniqueness
  proof
    let S1, S2 be sequence of X;
    assume that
A1: for n be Element of NAT holds S1.n = seq1.n * seq2.n and
A2: for n be Element of NAT holds S2.n = seq1.n * seq2.n;
    for n be Element of NAT holds S1.n = S2.n
    proof
      let n be Element of NAT;
      S1.n = seq1.n * seq2.n by A1;
      hence thesis by A2;
    end;
    hence thesis by FUNCT_2:113;
  end;
end;

definition
  let X be Complex_Banach_Algebra;
  let z be Element of X;
  canceled;
  func z GeoSeq -> sequence of X means
  :Def12:
  it.0 = 1.X & for n be Element
  of NAT holds it.(n+1) = it.n * z;
  existence
  proof
    deffunc G(set,set)=(the multF of X).[$2,z];
    consider g be Function such that
A1: dom g = NAT & g.0 = 1.X & for n being Nat holds g.(n+1) = G(n,g.n)
    from NAT_1:sch 11;
    defpred P[Element of NAT] means g.$1 in the carrier of X;
A2: for k be Element of NAT st P[k] holds P[k+1]
    proof
      let k be Element of NAT;
      assume
      P[k];
      then reconsider gk=g.k as Element of X;
      g.(k+1)=(the multF of X).[gk,z] by A1;
      hence thesis;
    end;
A3: P[0] by A1;
    for n be Element of NAT holds P[n] from NAT_1:sch 1(A3,A2);
    then for n be set st n in NAT holds g.n in the carrier of X;
    then reconsider g0=g as sequence of X by A1,FUNCT_2:5;
    take g0;
    thus thesis by A1;
  end;
  uniqueness
  proof
    let seq1,seq2 be sequence of X;
    assume that
A4: seq1.0=1.X and
A5: for n be Element of NAT holds seq1.(n+1)=seq1.n * z and
A6: seq2.0=1.X and
A7: for n be Element of NAT holds seq2.(n+1)=seq2.n * z;
    defpred P[Element of NAT] means seq1.$1 = seq2.$1;
A8: for k be Element of NAT st P[k] holds P[k+1]
    proof
      let k be Element of NAT;
      assume
      P[k];
      hence seq1.(k+1) = seq2.k * z by A5
        .= seq2.(k+1) by A7;
    end;
A9: P[0] by A4,A6;
    for n be Element of NAT holds P[n] from NAT_1:sch 1(A9,A8);
    hence seq1 = seq2 by FUNCT_2:113;
  end;
end;

definition
  let X be Complex_Banach_Algebra;
  let z be Element of X, n be Element of NAT;
  func z #N n -> Element of X equals
  z GeoSeq.n;
  correctness;
end;

theorem
  for X be Complex_Banach_Algebra, z be Element of X holds z #N 0 = 1.X
  by Def12;

theorem Th44:
  for X be Complex_Banach_Algebra, z be Element of X holds ||.z.||
  < 1 implies z GeoSeq is summable norm_summable
proof
  let X be Complex_Banach_Algebra;
  let z be Element of X;
A1: 0<= ||.z.|| by CLVECT_1:106;
A2: for n be Element of NAT holds 0 <= ||.z GeoSeq.||.n & ||.z GeoSeq.||.n
  <=(||.z.|| GeoSeq).n
  proof
    defpred P[Element of NAT] means 0 <= ||.z GeoSeq.||.$1 & ||.z GeoSeq.||.$1
    <= ( ||.z.|| GeoSeq ).$1;
A3: ||.(z GeoSeq).||.0 = ||.(z GeoSeq).0 .|| by CLVECT_1:def 17;
A4: for k be Element of NAT st P[k] holds P[k+1]
    proof
      let k be Element of NAT;
A5:   0 <= ||.z.|| by CLVECT_1:106;
      ||.(z GeoSeq.k)*z.|| <= ||.(z GeoSeq.k).||*||.z.|| by CLOPBAN2:def
      9;
      then
A6:   ||. (z GeoSeq.k)*z .|| <= ||. z GeoSeq .||.k * ||.z.|| by
      CLVECT_1:def 17;
      assume
      P[k];
      then ||. z GeoSeq.||.k * ||.z.|| <= (||.z.|| GeoSeq ).k * ||.z.|| by
      A5,XREAL_1:66;
      then
A7:   ||.
 (z GeoSeq.k)*z .|| <= ( ||.z.|| GeoSeq ).k * ||.z.|| by A6,XXREAL_0:2;
      ||.z GeoSeq.||.(k+1) = ||. (z GeoSeq).(k+1) .|| by CLVECT_1:def 17
        .= ||. (z GeoSeq).k * z .|| by Def12;
      hence thesis by A7,CLVECT_1:106,PREPOWER:4;
    end;
    ||.(z GeoSeq).0 .|| = ||.1.X.|| by Def12
      .= 1 by CLOPBAN2:def 10
      .= ( ||.z.|| GeoSeq ).0 by PREPOWER:4;
    then
A8: P[0] by A3,CLVECT_1:106;
    for n be Element of NAT holds P[n] from NAT_1:sch 1(A8,A4);
    hence thesis;
  end;
  assume
  ||.z.|| < 1;
  then abs( ||.z.||) < 1 by A1,ABSVALUE:def 1;
  then ||.z.|| GeoSeq is summable by SERIES_1:28;
  then ||.z GeoSeq.|| is summable by A2,SERIES_1:24;
  then z GeoSeq is norm_summable by Def4;
  hence thesis;
end;

theorem
  for X be Complex_Banach_Algebra, x be Point of X st ||.1.X - x .|| < 1
holds (1.X - x) GeoSeq is summable & (1.X - x) GeoSeq is norm_summable by Th44;

Lm1: for X be ComplexNormSpace, x be Point of X st (for e be Real st e>0 holds
||.x.|| <e) holds x=0.X

proof
  let X be ComplexNormSpace;
  let x be Point of X such that
A1: for e be Real st e > 0 holds ||.x.|| <e;
  now
    assume
    x<>0.X;
    then 0<> ||.x.|| by CLVECT_1:def 11;
    then 0< ||.x.|| by CLVECT_1:106;
    hence contradiction by A1;
  end;
  hence thesis;
end;

Lm2: for X be ComplexNormSpace, x,y be Point of X st (for e be Real st e>0
holds ||.x-y.|| <e) holds x=y

proof
  let X be ComplexNormSpace;
  let x,y be Point of X;
  assume
  for e be Real st e > 0 holds ||.x-y.|| <e;
  then x-y = 0.X by Lm1;
  hence thesis by RLVECT_1:35;
end;

Lm3: for X be ComplexNormSpace, x,y be Point of X, seq be Real_Sequence st (
seq is convergent & lim seq=0 & for n be Element of NAT holds ||.x-y.|| <= seq.
n) holds x=y

proof
  let X be ComplexNormSpace;
  let x,y be Point of X;
  let seq be Real_Sequence such that
A1: seq is convergent & lim seq=0 and
A2: for n be Element of NAT holds ||.x-y.|| <= seq.n;
  now
    let e be Real;
    assume
    0 < e;
    then consider n be Element of NAT such that

A3: for m be Element of NAT st n<=m holds abs(seq.m - 0) < e by A1,
    SEQ_2:def 7;

A4: seq.n <=abs( seq.n ) by ABSVALUE:11;
A5: ||.x-y.|| <= seq.n by A2;
    abs(seq.n -0 ) < e by A3;
    then seq.n < e by A4,XXREAL_0:2;
    hence ||.x-y.|| < e by A5,XXREAL_0:2;
  end;
  hence thesis by Lm2;
end;

theorem
  for X be Complex_Banach_Algebra, x be Point of X st ||.1.X - x .|| < 1
  holds x is invertible & x" = Sum ((1.X - x) GeoSeq )
proof
  let X be Complex_Banach_Algebra;
  let x be Point of X such that
A1: ||.1.X - x .|| < 1;
  set seq = (1.X - x)GeoSeq;
A2: seq is summable by A1,Th44;
  then
A3: ||. seq^\1 .|| is convergent by CLOPBAN1:45;
  reconsider y=Sum(seq) as Element of X;
A4: Partial_Sums(seq) is convergent by A2,Def2;
  then lim ||. Partial_Sums(seq)-y.|| =0 by CLVECT_1:120;
  then
A5: lim ( ||. x .|| (#) ||. Partial_Sums(seq)-y.|| ) = ||. x .|| *0 by A4,
  CLVECT_1:120,SEQ_2:22
    .=0;
  lim (seq^\1)=0.X by A2,Th18;
  then
A6: lim (||. seq^\1 .||)= ||. 0.X.|| by A2,CLOPBAN1:45;
A7: ||. x .|| (#) ||. Partial_Sums(seq)-y.|| is convergent by A4, CLVECT_1
  :120,SEQ_2:21;
  then
A8: ||. seq^\1 .|| + ||. x .|| (#) ||. Partial_Sums(seq)-y.|| is convergent
  by A3,SEQ_2:19;
A9: lim( ||. seq^\1 .|| + ||. x .|| (#) ||. Partial_Sums(seq)-y.||) = lim(
  ||. seq^\1 .||) + lim (||. x .||(#)||. Partial_Sums(seq)-y.||) by A7,A3,SEQ_2
  :20
    .=0 by A5,A6,CLVECT_1:103;
A10: for n be Element of NAT holds (1.X -x)*seq.n=seq.(n+1)
  proof
    defpred P[Element of NAT] means (1.X -x)*seq.$1=seq.($1+1);
A11: (1.X -x)*seq.0 =(1.X -x)*1.X by Def12
      .=(1.X -x) by Th42;
A12: for k be Element of NAT st P[k] holds P[k+1]
    proof
      let k be Element of NAT such that
A13:  P[k];
      thus (1.X -x)*seq.(k+1) = (1.X -x)*(seq.(k)*(1.X -x)) by Def12
        .=(1.X -x)*seq.(k)*(1.X -x) by Th42
        .=seq.((k+1)+1) by A13,Def12;
    end;
    seq.(0+1) =seq.0 * (1.X -x) by Def12
      .=1.X * (1.X -x) by Def12
      .=(1.X -x) by Th42;
    then
A14: P[0] by A11;
    for n be Element of NAT holds P[n] from NAT_1:sch 1(A14,A12);
    hence thesis;
  end;
A15: for n be Element of NAT holds (1.X -x)* (Partial_Sums(seq).n)=(
  Partial_Sums(seq)^\1).n-seq.0
  proof
    defpred P[Element of NAT] means (1.X -x)* (Partial_Sums(seq).$1)=(
    Partial_Sums(seq)^\1).$1-seq.0;
A16: (1.X -x)*(Partial_Sums(seq).0) =(1.X -x)*(seq.0) by BHSP_4:def 1
      .=(1.X -x)*1.X by Def12
      .=1.X -x by Th42;
A17: for k be Element of NAT st P[k] holds P[k+1]
    proof
      let k be Element of NAT;
      assume
A18:  P[k];
A19:  (Partial_Sums(seq)^\1).(k+1)-seq.0 =(Partial_Sums(seq)).((k+1)+1)-
      seq.0 by NAT_1:def 3
        .=(Partial_Sums(seq)).(k+1)+seq.((k+1)+1)-seq.0 by BHSP_4:def 1
        .=(Partial_Sums(seq)^\1).(k)+seq.((k+1)+1)+(-seq.0) by NAT_1:def 3
        .=(Partial_Sums(seq)^\1).(k)-seq.0 +seq.((k+1)+1) by RLVECT_1:def 6;
      (1.X -x)*(Partial_Sums(seq).(k+1)) = (1.X -x)*( Partial_Sums(seq).k
      +seq.(k+1) ) by BHSP_4:def 1
        .=(1.X -x)*(Partial_Sums(seq).k)+(1.X -x)*seq.(k+1) by Th42
        .=(Partial_Sums(seq)^\1).k-seq.0+seq.((k+1)+1) by A10,A18;
      hence thesis by A19;
    end;
    (Partial_Sums(seq)^\1).0-seq.0 =(Partial_Sums(seq)).(0+1)-seq.0 by
    NAT_1:def 3
      .=(Partial_Sums(seq)).(0)+seq.1-seq.0 by BHSP_4:def 1
      .=seq.0 + seq.1-seq.0 by BHSP_4:def 1
      .=seq.1 +(seq.0-seq.0) by Th42
      .=seq.1 + 0.X by RLVECT_1:28
      .=seq.(0+1) by RLVECT_1:10
      .=seq.0*(1.X -x) by Def12
      .=1.X * (1.X -x) by Def12
      .=1.X -x by Th42;
    then
A20: P[0] by A16;
    for n be Element of NAT holds P[n] from NAT_1:sch 1(A20,A17);
    hence thesis;
  end;
  now
    let n be Element of NAT;
    reconsider yn=Partial_Sums(seq).n as Element of X;
    (Partial_Sums(seq)).(n+1) = (Partial_Sums(seq)).n + seq.(n+1) by
    BHSP_4:def 1;
    then
A21: (Partial_Sums(seq)).(n+1) = (Partial_Sums(seq)).n + (seq ^\1).n by
    NAT_1:def 3;
    (1.X - (1.X-x))*yn = 1.X*yn - (1.X -x)*yn by Th42
      .= yn - (1.X -x)*yn by Th42
      .=Partial_Sums(seq).n-((Partial_Sums(seq)^\1).n-seq.0) by A15
      .=Partial_Sums(seq).n-(Partial_Sums(seq)^\1).n +seq.0 by Th42;
    then (1.X - (1.X-x))*yn =Partial_Sums(seq).n - ((Partial_Sums(seq)).n + (
    seq ^\1).n)+seq.0 by A21,NAT_1:def 3
      .=Partial_Sums(seq).n-(Partial_Sums(seq)).n - (seq ^\1).n+seq.0 by
    Th42
      .=0.X - (seq ^\1).n +seq.0 by RLVECT_1:28
      .=0.X-((seq ^\1).n-seq.0) by RLVECT_1:43
      .=-((seq ^\1).n-seq.0) by RLVECT_1:27
      .= (seq.0- (seq ^\1).n) by RLVECT_1:47
      .=seq.0-seq.(n+1) by NAT_1:def 3
      .=1.X - seq.(n+1) by Def12;
    then
A22: (1.X-x*yn) =1.X -(1.X - seq.(n+1) ) by Th42
      .=seq.(n+1) by Th42
      .=(seq^\1).n by NAT_1:def 3;
    ||. x*(yn-y) .|| <= ||. x .||*||. (yn-y).|| by Th42;
    then
A23: ||. (seq^\1).||.n + ||. x*(yn-y) .|| <= ||. (seq^\1).||.n + ||. x .||
    * ||. (yn-y).|| by XREAL_1:9;
    ||. (seq^\1).n+x*(yn-y) .|| <= ||. (seq^\1).n .|| + ||. x*(yn-y) .||
& ||. ( seq^\1).n .|| + ||. x*(yn-y) .|| = ||. (seq^\1).||.n + ||. x*(yn-y) .||
    by CLVECT_1:def 11,def 17;
    then
A24: ||. (seq^\1).n+x*(yn-y) .|| <= ||. (seq^\1).||.n + ||. x .|| * ||. (
    yn-y).|| by A23,XXREAL_0:2;
    1.X -x*y =1.X - 0.X -x*y by RLVECT_1:26
      .=1.X - (x*yn-x*yn) -x*y by RLVECT_1:28
      .=1.X-x*yn+x*yn-x*y by RLVECT_1:43
      .=(1.X-x*yn)+(x*yn-x*y) by RLVECT_1:def 6
      .=(1.X-x*yn)+x*(yn-y) by Th42;
    then
    ||. 1.X -x*y.|| <= ||. (seq^\1).||.n + ||. x .|| * ||. (Partial_Sums(
    seq)-y).n.|| by A22,A24,NORMSP_1:def 7;
    then ||. 1.X -x*y.|| <= ||. (seq^\1).||.n + ||. x .|| * ||. Partial_Sums(
    seq)-y.||.n by CLVECT_1:def 17;
    then ||. 1.X -x*y.|| <= ||. (seq^\1).||.n + ( ||. x .|| (#) ||.
    Partial_Sums(seq)-y.||).n by SEQ_1:13;
    hence
    ||. 1.X -x*y.|| <=( ||. (seq^\1).|| + ||. x .|| (#) ||. Partial_Sums(
    seq)-y.||).n by SEQ_1:11;
  end;
  then
A25: 1.X = x*y by A8,A9,Lm3;
A26: for n be Element of NAT holds (Partial_Sums(seq).n)*(1.X -x)=(
  Partial_Sums(seq)^\1).n-seq.0
  proof
    defpred P[Element of NAT] means (Partial_Sums(seq).$1)*(1.X -x)=(
    Partial_Sums(seq)^\1).$1-seq.0;
A27: (Partial_Sums(seq).0)*(1.X -x) =(seq.0)*(1.X -x) by BHSP_4:def 1
      .=1.X *(1.X -x) by Def12
      .=1.X -x by Th42;
A28: for k be Element of NAT st P[k] holds P[k+1]
    proof
      let k be Element of NAT;
      assume
A29:  P[k];
A30:  (Partial_Sums(seq)^\1).(k+1)-seq.0 =(Partial_Sums(seq)).((k+1)+1)-
      seq.0 by NAT_1:def 3
        .=(Partial_Sums(seq)).(k+1)+seq.((k+1)+1)-seq.0 by BHSP_4:def 1
        .=(Partial_Sums(seq)^\1).(k)+seq.((k+1)+1)+(-seq.0) by NAT_1:def 3
        .=(Partial_Sums(seq)^\1).(k)-seq.0 +seq.((k+1)+1) by RLVECT_1:def 6;
      (Partial_Sums(seq).(k+1))*(1.X -x) = ( Partial_Sums(seq).k+seq.(k+1)
      )*(1.X -x) by BHSP_4:def 1
        .=(Partial_Sums(seq).k)*(1.X -x)+seq.(k+1)*(1.X -x) by Th42
        .=(Partial_Sums(seq)^\1).k-seq.0+seq.((k+1)+1) by A29,Def12;
      hence thesis by A30;
    end;
    (Partial_Sums(seq)^\1).0-seq.0 =(Partial_Sums(seq)).(0+1)-seq.0 by
    NAT_1:def 3
      .=(Partial_Sums(seq)).(0)+seq.1-seq.0 by BHSP_4:def 1
      .=seq.0 + seq.1-seq.0 by BHSP_4:def 1
      .=seq.1 +(seq.0-seq.0) by Th42
      .=seq.1 + 0.X by RLVECT_1:28
      .=seq.(0+1) by RLVECT_1:10
      .=seq.0*(1.X -x) by Def12
      .=1.X * (1.X -x) by Def12
      .=1.X -x by Th42;
    then
A31: P[0] by A27;
    for n be Element of NAT holds P[n] from NAT_1:sch 1(A31,A28);
    hence thesis;
  end;
  now
    let n be Element of NAT;
    reconsider yn=Partial_Sums(seq).n as Element of X;
    (Partial_Sums(seq)).(n+1) = (Partial_Sums(seq)).n + seq.(n+1) by
    BHSP_4:def 1;
    then
A32: (Partial_Sums(seq)).(n+1) = (Partial_Sums(seq)).n + (seq ^\1).n by
    NAT_1:def 3;
    yn*(1.X - (1.X-x)) = yn*1.X - yn*(1.X -x) by Th42
      .= yn - yn*(1.X -x) by Th42
      .=Partial_Sums(seq).n-((Partial_Sums(seq)^\1).n-seq.0) by A26
      .=Partial_Sums(seq).n-(Partial_Sums(seq)^\1).n +seq.0 by Th42;
    then yn*(1.X - (1.X-x)) =Partial_Sums(seq).n -( (Partial_Sums(seq)).n + (
    seq ^\1).n)+seq.0 by A32,NAT_1:def 3
      .=Partial_Sums(seq).n-(Partial_Sums(seq)).n - (seq ^\1).n +seq.0 by
    Th42
      .=0.X - (seq ^\1).n +seq.0 by RLVECT_1:28
      .=0.X-((seq ^\1).n-seq.0) by RLVECT_1:43
      .=-((seq ^\1).n-seq.0) by RLVECT_1:27
      .= (seq.0- (seq ^\1).n) by RLVECT_1:47
      .=seq.0-seq.(n+1) by NAT_1:def 3
      .=1.X - seq.(n+1) by Def12;
    then
A33: (1.X-yn*x) =1.X -(1.X - seq.(n+1) ) by Th42
      .=seq.(n+1) by Th42
      .=(seq^\1).n by NAT_1:def 3;
    ||. (yn-y)*x .|| <= ||. (yn-y).|| * ||. x .|| by Th42;
    then
A34: ||. (seq^\1).||.n + ||. (yn-y)*x .|| <= ||. (seq^\1).||.n + ||. (yn-y
    ).|| * ||. x .|| by XREAL_1:9;
    ||. (seq^\1).n+(yn-y)*x .|| <= ||. (seq^\1).n .|| + ||. (yn-y)*x .||
& ||. ( seq^\1).n .|| + ||. (yn-y)*x .|| = ||. (seq^\1).||.n + ||. (yn-y)*x .||
    by CLVECT_1:def 11,def 17;
    then
A35: ||. (seq^\1).n+(yn-y)*x .|| <= ||. (seq^\1).||.n + ||. (yn-y).|| *
    ||. x .|| by A34,XXREAL_0:2;
    1.X -y*x =1.X - 0.X -y*x by RLVECT_1:26
      .=1.X - (yn*x-yn*x) -y*x by RLVECT_1:28
      .=1.X-yn*x+yn*x-y*x by RLVECT_1:43
      .=(1.X-yn*x)+(yn*x-y*x) by RLVECT_1:def 6
      .=(1.X-yn*x)+(yn-y)*x by Th42;
    then ||. 1.X -y*x.|| <= ||.(seq^\1).||.n + ||.(Partial_Sums(seq)-y).n.||*
    ||.x.|| by A33,A35,NORMSP_1:def 7;
    then ||. 1.X -y*x.|| <= ||. (seq^\1).||.n + ||.Partial_Sums(seq)-y.||.n *
    ||.x.|| by CLVECT_1:def 17;
    then ||. 1.X -y*x.|| <= ||. (seq^\1).||.n + (||.x.|| (#) ||.Partial_Sums(
    seq)-y.||).n by SEQ_1:13;
    hence
    ||. 1.X -y*x.|| <=( ||. (seq^\1).|| + ||.x.|| (#) ||.Partial_Sums(seq
    )-y.||).n by SEQ_1:11;
  end;
  then
A36: 1.X = y*x by A8,A9,Lm3;
  hence x is invertible by A25,LOPBAN_3:def 8;
  hence thesis by A36,A25,LOPBAN_3:def 12;
end;

