:: Magnitude Relation Properties of Radix-$2^k$ SD Number
::  by Masaaki Niimura and Yasushi Fuwa
::
:: Received November 7, 2003
:: Copyright (c) 2003 Association of Mizar Users

environ

 vocabulary ARYTM_1, NAT_1, INT_1, RADIX_1, FINSEQ_1, POWER, MIDSP_3, FINSEQ_4,
      GROUP_1, RELAT_1, RLVECT_1, FUNCT_1, RADIX_5;
 notation TARSKI, SUBSET_1, XCMPLX_0, XREAL_0, NAT_1, BINARITH, RADIX_1, POWER,
      MIDSP_3, FINSEQ_4, FINSEQ_1, FUNCT_1, WSIERP_1;
 constructors RADIX_1, BINARITH, POWER, FINSEQ_4, EULER_2;
 clusters REAL_1, NUMBERS, XREAL_0, INT_1, RELSET_1;
 requirements REAL, NUMERALS, SUBSET, BOOLE, ARITHM;
 definitions TARSKI;
 theorems RADIX_1, RADIX_4, AXIOMS, REAL_1, REAL_2, INT_1, NAT_1, XCMPLX_1,
      SCMFSA_7, FINSEQ_1, JORDAN3, POWER, GOBOARD9, FINSEQ_2, NEWTON, RADIX_2,
      NAT_2, PREPOWER, GR_CY_1, GROUP_4, BINARITH, PEPIN, JORDAN4, JORDAN5B,
      FUNCT_1, FINSEQ_4, RVSUM_1, XCMPLX_0;
 schemes BINOM, FINSEQ_2, INT_2;

begin :: Some Useful Theorems

theorem Th1:
  for k be Nat st k >= 2 holds Radix(k) - 1 in k-SD
proof
  let k be Nat;
  assume
A1: k >= 2;
A2: k-SD = {w where w is Element of INT:w <= Radix(k)-1 & w >= -Radix(k)+1}
                                                           by RADIX_1:def 2;
      Radix(k) > 2 by A1,RADIX_4:1;
    then Radix(k) > 1 by AXIOMS:22;
    then Radix(k) + Radix(k) > 1 + 1 by REAL_1:67;
    then A3: Radix(k) - 1 > 0 + 1 - Radix(k) by REAL_2:169;
      Radix(k) - 1 is Element of INT by INT_1:def 2;
    hence thesis by A2,A3;
end;

theorem Th2:
  for i,n be Nat st i > 1 & i in Seg n holds
    i -' 1 in Seg n
proof
    let i,n be Nat;
    assume
A1:   i > 1 & i in Seg n;
    then i - 1 > 1 - 1 by REAL_1:54;
    then i -' 1 > 0 by A1,SCMFSA_7:3;
then A2: i -' 1 >= 0 + 1 by NAT_1:38;
      i >= 1 & i <= n by A1,FINSEQ_1:3;
    then i -' 1 <= n by JORDAN3:7;
    hence thesis by A2,FINSEQ_1:3;
end;

reserve k for Nat;

theorem Th3:
  for k be Nat st 2 <= k holds 4 <= Radix(k)
proof
  defpred P[Nat] means 4 <= Radix($1);
        Radix(2) = 2 to_power (1+1)  by RADIX_1:def 1
              .= 2 to_power 1 * 2 to_power 1 by POWER:32
              .= 2 * (2 to_power 1) by POWER:30
              .= 2 * 2 by POWER:30;
      then A1:     P[2];
A2:  for kk be Nat st kk >= 2 & P[kk] holds P[kk + 1]
      proof
        let kk be Nat;
        assume
A3:       2 <= kk & 4 <= Radix(kk);
A4:     Radix(kk + 1) = 2 to_power (kk + 1) by RADIX_1:def 1
                 .= 2 to_power (1) * 2 to_power (kk) by POWER:32
                 .= 2 * 2 to_power (kk) by POWER:30
                 .= 2 * Radix(kk) by RADIX_1:def 1;
          Radix(kk) >= 0 by A3,AXIOMS:22;
        then Radix(kk + 1) >= Radix(kk) by A4,REAL_2:146;
        hence thesis by A3,AXIOMS:22;
      end;
        for i being Nat st 2 <= i holds P[i] from BINOM:sch 1(A1,A2);
      hence thesis;
end;

theorem Th4:
  for k be Nat, tx be Tuple of 1,k-SD holds
    SDDec(tx) = DigA(tx,1)
proof
  let k be Nat, tx be Tuple of 1,k-SD;
A1: 1 in Seg 1 by FINSEQ_1:3;
then A2: (DigitSD(tx))/.1 = SubDigit(tx,1,k) by RADIX_1:def 6
      .= ( Radix(k) |^ (1-'1) )*DigB(tx,1) by RADIX_1:def 5
      .= (Radix(k) |^ (1-'1))*DigA(tx,1) by RADIX_1:def 4
      .= (Radix(k) |^ 0)*DigA(tx,1) by GOBOARD9:1
      .= 1 * DigA(tx,1) by NEWTON:9;
A3: len DigitSD(tx) = 1 by FINSEQ_2:109;
    then 1 in dom DigitSD(tx) by A1,FINSEQ_1:def 3;
then A4: DigitSD(tx).1 = DigA(tx,1) by A2,FINSEQ_4:def 4;
    reconsider w = DigA(tx,1) as Element of INT by INT_1:def 2;
      SDDec(tx) = Sum DigitSD(tx) by RADIX_1:def 7
      .= Sum <*w*> by A3,A4,FINSEQ_1:57
      .= DigA(tx,1) by RVSUM_1:103;
    hence thesis;
end;

begin :: Properties of Primary Radix-$2^k$ SD Number

theorem Th5:
  for i,k,n be Nat st i in Seg n holds
    DigA(DecSD(0,n,k),i) = 0
proof
  let i,k,n be Nat;
  assume
A1:   i in Seg n;
A2: Radix(k) > 0 by RADIX_2:6;
A3: i >= 1 by A1,FINSEQ_1:3;
      DigA(DecSD(0,n,k),i)
      = DigitDC(0,i,k) by A1,RADIX_1:def 9
     .= (0 mod (Radix(k) |^ i)) div (Radix(k) |^ (i-'1)) by RADIX_1:def 8
     .= (0 div (Radix(k) |^ (i-'1))) mod Radix(k) by A2,A3,RADIX_2:4
     .= 0 mod Radix(k) by NAT_2:4;
    hence thesis by GR_CY_1:6;
end;

theorem
    for n,k be Nat st n >= 1 holds
    SDDec(DecSD(0,n,k)) = 0
proof
  let n,k be Nat;
  assume
A1:   n >= 1;
      Radix(k) > 0 by RADIX_2:6;
    then Radix(k) >= 0 + 1 by INT_1:20;
    then Radix(k) |^ n >= 1 by PREPOWER:19;
    then Radix(k) |^ n > 0 by AXIOMS:22;
    then 0 is_represented_by n,k by RADIX_1:def 12;
    hence thesis by A1,RADIX_1:25;
end;

theorem Th7:
  for k,n be Nat st 1 in Seg n & k >= 2 holds
    DigA(DecSD(1,n,k),1) = 1
proof
  let k,n be Nat;
  assume
A1:   1 in Seg n & k >= 2;
    then A2: Radix(k) > 2 by RADIX_4:1;
then A3: Radix(k) > 1 by AXIOMS:22;
A4: Radix(k) > 0 by A2,AXIOMS:22;
      DigA(DecSD(1,n,k),1)
      = DigitDC(1,1,k) by A1,RADIX_1:def 9
     .= (1 mod (Radix(k) |^ 1)) div (Radix(k) |^ (1-'1)) by RADIX_1:def 8
     .= (1 div (Radix(k) |^ (1-'1))) mod Radix(k) by A4,RADIX_2:4
     .= (1 div (Radix(k) |^ 0)) mod Radix(k) by NAT_2:10
     .= (1 div 1) mod Radix(k) by NEWTON:9
     .= 1 mod Radix(k) by NAT_2:6;
    hence thesis by A3,GROUP_4:102;
end;

theorem Th8:
  for i,k,n be Nat st i in Seg n & i > 1 & k >= 2 holds
    DigA(DecSD(1,n,k),i) = 0
proof
  let i,k,n be Nat;
  assume
A1:   i in Seg n & i > 1 & k >= 2;
    then A2: Radix(k) > 2 by RADIX_4:1;
then A3: Radix(k) > 1 by AXIOMS:22;
A4: Radix(k) > 0 by A2,AXIOMS:22;
A5: DigA(DecSD(1,n,k),i)
      = DigitDC(1,i,k) by A1,RADIX_1:def 9
     .=(1 mod (Radix(k) |^ i)) div (Radix(k) |^ (i-'1)) by RADIX_1:def 8
     .=(1 div (Radix(k) |^ (i-'1))) mod Radix(k) by A1,A4,RADIX_2:4;
      i-1 > 1 - 1 by A1,REAL_1:92;
    then i-'1 > 0 by BINARITH:def 3;
   then (Radix(k) |^ (i-'1)) > 1 by A3,PEPIN:26;
    then 1 div (Radix(k) |^ (i-'1)) = 0 by JORDAN4:5;
   hence thesis by A5,GR_CY_1:6;
end;

theorem
    for n,k be Nat st n >= 1 & k >= 2 holds
    SDDec(DecSD(1,n,k)) = 1
proof
  let n,k be Nat;
  assume
A1:   n >= 1 & k >= 2;
then A2:   Radix(k) > 2 by RADIX_4:1;
        Radix(k) > 0 by RADIX_2:6;
      then Radix(k) >= 0 + 1 by INT_1:20;
      then Radix(k) |^ n >= Radix(k) by A1,PREPOWER:20;
      then Radix(k) |^ n >= 2 by A2,AXIOMS:22;
      then Radix(k) |^ n > 1 by AXIOMS:22;
      then 1 is_represented_by n,k by RADIX_1:def 12;
      hence thesis by A1,RADIX_1:25;
end;

theorem Th10:
  for k be Nat st k >= 2 holds SD_Add_Carry(Radix(k)) = 1
proof
  let k be Nat;
  assume k >= 2;
  then Radix(k) > 2 by RADIX_4:1;
  hence thesis by RADIX_1:def 10;
end;

theorem Th11:
  for k be Nat st k >= 2 holds SD_Add_Data(Radix(k),k) = 0
proof
  let k be Nat;
  assume k >= 2;
then A1: SD_Add_Carry(Radix(k)) = 1 by Th10;
      SD_Add_Data(Radix(k),k)
      = Radix(k) - SD_Add_Carry(Radix(k)) * Radix(k) by RADIX_1:def 11
     .= Radix(k) - Radix(k) by A1;
    hence thesis;
end;

begin :: Primary Magnitude Relation of Radix-2^k SD Number

Lm1:
  for k be Nat st 2 <= k holds SD_Add_Carry(Radix(k) - 1) = 1
proof
    let k be Nat;
    assume k >= 2;
      then Radix(k) >= 4 by Th3;
      then Radix(k) - 1 >= 4 - 1 by REAL_1:49;
      then Radix(k) - 1 > 2 by AXIOMS:22;
      hence thesis by RADIX_1:def 10;
end;

Lm2:
  for n,k,i be Nat st k >= 2 & i in Seg n holds
    SD_Add_Carry(DigA(DecSD(1,n,k),i)) = 0
proof
  let n,k,i be Nat;
  assume
A1: k >= 2 & i in Seg n;
then A2: i >= 1 by FINSEQ_1:3;
      now per cases by A2,REAL_1:def 5;
    suppose
        i = 1;
      then SD_Add_Carry(DigA(DecSD(1,n,k),i))
        = SD_Add_Carry(1) by A1,Th7;
      hence thesis by RADIX_1:def 10;
    end;
    suppose
        i > 1;
      then SD_Add_Carry(DigA(DecSD(1,n,k),i))
        = SD_Add_Carry(0) by A1,Th8;
      hence thesis by RADIX_1:def 10;
    end;
    end;
    hence thesis;
end;

theorem Th12:
  for n be Nat st n >= 1 holds
    for k be Nat, tx,ty be Tuple of n,k-SD st
      (for i be Nat st i in Seg n holds DigA(tx,i) = DigA(ty,i)) holds
        SDDec(tx) = SDDec(ty)
proof
  defpred P[Nat] means
    for k be Nat, tx,ty be Tuple of $1,k-SD st
      (for i be Nat st i in Seg $1 holds DigA(tx,i) = DigA(ty,i)) holds
        SDDec(tx) = SDDec(ty);
A1: P[1]
    proof
      let k be Nat, tx,ty be Tuple of 1,k-SD;
      assume
A2:     for i be Nat st i in Seg 1 holds DigA(tx,i) = DigA(ty,i);
A3:   1 in Seg 1 by FINSEQ_1:3;
A4:   SDDec(tx) = DigA(tx,1) by Th4;
        SDDec(ty) = DigA(ty,1) by Th4;
      hence thesis by A2,A3,A4;
  end;
A5: for n be Nat st n >= 1 & P[n] holds P[n+1]
    proof
      let n be Nat;
      assume
A6:    n >= 1 & P[n];
      let k be Nat, tx,ty be Tuple of (n+1),k-SD;
      assume
A7:    for i be Nat st i in Seg (n+1) holds DigA(tx,i) = DigA(ty,i);
     deffunc F(Nat) = DigB(tx,$1);
      consider txn being FinSequence of INT such that
A8:    len txn = n and
A9:    for i be Nat st i in Seg n holds txn.i = F(i) from FINSEQ_2:sch 1;
        rng txn c= k-SD
        proof
          let z be set;
          assume z in rng txn;
          then consider xx be set such that
A10:        xx in dom txn and
A11:        z = txn.xx by FUNCT_1:def 5;
          reconsider xx as Nat by A10;
A12:      dom txn = Seg n by A8,FINSEQ_1:def 3;
then A13:      z = DigB(tx,xx) by A9,A10,A11
           .= DigA(tx,xx) by RADIX_1:def 4;
            xx in Seg (n+1) by A10,A12,FINSEQ_2:9;
          then DigA(tx,xx) is Element of k-SD by RADIX_1:19;
          hence thesis by A13;
        end;
      then reconsider txn as FinSequence of k-SD by FINSEQ_1:def 4;
A14:  for i be Nat st i in Seg n holds txn.i = tx.i
        proof
          let i be Nat;
          assume
A15:        i in Seg n;
then A16:        i in Seg (n+1) by FINSEQ_2:9;
              txn.i = DigB(tx,i) by A9,A15
                 .= DigA(tx,i) by RADIX_1:def 4;
          hence thesis by A16,RADIX_1:def 3;
        end;
        deffunc F(Nat) = DigB(ty,$1);
      consider tyn being FinSequence of INT such that
A17:    len tyn = n and
A18:    for i be Nat st i in Seg n holds tyn.i = F(i) from FINSEQ_2:sch 1;
        rng tyn c= k-SD
        proof
          let z be set;
          assume z in rng tyn;
          then consider yy be set such that
A19:        yy in dom tyn and
A20:        z = tyn.yy by FUNCT_1:def 5;
          reconsider yy as Nat by A19;
A21:      dom tyn = Seg n by A17,FINSEQ_1:def 3;
then A22:      z = DigB(ty,yy) by A18,A19,A20
           .= DigA(ty,yy) by RADIX_1:def 4;
            yy in Seg (n+1) by A19,A21,FINSEQ_2:9;
          then DigA(ty,yy) is Element of k-SD by RADIX_1:19;
          hence thesis by A22;
        end;
      then reconsider tyn as FinSequence of k-SD by FINSEQ_1:def 4;
A23:  for i be Nat st i in Seg n holds tyn.i = ty.i
        proof
          let i be Nat;
          assume
A24:        i in Seg n;
then A25:        i in Seg (n+1) by FINSEQ_2:9;
              tyn.i = DigB(ty,i) by A18,A24
                 .= DigA(ty,i) by RADIX_1:def 4;
          hence thesis by A25,RADIX_1:def 3;
        end;
      reconsider txn as Tuple of n,k-SD by A8,FINSEQ_2:110;
      reconsider tyn as Tuple of n,k-SD by A17,FINSEQ_2:110;
A26:  SDDec(txn) + (Radix(k) |^ n)*DigA(tx,n+1) = SDDec(tx) by A14,RADIX_2:10;
A27:  SDDec(tyn) + (Radix(k) |^ n)*DigA(ty,n+1) = SDDec(ty) by A23,RADIX_2:10;
        for i be Nat st i in Seg n holds DigA(txn,i) = DigA(tyn,i)
        proof
          let i be Nat;
          assume
A28:        i in Seg n;
then A29:      DigA(txn,i) = txn.i by RADIX_1:def 3
            .= DigB(tx,i) by A9,A28
            .= DigA(tx,i) by RADIX_1:def 4;
A30:      DigA(tyn,i) = tyn.i by A28,RADIX_1:def 3
            .= DigB(ty,i) by A18,A28
            .= DigA(ty,i) by RADIX_1:def 4;
            i in Seg (n+1) by A28,FINSEQ_2:9;
          hence thesis by A7,A29,A30;
        end;
      then A31:    SDDec(txn) = SDDec(tyn) by A6;
        (n+1) in Seg (n+1) by FINSEQ_1:6;
      hence thesis by A7,A26,A27,A31;
    end;
    for n be Nat st n >= 1 holds P[n] from INT_2:sch 1(A1,A5);
  hence thesis;
end;

theorem
    for n be Nat st n >= 1 holds
    for k be Nat, tx,ty be Tuple of n,k-SD st
      (for i be Nat st i in Seg n holds DigA(tx,i) >= DigA(ty,i)) holds
        SDDec(tx) >= SDDec(ty)
proof
  defpred P[Nat] means
    for k be Nat, tx,ty be Tuple of $1,k-SD st
      (for i be Nat st i in Seg $1 holds DigA(tx,i) >= DigA(ty,i)) holds
        SDDec(tx) >= SDDec(ty);
A1: P[1]
    proof
      let k be Nat, tx,ty be Tuple of 1,k-SD;
      assume
A2:     for i be Nat st i in Seg 1 holds DigA(tx,i) >= DigA(ty,i);
A3:     1 in Seg 1 by FINSEQ_1:3;
A4:   SDDec(tx) = DigA(tx,1) by Th4;
        SDDec(ty) = DigA(ty,1) by Th4;
      hence thesis by A2,A3,A4;
  end;
A5: for n be Nat st n >= 1 & P[n] holds P[n+1]
    proof
      let n be Nat;
      assume
A6:    n >= 1 & P[n];
      let k be Nat, tx,ty be Tuple of (n+1),k-SD;
      assume
A7:    for i be Nat st i in Seg (n+1) holds DigA(tx,i) >= DigA(ty,i);
      deffunc F(Nat) = DigB(tx,$1);
      consider txn being FinSequence of INT such that
A8:    len txn = n and
A9:    for i be Nat st i in Seg n holds txn.i = F(i) from FINSEQ_2:sch 1;
        rng txn c= k-SD
        proof
          let z be set;
          assume z in rng txn;
          then consider xx be set such that
A10:        xx in dom txn and
A11:        z = txn.xx by FUNCT_1:def 5;
          reconsider xx as Nat by A10;
A12:      dom txn = Seg n by A8,FINSEQ_1:def 3;
then A13:      z = DigB(tx,xx) by A9,A10,A11
           .= DigA(tx,xx) by RADIX_1:def 4;
            xx in Seg (n+1) by A10,A12,FINSEQ_2:9;
          then DigA(tx,xx) is Element of k-SD by RADIX_1:19;
          hence thesis by A13;
        end;
      then reconsider txn as FinSequence of k-SD by FINSEQ_1:def 4;
A14:  for i be Nat st i in Seg n holds txn.i = tx.i
        proof
          let i be Nat;
          assume
A15:        i in Seg n;
then A16:        i in Seg (n+1) by FINSEQ_2:9;
              txn.i = DigB(tx,i) by A9,A15
                 .= DigA(tx,i) by RADIX_1:def 4;
          hence thesis by A16,RADIX_1:def 3;
        end;
      deffunc F(Nat) = DigB(ty,$1);
      consider tyn being FinSequence of INT such that
A17:    len tyn = n and
A18:    for i be Nat st i in Seg n holds tyn.i = F(i) from FINSEQ_2:sch 1;
        rng tyn c= k-SD
        proof
          let z be set;
          assume z in rng tyn;
          then consider yy be set such that
A19:        yy in dom tyn and
A20:        z = tyn.yy by FUNCT_1:def 5;
          reconsider yy as Nat by A19;
A21:      dom tyn = Seg n by A17,FINSEQ_1:def 3;
then A22:      z = DigB(ty,yy) by A18,A19,A20
           .= DigA(ty,yy) by RADIX_1:def 4;
            yy in Seg (n+1) by A19,A21,FINSEQ_2:9;
          then DigA(ty,yy) is Element of k-SD by RADIX_1:19;
          hence thesis by A22;
        end;
      then reconsider tyn as FinSequence of k-SD by FINSEQ_1:def 4;
A23:  for i be Nat st i in Seg n holds tyn.i = ty.i
        proof
          let i be Nat;
          assume
A24:        i in Seg n;
then A25:        i in Seg (n+1) by FINSEQ_2:9;
              tyn.i = DigB(ty,i) by A18,A24
                 .= DigA(ty,i) by RADIX_1:def 4;
          hence thesis by A25,RADIX_1:def 3;
        end;
      reconsider txn as Tuple of n,k-SD by A8,FINSEQ_2:110;
      reconsider tyn as Tuple of n,k-SD by A17,FINSEQ_2:110;
A26:  SDDec(txn) + (Radix(k) |^ n)*DigA(tx,n+1) = SDDec(tx) by A14,RADIX_2:10;
A27:  SDDec(tyn) + (Radix(k) |^ n)*DigA(ty,n+1) = SDDec(ty) by A23,RADIX_2:10;
        for i be Nat st i in Seg n holds DigA(txn,i) >= DigA(tyn,i)
        proof
          let i be Nat;
          assume
A28:        i in Seg n;
then A29:      DigA(txn,i) = txn.i by RADIX_1:def 3
            .= DigB(tx,i) by A9,A28
            .= DigA(tx,i) by RADIX_1:def 4;
A30:      DigA(tyn,i) = tyn.i by A28,RADIX_1:def 3
            .= DigB(ty,i) by A18,A28
            .= DigA(ty,i) by RADIX_1:def 4;
            i in Seg (n+1) by A28,FINSEQ_2:9;
          hence thesis by A7,A29,A30;
        end;
      then A31:    SDDec(txn) >= SDDec(tyn) by A6;
        (n+1) in Seg (n+1) by FINSEQ_1:6;
then A32:  DigA(tx,n+1) >= DigA(ty,n+1) by A7;
        Radix(k) > 0 by RADIX_2:6;
      then (Radix(k) |^ n) > 0 by PREPOWER:13;
      then (Radix(k) |^ n)*DigA(tx,n+1) >= (Radix(k) |^ n)*DigA(ty,n+1)
                                                     by A32,AXIOMS:25;
      hence thesis by A26,A27,A31,REAL_1:55;
    end;
    for n be Nat st n >= 1 holds P[n] from INT_2:sch 1(A1,A5);
  hence thesis;
end;

theorem Th14:
  for n be Nat st n >= 1 holds
    for k be Nat st k >= 2 holds
      for tx,ty,tz,tw be Tuple of n,k-SD st
        (for i be Nat st i in Seg n holds
          (DigA(tx,i) = DigA(tz,i) & DigA(ty,i) = DigA(tw,i))
            or (DigA(ty,i) = DigA(tz,i) & DigA(tx,i) = DigA(tw,i))) holds
       SDDec(tz) + SDDec(tw) = SDDec(tx) + SDDec(ty)
proof
  defpred P[Nat] means
    for k be Nat st k >= 2 holds
      for tx,ty,tz,tw be Tuple of $1,k-SD st
        (for i be Nat st i in Seg $1 holds
          (DigA(tx,i) = DigA(tz,i) & DigA(ty,i) = DigA(tw,i))
            or (DigA(ty,i) = DigA(tz,i) & DigA(tx,i) = DigA(tw,i))) holds
       SDDec(tz) + SDDec(tw) = SDDec(tx) + SDDec(ty);
A1: P[1]
    proof
      let k be Nat;
      assume
A2:     k >= 2;
      let tx,ty,tz,tw be Tuple of 1,k-SD;
      assume
A3:     for j be Nat st j in Seg 1 holds
          (DigA(tx,j) = DigA(tz,j) & DigA(ty,j) = DigA(tw,j))
            or (DigA(ty,j) = DigA(tz,j) & DigA(tx,j) = DigA(tw,j));
A4:   1 in Seg 1 by FINSEQ_1:3;
A5:   SDDec(tz '+' tw) = DigA(tz '+' tw,1) by Th4
       .= Add(tz,tw,1,k) by A4,RADIX_1:def 14
       .= SD_Add_Data(DigA(tz,1)+DigA(tw,1),k)
           + SD_Add_Carry(DigA(tz,1-'1)+DigA(tw,1-'1)) by A2,A4,RADIX_1:def 13
       .= SD_Add_Data(DigA(tz,1)+DigA(tw,1),k)
           + SD_Add_Carry(DigA(tz,0)+DigA(tw,1-'1)) by GOBOARD9:1
       .= SD_Add_Data(DigA(tz,1)+DigA(tw,1),k)
           + SD_Add_Carry(DigA(tz,0)+DigA(tw,0)) by GOBOARD9:1
       .= SD_Add_Data(DigA(tz,1)+DigA(tw,1),k)
           + SD_Add_Carry(DigA(tz,0)+0) by RADIX_1:def 3
       .= SD_Add_Data(DigA(tz,1)+DigA(tw,1),k)
           + SD_Add_Carry(0+0) by RADIX_1:def 3
       .= SD_Add_Data(DigA(tz,1)+DigA(tw,1),k) + 0 by RADIX_1:def 10;
A6:   SDDec(tx '+' ty) = DigA(tx '+' ty,1) by Th4
       .= Add(tx,ty,1,k) by A4,RADIX_1:def 14
       .= SD_Add_Data(DigA(tx,1)+DigA(ty,1),k)
           + SD_Add_Carry(DigA(tx,1-'1)+DigA(ty,1-'1)) by A2,A4,RADIX_1:def 13
       .= SD_Add_Data(DigA(tx,1)+DigA(ty,1),k)
           + SD_Add_Carry(DigA(tx,0)+DigA(ty,1-'1)) by GOBOARD9:1
       .= SD_Add_Data(DigA(tx,1)+DigA(ty,1),k)
           + SD_Add_Carry(DigA(tx,0)+DigA(ty,0)) by GOBOARD9:1
       .= SD_Add_Data(DigA(tx,1)+DigA(ty,1),k)
           + SD_Add_Carry(DigA(tx,0)+0) by RADIX_1:def 3
       .= SD_Add_Data(DigA(tx,1)+DigA(ty,1),k)
           + SD_Add_Carry(0+0) by RADIX_1:def 3
       .= SD_Add_Data(DigA(tx,1)+DigA(ty,1),k) + 0 by RADIX_1:def 10;
A7:   DigA(tx,1) = DigA(tz,1) & DigA(ty,1) = DigA(tw,1)
        or DigA(ty,1) = DigA(tz,1) & DigA(tx,1) = DigA(tw,1) by A3,A4;
A8:   DigA(tx,1) = DigA(tz,1) & DigA(ty,1) = DigA(tw,1) implies
          SDDec(tz) + SDDec(tw) = SDDec(tx) + SDDec(ty)
      proof
        assume
        DigA(tx,1) = DigA(tz,1) & DigA(ty,1) = DigA(tw,1);
        then SDDec(tz) + SDDec(tw)
         = (SDDec(tx '+' ty))
             + (SD_Add_Carry(DigA(tx,1)+DigA(ty,1))*(Radix(k) |^ 1))
                                                  by A2,A5,A6,RADIX_2:11;
        hence thesis by A2,RADIX_2:11;
      end;
       DigA(ty,1) = DigA(tz,1) & DigA(tx,1) = DigA(tw,1) implies
          SDDec(tz) + SDDec(tw) = SDDec(tx) + SDDec(ty)
      proof
        assume
            DigA(ty,1) = DigA(tz,1) & DigA(tx,1) = DigA(tw,1);
          SDDec(tz) + SDDec(tw)
          = (SDDec(tx '+' ty))
             + SD_Add_Carry(DigA(tx,1)+DigA(ty,1))*(Radix(k) |^ 1)
                                                  by A2,A5,A6,A7,RADIX_2:11;
        hence thesis by A2,RADIX_2:11;
      end;
      hence thesis by A3,A4,A8;
  end;
A9: for n be Nat st n >= 1 & P[n] holds P[n+1]
    proof
      let n be Nat;
      assume
A10:    n >= 1 & P[n];
      let k be Nat;
      assume
A11:    k >= 2;
      let tx,ty,tz,tw be Tuple of (n+1),k-SD;
      assume
A12:   for i be Nat st i in Seg (n+1) holds
          (DigA(tx,i) = DigA(tz,i) & DigA(ty,i) = DigA(tw,i))
            or (DigA(ty,i) = DigA(tz,i) & DigA(tx,i) = DigA(tw,i));
      deffunc F(Nat) = DigB(tx,$1);
      consider txn being FinSequence of INT such that
A13:   len txn = n and
A14:   for i be Nat st i in Seg n holds txn.i = F(i) from FINSEQ_2:sch 1;
        rng txn c= k-SD
        proof
          let z be set;
          assume z in rng txn;
          then consider xx be set such that
A15:       xx in dom txn and
A16:       z = txn.xx by FUNCT_1:def 5;
          reconsider xx as Nat by A15;
A17:     dom txn = Seg n by A13,FINSEQ_1:def 3;
then A18:     z = DigB(tx,xx) by A14,A15,A16
           .= DigA(tx,xx) by RADIX_1:def 4;
            xx in Seg (n+1) by A15,A17,FINSEQ_2:9;
          then DigA(tx,xx) is Element of k-SD by RADIX_1:19;
          hence thesis by A18;
        end;
      then reconsider txn as FinSequence of k-SD by FINSEQ_1:def 4;
A19: for i be Nat st i in Seg n holds txn.i = tx.i
        proof
          let i be Nat;
          assume
A20:       i in Seg n;
then A21:       i in Seg (n+1) by FINSEQ_2:9;
              txn.i = DigB(tx,i) by A14,A20
                 .= DigA(tx,i) by RADIX_1:def 4;
          hence thesis by A21,RADIX_1:def 3;
        end;
      deffunc F(Nat) = DigB(ty,$1);
      consider tyn being FinSequence of INT such that
A22:   len tyn = n and
A23:   for i be Nat st i in Seg n holds tyn.i = F(i) from FINSEQ_2:sch 1;
        rng tyn c= k-SD
        proof
          let z be set;
          assume z in rng tyn;
          then consider yy be set such that
A24:       yy in dom tyn and
A25:       z = tyn.yy by FUNCT_1:def 5;
          reconsider yy as Nat by A24;
A26:     dom tyn = Seg n by A22,FINSEQ_1:def 3;
then A27:     z = DigB(ty,yy) by A23,A24,A25
           .= DigA(ty,yy) by RADIX_1:def 4;
            yy in Seg (n+1) by A24,A26,FINSEQ_2:9;
          then DigA(ty,yy) is Element of k-SD by RADIX_1:19;
          hence thesis by A27;
        end;
      then reconsider tyn as FinSequence of k-SD by FINSEQ_1:def 4;
A28: for i be Nat st i in Seg n holds tyn.i = ty.i
        proof
          let i be Nat;
          assume
A29:       i in Seg n;
then A30:       i in Seg (n+1) by FINSEQ_2:9;
              tyn.i = DigB(ty,i) by A23,A29
                 .= DigA(ty,i) by RADIX_1:def 4;
          hence thesis by A30,RADIX_1:def 3;
        end;
      deffunc F(Nat) = DigB(tz,$1);
      consider tzn being FinSequence of INT such that
A31:   len tzn = n and
A32:   for i be Nat st i in Seg n holds tzn.i = F(i) from FINSEQ_2:sch 1;
        rng tzn c= k-SD
        proof
          let z be set;
          assume z in rng tzn;
          then consider zz be set such that
A33:       zz in dom tzn and
A34:       z = tzn.zz by FUNCT_1:def 5;
          reconsider zz as Nat by A33;
A35:     dom tzn = Seg n by A31,FINSEQ_1:def 3;
then A36:     z = DigB(tz,zz) by A32,A33,A34
           .= DigA(tz,zz) by RADIX_1:def 4;
            zz in Seg (n+1) by A33,A35,FINSEQ_2:9;
          then DigA(tz,zz) is Element of k-SD by RADIX_1:19;
          hence thesis by A36;
        end;
      then reconsider tzn as FinSequence of k-SD by FINSEQ_1:def 4;
A37: for i be Nat st i in Seg n holds tzn.i = tz.i
        proof
          let i be Nat;
          assume
A38:       i in Seg n;
then A39:       i in Seg (n+1) by FINSEQ_2:9;
              tzn.i = DigB(tz,i) by A32,A38
                 .= DigA(tz,i) by RADIX_1:def 4;
          hence thesis by A39,RADIX_1:def 3;
        end;
      deffunc F(Nat) = DigB(tw,$1);
      consider twn being FinSequence of INT such that
A40:   len twn = n and
A41:   for i be Nat st i in Seg n holds twn.i = F(i) from FINSEQ_2:sch 1;
        rng twn c= k-SD
        proof
          let w be set;
          assume w in rng twn;
          then consider ww be set such that
A42:       ww in dom twn and
A43:       w = twn.ww by FUNCT_1:def 5;
          reconsider ww as Nat by A42;
A44:     dom twn = Seg n by A40,FINSEQ_1:def 3;
then A45:     w = DigB(tw,ww) by A41,A42,A43
           .= DigA(tw,ww) by RADIX_1:def 4;
            ww in Seg (n+1) by A42,A44,FINSEQ_2:9;
          then DigA(tw,ww) is Element of k-SD by RADIX_1:19;
          hence thesis by A45;
        end;
      then reconsider twn as FinSequence of k-SD by FINSEQ_1:def 4;
A46:  for i be Nat st i in Seg n holds twn.i = tw.i
        proof
          let i be Nat;
          assume
A47:       i in Seg n;
then A48:       i in Seg (n+1) by FINSEQ_2:9;
              twn.i = DigB(tw,i) by A41,A47
                 .= DigA(tw,i) by RADIX_1:def 4;
          hence thesis by A48,RADIX_1:def 3;
        end;
      reconsider txn as Tuple of n,k-SD by A13,FINSEQ_2:110;
      reconsider tyn as Tuple of n,k-SD by A22,FINSEQ_2:110;
      reconsider tzn as Tuple of n,k-SD by A31,FINSEQ_2:110;
      reconsider twn as Tuple of n,k-SD by A40,FINSEQ_2:110;
A49:  SDDec(txn) + (Radix(k) |^ n)*DigA(tx,n+1) = SDDec(tx) by A19,RADIX_2:10;
A50:  SDDec(tyn) + (Radix(k) |^ n)*DigA(ty,n+1) = SDDec(ty) by A28,RADIX_2:10;
A51:  SDDec(tzn) + (Radix(k) |^ n)*DigA(tz,n+1) = SDDec(tz) by A37,RADIX_2:10;
A52:  SDDec(twn) + (Radix(k) |^ n)*DigA(tw,n+1) = SDDec(tw) by A46,RADIX_2:10;
       for i be Nat st i in Seg n holds
        (DigA(txn,i) = DigA(tzn,i) & DigA(tyn,i) = DigA(twn,i))
          or (DigA(tyn,i) = DigA(tzn,i) & DigA(txn,i) = DigA(twn,i))
      proof
        let i be Nat;
        assume
A53:      i in Seg n;
then A54:    1 <= i & i <= n by FINSEQ_1:3;
        then i <= n + 1 by NAT_1:37;
then A55:    i in Seg (n+1) by A54,FINSEQ_1:3;
then A56:    DigA(tx,i) = tx.i by RADIX_1:def 3
         .= txn.i by A19,A53
         .= DigA(txn,i) by A53,RADIX_1:def 3;
A57:    DigA(ty,i) = ty.i by A55,RADIX_1:def 3
         .= tyn.i by A28,A53
         .= DigA(tyn,i) by A53,RADIX_1:def 3;
A58:    DigA(tz,i) = tz.i by A55,RADIX_1:def 3
         .= tzn.i by A37,A53
         .= DigA(tzn,i) by A53,RADIX_1:def 3;
     DigA(tw,i) = tw.i by A55,RADIX_1:def 3
         .= twn.i by A46,A53
         .= DigA(twn,i) by A53,RADIX_1:def 3;
        hence thesis by A12,A55,A56,A57,A58;
      end;
then A59:  SDDec(tzn) + SDDec(twn) = SDDec(txn) + SDDec(tyn) by A10,A11;
A60:  n+1 >= 1 by NAT_1:29;
A61:  SDDec(tz) + SDDec(tw)
        = SDDec(tzn) + (Radix(k) |^ n)*DigA(tz,n+1)
          + SDDec(twn) + (Radix(k) |^ n)*DigA(tw,n+1) by A51,A52,XCMPLX_1:1
       .= SDDec(tzn) + SDDec(twn) + ((Radix(k) |^ n)*DigA(tz,n+1)
             + (Radix(k) |^ n)*DigA(tw,n+1));
A62:  SDDec(tx) + SDDec(ty)
       = SDDec(txn) + (Radix(k) |^ n)*DigA(tx,n+1)
          + SDDec(tyn) + (Radix(k) |^ n)*DigA(ty,n+1) by A49,A50,XCMPLX_1:1
       .= SDDec(tzn) + SDDec(twn) + ((Radix(k) |^ n)*DigA(tx,n+1)
             + (Radix(k) |^ n)*DigA(ty,n+1)) by A59;
        n+1 > 0 by A60,AXIOMS:22;
      then n+1 in Seg (n+1) by FINSEQ_1:5;
then (DigA(tx,n+1) = DigA(tz,n+1) & DigA(ty,n+1) = DigA(tw,n+1))
        or (DigA(ty,n+1) = DigA(tz,n+1) & DigA(tx,n+1) = DigA(tw,n+1)) by A12;
      hence thesis by A61,A62;
    end;
    for n be Nat st n >= 1 holds P[n] from INT_2:sch 1(A1,A9);
  hence thesis;
end;

theorem
    for n,k be Nat st n >= 1 & k >= 2 holds
      for tx,ty,tz be Tuple of n,k-SD st
        (for i be Nat st i in Seg n holds
          (DigA(tx,i) = DigA(tz,i) & DigA(ty,i) = 0)
            or (DigA(ty,i) = DigA(tz,i) & DigA(tx,i) = 0)) holds
       SDDec(tz) + SDDec(DecSD(0,n,k)) = SDDec(tx) + SDDec(ty)
proof
      let n,k be Nat;
      assume
A1:     n >= 1 & k >= 2;
      let tx,ty,tz be Tuple of n,k-SD;
      assume
A2:     for i be Nat st i in Seg n holds
          (DigA(tx,i) = DigA(tz,i) & DigA(ty,i) = 0)
            or (DigA(ty,i) = DigA(tz,i) & DigA(tx,i) = 0);
        for i be Nat st i in Seg n holds
        (DigA(tx,i) = DigA(tz,i) & DigA(ty,i) = DigA(DecSD(0,n,k),i))
          or (DigA(ty,i) = DigA(tz,i) & DigA(tx,i) = DigA(DecSD(0,n,k),i))
      proof
        let i be Nat;
        assume
A3:       i in Seg n;
        then DigA(DecSD(0,n,k),i) = 0 by Th5;
        hence thesis by A2,A3;
      end;
      hence thesis by A1,Th14;
end;

begin :: Definiton of Max/Min Radix-2^k SD Number in Some Digits

definition let i,m,k be Nat;
  assume
A1:  k >= 2;
  func SDMinDigit(m,k,i) -> Element of k-SD equals
    :Def1:
    -Radix(k)+1 if 1 <= i & i < m
    otherwise 0;
coherence
  proof
A2: k-SD = {w where w is Element of INT:w <= Radix(k)-1 & w >= -Radix(k)+1}
                                                           by RADIX_1:def 2;
      Radix(k) > 2 by A1,RADIX_4:1;
    then Radix(k) > 1 by AXIOMS:22;
    then Radix(k) + Radix(k) > 1 + 1 by REAL_1:67;
    then A3: Radix(k) - 1 > 1 - Radix(k) by REAL_2:169;
      -Radix(k) + 1 is Element of INT by INT_1:def 2;
    then -Radix(k) + 1 in k-SD by A2,A3;
    hence thesis by RADIX_1:16;
  end;
consistency;
end;

definition let n,m,k be Nat;
  func SDMin(n,m,k) -> Tuple of n,k-SD means
    :Def2:
    for i be Nat st i in Seg n holds DigA(it,i) = SDMinDigit(m,k,i);
existence
  proof
    deffunc F(Nat) = SDMinDigit(m,k,$1);
    consider z being FinSequence of k-SD such that
A1:   len z = n and
A2:   for j be Nat st j in Seg n holds
        z.j = F(j) from FINSEQ_2:sch 1;
    reconsider z as Tuple of n,(k-SD) by A1,FINSEQ_2:110;
    take z;
    let i be Nat;
    assume
A3:   i in Seg n;
    then DigA(z,i) = z.i by RADIX_1:def 3;
    hence thesis by A2,A3;
  end;
uniqueness
  proof
      let k1,k2 be Tuple of n,k-SD such that
A4:  for i be Nat st i in Seg n holds DigA(k1,i) = SDMinDigit(m,k,i) and
A5:  for i be Nat st i in Seg n holds DigA(k2,i) = SDMinDigit(m,k,i);
A6:  len k1 = n & len k2 = n by FINSEQ_2:109;
        now let j be Nat;
        assume
A7:      j in Seg n;
        then k1.j = DigA(k1,j) by RADIX_1:def 3
            .= SDMinDigit(m,k,j) by A4,A7
            .= DigA(k2,j) by A5,A7
            .= k2.j by A7,RADIX_1:def 3;
        hence k1.j = k2.j;
        end;
      hence k1 = k2 by A6,FINSEQ_2:10;
  end;
end;

definition let i,m,k be Nat;
  assume
A1:  k >= 2;
  func SDMaxDigit(m,k,i) -> Element of k-SD equals
    :Def3:
    Radix(k)-1 if 1 <= i & i < m
    otherwise 0;
coherence by A1,Th1,RADIX_1:16;
consistency;
end;

definition let n,m,k be Nat;
  func SDMax(n,m,k) -> Tuple of n,k-SD means
    :Def4:
    for i be Nat st i in Seg n holds DigA(it,i) = SDMaxDigit(m,k,i);
existence
  proof
    deffunc F(Nat) = SDMaxDigit(m,k,$1);
    consider z being FinSequence of k-SD such that
A1:   len z = n and
A2:   for j be Nat st j in Seg n holds
        z.j = F(j) from FINSEQ_2:sch 1;
    reconsider z as Tuple of n,(k-SD) by A1,FINSEQ_2:110;
    take z;
    let i be Nat;
    assume
A3:   i in Seg n;
    then DigA(z,i) = z.i by RADIX_1:def 3;
    hence thesis by A2,A3;
  end;
uniqueness
  proof
      let k1,k2 be Tuple of n,k-SD such that
A4:  for i be Nat st i in Seg n holds DigA(k1,i) = SDMaxDigit(m,k,i) and
A5:  for i be Nat st i in Seg n holds DigA(k2,i) = SDMaxDigit(m,k,i);
A6:  len k1 = n & len k2 = n by FINSEQ_2:109;
        now let j be Nat;
        assume
A7:      j in Seg n;
        then k1.j = DigA(k1,j) by RADIX_1:def 3
            .= SDMaxDigit(m,k,j) by A4,A7
            .= DigA(k2,j) by A5,A7
            .= k2.j by A7,RADIX_1:def 3;
        hence k1.j = k2.j;
        end;
      hence k1 = k2 by A6,FINSEQ_2:10;
  end;
end;

definition let i,m,k be Nat;
  assume
A1:  k >= 2;
  func FminDigit(m,k,i) -> Element of k-SD equals
    :Def5:
    1 if i = m
    otherwise 0;
coherence
  proof
      1 in k-SD
    proof
A2:   k-SD = {w where w is Element of INT:w <= Radix(k)-1 & w >= -Radix(k)+1}
                                                      by RADIX_1:def 2;
A3:   Radix(k) > 2 by A1,RADIX_4:1;
      then A4: Radix(k)+  -1 > 2 + -1 by REAL_1:53;
        -Radix(k) < -2 by A3,REAL_1:50;
      then -Radix(k) + 1 < -2 + 1 by REAL_1:53;
then A5:   -Radix(k) + 1 <= 1 by AXIOMS:22;
        1 is Element of INT by INT_1:def 2;
      hence thesis by A2,A4,A5;
    end;
    hence thesis by RADIX_1:16;
  end;
consistency;
end;

definition let n,m,k be Nat;
  func Fmin(n,m,k) -> Tuple of n,k-SD means
    :Def6:
    for i be Nat st i in Seg n holds DigA(it,i) = FminDigit(m,k,i);
existence
  proof
    deffunc F(Nat) = FminDigit(m,k,$1);
    consider z being FinSequence of k-SD such that
A1:   len z = n and
A2:   for j be Nat st j in Seg n holds
        z.j = F(j) from FINSEQ_2:sch 1;
    reconsider z as Tuple of n,(k-SD) by A1,FINSEQ_2:110;
    take z;
    let i be Nat;
    assume
A3:   i in Seg n;
    hence DigA(z,i) = z.i by RADIX_1:def 3
                .= FminDigit(m,k,i) by A2,A3;
  end;
uniqueness
  proof
      let k1,k2 be Tuple of n,k-SD such that
A4:  for i be Nat st i in Seg n holds DigA(k1,i) = FminDigit(m,k,i) and
A5:  for i be Nat st i in Seg n holds DigA(k2,i) = FminDigit(m,k,i);
A6:  len k1 = n & len k2 = n by FINSEQ_2:109;
        now let j be Nat;
        assume
A7:      j in Seg n;
        then k1.j = DigA(k1,j) by RADIX_1:def 3
            .= FminDigit(m,k,j) by A4,A7
            .= DigA(k2,j) by A5,A7
            .= k2.j by A7,RADIX_1:def 3;
        hence k1.j = k2.j;
        end;
      hence k1 = k2 by A6,FINSEQ_2:10;
  end;
end;

definition let i,m,k be Nat;
  assume
A1:  k >= 2;
  func FmaxDigit(m,k,i) -> Element of k-SD equals
    :Def7:
    Radix(k) - 1 if i = m
    otherwise 0;
coherence by A1,Th1,RADIX_1:16;
consistency;
end;

definition let n,m,k be Nat;
  func Fmax(n,m,k) -> Tuple of n,k-SD means
    :Def8:
    for i be Nat st i in Seg n holds DigA(it,i) = FmaxDigit(m,k,i);
existence
  proof
    deffunc F(Nat) = FmaxDigit(m,k,$1);
    consider z being FinSequence of k-SD such that
A1:   len z = n and
A2:   for j be Nat st j in Seg n holds
        z.j = F(j) from FINSEQ_2:sch 1;
    reconsider z as Tuple of n,(k-SD) by A1,FINSEQ_2:110;
    take z;
    let i be Nat;
    assume
A3:   i in Seg n;
    hence DigA(z,i) = z.i by RADIX_1:def 3
                .= FmaxDigit(m,k,i) by A2,A3;
  end;
uniqueness
  proof
      let k1,k2 be Tuple of n,k-SD such that
A4:  for i be Nat st i in Seg n holds DigA(k1,i) = FmaxDigit(m,k,i) and
A5:  for i be Nat st i in Seg n holds DigA(k2,i) = FmaxDigit(m,k,i);
A6:  len k1 = n & len k2 = n by FINSEQ_2:109;
        now let j be Nat;
        assume
A7:      j in Seg n;
        then k1.j = DigA(k1,j) by RADIX_1:def 3
            .= FmaxDigit(m,k,j) by A4,A7
            .= DigA(k2,j) by A5,A7
            .= k2.j by A7,RADIX_1:def 3;
        hence k1.j = k2.j;
        end;
      hence k1 = k2 by A6,FINSEQ_2:10;
  end;
end;

begin :: Properties of Max/Min Radix-$2^k$ SD Numbers

theorem Th16:
  for n,m,k be Nat st n >= 1 & k >= 2 & m in Seg n holds
    for i be Nat st i in Seg n holds
      DigA(SDMax(n,m,k),i)+DigA(SDMin(n,m,k),i) = 0
proof
      let n,m,k be Nat;
      assume
A1:     n >= 1 & k >= 2 & m in Seg n;
      let i be Nat;
      assume
A2:     i in Seg n;
then A3:   i >= 1 & i <= n by FINSEQ_1:3;
      reconsider a = SDMinDigit(m,k,i) as Element of INT;
      reconsider b = SDMaxDigit(m,k,i) as Element of INT;
      A4: DigA(SDMin(n,m,k),i) = SDMinDigit(m,k,i) by A2,Def2;
        now per cases;
      suppose
A5:    i < m;
        then a + b
          = -Radix(k) + 1 + b by A1,A3,Def1
         .= -Radix(k) + 1 + (Radix(k) - 1) by A1,A3,A5,Def3
         .= 0;
        hence thesis by A2,A4,Def4;
      end;
      suppose
A6:    i >= m;
        then a + b
          = 0 + b by A1,Def1
         .= 0 + 0 by A1,A6,Def3;
        hence thesis by A2,A4,Def4;
      end;
      end;
      hence thesis;
end;

theorem
    for n be Nat st n >= 1 holds
    for m,k be Nat st m in Seg n & k >= 2 holds
      SDDec(SDMax(n,m,k)) + SDDec(SDMin(n,m,k)) = SDDec(DecSD(0,n,k))
proof
      let n be Nat;
      assume
A1:     n >= 1;
      let m,k be Nat;
      assume
A2:     m in Seg n & k >= 2;
A3:   n in Seg n by A1,FINSEQ_1:3;
      A4: for i be Nat st i in Seg n holds
        DigA(DecSD(0,n,k),i) = DigA(SDMax(n,m,k) '+' SDMin(n,m,k),i)
      proof
        let i be Nat;
        assume
A5:      i in Seg n;
then A6:    i >= 1 & i <= n by FINSEQ_1:3;
A7:    DigA(SDMax(n,m,k) '+' SDMin(n,m,k),i)
          = Add(SDMax(n,m,k),SDMin(n,m,k),i,k) by A5,RADIX_1:def 14
         .= SD_Add_Data(DigA(SDMax(n,m,k),i)+DigA(SDMin(n,m,k),i),k)
           + SD_Add_Carry(DigA(SDMax(n,m,k),i-'1)+DigA(SDMin(n,m,k),i-'1))
                                                    by A2,A5,RADIX_1:def 13
         .= SD_Add_Data(0,k)
           + SD_Add_Carry(DigA(SDMax(n,m,k),i-'1)+DigA(SDMin(n,m,k),i-'1))
                                                    by A1,A2,A5,Th16
         .= 0+SD_Add_Carry(DigA(SDMax(n,m,k),i-'1)+DigA(SDMin(n,m,k),i-'1))
                                                    by RADIX_1:22;
A8:  DigA(DecSD(0,n,k),i) = 0 by A5,Th5;
          now per cases by A6,REAL_1:def 5;
        suppose
            i = 1;
then A9:      i -' 1 = 0 by NAT_2:10;
          then DigA(SDMin(n,m,k),i-'1) = 0 by RADIX_1:def 3;
          then DigA(SDMax(n,m,k) '+' SDMin(n,m,k),i)
            = SD_Add_Carry(0+0) by A7,A9,RADIX_1:def 3;
          hence thesis by A8,RADIX_1:def 10;
        end;
        suppose
            i > 1;
          then i -' 1 in Seg n by A5,Th2;
          then DigA(SDMax(n,m,k) '+' SDMin(n,m,k),i)
            = SD_Add_Carry(0) by A1,A2,A7,Th16;
          hence thesis by A8,RADIX_1:def 10;
        end;
        end;
        hence thesis;
      end;
        SDDec(SDMax(n,m,k)) + SDDec(SDMin(n,m,k))
        = SDDec(SDMax(n,m,k) '+' SDMin(n,m,k))
            + SD_Add_Carry(DigA(SDMax(n,m,k),n)+DigA(SDMin(n,m,k),n))
                * (Radix(k) |^ n) by A1,A2,RADIX_2:11
       .= SDDec(SDMax(n,m,k) '+' SDMin(n,m,k))
            + SD_Add_Carry(0) * (Radix(k) |^ n) by A1,A2,A3,Th16
       .= SDDec(SDMax(n,m,k) '+' SDMin(n,m,k)) + 0 * (Radix(k) |^ n)
                                                by RADIX_1:def 10;
      hence thesis by A1,A4,Th12;
end;

theorem
    for n be Nat st n >= 1 holds
    for m,k be Nat st m in Seg n & k >= 2 holds
      SDDec(Fmin(n,m,k)) = SDDec(SDMax(n,m,k)) + SDDec(DecSD(1,n,k))
proof
      let n be Nat;
      assume
A1:     n >= 1;
      let m,k be Nat;
      assume
A2:     m in Seg n & k >= 2;
then A3:   n >= m & m >= 1 by FINSEQ_1:3;
A4:   1 in Seg 1 by FINSEQ_1:3;
A5:   1 in Seg n by A1,FINSEQ_1:3;
        now per cases by A1,REAL_1:def 5;
      suppose
A6:    n = 1;
A7:    SDDec(SDMax(1,m,k) '+' DecSD(1,1,k))
          = DigA(SDMax(1,m,k) '+' DecSD(1,1,k),1) by Th4
         .= Add(SDMax(1,m,k),DecSD(1,1,k),1,k) by A4,RADIX_1:def 14
         .= SD_Add_Data(DigA(SDMax(1,m,k),1)+DigA(DecSD(1,1,k),1),k)
           + SD_Add_Carry(DigA(SDMax(1,m,k),1-'1)+DigA(DecSD(1,1,k),1-'1))
                                                    by A2,A4,RADIX_1:def 13
         .= SD_Add_Data(DigA(SDMax(1,m,k),1)+DigA(DecSD(1,1,k),1),k)
           + SD_Add_Carry(DigA(SDMax(1,m,k),0)+DigA(DecSD(1,1,k),1-'1))
                                                          by GOBOARD9:1
         .= SD_Add_Data(DigA(SDMax(1,m,k),1)+DigA(DecSD(1,1,k),1),k)
           + SD_Add_Carry(DigA(SDMax(1,m,k),0)+DigA(DecSD(1,1,k),0))
                                                          by GOBOARD9:1
         .= SD_Add_Data(DigA(SDMax(1,m,k),1)+DigA(DecSD(1,1,k),1),k)
           + SD_Add_Carry(DigA(SDMax(1,m,k),0)+0) by RADIX_1:def 3
         .= SD_Add_Data(DigA(SDMax(1,m,k),1)+DigA(DecSD(1,1,k),1),k)
           + SD_Add_Carry(0+0) by RADIX_1:def 3
         .= SD_Add_Data(DigA(SDMax(1,m,k),1)+DigA(DecSD(1,1,k),1),k) + 0
                                                         by RADIX_1:def 10
         .= SD_Add_Data(DigA(SDMax(1,m,k),1)+1,k) by A2,A4,Th7;
A8:    m = 1 by A3,A6,AXIOMS:21;
A9:    DigA(SDMax(1,m,k),1) = SDMaxDigit(m,k,1) by A4,Def4
         .= 0 by A2,A3,A6,Def3;
then A10:    SDDec(SDMax(1,m,k) '+' DecSD(1,1,k)) = 1 - SD_Add_Carry(1) * Radix
(k) by A7,RADIX_1:def 11
         .= 1 - 0 * Radix(k) by RADIX_1:def 10
         .= 1;
A11:    SDDec(SDMax(1,m,k)) + SDDec(DecSD(1,1,k))
          = SDDec(SDMax(1,m,k) '+' DecSD(1,1,k))
             + SD_Add_Carry(DigA(SDMax(1,m,k),1)+DigA(DecSD(1,1,k),1))
                    *(Radix(k) |^ 1) by A2,RADIX_2:11
         .= 1 + SD_Add_Carry(0+1) *(Radix(k) |^ 1) by A2,A4,A9,A10,Th7
         .= 1 + 0 * (Radix(k) |^ 1) by RADIX_1:def 10;
          SDDec(Fmin(1,m,k))
          = DigA(Fmin(1,m,k),1) by Th4
         .= FminDigit(m,k,1) by A4,Def6
         .= 1 by A2,A8,Def5;
        hence thesis by A6,A11;
      end;
      suppose
A12:    n > 1;
A13:    n in Seg n by A1,FINSEQ_1:3;
then A14:    DigA(SDMax(n,m,k),n) = SDMaxDigit(m,k,n) by Def4
          .= 0 by A2,A3,Def3;
A15:    SDDec(SDMax(n,m,k)) + SDDec(DecSD(1,n,k))
          = SDDec(SDMax(n,m,k) '+' DecSD(1,n,k))
            + SD_Add_Carry(DigA(SDMax(n,m,k),n)+DigA(DecSD(1,n,k),n))
                * (Radix(k) |^ n) by A1,A2,RADIX_2:11
         .= SDDec(SDMax(n,m,k) '+' DecSD(1,n,k))
            + 0 * (Radix(k) |^ n) by A2,A12,A13,A14,Th8,RADIX_1:21;
          for i be Nat st i in Seg n holds
          DigA(Fmin(n,m,k),i) = DigA(SDMax(n,m,k) '+' DecSD(1,n,k),i)
        proof
          let i be Nat;
          assume
A16:        i in Seg n;
then A17:      DigA(SDMax(n,m,k) '+' DecSD(1,n,k),i)
            = Add(SDMax(n,m,k),DecSD(1,n,k),i,k) by RADIX_1:def 14
           .= SD_Add_Data(DigA(SDMax(n,m,k),i)+DigA(DecSD(1,n,k),i),k)
              + SD_Add_Carry(DigA(SDMax(n,m,k),i-'1)+DigA(DecSD(1,n,k),i-'1))
                                                 by A2,A16,RADIX_1:def 13;
A18:      DigA(Fmin(n,m,k),i) = FminDigit(m,k,i) by A16,Def6;
A19:      DigA(SDMax(n,m,k),i) = SDMaxDigit(m,k,i) by A16,Def4;
A20:      i >= 1 & i <= n by A16,FINSEQ_1:3;
            now per cases;
          suppose
A21:        i >= m+1;
then A22:        i > m by NAT_1:38;
then A23:        i > 1 by A3,AXIOMS:22;
then A24:        i -' 1 in Seg n by A16,Th2;
A25:        DigA(SDMax(n,m,k),i) = 0 by A2,A19,A22,Def3;
A26:        DigA(DecSD(1,n,k),i) = 0 by A2,A16,A23,Th8;
              now per cases by A21,REAL_1:def 5;
            suppose
           i = m+1;
              then DigA(SDMax(n,m,k),i-'1) = DigA(SDMax(n,m,k),m) by BINARITH:
39
                .= SDMaxDigit(m,k,m) by A2,Def4
                .= 0 by A2,Def3;
              then DigA(SDMax(n,m,k) '+' DecSD(1,n,k),i)
                = SD_Add_Data(0+0,k) + 0 by A2,A17,A24,A25,A26,Lm2
               .= 0 by RADIX_1:22;
              hence thesis by A2,A18,A22,Def5;
            end;
            suppose i > m+1;
              then A27: i - 1 > m + 1 - 1 by REAL_1:92;
              then i - 1 > 0 by A3,AXIOMS:22;
then A28:          i -' 1 > m by A27,BINARITH:def 3;
                i -' 1 in Seg n by A16,A23,Th2;
              then DigA(SDMax(n,m,k),i-'1) = SDMaxDigit(m,k,i-'1) by Def4
               .= 0 by A2,A28,Def3;
              then DigA(SDMax(n,m,k) '+' DecSD(1,n,k),i)
                = SD_Add_Data(0+0,k) + 0 by A2,A17,A24,A25,A26,Lm2
               .= 0 by RADIX_1:22;
              hence thesis by A2,A18,A22,Def5;
            end;
            end;
            hence thesis;
          end;
          suppose i < m+1;
then A29:        i <= m by NAT_1:38;
A30:        i >= 1 by A16,FINSEQ_1:3;
              now per cases by A30,REAL_1:def 5;
            suppose
A31:          i > 1;
then A32:          m > 1 by A29,AXIOMS:22;
then A33:          m -' 1 in Seg n by A2,Th2;
then A34:          m -' 1 >= 1 by FINSEQ_1:3;
A35:          m -' 1 < m by A32,JORDAN5B:1;
                now per cases by A29,REAL_1:def 5;
              suppose
A36:            i = m;
then A37:            DigA(Fmin(n,m,k),i) = FminDigit(m,k,m) by A2,Def6
                 .= 1 by A2,Def5;
A38:            DigA(SDMax(n,m,k),i) = 0 by A2,A19,A36,Def3;
A39:            DigA(DecSD(1,n,k),i) = 0 by A2,A31,A36,Th8;
A40:            DigA(SDMax(n,m,k),i-'1)
                  = SDMaxDigit(m,k,m-'1) by A33,A36,Def4
                 .= Radix(k) - 1 by A2,A34,A35,Def3;
A41:            i >= 1 + 1 by A31,INT_1:20;
                  now per cases by A41,REAL_1:def 5;
                suppose
                    i = 2;
                  then i -' 1 = 2 - 1 by SCMFSA_7:3;
                   then DigA(SDMax(n,m,k) '+' DecSD(1,n,k),i)
                    = SD_Add_Data(0+0,k)
                      +SD_Add_Carry(Radix(k) - 1 + 1) by A2,A5,A17,A38,A39,A40,
Th7
                   .= 0 + SD_Add_Carry(Radix(k) - 1 + 1) by RADIX_1:22
                   .= 1  by A2,Th10;
                  hence thesis by A37;
                end;
                suppose
A42:              i > 2;
then A43:              i - 1 > 2 - 1 by REAL_1:92;
                  then i - 1 > 0 by AXIOMS:22;
then A44:              i -' 1 > 1 by A43,BINARITH:def 3;
                    i > 1 by A42,AXIOMS:22;
                  then i -' 1 in Seg n by A16,Th2;
                   then DigA(SDMax(n,m,k) '+' DecSD(1,n,k),i)
                    = SD_Add_Data(0+0,k)
                      + SD_Add_Carry(Radix(k) - 1 + 0) by A2,A17,A38,A39,A40,
A44,Th8
                   .= 0 + SD_Add_Carry(Radix(k) - 1) by RADIX_1:22
                   .= 1 by A2,Lm1;
                  hence thesis by A37;
                end;
                end;
                hence thesis;
              end;
              suppose
A45:            i < m;
A46:            DigA(DecSD(1,n,k),i) = 0 by A2,A16,A31,Th8;
A47:            i >= 1 + 1 by A31,INT_1:20;
                  i -' 1 < i by A31,JORDAN5B:1;
then A48:            i -' 1 < m by A45,AXIOMS:22;
A49:            i -' 1 in Seg n by A16,A31,Th2;
                  now per cases by A47,REAL_1:def 5;
                suppose i = 2;
then A50:              i -' 1 = 2 - 1 by SCMFSA_7:3;
then A51:              DigA(DecSD(1,n,k),i-'1) = 1 by A2,A5,Th7;
                    DigA(SDMax(n,m,k),i-'1)
                    = SDMaxDigit(m,k,i-'1) by A49,Def4
                   .= Radix(k) - 1 by A2,A48,A50,Def3;
                  then DigA(SDMax(n,m,k) '+' DecSD(1,n,k),i)
                    = SD_Add_Data(Radix(k)-1,k)
                      +SD_Add_Carry(Radix(k) + 1 - 1) by A2,A17,A19,A20,A45,A46
,A51,Def3
                   .= SD_Add_Data(Radix(k)-1,k) + 1  by A2,Th10
                   .= (Radix(k)-1) - SD_Add_Carry(Radix(k)-1)*Radix(k) + 1
                                                     by RADIX_1:def 11
                   .= (Radix(k)-1) - 1*Radix(k) + 1 by A2,Lm1
                   .= 0;
                  hence thesis by A2,A18,A45,Def5;
                end;
                suppose
A52:             i > 2;
then A53:             i - 1 > 2 - 1 by REAL_1:92;
                  then i - 1 > 0 by AXIOMS:22;
then A54:             i -' 1 > 1 by A53,BINARITH:def 3;
                    i > 1 by A52,AXIOMS:22;
                  then i -' 1 in Seg n by A16,Th2;
then A55:             DigA(DecSD(1,n,k),i-'1) = 0 by A2,A54,Th8;
                    DigA(SDMax(n,m,k),i-'1)
                    = SDMaxDigit(m,k,i-'1) by A49,Def4
                   .= Radix(k) - 1 by A2,A48,A54,Def3;
                  then DigA(SDMax(n,m,k) '+' DecSD(1,n,k),i)
                    = SD_Add_Data(Radix(k)-1+0,k)
                      +SD_Add_Carry(Radix(k) - 1 + 0)  by A2,A17,A19,A20,A45,
A46,A55,Def3
                   .= SD_Add_Data(Radix(k)-1,k) + 1 by A2,Lm1
                   .= (Radix(k)-1) - SD_Add_Carry(Radix(k)-1)*Radix(k) + 1
                                                     by RADIX_1:def 11
                   .= (Radix(k)-1) - 1*Radix(k) + 1 by A2,Lm1
                   .= 0;
                  hence thesis by A2,A18,A45,Def5;
                end;
                end;
                hence thesis;
              end;
              end;
              hence thesis;
            end;
            suppose
A56:         i = 1;
then A57:         i -' 1 = 0 by NAT_2:10;
then A58:         DigA(SDMax(n,m,k),i-'1) = 0 by RADIX_1:def 3;
A59:         DigA(DecSD(1,n,k),i-'1) = 0 by A57,RADIX_1:def 3;
                now per cases by A29,REAL_1:def 5;
              suppose
A60:           i < m;
then DigA(SDMax(n,m,k),i)=Radix(k)-1 by A2,A19,A56,Def3;
                 then DigA(SDMax(n,m,k) '+' DecSD(1,n,k),i)
                  = SD_Add_Data(Radix(k)-1+1,k)
                    + SD_Add_Carry(0+0) by A2,A5,A17,A56,A58,A59,Th7
                 .= Radix(k) - SD_Add_Carry(Radix(k)) * Radix(k)
                                                          by RADIX_1:21,def 11
                 .= Radix(k) - 1 * Radix(k) by A2,Th10
                 .= 0;
                hence thesis by A2,A18,A60,Def5;
              end;
              suppose
A61:           i = m;
then DigA(SDMax(n,m,k),i) = 0 by A2,A19,Def3;
                 then DigA(SDMax(n,m,k) '+' DecSD(1,n,k),i)
                  = SD_Add_Data(1+0,k)+SD_Add_Carry(0+0) by A2,A5,A17,A56,A58,
A59,Th7
                 .= 1 - SD_Add_Carry(1) * Radix(k) by RADIX_1:21,def 11
                 .= 1 - 0 * Radix(k) by RADIX_1:def 10
                 .= 1;
                hence thesis by A2,A18,A61,Def5;
              end;
              end;
              hence thesis;
            end;
            end;
            hence thesis;
          end;
          end;
          hence thesis;
        end;
        hence thesis by A1,A15,Th12;
      end;
      end;
      hence thesis;
end;

theorem
      for n,m,k be Nat st m in Seg n & k >= 2 holds
      SDDec(Fmin(n+1,m+1,k)) = SDDec(Fmin(n+1,m,k)) + SDDec(Fmax(n+1,m,k))
proof
    let n,m,k be Nat;
    assume
A1:     m in Seg n & k >= 2;
then A2:   n >= m & m >= 1 by FINSEQ_1:3;
then A3:   n + 1 > m by NAT_1:38;
A4:   n+1 >= 1 by NAT_1:29;
      then n+1 > 0 by AXIOMS:22;
then A5:   n+1 in Seg(n+1) by FINSEQ_1:5;
then A6:   DigA(Fmin(n+1,m,k),n+1) = FminDigit(m,k,n+1) by Def6
       .= 0 by A1,A3,Def5;
A7:   DigA(Fmax(n+1,m,k),n+1) = FmaxDigit(m,k,n+1) by A5,Def8
       .= 0 by A1,A3,Def7;
A8:   SDDec(Fmin(n+1,m,k)) + SDDec(Fmax(n+1,m,k))
        = SDDec(Fmin(n+1,m,k) '+' Fmax(n+1,m,k))
          + SD_Add_Carry(DigA(Fmin(n+1,m,k),n+1)+DigA(Fmax(n+1,m,k),n+1))
              * (Radix(k) |^ (n+1)) by A1,A4,RADIX_2:11
       .= SDDec(Fmin(n+1,m,k) '+' Fmax(n+1,m,k))
          + 0 * (Radix(k) |^ (n+1)) by A6,A7,RADIX_1:21;
A9:  m in Seg (n+1) by A1,FINSEQ_2:9;
        for i be Nat st i in Seg (n+1) holds
        DigA(Fmin(n+1,m+1,k),i)
          = DigA(Fmin(n+1,m,k) '+' Fmax(n+1,m,k),i)
      proof
        let i be Nat;
        assume
A10:      i in Seg (n+1);
then A11:    DigA(Fmin(n+1,m,k) '+' Fmax(n+1,m,k),i)
          = Add(Fmin(n+1,m,k),Fmax(n+1,m,k),i,k) by RADIX_1:def 14
         .= SD_Add_Data(DigA(Fmin(n+1,m,k),i)+DigA(Fmax(n+1,m,k),i),k)
            + SD_Add_Carry(DigA(Fmin(n+1,m,k),i-'1)+DigA(Fmax(n+1,m,k),i-'1))
                                                 by A1,A10,RADIX_1:def 13;
A12:    m + 1 > m by NAT_1:38;
A13:    DigA(Fmin(n+1,m,k),i) = FminDigit(m,k,i) by A10,Def6;
A14:    DigA(Fmax(n+1,m,k),i) = FmaxDigit(m,k,i) by A10,Def8;
A15:    DigA(Fmin(n+1,m+1,k),i) = FminDigit(m+1,k,i) by A10,Def6;
A16:    i >= 1 by A10,FINSEQ_1:3;
          now per cases;
        suppose
A17:      i >= m+1;
            now per cases;
          suppose
A18:        i = m+1;
then A19:        DigA(Fmin(n+1,m,k),i) = FminDigit(m,k,m+1) by A10,Def6
             .= 0 by A1,A12,Def5;
A20:        DigA(Fmax(n+1,m,k),i) = FmaxDigit(m,k,m+1) by A10,A18,Def8
             .= 0 by A1,A12,Def7;
A21:        DigA(Fmin(n+1,m,k),i-'1) = DigA(Fmin(n+1,m,k),m) by A18,BINARITH:39
             .= FminDigit(m,k,m) by A9,Def6
             .= 1 by A1,Def5;
A22:        DigA(Fmax(n+1,m,k),i-'1) = DigA(Fmax(n+1,m,k),m) by A18,BINARITH:39
             .= FmaxDigit(m,k,m) by A9,Def8
             .= Radix(k) - 1 by A1,Def7;
A23:        DigA(Fmin(n+1,m+1,k),i) = FminDigit(m+1,k,m+1) by A10,A18,Def6
             .= 1 by A1,Def5;
              DigA(Fmin(n+1,m,k) '+' Fmax(n+1,m,k),i)
              = 0 + SD_Add_Carry(1+(Radix(k)-1)) by A11,A19,A20,A21,A22,RADIX_1
:22
             .= 1 by A1,Th10;
            hence thesis by A23;
          end;
          suppose A24: i <> m + 1;
then A25:        i > m + 1 by A17,REAL_1:def 5;
         i > m by A17,NAT_1:38;
            then i > 1 by A2,AXIOMS:22;
then A26:        i -' 1 in Seg (n+1) by A10,Th2;
             A27: i - 1 > m + 1 - 1 by A25,REAL_1:92;
            then i - 1 > 0 by A2,AXIOMS:22;
then A28:        i -' 1 > m by A27,BINARITH:def 3;
A29:        DigA(Fmin(n+1,m,k),i) = 0
               by A1,A12,A13,A17,Def5;
A30:        DigA(Fmax(n+1,m,k),i) = 0 by A1,A12,A14,A17,Def7;
A31:        DigA(Fmin(n+1,m,k),i-'1) = FminDigit(m,k,i-'1) by A26,Def6
             .= 0 by A1,A28,Def5;
A32:        DigA(Fmax(n+1,m,k),i-'1) = FmaxDigit(m,k,i-'1) by A26,Def8
             .= 0 by A1,A28,Def7;
         DigA(Fmin(n+1,m+1,k),i) = 0 by A1,A15,A24,Def5;
            hence thesis by A11,A29,A30,A31,A32,RADIX_1:21,22;
          end;
          end;
          hence thesis;
        end;
        suppose i < m+1;
then A33:      i <= m by NAT_1:38;
            now per cases by A16,REAL_1:def 5;
          suppose
A34:        i > 1;
then A35:        m > 1 by A33,AXIOMS:22;
then A36:        m -' 1 in Seg (n+1) by A9,Th2;
A37:        m -' 1 < m by A35,JORDAN5B:1;
              now per cases by A33,REAL_1:def 5;
            suppose
A38:          i = m;
then A39:          DigA(Fmax(n+1,m,k),i) = Radix(k) - 1 by A1,A14,Def7;
A40:          DigA(Fmin(n+1,m,k),i-'1) = FminDigit(m,k,m-'1) by A36,A38,Def6
               .= 0 by A1,A37,Def5;
A41:          DigA(Fmax(n+1,m,k),i-'1) = FmaxDigit(m,k,m-'1) by A36,A38,Def8
               .= 0 by A1,A37,Def7;
A42:          DigA(Fmin(n+1,m+1,k),i) = FminDigit(m+1,k,m) by A10,A38,Def6
               .= 0 by A1,A12,Def5;
                DigA(Fmin(n+1,m,k) '+' Fmax(n+1,m,k),i)
                = SD_Add_Data(1 + (Radix(k) - 1),k) + 0 by A1,A11,A13,A38,A39,
A40,A41,Def5,RADIX_1:21
               .= 0 by A1,Th11;
              hence thesis by A42;
            end;
            suppose
A43:          i < m;
              A44: i -' 1 < i by A16,JORDAN5B:1;
then i -' 1 < m by A43,AXIOMS:22;
then A45:          i -' 1 <= n+1 by A3,AXIOMS:22;
                i -' 1 >= 1 by A34,JORDAN3:12;
then A46:          i -' 1 in Seg (n+1) by A45,FINSEQ_1:3;
A47:          DigA(Fmax(n+1,m,k),i) = 0 by A1,A14,A43,Def7;
A48:          DigA(Fmin(n+1,m,k),i-'1)
                = FminDigit(m,k,i-'1) by A46,Def6
               .= 0 by A1,A43,A44,Def5;
A49:          DigA(Fmax(n+1,m,k),i-'1)
                = FmaxDigit(m,k,i-'1) by A46,Def8
               .= 0 by A1,A43,A44,Def7;
              A50: i < m + 1 by A43,NAT_1:38;
                DigA(Fmin(n+1,m,k) '+' Fmax(n+1,m,k),i)
                = SD_Add_Data(0+0,k) + SD_Add_Carry(0+0) by A1,A11,A13,A43,A47,
A48,A49,Def5
               .= 0 + 0 by RADIX_1:21,22;
              hence thesis by A1,A15,A50,Def5;
            end;
            end;
            hence thesis;
          end;
          suppose
         i = 1;
then A51:        i -' 1 = 0 by NAT_2:10;
then A52:        DigA(Fmax(n+1,m,k),i-'1) = 0 by RADIX_1:def 3;
              now per cases by A33,REAL_1:def 5;
            suppose
A53:          i < m;
then A54:          DigA(Fmin(n+1,m,k),i) = 0 by A1,A13,Def5;
A55:          DigA(Fmax(n+1,m,k),i) = 0 by A1,A14,A53,Def7;
              A56: i < m + 1 by A53,NAT_1:38;
                DigA(Fmin(n+1,m,k) '+' Fmax(n+1,m,k),i)
                = SD_Add_Data(0+0,k) + SD_Add_Carry(0+0) by A11,A51,A52,A54,A55
,RADIX_1:def 3
               .= 0 + 0 by RADIX_1:21,22;
              hence thesis by A1,A15,A56,Def5;
            end;
            suppose
A57:          i = m;
then A58:          DigA(Fmin(n+1,m,k),i) = 1 by A1,A13,Def5;
A59:          DigA(Fmax(n+1,m,k),i) = Radix(k) - 1 by A1,A14,A57,Def7;
              A60: i < m + 1 by A57,NAT_1:38;
                DigA(Fmin(n+1,m,k) '+' Fmax(n+1,m,k),i)
                = SD_Add_Data(1 + (Radix(k) - 1),k) + 0 by A11,A51,A52,A58,A59,
RADIX_1:21,def 3
               .= 0 by A1,Th11;
              hence thesis by A1,A15,A60,Def5;
            end;
            end;
            hence thesis;
          end;
          end;
          hence thesis;
        end;
        end;
        hence thesis;
      end;
      hence thesis by A4,A8,Th12;
end;

