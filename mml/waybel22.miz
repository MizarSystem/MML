:: Representation theorem for free continuous lattices
::  by Piotr Rudnicki
::
:: Received July 21, 1998
:: Copyright (c) 1998 Association of Mizar Users

environ

 vocabularies BHSP_3, WAYBEL_0, LATTICES, TARSKI, ORDINAL2, QUANTAL1, YELLOW_1,
      OPPCAT_1, WAYBEL16, FUNCT_1, YELLOW_0, RELAT_1, LATTICE3, WAYBEL_5,
      WELLORD2, FILTER_0, WELLORD1, BOOLE, CAT_1, SUBSET_1, SETFAM_1, CARD_1,
      SEQM_3, AMI_1, ZF_REFLE, PBOOLE, FUNCOP_1, PRALG_1, YELLOW_2, FUNCT_6,
      CARD_3, FRAENKEL, WAYBEL22, ORDERS_1, NAT_1;
 notations TARSKI, XBOOLE_0, ZFMISC_1, SUBSET_1, SETFAM_1, RELAT_1, FUNCT_1,
      RELSET_1, PARTFUN1, FUNCT_2, FUNCT_6, PRALG_3, STRUCT_0, WELLORD1,
      CARD_1, CARD_3, ORDERS_2, LATTICE3, PBOOLE, PRE_CIRC, FRAENKEL, YELLOW_0,
      YELLOW_1, YELLOW_2, YELLOW_7, WAYBEL_0, WAYBEL_1, WAYBEL_3, WAYBEL_5,
      WAYBEL16;
 constructors SETFAM_1, DOMAIN_1, TOLER_1, ORDERS_3, PRALG_3, WAYBEL_1,
      WAYBEL_5, WAYBEL_8, WAYBEL16;
 registrations XBOOLE_0, SUBSET_1, SETFAM_1, RELSET_1, FUNCT_2, FUNCOP_1,
      FRAENKEL, CARD_3, PBOOLE, STRUCT_0, LATTICE3, YELLOW_0, PRALG_3,
      WAYBEL_0, YELLOW_1, WAYBEL_5, YELLOW_7, WAYBEL_8, WAYBEL16;
 requirements SUBSET, BOOLE;
 definitions TARSKI, FUNCT_1, ORDERS_3, LATTICE3, WELLORD2, YELLOW_0, WAYBEL_0,
      STRUCT_0;
 theorems TARSKI, CARD_1, ZFMISC_1, SETFAM_1, RELAT_1, FUNCT_1, FUNCT_2,
      FUNCT_3, FUNCT_4, FUNCT_6, FUNCOP_1, WELLORD1, WELLORD2, CARD_3,
      PRE_TOPC, LATTICE3, PBOOLE, YELLOW_0, YELLOW_1, YELLOW_2, WAYBEL_0,
      WAYBEL_1, WAYBEL_5, WAYBEL11, WAYBEL13, WAYBEL14, WAYBEL15, WAYBEL16,
      WAYBEL17, RELSET_1, WAYBEL_4, WAYBEL20, XBOOLE_0, XBOOLE_1;
 schemes FUNCT_1, FUNCT_2, MSSUBFAM, YELLOW_3;

begin :: Preliminaries

Lm1:
for L being complete LATTICE, X being set
 st X c= bool the carrier of L
  holds "/\"(union X, L) = "/\"({inf Y where Y is Subset of L: Y in X}, L)
proof let L be complete LATTICE, X be set such that
A1: X c= bool the carrier of L;
   defpred P[Subset of L] means $1 in X;
   set XX = {Z where Z is Subset of L : P[Z]};
   A2: now let x be set;
    hereby assume x in XX; then consider Z being Subset of L such that
    A3: x = Z & Z in X;
     thus x in X by A3;
    end;
    assume A4: x in X;
     then reconsider x' = x as Subset of L by A1;
          x' in XX by A4;
    hence x in XX;
   end;
       "/\"({"/\"(Y, L) where Y is Subset of L: P[Y]}, L) = "/\"(union XX, L)
   from YELLOW_3:sch 3;
 hence "/\"(union X, L) = "/\"({inf Y where Y is Subset of L: Y in X}, L)
   by A2,TARSKI:2;
end;

Lm2:
for L being complete LATTICE, X being set
 st X c= bool the carrier of L
  holds "\/"(union X, L) = "\/"({sup Y where Y is Subset of L: Y in X}, L)
proof let L be complete LATTICE, X be set such that
A1: X c= bool the carrier of L;
   defpred P[set] means $1 in X;
   set XX = {Z where Z is Subset of L : P[Z]};
   A2: now let x be set;
    hereby assume x in XX; then consider Z being Subset of L such that
    A3: x = Z & Z in X;
     thus x in X by A3;
    end;
    assume A4: x in X;
     then reconsider x' = x as Subset of L by A1;
          x' in XX by A4;
    hence x in XX;
   end;
       "\/"({"\/"(Y, L) where Y is Subset of L: P[Y]}, L) = "\/"(union XX, L)
   from YELLOW_3:sch 5;
 hence "\/"(union X, L) = "\/"
({sup Y where Y is Subset of L: Y in X}, L) by A2,TARSKI:2;
end;

theorem Th1: :: cf. WAYBEL13:9
for L being upper-bounded Semilattice,
    F being non empty directed Subset of InclPoset Filt L
 holds sup F = union F
proof let L be upper-bounded Semilattice,
          F be non empty directed Subset of InclPoset Filt L;
      Filt L = Ids (L opp) by WAYBEL16:7;
 hence sup F = union F by WAYBEL13:9;
end;

theorem Th2:
 for L, S, T being complete (non empty Poset),
     f being CLHomomorphism of L, S, g being CLHomomorphism of S, T
  holds g*f is CLHomomorphism of L, T
proof let L, S, T be complete (non empty Poset),
          f be CLHomomorphism of L, S, g be CLHomomorphism of S, T;
A1: f is infs-preserving & g is infs-preserving &
    f is directed-sups-preserving & g is directed-sups-preserving
       by WAYBEL16:def 1;
then A2: g*f is infs-preserving by WAYBEL20:26;
        g*f is directed-sups-preserving by A1,WAYBEL20:29;
 hence g*f is CLHomomorphism of L, T by A2,WAYBEL16:def 1;
end;

theorem Th3:
 for L being non empty RelStr holds id L is infs-preserving
proof let L be non empty RelStr;
 let X be Subset of L;
 assume
A1: ex_inf_of X, L; set f = id L;
A2: f.:X = X by FUNCT_1:162;
 thus ex_inf_of f.:X, L by A1,FUNCT_1:162;
 thus inf (f.:X) = f.inf X by A2,FUNCT_1:35;
end;

theorem Th4:
 for L being non empty RelStr holds id L is directed-sups-preserving
proof let L be non empty RelStr;
 let X be Subset of L such that X is non empty directed; assume
A1: ex_sup_of X, L; set f = id L;
A2: f.:X = X by FUNCT_1:162;
  thus ex_sup_of f.:X, L by A1,FUNCT_1:162;
  thus sup (f.:X) = f.sup X by A2,FUNCT_1:35;
end;

theorem Th5:
 for L being complete (non empty Poset) holds id L is CLHomomorphism of L, L
proof let L be complete (non empty Poset);
A1: id L is directed-sups-preserving by Th4;
        id L is infs-preserving by Th3;
 hence id L is CLHomomorphism of L, L by A1,WAYBEL16:def 1;
end;

theorem Th6:
 for L being upper-bounded with_infima non empty Poset
  holds InclPoset Filt L is CLSubFrame of BoolePoset the carrier of L
proof let L be upper-bounded with_infima non empty Poset;
 set cL = the carrier of L; set BP = BoolePoset cL;
 set cBP = the carrier of BP; set rBP = the InternalRel of BP;
 set IP = InclPoset Filt L; set cIP = the carrier of IP;
 set rIP = the InternalRel of IP;
  A1: BoolePoset cL = InclPoset bool cL by YELLOW_1:4;
      A2: InclPoset bool cL = RelStr(#bool cL, RelIncl bool cL#)
           by YELLOW_1:def 1;
    A3: InclPoset Filt L = RelStr(#Filt L, RelIncl Filt L#)
           by YELLOW_1:def 1;
then A4: field rIP = Filt L by WELLORD2:def 1;
A5: Filt L c= bool cL proof let x be set; assume x in Filt L;
      then consider X being Filter of L such that
    A6: x = X;
      thus x in bool cL by A6;
    end;
 A7: cIP c= cBP proof let x be set; assume x in cIP;
       then consider X being Filter of L such that
    A8: x = X by A3;
     thus x in cBP by A1,A2,A8;
    end;
       rIP c= rBP proof let p be set; assume
   A9: p in rIP;
       then consider x, y being set such that
   A10: p = [x, y] by RELAT_1:def 1;
   A11: x in field rIP & y in field rIP by A9,A10,RELAT_1:30;
       then consider X being Filter of L such that
   A12: x = X by A4;
       consider Y being Filter of L such that
   A13: y = Y by A4,A11;
            X c= Y by A3,A4,A9,A10,A11,A12,A13,WELLORD2:def 1;
   hence p in rBP by A1,A2,A10,A12,A13,WELLORD2:def 1;
  end;
 then reconsider IP as SubRelStr of BP by A7,YELLOW_0:def 13;
        now let p be set;
   A14: rBP|_2 cIP = rBP /\ [:cIP, cIP:] by WELLORD1:def 6;
    hereby assume
   A15: p in rIP;
       then consider x, y being set such that
   A16: p = [x, y] by RELAT_1:def 1;
   A17: x in field rIP & y in field rIP by A15,A16,RELAT_1:30;
       then consider X being Filter of L such that
   A18: x = X by A4;
       consider Y being Filter of L such that
   A19: y = Y by A4,A17;
         X c= Y by A3,A4,A15,A16,A17,A18,A19,WELLORD2:def 1;
   then p in rBP by A1,A2,A16,A18,A19,WELLORD2:def 1;
     hence p in rBP|_2 cIP by A14,A15,XBOOLE_0:def 3;
    end;
    assume p in rBP|_2 cIP;
   then A20: p in rBP & p in [:cIP, cIP:] by A14,XBOOLE_0:def 3;
       then consider x, y being set such that
   A21: x in cIP & y in cIP & p = [x, y] by ZFMISC_1:def 2;
       consider X being Filter of L such that
   A22: x = X by A3,A21;
       consider Y being Filter of L such that
   A23: y = Y by A3,A21;
            x c= y by A1,A2,A20,A21,A22,A23,WELLORD2:def 1;
    hence p in rIP by A3,A21,WELLORD2:def 1;
  end;
  then rIP = rBP|_2 cIP by TARSKI:2;
 then reconsider IP as full SubRelStr of BP by YELLOW_0:def 14;
A24: IP is infs-inheriting proof let X be Subset of IP such that
            ex_inf_of X, BP;
     set sX = "/\"(X, BP);
    per cases;
    suppose X is empty;
    then A25:  "/\"(X, BP) = Top BP
                  .= cL by YELLOW_1:19;
              [#]L = cL;
     hence "/\"(X, BP) in the carrier of IP by A3,A25;
    end;
    suppose A26: X is non empty;
         reconsider X' = X as Subset of BP by A1,A2,A3,A5,XBOOLE_1:1;
         reconsider F = X as Subset-Family of cL by A3,A5,XBOOLE_1:1;
    A27: inf X' = meet X by A26,YELLOW_1:20;
        reconsider sX as Subset of L by A2,YELLOW_1:4;
             for Y being set st Y in X holds Top L in Y proof
         let Y be set;
         assume Y in X;
         then Y in Filt L by A3;
         then consider Z being Filter of L such that
     A28: Y = Z;
         thus Top L in Y by A28,WAYBEL_4:22;
        end;
    then A29: sX is non empty by A26,A27,SETFAM_1:def 1;
    A30: for X being Subset of L st X in F holds X is upper filtered proof
         let X be Subset of L such that
        A31: X in F;    X in Filt L by A3,A31;
            then consider Y being Filter of L such that
        A32: X = Y;
         thus X is upper filtered by A32;
        end;
        then for X being Subset of L st X in F holds X is upper;
    then A33: sX is upper by A27,YELLOW_2:39;
             sX is filtered by A27,A30,YELLOW_2:41;
      hence "/\"(X, BP) in the carrier of IP by A3,A29,A33;
   end;
   end;
       IP is directed-sups-inheriting proof
   let X be directed Subset of IP such that
  A34: X <> {} & ex_sup_of X, BP;
     set sX = "\/"(X, BP);
         reconsider X' = X as Subset of BP by A1,A2,A3,A5,XBOOLE_1:1;
         reconsider F = X as Subset-Family of cL by A3,A5,XBOOLE_1:1;
    A35: sup X' = union X by YELLOW_1:21;
        reconsider sX as Subset of L by A2,YELLOW_1:4;
         consider Y being set such that
     A36: Y in X by A34,XBOOLE_0:def 1;
              Y in Filt L by A3,A36;
         then consider Z being Filter of L such that
     A37: Y = Z;
             Top L in Y by A37,WAYBEL_4:22;
    then A38: sX is non empty by A35,A36,TARSKI:def 4;
    A39: for X being Subset of L st X in F holds X is upper filtered proof
         let X be Subset of L;
         assume X in F;
            then X in Filt L by A3;
            then consider Y being Filter of L such that
        A40: X = Y;
         thus X is upper filtered by A40;
        end;
        then for X being Subset of L st X in F holds X is upper;
    then A41: sX is upper by A35,WAYBEL_0:28;
    A42: for X being Subset of L st X in F holds X is filtered by A39;
             for P, R being Subset of L st P in F & R in F
          ex Z being Subset of L st Z in F & P \/ R c= Z proof
          let P, R be Subset of L; assume
        A43: P in F & R in F;
           then reconsider P' = P, R' = R as Element of IP;
           consider Z being Element of IP such that
        A44: Z in X & P' <= Z & R' <= Z by A43,WAYBEL_0:def 1;
                 Z in the carrier of IP by A44;
           then consider Z' being Filter of L such that
        A45: Z' = Z by A3;
          take Z';
          thus Z' in F by A44,A45;
                 P' c= Z & R' c= Z by A44,YELLOW_1:3;
          hence P \/ R c= Z' by A45,XBOOLE_1:8;
        end;
        then sX is filtered by A35,A42,WAYBEL_0:47;
   hence "\/"(X,BP) in the carrier of IP by A3,A38,A41;
  end;
 hence InclPoset Filt L is CLSubFrame of BP by A24;
end;

registration
 let L be upper-bounded with_infima non empty Poset;
 cluster InclPoset Filt L -> continuous;
 coherence proof
        InclPoset Filt L is CLSubFrame of BoolePoset the carrier of L by Th6;
  hence InclPoset Filt L is continuous by WAYBEL_5:28;
 end;
end;

registration
 let L be upper-bounded non empty Poset;
 cluster -> non empty Element of InclPoset Filt L;
 coherence proof let x be Element of InclPoset Filt L;
        InclPoset Filt L = RelStr(#Filt L, RelIncl Filt L#) by YELLOW_1:def 1;
   then x in Filt L;
   then consider X being Filter of L such that
A1: x = X;
  thus x is non empty by A1;
 end;
end;

begin :: Free generators of continuous lattices

definition :: replaces :: WAYBEL16:def 2
 let S be continuous complete (non empty Poset);
 let A be set;
 pred A is_FreeGen_set_of S means :Def1:
  for T be continuous complete (non empty Poset)
   for f be Function of A, the carrier of T
    ex h be CLHomomorphism of S, T st
     h|A = f & for h' being CLHomomorphism of S,T st h'|A = f holds h' = h;
end;

theorem Th7:
 for S being continuous complete (non empty Poset), A being set
  st A is_FreeGen_set_of S holds A is Subset of S
proof let S be continuous complete (non empty Poset), A be set such that
A1: A is_FreeGen_set_of S;
  consider T being continuous complete (non empty Poset);
  consider f being Function of A, the carrier of T;
  consider h being CLHomomorphism of S, T such that
A2: h|A = f and
        for h' being CLHomomorphism of S, T st h'|A = f holds h' = h by A1,Def1
;
          dom (h|A) = dom h /\ A by RELAT_1:90;
 hence A is Subset of S by A2,FUNCT_2:def 1;
end;

theorem Th8:
 for S being continuous complete (non empty Poset), A being set
  st A is_FreeGen_set_of S
   for h' being CLHomomorphism of S, S st h'|A = id A holds h' = id S
proof let S be continuous complete (non empty Poset), A be set such that
A1: A is_FreeGen_set_of S; set L = S;
   A2: A is Subset of L by A1,Th7;
         dom id A = A & rng id A = A by RELAT_1:71;
   then reconsider f = id A as Function of A,the carrier of L
      by A2,FUNCT_2:def 1,RELSET_1:11;
   consider h being CLHomomorphism of L, L such that
        h|A = f and
A3: for h' being CLHomomorphism of L,L st h'|A = f holds h' = h by A1,Def1;
 let h' be CLHomomorphism of S, S such that
A4: h'|A = id A;
A5: id L is CLHomomorphism of L, L by Th5;
A6: (id L)|A = id A by A2,FUNCT_3:1;
 thus h' = h by A3,A4
        .= id L by A3,A5,A6;
end;

begin :: Representation theorem for free continuous lattices

  reserve X for set,
          F for Filter of BoolePoset X,
          x for Element of BoolePoset X,
          z for Element of X;

definition :: See proof of Theorem 4.17, p. 90
 let X;
 func FixedUltraFilters X -> Subset-Family of BoolePoset X equals
    { uparrow x : ex z st x = {z} };
 coherence proof
  set FUF = { uparrow x where x is Element of BoolePoset X :
       ex y being Element of X st x = {y} };
        FUF c= bool the carrier of BoolePoset X proof let z be set; assume
         z in FUF; then consider x being Element of BoolePoset X such that
   A1: z = uparrow x & ex y being Element of X st x = {y};
    thus z in bool the carrier of BoolePoset X by A1;
   end;
  hence FUF is Subset-Family of BoolePoset X;
 end;
end;

theorem Th9:
 FixedUltraFilters X c= Filt BoolePoset X
proof
  let F be set; assume F in FixedUltraFilters X;
   then consider x being Element of BoolePoset X such that
A1: F = uparrow x and
        ex y being Element of X st x = {y};
 thus F in Filt BoolePoset X by A1;
end;

theorem Th10:
 Card FixedUltraFilters X = Card X
proof set FUF = { uparrow x : ex z st x = {z} };
  A1: BoolePoset X = InclPoset bool X by YELLOW_1:4;
      A2: InclPoset bool X = RelStr(#bool X, RelIncl bool X#)
           by YELLOW_1:def 1;
then A3: the carrier of BoolePoset X = bool X by YELLOW_1:4;
       X,FUF are_equipotent proof
   defpred P[set, set] means
    ex y being Element of X, x being Element of BoolePoset X
     st x = {y} & $1 = y & $2 = uparrow x;
A4: for x,y1,y2 being set st x in X & P[x,y1] & P[x,y2] holds y1 = y2;
A5: for x being set st x in X ex y being set st P[x,y] proof
     let x be set; assume
   A6: x in X;
       then reconsider x' = x as Element of X;
       reconsider bx = {x} as Element of BoolePoset X by A1,A2,A6,ZFMISC_1:37;
     take uparrow bx; take x'; take bx; thus thesis;
    end;
   consider f being Function such that
A7: dom f = X & for x being set st x in X holds P[x, f.x] from FUNCT_1:sch 2
(A4,A5);
   take f;
   thus f is one-to-one proof
    let x1, x2 be set such that
 A8: x1 in dom f & x2 in dom f and
 A9: f.x1 = f.x2;
     consider x1' being Element of X, bx1 being Element of BoolePoset X
        such that
 A10: bx1 = {x1'} & x1 = x1' & f.x1 = uparrow bx1 by A7,A8;
     consider x2' being Element of X, bx2 being Element of BoolePoset X
        such that
 A11: bx2 = {x2'} & x2 = x2' & f.x2 = uparrow bx2 by A7,A8;
          bx1 = bx2 by A9,A10,A11,WAYBEL_0:20;
    hence x1 = x2 by A10,A11,ZFMISC_1:6;
   end;
   thus dom f = X by A7;
         now let z be set;
     hereby assume z in rng f; then consider x1 being set such that
     A12: x1 in dom f & z = f.x1 by FUNCT_1:def 5;
         consider x1' being Element of X, bx1 being Element of BoolePoset X
        such that
     A13: bx1 = {x1'} & x1 = x1' & f.x1 = uparrow bx1 by A7,A12;
      thus z in FUF by A12,A13;
     end;
     assume z in FUF;
         then consider bx being Element of BoolePoset X such that
     A14: z = uparrow bx & ex y being Element of X st bx = {y};
         consider y being Element of X such that
     A15: bx = {y} by A14;
     A16: y in X by A3,A15,ZFMISC_1:37;
         then consider x1' being Element of X, bx1 being Element of BoolePoset
X
               such that
     A17: bx1 = {x1'} & y = x1' & f.y = uparrow bx1 by A7;
     thus z in rng f by A7,A14,A15,A16,A17,FUNCT_1:def 5;
    end;
   hence rng f = FUF by TARSKI:2;
  end;
 hence Card FixedUltraFilters X = Card X by CARD_1:21;
end;

theorem Th11:
F = "\/"({"/\"({uparrow x : ex z st x = {z} & z in Y},
           InclPoset Filt BoolePoset X) where Y is Subset of X : Y in F},
        InclPoset Filt BoolePoset X)
proof set BP = BoolePoset X; set IP = InclPoset Filt BP;
 set cIP = the carrier of IP;
 set Xs = {"/\"({uparrow x : ex z st x = {z} & z in Y }, IP
               ) where Y is Subset of X : Y in F};
 set RS = "\/"(Xs, IP);
     A1: InclPoset Filt BP = RelStr(#Filt BP, RelIncl Filt BP#)
             by YELLOW_1:def 1;
A2: the carrier of BP = the carrier of LattPOSet BooleLatt X
         by YELLOW_1:def 2
  .= bool X by LATTICE3:def 1;
A3: Xs c= cIP proof let p be set; assume p in Xs;
     then consider YY being Subset of X such that
    A4: p = "/\"({uparrow x : ex z st x = {z} & z in YY}, IP) and YY in F;
     thus p in cIP by A4;
    end;
         now consider YY being set such that
    A5: YY in F by XBOOLE_0:def 1;
           "/\"({uparrow x : ex z st x = {z} & z in YY}, IP) in Xs by A2,A5;
     hence Xs is non empty;
    end;
 then reconsider Xs' = Xs as non empty Subset of IP by A3;
A6: ex_sup_of Xs', IP by YELLOW_0:17;
      F in Filt BP;
  then reconsider F' = F as Element of IP by A1;
        F c= RS proof let p be set; assume
   A7: p in F;
       then reconsider Y = p as Element of F;
       set Xsi = {uparrow x where x is Element of BP :
                 ex z being Element of X st x = {z} & z in Y};
   A8: "/\"(Xsi, IP) in Xs by A2;
    per cases;
    suppose Xsi is empty;
    then A9: "/\"(Xsi, IP) = Top IP .= bool X by
WAYBEL16:15;
             Xs' is_<=_than RS by A6,YELLOW_0:def 9;
        then "/\"(Xsi, IP) <= RS by A8,LATTICE3:def 9;
    then A10: bool X c= RS by A9,YELLOW_1:3;
             p in the carrier of BP by A7;
     hence p in RS by A2,A10;
    end;
    suppose A11: Xsi is non empty;
             Xsi c= cIP proof let r be set; assume r in Xsi;
          then consider xz being Element of BP such that
        A12: r = uparrow xz and
                  ex z being Element of X st xz = {z} & z in Y;
         thus r in cIP by A1,A12;
        end;
       then reconsider Xsi as non empty Subset of IP by A11;
   A13: "/\"(Xsi, IP) = meet Xsi by WAYBEL16:10;
            for yy being set st yy in Xsi holds Y in yy proof
         let yy be set; assume yy in Xsi;
         then consider r being Element of BP such that
       A14: yy = uparrow r and
       A15: ex z being Element of X st r = {z} & z in Y;
           reconsider Y' = Y as Element of BP;
                r c= Y by A15,ZFMISC_1:37; then r <= Y' by YELLOW_1:2;
         hence Y in yy by A14,WAYBEL_0:18;
       end; then Y in meet Xsi by SETFAM_1:def 1;
   then A16: p in union Xs by A8,A13,TARSKI:def 4;
            union Xs' c= RS by A6,WAYBEL16:17;
      hence p in RS by A16;
   end;
   end;
then A17: F' <= RS by YELLOW_1:3;
        Xs is_<=_than F' proof let b be Element of IP; assume b in Xs;
      then consider Y being Subset of X such that
   A18: b = "/\"({uparrow x : ex z st x = {z} & z in Y}, IP) and
   A19: Y in F;
      reconsider Y' = Y as Element of F by A19;
      set Xsi = {uparrow x : ex z st x = {z} & z in Y};
    per cases;
    suppose A20: Y is empty;
           now assume Xsi is non empty; then consider p being set such that
      A21: p in Xsi by XBOOLE_0:def 1;
          consider x being Element of BP such that
               p = uparrow x and
      A22: ex z being Element of X st x = {z} & z in Y by A21;
          consider z being Element of X such that
      A23: x = {z} & z in Y by A22;
       thus contradiction by A20,A23;
      end;
    then A24: "/\"(Xsi, IP) = Top IP .= bool X by
WAYBEL16:15;
             Bottom BP = {} by YELLOW_1:18;
        then uparrow Bottom BP c= F by A19,A20,WAYBEL11:42;
    then bool X c= F by A2,WAYBEL14:10;
     hence b <= F' by A2,A18,A24,XBOOLE_0:def 10;
    end;
    suppose A25: Y is non empty;
    A26: now consider z being set such that
        A27: z in Y by A25,XBOOLE_0:def 1;
            reconsider z as Element of X by A27;
            reconsider x = {z} as Element of BP by A2,A27,ZFMISC_1:37;
    uparrow x in Xsi by A27;
          hence Xsi is non empty;
        end;
             Xsi c= cIP proof let r be set; assume r in Xsi;
          then consider xz being Element of BP such that
        A28: r = uparrow xz and
                  ex z being Element of X st xz = {z} & z in Y;
         thus r in cIP by A1,A28;
        end;
       then reconsider Xsi as non empty Subset of IP by A26;
   A29: "/\"(Xsi, IP) = meet Xsi by WAYBEL16:10;
            b c= F' proof let yy be set; assume
       A30:  yy in b;
                b in Filt BP by A1;
           then consider bf being Filter of BP such that
       A31: b = bf;
           reconsider yy' = yy as Element of bf by A30,A31;
           reconsider yy' as Element of BP;
       A32: uparrow Y' c= F' by WAYBEL11:42;
                Y c= yy' proof let zz be set; assume
         A33: zz in Y;
             then reconsider z = zz as Element of X;
             reconsider xz = {z} as Element of BP by A2,A33,ZFMISC_1:37;
    uparrow xz in Xsi by A33;
             then yy in uparrow xz by A18,A29,A30,SETFAM_1:def 1; then xz <=
yy' by WAYBEL_0:18;
             then {z} c= yy by YELLOW_1:2;
            hence zz in yy' by ZFMISC_1:37;
           end; then Y' <= yy' by YELLOW_1:2;
         then yy in uparrow Y' by WAYBEL_0:18;
        hence yy in F' by A32;
       end;
    hence b <= F' by YELLOW_1:3;
   end;
   end; then RS <= F' by A6,YELLOW_0:def 9;
 hence F = RS by A17,YELLOW_0:def 3;
end;

definition :: See proof of Theorem 4.17, p. 90
 let X; let L be continuous complete (non empty Poset);
 let f be Function of FixedUltraFilters X, the carrier of L;
 func f-extension_to_hom -> Function of InclPoset Filt BoolePoset X, L means
:Def3:
 for Fi being Element of InclPoset Filt BoolePoset X holds
  it.Fi = "\/"({"/\"({f.(uparrow x) : ex z st x = {z} & z in Y
                  }, L) where Y is Subset of X : Y in Fi
              }, L);
 existence proof
 set IP = InclPoset Filt BoolePoset X;
 deffunc F(Element of IP) =
    "\/"({"/\"({f.(uparrow x) : ex z st x = {z} & z in Y
                  }, L) where Y is Subset of X : Y in $1
              }, L);
 consider F being Function of the carrier of IP, the carrier of L such that
A1: for Fi being Element of IP holds F.Fi = F(Fi) from FUNCT_2:sch 4;
 reconsider F as Function of IP, L;
 take F;
 thus thesis by A1;
 end;
 uniqueness proof
 set IP = InclPoset Filt BoolePoset X;
  let it1, it2 be Function of IP, L such that
A2: for Fi being Element of IP holds
    it1.Fi = "\/"({"/\"({f.(uparrow x) : ex z st x = {z} & z in Y
                  }, L) where Y is Subset of X : Y in Fi
              }, L) and
A3: for Fi being Element of IP holds
    it2.Fi = "\/"({"/\"({f.(uparrow x) : ex z st x = {z} & z in Y
                  }, L) where Y is Subset of X : Y in Fi
              }, L);
    reconsider it1' = it1 as Function of the carrier of IP, the carrier of L;
    reconsider it2' = it2 as Function of the carrier of IP, the carrier of L;
         now let Fi be Element of IP;
    thus it1'.Fi = "\/"({"/\"({f.(uparrow x) : ex z st x = {z} & z in Y
                  }, L) where Y is Subset of X : Y in Fi
              }, L) by A2
               .= it2'.Fi by A3;
    end;
 hence it1 = it2 by FUNCT_2:113;
 end;
end;

theorem
      for L being continuous complete (non empty Poset),
     f being Function of FixedUltraFilters X, the carrier of L
  holds f-extension_to_hom is monotone
proof let L be continuous complete (non empty Poset),
          f be Function of FixedUltraFilters X, the carrier of L;
    let F1, F2 be Element of InclPoset Filt BoolePoset X; assume
       F1 <= F2;
then A1: F1 c= F2 by YELLOW_1:3;
 set F = f-extension_to_hom;
  let FF1, FF2 be Element of L such that
A2: FF1 = F.F1 & FF2 = F.F2;
A3: F.F1 = "\/"({"/\"({f.(uparrow x) : ex z st x = {z} & z in Y
                  }, L) where Y is Subset of X : Y in F1}, L) by Def3;
A4: F.F2 = "\/"({"/\"({f.(uparrow x) : ex z st x = {z} & z in Y
                  }, L) where Y is Subset of X : Y in F2}, L) by Def3;
   set F1s = {"/\"({f.(uparrow x) : ex z st x = {z} & z in Y
                  }, L) where Y is Subset of X : Y in F1};
   set F2s = {"/\"({f.(uparrow x) : ex z st x = {z} & z in Y
                  }, L) where Y is Subset of X : Y in F2 };
A5: ex_sup_of F1s, L by YELLOW_0:17;
A6: ex_sup_of F2s, L by YELLOW_0:17;
        F1s c= F2s proof let s be set; assume s in F1s;
     then consider Y being Subset of X such that
   A7: s = "/\"({f.(uparrow x) : ex z st x = {z} & z in Y}, L) and
   A8: Y in F1;
    thus s in F2s by A1,A7,A8;
   end;
 hence FF1 <= FF2 by A2,A3,A4,A5,A6,YELLOW_0:34;
end;

theorem Th13:
 for L being continuous complete (non empty Poset),
     f being Function of FixedUltraFilters X, the carrier of L
   holds (f-extension_to_hom).Top (InclPoset Filt BoolePoset X) = Top L
proof let L be continuous complete (non empty Poset),
          f be Function of FixedUltraFilters X, the carrier of L;
 set IP = InclPoset Filt BoolePoset X;
 set F = f-extension_to_hom;
   reconsider T = Top IP as Element of IP;
A1: F.T = "\/"({"/\"({f.(uparrow x) : ex z st x = {z} & z in Y
                }, L) where Y is Subset of X : Y in T}, L) by Def3;
A2: T = bool X by WAYBEL16:15;
   reconsider E = {} as Subset of X by XBOOLE_1:2;
   set Z = {"/\"({f.(uparrow x) : ex z st x = {z} & z in Y
                }, L) where Y is Subset of X : Y in T};
   A3: "/\"({f.(uparrow x) : ex z st x = {z} & z in E}, L) in Z by A2;
A4: {f.(uparrow x) : ex z st x = {z} & z in E} = {} proof
     assume not thesis; then consider r being set such that
    A5: r in {f.(uparrow x) : ex z st x = {z} & z in E} by XBOOLE_0:def 1;
      consider x such that r = f.(uparrow x) and
    A6: ex z st x = {z} & z in E by A5;
     thus contradiction by A6;
    end;
        Z is_<=_than "\/"(Z, L) by YELLOW_0:32;
   then Top L <= "\/"(Z, L) by A3,A4,LATTICE3:def 9;
 hence F.Top IP = Top L by A1,WAYBEL15:5;
end;

registration :: See proof of Theorem 4.17, p. 91
 let X; let L be continuous complete (non empty Poset),
     f be Function of FixedUltraFilters X, the carrier of L;
 cluster f-extension_to_hom -> directed-sups-preserving;
 coherence proof
 set IP = InclPoset Filt BoolePoset X;
 set F = f-extension_to_hom;
 let Fs be Subset of IP such that
A1: Fs is non empty directed; assume ex_sup_of Fs, IP;
 thus ex_sup_of F.:Fs, L by YELLOW_0:17;
A2: sup Fs = union Fs by A1,Th1;
 reconsider Fs' = Fs as non empty Subset of IP by A1;
 reconsider sFs = sup Fs as Element of IP;
A3: F.sFs = "\/"({"/\"({f.(uparrow x) : ex z st x = {z} & z in Y
             }, L) where Y is Subset of X : Y in sFs }, L) by Def3;
   set FFs = {"/\"({f.(uparrow x) : ex z st x = {z} & z in Y
                 }, L) where Y is Subset of X : Y in sFs };
  set FFsU = {{"/\"({f.(uparrow x) : ex z st x = {z} & z in Y}, L)
                   where Y is Subset of X : Y in YY
              } where YY is Element of Fs' : not contradiction
             };
   set Zs = {sup Z where Z is Subset of L : Z in FFsU};
        FFsU c= bool the carrier of L proof let r be set; assume r in FFsU;
     then consider YY being Element of Fs' such that
   A4: r = {"/\"({f.(uparrow x) : ex z st x = {z} & z in Y}, L)
                   where Y is Subset of X : Y in YY};
           r c= the carrier of L proof let s be set; assume s in r;
        then consider Y being Subset of X such that
      A5: s = "/\"({f.(uparrow x) : ex z st x = {z} & z in Y}, L) and
               Y in YY by A4;
       thus thesis by A5;
      end;
     hence r in bool the carrier of L;
   end;
then A6: "\/"(union FFsU, L) = "\/"(Zs, L) by Lm2;
        now let p be set;
    hereby assume p in FFs; then consider Y being Subset of X such that
    A7: p = "/\"({f.(uparrow x) : ex z st x = {z} & z in Y}, L) and
    A8: Y in sFs;
        consider YY being set such that
    A9: Y in YY and
    A10: YY in Fs by A2,A8,TARSKI:def 4;
    A11: p in {"/\"({f.(uparrow x) : ex z st x = {z} & z in Y1}, L)
                   where Y1 is Subset of X : Y1 in YY} by A7,A9;
             {"/\"({f.(uparrow x) : ex z st x = {z} & z in Y1}, L)
                   where Y1 is Subset of X : Y1 in YY} in FFsU by A10;
     hence p in union FFsU by A11,TARSKI:def 4;
    end;
    assume p in union FFsU; then consider r being set such that
    A12: p in r and
    A13: r in FFsU by TARSKI:def 4;
        consider YY being Element of Fs' such that
    A14: r = {"/\"({f.(uparrow x) : ex z st x = {z} & z in Y}, L)
                   where Y is Subset of X: Y in YY} by A13;
        consider Y being Subset of X such that
    A15: p = "/\"({f.(uparrow x) : ex z st x = {z} & z in Y}, L) and
    A16: Y in YY by A12,A14;
             Y in sFs by A2,A16,TARSKI:def 4;
    hence p in FFs by A15;
   end;
then A17: FFs = union FFsU by TARSKI:2;
       now let r be set;
   hereby assume r in F.:Fs; then consider YY being set such that
   A18: YY in the carrier of IP and
   A19: YY in Fs and
   A20: F.YY = r by FUNCT_2:115;
      reconsider YY as Element of Fs by A19;
      reconsider YY' = YY as Element of IP by A18;
   A21: F.YY' = "\/"({"/\"({f.(uparrow x) : ex z st x = {z} & z in Y
               }, L) where Y is Subset of X : Y in YY'}, L) by Def3;
      set Zi = {"/\"({f.(uparrow x) : ex z st x = {z} & z in Y}, L)
                 where Y is Subset of X : Y in YY' };
           Zi c= the carrier of L proof let t be set; assume t in Zi;
       then consider Y being Subset of X such that
      A22: t = "/\"({f.(uparrow x) : ex z st x = {z} & z in Y}, L) and
               Y in YY';
       thus t in the carrier of L by A22;
      end;
      then reconsider Zi as Subset of L;
           Zi in FFsU;
    hence r in Zs by A20,A21;
   end;
   assume r in Zs; then consider Z being Subset of L such that
   A23: r = sup Z and
   A24: Z in FFsU;
       consider YY being Element of Fs such that
   A25: Z = {"/\"({f.(uparrow x) : ex z st x = {z} & z in Y}, L)
                   where Y is Subset of X : Y in YY} by A24;
      reconsider YY as Element of Fs';
      reconsider YY' = YY as Element of IP;
        F.YY' = "\/"({"/\"({f.(uparrow x) : ex z st x = {z} & z in Y
               }, L) where Y is Subset of X : Y in YY'}, L) by Def3;
   hence r in F.:Fs by A23,A25,FUNCT_2:43;
  end;
 hence sup (F.:Fs) = F.sup Fs by A3,A6,A17,TARSKI:2;
end;
end;

Lm3:
 for X be with_non-empty_elements set holds
  id X is non-empty ManySortedSet of X;

registration :: See proof of Theorem 4.17, p. 91
 let X; let L be continuous complete (non empty Poset),
     f be Function of FixedUltraFilters X, the carrier of L;
 cluster f-extension_to_hom -> infs-preserving;
 coherence proof
 set BP = BoolePoset X; set IP = InclPoset Filt BP;
 set F = f-extension_to_hom;
 set cIP = the carrier of IP; set cL = the carrier of L;
 set FUF = FixedUltraFilters X;
   A1: InclPoset Filt BP = RelStr(#Filt BP, RelIncl Filt BP#)
      by YELLOW_1:def 1;
  A2: BoolePoset X = InclPoset bool X by YELLOW_1:4;
      A3: InclPoset bool X = RelStr(#bool X, RelIncl bool X#)
           by YELLOW_1:def 1;
then A4: the carrier of BoolePoset X = bool X by YELLOW_1:4;
  let Fs be Subset of IP;
  assume ex_inf_of Fs, IP;
  thus ex_inf_of F.:Fs, L by YELLOW_0:17;
  per cases;
  suppose A5: Fs is empty;
  then A6: "/\"(F.:Fs, L) = Top L by RELAT_1:149;
         "/\"(Fs, IP) = Top IP by A5;
   hence inf (F.:Fs) = F.inf Fs by A6,Th13;
  end;
  suppose Fs is non empty;
   then reconsider Fs' = Fs as non empty Subset of IP;
        now assume  {} in Fs';
      then {} is Element of IP;
    hence contradiction;
   end;
   then Fs' is with_non-empty_elements by SETFAM_1:def 9;
   then reconsider K = id Fs' as non-empty ManySortedSet of Fs' by Lm3;
   defpred P[set, set, set] means
      $1 = "/\"({f.(uparrow x) : ex z st x = {z} & z in $2}, L);
A7: for i be set st i in Fs' holds
     for s be set st s in K.i ex y be set st y in (Fs' --> cL).i &
                     P[y, s, i] proof
     let i be set such that
    A8: i in Fs';
     let s be set such that s in K.i;
     take y = "/\"({f.(uparrow x) : ex z st x = {z} & z in s}, L);
           y in cL;
     hence y in (Fs' --> cL).i by A8,FUNCOP_1:13;
     thus P[y, s, i];
    end;
  consider FD being ManySortedFunction of K, (Fs' --> cL) such that
A9: for i being set st i in Fs' holds
    ex g being Function of K.i, (Fs' --> cL).i st g = FD.i &
     for s being set st s in K.i holds P[g.s, s, i] from MSSUBFAM:sch 1(A7);
A10: dom FD = Fs' by PBOOLE:def 3;
  deffunc FDi(Element of Fs')
   = {"/\"({f.(uparrow x) : ex z st x = {z} & z in Y
                 }, L) where Y is Subset of X : Y in $1};
  defpred rFD[Element of Fs'] means rng (FD.$1) = FDi($1);
A11: for s being Element of Fs' holds rFD[s] proof
    let s be Element of Fs';
          now let t be set;
      hereby assume t in rng (FD.s);
        then consider u being set such that
      A12: u in dom (FD.s) and
      A13: t = (FD.s).u by FUNCT_1:def 5;
      A14: dom (FD.s) = K.s by FUNCT_2:def 1;
          consider g being Function of K.s, (Fs' --> cL).s such that
      A15: g = FD.s and
      A16: for u being set st u in K.s holds P[g.u, u, s] by A9;
      A17: g.u = "/\"({f.(uparrow x) : ex z st x = {z} & z in u}, L)
             by A12,A16;
      A18: K.s = s by FUNCT_1:35;
               s in cIP; then consider FF being Filter of BP such that
      A19: s = FF by A1;
          reconsider u as Subset of X by A3,A12,A14,A18,A19,YELLOW_1:4;
               u in s by A12,A14,FUNCT_1:35;
       hence t in FDi(s) by A13,A15,A17;
      end;
     assume t in FDi(s); then consider Y being Subset of X such that
     A20: t = "/\"({f.(uparrow x) : ex z st x = {z} & z in Y}, L) and
     A21: Y in s;
     A22: dom (FD.s) = K.s by FUNCT_2:def 1;
     A23: K.s = s by FUNCT_1:35;
     A24: Y in dom (FD.s) by A21,A22,FUNCT_1:35;
         consider g being Function of K.s, (Fs' --> cL).s such that
     A25: g = FD.s and
     A26: for u being set st u in K.s holds P[g.u, u, s] by A9;
           g.Y = "/\"({f.(uparrow x) : ex z st x = {z} & z in Y}, L)
             by A21,A23,A26;
     hence t in rng (FD.s) by A20,A24,A25,FUNCT_1:def 5;
     end;
    hence rFD[s] by TARSKI:2;
   end;
   reconsider FD as DoubleIndexedSet of K, L;
        now let r be set;
    hereby assume r in F.:Fs; then consider s being set such that
    A27: s in cIP and
    A28: s in Fs and
    A29: F.s = r by FUNCT_2:115;
        reconsider s' = s as Element of cIP by A27;
    A30: F.s' = "\/"({"/\"({f.(uparrow x) : ex z st x = {z} & z in Y
                         }, L) where Y is Subset of X : Y in s'
                    }, L) by Def3;
        reconsider s as Element of Fs' by A28;
             rFD[s] by A11;
        then r = Sup (FD.s) by A29,A30,YELLOW_2:def 5;
     hence r in rng Sups FD by WAYBEL_5:14;
    end;
    assume r in rng Sups FD;
      then consider s being Element of Fs' such that
    A31: r = Sup (FD.s) by WAYBEL_5:14;
         rFD[s] by A11;
    then F.s = "\/"(rng (FD.s), L) by Def3
           .= Sup (FD.s) by YELLOW_2:def 5;
    hence r in F.:Fs by A31,FUNCT_2:43;
   end;
   then F.:Fs = rng Sups FD by TARSKI:2;
then A32: inf (F.:Fs) = Inf Sups FD by YELLOW_2:def 6;
        for j being Element of Fs' holds rng(FD.j) is directed proof
    let j be Element of Fs';
    let k, m be Element of L; assume
   A33: k in rng(FD.j) & m in rng(FD.j);
       then consider kd being set such that
   A34: kd in dom (FD.j) and
   A35: FD.j.kd = k by FUNCT_1:def 5;
       consider md being set such that
   A36: md in dom (FD.j) and
   A37: FD.j.md = m by A33,FUNCT_1:def 5;
   A38: dom (FD.j) = K.j by FUNCT_2:def 1;
   A39: K.j = j by FUNCT_1:35;
            j in cIP; then consider FF being Filter of BP such that
   A40: j = FF by A1;
       reconsider kd as Element of BP by A34,A38,A39,A40;
       reconsider md as Element of BP by A36,A38,A39,A40;
       consider nd being Element of BP such that
   A41: nd in FF & nd <= kd & nd <= md by A34,A36,A39,A40,WAYBEL_0:def 2;
   A42: rng(FD.j) = FDi(j) by A11;
       set n = FD.j.nd;
            n in rng(FD.j) by A38,A39,A40,A41,FUNCT_1:def 5;
       then consider Y being Subset of X such that
   A43: n = "/\"({f.(uparrow x) : ex z st x = {z} & z in Y}, L) and
             Y in j by A42;
       reconsider n as Element of L by A43;
    take n;
    thus n in rng(FD.j) by A38,A39,A40,A41,FUNCT_1:def 5;
         consider g being Function of K.j, (Fs' --> cL).j such that
    A44: g = FD.j and
    A45: for u being set st u in K.j holds P[g.u, u, j] by A9;
         set kds = {f.(uparrow x) : ex z st x = {z} & z in kd};
    A46: g.kd = "/\"(kds, L) by A34,A45;
         set nds = {f.(uparrow x) : ex z st x = {z} & z in nd};
    A47: g.nd = "/\"(nds, L) by A39,A40,A41,A45;
    A48: nd c= kd by A41,YELLOW_1:2;
    A49: ex_inf_of kds, L by YELLOW_0:17;
    A50: ex_inf_of nds, L by YELLOW_0:17;
              nds c= kds proof let w be set; assume w in nds;
           then consider x such that
         A51: w = f.(uparrow x) and
         A52: ex z st x = {z} & z in nd;
             consider z such that
         A53: x = {z} & z in nd by A52;
           thus w in kds by A48,A51,A53;
         end;
    hence k <= n by A35,A44,A46,A47,A49,A50,YELLOW_0:35;
         set mds = {f.(uparrow x) : ex z st x = {z} & z in md};
    A54: g.md = "/\"(mds, L) by A36,A45;
    A55: nd c= md by A41,YELLOW_1:2;
    A56: ex_inf_of mds, L by YELLOW_0:17;
              nds c= mds proof let w be set; assume w in nds;
           then consider x such that
         A57: w = f.(uparrow x) and
         A58: ex z st x = {z} & z in nd;
             consider z such that
         A59: x = {z} & z in nd by A58;
           thus w in mds by A55,A57,A59;
         end;
    hence m <= n by A37,A44,A47,A50,A54,A56,YELLOW_0:35;
   end;
then A60: Inf Sups FD = Sup Infs Frege FD by WAYBEL_5:19
              .= "\/"(rng Infs Frege FD, L) by YELLOW_2:def 5;
        meet Fs' is Filter of BoolePoset X by WAYBEL16:9;
   then meet Fs' in Filt BP;
   then reconsider mFs = meet Fs' as Element of cIP by A1;
A61: inf Fs' = meet Fs' by WAYBEL16:10;
   set smFs = {"/\"({f.(uparrow x) : ex z st x = {z} & z in Y
                  }, L) where Y is Subset of X : Y in mFs};
A62: F.(meet Fs') = "\/"(smFs, L) by Def3;
        now let r be set;
    reconsider pdFD = product doms FD as non empty functional set;
    reconsider dFFD = product doms FD --> Fs' as ManySortedSet of pdFD;
    reconsider FFD = Frege FD as DoubleIndexedSet of dFFD, L;
 A63: dom FFD = pdFD by PBOOLE:def 3;

  deffunc rFFDs(Element of pdFD) =
     {"/\"({f.(uparrow x) : ex z st x = {z} & z in $1.u}, L)
                          where u is Element of Fs' : u in dom (FFD.$1) };
A64: now let s be Element of pdFD;
    A65: dom FD = dom (FFD.s) by A63,WAYBEL_5:8;
              now let t be set;
          hereby assume t in rng (FFD.s);
            then consider u being set such that
          A66: u in dom (FFD.s) and
          A67: t = FFD.s.u by FUNCT_1:def 5;
          A68: FFD.s.u = (FD.u).(s.u) by A63,A65,A66,WAYBEL_5:9;
              reconsider u as Element of Fs' by A65,A66,PBOOLE:def 3;
              consider g being Function of K.u, (Fs' --> cL).u such that
          A69: g = FD.u and
          A70: for v being set st v in K.u holds P[g.v, v, u] by A9;
                dom (FD.u) = K.u by FUNCT_2:def 1;
          then s.u in K.u by A10,A63,WAYBEL_5:9;
          then g.(s.u) = "/\"({f.(uparrow x) : ex z st x = {z} & z in s.u}, L)
                    by A70;
           hence t in rFFDs(s) by A66,A67,A68,A69;
          end;
           assume t in rFFDs(s);
             then consider u being Element of Fs' such that
          A71: t = "/\"({f.(uparrow x) : ex z st x = {z} & z in s.u}, L) and
          A72: u in dom (FFD.s);
              reconsider u as Element of Fs';
              consider g being Function of K.u, (Fs' --> cL).u such that
          A73: g = FD.u and
          A74: for v being set st v in K.u holds P[g.v, v, u] by A9;
                dom (FD.u) = K.u by FUNCT_2:def 1;
          then s.u in K.u by A10,A63,WAYBEL_5:9;
          then g.(s.u) = "/\"({f.(uparrow x) : ex z st x = {z} & z in s.u}, L)
                    by A74;
           hence t in rng(FFD.s) by A63,A65,A71,A72,A73,WAYBEL_5:9;
         end;
        hence rng (FFD.s) = rFFDs(s) by TARSKI:2;
       end; :: rFFDs
    hereby assume r in rng Infs Frege FD;
        then consider s being Element of pdFD such that
    A75: r = Inf (FFD.s) by WAYBEL_5:14;
    A76: dom FD = dom (FFD.s) by A63,WAYBEL_5:8;
    A77: dom s = dom FD by A63,WAYBEL_5:8;
             union rng s c= X proof let t be set; assume t in union rng s;
          then consider te being set such that
        A78: t in te & te in rng s by TARSKI:def 4;
          consider u being set such that
        A79: u in dom s & te = s.u by A78,FUNCT_1:def 5;
                 FD.u is Function of K.u, cL by A10,A77,A79,WAYBEL_5:6;
         then dom (FD.u) = K.u by FUNCT_2:def 1
                      .= u by A10,A77,A79,FUNCT_1:34;
        then A80: te in u by A63,A77,A79,WAYBEL_5:9;
                 u in cIP by A10,A77,A79; then consider FF being Filter of BP
such
that
        A81: u = FF by A1;
         thus t in X by A4,A78,A80,A81;
        end;
        then reconsider Y = union rng s as Subset of X;
        set Ys = {f.(uparrow x) : ex z st x = {z} & z in Y};
             now let Z be set; assume
        A82: Z in Fs';
            then Z in cIP; then consider FF being Filter of BP such that
        A83: Z = FF by A1;
                 s.Z in rng s by A10,A77,A82,FUNCT_1:def 5;
        then A84: s.Z c= Y by ZFMISC_1:92;
        A85: s.Z in dom (FD.Z) by A10,A63,A82,WAYBEL_5:9;
                 FD.Z is Function of K.Z, cL by A82,WAYBEL_5:6;
        then A86: dom (FD.Z) = K.Z by FUNCT_2:def 1
                      .= Z by A82,FUNCT_1:34;
            reconsider sZ = s.Z as Element of BP by A2,A3,A84,XBOOLE_1:1;
            reconsider Y' = Y as Element of BP by A3,YELLOW_1:4;
                 sZ <= Y' by A84,YELLOW_1:2;
         hence Y in Z by A83,A85,A86,WAYBEL_0:def 20;
        end;
        then Y in mFs by SETFAM_1:def 1;
    then A87: "/\"(Ys, L) in smFs;
    set idFFDs = {{f.(uparrow x) : ex z st x = {z} & z in s.u}
                  where u is Element of Fs' : u in dom (FFD.s)};
    A88: idFFDs c= bool the carrier of L proof let t be set; assume
               t in idFFDs; then consider u being Element of Fs' such that
        A89: t = {f.(uparrow x) : ex z st x = {z} & z in s.u} and
                 u in dom (FFD.s);
                 t c= cL proof let v be set; assume v in t;
              then consider x such that
            A90: v = f.(uparrow x) and
            A91: ex z st x = {z} & z in s.u by A89;
                consider z such that
            A92: x = {z} and z in s.u by A91;
                     uparrow x in FUF by A92;
             hence v in cL by A90,FUNCT_2:7;
            end;
         hence t in bool cL;
        end;
             now let t be set;
         hereby assume t in rFFDs(s);
              then consider u being Element of Fs' such that
         A93: t = "/\"({f.(uparrow x) : ex z st x = {z} & z in s.u}, L) and
         A94: u in dom (FFD.s);
                 {f.(uparrow x) : ex z st x = {z} & z in s.u} c= cL proof
              let v be set; assume
                     v in {f.(uparrow x) : ex z st x = {z} & z in s.u};
                then consider x such that
            A95: v = f.(uparrow x) and
            A96: ex z st x = {z} & z in s.u;
                consider z such that
            A97: x = {z} and
                     z in s.u by A96;
                     uparrow x in FUF by A97;
             hence v in cL by A95,FUNCT_2:7;
            end;
            then reconsider Y1 ={f.(uparrow x) : ex z st x = {z} & z in s.u}
                    as Subset of L;
                  Y1 in idFFDs by A94;
          hence t in {inf YY where YY is Subset of L : YY in idFFDs} by A93;
         end;
          assume t in {inf YY where YY is Subset of L : YY in idFFDs};
            then consider YY being Subset of L such that
          A98: t = inf YY and
          A99: YY in idFFDs;
              consider u1 being Element of Fs' such that
          A100: YY = {f.(uparrow x) : ex z st x = {z} & z in s.u1} and
          A101: u1 in dom (FFD.s) by A99;
          thus t in rFFDs(s) by A98,A100,A101;
        end;
    then A102: rFFDs(s) = {inf YY where YY is Subset of L : YY in idFFDs}
              by TARSKI:2;
    A103:  "/\"(rng (FFD.s), L) = "/\"(rFFDs(s), L) by A64
      .= "/\"(union idFFDs, L) by A88,A102,Lm1;
              now let t be set;
          hereby assume t in union idFFDs;
              then consider te being set such that
          A104: t in te and
          A105: te in idFFDs by TARSKI:def 4;
              consider u being Element of Fs' such that
          A106: te = {f.(uparrow x) : ex z st x = {z} & z in s.u} and
          A107: u in dom (FFD.s) by A105;
              consider x such that
          A108: t = f.(uparrow x) and
          A109: ex z st x = {z} & z in s.u by A104,A106;
              consider z such that
          A110: x = {z} & z in s.u by A109;
                   s.u in rng s by A76,A77,A107,FUNCT_1:def 5;
              then z in Y by A110,TARSKI:def 4;
           hence t in Ys by A108,A110;
          end;
           assume t in Ys; then consider x such that
          A111: t = f.(uparrow x) and
          A112: ex z st x = {z} & z in Y;
              consider z such that
          A113: x = {z} & z in Y by A112;
              consider ze being set such that
          A114: z in ze & ze in rng s by A113,TARSKI:def 4;
              consider u being set such that
          A115: u in dom s & ze = s.u by A114,FUNCT_1:def 5;
              reconsider u as Element of Fs' by A77,A115,PBOOLE:def 3;
          A116: t in {f.(uparrow x1) where x1 is Element of BP :
                   ex z st x1 = {z} & z in s.u} by A111,A113,A114,A115;
                   {f.(uparrow x1) where x1 is Element of BP :
                    ex z st x1 = {z} & z in s.u} in idFFDs by A76,A77,A115;
          hence t in union idFFDs by A116,TARSKI:def 4;
         end;
         then union idFFDs = Ys by TARSKI:2;
     hence r in smFs by A75,A87,A103,YELLOW_2:def 6;
    end;
    assume r in smFs; then consider Y being Subset of X such that
    A117: r = "/\"({f.(uparrow x) : ex z st x = {z} & z in Y}, L) and
    A118: Y in mFs;
        set s = Fs' --> Y;
        set s' = s;
    A119: dom doms FD = dom FD by FUNCT_6:89 .= dom s by A10,FUNCOP_1:19;
            now let w be set; assume
              w in dom doms FD;
        then A120: w in Fs' by A119,FUNCOP_1:19;
        then A121: (doms FD).w = dom (FD.w) by A10,FUNCT_6:31;
        A122: FD.w is Function of K.w, (Fs' --> cL).w by A120,PBOOLE:def 18;
                 (Fs' --> cL).w = cL by A120,FUNCOP_1:13;
        then A123: dom (FD.w) = K.w by A122,FUNCT_2:def 1 .= w by A120,
FUNCT_1:35;
                 s.w = Y by A120,FUNCOP_1:13;
         hence s.w in (doms FD).w by A118,A120,A121,A123,SETFAM_1:def 1;
        end;
        then reconsider s as Element of pdFD by A119,CARD_3:18;
    A124: Inf (FFD.s) = "/\"(rng (FFD.s), L) by YELLOW_2:def 6;
    A125: rng (FFD.s) = rFFDs(s) by A64;
             now let t be set;
         hereby assume t in rFFDs(s);
           then consider u being Element of Fs' such that
         A126: t = "/\"({f.(uparrow x) : ex z st x = {z} & z in s.u}, L) and
                  u in dom (FFD.s);
                  s.u = Y by FUNCOP_1:13;
          hence t in {r} by A117,A126,TARSKI:def 1;
         end;
         assume t in {r};
         then A127: t = r by TARSKI:def 1;
             consider u being Element of Fs';
         A128: dom FD = dom (FFD.s) by A63,WAYBEL_5:8;
         A129: dom s = dom FD by A63,WAYBEL_5:8;
              A130: s' = s & dom s' = Fs' by FUNCOP_1:19;
                  s.u = Y by FUNCOP_1:13;
         hence t in rFFDs(s) by A117,A127,A128,A129,A130;
        end;
    then A131: {"/\"({f.(uparrow x) : ex z st x = {z} & z in s.u}, L)
                          where u is Element of Fs' : u in dom (FFD.s) }
        = {r} by TARSKI:2;
             "/\"({r}, L) = r by A117,YELLOW_0:39;
    hence r in rng Infs Frege FD by A124,A125,A131,WAYBEL_5:14;
   end;
  hence inf (F.:Fs) = F.inf Fs by A32,A60,A61,A62,TARSKI:2;
 end;
 end;
end;

theorem Th14:
for L being continuous complete (non empty Poset),
    f being Function of FixedUltraFilters X, the carrier of L
 holds f-extension_to_hom | FixedUltraFilters X = f
proof let L be continuous complete (non empty Poset),
          f be Function of FixedUltraFilters X, the carrier of L;
 set FUF = FixedUltraFilters X;
 set BP = BoolePoset X;
 set IP = InclPoset Filt BP;
   A1: InclPoset Filt BP = RelStr(#Filt BP, RelIncl Filt BP#)
      by YELLOW_1:def 1;
A2: the carrier of BP = the carrier of LattPOSet BooleLatt X
         by YELLOW_1:def 2
  .= bool X by LATTICE3:def 1;
 set F = f-extension_to_hom;
       now
       dom F = the carrier of IP by FUNCT_2:def 1;
  then A3: FUF c= dom F by A1,Th9;
   hence FUF = dom (F|FUF) by RELAT_1:91;
   thus FUF = dom f by FUNCT_2:def 1;
   let xf be set; assume
  A4: xf in FUF;
      then consider xx being Element of BoolePoset X such that
  A5: xf = uparrow xx and
  A6: ex y being Element of X st xx = {y};
  A7: (F|FUF).xf = F.xf by A4,FUNCT_1:72;
      reconsider x' = xf as Element of IP by A3,A4,FUNCT_2:def 1
;
  set Xs = {"/\"({f.(uparrow x) : ex z st x = {z} & z in Y }, L)
                    where Y is Subset of X : Y in x' };
  A8: ex_sup_of Xs, L by YELLOW_0:17;
      reconsider FUF' = FUF as non empty Subset-Family of BoolePoset X by A4;
      reconsider xf' = xf as Element of FUF' by A4;
      reconsider f' = f as Function of FUF', the carrier of L;
           f'.xf' is Element of L;
      then reconsider fxf = f.xf' as Element of L;
  A9: Xs is_<=_than fxf proof
       let b be Element of L; assume
           b in Xs;
         then consider Y being Subset of X such that
     A10: b = "/\"({f.(uparrow x) : ex z st x = {z} & z in Y}, L) and
     A11: Y in x';
         set Xsi = {f.(uparrow x) : ex z st x = {z} & z in Y };
         consider y being Element of X such that
     A12: xx = {y} by A6;
         reconsider Y as Element of BoolePoset X by A5,A11;
              xx <= Y by A5,A11,WAYBEL_0:18;
         then xx c= Y by YELLOW_1:2;
         then y in Y by A12,ZFMISC_1:37;
     then A13: fxf in Xsi by A5,A12;
              ex_inf_of Xsi, L by YELLOW_0:17;
         then Xsi is_>=_than b by A10,YELLOW_0:def 10;
       hence b <= fxf by A13,LATTICE3:def 8;
      end;
       for a being Element of L st Xs is_<=_than a holds fxf <= a proof
       let a be Element of L such that
     A14: Xs is_<=_than a;
              xx <= xx;
         then reconsider Y = xx as Element of x' by A5,WAYBEL_0:18;
         set Xsi = {f.(uparrow x) : ex z st x = {z} & z in Y };
         consider y being Element of X such that
     A15: xx = {y} by A6;
              now let p be set;
          hereby assume p in Xsi;
            then consider r being Element of BoolePoset X such that
         A16: p = f.(uparrow r) and
         A17: ex z being Element of X st r = {z} & z in Y;
            consider z being Element of X such that
         A18: r = {z} & z in Y by A17;
                 xx = r by A15,A18,TARSKI:def 1;
           hence p in {fxf} by A5,A16,TARSKI:def 1;
          end;
          assume p in {fxf};
         then A19: p = fxf by TARSKI:def 1;
                  y in Y by A15,TARSKI:def 1;
          hence p in Xsi by A5,A15,A19;
         end;
         then Xsi = {fxf} by TARSKI:2;
      then fxf = "/\"(Xsi, L) & Y in x' by YELLOW_0:39;
         then fxf in Xs by A2;
       hence fxf <= a by A14,LATTICE3:def 9;
      end;
      then f.xf = "\/"(Xs, L) by A8,A9,YELLOW_0:def 9;
   hence (F|FUF).xf = f.xf by A7,Def3;
  end;
 hence F|FUF = f by FUNCT_1:9;
end;

theorem Th15:
for L being continuous complete (non empty Poset),
    f being Function of FixedUltraFilters X, the carrier of L,
    h being CLHomomorphism of InclPoset Filt BoolePoset X, L
 st h | FixedUltraFilters X = f holds h = f-extension_to_hom
proof let L be continuous complete (non empty Poset),
          f be Function of FixedUltraFilters X, the carrier of L,
          h be CLHomomorphism of InclPoset Filt BoolePoset X, L; assume
A1: h | FixedUltraFilters X = f;
 set BP = BoolePoset X; set IP = InclPoset Filt BP;
 set cIP = the carrier of IP; set cL = the carrier of L;
 set F = f-extension_to_hom;
   A2: InclPoset Filt BP = RelStr(#Filt BP, RelIncl Filt BP#)
      by YELLOW_1:def 1;
A3: the carrier of BP = the carrier of LattPOSet BooleLatt X
         by YELLOW_1:def 2
  .= bool X by LATTICE3:def 1;
 reconsider h' = h as Function of cIP, cL;
 reconsider F' = F as Function of cIP, cL;
      now let Fi be Element of cIP;
        Fi in Filt BP by A2;
   then consider FF being Filter of BP such that
 A4: Fi = FF;
 A5: FF = "\/"({"/\"({uparrow x : ex z st x = {z} & z in Y}, IP)
              where Y is Subset of X : Y in FF }, IP) by Th11;
 set Xs = {"/\"({uparrow x : ex z st x = {z} & z in Y}, IP)
              where Y is Subset of X : Y in FF };
 A6: h is infs-preserving & h is directed-sups-preserving by WAYBEL16:def 1;
 A7: Xs c= cIP proof let p be set; assume p in Xs;
     then consider YY being Subset of X such that
    A8: p = "/\"({uparrow x : ex z st x = {z} & z in YY}, IP) and
             YY in FF;
     thus p in cIP by A8;
    end;
         now consider YY being set such that
     A9: YY in FF by XBOOLE_0:def 1;
           "/\"({uparrow x : ex z st x = {z} & z in YY}, IP) in Xs by A3,A9;
     hence Xs is non empty;
    end;
     then reconsider Xs as non empty Subset of IP by A7;
      Xs is directed proof let a, b be Element of IP; assume
   A10: a in Xs & b in Xs;
       then consider Ya being Subset of X such that
   A11: a = "/\"({uparrow x : ex z st x = {z} & z in Ya}, IP) and
   A12: Ya in FF;
       reconsider Ya' = Ya as Element of FF by A12;
       consider Yb being Subset of X such that
   A13: b = "/\"({uparrow x : ex z st x = {z} & z in Yb}, IP) and
   A14: Yb in FF by A10;
       reconsider Yb' = Yb as Element of FF by A14;
       set Xsa = {uparrow x : ex z st x = {z} & z in Ya};
       set Xsb = {uparrow x : ex z st x = {z} & z in Yb};
      per cases;
      suppose Xsa is empty;
      then A15: "/\"(Xsa, IP) = Top IP;
       take a;
       thus a in Xs by A10;
       thus a <= a;
       thus b <= a by A11,A15,YELLOW_0:45;
      end;
      suppose Xsb is empty;
      then A16: "/\"(Xsb, IP) = Top IP;
       take b;
       thus b in Xs by A10;
       thus a <= b by A13,A16,YELLOW_0:45;
       thus b <= b;
      end;
      suppose A17: Xsa is non empty & Xsb is non empty;
             Xsa c= cIP proof let r be set; assume r in Xsa;
          then consider xz being Element of BP such that
        A18: r = uparrow xz and
                  ex z st xz = {z} & z in Ya;
         thus r in cIP by A2,A18;
        end;
       then reconsider Xsa as non empty Subset of IP by A17;
      A19: "/\"(Xsa, IP) = meet Xsa by WAYBEL16:10;
             Xsb c= cIP proof let r be set; assume r in Xsb;
          then consider xz being Element of BP such that
        A20: r = uparrow xz and
                  ex z st xz = {z} & z in Yb;
         thus r in cIP by A2,A20;
        end;
       then reconsider Xsb as non empty Subset of IP by A17;
      A21: "/\"(Xsb, IP) = meet Xsb by WAYBEL16:10;
        consider Yab being Element of BP such that
      A22: Yab in FF and
      A23: Yab <= Ya' and
      A24: Yab <= Yb' by WAYBEL_0:def 2;
        reconsider Yab as Element of FF by A22;
        set c = "/\"({uparrow x : ex z st x = {z} & z in Yab}, IP);
        set Xsc = {uparrow x : ex z st x = {z} & z in Yab};
      thus thesis proof
       per cases;
       suppose Xsc is empty;
      then A25: "/\"(Xsc, IP) = Top IP;
       take c;
       thus c in Xs by A3;
       thus a <= c by A25,YELLOW_0:45;
       thus b <= c by A25,YELLOW_0:45;
       end;
       suppose A26: Xsc is non empty;
             Xsc c= cIP proof let r be set; assume r in Xsc;
          then consider xz being Element of BP such that
        A27: r = uparrow xz and
                  ex z st xz = {z} & z in Yab;
         thus r in cIP by A2,A27;
        end;
       then reconsider Xsc as non empty Subset of IP by A26;
      A28: "/\"(Xsc, IP) = meet Xsc by WAYBEL16:10;
       take c;
       thus c in Xs by A3;
             a c= c proof let d be set; assume
        A29: d in a;
                Xsc c= Xsa proof let r be set; assume r in Xsc;
             then consider xz being Element of BP such that
           A30: r = uparrow xz and
           A31: ex z st xz = {z} & z in Yab;
               consider zz being Element of X such that
           A32: xz = {zz} and
           A33: zz in Yab by A31;
                    Yab c= Ya by A23,YELLOW_1:2;
            hence r in Xsa by A30,A32,A33;
           end;
           then meet Xsa c= meet Xsc by SETFAM_1:7;
         hence d in c by A11,A19,A28,A29;
        end;
       hence a <= c by YELLOW_1:3;
             b c= c proof let d be set; assume
        A34: d in b;
                Xsc c= Xsb proof let r be set; assume r in Xsc;
             then consider xz being Element of BP such that
           A35: r = uparrow xz and
           A36: ex z st xz = {z} & z in Yab;
               consider zz being Element of X such that
           A37: xz = {zz} and
           A38: zz in Yab by A36;
                    Yab c= Yb by A24,YELLOW_1:2;
            hence r in Xsb by A35,A37,A38;
           end;
           then meet Xsb c= meet Xsc by SETFAM_1:7;
         hence d in c by A13,A21,A28,A34;
        end;
       hence b <= c by YELLOW_1:3;
      end;
      end;
     end;
     end;
 then A39: h preserves_sup_of Xs by A6,WAYBEL_0:def 37;
 A40: ex_sup_of Xs, IP by YELLOW_0:17;
  set Xsf = {"/\"({f.(uparrow x) : ex z st x = {z} & z in Y}, L)
                  where Y is Subset of X : Y in FF };
  set FUF = FixedUltraFilters X;
       now let s be set;
   hereby assume s in h.:Xs;
     then consider t being set such that
            t in the carrier of IP and
   A41: t in Xs and
   A42: s = h.t by FUNCT_2:115;
     consider Y being Subset of X such that
   A43: t = "/\"({uparrow x : ex z st x = {z} & z in Y}, IP) and
   A44: Y in FF by A41;
     set Xsi = {uparrow x : ex z st x = {z} & z in Y};
             Xsi c= cIP proof let r be set; assume r in Xsi;
          then consider xz being Element of BP such that
        A45: r = uparrow xz and
                  ex z being Element of X st xz = {z} & z in Y;
         thus r in cIP by A2,A45;
        end;
     then reconsider Xsi as Subset of IP;
   A46: h preserves_inf_of Xsi by A6,WAYBEL_0:def 32;
            ex_inf_of Xsi, IP by YELLOW_0:17;
   then A47: inf (h.:Xsi) = h.inf Xsi by A46,WAYBEL_0:def 30;
     set Xsif = {f.(uparrow x) : ex z st x = {z} & z in Y};
            now let u be set;
        hereby assume u in h.:Xsi;
          then consider v being set such that
                 v in the carrier of IP and
        A48: v in Xsi and
        A49: u = h.v by FUNCT_2:115;
          consider x such that
        A50: v = uparrow x and
        A51: ex z st x = {z} & z in Y by A48;
            consider z such that
        A52: x = {z} & z in Y by A51;
                 v in FUF by A50,A52;
            then h.v = f.v by A1,FUNCT_1:72;
         hence u in Xsif by A49,A50,A51;
        end;
       assume u in Xsif; then consider x such that
       A53: u = f.(uparrow x) and
       A54: ex z st x = {z} & z in Y;
           consider z such that
       A55: x = {z} & z in Y by A54;
       A56: uparrow x in Xsi by A54;
                uparrow x in FUF by A55;
           then h.(uparrow x) = f.(uparrow x) by A1,FUNCT_1:72;
       hence u in h.:Xsi by A53,A56,FUNCT_2:43;
       end;
      then h.:Xsi = Xsif by TARSKI:2;
    hence s in Xsf by A42,A43,A44,A47;
   end;
   assume s in Xsf; then consider Y being Subset of X such that
   A57: s = "/\"({f.(uparrow x) : ex z st x = {z} & z in Y}, L) and
   A58: Y in FF;
     set Xsi = {uparrow x : ex z st x = {z} & z in Y};
             Xsi c= cIP proof let r be set; assume r in Xsi;
          then consider xz being Element of BP such that
        A59: r = uparrow xz and
                  ex z being Element of X st xz = {z} & z in Y;
         thus r in cIP by A2,A59;
        end;
     then reconsider Xsi as Subset of IP;
   A60: h preserves_inf_of Xsi by A6,WAYBEL_0:def 32;
            ex_inf_of Xsi, IP by YELLOW_0:17;
   then A61: inf (h.:Xsi) = h.inf Xsi by A60,WAYBEL_0:def 30;
     set Xsif = {f.(uparrow x) : ex z st x = {z} & z in Y};
   A62: inf Xsi in Xs by A58;
            now let u be set;
        hereby assume u in h.:Xsi;
          then consider v being set such that
                 v in the carrier of IP and
        A63: v in Xsi and
        A64: u = h.v by FUNCT_2:115;
          consider x such that
        A65: v = uparrow x and
        A66: ex z st x = {z} & z in Y by A63;
            consider z such that
        A67: x = {z} & z in Y by A66;
                 v in FUF by A65,A67;
            then h.v = f.v by A1,FUNCT_1:72;
         hence u in Xsif by A64,A65,A66;
        end;
       assume u in Xsif; then consider x such that
       A68: u = f.(uparrow x) and
       A69: ex z st x = {z} & z in Y;
           consider z such that
       A70: x = {z} & z in Y by A69;
       A71: uparrow x in Xsi by A69;
                uparrow x in FUF by A70;
           then h.(uparrow x) = f.(uparrow x) by A1,FUNCT_1:72;
       hence u in h.:Xsi by A68,A71,FUNCT_2:43;
       end;
      then h.:Xsi = Xsif by TARSKI:2;
   hence s in h.:Xs by A57,A61,A62,FUNCT_2:43;
  end;
 then A72: h.:Xs = Xsf by TARSKI:2;
  thus h'.Fi
     = sup (h.:Xs) by A4,A5,A39,A40,WAYBEL_0:def 31
    .= F'.Fi by A4,A72,Def3;
 end;
 hence h = f-extension_to_hom by FUNCT_2:113;
end;

theorem Th16:
 FixedUltraFilters X is_FreeGen_set_of InclPoset Filt BoolePoset X
proof set FUF = FixedUltraFilters X;
 set IP = InclPoset Filt BoolePoset X;
 let L be continuous complete (non empty Poset);
 let f be Function of FUF, the carrier of L;
 reconsider F = f-extension_to_hom as CLHomomorphism of IP, L
  by WAYBEL16:def 1;
 take F;
 thus F|FUF = f by Th14;
 let h' be CLHomomorphism of IP, L;
 assume h'|FUF = f;
 hence h' = F by Th15;
end;

theorem Th17:
 for L, M being continuous complete LATTICE, F, G being set
  st F is_FreeGen_set_of L & G is_FreeGen_set_of M & Card F = Card G
   holds L, M are_isomorphic
proof let L, M be continuous complete LATTICE, Lg, Mg be set such that
A1: Lg is_FreeGen_set_of L and
A2: Mg is_FreeGen_set_of M and
A3: Card Lg = Card Mg;
        Lg,Mg are_equipotent by A3,CARD_1:21; then consider f being Function
   such that
A4: f is one-to-one and
A5: dom f = Lg and
A6: rng f = Mg by WELLORD2:def 4;
   set g = f";
A7: dom g = Mg by A4,A6,FUNCT_1:55;
A8: rng g = Lg by A4,A5,FUNCT_1:55;
    reconsider Lg as Subset of L by A1,Th7;
    reconsider Mg as Subset of M by A2,Th7;
         Mg c= the carrier of M;
    then reconsider f as Function of Lg, the carrier of M
      by A5,A6,FUNCT_2:def 1,RELSET_1:11;
         Lg c= the carrier of L;
    then reconsider g as Function of Mg, the carrier of L
      by A7,A8,FUNCT_2:def 1,RELSET_1:11;
    consider F being CLHomomorphism of L, M such that
A9: F|Lg = f and
         for h' being CLHomomorphism of L, M st h'|Lg = f holds h' = F by A1,
Def1
;
    consider G being CLHomomorphism of M, L such that
A10: G|Mg = g and
         for h' being CLHomomorphism of M, L st h'|Mg = g holds h' = G by A2,
Def1
;
    reconsider GF = G*F as CLHomomorphism of L, L by Th2;
         GF|Lg = G*f by A9,RELAT_1:112
         .= g*f by A6,A10,FUNCT_4:2
         .= id Lg by A4,A5,FUNCT_1:61;
    then A11: GF = id L by A1,Th8;
then A12: F is one-to-one by FUNCT_2:29;
         F is directed-sups-preserving by WAYBEL16:def 1;
then A13: F is monotone by WAYBEL17:3;
    reconsider FG = F*G as CLHomomorphism of M, M by Th2;
         FG|Mg = F*g by A10,RELAT_1:112
         .= f*g by A8,A9,FUNCT_4:2
         .= id Mg by A4,A6,FUNCT_1:61;
    then FG = id M by A2,Th8;
    then rng F = the carrier of M by FUNCT_2:29;
then A14: G = (F qua Function)" by A11,A12,FUNCT_2:36;
         G is directed-sups-preserving by WAYBEL16:def 1;
 then G is monotone by WAYBEL17:3;
   then F is isomorphic by A12,A13,A14,WAYBEL_0:def 38;
 hence L, M are_isomorphic by WAYBEL_1:def 8;
end;

theorem :: Theorem 4.17, p. 90-91
      for L being continuous complete LATTICE, G being set
  st G is_FreeGen_set_of L & Card G = Card X
   holds L, InclPoset Filt BoolePoset X are_isomorphic
proof let L be continuous complete LATTICE, G be set such that
A1: G is_FreeGen_set_of L and
A2: Card G = Card X;
A3: FixedUltraFilters X is_FreeGen_set_of InclPoset Filt BoolePoset X by Th16;
        Card X = Card FixedUltraFilters X by Th10;
 hence L, InclPoset Filt BoolePoset X are_isomorphic by A1,A2,A3,Th17;
end;
