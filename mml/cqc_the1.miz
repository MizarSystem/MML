:: A First-Order Predicate Calculus.
:: Axiomatics, the Consequence Operation and a Concept of Proof
::  by Agata Darmochwa{\l}
::
:: Received May 25, 1990
:: Copyright (c) 1990 Association of Mizar Users

environ

 vocabularies ORDINAL2, ARYTM, BOOLE, FINSET_1, FUNCT_1, RELAT_1, MCART_1,
      FINSEQ_1, CQC_LANG, QC_LANG1, ZF_LANG, ARYTM_1, QMAX_1, CQC_THE1;
 notations TARSKI, XBOOLE_0, ZFMISC_1, SUBSET_1, ORDINAL1, XCMPLX_0, FUNCT_1,
      NUMBERS, NAT_1, FINSET_1, FINSEQ_1, MCART_1, QC_LANG1, CQC_LANG,
      XXREAL_0;
 constructors XXREAL_0, XREAL_0, NAT_1, CQC_LANG;
 registrations SUBSET_1, RELSET_1, FINSET_1, XXREAL_0, XREAL_0, FINSEQ_1,
      CQC_LANG, ORDINAL1, CARD_1;
 requirements NUMERALS, REAL, BOOLE, SUBSET, ARITHM;
 definitions TARSKI, XBOOLE_0;
 theorems TARSKI, ZFMISC_1, FINSET_1, FINSEQ_1, MCART_1, FUNCT_1, NAT_1,
      XBOOLE_0, XBOOLE_1, XREAL_1, XXREAL_0, ORDINAL1, RELAT_1;
 schemes NAT_1, FRAENKEL, XBOOLE_0;

begin

:: --------- Auxiliary theorems

reserve n for natural number;
reserve i,j,n,k,l for Element of NAT;
reserve a for set;

canceled 10;

theorem Th11:
  {k: k <= n + 1} = {i: i <= n} \/ {n + 1}
proof
  thus {k: k <= n + 1} c= {i: i <= n} \/ {n + 1}
  proof
    let a;
    assume
A1: a in {k: k <= n + 1};
    consider k such that
A2: k=a and
A3: k <= n+1 by A1;
A4: k <= n or k = n+1 by A3,NAT_1:8;
A5: a in {i: i <= n} or a in {n + 1} by A2,A4,TARSKI:def 1;
    thus thesis by A5,XBOOLE_0:def 3;
  end;
  thus {i:i <= n} \/ {n+1} c= {k: k <= n + 1}
  proof
    let a;
    assume
A6: a in {i:i <= n} \/ {n+1};
A7: a in {i:i <= n} or a in {n+1} by A6,XBOOLE_0:def 3;
A8: (ex i st a=i & i <= n) or a = n + 1 by A7,TARSKI:def 1;
A9: now
      given i such that
A10:  a=i and
A11:  i <= n;
A12:  n <= n + 1 by NAT_1:11;
A13:  i <= n + 1 by A11,A12,XXREAL_0:2;
      thus thesis by A10,A13;
    end;
    thus thesis by A8,A9;
  end;
end;

theorem Th12:
  for n holds {k: k <= n} is finite
proof
  defpred P[Element of NAT] means {k: k <= $1} is finite;
A1: {k: k <= 0} = {0}
  proof
    thus {k: k <= 0} c= {0}
    proof
      let a;
      assume
A2:   a in {k: k <= 0};
      consider k such that
A3:   k = a and
A4:   k <= 0 by A2;
A5:   k = 0 by A4,NAT_1:3;
      thus thesis by A3,A5,TARSKI:def 1;
    end;
    thus {0} c= {k: k <= 0}
    proof
      let a;
      assume
A6:   a in {0};
A7:   a = 0 by A6,TARSKI:def 1;
      thus thesis by A7;
    end;
  end;
A8: P[0] by A1;
A9: for n st P[n] holds P[n+1]
  proof
    let n;
    assume
A10: P[n];
A11: {l: l <= n + 1} = {k: k <= n} \/ {n + 1} by Th11;
    thus thesis by A10,A11;
  end;
  thus for n being Element of NAT holds P[n] from NAT_1:sch 1(A8,A9);
end;

reserve X,Y,Z for set;
deffunc F(set) = $1`1;

theorem
  X is finite & X c= [:Y,Z:] implies
  ex A,B being set st A is finite & A c= Y & B is finite & B c= Z &
  X c= [:A,B:] by FINSET_1:32;

theorem
  X is finite & Z is finite & X c= [:Y,Z:] implies
  ex A being set st A is finite & A c= Y & X c= [:A,Z:] by FINSET_1:33;

:: --------- The axiomatic of a first-order calculus

reserve T,S,X,Y for Subset of CQC-WFF;
reserve p,q,r,t,F,H,G for Element of CQC-WFF;
reserve s for QC-formula;
reserve x,y for bound_QC-variable;

definition
  let T;
  attr T is being_a_theory means
  :Def1:
  VERUM in T & for p,q,r,s,x,y holds
  ('not' p => p) => p in T & p => ('not' p => q) in T &
  (p => q) => ('not'(q '&' r) => 'not'(p '&' r)) in T &
  p '&' q => q '&' p in T & (p in T & p => q in T implies q in T) &
  All(x,p) => p in T &
  (p => q in T & not x in still_not-bound_in p implies p => All(x,q) in T) &
  (s.x in CQC-WFF & s.y in CQC-WFF & not x in still_not-bound_in s & s.x in T
  implies s.y in T);
end;

canceled 10;

theorem
  T is being_a_theory & S is being_a_theory implies T /\ S is being_a_theory
proof
  assume that
A1: T is being_a_theory and
A2: S is being_a_theory;
A3: VERUM in T & VERUM in S by A1,A2,Def1;
  thus VERUM in T /\ S by A3,XBOOLE_0:def 4;
  let p,q,r,s,x,y;
  A4: ('not' p => p) => p in T & ('not' p => p) => p in S by A1,A2,Def1;
  thus ('not' p => p) => p in T /\ S by A4,XBOOLE_0:def 4;
  A5: p => ('not' p => q) in T & p => ('not' p => q) in S by A1,A2,Def1;
  thus p => ('not' p => q) in T /\ S by A5,XBOOLE_0:def 4;
  A6: (
p => q) => ('not'(q '&' r) => 'not'(p '&' r)) in T & (p => q) => ('not'(q
  '&' r) => 'not'(p '&' r)) in S by A1,A2,Def1;
  thus (p => q) => ('not'(q '&' r) => 'not'
  (p '&' r)) in T /\ S by A6,XBOOLE_0:def 4;
  A7: p '&' q => q '&' p in T & p '&' q => q '&' p in S by A1,A2,Def1;
  thus p '&' q => q '&' p in T /\ S by A7,XBOOLE_0:def 4;
A8: p in T & p => q in T implies q in T by A1,Def1;
A9: p in S & p => q in S implies q in S by A2,Def1;
  thus p in T /\ S & p => q in T /\ S implies q in T /\ S by A8,A9,
  XBOOLE_0:def 4;
A10: All(x,p) => p in T & All(x,p) => p in S by A1,A2,Def1;
  thus All(x,p) => p in T /\ S by A10,XBOOLE_0:def 4;
A11: p => q in T & not x in still_not-bound_in p implies p => All(x,q) in T
  by A1,Def1;
A12: p => q in S & not x in still_not-bound_in p implies p => All(x,q) in S
  by A2,Def1;
  thus p => q in T /\ S & not x in still_not-bound_in p implies
  p => All(x,q) in T /\ S by A11,A12,XBOOLE_0:def 4;
A13: s.x in CQC-WFF & s.y in CQC-WFF & not x in still_not-bound_in s & s.x
  in T implies s.y in T by A1,Def1;
A14: s.x in CQC-WFF & s.y in CQC-WFF & not x in still_not-bound_in s & s.x
  in S implies s.y in S by A2,Def1;
  thus thesis by A13,A14,XBOOLE_0:def 4;
end;

:: --------- The consequence operation

definition
  let X;
  func Cn(X) -> Subset of CQC-WFF means
  :Def2:
  t in it iff for T st T is being_a_theory & X c= T holds t in T;
  existence
  proof
    defpred P[set] means for T st T is being_a_theory & X c= T holds $1 in T;
    consider Y being set such that
A1: for a holds a in Y iff a in CQC-WFF & P[a] from XBOOLE_0:sch 1;
A2: Y c= CQC-WFF
    proof
      let a;
      assume
A3:   a in Y;
      thus thesis by A1,A3;
    end;
    reconsider Z=Y as Subset of CQC-WFF by A2;
    take Z;
    thus thesis by A1;
  end;
  uniqueness
  proof
    let Y,Z be Subset of CQC-WFF such that
A4: t in Y iff for T st T is being_a_theory & X c= T holds t in T and
A5: t in Z iff for T st T is being_a_theory & X c= T holds t in T;
A6: a in Y iff a in Z
    proof
      thus a in Y implies a in Z
      proof
        assume
A7:     a in Y;
        reconsider t=a as Element of CQC-WFF by A7;
A8:     for T st T is being_a_theory & X c= T holds t in T by A4,A7;
        thus thesis by A5,A8;
      end;
      thus a in Z implies a in Y
      proof
        assume
A9:     a in Z;
        reconsider t=a as Element of CQC-WFF by A9;
A10:    for T st T is being_a_theory & X c= T holds t in T by A5,A9;
        thus thesis by A4,A10;
      end;
    end;
    thus thesis by A6,TARSKI:2;
  end;
end;

canceled;

theorem Th27:
  VERUM in Cn(X)
proof
A1: T is being_a_theory & X c= T implies VERUM in T by Def1;
  thus thesis by A1,Def2;
end;

theorem Th28:
  ('not' p => p) => p in Cn(X)
proof
A1: T is being_a_theory & X c= T implies ('not' p => p) => p in T by Def1;
  thus thesis by A1,Def2;
end;

theorem Th29:
  p => ('not' p => q) in Cn(X)
proof
A1: T is being_a_theory & X c= T implies p => ('not' p => q) in T by Def1;
  thus thesis by A1,Def2;
end;

theorem Th30:
  (p => q) => ('not'(q '&' r) => 'not'(p '&' r)) in Cn(X)
proof
A1: T is being_a_theory & X c= T implies
  (p => q) => ('not'(q '&' r) => 'not'(p '&' r)) in T by Def1;
  thus thesis by A1,Def2;
end;

theorem Th31:
  p '&' q => q '&' p in Cn(X)
proof
A1: T is being_a_theory & X c= T implies p '&' q => q '&' p in T by Def1;
  thus thesis by A1,Def2;
end;

theorem Th32:
  p in Cn(X) & p => q in Cn(X) implies q in Cn(X)
proof
  assume
A1: p in Cn(X) & p => q in Cn(X);
A2: T is being_a_theory & X c= T implies q in T
  proof
    assume that
A3: T is being_a_theory and
A4: X c= T;
A5: p in T & p => q in T by A1,A3,A4,Def2;
    thus thesis by A3,A5,Def1;
  end;
  thus thesis by A2,Def2;
end;

theorem Th33:
  All(x,p) => p in Cn(X)
proof
A1: T is being_a_theory & X c= T implies All(x,p) => p in T by Def1;
  thus thesis by A1,Def2;
end;

theorem Th34:
  p => q in Cn(X) & not x in still_not-bound_in p implies
  p => All(x,q) in Cn(X)
proof
  assume that
A1: p => q in Cn(X) and
A2: not x in still_not-bound_in p;
A3: T is being_a_theory & X c= T implies p => All(x,q) in T
  proof
    assume that
A4: T is being_a_theory and
A5: X c= T;
A6: p => q in T by A1,A4,A5,Def2;
    thus thesis by A2,A4,A6,Def1;
  end;
  thus thesis by A3,Def2;
end;

theorem Th35:
  s.x in CQC-WFF & s.y in CQC-WFF & not x in still_not-bound_in s &
  s.x in Cn(X) implies s.y in Cn(X)
proof
  assume that
A1: s.x in CQC-WFF and
A2: s.y in CQC-WFF and
A3: not x in still_not-bound_in s and
A4: s.x in Cn(X);
  reconsider s1 = s.x as Element of CQC-WFF by A1;
  reconsider q = s.y as Element of CQC-WFF by A2;
A5: T is being_a_theory & X c= T implies q in T
  proof
    assume that
A6: T is being_a_theory and
A7: X c= T;
A8: s1 in T by A4,A6,A7,Def2;
    thus thesis by A3,A6,A8,Def1;
  end;
  thus thesis by A5,Def2;
end;

theorem Th36:
  Cn(X) is being_a_theory
proof
  thus VERUM in Cn(X) by Th27;
  let p,q,r,s,x,y;
  thus ('not' p => p) =>p in Cn(X) & p => ('not' p => q) in Cn(X) &
  (p => q) => ('not'(q '&' r) => 'not'(p '&' r)) in Cn(X) &
  p '&' q => q '&' p in Cn(X) & (p in Cn(X) & p => q in Cn(X) implies q in
  Cn(X)) by Th28,Th29,Th30,Th31,Th32;
  thus thesis by Th33,Th34,Th35;
end;

theorem Th37:
  T is being_a_theory & X c= T implies Cn(X) c= T
proof
  assume
A1: T is being_a_theory & X c= T;
  thus Cn(X) c= T
  proof
    let a;
    assume
A2: a in Cn(X);
    thus thesis by A1,A2,Def2;
  end;
end;

theorem Th38:
  X c= Cn(X)
proof
  let a;
  assume
A1: a in X;
  reconsider t=a as Element of CQC-WFF by A1;
A2: for T st T is being_a_theory & X c= T holds t in T by A1;
  thus thesis by A2,Def2;
end;

theorem Th39:
  X c= Y implies Cn(X) c= Cn(Y)
proof
  assume
A1: X c= Y;
  thus Cn(X) c= Cn(Y)
  proof
    let a;
    assume
A2: a in Cn(X);
    reconsider t=a as Element of CQC-WFF by A2;
A3: for T st T is being_a_theory & Y c= T holds t in T
    proof
      let T such that
A4:   T is being_a_theory and
A5:   Y c= T;
A6:   X c= T by A1,A5,XBOOLE_1:1;
      thus thesis by A2,A4,A6,Def2;
    end;
    thus thesis by A3,Def2;
  end;
end;

Lm1: Cn(Cn(X)) c= Cn(X)
proof
  let a;
  assume
A1: a in Cn(Cn(X));
  reconsider t=a as Element of CQC-WFF by A1;
A2: for T st T is being_a_theory & X c= T holds t in T
  proof
    let T;
    assume that
A3: T is being_a_theory and
A4: X c= T;
A5: Cn(X) c= T by A3,A4,Th37;
    thus thesis by A1,A3,A5,Def2;
  end;
  thus thesis by A2,Def2;
end;

theorem
  Cn(Cn(X)) = Cn(X)
proof
A1: Cn(Cn(X)) c= Cn(X) & Cn(X) c= Cn(Cn(X)) by Lm1,Th38;
  thus thesis by A1,XBOOLE_0:def 10;
end;

theorem Th41:
  T is being_a_theory iff Cn(T) = T
proof
  thus T is being_a_theory implies Cn(T) = T
  proof
    assume
A1: T is being_a_theory;
A2: T c= Cn(T) by Th38;
A3: Cn(T) c= T
    proof
      let a;
      assume
A4:   a in Cn(T);
      thus thesis by A1,A4,Def2;
    end;
    thus thesis by A2,A3,XBOOLE_0:def 10;
  end;
  thus thesis by Th36;
end;

:: ---------- The notion of proof

definition
  func Proof_Step_Kinds -> set equals
  {k: k <= 9};
  coherence;
end;

registration
  cluster Proof_Step_Kinds -> non empty;
  coherence
  proof
A1: 9 in {k: k <= 9};
    thus thesis by A1;
  end;
end;

canceled;

theorem Th43:
  0 in Proof_Step_Kinds & 1 in Proof_Step_Kinds & 2 in Proof_Step_Kinds &
  3 in Proof_Step_Kinds & 4 in Proof_Step_Kinds & 5 in Proof_Step_Kinds &
  6 in Proof_Step_Kinds & 7 in Proof_Step_Kinds & 8 in Proof_Step_Kinds &
  9 in Proof_Step_Kinds;

theorem
  Proof_Step_Kinds is finite by Th12;

reserve f,g for FinSequence of [:CQC-WFF,Proof_Step_Kinds:];

theorem Th45:
  for n being Nat holds 1 <= n & n <= len f implies
  (f.n)`2 = 0 or (f.n)`2 = 1 or (f.n)`2 = 2 or (f.n)`2 = 3 or (f.n)`2 = 4
  or (f.n)`2 = 5 or (f.n)`2 = 6 or (f.n)`2 = 7 or (f.n)`2 = 8 or (f.n)`2 = 9
proof
  let n be Nat;
  assume
A1: 1 <= n & n <= len f;
A2: dom f = Seg len f by FINSEQ_1:def 3;
A3: n in dom f by A1,A2,FINSEQ_1:3;
  A4: rng f c= [:CQC-WFF,Proof_Step_Kinds:] & f.n in rng f by A3,FINSEQ_1:def 4
  ,FUNCT_1:def 5;
A5: (f.n)`2 in Proof_Step_Kinds by A4,MCART_1:10;
A6: ex k st k = (f.n)`2 & k <= 9 by A5;
  thus thesis by A6,NAT_1:34;
end;

definition
  let PR be (FinSequence of [:CQC-WFF,Proof_Step_Kinds:]),n be Nat,X;
  pred PR,n is_a_correct_step_wrt X means
  :Def4:
  (PR.n)`1 in X if (PR.n)`2 = 0, (PR.n)`1 = VERUM if (PR.n)`2 = 1,
  ex p st (PR.n)`1 = ('not' p => p) => p if (PR.n)`2 = 2,
  ex p,q st (PR.n)`1 = p => ('not' p => q) if (PR.n)`2 = 3,
  ex p,q,r st (PR.n)`1 = (p => q) => ('not'(q '&' r) => 'not'(p '&' r))
  if (PR.n)`2 = 4, ex p,q st (PR.n)`1 = p '&' q => q '&' p if (PR.n)`2 = 5,
  ex p,x st (PR.n)`1 = All(x,p) => p if (PR.n)`2 = 6,
  ex i,j,p,q st 1 <= i & i < n & 1 <= j & j < i & p = (PR.j)`1 & q = (PR.n)`1 &
  (PR.i)`1 = p => q if (PR.n)`2 = 7,
  ex i,p,q,x st 1 <= i & i < n & (PR.i)`1 = p => q &
  not x in still_not-bound_in p & (PR.n)`1 = p => All(x,q) if (PR.n)`2 = 8,
  ex i,x,y,s st 1 <= i & i < n & s.x in CQC-WFF & s.y in CQC-WFF &
  not x in still_not-bound_in s & s.x = (PR.i)`1 & s.y = (PR.n)`1
  if (PR.n)`2 = 9;
  consistency;
end;

definition
  let X,f;
  pred f is_a_proof_wrt X means
  :Def5:
  f <> {} &
  for n st 1 <= n & n <= len f holds f,n is_a_correct_step_wrt X;
end;

canceled 11;

theorem
  f is_a_proof_wrt X implies rng f <> {}
proof
  assume
A1: f is_a_proof_wrt X;
A2: f <> {} by A1,Def5;
  thus thesis by A2,RELAT_1:64;
end;

theorem Th58:
  f is_a_proof_wrt X implies 1 <= len f
proof
  assume
A1: f is_a_proof_wrt X;
A2: f <> {} by A1,Def5;
A3: 0 <= len f by NAT_1:2;
A4: 0+1 <= len f by A2,A3,NAT_1:13;
  thus thesis by A4;
end;

theorem
  f is_a_proof_wrt X implies (f.1)`2 = 0 or (f.1)`2 = 1 or
  (f.1)`2 = 2 or (f.1)`2 = 3 or (f.1)`2 = 4 or (f.1)`2 = 5 or (f.1)`2 = 6
proof
  assume
A1: f is_a_proof_wrt X;
A2: 1 <= len f by A1,Th58;
A3: f,1 is_a_correct_step_wrt X by A1,A2,Def5;
  assume
  A4: ( not (f.1)`2 = 0)& not (f.1)`2 = 1 & ( not (f.1)`2 = 2)& not (f.1)`2 = 3
  & ( not (f.1)`2 = 4)& not (f.1)`2 = 5 & not (f.1)`2 = 6;
  per cases by A2,A4,Th45;
  suppose
A5: (f.1)`2 = 7;
A6: ex i,j,p,q st 1 <= i & i < 1 & 1 <= j & j < i &
    p = (f.j)`1 & q = (f.1)`1 & (f.i)`1 = p => q by A3,A5,Def4;
    thus contradiction by A6;
  end;
  suppose
A7: (f.1)`2 = 8;
A8: ex i,p,q,x st 1 <= i & i < 1 & (f.i)`1 = p => q &
    not x in still_not-bound_in p & (f.1)`1 = p => All(x,q) by A3,A7,Def4;
    thus contradiction by A8;
  end;
  suppose
A9: (f.1)`2 = 9;
A10: ex i,x,y,s st 1 <= i & i < 1 &
    s.x in CQC-WFF & s.y in CQC-WFF & not x in still_not-bound_in s &
    s.x = (f.i)`1 & (f.1)`1 = s.y by A3,A9,Def4;
    thus contradiction by A10;
  end;
end;

theorem Th60:
  1 <= n & n <= len f implies
  (f,n is_a_correct_step_wrt X iff f^g,n is_a_correct_step_wrt X)
proof
  assume that
A1: 1 <= n and
A2: n <= len f;
A3: n in Seg(len f) by A1,A2,FINSEQ_1:3;
A4: n in dom f by A3,FINSEQ_1:def 3;
A5: (f^g).n = f.n by A4,FINSEQ_1:def 7;
A6: len(f^g) = len f + len g by FINSEQ_1:35;
A7: len f <= len(f^g) by A6,NAT_1:11;
A8: n <= len(f^g) by A2,A7,XXREAL_0:2;
  thus f,n is_a_correct_step_wrt X implies f^g,n is_a_correct_step_wrt X
  proof
    assume
A9: f,n is_a_correct_step_wrt X;
    per cases by A1,A8,Th45;
    case
A10:  ((f^g).n)`2 = 0;
      thus thesis by A5,A9,A10,Def4;
    end;
    case
A11:  ((f^g).n)`2 = 1;
      thus thesis by A5,A9,A11,Def4;
    end;
    case
A12:  ((f^g).n)`2 = 2;
      thus thesis by A5,A9,A12,Def4;
    end;
    case
A13:  ((f^g).n)`2 = 3;
      thus thesis by A5,A9,A13,Def4;
    end;
    case
A14:  ((f^g).n)`2 = 4;
      thus thesis by A5,A9,A14,Def4;
    end;
    case
A15:  ((f^g).n)`2 = 5;
      thus thesis by A5,A9,A15,Def4;
    end;
    case
A16:  ((f^g).n)`2 = 6;
      thus thesis by A5,A9,A16,Def4;
    end;
    case
A17:  ((f^g).n)`2 = 7;
      consider i,j,r,t such that
A18:  1 <= i and
A19:  i < n and
A20:  1 <= j and
A21:  j < i and
A22:  r = (f.j)`1 & t = (f.n)`1 & (f.i)`1 = r => t by A5,A9,A17,Def4;
A23:  i <= len f by A2,A19,XXREAL_0:2;
A24:  j <= len f by A21,A23,XXREAL_0:2;
A25:  i in Seg(len f) by A18,A23,FINSEQ_1:3;
A26:  j in Seg(len f) by A20,A24,FINSEQ_1:3;
A27:  i in dom f by A25,FINSEQ_1:def 3;
A28:  j in dom f by A26,FINSEQ_1:def 3;
A29:  f.i = (f^g).i by A27,FINSEQ_1:def 7;
A30:  f.j = (f^g).j by A28,FINSEQ_1:def 7;
      thus thesis by A5,A18,A19,A20,A21,A22,A29,A30;
    end;
    case
A31:  ((f^g).n)`2 = 8;
      consider i,r,t,x such that
A32:  1 <= i and
A33:  i < n and
      A34:  (
f.i)`1 = r => t & not x in still_not-bound_in r & (f.n)`1 = r => All(x,
      t)
      by A5,A9,A31,Def4;
A35:  i <= len f by A2,A33,XXREAL_0:2;
A36:  i in Seg(len f) by A32,A35,FINSEQ_1:3;
A37:  i in dom f by A36,FINSEQ_1:def 3;
A38:  f.i = (f^g).i by A37,FINSEQ_1:def 7;
      thus thesis by A5,A32,A33,A34,A38;
    end;
    case
A39:  ((f^g).n)`2 = 9;
      consider i,x,y,s such that
A40:  1 <= i and
A41:  i < n and
      A42:  s
.x in CQC-WFF & s.y in CQC-WFF & ( not x in still_not-bound_in s)& s.x =
      (f.i)`1 & (f.n)`1 = s.y
      by A5,A9,A39,Def4;
A43:  i <= len f by A2,A41,XXREAL_0:2;
A44:  i in Seg(len f) by A40,A43,FINSEQ_1:3;
A45:  i in dom f by A44,FINSEQ_1:def 3;
A46:  f.i = (f^g).i by A45,FINSEQ_1:def 7;
      thus thesis by A5,A40,A41,A42,A46;
    end;
  end;
  assume
A47: f^g,n is_a_correct_step_wrt X;
  per cases by A1,A2,Th45;
  case
A48: (f.n)`2 = 0;
    thus thesis by A5,A47,A48,Def4;
  end;
  case
A49: (f.n)`2 = 1;
    thus thesis by A5,A47,A49,Def4;
  end;
  case
A50: (f.n)`2 = 2;
    thus thesis by A5,A47,A50,Def4;
  end;
  case
A51: (f.n)`2 = 3;
    thus thesis by A5,A47,A51,Def4;
  end;
  case
A52: (f.n)`2 = 4;
    thus thesis by A5,A47,A52,Def4;
  end;
  case
A53: (f.n)`2 = 5;
    thus thesis by A5,A47,A53,Def4;
  end;
  case
A54: (f.n)`2 = 6;
    thus thesis by A5,A47,A54,Def4;
  end;
  case
A55: (f.n)`2 = 7;
    consider i,j,r,t such that
A56: 1 <= i and
A57: i < n and
A58: 1 <= j and
A59: j < i and
A60: r = ((f^g).j)`1 & t = ((f^g).n)`1 & ((f^g).i)`1 = r => t
    by A5,A47,A55,Def4;
A61: i <= len f by A2,A57,XXREAL_0:2;
A62: j <= len f by A59,A61,XXREAL_0:2;
A63: i in Seg(len f) by A56,A61,FINSEQ_1:3;
A64: j in Seg(len f) by A58,A62,FINSEQ_1:3;
A65: i in dom f by A63,FINSEQ_1:def 3;
A66: j in dom f by A64,FINSEQ_1:def 3;
A67: f.i = (f^g).i by A65,FINSEQ_1:def 7;
A68: f.j = (f^g).j by A66,FINSEQ_1:def 7;
    thus thesis by A5,A56,A57,A58,A59,A60,A67,A68;
  end;
  case
A69: (f.n)`2 = 8;
    consider i,r,t,x such that
A70: 1 <= i and
A71: i < n and
    A72: ((f^g).i)`1 = r => t & not x in still_not-bound_in r & ((f^g).n)`1 = r
    => All(x,t)
    by A5,A47,A69,Def4;
A73: i <= len f by A2,A71,XXREAL_0:2;
A74: i in Seg(len f) by A70,A73,FINSEQ_1:3;
A75: i in dom f by A74,FINSEQ_1:def 3;
A76: f.i = (f^g).i by A75,FINSEQ_1:def 7;
    thus thesis by A5,A70,A71,A72,A76;
  end;
  case
A77: (f.n)`2 = 9;
    consider i,x,y,s such that
A78: 1 <= i and
A79: i < n and
    A80: s
.x in CQC-WFF & s.y in CQC-WFF & ( not x in still_not-bound_in s)& s.x =
    ((f^g).i)`1 & ((f^g).n)`1 = s.y
    by A5,A47,A77,Def4;
A81: i <= len f by A2,A79,XXREAL_0:2;
A82: i in Seg(len f) by A78,A81,FINSEQ_1:3;
A83: i in dom f by A82,FINSEQ_1:def 3;
A84: f.i = (f^g).i by A83,FINSEQ_1:def 7;
    thus thesis by A5,A78,A79,A80,A84;
  end;
end;

theorem Th61:
  1 <= n & n <= len g & g,n is_a_correct_step_wrt X implies
  (f^g),(n+len f) is_a_correct_step_wrt X
proof
  assume that
A1: 1 <= n and
A2: n <= len g and
A3: g,n is_a_correct_step_wrt X;
A4: n in Seg(len g) by A1,A2,FINSEQ_1:3;
A5: n in dom g by A4,FINSEQ_1:def 3;
A6: g.n = (f^g).(n+len f) by A5,FINSEQ_1:def 7;
A7: n + len f <= len f + len g by A2,XREAL_1:8;
A8: n+len f <= len(f^g) by A7,FINSEQ_1:35;
  per cases by A1,A8,Th45,NAT_1:12;
  case
A9: ((f^g).(n+len f))`2 = 0;
    thus thesis by A3,A6,A9,Def4;
  end;
  case
A10: ((f^g).(n+len f))`2 = 1;
    thus thesis by A3,A6,A10,Def4;
  end;
  case
A11: ((f^g).(n+len f))`2 = 2;
    thus thesis by A3,A6,A11,Def4;
  end;
  case
A12: ((f^g).(n+len f))`2 = 3;
    thus thesis by A3,A6,A12,Def4;
  end;
  case
A13: ((f^g).(n+len f))`2 = 4;
    thus thesis by A3,A6,A13,Def4;
  end;
  case
A14: ((f^g).(n+len f))`2 = 5;
    thus thesis by A3,A6,A14,Def4;
  end;
  case
A15: ((f^g).(n+len f))`2 = 6;
    thus thesis by A3,A6,A15,Def4;
  end;
  case
A16: ((f^g).(n+len f))`2 = 7;
    consider i,j,r,t such that
A17: 1 <= i and
A18: i < n and
A19: 1 <= j and
A20: j < i and
A21: r = (g.j)`1 & t = (g.n)`1 & (g.i)`1 = r => t by A3,A6,A16,Def4;
A22: 1 <= i+len f & i+len f < n+len f by A17,A18,NAT_1:12,XREAL_1:8;
A23: 1 <= j+len f & j+len f < i+len f by A19,A20,NAT_1:12,XREAL_1:8;
A24: i <= len g by A2,A18,XXREAL_0:2;
A25: j <= len g by A20,A24,XXREAL_0:2;
A26: i in Seg(len g) by A17,A24,FINSEQ_1:3;
A27: j in Seg(len g) by A19,A25,FINSEQ_1:3;
A28: i in dom g by A26,FINSEQ_1:def 3;
A29: j in dom g by A27,FINSEQ_1:def 3;
A30: g.i = (f^g).(i+len f) by A28,FINSEQ_1:def 7;
A31: g.j = (f^g).(j+len f) by A29,FINSEQ_1:def 7;
    thus thesis by A6,A21,A22,A23,A30,A31;
  end;
  case
A32: ((f^g).(n+len f))`2 = 8;
    consider i,r,t,x such that
A33: 1 <= i and
A34: i < n and
    A35: (
g.i)`1 = r => t & not x in still_not-bound_in r & (g.n)`1 = r => All(x,
    t)
    by A3,A6,A32,Def4;
A36: 1 <= len f+i & len f+i < n+len f by A33,A34,NAT_1:12,XREAL_1:8;
A37: i <= len g by A2,A34,XXREAL_0:2;
A38: i in Seg(len g) by A33,A37,FINSEQ_1:3;
A39: i in dom g by A38,FINSEQ_1:def 3;
A40: g.i = (f^g).(len f+i) by A39,FINSEQ_1:def 7;
    thus thesis by A6,A35,A36,A40;
  end;
  case
A41: ((f^g).(n+len f))`2 = 9;
    consider i,x,y,s such that
A42: 1 <= i and
A43: i < n and
    A44: s
.x in CQC-WFF & s.y in CQC-WFF & ( not x in still_not-bound_in s)& s.x =
    (g.i)`1 & (g.n)`1 = s.y
    by A3,A6,A41,Def4;
A45: 1 <= len f+i & len f+i < n+len f by A42,A43,NAT_1:12,XREAL_1:8;
A46: i <= len g by A2,A43,XXREAL_0:2;
A47: i in Seg(len g) by A42,A46,FINSEQ_1:3;
A48: i in dom g by A47,FINSEQ_1:def 3;
A49: g.i = (f^g).(len f+i) by A48,FINSEQ_1:def 7;
    thus thesis by A6,A44,A45,A49;
  end;
end;

theorem Th62:
  f is_a_proof_wrt X & g is_a_proof_wrt X implies f^g is_a_proof_wrt X
proof
  assume that
A1: f is_a_proof_wrt X and
A2: g is_a_proof_wrt X;
A3: f <> {} by A1,Def5;
  thus f^g <> {} by A3;
  let n such that
A4: 1 <= n and
A5: n <= len(f^g);
A6: now per cases;
    suppose
A7:   n <= len f;
A8:   f,n is_a_correct_step_wrt X by A1,A4,A7,Def5;
      thus thesis by A4,A7,A8,Th60;
    end;
    suppose
A9:   len f < n;
      reconsider k=n - len f as Element of NAT by A9,NAT_1:21;
A10:  k + len f <= len g + len f by A5,FINSEQ_1:35;
A11:  len f + 1 <= k + len f by A9,NAT_1:13;
A12:  1 <= k by A11,XREAL_1:8;
A13:  k <= len g by A10,XREAL_1:8;
A14:  k + len f = n & g,k is_a_correct_step_wrt X by A2,A12,A13,Def5;
      thus thesis by A12,A13,A14,Th61;
    end;
  end;
  thus thesis by A6;
end;

theorem
  f is_a_proof_wrt X & X c= Y implies f is_a_proof_wrt Y
proof
  assume that
A1: f is_a_proof_wrt X and
A2: X c= Y;
  thus f <> {} by A1,Def5;
  let n;
  assume
A3: 1 <= n & n <= len f;
A4: f,n is_a_correct_step_wrt X by A1,A3,Def5;
  per cases by A3,Th45;
  case
A5: (f.n)`2 = 0;
A6: (f.n)`1 in X by A4,A5,Def4;
    thus thesis by A2,A6;
  end;
  case
A7: (f.n)`2 = 1;
    thus thesis by A4,A7,Def4;
  end;
  case
A8: (f.n)`2 = 2;
    thus thesis by A4,A8,Def4;
  end;
  case
A9: (f.n)`2 = 3;
    thus thesis by A4,A9,Def4;
  end;
  case
A10: (f.n)`2 = 4;
    thus thesis by A4,A10,Def4;
  end;
  case
A11: (f.n)`2 = 5;
    thus thesis by A4,A11,Def4;
  end;
  case
A12: (f.n)`2 = 6;
    thus thesis by A4,A12,Def4;
  end;
  case
A13: (f.n)`2 = 7;
    thus thesis by A4,A13,Def4;
  end;
  case
A14: (f.n)`2 = 8;
    thus thesis by A4,A14,Def4;
  end;
  case
A15: (f.n)`2 = 9;
    thus thesis by A4,A15,Def4;
  end;
end;

theorem Th64:
  f is_a_proof_wrt X & 1 <= l & l <= len f implies (f.l)`1 in Cn(X)
proof
  assume that
A1: f is_a_proof_wrt X and
A2: 1 <= l & l <= len f;
A3: for n holds 1 <= n & n <= len f implies (f.n)`1 in Cn(X)
  proof
    defpred P[Nat] means 1 <= $1 & $1 <= len f implies (f.$1)`1 in Cn(X);
A4: for n being Nat st for k being Nat st k < n holds P[k] holds P[n]
    proof
      let n be Nat;
      assume
A5:   for k being Nat st k < n holds P[k];
A6:   n in NAT by ORDINAL1:def 13;
      assume that
A7:   1 <= n and
A8:   n <= len f;
A9:   f,n is_a_correct_step_wrt X by A1,A6,A7,A8,Def5;
A10:  now per cases by A7,A8,Th45;
        suppose
A11:      (f.n)`2 = 0;
A12:      (f.n)`1 in X by A9,A11,Def4;
A13:      X c= Cn(X) by Th38;
          thus thesis by A12,A13;
        end;
        suppose
A14:      (f.n)`2 = 1;
A15:      (f.n)`1 = VERUM by A9,A14,Def4;
          thus thesis by A15,Th27;
        end;
        suppose
A16:      (f.n)`2 = 2;
A17:      ex p st (f.n)`1 = ('not' p => p) => p by A9,A16,Def4;
          thus thesis by A17,Th28;
        end;
        suppose
A18:      (f.n)`2 = 3;
A19:      ex p,q st (f.n)`1 = p => ('not' p => q) by A9,A18,Def4;
          thus thesis by A19,Th29;
        end;
        suppose
A20:      (f.n)`2 = 4;
A21:      ex p,q,r st (f.n)`1 = (p => q) => ('not'(q '&' r) => 'not'
          (p '&' r)) by A9,A20,Def4;
          thus thesis by A21,Th30;
        end;
        suppose
A22:      (f.n)`2 = 5;
A23:      ex p,q st (f.n)`1 = p '&' q => q '&' p by A9,A22,Def4;
          thus thesis by A23,Th31;
        end;
        suppose
A24:      (f.n)`2 = 6;
A25:      ex p,x st (f.n)`1 = All(x,p) => p by A9,A24,Def4;
          thus thesis by A25,Th33;
        end;
        suppose
A26:      (f.n)`2 = 7;
          consider i,j,p,q such that
A27:      1 <= i and
A28:      i < n and
A29:      1 <= j and
A30:      j < i and
A31:      p = (f.j)`1 & q = (f.n)`1 & (f.i)`1 = p => q
          by A9,A26,Def4;
A32:      j < n by A28,A30,XXREAL_0:2;
A33:      i <= len f by A8,A28,XXREAL_0:2;
A34:      j <= len f by A30,A33,XXREAL_0:2;
A35:      (f.j)`1 in Cn(X) by A5,A29,A32,A34;
A36:      (f.i)`1 in Cn(X) by A5,A27,A28,A33;
          thus thesis by A31,A35,A36,Th32;
        end;
        suppose
A37:      (f.n)`2 = 8;
          consider i,p,q,x such that
A38:      1 <= i and
A39:      i < n and
          A40:      (
f.i)`1 = p => q & not x in still_not-bound_in p & (f.n)`1 = p => All(x,
          q)
          by A9,A37,Def4;
A41:      i <= len f by A8,A39,XXREAL_0:2;
          thus thesis by A5,A38,A39,A40,A41,Th34;
        end;
        suppose
A42:      (f.n)`2 = 9;
          consider i,x,y,s such that
A43:      1 <= i and
A44:      i < n and
          A45:      s
.x in CQC-WFF & s.y in CQC-WFF & ( not x in still_not-bound_in s)& s.x =
          (f.i)`1 & (f.n)`1 = s.y
          by A9,A42,Def4;
A46:      i <= len f by A8,A44,XXREAL_0:2;
          thus thesis by A5,A43,A44,A45,A46,Th35;
        end;
      end;
      thus thesis by A10;
    end;
A47: for n being Nat holds P[n] from NAT_1:sch 4(A4);
    thus thesis by A47;
  end;
  thus thesis by A2,A3;
end;

definition
  let f;
  assume
A1: f <> {};
  func Effect(f) -> Element of CQC-WFF equals
  :Def6:
  (f.(len f))`1;
  coherence
  proof
A2: 0 <= len f by NAT_1:2;
A3: 0+1 <= len f by A1,A2,NAT_1:13;
A4: len f in Seg len f by A3,FINSEQ_1:3;
A5: Seg len f = dom f by FINSEQ_1:def 3;
A6: f.(len f) in rng f by A4,A5,FUNCT_1:def 5;
A7: rng f c= [:CQC-WFF,Proof_Step_Kinds:] by FINSEQ_1:def 4;
    thus thesis by A6,A7,MCART_1:10;
  end;
end;

canceled;

theorem Th66:
  f is_a_proof_wrt X implies Effect(f) in Cn(X)
proof
  assume
A1: f is_a_proof_wrt X;
A2: 1 <= len f by A1,Th58;
A3: (f.(len f))`1 in Cn(X) by A1,A2,Th64;
A4: f <> {} by A2;
  thus thesis by A3,A4,Def6;
end;

:: ---------- A consequence as a set of all provable formulas

Lm2: for X holds {p: ex f st f is_a_proof_wrt X & Effect(f) = p} c= CQC-WFF
proof
  let X;
  defpred P[set] means ex f st f is_a_proof_wrt X & Effect(f) = $1;
  thus {p: P[p] } c= CQC-WFF from FRAENKEL:sch 10;
end;

theorem Th67:
  X c= {F: ex f st f is_a_proof_wrt X & Effect(f) = F}
proof
  let a;
  assume
A1: a in X;
  reconsider p=a as Element of CQC-WFF by A1;
  reconsider pp=[p,0] as Element of [:CQC-WFF,Proof_Step_Kinds:] by Th43,
  ZFMISC_1:106;
  set f=<*pp*>;
A2: len f = 1 by FINSEQ_1:57;
A3: f.1 = pp by FINSEQ_1:57;
A4: (f.len f)`1 = p by A2,A3,MCART_1:7;
A5: Effect(f) = p by A4,Def6;
A6: 1 <= n & n <= len f implies f,n is_a_correct_step_wrt X
  proof
    assume
A7: 1 <= n & n <= len f;
A8: n=1 by A2,A7,XXREAL_0:1;
A9: (f.1)`2 = 0 by A3,MCART_1:7;
A10: (f.n)`1 in X by A1,A3,A8,MCART_1:7;
    thus thesis by A8,A9,A10,Def4;
  end;
A11: f is_a_proof_wrt X by A6,Def5;
  thus thesis by A5,A11;
end;

Lm3: for X holds VERUM in {F: ex f st f is_a_proof_wrt X & Effect(f) = F}
proof
  let X;
  reconsider pp=[VERUM,1] as Element of [:CQC-WFF,Proof_Step_Kinds:] by Th43,
  ZFMISC_1:106;
  set f=<*pp*>;
A1: len f = 1 by FINSEQ_1:57;
A2: f.1 = pp by FINSEQ_1:57;
A3: (f.len f)`1 = VERUM by A1,A2,MCART_1:7;
A4: Effect(f) = VERUM by A3,Def6;
A5: 1 <= n & n <= len f implies f,n is_a_correct_step_wrt X
  proof
    assume
A6: 1 <= n & n <= len f;
A7: n=1 by A1,A6,XXREAL_0:1;
A8: (f.1)`2 = 1 by A2,MCART_1:7;
A9: (f.n)`1 = VERUM by A2,A7,MCART_1:7;
    thus thesis by A7,A8,A9,Def4;
  end;
A10: f is_a_proof_wrt X by A5,Def5;
  thus thesis by A4,A10;
end;

Lm4: for X holds
('not' p => p) => p in {F: ex f st f is_a_proof_wrt X & Effect(f) = F}
proof
  let X;
  reconsider pp=[('not' p => p) => p,2] as
  Element of [:CQC-WFF,Proof_Step_Kinds:] by Th43,ZFMISC_1:106;
  set f=<*pp*>;
A1: len f = 1 by FINSEQ_1:57;
A2: f.1 = pp by FINSEQ_1:57;
A3: (f.len f)`1 = ('not' p => p) => p by A1,A2,MCART_1:7;
A4: Effect(f) = ('not' p => p) => p by A3,Def6;
A5: 1 <= n & n <= len f implies f,n is_a_correct_step_wrt X
  proof
    assume
A6: 1 <= n & n <= len f;
A7: n=1 by A1,A6,XXREAL_0:1;
A8: (f.1)`2 = 2 by A2,MCART_1:7;
A9: (f.n)`1 = ('not' p => p) => p by A2,A7,MCART_1:7;
    thus thesis by A7,A8,A9,Def4;
  end;
A10: f is_a_proof_wrt X by A5,Def5;
  thus thesis by A4,A10;
end;

Lm5: for X holds
p => ('not' p => q) in {F: ex f st f is_a_proof_wrt X & Effect(f) = F}
proof
  let X;
  reconsider pp=[p => ('not' p => q),3] as
  Element of [:CQC-WFF,Proof_Step_Kinds:] by Th43,ZFMISC_1:106;
  set f=<*pp*>;
A1: len f = 1 by FINSEQ_1:57;
A2: f.1 = pp by FINSEQ_1:57;
A3: (f.len f)`1 = p => ('not' p => q) by A1,A2,MCART_1:7;
A4: Effect(f) = p => ('not' p => q) by A3,Def6;
A5: 1 <= n & n <= len f implies f,n is_a_correct_step_wrt X
  proof
    assume
A6: 1 <= n & n <= len f;
A7: n=1 by A1,A6,XXREAL_0:1;
A8: (f.1)`2 = 3 by A2,MCART_1:7;
A9: (f.n)`1 = p => ('not' p => q) by A2,A7,MCART_1:7;
    thus thesis by A7,A8,A9,Def4;
  end;
A10: f is_a_proof_wrt X by A5,Def5;
  thus thesis by A4,A10;
end;

Lm6: for X holds (p => q) => ('not'(q '&' r) => 'not'(p '&' r)) in
{F: ex f st f is_a_proof_wrt X & Effect(f) = F}
proof
  let X;
  reconsider pp=[(p => q) => ('not'(q '&' r) => 'not'(p '&' r)),4] as
  Element of [:CQC-WFF,Proof_Step_Kinds:] by Th43,ZFMISC_1:106;
  set f=<*pp*>;
A1: len f = 1 by FINSEQ_1:57;
A2: f.1 = pp by FINSEQ_1:57;
A3: (f.len f)`1 = (p => q) => ('not'(q '&' r) => 'not'
  (p '&' r)) by A1,A2,MCART_1:7;
A4: Effect(f) = (p => q) => ('not'(q '&' r) => 'not'(p '&' r)) by A3,Def6;
A5: 1 <= n & n <= len f implies f,n is_a_correct_step_wrt X
  proof
    assume
A6: 1 <= n & n <= len f;
A7: n=1 by A1,A6,XXREAL_0:1;
A8: (f.1)`2 = 4 by A2,MCART_1:7;

A9: (f.n)`1 = (p => q) => ('not'(q '&' r) => 'not' (p '&' r)) by A2,A7,
    MCART_1:7;
    thus thesis by A7,A8,A9,Def4;
  end;
A10: f is_a_proof_wrt X by A5,Def5;
  thus thesis by A4,A10;
end;

Lm7: for X holds p '&' q => q '&' p in
{F: ex f st f is_a_proof_wrt X & Effect(f) = F}
proof
  let X;
  reconsider pp=[p '&' q => q '&' p,5] as
  Element of [:CQC-WFF,Proof_Step_Kinds:] by Th43,ZFMISC_1:106;
  set f=<*pp*>;
A1: len f = 1 by FINSEQ_1:57;
A2: f.1 = pp by FINSEQ_1:57;
A3: (f.len f)`1 = p '&' q => q '&' p by A1,A2,MCART_1:7;
A4: Effect(f) = p '&' q => q '&' p by A3,Def6;
A5: 1 <= n & n <= len f implies f,n is_a_correct_step_wrt X
  proof
    assume
A6: 1 <= n & n <= len f;
A7: n=1 by A1,A6,XXREAL_0:1;
A8: (f.1)`2 = 5 by A2,MCART_1:7;
A9: (f.n)`1 = p '&' q => q '&' p by A2,A7,MCART_1:7;
    thus thesis by A7,A8,A9,Def4;
  end;
A10: f is_a_proof_wrt X by A5,Def5;
  thus thesis
  by A4,A10;
end;

Lm8: for X holds p in {F: ex f st f is_a_proof_wrt X & Effect(f) = F} &
p => q in {G: ex f st f is_a_proof_wrt X & Effect(f) = G} implies
q in {H: ex f st f is_a_proof_wrt X & Effect(f) = H}
proof
  let X;
  assume that
A1: p in {F: ex f st f is_a_proof_wrt X & Effect(f) = F} and
A2: p => q in {F: ex f st f is_a_proof_wrt X & Effect(f) = F};
A3: ex t st t=p & ex f st f is_a_proof_wrt X & Effect(f)=t by A1;
  consider f such that
A4: f is_a_proof_wrt X and
A5: Effect(f) = p by A3;
A6: ex r st r=p => q & ex f st f is_a_proof_wrt X & Effect(f) = r by A2;
  consider g such that
A7: g is_a_proof_wrt X and
A8: Effect(g) = p => q by A6;
A9: f <> {} by A4,Def5;
A10: g <> {} by A7,Def5;
  reconsider qq=[q,7] as Element of [:CQC-WFF,Proof_Step_Kinds:] by Th43,
  ZFMISC_1:106;
  set h=f^g^<*qq*>;
A11: len h = len(f^g) + len(<*qq*>) by FINSEQ_1:35
    .= len(f^g) + 1 by FINSEQ_1:57;
A12: len h = len f + len g + 1 by A11,FINSEQ_1:35;
A13: h.(len h) = qq by A11,FINSEQ_1:59;
A14: (h.(len h))`1 = q by A13,MCART_1:7;
A15: Effect(h) = q by A14,Def6;
A16: 1 <= n & n <= len h implies h,n is_a_correct_step_wrt X
  proof
    assume that
A17: 1 <= n and
A18: n <= len h;
A19: now per cases by A12,A18,NAT_1:8;
      suppose
A20:    n <= len f + len g;
A21:    n <= len(f^g) by A20,FINSEQ_1:35;
A22:    f^g is_a_proof_wrt X by A4,A7,Th62;
A23:    f^g,n is_a_correct_step_wrt X by A17,A21,A22,Def5;
        thus thesis by A17,A21,A23,Th60;
      end;
      suppose
A24:    n = len h;
A25:    h.n = qq by A11,A24,FINSEQ_1:59;

A26:    (h.n)`2 = 7 & (h.n)`1 = q by A25,MCART_1:7;
A27:    len f <> 0 by A4,Th58;
A28:    len f in Seg(len f) by A27,FINSEQ_1:5;
A29:    len f in dom f by A28,FINSEQ_1:def 3;
A30:    h = f^(g^<*qq*>) by FINSEQ_1:45;
A31:    (h.len f)`1 = (f.len f)`1 by A29,A30,FINSEQ_1:def 7
          .= p by A5,A9,Def6;

A32:    dom g = Seg(len g) & len g <> 0 by A7,Th58,FINSEQ_1:def 3;
A33:    len g in dom g by A32,FINSEQ_1:5;

A34:    1 <= len f & len f <= len f + len g by A4,Th58,NAT_1:11;
A35:    len f + len g in Seg(len f + len g) by A34,FINSEQ_1:5;
A36:    len f + len g in Seg(len(f^g)) by A35,FINSEQ_1:35;
A37:    len f + len g in dom(f^g) by A36,FINSEQ_1:def 3;
A38:    (h.(len f + len g))`1 = ((f^g).(len f + len g))`1 by A37,
        FINSEQ_1:def 7
          .= (g.len g)`1 by A33,FINSEQ_1:def 7
          .= p => q by A8,A10,Def6;
A39:    1 <= len g by A7,Th58;
A40:    len f + 1 <= len f + len g by A39,XREAL_1:9;

A41:    len f < len f + len g by A40,NAT_1:13;
A42:    1 <= len f & 1 <= len f + len g by A4,Th58,NAT_1:12;
A43:    len f + len g < n by A12,A24,NAT_1:13;
        thus thesis by A26,A31,A38,A41,A42,A43,Def4;
      end;
    end;
    thus thesis by A19;
  end;
A44: h is_a_proof_wrt X by A16,Def5;
  thus thesis by A15,A44;
end;

Lm9: for X holds
All(x,p) => p in {F: ex f st f is_a_proof_wrt X & Effect(f) = F}
proof
  let X;
  reconsider pp=[All(x,p) => p,6] as
  Element of [:CQC-WFF,Proof_Step_Kinds:] by Th43,ZFMISC_1:106;
  set f=<*pp*>;
A1: len f = 1 by FINSEQ_1:57;
A2: f.1 = pp by FINSEQ_1:57;
A3: (f.len f)`1 = All(x,p) => p by A1,A2,MCART_1:7;
A4: Effect(f) = All(x,p) => p by A3,Def6;
A5: 1 <= n & n <= len f implies f,n is_a_correct_step_wrt X
  proof
    assume
A6: 1 <= n & n <= len f;
A7: n=1 by A1,A6,XXREAL_0:1;
A8: (f.1)`2 = 6 by A2,MCART_1:7;
A9: (f.n)`1 = All(x,p) => p by A2,A7,MCART_1:7;
    thus thesis by A7,A8,A9,Def4;
  end;
A10: f is_a_proof_wrt X by A5,Def5;
  thus thesis by A4,A10;
end;

Lm10: for X holds p => q in {F: ex f st f is_a_proof_wrt X & Effect(f) = F} &
not x in still_not-bound_in p implies
p => All(x,q) in {G: ex f st f is_a_proof_wrt X & Effect(f) = G}
proof
  let X;
  assume that
A1: p => q in {F: ex f st f is_a_proof_wrt X & Effect(f) = F} and
A2: not x in still_not-bound_in p;
A3: ex t st t=p => q & ex f st f is_a_proof_wrt X & Effect(f) = t by A1;
  consider f such that
A4: f is_a_proof_wrt X and
A5: Effect(f) = p => q by A3;
A6: f <> {} by A4,Def5;
  reconsider qq=[p => All(x,q),8] as
  Element of [:CQC-WFF,Proof_Step_Kinds:] by Th43,ZFMISC_1:106;
  set h = f^<*qq*>;
A7: len h = len f + len <*qq*> by FINSEQ_1:35
    .= len f + 1 by FINSEQ_1:56;
A8: 1 <= n & n <= len h implies h,n is_a_correct_step_wrt X
  proof
    assume that
A9: 1 <= n and
A10: n <= len h;
A11: now per cases by A7,A10,NAT_1:8;
      suppose
A12:    n <= len f;
A13:    f,n is_a_correct_step_wrt X by A4,A9,A12,Def5;
        thus thesis by A9,A12,A13,Th60;
      end;
      suppose
A14:    n = len h;
A15:    h.n = qq by A7,A14,FINSEQ_1:59;

        A16:    (h.n)`2 = 8 & (h.n)`1 = p => All(x,q) by A15,MCART_1:7;
A17:    len f <> 0 by A4,Th58;
A18:    len f in Seg(len f) by A17,FINSEQ_1:5;
A19:    len f in dom f by A18,FINSEQ_1:def 3;
A20:    (h.len f)`1 = (f.len f)`1 by A19,FINSEQ_1:def 7
          .= p => q by A5,A6,Def6;
A21:    1 <= len f by A4,Th58;
A22:    len f < n by A7,A14,NAT_1:13;
        thus thesis by A2,A16,A20,A21,A22,Def4;
      end;
    end;
    thus thesis by A11;
  end;
A23: h is_a_proof_wrt X by A8,Def5;
A24: Effect(h) = (h.(len f + 1))`1 by A7,Def6
    .= qq`1 by FINSEQ_1:59
    .= p => All(x,q) by MCART_1:7;
  thus thesis by A23,A24;
end;

Lm11: for X holds s.x in CQC-WFF & s.y in CQC-WFF &
not x in still_not-bound_in s &
s.x in {F: ex f st f is_a_proof_wrt X & Effect(f) = F} implies
s.y in {G: ex f st f is_a_proof_wrt X & Effect(f) = G}
proof
  let X;
  assume that
A1: s.x in CQC-WFF & s.y in CQC-WFF and
A2: not x in still_not-bound_in s and
A3: s.x in {F: ex f st f is_a_proof_wrt X & Effect(f) = F};
A4: ex t st t=s.x & ex f st f is_a_proof_wrt X & Effect(f) = t by A3;
  consider f such that
A5: f is_a_proof_wrt X and
A6: Effect(f) = s.x by A4;
A7: f <> {} by A5,Def5;
  reconsider qq=[s.y,9] as Element of [:CQC-WFF,Proof_Step_Kinds:] by A1,Th43,
  ZFMISC_1:106;
  set h = f^<*qq*>;
A8: len h = len f + len <*qq*> by FINSEQ_1:35
    .= len f + 1 by FINSEQ_1:56;
A9: 1 <= n & n <= len h implies h,n is_a_correct_step_wrt X
  proof
    assume that
A10: 1 <= n and
A11: n <= len h;
A12: now per cases by A8,A11,NAT_1:8;
      suppose
A13:    n <= len f;
A14:    f,n is_a_correct_step_wrt X by A5,A10,A13,Def5;
        thus thesis by A10,A13,A14,Th60;
      end;
      suppose
A15:    n = len h;
A16:    h.n = qq by A8,A15,FINSEQ_1:59;

A17:    (h.n)`2 = 9 & (h.n)`1 = s.y by A16,MCART_1:7;
A18:    len f <> 0 by A5,Th58;
A19:    len f in Seg(len f) by A18,FINSEQ_1:5;
A20:    len f in dom f by A19,FINSEQ_1:def 3;
A21:    (h.len f)`1 = (f.len f)`1 by A20,FINSEQ_1:def 7
          .= s.x by A6,A7,Def6;
A22:    1 <= len f by A5,Th58;
A23:    len f < n by A8,A15,NAT_1:13;
        thus thesis by A1,A2,A17,A21,A22,A23,Def4;
      end;
    end;
    thus thesis by A12;
  end;
A24: h is_a_proof_wrt X by A9,Def5;
A25: Effect(h) = (h.(len f + 1))`1 by A8,Def6
    .= qq`1 by FINSEQ_1:59
    .= s.y by MCART_1:7;
  thus thesis by A24,A25;
end;

theorem Th68:
  for X holds Y = {p: ex f st f is_a_proof_wrt X & Effect(f) = p}
  implies Y is being_a_theory
proof
  let X;
  assume
A1: Y = {p: ex f st f is_a_proof_wrt X & Effect(f) = p};
  thus VERUM in Y by A1,Lm3;
  let p,q,r,s,x,y;
  thus ('not' p => p) => p in Y by A1,Lm4;
  thus p => ('not' p => q) in Y by A1,Lm5;
  thus (p => q) => ('not'(q '&' r) => 'not'(p '&' r)) in Y by A1,Lm6;
  thus p '&' q => q '&' p in Y by A1,Lm7;
  thus p in Y & p => q in Y implies q in Y by A1,Lm8;
  thus All(x,p) => p in Y by A1,Lm9;
  thus
  p => q in Y & not x in still_not-bound_in p implies p => All(x,q) in Y
  by A1,Lm10;
  thus thesis by A1,Lm11;
end;

Lm12: for X holds {p: ex f st f is_a_proof_wrt X & Effect(f) = p} c= Cn(X)
proof
  let X;
  let a;
  assume
A1: a in {p: ex f st f is_a_proof_wrt X & Effect(f) = p};
A2: ex q st q=a & ex f st f is_a_proof_wrt X & Effect(f) = q by A1;
  thus thesis by A2,Th66;
end;

theorem Th69:
  for X holds {p: ex f st f is_a_proof_wrt X & Effect(f) = p} = Cn(X)
proof
  let X;
  set PX = {p: ex f st f is_a_proof_wrt X & Effect(f) = p};
A1: PX c= Cn(X) by Lm12;
  reconsider PX as Subset of CQC-WFF by Lm2;
A2: X c= PX by Th67;
A3: Cn(X) c= {p: ex f st f is_a_proof_wrt X & Effect(f) = p} by A2,Th37,Th68;
  thus thesis by A1,A3,XBOOLE_0:def 10;
end;

theorem Th70:
  p in Cn(X) iff ex f st f is_a_proof_wrt X & Effect(f) = p
proof
  thus p in Cn(X) implies ex f st f is_a_proof_wrt X & Effect(f) = p
  proof
    assume
A1: p in Cn(X);
A2: p in {F: ex f st f is_a_proof_wrt X & Effect(f) = F} by A1,Th69;
A3: ex F st F=p & ex f st f is_a_proof_wrt X & Effect(f) = F by A2;
    thus thesis by A3;
  end;
  thus (ex f st f is_a_proof_wrt X & Effect(f) = p) implies p in Cn(X)
  proof
    given f such that
A4: f is_a_proof_wrt X & Effect(f) = p;
A5: p in {F: ex f st f is_a_proof_wrt X & Effect(f) = F} by A4;
    thus thesis by A5,Th69;
  end;
end;

theorem
  p in Cn(X) implies ex Y st Y c= X & Y is finite & p in Cn(Y)
proof
  assume
A1: p in Cn(X);
  consider f such that
A2: f is_a_proof_wrt X and
A3: Effect(f) = p by A1,Th70;
A4: f <> {} by A2,Def5;
A5: rng f c= [:CQC-WFF,Proof_Step_Kinds:] by FINSEQ_1:def 4;
  consider A being set such that
A6: A is finite and
A7: A c= CQC-WFF and
A8: rng f c= [:A,Proof_Step_Kinds:] by A5,FINSET_1:33;
  reconsider Z=A as Subset of CQC-WFF by A7;
  take Y = Z /\ X;
  thus Y c= X by XBOOLE_1:17;
  thus Y is finite by A6;
A9: 1 <= n & n <= len f implies f,n is_a_correct_step_wrt Y
  proof
    assume
A10: 1 <= n & n <= len f;
A11: f,n is_a_correct_step_wrt X by A2,A10,Def5;
    per cases by A10,Th45;
    case
A12:  (f.n)`2 = 0;
A13:  (f.n)`1 in X by A11,A12,Def4;
A14:  n in Seg(len f) by A10,FINSEQ_1:3;
A15:  n in dom f by A14,FINSEQ_1:def 3;
A16:  f.n in rng f by A15,FUNCT_1:def 5;
A17:  (f.n)`1 in A by A8,A16,MCART_1:10;
      thus thesis by A13,A17,XBOOLE_0:def 4;
    end;
    case
A18:  (f.n)`2 = 1;
      thus thesis by A11,A18,Def4;
    end;
    case
A19:  (f.n)`2 = 2;
      thus thesis by A11,A19,Def4;
    end;
    case
A20:  (f.n)`2 = 3;
      thus thesis by A11,A20,Def4;
    end;
    case
A21:  (f.n)`2 = 4;
      thus thesis by A11,A21,Def4;
    end;
    case
A22:  (f.n)`2 = 5;
      thus thesis by A11,A22,Def4;
    end;
    case
A23:  (f.n)`2 = 6;
      thus thesis by A11,A23,Def4;
    end;
    case
A24:  (f.n)`2 = 7;
      thus thesis by A11,A24,Def4;
    end;
    case
A25:  (f.n)`2 = 8;
      thus thesis by A11,A25,Def4;
    end;
    case
A26:  (f.n)`2 = 9;
      thus thesis
      by A11,A26,Def4;
    end;
  end;
A27: f is_a_proof_wrt Y by A4,A9,Def5;
A28: p in {q: ex f st f is_a_proof_wrt Y & Effect(f) = q} by A3,A27;
  thus thesis by A28,Th69;
end;

:: --------- TAUT - the set of all tautologies

definition
  canceled;
  func TAUT -> Subset of CQC-WFF equals
  Cn({}(CQC-WFF));
  correctness;
end;

canceled 2;

theorem Th74:
  T is being_a_theory implies TAUT c= T
proof
  assume
A1: T is being_a_theory;
A2: Cn({}(CQC-WFF)) c= Cn(T) by Th39,XBOOLE_1:2;
  thus thesis by A1,A2,Th41;
end;

theorem
  TAUT c= Cn(X) by Th36,Th74;

theorem Th76:
  TAUT is being_a_theory by Th36;

theorem Th77:
  VERUM in TAUT by Def1,Th76;

theorem
  ('not' p => p) =>p in TAUT by Def1,Th76;

theorem
  p => ('not' p => q) in TAUT by Def1,Th76;

theorem
  (p => q) => ('not'(q '&' r) => 'not' (p '&' r)) in TAUT by Def1,Th76;

theorem
  p '&' q => q '&' p in TAUT by Def1,Th76;

theorem
  p in TAUT & p => q in TAUT implies q in TAUT by Def1,Th76;

theorem
  All(x,p) => p in TAUT by Th33;

theorem
  p => q in TAUT & not x in still_not-bound_in p implies
  p => All(x,q) in TAUT by Th34;

theorem
  s.x in CQC-WFF & s.y in CQC-WFF & not x in still_not-bound_in s &
  s.x in TAUT implies s.y in TAUT by Th35;

:: --------- Relation of consequence of a set of formulas

definition
  let X,s;
  pred X|-s means
  :Def9:
  s in Cn(X);
end;

canceled;

theorem
  X |- VERUM
proof
A1: VERUM in Cn(X) by Th27;
  thus thesis by A1,Def9;
end;

theorem
  X |- ('not' p => p) => p
proof
A1: ('not' p => p) => p in Cn(X) by Th28;
  thus thesis by A1,Def9;
end;

theorem
  X |- p => ('not' p => q)
proof
A1: p => ('not' p => q) in Cn(X) by Th29;
  thus thesis by A1,Def9;
end;

theorem
  X |- (p => q) => ('not'(q '&' r) => 'not'(p '&' r))
proof
A1: (p => q) => ('not'(q '&' r) => 'not'(p '&' r)) in Cn(X) by Th30;
  thus thesis by A1,Def9;
end;

theorem
  X |- p '&' q => q '&' p
proof
A1: p '&' q => q '&' p in Cn(X) by Th31;
  thus thesis by A1,Def9;
end;

theorem
  X |- p & X |- p => q implies X |- q
proof
  assume
A1: X |- p & X |- p => q;
A2: p in Cn(X) & p => q in Cn(X) by A1,Def9;
A3: q in Cn(X) by A2,Th32;
  thus thesis by A3,Def9;
end;

theorem
  X |- All(x,p) => p
proof
A1: All(x,p) => p in Cn(X) by Th33;
  thus thesis by A1,Def9;
end;

theorem
  X |- p => q & not x in still_not-bound_in p implies X |- p => All(x,q)
proof
  assume that
A1: X |- p => q and
A2: not x in still_not-bound_in p;
A3: p => q in Cn(X) by A1,Def9;
A4: p => All(x,q) in Cn(X) by A2,A3,Th34;
  thus thesis by A4,Def9;
end;

theorem
  s.y in CQC-WFF & not x in still_not-bound_in s &
  X |- s.x implies X |- s.y
proof
  assume that
A1: s.y in CQC-WFF & not x in still_not-bound_in s and
A2: X |- (s.x);
A3: s.x in Cn(X) by A2,Def9;
A4: s.y in Cn(X) by A1,A3,Th35;
  thus thesis by A4,Def9;
end;

definition
  let s;
  attr s is valid means
  :Def10:
  {}(CQC-WFF)|-s;
end;

Lm13: s is valid iff s in TAUT
proof
A1: s is valid iff {}(CQC-WFF) |- s by Def10;
  thus thesis by A1,Def9;
end;

definition
  let s;
  redefine attr s is valid means
  s in TAUT;
  compatibility by Lm13;
end;

canceled 2;

theorem
  p is valid implies X |- p
proof
  assume
A1: p is valid;
A2: p in TAUT by A1,Lm13;
A3: TAUT c= Cn(X) by Th36,Th74;
  thus thesis by A2,A3,Def9;
end;

theorem
  VERUM is valid by Lm13,Th77;

theorem
  ('not' p => p) =>p is valid
proof
A1: ('not' p => p) =>p in TAUT by Def1,Th76;
  thus thesis by A1,Lm13;
end;

theorem
  p => ('not' p => q) is valid
proof
A1: p => ('not' p => q) in TAUT by Def1,Th76;
  thus thesis by A1,Lm13;
end;

theorem
  (p => q) => ('not'(q '&' r) => 'not'(p '&' r)) is valid
proof
A1: (p => q) => ('not'(q '&' r) => 'not'(p '&' r)) in TAUT by Def1,Th76;
  thus thesis by A1,Lm13;
end;

theorem
  p '&' q => q '&' p is valid
proof
A1: p '&' q => q '&' p in TAUT by Def1,Th76;
  thus thesis by A1,Lm13;
end;

theorem
  p is valid & p => q is valid implies q is valid
proof
  assume
A1: p is valid & p => q is valid;
A2: p in TAUT & p => q in TAUT by A1,Lm13;
A3: q in TAUT by A2,Def1,Th76;
  thus thesis by A3,Lm13;
end;

theorem
  All(x,p) => p is valid
proof
A1: All(x,p) => p in TAUT by Th33;
  thus thesis by A1,Lm13;
end;

theorem
  p => q is valid & not x in still_not-bound_in p
  implies p => All(x,q) is valid
proof
  assume that
A1: p => q is valid and
A2: not x in still_not-bound_in p;
A3: p => q in TAUT by A1,Lm13;
A4: p => All(x,q) in TAUT by A2,A3,Th34;
  thus thesis by A4,Lm13;
end;

theorem
  s.y in CQC-WFF & not x in still_not-bound_in s &
  s.x is valid implies s.y is valid
proof
  assume that
A1: s.y in CQC-WFF & not x in still_not-bound_in s and
A2: s.x is valid;
A3: s.x in TAUT by A2,Lm13;
A4: s.y in TAUT by A1,A3,Th35;
  thus thesis by A4,Lm13;
end;

