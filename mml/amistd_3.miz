:: A Tree of Execution of a Macroinstruction
::  by Artur Korni{\l}owicz
::
:: Received December 10, 2003
:: Copyright (c) 2003 Association of Mizar Users

environ

 vocabularies NUMBERS, ORDINAL1, RELAT_1, FUNCOP_1, FINSET_1, FUNCT_1, CARD_1,
      WELLORD2, XBOOLE_0, TARSKI, SUBSET_1, ZFMISC_1, WELLORD1, ORDINAL2,
      FINSEQ_2, FINSEQ_1, TREES_1, TREES_2, NAT_1, XXREAL_0, ARYTM_3, ORDINAL4,
      SETFAM_1, GOBOARD5, AMI_1, AMISTD_1, WAYBEL_0, GLIB_000, FRECHET,
      AMISTD_2, AMISTD_3, PARTFUN1;
 notations TARSKI, XBOOLE_0, SETFAM_1, ZFMISC_1, SUBSET_1, FINSET_1, CARD_1,
      NUMBERS, ORDINAL1, ORDINAL2, SEQ_4, XXREAL_0, NAT_1, RELAT_1, FUNCT_1,
      PARTFUN1, FUNCT_2, BINOP_1, WELLORD1, WELLORD2, FUNCOP_1, FINSEQ_1,
      FINSEQ_2, TREES_1, TREES_2, STRUCT_0, AMI_1, AMISTD_1, AMISTD_2;
 constructors WELLORD1, WELLORD2, BINOP_1, ORDINAL2, FINSEQ_2, SEQ_4, REALSET1,
      AMISTD_2, SEQ_2, RELSET_1, TREES_2;
 registrations XBOOLE_0, RELAT_1, ORDINAL1, FUNCOP_1, FINSET_1, XXREAL_0,
      NAT_1, CARD_1, MEMBERED, FINSEQ_1, TREES_2, FINSEQ_6, AMI_1, AMISTD_1,
      SETFAM_1, VALUED_0, XXREAL_2, RELSET_1, FINSEQ_2, SUBSET_1, CARD_5,
      TREES_1;
 requirements BOOLE, SUBSET, NUMERALS, REAL;
 definitions RELAT_1, TARSKI, XBOOLE_0, WELLORD2, FUNCT_1, FINSEQ_2, FUNCOP_1;
 theorems AMISTD_1, GRFUNC_1, NAT_1, ORDINAL1, CARD_1, TREES_2, SUBSET_1,
      FUNCT_2, TREES_1, FINSEQ_1, FUNCT_1, RELAT_1, FINSEQ_3, FINSEQ_5, TARSKI,
      QC_LANG4, CARD_5, FINSEQ_2, XBOOLE_0, AMISTD_2, FUNCOP_1, XXREAL_0,
      XXREAL_2, PARTFUN1;
 schemes TREES_2, FUNCT_2, NAT_1, HILBERT2, ORDINAL2, BINOP_1, FRAENKEL;

begin

reserve x, y, z, X for set,
  m, n for natural number,
  O for Ordinal,
  R, S for Relation;

:: First Location

reserve
  N for with_non-empty_elements non empty set,
  S for steady-programmed
  standard (IC-Ins-separated definite (non empty stored-program AMI-Struct over
  N)),
  L, l1 for Element of NAT,
  J for Instruction of S,
  F for Subset of NAT;

definition
  let N be with_non-empty_elements non empty set;
  let S be standard (IC-Ins-separated definite (non empty stored-program
  AMI-Struct over N));
  let F be FinPartState of S such that
A1: F is non empty & F is NAT-defined;
  func FirstLoc F -> Element of NAT means
  :Def2:
  ex M being non empty Subset of NAT st M
 = { locnum(l,S) where l is Element of NAT : l
  in dom F } & it = il.(S, min M);
  existence
  proof
    reconsider F as non empty NAT-defined FinPartState of S by A1;
    deffunc G(Element of NAT) = locnum($1,S);
    set M = { G(l) where l is Element of NAT : l in dom F };
    consider l being Element of dom F;
    l in dom F & dom F c= NAT by RELAT_1:def 18;
    then reconsider l as Element of NAT;
A2: locnum(l,S) in M;
A3: M c= NAT
    proof
      let k be set;
      assume
      k in M;
      then
      ex l being Element of NAT st k = locnum(l,S) & l in dom F;
      hence thesis;
    end;
A4: dom F is finite;
    M is finite from FRAENKEL:sch 21(A4);
    then reconsider M as finite non empty Subset of NAT by A2,A3;
    take il.(S, min M), M;
    thus thesis;
  end;
  uniqueness;
end;

canceled 20;

theorem Th21:
  for F being non empty NAT-defined FinPartState of S holds
  FirstLoc F in dom F
proof
  let F be non empty NAT-defined FinPartState of S;
  consider M being non empty Subset of NAT such that
A1: M = { locnum(l,S) where l is Element of NAT : l in dom F } and
A2: FirstLoc F = il.(S,min M) by Def2;
  min M in M by XXREAL_2:def 7;
  then
  ex l being Element of NAT st min M = locnum(l,S) & l in dom F by A1;
  hence thesis by A2,AMISTD_1:def 13;
end;

theorem
  for F, G being non empty NAT-defined FinPartState of S st F c= G holds
  FirstLoc G <= FirstLoc F, S
proof
  let F, G be non empty NAT-defined FinPartState of S such that
A1: F c= G;
  consider N being non empty Subset of NAT such that
A2: N = { locnum(l,S) where l is Element of NAT : l in dom G } and
A3: FirstLoc G = il.(S,min N) by Def2;
  consider M being non empty Subset of NAT such that
A4: M = { locnum(l,S) where l is Element of NAT : l in dom F } and
A5: FirstLoc F = il.(S,min M) by Def2;
  M c= N
  proof
    let a be set;
    assume
    a in M;
    then
A6: ex l being Element of NAT st a = locnum(l,S) & l in dom F by A4;
    dom F c= dom G by A1,GRFUNC_1:8;
    hence thesis by A2,A6;
  end;
  then min N <= min M by XXREAL_2:60;
  hence thesis by A5,A3,AMISTD_1:28;
end;

theorem Th23:
  for F being non empty NAT-defined FinPartState of S st l1 in dom
  F holds FirstLoc F <= l1, S
proof
  let F be non empty NAT-defined FinPartState of S such that
A1: l1 in dom F;
  consider M being non empty Subset of NAT such that
A2: M = { locnum(w,S) where w is Element of NAT : w in dom F } and
A3: FirstLoc F = il.(S,min M) by Def2;
  locnum(l1,S) in M by A1,A2;
  then
A4: min M <= locnum(l1,S) by XXREAL_2:def 7;
  locnum(FirstLoc F,S) = min M by A3,AMISTD_1:def 13;
  hence thesis by A4,AMISTD_1:29;
end;

theorem
  for F being lower non empty NAT-defined FinPartState of S holds
  FirstLoc F = il.(S,0)
proof
  let F be lower non empty NAT-defined FinPartState of S;
  consider M being non empty Subset of NAT such that
  M = { locnum(l,S) where l is Element of NAT : l in dom F } and
A1: FirstLoc F = il.(S,min M) by Def2;
A2: il.(S,0) <= il.(S,min M), S by AMISTD_1:28;
  FirstLoc F in dom F by Th21;
  then il.(S,0) in dom F by A1,A2,AMISTD_1:def 20;
  then FirstLoc F <= il.(S,0), S by Th23;
  hence thesis by A1,A2,AMISTD_1:def 9;
end;

:: LocNums

definition
  let N be with_non-empty_elements non empty set,
  S be standard (IC-Ins-separated
definite (non empty stored-program AMI-Struct over N)), F be Subset of NAT
  ;
  func LocNums(F,S) -> Subset of NAT equals
  {locnum(l,S) where l is
  Element of NAT : l in F};
  coherence
  proof
    set A = {locnum(l,S) where l is Element of NAT : l in F};
    A c= NAT
    proof
      let a be set;
      assume
      a in A;
      then ex l being Element of NAT st a = locnum(l,S) & l in F;
      hence thesis;
    end;
    hence thesis;
  end;
end;

theorem Th25:
  locnum(l1,S) in LocNums(F,S) iff l1 in F
proof
  hereby
    assume
    locnum(l1,S) in LocNums(F,S);
    then
    ex l being Element of NAT
     st locnum(l1,S) = locnum(l,S) & l in F;
    hence l1 in F by AMISTD_1:27;
  end;
  thus thesis;
end;

registration
  let N be with_non-empty_elements non empty set,
  S be standard (IC-Ins-separated
  definite (non empty stored-program AMI-Struct over N)), F be empty
  Subset of NAT;
  cluster LocNums(F,S) -> empty;
  coherence
  proof
    assume
    LocNums(F,S) is non empty;
    then consider x being set such that
A1: x in LocNums(F,S) by XBOOLE_0:def 1;
    ex l being Element of NAT st x = locnum(l,S) & l in F by A1;
    hence thesis;
  end;
end;

registration
  let N be with_non-empty_elements non empty set,
  S be standard (IC-Ins-separated
  definite steady-programmed
   (non empty stored-program AMI-Struct over N)), F be non empty
  Subset of NAT;
  cluster LocNums(F,S) -> non empty;
  coherence
  proof
    consider l being Element of NAT such that
A1: l in F by SUBSET_1:10;
    reconsider l as Element of NAT;
    l in F by A1;
    hence thesis by Th25;
  end;
end;

theorem Th26:
  F = {il.(S,n)} implies LocNums(F,S) = {n}
proof
A1: il.(S,n) in {il.(S,n)} & locnum(il.(S,n),S) = n by AMISTD_1:def 13
,TARSKI:def 1;
  assume
A2: F = {il.(S,n)};
  hereby
    let x be set;
    assume
    x in LocNums(F,S);
    then consider l being Element of NAT such that
A3: x = locnum(l,S) and
A4: l in F;
    l = il.(S,n) by A2,A4,TARSKI:def 1;
    then x = n by A3,AMISTD_1:def 13;
    hence x in {n} by TARSKI:def 1;
  end;
  let x be set;
  assume
  x in {n};
  then x = n by TARSKI:def 1;
  hence thesis by A2,A1;
end;

theorem Th27:
  F, LocNums(F,S) are_equipotent
proof
  per cases;
  suppose
    F is empty;
    then reconsider F as empty Subset of NAT;
    LocNums(F,S) is empty;
    hence thesis;
  end;
  suppose
A1: F is non empty;
    LocNums(F,S),F are_equipotent
    proof
      defpred P[set,set] means ex n being Element of NAT st n = $1 & $2 = il.(
      S,n);
A2:   for x being set st x in LocNums(F,S) ex y being set st y in F & P[x,y]
      proof
        let x be set;
        assume
        x in LocNums(F,S);
        then consider l being Element of NAT such that
A3:     x = locnum(l,S) and
A4:     l in F;
        take l;
        thus l in F by A4;
        take locnum(l,S);
        thus thesis by A3,AMISTD_1:def 13;
      end;
      consider f being Function of LocNums(F,S),F such that
A5:   for x being set st x in LocNums(F,S) holds P[x,f.x] from FUNCT_2:
      sch 1( A2);
      take f;
      thus f is one-to-one
      proof
        let x,y be set;
        assume that
A6:     x in dom f & y in dom f and
A7:     f.x = f.y;
        dom f = LocNums(F,S) by A1,FUNCT_2:def 1;
        then ( P[x,f.x])& P[y,f.y] by A5,A6;
        hence thesis by A7,AMISTD_1:25;
      end;
      thus
A8:   dom f = LocNums(F,S) by A1,FUNCT_2:def 1;
      thus rng f c= F by RELAT_1:def 19;
      let a be set;
      assume
A9:   a in F;
      then reconsider l = a as Element of NAT;
A10:  locnum(l,S) in dom f by A8,A9;
      then P[locnum(l,S),f.locnum(l,S)] by A5,A8;
      then f.locnum(l,S) = a by AMISTD_1:def 13;
      hence thesis by A10,FUNCT_1:def 5;
    end;
    hence thesis;
  end;
end;

theorem Th28:
  card F c= order_type_of RelIncl LocNums(F,S)
proof
  set X = LocNums(F,S);
  F,X are_equipotent by Th27;
  then card X = card order_type_of RelIncl X & card F = card X by CARD_1:21
,CARD_5:16;
  hence thesis by CARD_1:24;
end;

theorem Th29:
  S is realistic & J is halting implies LocNums(NIC(J,L),S)
   = {locnum(L,S)}
proof
  assume
  S is realistic & J is halting;
  then NIC(J,L) = {L} by AMISTD_1:15
    .= {il.(S,locnum(L,S))} by AMISTD_1:def 13;
  hence thesis by Th26;
end;

theorem
  S is realistic & J is sequential implies LocNums(NIC(J,L),S) =
   {locnum(NextLoc(L,S),S)}
proof
  assume
  S is realistic & J is sequential;
  then NIC(J,L) = {NextLoc(L,S)} by AMISTD_1:41
    .= {il.(S,locnum(NextLoc(L,S),S))} by AMISTD_1:def 13;
  hence thesis by Th26;
end;

:: LocSeq

definition
  set Z = NAT;
  let N be with_non-empty_elements non empty set,
  S be standard (IC-Ins-separated
definite (non empty stored-program AMI-Struct over N)), M be Subset of NAT
  ;
  deffunc F(set) = il.(S, canonical_isomorphism_of (RelIncl order_type_of
  RelIncl LocNums(M,S),RelIncl LocNums(M,S)).$1);
  func LocSeq(M,S) -> T-Sequence of NAT means
  :Def4:
  dom it = card M & for m
being set st m in card M holds it.m = il.(S, canonical_isomorphism_of (RelIncl
  order_type_of RelIncl LocNums(M,S), RelIncl LocNums(M,S)).m);
  existence
  proof
    consider f being T-Sequence such that
A1: dom f = card M and
A2: for A being Ordinal st A in card M holds f.A = F(A) from ORDINAL2:
    sch 2;
    f is NAT-valued
    proof
      let y be set;
      assume
      y in rng f;
      then consider x being set such that
A3:   x in dom f & y = f.x by FUNCT_1:def 5;
      F(x) in NAT;
      hence thesis by A1,A2,A3;
    end;
    then reconsider f as T-Sequence of NAT;
    take f;
    thus dom f = card M by A1;
    let m be set;
    assume
    m in card M;
    hence thesis by A2;
  end;
  uniqueness
  proof
    let f, g be T-Sequence of Z such that
A4: dom f = card M and
A5: for m being set st m in card M holds f.m = F(m) and
A6: dom g = card M and
A7: for m being set st m in card M holds g.m = F(m);
    for x being set st x in dom f holds f.x = g.x
    proof
      let x be set such that
A8:   x in dom f;
      thus f.x = F(x) by A4,A5,A8
        .= g.x by A4,A7,A8;
    end;
    hence thesis by A4,A6,FUNCT_1:9;
  end;
end;

theorem
  F = {il.(S,n)} implies LocSeq(F,S) = 0 .--> il.(S,n)
proof
  assume
A1: F = {il.(S,n)};
  then
A2: card F = {0} by CARD_1:50,87;
  {n} c= omega
  proof
    let a be set;
    assume
    a in {n};
    hence thesis by ORDINAL1:def 13;
  end;
  then
A3: canonical_isomorphism_of(RelIncl order_type_of RelIncl {n}, RelIncl { n}
  ).0 = (0 .--> n).0 by CARD_5:50
    .= n by FUNCOP_1:87;
A4: dom LocSeq(F,S) = card F by Def4;
A5: LocNums(F,S) = {n} by A1,Th26;
A6: for a being set st a in dom LocSeq(F,S) holds (LocSeq(F,S)).a
 = (0 .--> il.(S,n) ) . a
  proof
    let a be set;
    assume
A7: a in dom LocSeq(F,S);
    then
A8: a = 0 by A4,A2,TARSKI:def 1;
    thus (LocSeq(F,S)).a = il.(S, canonical_isomorphism_of
     (RelIncl order_type_of
    RelIncl LocNums(F,S), RelIncl LocNums(F,S)).a) by A4,A7,Def4
      .= (0 .--> il.(S,n)).a by A5,A3,A8,FUNCOP_1:87;
  end;
  dom (0 .--> il.(S,n)) = {0} by FUNCOP_1:19;
  hence thesis by A1,A4,A6,CARD_1:50,87,FUNCT_1:9;
end;

registration
  let N be with_non-empty_elements non empty set,
  S be standard (IC-Ins-separated
definite steady-programmed
 (non empty stored-program AMI-Struct over N)), M be Subset of NAT
  ;
  cluster LocSeq(M,S) -> one-to-one;
  coherence
  proof
    set X = LocNums(M,S);
    set f = LocSeq(M,S);
    set C = canonical_isomorphism_of (RelIncl order_type_of RelIncl X,RelIncl
    X);
    let x1,x2 be set such that
A1: x1 in dom f & x2 in dom f and
A2: f.x1 = f.x2;
A3: dom f = card M by Def4;
    then f.x1 = il.(S,C.x1) & f.x2 = il.(S,C.x2) by A1,Def4;
    then
A4: C.x1 = C.x2 by A2,AMISTD_1:25;
A5: card M c= order_type_of RelIncl X by Th28;
    consider phi being Ordinal-Sequence such that
A6: phi = C and
A7: phi is increasing and
A8: dom phi = order_type_of RelIncl X and
    rng phi = X by CARD_5:14;
    phi is one-to-one by A7,CARD_5:20;
    hence thesis by A1,A3,A4,A6,A8,A5,FUNCT_1:def 8;
  end;
end;

:: Tree of Execution

definition
  let N be with_non-empty_elements non empty set,
  S be standard (IC-Ins-separated
  definite (non empty stored-program AMI-Struct over N)),
  M be (the Instructions of S)-valued NAT-defined
  FinPartState of S;
  func ExecTree(M) -> DecoratedTree of NAT means
  :Def5:
  it.{} = FirstLoc(M) &
  for t being Element of dom it holds succ t = { t^<*k*> where k is Element of
NAT: k in card NIC(M/.(it.t),it.t) } & for m being Element of NAT st m in card
  NIC(M/.(it.t),it.t) holds it.(t^<*m*>) = (LocSeq(NIC(M/.(it.t),it.t),S)).m;
  existence
  proof
    defpred S[Element of NAT,Nat] means $1 in card NIC(M/.$2,$2);
    reconsider n = FirstLoc(M) as Element of NAT;
    defpred P[set,Element of NAT,set] means ex l being Element of NAT
 st l = $1 & ($2 in dom LocSeq(NIC(M/.l,l),S) implies
 $3 = (LocSeq(NIC(M/.l,l),S)).$2) &
  (not $2 in dom LocSeq(NIC(M/.l,l),S) implies $3 = il.(S,0));
    set D = NAT;
A1: for x being Element of NAT, y being Element of NAT ex z being Element
    of NAT st P[x,y,z]
    proof
      let x be Element of NAT, y be Element of NAT;
      set z = (LocSeq(NIC(M/.x,x),S)).y;
      per cases;
      suppose
A2:     y in dom LocSeq(NIC(M/.x,x),S);
        take z;
A3:     rng LocSeq(NIC(M/.x,x),S) c= D by RELAT_1:def 19;
        z in rng LocSeq(NIC(M/.x,x),S) by A2,FUNCT_1:def 5;
        hence thesis by A2,A3;
      end;
      suppose
A4:     not y in dom LocSeq(NIC(M/.x,x),S);
        reconsider il = il.(S,0) as Element of NAT;
        take il;
        thus thesis by A4;
      end;
    end;
    consider f be Function of [:D,NAT:],D such that
A5: for l being Element of NAT, n being Element of NAT holds P[l,n,f.(
    l,n)] from BINOP_1:sch 3(A1);
A6: for d being Element of NAT, k1, k2 being Element of NAT st k1 <= k2 &
    S[k2,d] holds S[k1,d]
    proof
      let d be Element of NAT, k1, k2 be Element of NAT such that
A7:   k1 <= k2 and
A8:   S[k2,d];
      k1 c= k2 by A7,NAT_1:40;
      hence thesis by A8,ORDINAL1:22;
    end;
    consider T being DecoratedTree of NAT such that
A9: T.{} = n and
A10: for t being Element of dom T holds succ t = { t^<*k*> where k is
Element of NAT: S[k,T.t]} & for n being Element of NAT st S[n,T.t] holds T.(t^
    <*n*>) = f.(T.t,n) from TREES_2:sch 10(A6);
    take T;
    thus T.{} = FirstLoc(M) by A9;
    let t be Element of dom T;
    thus
     succ t ={ t^<*k*> where k is Element of NAT: S[k,T.t]} by A10;
    reconsider n = T.t as Element of NAT;
    let m be Element of NAT;
    consider l being Element of NAT such that
A13: l = n and
A14: m in dom LocSeq(NIC(M/.l,l),S) implies
 f.(n,m)= (LocSeq(NIC(M/.l,l),S)).m and
    not m in dom LocSeq(NIC(M/.l,l),S) implies f.(n,m) = il.(S,0) by A5;
    assume
     m in card NIC(M/.(T.t),T.t);
    hence thesis by A10,A13,A14,Def4;
  end;
  uniqueness
  proof
    let T1,T2 be DecoratedTree of NAT such that
A16: T1.{} = FirstLoc(M) and
A17: for t being Element of dom T1 holds succ t = { t^<*k*> where k is
Element of NAT: k in card NIC(M/.(T1.t),T1.t)} & for m being Element of NAT st
m in card NIC(M/.(T1.t),T1.t) holds T1.(t^<*m*>) =
     (LocSeq(NIC(M/.(T1.t),T1.t),S)).m and
A18: T2.{} = FirstLoc(M) and
A19: for t being Element of dom T2 holds succ t = { t^<*k*> where k is
Element of NAT: k in card NIC(M/.(T2.t),T2.t)} & for m being Element of NAT st
m in card NIC(M/.(T2.t),T2.t) holds T2.(t^<*m*>) =
 (LocSeq(NIC(M/.(T2.t),T2.t),S)).m;
    defpred P[Element of NAT] means dom T1-level $1 = dom T2-level $1;
A20: for n being Element of NAT st P[n] holds P[n+1]
    proof
      let n be Element of NAT such that
A21:  P[n];
      set U2 = { succ w where w is Element of dom T2 : len w = n };
      set U1 = { succ w where w is Element of dom T1 : len w = n };
A22:  dom T2-level n = {v where v is Element of dom T2: len v = n} by
TREES_2:def 6;
A23:  dom T1-level n = {v where v is Element of dom T1: len v = n} by
TREES_2:def 6;
A24:  union U1 = union U2
      proof
        hereby
          let a be set;
          assume
          a in union U1;
          then consider A being set such that
A25:      a in A and
A26:      A in U1 by TARSKI:def 4;
          consider w being Element of dom T1 such that
A27:      A = succ w and
A28:      len w = n by A26;
          w in dom T1-level n by A23,A28;
          then consider v being Element of dom T2 such that
A29:      w = v and
A30:      len v = n by A21,A22;
A31:      w = w|Seg len w by FINSEQ_3:55;
          defpred R[Element of NAT] means $1 <= len w & w|Seg $1 in dom T1 & v
          |Seg $1 in dom T2 implies T1.(w|Seg $1) = T2.(w|Seg $1);
A32:      for n being Element of NAT st R[n] holds R[n+1]
          proof
            let n be Element of NAT;
            assume that
A33:        R[n] and
A34:        n+1 <= len w and
A35:        w|Seg (n+1) in dom T1 and
A36:        v|Seg (n+1) in dom T2;
            set t1 = w|Seg n;
A37:        1 <= n+1 by NAT_1:11;
A38:        len(w|Seg(n+1)) = n+1 by A34,FINSEQ_1:21;
            then len(w|Seg(n+1)) in Seg(n+1) by A37,FINSEQ_1:3;
            then
A39:        w.(n+1) = (w|Seg(n+1)).len(w|Seg(n+1)) by A38,FUNCT_1:72;
            n+1 in dom w by A34,A37,FINSEQ_3:27;
            then
A40:        w|Seg(n+1) = t1^<*(w|Seg(n+1)).len (w|Seg(n+1))*> by A39,
FINSEQ_5:11;
A41:        n <= n+1 by NAT_1:11;
            then
A42:        Seg n c= Seg(n+1) by FINSEQ_1:7;
            then v|Seg n = v|Seg(n+1)|Seg n by RELAT_1:103;
            then
A43:        v|Seg n is_a_prefix_of v|Seg(n+1) by TREES_1:def 1;
            w|Seg n = w|Seg(n+1)|Seg n by A42,RELAT_1:103;
            then w|Seg n is_a_prefix_of w|Seg(n+1) by TREES_1:def 1;
            then reconsider t1 as Element of dom T1 by A35,TREES_1:45;
            reconsider t2 = t1 as Element of dom T2 by A29,A36,A43,TREES_1:45;
A44:        succ t1 = { t1^<*k*> where k is Element of NAT: k in card NIC
            (M/.(T1.t1),T1.t1)} by A17;
A45:        (w|Seg(n+1)).len(w|Seg(n+1)) is Element of NAT by ORDINAL1:def 13;
            then t1^<*(w|Seg(n+1)).len(w|Seg(n+1))*> in succ t1 by A35,A40,
TREES_2:14;
            then consider k being Element of NAT such that
A46:        t1^<*(w|Seg(n+1)).len(w|Seg(n+1))*> = t1^<*k*> and
A47:        k in card NIC(M/.(T1.t1),T1.t1) by A44;
A48:        (w|Seg(n+1)).len(w|Seg(n+1)) in card NIC(M/.(T2.t2),T2.t2)
            by A33,A34,A36,A41,A43,A46,A47,FINSEQ_2:20,TREES_1:45,XXREAL_0:2;
            k = (w|Seg(n+1)).len(w|Seg(n+1)) by A46,FINSEQ_2:20;
            hence
            T1.(w|Seg(n+1)) = (LocSeq(NIC(M/.(T1.t1),T1.t1),S)).((w|Seg(n+1
            )).len (w|Seg(n+1))) by A17,A40,A47
              .= T2.(w|Seg(n+1)) by A19,A33,A34,A36,A41,A43,A45,A40,A48,
TREES_1:45,XXREAL_0:2;
          end;
A49:      R[0] by A16,A18;
          for n being Element of NAT holds R[n] from NAT_1:sch 1(A49,A32);
          then
A50:      T1.w = T2.w by A29,A31;
A51:      succ v in U2 by A30;
          succ v = {v^<*k*> where k is Element of NAT:
           k in card NIC(M/.(T2.v),T2.v)} &
           succ w = {w^<*k*> where k is Element of NAT:
            k in card NIC(M/.(T1.w),T1.w)} by A17,A19;
          hence a in union U2 by A25,A27,A29,A50,A51,TARSKI:def 4;
        end;
        let a be set;
        assume
        a in union U2;
        then consider A being set such that
A52:    a in A and
A53:    A in U2 by TARSKI:def 4;
        consider w being Element of dom T2 such that
A54:    A = succ w and
A55:    len w = n by A53;
        w in dom T2-level n by A22,A55;
        then consider v being Element of dom T1 such that
A56:    w = v and
A57:    len v = n by A21,A23;
A58:    w = w|Seg len w by FINSEQ_3:55;
        defpred R[Element of NAT] means $1 <= len w & w|Seg $1 in dom T1 & v|
        Seg $1 in dom T2 implies T1.(w|Seg $1) = T2.(w|Seg $1);
A59:    for n being Element of NAT st R[n] holds R[n+1]
        proof
          let n be Element of NAT;
          assume that
A60:      R[n] and
A61:      n+1 <= len w and
A62:      w|Seg (n+1) in dom T1 and
A63:      v|Seg (n+1) in dom T2;
          set t1 = w|Seg n;
A64:      1 <= n+1 by NAT_1:11;
A65:      len(w|Seg(n+1)) = n+1 by A61,FINSEQ_1:21;
          then len(w|Seg(n+1)) in Seg(n+1) by A64,FINSEQ_1:3;
          then
A66:      w.(n+1) = (w|Seg(n+1)).len(w|Seg(n+1)) by A65,FUNCT_1:72;
          n+1 in dom w by A61,A64,FINSEQ_3:27;
          then
A67:      w|Seg(n+1) = t1^<*(w|Seg(n+1)).len (w|Seg(n+1))*> by A66,FINSEQ_5:11;
A68:      n <= n+1 by NAT_1:11;
          then
A69:      Seg n c= Seg(n+1) by FINSEQ_1:7;
          then v|Seg n = v|Seg(n+1)|Seg n by RELAT_1:103;
          then
A70:      v|Seg n is_a_prefix_of v|Seg(n+1) by TREES_1:def 1;
          w|Seg n = w|Seg(n+1)|Seg n by A69,RELAT_1:103;
          then w|Seg n is_a_prefix_of w|Seg(n+1) by TREES_1:def 1;
          then reconsider t1 as Element of dom T1 by A62,TREES_1:45;
          reconsider t2 = t1 as Element of dom T2 by A56,A63,A70,TREES_1:45;
A71:      succ t1 = { t1^<*k*> where k is Element of NAT: k in card NIC(
          M/.(T1.t1),T1.t1)} by A17;
A72:      (w|Seg(n+1)).len(w|Seg(n+1)) is Element of NAT by ORDINAL1:def 13;
          then t1^<*(w|Seg(n+1)).len(w|Seg(n+1))*> in succ t1 by A62,A67,
TREES_2:14;
          then consider k being Element of NAT such that
A73:      t1^<*(w|Seg(n+1)).len(w|Seg(n+1))*> = t1^<*k*> and
A74:      k in card NIC(M/.(T1.t1),T1.t1) by A71;
A75:      (w|Seg(n+1)).len(w|Seg(n+1)) in card NIC(M/.(T2.t2),T2.t2) by A60
,A61,A63,A68,A70,A73,A74,FINSEQ_2:20,TREES_1:45,XXREAL_0:2;
          k = (w|Seg(n+1)).len(w|Seg(n+1)) by A73,FINSEQ_2:20;
          hence
          T1.(w|Seg(n+1)) = (LocSeq(NIC(M/.(T1.t1),T1.t1),S)).((w|Seg(n+1))
          .len(w|Seg(n+1))) by A17,A67,A74
            .= T2.(w|Seg(n+1)) by A19,A60,A61,A63,A68,A70,A72,A67,A75,
TREES_1:45,XXREAL_0:2;
        end;
A76:    R[0] by A16,A18;
        for n being Element of NAT holds R[n] from NAT_1:sch 1(A76,A59);
        then
A77:    T1.w = T2.w by A56,A58;
A78:    succ v in U1 by A57;
        succ v = {v^<*k*> where k is Element of NAT:
         k in card NIC(M/.(T1.v),T1.v)} &
         succ w = {w^<*k*> where k is Element of NAT:
         k in card NIC(M/.(T2.w),T2.w)} by A17,A19;
        hence thesis by A52,A54,A56,A77,A78,TARSKI:def 4;
      end;
      dom T1-level (n+1) = union U1 by QC_LANG4:18;
      hence thesis by A24,QC_LANG4:18;
    end;
    dom T1-level 0 = {{}} by QC_LANG4:17
      .= dom T2-level 0 by QC_LANG4:17;
    then
A79: P[0];
A80: for n being Element of NAT holds P[n] from NAT_1:sch 1(A79,A20);
    for p being FinSequence of NAT st p in dom T1 holds (T1 qua Function
    ).p = (T2 qua Function).p
    proof
      let p be FinSequence of NAT;
      defpred P[Element of NAT] means $1 <= len p & p|Seg $1 in dom T1 implies
      T1.(p|Seg $1) = T2.(p|Seg $1);
A82:  p|Seg len p = p by FINSEQ_3:55;
A83:  for n being Element of NAT st P[n] holds P[n+1]
      proof
        let n be Element of NAT;
        assume that
A84:    P[n] and
A85:    n+1 <= len p and
A86:    p|Seg (n+1) in dom T1;
        set t1 = p|Seg n;
A87:    1 <= n+1 by NAT_1:11;
A88:    len(p|Seg(n+1)) = n+1 by A85,FINSEQ_1:21;
        then len(p|Seg(n+1)) in Seg(n+1) by A87,FINSEQ_1:3;
        then
A89:    p.(n+1) = (p|Seg(n+1)).len(p|Seg(n+1)) by A88,FUNCT_1:72;
        n+1 in dom p by A85,A87,FINSEQ_3:27;
        then
A90:    p|Seg(n+1) = t1^<*(p|Seg(n+1)).len (p|Seg(n+1))*> by A89,FINSEQ_5:11;
A91:    n <= n+1 by NAT_1:11;
        then Seg n c= Seg(n+1) by FINSEQ_1:7;
        then p|Seg n = p|Seg(n+1)|Seg n by RELAT_1:103;
        then p|Seg n is_a_prefix_of p|Seg(n+1) by TREES_1:def 1;
        then reconsider t1 as Element of dom T1 by A86,TREES_1:45;
        reconsider t2 = t1 as Element of dom T2 by A80,TREES_2:40;
A92:    succ t1 = { t1^<*k*> where k is Element of NAT:
        k in card NIC(M/.(T1.t1),T1.t1)} by A17;
A93:    (p|Seg(n+1)).len(p|Seg(n+1)) is Element of NAT by ORDINAL1:def 13;
        then t1^<*(p|Seg(n+1)).len (p|Seg(n+1))*> in succ t1 by A86,A90,
TREES_2:14;
        then consider k being Element of NAT such that
A94:    t1^<*(p|Seg(n+1)).len (p|Seg(n+1))*> = t1^<*k*> and
A95:    k in card NIC(M/.(T1.t1),T1.t1) by A92;
A96:    (p|Seg(n+1)).len (p|Seg(n+1)) in card NIC(M/.(T2.t2),T2.t2) by A84,A85
,A91,A94,A95,FINSEQ_2:20,XXREAL_0:2;
        k = (p|Seg(n+1)).len (p|Seg(n+1)) by A94,FINSEQ_2:20;
        hence
        T1.(p|Seg (n+1)) = (LocSeq(NIC(M/.(T1.t1),T1.t1),S)).((p|Seg(n+1)).
        len (p|Seg(n+1))) by A17,A90,A95
          .= T2.(p|Seg (n+1)) by A19,A84,A85,A91,A93,A90,A96,XXREAL_0:2;
      end;
A97:  P[0] by A16,A18;
      for n being Element of NAT holds P[n] from NAT_1:sch 1(A97,A83);
      hence thesis by A82;
    end;
    hence thesis by A80,TREES_2:33,40;
  end;
end;

theorem
  for S being standard halting realistic (IC-Ins-separated definite
   steady-programmed (non
  empty stored-program AMI-Struct over N)) holds ExecTree Stop S =
  TrivialInfiniteTree --> il.(S,0)
proof
  set D = TrivialInfiniteTree;
  let S be standard halting realistic (IC-Ins-separated definite
   steady-programmed (non empty
  stored-program AMI-Struct over N));
  set M = Stop S;
  set E = ExecTree M;
  defpred R[set] means E.$1 in dom M;
  defpred X[Element of NAT] means dom E-level $1 = D-level $1;
A1: M = il.(S,0) .--> halt S by AMISTD_2:def 13;
  then
A2: dom M = {il.(S,0)} by FUNCOP_1:19;
A3: M.il.(S,0) = halt S by A1,FUNCOP_1:87;
A4: for t being Element of dom E holds card NIC(halt S,E.t) = {0}
  proof
    let t be Element of dom E;
    reconsider Et = E.t as Element of NAT;
    NIC(halt S,Et) = {Et} by AMISTD_1:15;
    hence thesis by CARD_1:50,87;
  end;
A5: for f being Element of dom E st R[f] for a being Element of NAT st f^<*a
  *> in dom E holds R[f^<*a*>]
  proof
    let f be Element of dom E such that
A6: R[f];
A7: M/.(E.f) = M.(E.f) by A6,PARTFUN1:def 8;
    reconsider Ef = E.f as Element of NAT;
A8: E.f = il.(S,0) by A2,A6,TARSKI:def 1;
    then
A9: locnum (Ef,S) = 0 by AMISTD_1:def 13;
    then LocNums(NIC(halt S,E.f),S) = {0} by Th29;
    then canonical_isomorphism_of (RelIncl order_type_of RelIncl
     LocNums(NIC(M/.(E.f),E.f),S), RelIncl LocNums(NIC(M/.(E.f),E.f),S))
      = 0 .--> locnum (Ef,S)
     by A3,A8,A9,A7,CARD_5:50;
    then
A10: canonical_isomorphism_of (RelIncl order_type_of RelIncl
 LocNums(NIC(M/.(E.f),E.f),S), RelIncl LocNums(NIC(M/.(E.f),E.f),S)).0
  = locnum (Ef,S) by FUNCOP_1:87
      .= 0 by A8,AMISTD_1:def 13;
A11: card NIC(halt S,E.f) = {0} by A4;
    then
A12: 0 in card NIC(M/.(E.f),E.f) by A3,A8,A7,TARSKI:def 1;
A13: succ f = { f^<*k*> where k is Element of NAT: k in card NIC(M/.(E.f)
    ,E.f) } by Def5;
A14: succ f = { f^<*0*> }
    proof
      hereby
        let s be set;
        assume
        s in succ f;
        then consider k being Element of NAT such that
A15:    s = f^<*k*> and
A16:    k in card NIC(M/.(E.f),E.f) by A13;
        k = 0 by A3,A11,A8,A7,A16,TARSKI:def 1;
        hence s in { f^<*0*> } by A15,TARSKI:def 1;
      end;
      let s be set;
      assume
      s in { f^<*0*> };
      then s = f^<*0*> by TARSKI:def 1;
      hence thesis by A13,A12;
    end;
    let a be Element of NAT;
    assume
    f^<*a*> in dom E;
    then f^<*a*> in succ f by TREES_2:14;
    then f^<*a*> = f^<*0*> by A14,TARSKI:def 1;
    then E.(f^<*a*>) = (LocSeq(NIC(M/.(E.f),E.f),S)).0 by A12,Def5
      .= il.(S,0) by A12,A10,Def4;
    hence thesis by A2,TARSKI:def 1;
  end;
  E.{} = FirstLoc(M) by Def5;
  then
A17: R[<*>NAT] by Th21;
A18: for f being Element of dom E holds R[f] from HILBERT2:sch 1(A17,A5);
A19: for x being set st x in dom E holds (E qua Function).x = il.(S,0)
  proof
    let x be set;
    assume
    x in dom E;
    then reconsider x as Element of dom E;
    E.x in dom M by A18;
    then E.x in {il.(S,0)} by A1,FUNCOP_1:19;
    then E.x = il.(S,0) by TARSKI:def 1;
    hence thesis;
  end;
A20: for n being Element of NAT st X[n] holds X[n+1]
  proof
    let n be Element of NAT;
    set f0 = n |-> 0;
    set f1 = (n+1) |-> 0;
A21: dom E-level (n+1) = {w where w is Element of dom E: len w = n+1} by
TREES_2:def 6;
A22: len f1 = n+1 by FINSEQ_1:def 18;
    assume
A23: X[n];
    dom E-level (n+1) = {f1}
    proof
      hereby
        let a be set;
        assume
        a in dom E-level (n+1);
        then consider t1 being Element of dom E such that
A24:    a = t1 and
A25:    len t1 = n+1 by A21;
        reconsider t0 = t1|Seg n as Element of dom E by RELAT_1:88,TREES_1:45;
A26:    succ t0 = { t0^<*k*> where k is Element of NAT:
          k in card NIC(M/.(E.t0),E.t0) } by Def5;
        E.t0 in dom M by A18;
        then
A27:    E.t0 = il.(S,0) by A2,TARSKI:def 1;
A28:    card NIC(halt S,E.t0) = {0} & M/.(E.t0) = M.(E.t0) by A4,A18,
PARTFUN1:def 8;
        then
A29:    0 in card NIC(M/.(E.t0),E.t0) by A3,A27,TARSKI:def 1;
A30:    succ t0 = { t0^<*0*> }
        proof
          hereby
            let s be set;
            assume
            s in succ t0;
            then consider k being Element of NAT such that
A31:        s = t0^<*k*> and
A32:        k in card NIC(M/.(E.t0),E.t0) by A26;
            k = 0 by A3,A27,A28,A32,TARSKI:def 1;
            hence s in { t0^<*0*> } by A31,TARSKI:def 1;
          end;
          let s be set;
          assume
          s in { t0^<*0*> };
          then s = t0^<*0*> by TARSKI:def 1;
          hence thesis by A26,A29;
        end;
        t1.(n+1) is Element of NAT & t1 = t0^<*t1.(n+1)*> by A25,FINSEQ_3:61
,ORDINAL1:def 13;
        then t0^<*t1.(n+1)*> in succ t0 by TREES_2:14;
        then
A33:    t0^<*t1.(n+1)*> = t0^<*0*> by A30,TARSKI:def 1;
        n <= n+1 by NAT_1:11;
        then Seg n c= Seg(n+1) by FINSEQ_1:7;
        then Seg n c= dom t1 by A25,FINSEQ_1:def 3;
        then dom t0 = Seg n by RELAT_1:91;
        then dom E-level n = {w where w is Element of dom E: len w = n} & len
        t0 = n by FINSEQ_1:def 3,TREES_2:def 6;
        then
A34:    t0 in dom E-level n;
A35:    dom E-level n = {f0} by A23,TREES_2:41;
        for k being Nat st 1 <= k & k <= len t1 holds t1.k = f1.k
        proof
          let k be Nat;
          assume
          1 <= k & k <= len t1;
          then
A36:      k in Seg(n+1) by A25,FINSEQ_1:3;
          now
            per cases by A36,FINSEQ_2:8;
            suppose
A37:          k in Seg n;
              hence t1.k = t0.k by FUNCT_1:72
                .= f0.k by A35,A34,TARSKI:def 1
                .= 0 by A37,FUNCOP_1:13;
            end;
            suppose
              k = n+1;
              hence t1.k = 0 by A33,FINSEQ_2:20;
            end;
          end;
          hence thesis by A36,FUNCOP_1:13;
        end;
        then t1 = f1 by A22,A25,FINSEQ_1:18;
        hence a in {f1} by A24,TARSKI:def 1;
      end;
      defpred P[Element of NAT] means $1 |-> 0 in dom E;
      let a be set;
A38:  for n being Element of NAT st P[n] holds P[n+1]
      proof
        let n be Element of NAT;
        assume
        P[n];
        then reconsider t = n |-> 0 as Element of dom E;
A39:    succ t = { t^<*k*> where k is Element of NAT:
          k in card NIC(M/.(E.t),E.t) } by Def5;
        E.t in dom M by A18;
        then
A40:    E.t = il.(S,0) by A2,TARSKI:def 1;
        card NIC(halt S,E.t) = {0} & M/.(E.t) = M.(E.t)
           by A4,A18,PARTFUN1:def 8
;
        then 0 in card NIC(M/.(E.t),E.t) by A3,A40,TARSKI:def 1;
        then t^<*0*> in succ t by A39;
        then t^<*0*> in dom E;
        hence thesis by FINSEQ_2:74;
      end;
A41:  P[0] by TREES_1:47;
      for n being Element of NAT holds P[n] from NAT_1:sch 1(A41,A38);
      then
A42:  f1 is Element of dom E;
      assume
      a in {f1};
      then a = f1 by TARSKI:def 1;
      hence thesis by A21,A22,A42;
    end;
    hence thesis by TREES_2:41;
  end;
  dom E-level 0 = {{}} by QC_LANG4:17
    .= D-level 0 by QC_LANG4:17;
  then
A43: X[0];
  for x being Element of NAT holds X[x] from NAT_1:sch 1(A43,A20);
  then dom E = D by TREES_2:40;
  hence thesis by A19,FUNCOP_1:17;
end;

