:: H\"older's Inequality and {M}inkowski's Inequality
::  by Yasumasa Suzuki
::
:: Received September 25, 2004
:: Copyright (c) 2004 Association of Mizar Users

environ

 vocabularies PRE_TOPC, BOOLE, RLVECT_1, FUNCT_1, ARYTM, ARYTM_1, ARYTM_3,
      PROB_1, LATTICES, RELAT_1, ABSVALUE, ORDINAL2, PARTFUN1, LIMFUNC1,
      FCONT_1, SEQ_1, SEQ_2, SEQM_3, RCOMP_1, FDIFF_1, PREPOWER, POWER,
      SERIES_1, FINSEQ_4, SUPINF_2, FRECHET2, OPPCAT_1;
 notations TARSKI, XBOOLE_0, SUBSET_1, RELAT_1, PARTFUN1, FUNCT_2, RFUNCT_2,
      LIMFUNC1, RCOMP_1, FCONT_1, XXREAL_0, XREAL_0, COMPLEX1, ORDINAL1,
      NUMBERS, REAL_1, NAT_1,
      VALUED_0, VALUED_1, SEQ_1, SEQ_2, SEQM_3, SERIES_1,
      FDIFF_1, PREPOWER, POWER, TAYLOR_1, RECDEF_1;
 constructors PARTFUN1, REAL_1, NAT_1, INT_2, SEQ_2, SEQM_3, RCOMP_1, RFUNCT_2,
      FCONT_1, LIMFUNC1, FDIFF_1, PREPOWER, SERIES_1, TAYLOR_1, SEQ_1,
      VALUED_1, RECDEF_1;
 registrations XBOOLE_0, ORDINAL1, RELSET_1, NUMBERS, XXREAL_0, XREAL_0,
      MEMBERED, SEQM_3, RCOMP_1, VALUED_0, VALUED_1, FUNCT_2, SEQ_2, SEQ_4;
 requirements SUBSET, REAL, BOOLE, NUMERALS, ARITHM;
 definitions SUBSET_1, LIMFUNC1;
 theorems XBOOLE_1, ABSVALUE, REAL_2, TARSKI, XBOOLE_0, XREAL_0,
      XCMPLX_1, RCOMP_1, SEQ_1, SEQ_2, SEQM_3, SERIES_1, FUNCT_1, RFUNCT_2,
      NAT_1, POWER, LIMFUNC1, FCONT_1, FCONT_3, FDIFF_1, ROLLE, SEQ_4,
      PREPOWER, RELSET_1, FUNCT_2, TAYLOR_1, XREAL_1, COMPLEX1, XXREAL_0,
      PARTFUN1, ORDINAL1, VALUED_1, XXREAL_1, VALUED_0;
 schemes SEQ_1, RECDEF_1, NAT_1, PARTFUN2;

begin :: H\"older 's inequality

reserve a, b, p, q for Real;

registration
  let x be real number;
  cluster right_closed_halfline(x) -> non empty;
  coherence
  proof
    reconsider x as Real by XREAL_0:def 1;
    x in {g where g is Real : x<=g};
    hence thesis by XXREAL_1:232;
  end;
end;

theorem
  for p, q be Real st 0 < p & 0 < q for a be Real st 0 <= a holds
  (a to_power p) * (a to_power q) = a to_power (p+q)
proof
  let p, q be Real such that
A1: 0 < p & 0 < q;
  let a be Real such that
A2: 0 <=a;
A3: 0+ 0 < p+q by A1;
  now per cases;
    case
A4:   a=0;
      then (a to_power p) * (a to_power q)
      = 0 * (0 to_power q) by A1,POWER:def 2
        .= 0;
      hence (a to_power p) * (a to_power q)
      = a to_power (p+q) by A3,A4,POWER:def 2;
    end;
    case a <> 0;
      hence (a to_power p) * (a to_power q) = a to_power (p+q) by A2,POWER:32;
    end;
  end;
  hence thesis;
end;

theorem
  for p, q be Real st 0 < p & 0 < q for a be Real st 0 <=a
  holds (a to_power p) to_power q = a to_power (p*q)
proof
  let p, q be Real such that
A1: 0 < p & 0 < q;
  let a be Real such that
A2: 0 <=a;
A3: 0 < p*q by A1,REAL_2:122;
  now per cases;
    case
A4:   a=0;
      then (a to_power p) to_power q = 0 to_power q by A1,POWER:def 2
        .= 0 by A1,POWER:def 2;
      hence (a to_power p) to_power q = a to_power (p*q) by A3,A4,POWER:def 2;
    end;
    case a <> 0;
      hence (a to_power p) to_power q = a to_power (p*q) by A2,POWER:38;
    end;
  end;
  hence thesis;
end;

theorem Th3:
  for p be Real st 0 < p for a,b be Real st 0 <= a & a <= b
  holds a to_power p <= b to_power p
proof
  let p be Real such that
A1: 0 < p;
  let a, b be Real such that
A2: 0 <= a & a<=b;
  per cases;
  suppose a=b;
    hence a to_power p <= b to_power p;
  end;
  suppose
A3: a<>b;
    thus a to_power p <= b to_power p
    proof
A4:   a < b by A2,A3,XXREAL_0:1;
      now per cases;
        case
A5:       a=0;
          then a to_power p = 0 by A1,POWER:def 2;
          hence a to_power p <= b to_power p by A2,A3,A5,POWER:39;
        end;
        case a <> 0;
          hence a to_power p <= b to_power p by A1,A2,A4,POWER:42;
        end;
      end;
      hence thesis;
    end;
  end;
end;

theorem Th4:
  1 < p & 1/p + 1/q = 1 & 0 < a & 0 < b implies
  (a * b <= a #R p / p + b #R q / q
  & (a * b = a #R p / p + b #R q / q iff a #R p= b #R q) )
proof
  assume that
A1: 1 < p and
A2: 1/p + 1/q = 1 and
A3: 0 < a and
A4: 0 < b;
  reconsider pp=1/p as Real;
  1-pp <> 0 by A1,REAL_2:142;
  then
A5: (q")" <> 0 by A2;
  then ((1*q+1*p)/(p*q))*(p*q) =1*(p*q) by A1,A2,XCMPLX_1:117;
  then
A6: q+p=p*q by A1,A5,XCMPLX_1:6,88;
  then
A7: (1-q)*p + q=0;
A8: (q-1)*p =q by A6;
A9: ex g be PartFunc of REAL,REAL st dom(g)=REAL &
  for x be Real holds g.x=1 / q - x &
  for x be Real holds g is_differentiable_in x & diff(g,x)=-1
  proof
    defpred X[set] means $1 in REAL;
    deffunc U(Real) = 1/q - $1;
    consider g being PartFunc of REAL,REAL such that
A10: for d be Element of REAL holds d in dom g iff X[d] and
A11: for d be Element of REAL
    st d in dom g holds g/.d = U(d) from PARTFUN2:sch 2;
    take g;
A12: dom(g)=REAL
    proof
A13:  dom(g) c= REAL by RELSET_1:12;
      for x be set st x in REAL holds x in dom g by A10;
      then REAL c=dom(g) by TARSKI:def 3;
      hence dom (g) =REAL by A13,XBOOLE_0:def 10;
    end;
A14: for d be Element of REAL holds g.d = 1 / q-d
    proof
      let d be Element of REAL;
      g/.d = 1 / q-d by A11,A12;
      hence g.d = 1 / q-d by A12,PARTFUN1:def 8;
    end;
A15: for d be Real st d in REAL holds g.d = (-1)*d + 1 / q
    proof
      let d be Real such that d in REAL;
      thus g.d=1 / q-d by A14
        .= (-1)*d + 1 / q;
    end;
    then
A16: g is_differentiable_on dom(g) by A12,FCONT_3:4,FDIFF_1:31;
    for x be Real holds g is_differentiable_in x & diff(g,x)=-1
    proof
      let d be Real;
      thus g is_differentiable_in d by A12,A16,FCONT_3:4,FDIFF_1:16;
      thus diff(g,d)=(g`|dom(g)).d by A12,A16,FDIFF_1:def 8
        .= -1 by A12,A15,FCONT_3:4,FDIFF_1:31;
    end;
    hence thesis by A12,A14;
  end;
A17: ex h be PartFunc of REAL,REAL st dom(h)= right_open_halfline(0) &
  for x be Real st x > 0 holds h.x=x #R p / p &
  h is_differentiable_in x & diff(h,x)=x #R (p-1)
  proof
    set h=(1/p)(#)( #R p);
    take h;
    dom( #R p) =right_open_halfline(0) by TAYLOR_1:def 4;
    hence
A18: dom(h)= right_open_halfline(0) by VALUED_1:def 5;
    now
      let x be Real such that
A19:  x > 0;
A20:  x in right_open_halfline(0)
      proof
        x in {g where g is Real : 0<g} by A19;
        hence thesis by XXREAL_1:230;
      end;
      hence h.x = (1/p) * ( #R p).x by A18,VALUED_1:def 5
        .=(1/p) *(x #R p) by A20,TAYLOR_1:def 4
        .=(x #R p) /p by XCMPLX_1:100;
A21:  ( #R p) is_differentiable_in x by A19,TAYLOR_1:21;
      hence h is_differentiable_in x by FDIFF_1:23;
      thus diff(h,x) = (1/p)*diff(( #R p),x) by A21,FDIFF_1:23
        .= (1/p)*(p*(x #R (p-1))) by A19,TAYLOR_1:21
        .= (1/p)*p*(x #R (p-1))
        .= 1*x #R (p-1) by A1,XCMPLX_1:107
        .=x #R (p-1);
    end;
    hence thesis;
  end;
  consider g be PartFunc of REAL,REAL such that
A22: dom(g)=REAL and
A23: for x be Real holds g.x=1 / q - x and
A24: for x be Real holds g is_differentiable_in x & diff(g,x)=-1 by A9;
  consider h be PartFunc of REAL,REAL such that
A25: dom(h)= right_open_halfline(0) and
A26: for x be Real st x > 0 holds h.x=x #R p / p & h is_differentiable_in x
  & diff(h,x)=x #R (p-1) by A17;
  set f=h+g;
A27: dom f= right_open_halfline(0) /\ REAL by A22,A25,VALUED_1:def 1
    .= right_open_halfline(0) by XBOOLE_1:28;
A28: for x be Real st x in right_open_halfline(0) holds
  f.x=x #R p / p + 1 / q - x &
  f is_differentiable_in x & diff(f,x)=x #R (p-1) -1
  proof
    let x be Real such that
A29: x in right_open_halfline(0);
    x in {y where y is Real : 0< y} by A29,XXREAL_1:230;
    then
A30: ex y be Real st x=y & 0 < y;
A31: g is_differentiable_in x by A24;
A32: diff(g,x)=-1 by A24;
A33: h is_differentiable_in x by A26,A30;
A34: diff(h,x)=x #R (p-1) by A26,A30;
    thus f.x=h.x + g.x by A27,A29,VALUED_1:def 1
      .=x #R p / p + g.x by A26,A30
      .=x #R p / p +(1 / q - x) by A23
      .=x #R p / p +1 / q - x;
    thus f is_differentiable_in x by A31,A33,FDIFF_1:21;
    thus diff(f,x)=diff(h,x)+diff(g,x) by A31,A33,FDIFF_1:21
      .=x #R (p-1) - 1 by A32,A34;
  end;
A35: for x be Real st 0 < x & x <> 1 holds x < x #R p / p + 1 / q
  proof
    let x be Real such that
A36: 0 < x & x <> 1;
    x in {y where y is Real : 0< y} by A36;
    then
A37: x in right_open_halfline(0) by XXREAL_1:230;
A38: right_open_halfline(0) is open Subset of REAL by FCONT_3:7;
    for x be Real st x in right_open_halfline(0) holds
    f is_differentiable_in x by A28;
    then
A39: f is_differentiable_on right_open_halfline(0) by A27,A38,FDIFF_1:16;
    1 in {y where y is Real : 0< y};
    then 1 in right_open_halfline(0) by XXREAL_1:230;
    then
A40: f.1= 1 #R p / p + 1 / q - 1 by A28
      .=1/p + 1/q -1 by PREPOWER:87
      .=0 by A2;
    now per cases by A36,XXREAL_0:1;
      case
A41:    x<1;
        set t=1-x;
A42:    1-1 < 1-x by A41,XREAL_1:17;
A43:    [.x,x+t.] c= right_open_halfline(0)
        proof
          now
            let z be set such that
A44:        z in [.x,x+t.];
            z in {r where r is Real: x<=r & r<=x+t } by A44,RCOMP_1:def 1;
            then consider r be Real such that
A45:        r=z & x<=r & r<=x+t;
            z in {y where y is Real : 0< y} by A36,A45;
            hence z in right_open_halfline(0) by XXREAL_1:230;
          end;
          hence thesis by TARSKI:def 3;
        end;
A46:    ].x,x+t.[ c= [.x,x+t.] by XXREAL_1:25;
X:      right_open_halfline(0) c= dom f by A27;
        f|right_open_halfline(0) is continuous  by A39,FDIFF_1:33;
        then
A47:    f|[.x,x+t.] is continuous  by A43,X,FCONT_1:17;
Y:      [.x,x+t.] c= dom f by X,A43,XBOOLE_1:1;
        f is_differentiable_on ].x,x+t.[ by A39,A43,A46,FDIFF_1:34,XBOOLE_1:1;
        then consider s be Real such that
A48:    0<s and
A49:    s<1 and
A50:    f.(x+t) = f.x + t*diff(f,x+s*t) by A42,A47,Y,ROLLE:4;
        0*t < s*t by A42,A48,XREAL_1:70;
        then
A51:    0 + 0 < x+s*t by A36;
        s*t < 1*t by A42,A49,XREAL_1:70;
        then
A52:    x+s*t < x+t by XREAL_1:10;
        x+s*t in right_open_halfline(0)
        proof
          x+s*t in {y where y is Real : 0< y} by A51;
          hence x+s*t in right_open_halfline(0) by XXREAL_1:230;
        end;
        then
A53:    diff(f,x+s*t) =(x+s*t) #R (p-1)-1 by A28;
        1-1 < p-1 by A1,XREAL_1:16;
        then (x+s*t) to_power (p-1) < (x+s*t) to_power 0 by A51,A52,POWER:45;
        then (x+s*t) #R (p-1) < (x+s*t) to_power 0 by A51,POWER:def 2;
        then (x+s*t) #R (p-1) < (x+s*t) #R 0 by A51,POWER:def 2;
        then (x+s*t) #R (p-1) < 1 by A51,PREPOWER:85;
        then (x+s*t) #R (p-1) -1 < 1-1 by XREAL_1:16;
        then t*diff(f,x+s*t) < t*0 by A42,A53,XREAL_1:70;
        then f.x + t*diff(f,x+s*t) < f.x +0 by XREAL_1:10;
        then 0 < x #R p / p + 1 / q-x by A28,A37,A40,A50;
        then 0+x < x #R p / p + 1 / q-x+x by XREAL_1:10;
        hence x < x #R p / p + 1 / q;
      end;
      case
A54:    x > 1;
        set t=x-1;
A55:    1-1 < x-1 by A54,XREAL_1:16;
A56:    [.1,1+t.] c= right_open_halfline(0)
        proof
          now
            let z be set such that
A57:        z in [.1,1+t.];
            z in {r where r is Real: 1<=r & r<=1+t } by A57,RCOMP_1:def 1;
            then consider r be Real such that
A58:        r=z & 1<=r & r<=1+t;
            z in {y where y is Real : 0< y} by A58;
            hence z in right_open_halfline(0) by XXREAL_1:230;
          end;
          hence thesis by TARSKI:def 3;
        end;
A59:    ].1,1+t.[ c= [.1,1+t.] by XXREAL_1:25;
X:      right_open_halfline(0) c= dom f by A27;
        f|right_open_halfline(0) is continuous  by A39,FDIFF_1:33;
        then
A60:    f|[.1,1+t.] is continuous  by A56,X,FCONT_1:17;
Y:      [.1,1+t.] c= dom f by X,A56,XBOOLE_1:1;
        f is_differentiable_on ].1,1+t.[ by A39,A56,A59,FDIFF_1:34,XBOOLE_1:1;
        then consider s be Real such that
A61:    0<s and s<1 and
A62:    f.(1+t) = f.1 + t*diff(f,1+s*t) by A55,A60,Y,ROLLE:4;
A63:    0*t < s*t by A55,A61,XREAL_1:70;
        then
A64:    0 + 0 < 1+s*t;
A65:    1+s*t in right_open_halfline(0)
        proof
          1+s*t in {y where y is Real : 0< y} by A64;
          hence 1+s*t in right_open_halfline(0) by XXREAL_1:230;
        end;
A66:    1+ 0 < 1+ s*t by A63,XREAL_1:10;
A67:    diff(f,1+s*t) =(1+s*t) #R (p-1)-1 by A28,A65;
        1-1 < p-1 by A1,XREAL_1:16;
        then 1 < (1+s*t) #R (p-1) by A66,PREPOWER:100;
        then 1-1 < (1+s*t) #R (p-1) -1 by XREAL_1:16;
        then t*0 < t*diff(f,1+s*t) by A55,A67,XREAL_1:70;
        then 0 < x #R p / p + 1 / q-x by A28,A37,A40,A62;
        then 0+x < x #R p / p + 1 / q-x+x by XREAL_1:10;
        hence x < x #R p / p + 1 / q;
      end;
    end;
    hence thesis;
  end;
A68: 0 < b #R (1-q) by A4,PREPOWER:95;
  then
A69: 0*(b #R (1-q)) < a * (b #R (1-q)) by A3,XREAL_1:70;
A70: 0 < b #R q by A4,PREPOWER:95;
  a * (b #R (1-q)) <= (a * (b #R (1-q))) #R p / p + 1 / q
  proof
    now per cases;
      case a * (b #R (1-q)) =1;
        hence a * (b #R (1-q)) =(a * (b #R (1-q))) #R p / p + 1 / q by A2,
PREPOWER:87;
      end;
      case a * (b #R (1-q)) <>1;
        hence a * (b #R (1-q)) <= (a * (b #R (1-q))) #R p / p + 1 / q
        by A35,A69;
      end;
    end;
    hence thesis;
  end;
  then a * (b #R (1-q)) *(b #R q)
  <= ((a * (b #R (1-q))) #R p / p + 1 / q)*(b #R q) by A70,XREAL_1:66;
  then a*( (b #R (1-q)) *(b #R q))
  <= ((a * (b #R (1-q))) #R p / p + 1 / q)*(b #R q);
  then a*(b #R ((1-q) + q))
  <= ((a * (b #R (1-q))) #R p / p + 1 / q)*(b #R q) by A4,PREPOWER:89;
  then a*b <= ((a * (b #R (1-q))) #R p / p + 1 / q)*(b #R q)
  by A4,PREPOWER:86;
  then a*b <= ((a #R p * (b #R (1-q)) #R p )/ p + 1 / q)*(b #R q)
  by A3,A68,PREPOWER:92;
  then a*b
  <= (a #R p * (b #R ((1-q)*p) )/ p + 1 / q)*(b #R q) by A4,PREPOWER:105;
  then a*b <= (a #R p * (b #R ((1-q)*p) )/ p )*(b #R q)+ (1 / q)*(b #R q);
  then a*b <= (a #R p * ((b #R ((1-q)*p) )/ p )*(b #R q))+ (1 / q)*(b #R q)
  by XCMPLX_1:75;
  then a*b <= a #R p * ((b #R ((1-q)*p) )/ p*(b #R q))+ (1 / q)*(b #R q);
  then a*b <= a #R p * ((b #R ((1-q)*p) )*(b #R q)/p)+ (1 / q)*(b #R q)
  by XCMPLX_1:75;
  then a*b <= a #R p * (b #R ((1-q)*p + q)/p)+ (1 / q)*(b #R q)
  by A4,PREPOWER:89;
  then a*b <= a #R p * (1/p)+ (1 / q)*(b #R q) by A4,A6,PREPOWER:85;
  then
A71: a*b <= a #R p /p+ (1 / q)*(b #R q) by XCMPLX_1:100;
  a * b = a #R p / p + b #R q / q iff a #R p= b #R q
  proof
A72: now
      assume a * b = a #R p / p + b #R q / q;
      then a*b = a #R p /p+ (1 / q)*(b #R q) by XCMPLX_1:100;
      then a*b = a #R p * (1/p)+ (1 / q)*(b #R q) by XCMPLX_1:100;
      then a*b = a #R p * (b #R 0/p)+ (1 / q)*(b #R q) by A4,PREPOWER:85;
      then a*b = a #R p * ((b #R ((1-q)*p) )*(b #R q)/p)+ (1 / q)*(b #R q)
      by A4,A7,PREPOWER:89;
      then a*b = a #R p * ((b #R ((1-q)*p) )/ p*(b #R q))+ (1 / q)*(b #R q)
      by XCMPLX_1:75;
      then a*b = (a #R p * ((b #R ((1-q)*p) )/ p )*(b #R q))+ (1 / q)*(b #R q);
      then a*b = (a #R p * (b #R ((1-q)*p) )/ p )*(b #R q)+ (1 / q)*(b #R q)
      by XCMPLX_1:75;
      then a*b = (a #R p * (b #R ((1-q)*p) )/ p + 1 / q)*(b #R q);
      then a*b = ((a #R p * (b #R (1-q)) #R p )/ p + 1 / q)*(b #R q)
      by A4,PREPOWER:105;
      then a*b = ((a * (b #R (1-q))) #R p / p + 1 / q)*(b #R q)
      by A3,A68,PREPOWER:92;
      then a*(b #R ((1-q) + q))
      = ((a * (b #R (1-q))) #R p / p + 1 / q)*(b #R q) by A4,PREPOWER:86;
      then a*( (b #R (1-q)) *(b #R q))
      = ((a * (b #R (1-q))) #R p / p + 1 / q)*(b #R q) by A4,PREPOWER:89;
      then a * (b #R (1-q)) *(b #R q)
      = ((a * (b #R (1-q))) #R p / p + 1 / q)*(b #R q);
      then
A73:  a * (b #R (1-q)) = (a * (b #R (1-q))) #R p / p + 1 / q
      by A70,XCMPLX_1:5;
      a *(( b #R (1-q))*( b #R (q-1))) = a *( b #R (1-q))*( b #R (q-1))
        .= 1*( b #R (q-1)) by A35,A69,A73;
      then a *( b #R ( (1-q)+ (q-1)) ) = b #R (q-1) by A4,PREPOWER:89;
      then a*1 = b #R (q-1) by A4,PREPOWER:85;
      hence a #R p = b #R q by A4,A8,PREPOWER:105;
    end;
A74: 0 < b #R (q-1) by A4,PREPOWER:95;
    now
      assume
A75:  a #R p= b #R q;
      then
A76:  a #R p = (b #R (q-1) ) #R p by A4,A8,PREPOWER:105;
      a=a #R 1 by A3,PREPOWER:86
        .=a #R (p *(1/p) ) by A1,XCMPLX_1:107
        .= (a #R p ) #R (1/p) by A3,PREPOWER:105
        .= (b #R (q-1) ) #R (p *(1/p)) by A4,A76,PREPOWER:95,105
        .=(b #R (q-1) ) #R 1 by A1,XCMPLX_1:107
        .= b #R (q-1) by A4,PREPOWER:86,95;
      then a*1 = b #R (q-1);
      then a *( b #R ( (1-q)+ (q-1)) ) = b #R (q-1) by A4,PREPOWER:85;
      then a *(( b #R (1-q))*( b #R (q-1))) =1*( b #R (q-1)) by A4,PREPOWER:89;
      then
A77:  a *( b #R (1-q))*( b #R (q-1)) =1*( b #R (q-1));
      thus a #R p / p + b #R q / q =b #R q *(1/ p) + b #R q / q by A75,
XCMPLX_1:100
        .=b #R q *(1/ p) + b #R q *(1/q) by XCMPLX_1:100
        .=b #R q * (1/p + 1/q)
        .=b #R q *(a*(b #R (1-q))) by A2,A74,A77,XCMPLX_1:5
        .=a* ( (b #R (1-q)) *(b #R q))
        .=a*(b #R ((1-q) + q)) by A4,PREPOWER:89
        .=a* b by A4,PREPOWER:86;
    end;
    hence thesis by A72;
  end;
  hence thesis by A71,XCMPLX_1:100;
end;

theorem Th5:
  1 < p & 1/p + 1/q = 1 & 0 <= a & 0 <= b implies
  (a * b <= a to_power p / p + b to_power q / q
  & (a * b = a to_power p / p + b to_power q / q
  iff a to_power p = b to_power q))
proof
  assume that
A1: 1 < p and
A2: 1/p + 1/q = 1 and
A3: 0 <= a and
A4: 0 <= b;
  reconsider pp=1/p as Real;
  1/p < 1 by A1,REAL_2:142;
  then
A5: 1-1 < 1-pp by XREAL_1:17;
  then
A6: 0 < q by A2;
A7: 0 <= a to_power p / p
  proof
    now per cases by A3;
      case 0 < a;
        then 0 < a to_power p by POWER:39;
        then 0/p < a to_power p/p by A1,XREAL_1:76;
        hence 0 <= a to_power p / p;
      end;
      case 0 = a;
        then 0 = a to_power p by A1,POWER:def 2;
        hence 0 <= a to_power p / p;
      end;
    end;
    hence thesis;
  end;
  0 <= b to_power q / q
  proof
    now per cases by A4;
      case 0 < b;
        then 0 < b to_power q by POWER:39;
        then 0/q < b to_power q/q by A6,XREAL_1:76;
        hence 0 <= b to_power q / q;
      end;
      case 0 = b;
        then 0 = b to_power q by A6,POWER:def 2;
        hence 0 <= b to_power q / q;
      end;
    end;
    hence thesis;
  end;
  then
A8: 0+0 <=a to_power p / p +b to_power q / q by A7;
  now per cases;
    case
A9:   a*b=0;
      a * b = a to_power p / p + b to_power q / q
      iff a to_power p = b to_power q
      proof
        now per cases by A9,XCMPLX_1:6;
          case
A10:        a=0;
            thus a * b = a to_power p / p + b to_power q / q
            iff a to_power p = b to_power q
            proof
A11:          now
                assume a * b = a to_power p / p + b to_power q / q;
                then 0 = 0/p + b to_power q / q by A1,A10,POWER:def 2;
                then 0*q = (b to_power q /q)*q;
                then 0 = b to_power q by A6,XCMPLX_1:88;
                then
A12:            0 = (b to_power q ) to_power (1/q) by A2,A5,POWER:def 2;
A13:            0=b
                proof
                  assume
A14:              b <> 0;
                  then 0 = b to_power (q * (1/q) ) by A4,A12,POWER:38;
                  then 0 = b to_power 1 by A6,XCMPLX_1:107;
                  hence contradiction by A14,POWER:30;
                end;
                thus a to_power p = 0 by A1,A10,POWER:def 2
                  .= b to_power q by A6,A13,POWER:def 2;
              end;
              now
                assume
A15:            a to_power p = b to_power q;
A16:            a to_power p /p = 0/p by A1,A10,POWER:def 2
                  .=0;
                b to_power q /q =0 /q by A1,A10,A15,POWER:def 2
                  .=0;
                hence a*b=a to_power p /p + b to_power q /q by A9,A16;
              end;
              hence thesis by A11;
            end;
          end;
          case
A17:        b=0;
            thus a * b = a to_power p / p + b to_power q / q
            iff a to_power p = b to_power q
            proof
A18:          1/p > 0 by A1,REAL_2:127;
A19:          now
                assume a * b = a to_power p / p + b to_power q / q;
                then 0 = 0/q + a to_power p / p by A6,A17,POWER:def 2;
                then 0*p = (a to_power p/p)*p;
                then 0 = a to_power p by A1,XCMPLX_1:88;
                then
A20:            0 = (a to_power p ) to_power (1/p) by A18,POWER:def 2;
A21:            0=a
                proof
                  assume
A22:              a <> 0;
                  then 0 = a to_power (p * (1/p) ) by A3,A20,POWER:38;
                  then 0 = a to_power 1 by A1,XCMPLX_1:107;
                  hence contradiction by A22,POWER:30;
                end;
                thus b to_power q = 0 by A6,A17,POWER:def 2
                  .= a to_power p by A1,A21,POWER:def 2;
              end;
              now
                assume
A23:            a to_power p = b to_power q;
A24:            b to_power q /q = 0/q by A6,A17,POWER:def 2
                  .= 0;
                a to_power p /p =0 /p by A6,A17,A23,POWER:def 2
                  .=0;
                hence a*b=a to_power p /p + b to_power q /q by A9,A24;
              end;
              hence thesis by A19;
            end;
          end;
        end;
        hence thesis;
      end;
      hence a * b <= a to_power p / p + b to_power q / q &
      (a * b = a to_power p / p + b to_power q / q
      iff a to_power p = b to_power q ) by A8,A9;
    end;
    case a*b<>0;
      then
A25:  a <> 0 & b <> 0;
      then a * b <= a #R p / p + b #R q / q by A1,A2,A3,A4,Th4;
      then
A26:  a * b <= a to_power p / p + b #R q / q by A3,A25,POWER:def 2;
      a * b = a #R p / p + b #R q / q
      iff a #R p = b #R q by A1,A2,A3,A4,A25,Th4;
      then a * b = a to_power p / p + b #R q / q
      iff a to_power p = b #R q by A3,A25,POWER:def 2;
      hence a * b <= a to_power p / p + b to_power q / q &
      (a * b = a to_power p / p + b to_power q / q
      iff a to_power p = b to_power q ) by A4,A25,A26,POWER:def 2;
    end;
  end;
  hence thesis;
end;

Lm1: for a be Real_Sequence st for n be Element of NAT holds 0 <= a.n holds
for n be Element of NAT holds a.n <= Partial_Sums(a).n
proof
  let a be Real_Sequence such that
A1: for n be Element of NAT holds 0 <= a.n;
  defpred P[Element of NAT] means a.$1 <=Partial_Sums(a).$1;
A2: P[0] by SERIES_1:def 1;
A3: for n be Element of NAT st P[n] holds P[n+1]
  proof
    let n be Element of NAT such that
A4: P[n];
A5: Partial_Sums(a).(n+1) = Partial_Sums(a).n + a.(n+1) by SERIES_1:def 1;
A6: a.n + a.(n+1) <= Partial_Sums(a).n + a.(n+1) by A4,XREAL_1:8;
    0 <= a.n by A1;
    then 0 + a.(n+1) <= a.n + a.(n+1) by XREAL_1:8;
    hence P[n+1] by A5,A6,XXREAL_0:2;
  end;
  for n be Element of NAT holds P[n] from NAT_1:sch 1(A2,A3);
  hence thesis;
end;

Lm2: for a be Real_Sequence st for n be Element of NAT holds 0 <= a.n holds
for n be Element of NAT holds 0 <= Partial_Sums(a).n
proof
  let a be Real_Sequence such that
A1: for n be Element of NAT holds 0 <= a.n;
  let n be Element of NAT;
  a.n <=Partial_Sums(a).n by A1,Lm1;
  hence 0 <=Partial_Sums(a).n by A1;
end;

Lm3: for a be Real_Sequence st for n be Element of NAT holds 0 <= a.n
for n be Element of NAT st Partial_Sums(a).n=0
holds for k be Element of NAT st k <= n holds a.k=0
proof
  let a be Real_Sequence such that
A1: for n be Element of NAT holds 0 <= a.n;
  let n be Element of NAT such that
A2: Partial_Sums(a).n=0;
  now
    let k be Element of NAT such that
A3: k <=n;
    Partial_Sums(a) is non-decreasing by A1,SERIES_1:19;
    then
A4: Partial_Sums(a).k <= Partial_Sums(a).n by A3,SEQM_3:12;
    a.k <=Partial_Sums(a).k by A1,Lm1;
    hence a.k=0 by A1,A2,A4;
  end;
  hence thesis;
end;

Lm4: for a be Real_Sequence
for n be Element of NAT st (for k be Element of NAT st k <=n holds a.k=0)
holds Partial_Sums(a).n=0
proof
  let a be Real_Sequence;

defpred P[Element of NAT] means (for k be Element of NAT st k <=$1 holds a.k=0)
  implies Partial_Sums(a).$1=0;
A1: P[0]
  proof
    assume for k be Element of NAT st k <=0 holds a.k=0;
    then a.0=0;
    hence Partial_Sums(a).0=0 by SERIES_1:def 1;
  end;
A2: for n be Element of NAT st P[n] holds P[n+1]
  proof
    let n be Element of NAT such that
A3: P[n];
    now
      assume
A4:   for k be Element of NAT st k <=n+1 holds a.k=0;
A5:   now
        let k be Element of NAT such that
A6:     k <= n;
        n <= n+1 by NAT_1:11;
        hence a.k=0 by A4,A6,XXREAL_0:2;
      end;
      thus Partial_Sums(a).(n+1) =Partial_Sums(a).n+a.(n+1) by SERIES_1:def 1
        .=0 by A3,A4,A5;
    end;
    hence thesis;
  end;
  thus for n be Element of NAT holds P[n] from NAT_1:sch 1 (A1,A2);
end;

begin  :: Minkowski's inequality

theorem Th6:
  for p, q be Real st 1 < p & 1/p + 1/q = 1
  for a,b,ap,bq,ab be Real_Sequence st ( for n be Element of NAT holds
  ap.n=abs(a.n) to_power p & bq.n=abs(b.n) to_power q
  & ab.n=abs(a.n* b.n)) holds for n be Element of NAT holds
  Partial_Sums(ab).n <= ( (Partial_Sums(ap).n) to_power (1/p) )
  * ( (Partial_Sums(bq).n) to_power (1/q) )
proof
  let p,q be Real such that
A1: 1 < p and
A2: 1/p + 1/q = 1;
  reconsider pp=1/p as Real;
  1/p < 1 by A1,REAL_2:142;
  then
A3: 1-1 < 1-pp by XREAL_1:17;
  then
A4: 0 < q by A2;
A5: 1/p > 0 by A1,REAL_2:127;
  let a,b,ap,bq,ab be Real_Sequence such that
A6: for n be Element of NAT holds ap.n=abs(a.n) to_power p
  & bq.n=abs(b.n) to_power q & ab.n=abs(a.n* b.n);
  let n be Element of NAT;
  set A=Partial_Sums(ap).n;
  set B=Partial_Sums(bq).n;
  set Ap=A to_power (1/p);
  set Bq=B to_power (1/q);
A7: for n be Element of NAT holds 0 <= ap.n
  proof
    let n be Element of NAT;
A8: ap.n=abs(a.n) to_power p by A6;
    now per cases by COMPLEX1:132;
      case abs(a.n) = 0;
        hence 0 <= ap.n by A1,A8,POWER:def 2;
      end;
      case abs(a.n) > 0;
        hence 0 <= ap.n by A8,POWER:39;
      end;
    end;
    hence thesis;
  end;
A9: for n be Element of NAT holds 0 <= bq.n
  proof
    let n be Element of NAT;
A10: bq.n=abs(b.n) to_power q by A6;
    now per cases by COMPLEX1:132;
      case abs(b.n) = 0;
        hence 0 <= bq.n by A4,A10,POWER:def 2;
      end;
      case abs(b.n) > 0;
        hence 0 <= bq.n by A10,POWER:39;
      end;
    end;
    hence thesis;
  end;
A11: 0 <= A by A7,Lm2;
A12: 0 <= B by A9,Lm2;
  now per cases;
    case
A13:  A*B = 0;
A14:  0 <= Ap
      proof
        now per cases by A7,Lm2;
          case 0 < A;
            hence 0 <= A to_power (1/p) by POWER:39;
          end;
          case 0 = A;
            hence 0 <= A to_power (1/p) by A5,POWER:def 2;
          end;
        end;
        hence thesis;
      end;
      0 <= Bq
      proof
        now per cases by A9,Lm2;
          case 0 < B;
            hence 0 <= B to_power (1/q) by POWER:39;
          end;
          case 0 = B;
            hence 0 <= B to_power (1/q) by A2,A3,POWER:def 2;
          end;
        end;
        hence thesis;
      end;
      then
A15:  0 <=Ap*Bq by A14;
      now per cases by A13,XCMPLX_1:6;
        case
A16:      A=0;
A17:      for k be Element of NAT st k <=n holds a.k=0
          proof
            let k be Element of NAT such that
A18:        k <=n;
            ap.k=0 by A7,A16,A18,Lm3;
            then
A19:        abs(a.k) to_power p = 0 by A6;
            abs(a.k) =0
            proof
              assume abs(a.k) <> 0;
              then abs(a.k) > 0 by COMPLEX1:132;
              hence contradiction by A19,POWER:39;
            end;
            hence thesis by ABSVALUE:7;
          end;
          for k be Element of NAT st k <=n holds ab.k=0
          proof
            let k be Element of NAT such that
A20:        k <=n;
            thus ab.k=abs(a.k * b.k) by A6
              .=abs(0 * b.k) by A17,A20
              .=0 by ABSVALUE:7;
          end;
          hence Partial_Sums(ab).n <= ( (Partial_Sums(ap).n) to_power (1/p) )
          * ( (Partial_Sums(bq).n) to_power (1/q) ) by A15,Lm4;
        end;
        case
A21:      B=0;
A22:      for k be Element of NAT st k <=n holds b.k=0
          proof
            let k be Element of NAT such that
A23:        k <=n;
            bq.k=0 by A9,A21,A23,Lm3;
            then
A24:        abs(b.k) to_power q = 0 by A6;
            abs(b.k) =0
            proof
              assume abs(b.k) <> 0;
              then abs(b.k) > 0 by COMPLEX1:132;
              hence contradiction by A24,POWER:39;
            end;
            hence thesis by ABSVALUE:7;
          end;
          for k be Element of NAT st k <=n holds ab.k=0
          proof
            let k be Element of NAT such that
A25:        k <=n;
            thus ab.k=abs(a.k * b.k) by A6
              .=abs(a.k * 0) by A22,A25
              .=0 by ABSVALUE:7;
          end;
          hence Partial_Sums(ab).n <= ( (Partial_Sums(ap).n) to_power (1/p) )
          * ( (Partial_Sums(bq).n) to_power (1/q) ) by A15,Lm4;
        end;
      end;
      hence Partial_Sums(ab).n <= ( (Partial_Sums(ap).n) to_power (1/p) )
      * ( (Partial_Sums(bq).n) to_power (1/q) );
    end;
    case A*B <> 0;
      then
A26:  A <> 0 & B <> 0;
      then
A27:  Ap > 0 by A11,POWER:39;
A28:  Bq > 0 by A12,A26,POWER:39;
      deffunc F(Element of NAT) =abs(a.$1)/Ap;
      consider x be Real_Sequence such that
A29:  for n be Element of NAT holds x.n=F(n) from SEQ_1:sch 1;
      deffunc G(Element of NAT) =abs(b.$1)/Bq;
      consider y be Real_Sequence such that
A30:  for n be Element of NAT holds y.n=G(n) from SEQ_1:sch 1;
A31:  for n be Element of NAT holds 0 <=x.n
      proof
        let n be Element of NAT;
        0 <= abs(a.n) by COMPLEX1:132;
        then 0 <= abs(a.n)/Ap by A27;
        hence 0 <= x.n by A29;
      end;
A32:  for n be Element of NAT holds 0 <=y.n
      proof
        let n be Element of NAT;
        0 <= abs(b.n) by COMPLEX1:132;
        then 0 <= abs(b.n)/Bq by A28;
        hence 0 <= y.n by A30;
      end;
A33:  for n be Element of NAT holds
      (x.n * y.n <= (x.n) to_power p / p + (y.n) to_power q / q
      & (x.n * y.n = (x.n) to_power p / p + (y.n) to_power q / q
      iff (x.n) to_power p = (y.n) to_power q))
      proof
        let n be Element of NAT;
A34:    0 <= x.n by A31;
        0 <= y.n by A32;
        hence x.n * y.n <= (x.n) to_power p / p + (y.n) to_power q / q
        & (x.n * y.n = (x.n) to_power p / p + (y.n) to_power q / q
        iff (x.n) to_power p = (y.n) to_power q) by A1,A2,A34,Th5;
      end;
A35:  for n be Element of NAT holds ((1/(Ap*Bq)) (#) ab).n = x.n * y.n
      proof
        let n be Element of NAT;
A36:    x.n= abs(a.n)/Ap by A29;
        y.n= abs(b.n)/Bq by A30;
        hence x.n*y.n= (abs(a.n)*abs(b.n))/(Ap*Bq) by A36,XCMPLX_1:77
          .=abs(a.n*b.n)/(Ap*Bq) by COMPLEX1:151
          .=ab.n/(Ap*Bq) by A6
          .=(1/(Ap*Bq))*ab.n by XCMPLX_1:100
          .=((1/(Ap*Bq)) (#) ab).n by SEQ_1:13;
      end;
A37:  for n be Element of NAT holds
      (((1/p)(#)((1/A)(#)ap)) + ((1/q)(#)((1/B)(#)bq))).n
      = (x.n) to_power p / p + (y.n) to_power q / q
      proof
        let n be Element of NAT;
A38:    x.n= abs(a.n)/Ap by A29;
A39:    y.n= abs(b.n)/Bq by A30;
        (abs(a.n)/Ap) to_power p =abs(a.n) to_power p/Ap to_power p
        proof
          now per cases;
            case
A40:          abs(a.n) =0;
              hence (abs(a.n)/Ap) to_power p
              =0 /Ap to_power p by A1,POWER:def 2
                .=abs(a.n) to_power p/Ap to_power p by A1,A40,POWER:def 2;
            end;
            case abs(a.n) <> 0;
              then abs(a.n) > 0 by COMPLEX1:132;
              hence (abs(a.n)/Ap) to_power p
              =abs(a.n) to_power p/Ap to_power p by A27,POWER:36;
            end;
          end;
          hence thesis;
        end;
        then
A41:    (x.n) to_power p / p =( ap.n / Ap to_power p) /p by A6,A38
          .=( ap.n / (A to_power ((1/p)*p))) /p by A11,A26,POWER:38
          .= ( ap.n / (A to_power 1 )) /p by A1,XCMPLX_1:88
          .= ( ap.n / A ) /p by POWER:30
          .= (1/p)*(ap.n / A) by XCMPLX_1:100
          .= (1/p)*((1/A)*ap.n) by XCMPLX_1:100
          .= (1/p)*(((1/A)(#)ap).n) by SEQ_1:13
          .=((1/p)(#)((1/A)(#)ap)).n by SEQ_1:13;
        (abs(b.n)/Bq) to_power q =abs(b.n) to_power q/Bq to_power q
        proof
          now per cases;
            case
A42:          abs(b.n) =0;
              hence (abs(b.n)/Bq) to_power q
              =0 /Bq to_power q by A4,POWER:def 2
                .=abs(b.n) to_power q/Bq to_power q by A4,A42,POWER:def 2;
            end;
            case abs(b.n) <> 0;
              then abs(b.n) > 0 by COMPLEX1:132;
              hence (abs(b.n)/Bq) to_power q
              =abs(b.n) to_power q/Bq to_power q by A28,POWER:36;
            end;
          end;
          hence thesis;
        end;
        then (y.n) to_power q / q =( bq.n / Bq to_power q) /q by A6,A39
          .=( bq.n / (B to_power ((1/q)*q))) /q by A12,A26,POWER:38
          .= ( bq.n / (B to_power 1 )) /q by A4,XCMPLX_1:88
          .= ( bq.n / B ) /q by POWER:30
          .= (1/q)*(bq.n / B) by XCMPLX_1:100
          .= (1/q)*((1/B)*bq.n) by XCMPLX_1:100
          .= (1/q)*(((1/B)(#)bq).n) by SEQ_1:13
          .=((1/q)(#)((1/B)(#)bq)).n by SEQ_1:13;
        hence (x.n) to_power p / p + (y.n) to_power q / q
        =(((1/p)(#)((1/A)(#)ap)) + ((1/q)(#)((1/B)(#)bq))).n by A41,SEQ_1:11;
      end;
      for n be Element of NAT holds ((1/(Ap*Bq)) (#) ab).n
      <= (((1/p)(#)((1/A)(#)ap)) + ((1/q)(#)((1/B)(#)bq))).n
      proof
        let n be Element of NAT;
A43:    x.n * y.n <= (x.n) to_power p / p + (y.n) to_power q / q by A33;
        (((1/p)(#)((1/A)(#)ap)) + ((1/q)(#)((1/B)(#)bq))).n
        = (x.n) to_power p / p + (y.n) to_power q / q by A37;
        hence thesis by A35,A43;
      end;
      then
A44:  Partial_Sums( (1/(Ap*Bq)) (#) ab).n
      <=Partial_Sums(((1/p)(#)((1/A)(#)ap)) + ((1/q)(#)((1/B)(#)bq))).n
      by SERIES_1:17;
A45:  Partial_Sums( (1/(Ap*Bq)) (#) ab).n
      = ((1/(Ap*Bq)) (#) Partial_Sums(ab)).n by SERIES_1:12
        .= (1/(Ap*Bq)) * Partial_Sums(ab).n by SEQ_1:13;
A46:  Partial_Sums(((1/p)(#)((1/A)(#)ap)) + ((1/q)(#)((1/B)(#)bq))).n
      = (Partial_Sums(((1/p)(#)((1/A)(#)ap)))
      + Partial_Sums(((1/q)(#)((1/B)(#)bq)))).n by SERIES_1:8
        .=Partial_Sums((1/p)(#)((1/A)(#)ap)).n
      + Partial_Sums((1/q)(#)((1/B)(#)bq)).n by SEQ_1:11
        .=((1/p)(#)Partial_Sums((1/A)(#)ap)).n
      + Partial_Sums((1/q)(#)((1/B)(#)bq)).n by SERIES_1:12
        .=(1/p)*(Partial_Sums((1/A)(#)ap).n)
      + Partial_Sums((1/q)(#)((1/B)(#)bq)).n by SEQ_1:13
        .=(1/p)*(((1/A)(#)Partial_Sums(ap)).n)
      + Partial_Sums((1/q)(#)((1/B)(#)bq)).n by SERIES_1:12
        .=(1/p)*((1/A)*Partial_Sums(ap).n)
      + Partial_Sums((1/q)(#)((1/B)(#)bq)).n by SEQ_1:13
        .=(1/p)*((1/A)*Partial_Sums(ap).n)
      + ((1/q)(#)Partial_Sums((1/B)(#)bq)).n by SERIES_1:12
        .=(1/p)*((1/A)*Partial_Sums(ap).n)
      + (1/q)*(Partial_Sums((1/B)(#)bq).n) by SEQ_1:13
        .=(1/p)*((1/A)*Partial_Sums(ap).n)
      + (1/q)*(((1/B)(#)Partial_Sums(bq)).n) by SERIES_1:12
        .=(1/p)*((1/A)*Partial_Sums(ap).n)
      +(1/q)*((1/B)*Partial_Sums(bq).n) by SEQ_1:13
        .=(1/p)*1 +(1/q)*((1/B)*B) by A26,XCMPLX_1:88
        .=(1/p)*1 +(1/q)*(1) by A26,XCMPLX_1:88
        .=1 by A2;
A47:  Ap*Bq > 0 by A27,A28,REAL_2:122;
      Partial_Sums(ab).n/(Ap*Bq) <= 1 by A44,A45,A46,XCMPLX_1:100;
      hence Partial_Sums(ab).n <= ( (Partial_Sums(ap).n) to_power (1/p) )
      * ( (Partial_Sums(bq).n) to_power (1/q) ) by A47,REAL_2:118;
    end;
  end;
  hence thesis;
end;

theorem Th7:
  for p be Real st 1 < p for a,b,ap,bp,ab be Real_Sequence
  st ( for n be Element of NAT holds ap.n=abs(a.n) to_power p
  & bp.n=abs(b.n) to_power p & ab.n=abs(a.n+b.n) to_power p ) holds
  for n be Element of NAT holds (Partial_Sums(ab).n) to_power (1/p)
  <= ( Partial_Sums(ap).n) to_power (1/p)
  + ( Partial_Sums(bp).n) to_power (1/p)
proof
  let p be Real such that
A1: 1 < p;
  let a,b,ap,bp,ab be Real_Sequence such that
A2: for n be Element of NAT holds ap.n=abs(a.n) to_power p
  & bp.n=abs(b.n) to_power p & ab.n=abs(a.n+ b.n) to_power p;
  reconsider pp=1/p as Real;
  reconsider qq=1-pp as Real;
  reconsider q=1/qq as Real;
  1/p < 1 by A1,REAL_2:142;
  then
A3: 1-1 < 1-pp by XREAL_1:17;
A4: qq=1/q by XCMPLX_1:56;
  then
A5: 0 < q by A3;
A6: q <> 0 by A3,A4;
A7: 1/p > 0 by A1,REAL_2:127;
A8: 1-1 < p-1 by A1,XREAL_1:16;
A9: 1/p + 1/q= 1 by A4;
  then ((1*q+1*p)/(p*q))*(p*q) =1*(p*q) by A1,A6,XCMPLX_1:117;
  then
A10: q+p=p*q by A1,A6,XCMPLX_1:6,88;
  deffunc F(Element of NAT)=abs(a.$1+ b.$1) to_power (p-1);
  consider x be Real_Sequence such that
A11: for n be Element of NAT holds x.n=F(n) from SEQ_1:sch 1;
A12: for n be Element of NAT holds 0 <= x.n
  proof
    let n be Element of NAT;
A13: x.n=abs(a.n+ b.n) to_power (p-1) by A11;
    now per cases by COMPLEX1:132;
      case abs(a.n+ b.n) = 0;
        hence 0 <= x.n by A8,A13,POWER:def 2;
      end;
      case abs(a.n+ b.n) > 0;
        hence 0 <= x.n by A13,POWER:39;
      end;
    end;
    hence thesis;
  end;
A14: for n be Element of NAT holds ab.n=x.n*abs(a.n+b.n)
  proof
    let n be Element of NAT;
    now per cases;
      case
A15:    abs(a.n+b.n)=0;
        thus ab.n=abs(a.n+ b.n) to_power p by A2
          .= x.n * abs(a.n+b.n) by A1,A15,POWER:def 2;
      end;
      case
A16:    abs(a.n+b.n) <> 0;
A17:    0 <= abs(a.n+b.n) by COMPLEX1:132;
        thus ab.n =abs(a.n+ b.n) to_power ((p-1)+1) by A2
          .= abs(a.n+ b.n) to_power (p-1)
        * abs(a.n+ b.n) to_power 1 by A16,A17,POWER:32
          .=(abs(a.n+ b.n) to_power (p-1)) * abs(a.n+ b.n) by POWER:30
          .= x.n * abs(a.n+b.n) by A11;
      end;
    end;
    hence thesis;
  end;
A18: for n be Element of NAT holds ab.n <= ( x(#)abs(a)+x(#)abs(b) ).n
  proof
    let n be Element of NAT;
A19: 0 <= x.n by A12;
A20: ab.n=x.n*abs(a.n+b.n) by A14;
    x.n * (abs(a.n)+abs(b.n)) = x.n * (abs(a.n))+x.n * (abs(b.n))
      .= x.n * (abs(a).n)+x.n * (abs(b.n)) by SEQ_1:16
      .= x.n * (abs(a).n)+x.n * (abs(b).n) by SEQ_1:16
      .= (x(#)abs(a)).n +x.n * (abs(b).n) by SEQ_1:12
      .= (x(#)abs(a)).n +(x(#)abs(b)).n by SEQ_1:12
      .= (x(#)abs(a) +x(#)abs(b)).n by SEQ_1:11;
    hence thesis by A19,A20,COMPLEX1:142,XREAL_1:66;
  end;
A21: for n be Element of NAT holds (x(#)abs(a)).n= abs(a.n*x.n)
  proof
    let n be Element of NAT;
    0 <= x.n by A12;
    then
A22: abs(x.n)=x.n by ABSVALUE:def 1;
    thus (x(#)abs(a)).n =x.n * abs(a).n by SEQ_1:12
      .=x.n * abs(a.n) by SEQ_1:16
      .=abs(a.n*x.n) by A22,COMPLEX1:151;
  end;
A23: for n be Element of NAT holds (x(#)abs(b)).n= abs(b.n*x.n)
  proof
    let n be Element of NAT;
    0 <= x.n by A12;
    then
A24: abs(x.n)=x.n by ABSVALUE:def 1;
    thus (x(#)abs(b)).n =x.n * abs(b).n by SEQ_1:12
      .=x.n * abs(b.n) by SEQ_1:16
      .=abs(b.n*x.n) by A24,COMPLEX1:151;
  end;
A25: for n be Element of NAT holds abs(x.n) to_power q = ab.n
  proof
    let n be Element of NAT;
    0 <= x.n by A12;
    then abs(x.n)=x.n by ABSVALUE:def 1;
    then
A26: abs(x.n) to_power q = (abs(a.n+b.n) to_power (p-1)) to_power q by A11;
    now per cases;
      case
A27:    abs(a.n+b.n)=0;
        then
A28:    ab.n = 0 to_power p by A2
          .= 0 by A1,POWER:def 2;
        abs(x.n) to_power q =0 to_power q by A8,A26,A27,POWER:def 2
          .=0 by A5,POWER:def 2;
        hence abs(x.n) to_power q = ab.n by A28;
      end;
      case abs(a.n+b.n) <> 0;
        then 0 < abs(a.n+b.n) by COMPLEX1:132;
        hence abs(x.n) to_power q
        = abs(a.n+b.n) to_power ((p-1)*q) by A26,POWER:38
          .=ab.n by A2,A10;
      end;
    end;
    hence thesis;
  end;
A29: for n be Element of NAT holds
  Partial_Sums(ab).n <= ( ((Partial_Sums(ap).n) to_power (1/p)) +
  ((Partial_Sums(bp).n) to_power (1/p)))
  * ( (Partial_Sums(ab).n) to_power (1/q) )
  proof
    let n be Element of NAT;
A30: Partial_Sums(ab).n <= Partial_Sums(x(#)abs(a)+x(#)abs(b)).n
    by A18,SERIES_1:17;
A31: (Partial_Sums(x(#)abs(a)+x(#)abs(b))).n
    =(Partial_Sums(x(#)abs(a))+Partial_Sums(x(#)abs(b))).n by SERIES_1:8
      .=Partial_Sums(x(#)abs(a)).n+Partial_Sums(x(#)abs(b)).n by SEQ_1:11;
A32: Partial_Sums(x(#)abs(a)).n <= ( (Partial_Sums(ap).n) to_power (1/p) )
    * ( (Partial_Sums(ab).n) to_power (1/q) ) by A1,A2,A9,A21,A25,Th6;
    Partial_Sums(x(#)abs(b)).n <= ( (Partial_Sums(bp).n) to_power (1/p) )
    * ( (Partial_Sums(ab).n) to_power (1/q) ) by A1,A2,A9,A23,A25,Th6;
    then Partial_Sums(x(#)abs(a)).n + Partial_Sums(x(#)abs(b)).n
    <= ( (Partial_Sums(ap).n) to_power (1/p) )
    * ( (Partial_Sums(ab).n) to_power (1/q) )
    + ( (Partial_Sums(bp).n) to_power (1/p) )
    * ( (Partial_Sums(ab).n) to_power (1/q) ) by A32,XREAL_1:9;
    hence thesis by A30,A31,XXREAL_0:2;
  end;
A33: for n be Element of NAT holds 0 <= ap.n
  proof
    let n be Element of NAT;
A34: ap.n=abs(a.n) to_power p by A2;
    now per cases by COMPLEX1:132;
      case abs(a.n) = 0;
        hence 0 <= ap.n by A1,A34,POWER:def 2;
      end;
      case abs(a.n) > 0;
        hence 0 <= ap.n by A34,POWER:39;
      end;
    end;
    hence thesis;
  end;
A35: for n be Element of NAT holds 0 <= bp.n
  proof
    let n be Element of NAT;
A36: bp.n=abs(b.n) to_power p by A2;
    now per cases by COMPLEX1:132;
      case abs(b.n) = 0;
        hence 0 <= bp.n by A1,A36,POWER:def 2;
      end;
      case abs(b.n) > 0;
        hence 0 <= bp.n by A36,POWER:39;
      end;
    end;
    hence thesis;
  end;
A37: for n be Element of NAT holds 0 <= ab.n
  proof
    let n be Element of NAT;
A38: 0 <= abs(a.n+b.n) by COMPLEX1:132;
A39: ab.n=abs(a.n+b.n) to_power p by A2;
    0 to_power p <= abs(a.n+b.n) to_power p by A1,A38,Th3;
    hence thesis by A1,A39,POWER:def 2;
  end;
  now
    let n be Element of NAT;
    set A=Partial_Sums(ab).n;
    set C= ( ((Partial_Sums(ap).n) to_power (1/p)) +
    ((Partial_Sums(bp).n) to_power (1/p)));
    set D= ( A to_power (1/q) );
A40: 0 <= A by A37,Lm2;
    0 <= Partial_Sums(ap).n by A33,Lm2;
    then 0 to_power (1/p) <= (Partial_Sums(ap).n) to_power (1/p) by A7,Th3;
    then
A41: 0 <= (Partial_Sums(ap).n) to_power (1/p) by A7,POWER:def 2;
    0 <= Partial_Sums(bp).n by A35,Lm2;
    then 0 to_power (1/p) <= (Partial_Sums(bp).n) to_power (1/p) by A7,Th3;
    then 0 <= (Partial_Sums(bp).n) to_power (1/p) by A7,POWER:def 2;
    then
A42: 0+0 <= (Partial_Sums(ap).n) to_power (1/p)
    + (Partial_Sums(bp).n) to_power (1/p) by A41;
    now per cases;
      case A=0;
        hence A to_power (1/p) <= C by A7,A42,POWER:def 2;
      end;
      case
A43:    A<>0;
        then
A44:    0 < D by A40,POWER:39;
        set B=1/D;
A45:    0 < B by A44,REAL_2:127;
A46:    C*D*B = C* (D *B)
          .= C*1 by A44,XCMPLX_1:88
          .= C;
        A *B =A/D by XCMPLX_1:100
          .=(A to_power 1) / D by POWER:30
          .=A to_power (1-(1/q)) by A40,A43,POWER:34
          .= A to_power (1/p) by A4;
        hence A to_power (1/p) <= (Partial_Sums(ap).n) to_power (1/p)
        + (Partial_Sums(bp).n) to_power (1/p) by A29,A45,A46,XREAL_1:66;
      end;
    end;
    hence (Partial_Sums(ab).n) to_power (1/p) <=
    (Partial_Sums(ap).n) to_power (1/p) + (Partial_Sums(bp).n) to_power (1/p);
  end;
  hence thesis;
end;

theorem Th8:
  for a,b be Real_Sequence st ( (for n be Element of NAT holds a.n <= b.n )
  & b is convergent & a is non-decreasing ) holds
  a is convergent & lim a <= lim b
proof
  let a,b be Real_Sequence such that
A1: for n be Element of NAT holds a.n <= b.n and
A2: b is convergent and
A3: a is non-decreasing;
  b is bounded by A2,SEQ_2:27;
  then
A4: b is bounded_above;
  a is bounded_above
  proof
    consider r be real number such that
A5: for n be Element of NAT holds b.n < r by A4,SEQ_2:def 3;
    now
      let n be Element of NAT;
      a.n <=b.n by A1;
      then a.n <= r by A5,XXREAL_0:2;
      then a.n+0 < r+1 by XREAL_1:10;
      hence a.n < r+1;
    end;
    hence thesis by SEQ_2:def 3;
  end;
  hence a is convergent by A3;
  hence lim a <=lim b by A1,A2,SEQ_2:32;
end;

theorem Th9:
  for a,b,c be Real_Sequence st
  ( (for n be Element of NAT holds a.n <= b.n+c.n )
  & b is convergent & c is convergent & a is non-decreasing ) holds
  a is convergent & lim a <= lim b + lim c
proof
  let a,b,c be Real_Sequence such that
A1: for n be Element of NAT holds a.n <= b.n+c.n and
A2: b is convergent and
A3: c is convergent and
A4: a is non-decreasing;
A5: b+c is convergent by A2,A3,SEQ_2:19;
A6: now
    let n be Element of NAT;
    a.n <=b.n + c.n by A1;
    hence a.n <= (b+c).n by SEQ_1:11;
  end;
A7: lim (b+c) = lim b + lim c by A2,A3,SEQ_2:20;
  thus a is convergent by A4,A5,A6,Th8;
  thus lim a <=lim b+lim c by A4,A5,A6,A7,Th8;
end;

theorem Th10:
  for p be Real st 0 < p for a,ap be Real_Sequence st a is convergent
  & (for n be Element of NAT holds 0 <=a.n )
  & (for n be Element of NAT holds ap.n=(a.n) to_power p) holds
  ap is convergent & lim ap = (lim a) to_power p
proof
  let p be Real such that
A1: 0 < p;
  let a,ap be Real_Sequence such that
A2: a is convergent and
A3: for n be Element of NAT holds 0 <=a.n and
A4: for n be Element of NAT holds ap.n=(a.n) to_power p;
  now per cases;
    case
A5:   lim a =0;
      now per cases;
        case ex n be Element of NAT st for m be Element of NAT
          st n<=m holds a.m=0;
          then consider N be Element of NAT such that
A6:       for m be Element of NAT st N<=m holds a.m=0;
A7:       for n be Element of NAT holds (a^\N).n=0
          proof
            let n be Element of NAT;
            a.(n+N)=0 by A6,NAT_1:12;
            hence (a^\N).n=0 by NAT_1:def 3;
          end;
A8:       now
            let e be real number such that
A9:         e>0;
            take n=0;
            let m be Element of NAT such that n<=m;
A10:        (ap^\N).m= ap.(m+N) by NAT_1:def 3
              .= (a.(m+N)) to_power p by A4
              .= ((a^\N).m) to_power p by NAT_1:def 3
              .= 0 to_power p by A7
              .= 0 by A1,POWER:def 2;
            (lim a) to_power p = 0 by A1,A5,POWER:def 2;
            hence abs((ap^\N).m-((lim a) to_power p)) < e by A9,A10,ABSVALUE:7;
          end;
          then (ap^\N) is convergent by SEQ_2:def 6;
          then ap is convergent & ((lim a) to_power p)
          =lim(ap^\N) by A8,SEQ_2:def 7,SEQ_4:35;
          hence ap is convergent & lim ap = (lim a) to_power p by SEQ_4:33;
        end;
        case
A11:      for n be Element of NAT ex m be Element of NAT st n<=m & a.m<>0;
          then consider m1 be Element of NAT such that
A12:      0<=m1 & a.m1 <>0;
          defpred P[set] means a.$1 <> 0;
A13:      ex m be Nat st P[m] by A12;
          consider M be Nat such that
A14:      P[M] & for n be Nat st P[n] holds M<=n from NAT_1:sch 5(A13);
          reconsider M as Element of NAT by ORDINAL1:def 13;
A15:      now
            let n be Element of NAT;
            consider m be Element of NAT such that
A16:        n+1<=m & a.m <>0 by A11;
            take m; thus n<m & a.m <>0 by A16,NAT_1:13;
          end;
          defpred P[set,set,set] means
          for n,m be Element of NAT st $2=n & $3=m holds
          n<m & a.m <>0 & for k be Element of NAT st n<k & a.k <>0 holds m<=k;
A17:      for n be Element of NAT for x be Element of NAT
          ex y be Element of NAT st P[n,x,y]
          proof
            let n be Element of NAT;
            let x be Element of NAT;
            defpred P[Nat] means x<$1 & a.$1 <>0;
            ex m be Element of NAT st P[m] by A15;
            then
A18:        ex m be Nat st P[m];
            consider l be Nat such that
A19:        P[l] & for k be Nat st P[k] holds l<=k from NAT_1:sch 5(A18);
            take l;
            l in NAT by ORDINAL1:def 13;
            hence thesis by A19;
          end;
          consider F be Function of NAT,NAT such that
A20:      F.0=M & for n be Element of NAT holds P[n,F.n,F.(n+1)]
          from RECDEF_1:sch 2(A17);
A21:      dom F=NAT & rng F c= NAT by FUNCT_2:def 1,RELSET_1:12;
          then rng F c= REAL by XBOOLE_1:1;
          then reconsider F as Real_Sequence by A21,FUNCT_2:def 1,RELSET_1:11;
A22:      now
            let n be Element of NAT;
            F.n in rng F by A21,FUNCT_1:def 5;
            hence F.n is Element of NAT by A21;
          end;
          now
            let n be Element of NAT;
            F.n is Element of NAT & F.(n+1) is Element of NAT by A22;
            hence F.n<F.(n+1) by A20;
          end;
          then reconsider F as increasing Seq_of_Nat by SEQM_3:def 11;
A23:      for n be Element of NAT st a.n <> 0 ex m be Element of NAT st F.m=n
          proof
            defpred P[set] means a.$1 <>0 &
            for m be Element of NAT holds F.m<>$1;
            assume ex n be Element of NAT st P[n];
            then
A24:        ex n be Nat st P[n];
            consider M1 be Nat such that
A25:        P[M1] & for n be Nat st P[n] holds M1<=n from NAT_1:sch 5(A24);
            defpred P[Nat] means $1<M1 & a.$1 <> 0
            & ex m be Element of NAT st F.m=$1;
A26:        ex n be Nat st P[n]
            proof
              take M;
A27:          M<=M1 by A14,A25;
              M <> M1 by A20,A25;
              hence M<M1 by A27,XXREAL_0:1;
              thus a.M <>0 by A14;
              take 0; thus thesis by A20;
            end;
A28:        for n be Nat st P[n] holds n<=M1;
            consider MX be Nat such that
A29:        P[MX] & for n be Nat st P[n] holds n<=MX
            from NAT_1:sch 6(A28,A26);
A30:        for k be Element of NAT st MX<k & k<M1 holds a.k=0
            proof
              given k be Element of NAT such that
A31:          MX<k & k<M1 & a.k <> 0;
              now per cases;
                case ex m be Element of NAT st F.m=k;
                  hence contradiction by A29,A31;
                end;
                case for m be Element of NAT holds F.m<>k;
                  hence contradiction by A25,A31;
                end;
              end;
              hence contradiction;
            end;
            consider m be Element of NAT such that
A32:        F.m=MX by A29;
A33:        MX<F.(m+1) & a.(F.(m+1))<>0 &
            for k be Element of NAT st MX<k & a.k<>0 holds F.(m+1)<=k
            by A20,A32;
            M1 in NAT by ORDINAL1:def 13;
            then
A34:        F.(m+1)<=M1 by A20,A25,A29,A32;
            now
              assume F.(m+1)<>M1;
              then F.(m+1)<M1 by A34,XXREAL_0:1;
              hence contradiction by A30,A33;
            end;
            hence contradiction by A25;
          end;
A35:      a*F is subsequence of a by VALUED_0:def 17;
          then
A36:      a*F is convergent by A2,SEQ_4:29;
A37:      lim (a*F)=0 by A2,A5,A35,SEQ_4:30;
A38:      (lim a) to_power p =0 by A1,A5,POWER:def 2;
A39:      now
            let e be real number;
            assume
A40:        0<e;
            then 0 < (e to_power (1/p) ) by POWER:39;
            then consider n be Element of NAT such that
A41:        for m be Element of NAT st n<=m holds abs((a*F).m-0)
            < (e to_power (1/p) ) by A36,A37,SEQ_2:def 7;
            take k=F.n;
            let m be Element of NAT such that
A42:        k<=m;
            now per cases;
              case a.m=0;
                then ap.m= 0 to_power p by A4
                  .= 0 by A1,POWER:def 2;
                hence abs(ap.m-((lim a) to_power p))<e by A38,A40,ABSVALUE:7;
              end;
              case
A43:            a.m<>0;
                then
A44:            a.m > 0 by A3;
                consider l be Element of NAT such that
A45:            m=F.l by A23,A43;
                n<=l by A42,A45,SEQM_3:7;
                then abs((a*F).l-0)< (e to_power (1/p) ) by A41;
                then
A46:            abs(a.(F.l))< (e to_power (1/p) ) by FUNCT_2:21;
                abs(a.m) > 0 by A43,COMPLEX1:133;
                then abs(a.m) to_power p < (e to_power (1/p) ) to_power p
                by A1,A45,A46,POWER:42;
                then abs(a.m) to_power p < e to_power ( (1/p) *p ) by A40,
POWER:38;
                then abs(a.m) to_power p < e to_power 1 by A1,XCMPLX_1:107;
                then
A47:            abs(a.m) to_power p < e by POWER:30;
A48:            (a.m) to_power p = ap.m by A4;
                then
A49:            0 < ap.m by A44,POWER:39;
                ap.m < e by A44,A47,A48,ABSVALUE:def 1;
                hence abs(ap.m -((lim a) to_power p) ) < e by A38,A49,
ABSVALUE:def 1;
              end;
            end;
            hence abs(ap.m -((lim a) to_power p) ) < e;
          end;
          hence ap is convergent by SEQ_2:def 6;
          hence lim ap = (lim a) to_power p by A39,SEQ_2:def 7;
        end;
      end;
      hence ap is convergent & lim ap = (lim a) to_power p;
    end;
    case
A50:  lim a <>0;
A51:  0 <= lim a by A2,A3,SEQ_2:31;
A52:  lim a > 0 by A2,A3,A50,SEQ_2:31;
      ex k be Element of NAT st rng (a^\k) c= dom ( #R p)
      proof
        set e0=(lim a );
A53:    e0/2 > 0 by A50,A51,SEQ_2:3;
        then consider k be Element of NAT such that
A54:    for m be Element of NAT st k<=m holds abs(a.m-e0)<e0/2
        by A2,SEQ_2:def 7;
        take k;
A55:    now
          let m be Element of NAT;
          abs(a.(k+m)-e0)<e0/2 by A54,NAT_1:12;
          then -(e0/2) <= a.(k+m)-e0 by ABSVALUE:12;
          then -(e0/2)+e0 <= a.(k+m)-e0+e0 by XREAL_1:9;
          hence 0 < (a^\k).m by A53,NAT_1:def 3;
        end;
        now
          let x be set such that
A56:      x in rng (a^\k);
          consider n be Element of NAT such that
A57:      x = (a^\k).n by A56,FUNCT_2:190;
          0 < (a^\k).n by A55;
          then (a^\k).n in {g where g is Real : 0<g};
          then (a^\k).n in right_open_halfline(0) by XXREAL_1:230;
          hence x in dom ( #R p) by A57,TAYLOR_1:def 4;
        end;
        hence thesis by TARSKI:def 3;
      end;
      then consider k be Element of NAT such that
A58:  rng (a^\k) c= dom ( #R p);
A59:  a^\k is convergent & lim (a^\k) = lim a by A2,SEQ_4:33;
      then ( #R p) is_differentiable_in lim (a^\k) by A52,TAYLOR_1:21;
      then ( #R p) is_continuous_in lim (a^\k) by FDIFF_1:32;
      then
A60:  ( #R p)/*(a^\k) is convergent & ( #R p).(lim (a^\k))
      = lim (( #R p)/*(a^\k)) by A58,A59,FCONT_1:def 1;
A61:  ( #R p)/*(a^\k) = ap^\k
      proof
        now
          let x be set such that
A62:      x in NAT;
          reconsider n=x as Element of NAT by A62;
          (a^\k).n in rng (a^\k) by VALUED_0:28;
          then (a^\k).n in dom ( #R p) by A58;
          then
A63:      (a^\k).n in right_open_halfline(0) by TAYLOR_1:def 4;
          then a.(k+n) in right_open_halfline(0) by NAT_1:def 3;
          then a.(k+n) in {g where g is Real : 0<g} by XXREAL_1:230;
          then consider g be Real such that
A64:      a.(k+n) = g & g > 0;
          thus (( #R p)/*(a^\k)).x = ( #R p).((a^\k).n) by A58,FUNCT_2:185
            .=((a^\k).n) #R p by A63,TAYLOR_1:def 4
            .=(a.(k+n)) #R p by NAT_1:def 3
            .=(a.(k+n)) to_power p by A64,POWER:def 2
            .=ap.(k+n) by A4
            .=(ap^\k).x by NAT_1:def 3;
        end;
        hence thesis by SEQ_1:8;
      end;
      lim a in right_open_halfline(0)
      proof
        lim a in {g where g is Real : 0<g} by A50,A51;
        hence thesis by XXREAL_1:230;
      end;
      then ( #R p).(lim (a^\k)) =(lim a) #R p by A59,TAYLOR_1:def 4
        .=(lim a) to_power p by A50,A51,POWER:def 2;
      hence ap is convergent & lim ap = (lim a) to_power p
      by A60,A61,SEQ_4:35,36;
    end;
  end;
  hence ap is convergent & lim ap = (lim a) to_power p;
end;

theorem
  for p be Real st 0 < p for a,ap be Real_Sequence st a is summable
  & (for n be Element of NAT holds 0 <=a.n )
  & (for n be Element of NAT holds ap.n=(Partial_Sums(a).n) to_power p) holds
  ap is convergent & lim ap = Sum(a) to_power p & ap is non-decreasing
  & (for n be Element of NAT holds ap.n <= Sum(a) to_power p )
proof
  let p be Real such that
A1: 0 < p;
  let a,ap be Real_Sequence such that
A2: a is summable and
A3: for n be Element of NAT holds 0 <=a.n and
A4: for n be Element of NAT holds ap.n=(Partial_Sums(a).n) to_power p;
A5: Partial_Sums(a) is convergent by A2,SERIES_1:def 2;
  for n be Element of NAT holds 0 <= Partial_Sums(a).n by A3,Lm2;
  then
A6: ap is convergent & lim ap = (lim Partial_Sums(a)) to_power p
  by A1,A4,A5,Th10;
  hence
A7: ap is convergent & lim ap = (Sum(a)) to_power p by SERIES_1:def 3;
A8: Partial_Sums(a) is non-decreasing by A3,SERIES_1:19;
  now
    let n, m be Element of NAT such that
A9: n <=m;
A10: ap.n = (Partial_Sums(a).n) to_power p by A4;
A11: ap.m = (Partial_Sums(a).m) to_power p by A4;
A12: Partial_Sums(a).n <= Partial_Sums(a).m by A8,A9,SEQM_3:12;
    0 <= Partial_Sums(a).n by A3,Lm2;
    hence ap.n <= ap.m by A1,A10,A11,A12,Th3;
  end;
  hence
A13: ap is non-decreasing by SEQM_3:12;
  ap is bounded by A6,SEQ_2:27;
  then ap is bounded_above;
  hence thesis by A7,A13,SEQ_4:54;
end;

theorem
  for p, q be Real st 1 < p & 1/p + 1/q = 1 for a,b,ap,bq,ab be Real_Sequence
  st (( for n be Element of NAT holds ap.n=abs(a.n) to_power p
  & bq.n=abs(b.n) to_power q & ab.n=abs(a.n* b.n) )
  & ap is summable & bq is summable ) holds ab is summable &
  Sum ab <= ( Sum(ap) to_power (1/p) ) * ( Sum(bq) to_power (1/q) )
proof
  let p,q be Real such that
A1: 1 < p and
A2: 1/p + 1/q = 1;
  reconsider pp=1/p as Real;
  1/p < 1 by A1,REAL_2:142;
  then
A3: 1-1 < 1-pp by XREAL_1:17;
  then
A4: 0 < q by A2;
A5: 1/p > 0 by A1,REAL_2:127;
  let a,b,ap,bq,ab be Real_Sequence such that
A6: for n be Element of NAT holds ap.n=abs(a.n) to_power p
  & bq.n=abs(b.n) to_power q & ab.n=abs(a.n* b.n) and
A7: ap is summable and
A8: bq is summable;
  deffunc F(Element of NAT)=(Partial_Sums(ap).$1) to_power (1/p);
  consider x be Real_Sequence such that
A9: for n be Element of NAT holds x.n=F(n) from SEQ_1:sch 1;
  deffunc G(Element of NAT)=(Partial_Sums(bq).$1) to_power (1/q);
  consider y be Real_Sequence such that
A10: for n be Element of NAT holds y.n=G(n) from SEQ_1:sch 1;
A11: Partial_Sums(ap) is convergent by A7,SERIES_1:def 2;
A12: Sum ap = lim Partial_Sums(ap) by SERIES_1:def 3;
  for n be Element of NAT holds 0 <= ap.n
  proof
    let n be Element of NAT;
A13: ap.n=abs(a.n) to_power p by A6;
    now per cases by COMPLEX1:132;
      case abs(a.n) = 0;
        hence 0 <= ap.n by A1,A13,POWER:def 2;
      end;
      case abs(a.n) > 0;
        hence 0 <= ap.n by A13,POWER:39;
      end;
    end;
    hence thesis;
  end;
  then for n be Element of NAT holds 0 <= Partial_Sums(ap).n by Lm2;
  then
A14: x is convergent & lim x= Sum(ap) to_power (1/p) by A5,A9,A11,A12,Th10;
A15: Partial_Sums(bq) is convergent by A8,SERIES_1:def 2;
A16: Sum(bq) = lim Partial_Sums(bq) by SERIES_1:def 3;
  for n be Element of NAT holds 0 <= bq.n
  proof
    let n be Element of NAT;
A17: bq.n=abs(b.n) to_power q by A6;
    now per cases by COMPLEX1:132;
      case abs(b.n) = 0;
        hence 0 <= bq.n by A4,A17,POWER:def 2;
      end;
      case abs(b.n) > 0;
        hence 0 <= bq.n by A17,POWER:39;
      end;
    end;
    hence thesis;
  end;
  then for n be Element of NAT holds 0 <= Partial_Sums(bq).n by Lm2;
  then y is convergent & lim y= Sum(bq) to_power (1/q)
  by A2,A3,A10,A15,A16,Th10;
  then
A18: x(#)y is convergent
  & lim (x(#)y) = (Sum(ap) to_power (1/p))* (Sum(bq) to_power (1/q))
  by A14,SEQ_2:28,29;
A19: for n be Element of NAT holds Partial_Sums(ab).n <=(x(#)y).n
  proof
    let n be Element of NAT;
A20: Partial_Sums(ab).n <= ( (Partial_Sums(ap).n) to_power (1/p) )
    * ( (Partial_Sums(bq).n) to_power (1/q) ) by A1,A2,A6,Th6;
A21: x.n = (Partial_Sums(ap).n) to_power (1/p) by A9;
    y.n = (Partial_Sums(bq).n) to_power (1/q) by A10;
    hence thesis by A20,A21,SEQ_1:12;
  end;
  for n be Element of NAT holds 0 <= ab.n
  proof
    let n be Element of NAT;
    ab.n= abs(a.n*b.n) by A6;
    hence 0 <= ab.n by COMPLEX1:132;
  end;
  then Partial_Sums(ab) is non-decreasing by SERIES_1:19;
  then Partial_Sums(ab) is convergent &
  lim Partial_Sums(ab) <= lim (x(#)y) by A18,A19,Th8;
  hence ab is summable & Sum(ab) <= ( Sum(ap) to_power (1/p) )
  * ( Sum(bq) to_power (1/q) ) by A18,SERIES_1:def 2,def 3;
end;

theorem
  for p be Real st 1 < p for a,b,ap,bp,ab be Real_Sequence
  st( ( for n be Element of NAT holds ap.n=abs(a.n) to_power p
  & bp.n=abs(b.n) to_power p & ab.n=abs(a.n+b.n) to_power p )
  & ap is summable & bp is summable ) holds
  ab is summable & Sum(ab) to_power (1/p)
  <= Sum(ap) to_power (1/p) + Sum(bp) to_power (1/p)
proof
  let p be Real such that
A1: 1 < p;
A2: 1/p > 0 by A1,REAL_2:127;
  let a,b,ap,bp,ab be Real_Sequence such that
A3: for n be Element of NAT holds ap.n=abs(a.n) to_power p
  & bp.n=abs(b.n) to_power p & ab.n=abs(a.n+ b.n) to_power p and
A4: ap is summable and
A5: bp is summable;
  deffunc F(Element of NAT)=(Partial_Sums(ap).$1) to_power (1/p);
  consider x be Real_Sequence such that
A6: for n be Element of NAT holds x.n=F(n) from SEQ_1:sch 1;
  deffunc G(Element of NAT)=(Partial_Sums(bp).$1) to_power (1/p);
  consider y be Real_Sequence such that
A7: for n be Element of NAT holds y.n=G(n) from SEQ_1:sch 1;
A8: Partial_Sums(ap) is convergent by A4,SERIES_1:def 2;
A9: Sum(ap) = lim Partial_Sums(ap) by SERIES_1:def 3;
  for n be Element of NAT holds 0 <= ap.n
  proof
    let n be Element of NAT;
A10: ap.n=abs(a.n) to_power p by A3;
    now per cases by COMPLEX1:132;
      case abs(a.n) = 0;
        hence 0 <= ap.n by A1,A10,POWER:def 2;
      end;
      case abs(a.n) > 0;
        hence 0 <= ap.n by A10,POWER:39;
      end;
    end;
    hence thesis;
  end;
  then for n be Element of NAT holds 0 <= Partial_Sums(ap).n by Lm2;
  then
A11: x is convergent & lim x= Sum(ap) to_power (1/p) by A2,A6,A8,A9,Th10;
A12: Partial_Sums(bp) is convergent by A5,SERIES_1:def 2;
A13: Sum(bp) = lim Partial_Sums(bp) by SERIES_1:def 3;
  for n be Element of NAT holds 0 <= bp.n
  proof
    let n be Element of NAT;
A14: bp.n=abs(b.n) to_power p by A3;
    now per cases by COMPLEX1:132;
      case abs(b.n) = 0;
        hence 0 <= bp.n by A1,A14,POWER:def 2;
      end;
      case abs(b.n) > 0;
        hence 0 <= bp.n by A14,POWER:39;
      end;
    end;
    hence thesis;
  end;
  then for n be Element of NAT holds 0 <= Partial_Sums(bp).n by Lm2;
  then
A15: y is convergent & lim y= Sum(bp) to_power (1/p) by A2,A7,A12,A13,Th10;
  deffunc H(Element of NAT)=(Partial_Sums(ab).$1) to_power (1/p);
  consider z be Real_Sequence such that
A16: for n be Element of NAT holds z.n=H(n) from SEQ_1:sch 1;
A17: for n be Element of NAT holds z.n <=x.n + y.n
  proof
    let n be Element of NAT;
A18: (Partial_Sums(ab).n) to_power (1/p) <=
    ( (Partial_Sums(ap).n) to_power (1/p) )
    + ( (Partial_Sums(bp).n) to_power (1/p) ) by A1,A3,Th7;
A19: x.n = (Partial_Sums(ap).n) to_power (1/p) by A6;
    y.n = (Partial_Sums(bp).n) to_power (1/p) by A7;
    hence thesis by A16,A18,A19;
  end;
A20: for n be Element of NAT holds 0 <= ab.n
  proof
    let n be Element of NAT;
A21: ab.n=abs(a.n +b.n) to_power p by A3;
    per cases by COMPLEX1:132;
    suppose abs(a.n+b.n) = 0;
      hence 0 <= ab.n by A1,A21,POWER:def 2;
    end;
    suppose abs(a.n+b.n) > 0;
      hence 0 <= ab.n by A21,POWER:39;
    end;
  end;
A22: for n be Element of NAT holds 0 <= z.n
  proof
    let n be Element of NAT;
A23: z.n=(Partial_Sums(ab).n) to_power (1/p) by A16;
    per cases by A20,Lm2;
    suppose Partial_Sums(ab).n = 0;
      hence 0 <= z.n by A2,A23,POWER:def 2;
    end;
    suppose Partial_Sums(ab).n > 0;
      hence 0 <= z.n by A23,POWER:39;
    end;
  end;
A24: z is non-decreasing
  proof
A25: Partial_Sums(ab) is non-decreasing by A20,SERIES_1:19;
A26: now
      let n,m be Element of NAT such that
A27:  n <= m;
A28:  Partial_Sums(ab).n <= Partial_Sums(ab).m by A25,A27,SEQM_3:12;
A29:  0 <= (Partial_Sums(ab).m) to_power (1/p)
      proof
        per cases by A20,Lm2;
        suppose Partial_Sums(ab).m = 0;
          hence 0 <= (Partial_Sums(ab).m) to_power (1/p) by A2,POWER:def 2;
        end;
        suppose Partial_Sums(ab).m > 0;
          hence 0 <= (Partial_Sums(ab).m) to_power (1/p) by POWER:39;
        end;
      end;
      now per cases;
        case Partial_Sums(ab).n = Partial_Sums(ab).m;
          hence (Partial_Sums(ab).n) to_power (1/p)
          <= (Partial_Sums(ab).m) to_power (1/p);
        end;
        case Partial_Sums(ab).n <> Partial_Sums(ab).m;
          then
A30:      Partial_Sums(ab).n < Partial_Sums(ab).m by A28,XXREAL_0:1;
          now per cases;
            case Partial_Sums(ab).n =0;
              hence (Partial_Sums(ab).n) to_power (1/p)
              <= (Partial_Sums(ab).m) to_power (1/p) by A2,A29,POWER:def 2;
            end;
            case
A31:          Partial_Sums(ab).n <> 0;
              0 <= Partial_Sums(ab).n by A20,Lm2;
              hence (Partial_Sums(ab).n) to_power (1/p)
              <= (Partial_Sums(ab).m) to_power (1/p) by A2,A30,A31,POWER:42;
            end;
          end;
          hence (Partial_Sums(ab).n) to_power (1/p)
          <= (Partial_Sums(ab).m) to_power (1/p);
        end;
      end;
      hence (Partial_Sums(ab).n) to_power (1/p)
      <= (Partial_Sums(ab).m) to_power (1/p);
    end;
    now
      let n,m be Element of NAT;
      assume
A32:  n <= m;
A33:  z.n =(Partial_Sums(ab).n) to_power (1/p) by A16;
      z.m =(Partial_Sums(ab).m) to_power (1/p) by A16;
      hence z.n <= z.m by A26,A32,A33;
    end;
    hence thesis by SEQM_3:12;
  end;
  then
A34: z is convergent & lim z <= lim x + lim y by A11,A15,A17,Th9;
  for n be Element of NAT holds (z.n) to_power p = Partial_Sums(ab).n
  proof
    let n be Element of NAT;
A35: z.n = (Partial_Sums(ab).n) to_power (1/p) by A16;
    now per cases;
      case
A36:    Partial_Sums(ab).n =0;
        then z.n= 0 by A2,A35,POWER:def 2;
        hence (z.n) to_power p = Partial_Sums(ab).n by A1,A36,POWER:def 2;
      end;
      case
A37:    Partial_Sums(ab).n <> 0;
        0 <= Partial_Sums(ab).n by A20,Lm2;
        hence (z.n) to_power p = ( Partial_Sums(ab).n) to_power ((1/p)*p)
        by A35,A37,POWER:38
          .=( Partial_Sums(ab).n) to_power 1 by A1,XCMPLX_1:107
          .= Partial_Sums(ab).n by POWER:30;
      end;
    end;
    hence thesis;
  end;
  then
A38: Partial_Sums(ab) is convergent
  & lim Partial_Sums(ab) = (lim z) to_power p by A1,A22,A34,Th10;
  then
A39: ab is summable & Sum(ab)= (lim z) to_power p by SERIES_1:def 2,def 3;
  Sum(ab) to_power (1/p) = lim z
  proof
    per cases;
    suppose
A40:  lim z=0;
      hence Sum(ab) to_power (1/p) = 0 to_power (1/p) by A1,A39,POWER:def 2
        .= lim z by A2,A40,POWER:def 2;
    end;
    suppose lim z <> 0;
      then 0 < lim z by A22,A34,SEQ_2:31;
      hence (Sum ab) to_power (1/p)
      = (lim z) to_power ((1/p)*p) by A39,POWER:38
        .= (lim z) to_power 1 by A1,XCMPLX_1:107
        .= lim z by POWER:30;
    end;
  end;
  hence thesis by A11,A15,A17,A24,A38,Th9,SERIES_1:def 2;
end;

