:: H\"older's Inequality and {M}inkowski's Inequality
::  by Yasumasa Suzuki
::
:: Received September 25, 2004
:: Copyright (c) 2004 Association of Mizar Users

environ

 vocabularies PRE_TOPC, BOOLE, RLVECT_1, FUNCT_1, ARYTM, ARYTM_1, ARYTM_3,
      PROB_1, LATTICES, RELAT_1, ABSVALUE, ORDINAL2, PARTFUN1, LIMFUNC1,
      FCONT_1, SEQ_1, SEQ_2, SEQM_3, RCOMP_1, FDIFF_1, PREPOWER, POWER,
      SERIES_1, FINSEQ_4, SUPINF_2, FRECHET2;
 notations TARSKI, XBOOLE_0, SUBSET_1, RELAT_1, PARTFUN1, FUNCT_2, RFUNCT_2,
      LIMFUNC1, RCOMP_1, FCONT_1, XCMPLX_0, XXREAL_0, XREAL_0, ORDINAL1,
      NUMBERS, REAL_1, NAT_1, COMPLEX1, FINSEQ_4, SEQ_1, SEQ_2, SEQM_3,
      SERIES_1, FDIFF_1, PREPOWER, POWER, TAYLOR_1;
 constructors REAL_1, NAT_1, SEQ_2, SEQM_3, RCOMP_1, FINSEQ_4, RFUNCT_2,
      FCONT_1, FDIFF_1, LIMFUNC1, PREPOWER, SERIES_1, TAYLOR_1;
 registrations RELSET_1, XREAL_0, MEMBERED, RCOMP_1, SEQ_1, SEQM_3, ORDINAL1,
      XXREAL_0;
 requirements SUBSET, REAL, BOOLE, NUMERALS, ARITHM;
 theorems XBOOLE_1, ABSVALUE, REAL_1, REAL_2, TARSKI, XBOOLE_0, XREAL_0,
      SUBSET_1, XCMPLX_1, RCOMP_1, SEQ_1, SEQ_2, SEQM_3, SERIES_1, FUNCT_1,
      RFUNCT_2, NAT_1, FINSEQ_4, POWER, LIMFUNC1, FCONT_1, FCONT_3, FDIFF_1,
      ROLLE, SEQ_4, PREPOWER, RELSET_1, FUNCT_2, TAYLOR_1, XREAL_1, COMPLEX1,
      XXREAL_0;
 schemes SEQ_1, RECDEF_1, NAT_1, PARTFUN2;

begin :: H\"older 's inequality

 reserve a, b, p, q for Real;

registration
  let x be real number;
  cluster right_closed_halfline(x) -> non empty;
coherence
proof
  reconsider x as Real by XREAL_0:def 1;
  x in {g where g is Real : x<=g};
  hence thesis by LIMFUNC1:def 2;
end;
end;

theorem
 for p, q be Real st 0 < p & 0 < q
  for a be Real st 0 <= a holds
    (a to_power p) * (a to_power q) = a to_power (p+q)
 proof
 let p, q be Real such that
 A1: 0 < p & 0 < q;
 let a be Real such that
 A2: 0 <=a;
A3: 0+ 0 < p+q by A1,XREAL_1:10;
    now per cases;
          case A4: a=0; then
            A5: (a to_power p) * (a to_power q)
               = 0 * (0 to_power q) by A1,POWER:def 2
              .= 0;
              a to_power (p+q) = 0 by A3,A4,POWER:def 2;
         hence (a to_power p) * (a to_power q)
                   = a to_power (p+q) by A5;
          end;
          case a <> 0; then
            0 < a by A2;
            hence (a to_power p) * (a to_power q)
                  = a to_power (p+q) by POWER:32;
          end;
     end;
hence thesis;
end;

theorem
 for p, q be Real st 0 < p & 0 < q
  for a be Real st 0 <=a
    holds (a to_power p) to_power q = a to_power (p*q)
proof
  let p, q be Real such that
A1:0 < p & 0 < q;
  let a be Real such that
A2:0 <=a;
A3: 0 < p*q by A1,REAL_2:122;
    now per cases;
      case A4: a=0; then
    A5: (a to_power p) to_power q = (0 to_power p) to_power q
              .= 0 to_power q by A1,POWER:def 2
              .= 0 by A1,POWER:def 2;
              a to_power (p*q) = 0 to_power (p*q) by A4
              .=0 by A3,POWER:def 2;
            hence (a to_power p) to_power q
                   = a to_power (p*q) by A5;
          end;
          case A6: a <> 0;
           0 < a by A2,A6;
           hence (a to_power p) to_power q = a to_power (p*q) by POWER:38;
          end;
     end;
hence thesis;
end;

theorem Th3:
 for p be Real st 0 < p
  for a,b be Real st 0 <= a & a <= b
    holds a to_power p <= b to_power p
proof
 let p be Real such that
 A1: 0 < p;
 let a, b be Real such that
 A2: 0 <= a & a<=b;
 per cases;
   suppose a=b;
     hence a to_power p <= b to_power p;
   end;
   suppose A3:a<>b;
     thus a to_power p <= b to_power p
     proof
      A4: a < b by A2,A3,REAL_1:def 5;
      now per cases;
         case A5: a=0; then
         A6: a to_power p = 0 by A1,POWER:def 2;
         A7: 0 < b by A4,A5;
         thus a to_power p <= b to_power p by A6,A7,POWER:39;
        end;
        case a <> 0; then
         0 < a by A2;
         hence a to_power p <= b to_power p by A1,A4,POWER:42;
       end;
      end;
     hence thesis;
     end;
   end;
end;

theorem Th4:
  1 < p & 1/p + 1/q = 1 & 0 < a & 0 < b implies
  (a * b <= a #R p / p + b #R q / q
 & (a * b = a #R p / p + b #R q / q iff a #R p= b #R q) )
 proof
  assume that
  A1: 1 < p and
  A2: 1/p + 1/q = 1 and
  A3: 0 < a and
  A4: 0 < b;
reconsider pp=1/p, qq=1/q as Real;
A5: qq = 1 -pp by A2;
1/p < 1 by A1,REAL_2:142;
then 1-pp <> 0;
then q" <> 0 by A5,XCMPLX_1:217;
then (q")" <> 0 by XCMPLX_1:203; then
A6: p <> 0 & q <> 0 by A1;
A7: p*q <> 0 by A6,XCMPLX_1:6;
((1*q+1*p)/(p*q))*(p*q) =1*(p*q) by A2,A6,XCMPLX_1:117; then
A8:q+p=p*q by A7,XCMPLX_1:88;
A9: (1-q)*p + q=p+q-p*q .=0 by A8;
A10:(q-1)*p = q+p-p by A8 .=q;
A11:  ex g be PartFunc of REAL,REAL st dom(g)=REAL &
            for x be Real holds g.x=1 / q - x &
            for x be Real holds g is_differentiable_in x & diff(g,x)=-1
proof
defpred X[set] means $1 in REAL;
deffunc U(Real) = 1/q - $1;
consider g being PartFunc of REAL,REAL such that
  A12:   for d be Element of REAL holds d in dom g iff X[d] and
  A13:   for d be Element of REAL
             st d in dom g holds g/.d = U(d) from PARTFUN2:sch 2;
  take g;
     A14: dom(g)=REAL
         proof
          A15: dom(g) c= REAL by RELSET_1:12;
           for x be set st x in REAL holds x in dom g by A12;
          then REAL c=dom(g) by TARSKI:def 3;
          hence dom (g) =REAL by A15,XBOOLE_0:def 10;
        end;
  A16: for d be Element of REAL holds g.d = 1 / q-d
      proof
        let d be Element of REAL;
        g/.d = 1 / q-d by A13,A14;
        hence g.d = 1 / q-d by A14,FINSEQ_4:def 4;
  end;
  A17: for d be Real st d in REAL holds g.d = (-1)*d + 1 / q
        proof
          let d be Real such that d in REAL;
          thus g.d=1 / q-d by A16
             .= (-1)*d + 1 / q;
          end;
  A18: dom(g) is open Subset of REAL by A14,FCONT_3:4,SUBSET_1:def 4; then
 A19: g is_differentiable_on dom(g) by A14,A17,FDIFF_1:31;
  for x be Real holds g is_differentiable_in x & diff(g,x)=-1
  proof
    let d be Real;
    thus g is_differentiable_in d by A14,A18,A19,FDIFF_1:16;
    thus diff(g,d)=(g`|dom(g)).d by A14,A19,FDIFF_1:def 8
                 .= -1 by A14,A17,A18,FDIFF_1:31;
end;
 hence thesis by A14,A16;
 end;
A20:  ex h be PartFunc of REAL,REAL
        st dom(h)= right_open_halfline(0)  &
            for x be Real st x > 0 holds
              h.x=x #R p / p &
              h is_differentiable_in x & diff(h,x)=x #R (p-1)
 proof
 set h=(1/p)(#)( #R p);
A21: p <> 0 by A1;
take h;
 dom( #R p) =right_open_halfline(0) by TAYLOR_1:def 3;
hence
A22: dom(h)= right_open_halfline(0) by SEQ_1:def 6;
A23: now let x be Real such that
A24: x > 0;
A25: x in right_open_halfline(0)
proof
  x in {g where g is Real : 0<g} by A24;
  hence thesis by LIMFUNC1:def 3;
  end;
hence h.x = (1/p) * ( #R p).x by A22,SEQ_1:def 6
            .=(1/p) *(x #R p) by A25,TAYLOR_1:def 3
            .=(x #R p) /p by XCMPLX_1:100;
A26: ( #R p) is_differentiable_in x by A24,TAYLOR_1:21;
hence h is_differentiable_in x by FDIFF_1:23;
thus diff(h,x) = (1/p)*diff(( #R p),x) by A26,FDIFF_1:23
                     .= (1/p)*(p*(x #R (p-1))) by A24,TAYLOR_1:21
                     .= (1/p)*p*(x #R (p-1))
                     .= 1*x #R (p-1) by A21,XCMPLX_1:107
                     .=x #R (p-1);
end;
thus thesis by A23;
end;
consider g be PartFunc of REAL,REAL such that
    A27: dom(g)=REAL and
    A28: for x be Real holds g.x=1 / q - x and
    A29:  for x be Real holds
            g is_differentiable_in x & diff(g,x)=-1 by A11;
consider h be PartFunc of REAL,REAL such that
   A30: dom(h)= right_open_halfline(0) and
   A31:  for x be Real st x > 0 holds
            h.x=x #R p / p  &  h is_differentiable_in x
            & diff(h,x)=x #R (p-1) by A20;
set f=h+g;
A32:  dom f= dom h /\ dom g by SEQ_1:def 3
             .= right_open_halfline(0) /\ REAL by A27,A30
             .= right_open_halfline(0) by XBOOLE_1:28;
A33: for x be Real st x in right_open_halfline(0)  holds
     f.x=x #R p / p +  1 / q - x &
     f  is_differentiable_in x & diff(f,x)=x #R (p-1) -1
 proof
 let x be Real such that
   A34: x in right_open_halfline(0);
   x in {y where y is Real : 0< y} by A34,LIMFUNC1:def 3;
  then ex y be Real st x=y & 0 < y; then
   A35: 0 < x;
   A36: g is_differentiable_in x by A29;
   A37: diff(g,x)=-1 by A29;
   A38: h is_differentiable_in x by A31,A35;
   A39: diff(h,x)=x #R (p-1) by A31,A35;
   thus f.x=h.x + g.x by A32,A34,SEQ_1:def 3
             .=x #R p / p + g.x by A31,A35
             .=x #R p / p +(1 / q - x) by A28
             .=x #R p / p +1 / q - x;
   thus f is_differentiable_in x by A36,A38,FDIFF_1:21;
   thus diff(f,x)=diff(h,x)+diff(g,x) by A36,A38,FDIFF_1:21
                    .=x #R (p-1) - 1 by A37,A39;
  end;
 A40: 1 #R p / p +  1 / q = 1 by A2,PREPOWER:87;
 A41:  for x be Real st 0 < x & x <> 1 holds
               x < x #R p / p +  1 / q
    proof
     let x be Real such that
       A42: 0 < x & x <> 1;
       A43: x < 1 or x > 1 by A42,REAL_1:def 5;
       x in {y where y is Real : 0< y} by A42; then
       A44: x in right_open_halfline(0) by LIMFUNC1:def 3;
       A45: right_open_halfline(0) is open Subset of REAL by FCONT_3:7;
       A46: right_open_halfline(0) c= dom f by A32;
       A47: for x be Real st x in right_open_halfline(0) holds
                 f  is_differentiable_in x by A33;
       A48: f is_differentiable_on right_open_halfline(0)
      by A45,A46,A47,FDIFF_1:16; then
       A49: f is_continuous_on right_open_halfline(0) by FDIFF_1:33;
       1 in  {y where y is Real : 0< y};
       then 1 in right_open_halfline(0) by LIMFUNC1:def 3;
       then
       A50: f.1= 1 #R p / p +  1 / q - 1 by A33
            .=1/p + 1/q -1 by PREPOWER:87
            .=0 by A2;
       now per cases by A43;
         case A51: x<1;
            set t=1-x;
            1-1 < 1-x by A51,REAL_1:92; then
            A52: 0 < t;
            A53: [.x,x+t.] c= right_open_halfline(0)
            proof
             now
               let z be set such that
                A54: z in [.x,x+t.];
                  z in {r where r is Real: x<=r & r<=x+t }
                 by A54,RCOMP_1:def 1;
                 then consider r be Real such that
                  A55:r=z & x<=r & r<=x+t;
                 0 < r by A42,A55;
                 then z in {y where y is Real : 0< y} by A55;
                 hence z in right_open_halfline(0) by LIMFUNC1:def 3;
              end;
             hence thesis by TARSKI:def 3;
            end;
            ].x,x+t.[ c= [.x,x+t.] by RCOMP_1:15; then
            A56: ].x,x+t.[ c= right_open_halfline(0) by A53,XBOOLE_1:1;
            A57: f is_continuous_on [.x,x+t.] by A49,A53,FCONT_1:17;
            A58: f is_differentiable_on ].x,x+t.[ by A48,A56,FDIFF_1:34;
            consider s be Real such that
                A59: 0<s and
                A60: s<1 and
                A61: f.(x+t) = f.x + t*diff(f,x+s*t) by A52,A57,A58,ROLLE:4;
           0*t < s*t by A52,A59,XREAL_1:70; then
           0 + 0 < x+s*t by A42,XREAL_1:10; then
           A62: 0 < x+s*t;
           s*t < 1*t by A52,A60,XREAL_1:70; then
           A63: x+s*t <  x+t by XREAL_1:10;
           A64: x+s*t in right_open_halfline(0)
           proof
              x+s*t in {y where y is Real : 0< y} by A62;
              hence x+s*t in right_open_halfline(0) by LIMFUNC1:def 3;
           end;
           A65: x+s*t < 1 by A63;
           A66: diff(f,x+s*t) =(x+s*t) #R (p-1)-1 by A33,A64;
           1-1 < p-1 by A1,REAL_1:92; then
           A67: 0 < p-1;
           (x+s*t) to_power (p-1) < (x+s*t) to_power 0
            by A62,A65,A67,POWER:45;
           then (x+s*t) #R (p-1) < (x+s*t) to_power 0 by A62,POWER:def 2;
           then (x+s*t) #R (p-1) < (x+s*t) #R 0 by A62,POWER:def 2;
           then (x+s*t) #R (p-1) < 1 by A62,PREPOWER:85;
           then (x+s*t) #R (p-1) -1 <  1-1 by REAL_1:92;
           then t*diff(f,x+s*t) < t*0 by A52,A66,XREAL_1:70;
           then f.x + t*diff(f,x+s*t) <  f.x +0 by XREAL_1:10;
           then
           A68:  f.(x+t) <  f.x by A61;
            0 <  f.x by A50,A68; then
            0 < x #R p / p +  1 / q-x by A33,A44;
           then 0+x < x #R p / p +  1 / q-x+x by XREAL_1:10;
            hence x < x #R p / p +  1 / q;
         end;
         case A69: x > 1;
            set t=x-1;
            1-1 < x-1 by A69,REAL_1:92; then
            A70: 0 < t;
            A71: [.1,1+t.] c= right_open_halfline(0)
            proof
             now
               let z be set such that
                A72: z in [.1,1+t.];
                  z in   {r where r is Real: 1<=r & r<=1+t }
                 by A72,RCOMP_1:def 1;
                 then consider r be Real such that
                 A73:r=z & 1<=r & r<=1+t;
                 z in {y where y is Real : 0< y} by A73;
                 hence z in right_open_halfline(0) by LIMFUNC1:def 3;
              end;
             hence thesis by TARSKI:def 3;
            end;
            ].1,1+t.[ c= [.1,1+t.] by RCOMP_1:15; then
            A74: ].1,1+t.[ c= right_open_halfline(0) by A71,XBOOLE_1:1;
            A75: f is_continuous_on [.1,1+t.] by A49,A71,FCONT_1:17;
            A76: f is_differentiable_on ].1,1+t.[ by A48,A74,FDIFF_1:34;
            consider s be Real such that
                A77: 0<s and
                s<1 and
                A78: f.(1+t) = f.1 + t*diff(f,1+s*t) by A70,A75,A76,ROLLE:4;
A79:       0*t < s*t by A70,A77,XREAL_1:70; then
           0 + 0 < 1+s*t by XREAL_1:10; then
           A80: 0 < 1+s*t;
           A81: 1+s*t in right_open_halfline(0)
           proof
              1+s*t in {y where y is Real : 0< y} by A80;
              hence 1+s*t in right_open_halfline(0) by LIMFUNC1:def 3;
           end;
           1+ 0 < 1+ s*t by A79,XREAL_1:10; then
           A82: 1 < 1+s*t;
           A83: diff(f,1+s*t) =(1+s*t) #R (p-1)-1 by A33,A81;
           1-1 < p-1 by A1,REAL_1:92; then
            1 < (1+s*t) #R (p-1) by A82,PREPOWER:100;
           then 1-1 < (1+s*t) #R (p-1) -1 by REAL_1:92;
           then t*0 < t*diff(f,1+s*t) by A70,A83,XREAL_1:70;
           then f.1 +0 <  f.1 + t*diff(f,1+s*t) by XREAL_1:10;
           then
           A84:  f.1 < f.(1+t) by A78;
            0 < f.x by A50,A84;
           then 0 < x #R p / p + 1 / q-x by A33,A44;
           then 0+x < x #R p / p + 1 / q-x+x by XREAL_1:10;
            hence  x < x #R p / p + 1 / q;
         end;
      end;
      hence thesis;
     end;
A85:  0 < b #R (1-q) by A4,PREPOWER:95; then
A86:0*(b #R (1-q)) < a * (b #R (1-q)) by A3,XREAL_1:70;
A87:  0 < b #R q by A4,PREPOWER:95;
  a * (b #R (1-q)) <= (a * (b #R (1-q))) #R p / p +  1 / q
proof
    now per cases;
      case A88: a * (b #R (1-q)) =1;
        hence a * (b #R (1-q)) = 1 #R p / p +  1 / q by A40
             .=(a * (b #R (1-q))) #R p / p +  1 / q by A88;
        end;
      case A89: a * (b #R (1-q)) <>1;
       thus a * (b #R (1-q)) <= (a * (b #R (1-q))) #R p / p +  1 / q
        by A41,A86,A89;
      end;
   end;
    hence thesis;
 end;
then
 a * (b #R (1-q)) *(b #R q)
 <= ((a * (b #R (1-q))) #R p / p + 1 / q)*(b #R q) by A87,XREAL_1:66;
 then a*( (b #R (1-q)) *(b #R q))
 <= ((a * (b #R (1-q))) #R p / p + 1 / q)*(b #R q);
 then a*(b #R ((1-q) + q))
  <= ((a * (b #R (1-q))) #R p / p + 1 / q)*(b #R q) by A4,PREPOWER:89;
 then a*b <= ((a * (b #R (1-q))) #R p / p +  1 / q)*(b #R q)
 by A4,PREPOWER:86;
then a*b <= ((a #R p * (b #R (1-q)) #R p )/ p +  1 / q)*(b #R q)
 by A3,A85,PREPOWER:92; then
 a*b
  <= (a #R p * (b #R ((1-q)*p) )/ p + 1 / q)*(b #R q) by A4,PREPOWER:105;
  then
a*b <= (a #R p * (b #R ((1-q)*p) )/ p )*(b #R q)+  (1 / q)*(b #R q); then
a*b <= (a #R p * ((b #R ((1-q)*p) )/ p )*(b #R q))+  (1 / q)*(b #R q)
 by XCMPLX_1:75; then
 a*b <= a #R p * ((b #R ((1-q)*p) )/ p*(b #R q))+  (1 / q)*(b #R q); then
 a*b <= a #R p * ((b #R ((1-q)*p) )*(b #R q)/p)+  (1 / q)*(b #R q)
 by XCMPLX_1:75; then
 a*b <= a #R p * (b #R ((1-q)*p + q)/p)+  (1 / q)*(b #R q)
 by A4,PREPOWER:89;
then a*b <= a #R p * (1/p)+  (1 / q)*(b #R q) by A4,A9,PREPOWER:85;
then a*b <= a #R p /p+ (1 / q)*(b #R q) by XCMPLX_1:100;
then
A90:  a*b <= a #R p /p+ b #R q/q by XCMPLX_1:100;
A91: a * b = a #R p / p + b #R q / q iff a #R p= b #R q
proof
A92: now assume
     A93: a * b = a #R p / p + b #R q / q;
 a*b  = a #R p /p+  (1 / q)*(b #R q) by A93,XCMPLX_1:100; then
 a*b = a #R p * (1/p)+  (1 / q)*(b #R q) by XCMPLX_1:100; then
 a*b = a #R p * (b #R 0/p)+  (1 / q)*(b #R q) by A4,PREPOWER:85; then
 a*b = a #R p * (b #R ((1-q)*p + q)/p)+  (1 / q)*(b #R q) by A9; then
 a*b = a #R p * ((b #R ((1-q)*p) )*(b #R q)/p)+  (1 / q)*(b #R q)
 by A4,PREPOWER:89; then
 a*b = a #R p * ((b #R ((1-q)*p) )/ p*(b #R q))+  (1 / q)*(b #R q)
 by XCMPLX_1:75; then
a*b = (a #R p * ((b #R ((1-q)*p) )/ p )*(b #R q))+  (1 / q)*(b #R q); then
a*b = (a #R p * (b #R ((1-q)*p) )/ p )*(b #R q)+  (1 / q)*(b #R q)
 by XCMPLX_1:75; then
 a*b = (a #R p * (b #R ((1-q)*p) )/ p +  1 / q)*(b #R q); then
 a*b = ((a #R p * (b #R (1-q)) #R p )/ p +  1 / q)*(b #R q)
 by A4,PREPOWER:105; then
 a*b = ((a * (b #R (1-q))) #R p / p +  1 / q)*(b #R q)
 by A3,A85,PREPOWER:92;
 then a*(b #R ((1-q) + q))
  = ((a * (b #R (1-q))) #R p / p +  1 / q)*(b #R q) by A4,PREPOWER:86;
 then a*( (b #R (1-q)) *(b #R q))
 = ((a * (b #R (1-q))) #R p / p +  1 / q)*(b #R q) by A4,PREPOWER:89;then
 a * (b #R (1-q)) *(b #R q)
 = ((a * (b #R (1-q))) #R p / p +  1 / q)*(b #R q); then
A94:  a * (b #R (1-q)) = (a * (b #R (1-q))) #R p / p +  1 / q
 by A87,XCMPLX_1:5;
A95:a *( b #R (1-q)) = 1 by A41,A86,A94;
a *(( b #R (1-q))*( b #R (q-1))) =
a *( b #R (1-q))*( b #R (q-1)) .= 1*( b #R (q-1)) by A95;
then a *( b #R ( (1-q)+ (q-1)) ) = b #R (q-1)
by A4,PREPOWER:89;
then a*1 = b #R (q-1) by A4,PREPOWER:85;
hence a #R p = b #R q by A4,A10,PREPOWER:105;
end;
A96:  0 < b #R (q-1) by A4,PREPOWER:95;
A97:  p > 0 by A1;
A98: now assume
      A99: a #R p= b #R q; then
A100:a #R p = (b #R (q-1) ) #R p by A4,A10,PREPOWER:105;
a=a #R 1 by A3,PREPOWER:86
  .=a #R (p *(1/p) ) by A97,XCMPLX_1:107
  .= (a #R p ) #R (1/p) by A3,PREPOWER:105
  .= (b #R (q-1) ) #R (p *(1/p)) by A96,A100,PREPOWER:105
  .=(b #R (q-1) ) #R 1 by A97,XCMPLX_1:107
  .= b #R (q-1) by A96,PREPOWER:86;
then a*1 = b #R (q-1);
then a *( b #R ( (1-q)+ (q-1)) ) = b #R (q-1) by A4,PREPOWER:85;
then a *(( b #R (1-q))*( b #R (q-1)))  =1*( b #R (q-1)) by A4,PREPOWER:89;
then a *( b #R (1-q))*( b #R (q-1))  =1*( b #R (q-1));
then
 A101: a *( b #R (1-q)) =1 by A96,XCMPLX_1:5;
    thus a #R p / p + b #R q / q = b #R q / p + b #R q / q by A99
      .=b #R q *(1/ p) + b #R q / q by XCMPLX_1:100
      .=b #R q *(1/ p) + b #R q *(1/q) by XCMPLX_1:100
      .=b #R q * (1/p + 1/q)
      .=b #R q *1 by A2
      .=b #R q *(a*(b #R (1-q))) by A101
      .=a* ( (b #R (1-q)) *(b #R q))
      .=a*(b #R ((1-q) + q)) by A4,PREPOWER:89
      .=a* b by A4,PREPOWER:86;
   end;
thus thesis by A92,A98;
end;
thus thesis by A90,A91;
end;

theorem Th5:
  1 < p & 1/p + 1/q = 1 & 0 <= a & 0 <= b implies
  (a * b <= a to_power p / p + b to_power q / q
  & (a * b = a to_power p / p + b to_power q / q
  iff  a to_power p = b to_power q))
proof
  assume that
  A1: 1 < p and
  A2: 1/p + 1/q = 1 and
  A3: 0 <= a and
  A4: 0 <= b;
  reconsider pp=1/p, qq=1/q as Real;
  A5: 0 < p by A1;
  A6: qq = 1 -pp by A2;
  1/p < 1 by A1,REAL_2:142;
  then 1-1 < 1-pp by REAL_1:92; then
  A7:  0 < qq by A6; then
  A8:  0 < q by REAL_2:150;
  A9:  0 < p by A1;
  A10: p <> 0 by A5;
  A11: q <> 0 by A8;
   A12: 0 <= a to_power p / p
  proof
    A13: 0 < p by A1;
    A14: a=0 or 0 < a by A3;
    now per cases by A14;
     case 0 < a; then
       0 < a to_power p by POWER:39; then
       0/p < a to_power p/p by A13,REAL_1:73;
       hence 0 <= a to_power p / p;
     end;
     case 0 = a; then
            0 = a to_power p by A13,POWER:def 2;
            hence 0 <= a to_power p / p;
     end;
   end;
   hence thesis;
  end;
  A15: 0 <= b to_power q / q
  proof
      A16: b=0 or 0 < b by A4;
      now per cases by A16;
       case 0 < b; then
         0 < b to_power q by POWER:39;
         then 0/q < b to_power q/q by A8,REAL_1:73;
         hence 0 <= b to_power q / q;
       end;
       case 0 = b; then
              0 = b to_power q by A8,POWER:def 2;
              hence 0 <= b to_power q / q;
       end;
     end;
     hence thesis;
    end;
  A17: 0+0 <=a to_power p / p +b to_power q / q by A12,A15,XREAL_1:9;
  now per cases;
    case A18: a*b=0;
      A19: a * b <= a to_power p / p + b to_power q / q by A17,A18;
      a * b = a to_power p / p + b to_power q / q
                 iff a to_power p = b to_power q
     proof
     A20: a=0 or b=0 by A18,XCMPLX_1:6;
       now per cases by A20;
        case A21:a=0;
        thus a * b = a to_power p  / p + b to_power q / q
                 iff  a to_power p  = b to_power q
         proof
          A22: now assume
           a * b = a to_power p  / p + b to_power q / q;
           then 0 = 0/p + b to_power q / q by A5,A21,POWER:def 2;
           then 0*q = (b to_power q /q)*q;
           then 0 = b to_power q by A11,XCMPLX_1:88;
           then
           A23: 0  = (b to_power q ) to_power (1/q) by A7,POWER:def 2;
           A24: 0=b
             proof
                 assume
                 A25: b <> 0;
                 then 0 = b to_power (q * (1/q) ) by A4,A23,POWER:38;
                 then 0 = b to_power 1 by A11,XCMPLX_1:107;
                 then 0 = b by POWER:30;
                 hence contradiction by A25;
             end;
            thus a to_power p = 0 to_power p by A21
            .= 0 by A9,POWER:def 2
            .= 0 to_power q by A8,POWER:def 2
            .= b to_power q by A24;
         end;
           now assume
           A26: a to_power p  = b to_power q;
           A27: a to_power p /p = 0 to_power p /p by A21
                           .= 0/p by A9,POWER:def 2
                           .=0;
           A28: b to_power q /q = a to_power p /q by A26
                               .=0 /q by A9,A21,POWER:def 2
                               .=0;
           thus a*b=0 by A18
                 .=a to_power p /p + b to_power q /q by A27,A28;
          end;
        hence thesis by A22;
         end;
        end;
        case A29:b=0;
        thus a * b = a to_power p / p + b to_power q / q
                 iff a to_power p = b to_power q
         proof
         A30: 1/p > 0 by A5,REAL_2:127;
          A31: now assume
           a * b = a to_power p / p + b to_power q / q;
           then 0 = 0/q + a to_power p / p by A8,A29,POWER:def 2;
           then 0*p = (a to_power p/p)*p;
           then 0  = a to_power p by A10,XCMPLX_1:88;
           then
           A32: 0 = (a to_power p ) to_power (1/p) by A30,POWER:def 2;
           A33: 0=a
             proof
                 assume
                 A34: a <> 0;
                 then a > 0 by A3;
                 then 0 = a to_power (p * (1/p) ) by A32,POWER:38;
                 then 0 = a to_power 1 by A10,XCMPLX_1:107;
                 hence contradiction by A34,POWER:30;
             end;
            thus b to_power q = 0 to_power q by A29
            .= 0 by A8,POWER:def 2
            .= 0 to_power p by A9,POWER:def 2
            .= a to_power p by A33;
         end;
           now assume
           A35:  a to_power p = b to_power q;
           A36:  b to_power q /q = 0 to_power q /q by A29
                           .= 0/q by A8,POWER:def 2
                           .= 0;
           A37: a to_power p /p = b to_power q /p by A35
                               .= 0 to_power q /p by A29
                               .=0 /p by A8,POWER:def 2
                               .=0;
           thus a*b=0 by A18
                 .=a to_power p /p + b to_power q /q by A36,A37;
          end;
          hence thesis by A31;
         end;
         end;
      end;
     hence thesis;
     end;
     hence a * b <= a to_power p / p + b to_power q / q &
      (a * b = a to_power p / p + b to_power q / q
                 iff a to_power p  = b to_power q ) by A19;
    end;
    case a*b<>0; then
       A38: a <> 0 & b <> 0;
       A39: 0 < a by A3,A38;
       A40: 0 < b by A4,A38;
        a * b <= a #R p / p + b #R q / q by A1,A2,A39,A40,Th4;
      then a * b <= a to_power p / p + b #R q / q by A39,POWER:def 2;
      then
      A41: a * b <= a to_power p / p + b to_power q / q
         by A40,POWER:def 2;
      a * b = a #R p / p + b #R q / q
           iff a #R p  = b #R q by A1,A2,A39,A40,Th4;
      then a * b = a to_power p  / p + b #R q / q
           iff a to_power p = b #R q by A39,POWER:def 2; then
      a * b = a to_power p / p + b to_power q / q
           iff a to_power p = b to_power q by A40,POWER:def 2;
      hence a * b <= a to_power p / p + b to_power q / q &
      (a * b = a to_power p  / p + b to_power q / q
                 iff a to_power p = b to_power q ) by A41;
 end;
 end;
 hence thesis;
end;

Lm1:
for a be Real_Sequence
  st for n be Nat holds 0 <= a.n holds
      for n be Nat holds a.n <= Partial_Sums(a).n
proof
let a be Real_Sequence such that
   A1: for n be Nat holds 0 <= a.n;
   defpred P[Nat] means a.$1 <=Partial_Sums(a).$1;
 A2: P[0] by SERIES_1:def 1;
 A3:  for n be Nat st P[n] holds P[n+1]
       proof
         let n be Nat such that
        A4:  P[n];
        A5: Partial_Sums(a).(n+1) = Partial_Sums(a).n + a.(n+1)
          by SERIES_1:def 1;
         a.n <= Partial_Sums(a).n by A4; then
         A6: a.n + a.(n+1) <= Partial_Sums(a).n + a.(n+1) by XREAL_1:8;
         0 <= a.n by A1;
         then 0 + a.(n+1) <= a.n + a.(n+1) by XREAL_1:8;
         hence P[n+1] by A5,A6,XXREAL_0:2;
      end;
       for n be Nat holds P[n] from NAT_1:sch 1(A2,A3);
     hence thesis;
  end;

Lm2:
for a be Real_Sequence st for n be Nat holds 0 <= a.n holds
      for n be Nat holds 0 <= Partial_Sums(a).n
proof
  let a be Real_Sequence such that
A1: for n be Nat holds 0 <= a.n;
  let n be Nat;
A2: a.n <=Partial_Sums(a).n by A1,Lm1;
  0 <= a.n by A1;
  hence 0 <=Partial_Sums(a).n by A2;
end;

Lm3:
for a be Real_Sequence st for n be Nat holds 0 <= a.n
for n be Nat st Partial_Sums(a).n=0
  holds for k be Nat st k <= n holds a.k=0
proof
let a be Real_Sequence such that
A1:  for n be Nat holds 0 <= a.n;
let n be Nat such that
 A2: Partial_Sums(a).n=0;
  now let k be Nat such that
      A3: k <=n;
      Partial_Sums(a) is non-decreasing by A1,SERIES_1:19; then
      A4: Partial_Sums(a).k <= Partial_Sums(a).n by A3,SEQM_3:12;
      a.k <=Partial_Sums(a).k by A1,Lm1; then
      a.k <=0 by A2,A4;
      hence a.k=0 by A1;
  end;
 hence thesis;
end;

Lm4:
for a be Real_Sequence
for n be Nat st (for k be Nat st k <=n holds a.k=0)
    holds Partial_Sums(a).n=0
proof
let a be Real_Sequence;
defpred P[Nat] means (for k be Nat st k <=$1 holds a.k=0)
    implies Partial_Sums(a).$1=0;
A1: P[0]
  proof
    assume for k be Nat st k <=0 holds a.k=0; then
      A2: a.0=0;
      thus Partial_Sums(a).0=a.0 by SERIES_1:def 1
                                   .=0 by A2;
   end;
A3: for n be Nat st P[n] holds P[n+1]
  proof
    let n be Nat such that
     A4: P[n];
     now assume
     A5: for k be Nat st k <=n+1 holds a.k=0;
      now let k be Nat such that
          A6: k <= n;
          n <= n+1 by NAT_1:29; then
          k <= n+1 by A6,XXREAL_0:2;
          hence a.k=0 by A5;
      end;
     then
     A7:Partial_Sums(a).n=0 by A4;
     thus Partial_Sums(a).(n+1)
                      =Partial_Sums(a).n+a.(n+1) by SERIES_1:def 1
                     .=0 by A5,A7;
     end;
 hence thesis;
end;
thus for n be Nat holds P[n] from NAT_1:sch 1 (A1,A3);
end;

begin  :: Minkowski's inequality

theorem Th6:
for p, q be Real st 1 < p & 1/p + 1/q = 1
for a,b,ap,bq,ab be Real_Sequence st
  ( for n be Nat holds
              ap.n=abs(a.n) to_power p
           & bq.n=abs(b.n) to_power q
           & ab.n=abs(a.n* b.n)) holds
  for n be Nat holds
     Partial_Sums(ab).n <= ( (Partial_Sums(ap).n) to_power (1/p) )
      * ( (Partial_Sums(bq).n) to_power (1/q) )
   proof
  let p,q be Real such that
  A1: 1 < p and
  A2: 1/p + 1/q = 1;
    reconsider pp=1/p, qq=1/q as Real;
    A3: qq = 1 -pp by A2;
    1/p < 1 by A1,REAL_2:142;
    then 1-1 < 1-pp by REAL_1:92;
    then
    A4: 0 < q by A3,REAL_2:150;
    A5: 0 < p by A1;
    A6: p <> 0 by A5;
    A7: q <> 0 by A4;
    A8: 1/p > 0 by A5,REAL_2:127;
    A9: 1/q > 0 by A4,REAL_2:127;
  let  a,b,ap,bq,ab be Real_Sequence such that
  A10: for n be Nat holds ap.n=abs(a.n) to_power p
           & bq.n=abs(b.n) to_power q & ab.n=abs(a.n* b.n);
  let n be Nat;
     set A=Partial_Sums(ap).n;
     set B=Partial_Sums(bq).n;
     set Ap=A to_power (1/p);
     set Bq=B to_power (1/q);
     A11:for n be Nat holds 0 <= ap.n
     proof
       let n be Nat;
         A12: 0 <= abs(a.n) by COMPLEX1:132;
         A13: ap.n=abs(a.n) to_power p by A10;
         A14: abs(a.n) = 0 or abs(a.n) > 0 by A12;
         now per cases by A14;
           case abs(a.n) = 0;
           hence 0 <= ap.n by A5,A13,POWER:def 2;
           end;
           case abs(a.n) > 0;
           hence 0 <= ap.n by A13,POWER:39;
           end;
         end;
         hence thesis;
     end;
     A15:for n be Nat holds 0 <= bq.n
     proof
       let n be Nat;
         A16:  0 <= abs(b.n) by COMPLEX1:132;
         A17:  bq.n=abs(b.n) to_power q by A10;
         A18:  abs(b.n) = 0 or abs(b.n) > 0 by A16;
         now per cases by A18;
           case abs(b.n) = 0;
           hence 0 <= bq.n by A4,A17,POWER:def 2;
           end;
           case abs(b.n) > 0;
           hence 0 <= bq.n by A17,POWER:39;
           end;
         end;
         hence thesis;
     end;
     A19: 0 <= A by A11,Lm2;
     A20: 0 <= B by A15,Lm2;
     now per cases;
       case A21: A*B = 0;
        A22: 0 <= Ap
        proof
        A23: A=0 or 0 < A by A19;
        now per cases by A23;
           case 0 < A;
           hence 0 <= A to_power (1/p) by POWER:39;
          end;
          case 0 = A;
               then 0 = A to_power (1/p) by A8,POWER:def 2;
               hence 0 <= A to_power (1/p);
          end;
       end;
      hence thesis;
      end;
     A24: 0 <= Bq
       proof
         A25: B=0 or 0 < B by A20;
         now per cases by A25;
            case 0 < B;
            hence 0 <= B to_power (1/q) by POWER:39;
           end;
           case A26: 0 = B;
                0 = B to_power (1/q) by A9,A26,POWER:def 2;
                hence 0 <= B to_power (1/q);
           end;
        end;
       hence thesis;
       end;
       A27: 0 <=Ap*Bq by A22,A24,REAL_2:121;
       A28: A=0 or B=0 by A21,XCMPLX_1:6;
         now per cases by A28;
           case A29: A=0;
             A30: for k be Nat st k <=n holds
                   ap.k=0 by A11,A29,Lm3;
             A31: for k be Nat st k <=n holds a.k=0
             proof
              let k be Nat such that
                A32: k <=n;
                ap.k=0 by A30,A32; then
                A33: abs(a.k) to_power p = 0 by A10;
                abs(a.k) =0
                   proof
                   assume abs(a.k) <> 0;
                   then abs(a.k) > 0 by COMPLEX1:132;
                   hence contradiction by A33,POWER:39;
                   end;
                hence thesis by ABSVALUE:7;
             end;
             A34: for k be Nat st k <=n holds ab.k=0
             proof
             let k be Nat such that
                A35: k <=n;
                thus ab.k=abs(a.k * b.k) by A10
                           .=abs(0 * b.k) by A31,A35
                           .=0 by ABSVALUE:7;
             end;
            Partial_Sums(ab).n = 0 by A34,Lm4;
            hence Partial_Sums(ab).n
            <= ( (Partial_Sums(ap).n) to_power (1/p) )
             * ( (Partial_Sums(bq).n)  to_power (1/q) ) by A27;
           end;
           case A36: B=0;
             A37: for k be Nat st k <=n holds bq.k=0 by A15,A36,Lm3;
             A38: for k be Nat st k <=n holds b.k=0
             proof
              let k be Nat such that
                A39: k <=n;
                bq.k=0 by A37,A39; then
                A40: abs(b.k) to_power q = 0 by A10;
                abs(b.k) =0
                   proof
                   assume abs(b.k) <> 0; then
                   abs(b.k) > 0 by COMPLEX1:132; then
                   abs(b.k) to_power q  > 0 by POWER:39;
                   hence contradiction by A40;
                   end;
                hence thesis by ABSVALUE:7;
             end;
             A41: for k be Nat st k <=n holds ab.k=0
             proof
             let k be Nat such that
                A42: k <=n;
                thus ab.k=abs(a.k * b.k) by A10
                           .=abs(a.k * 0) by A38,A42
                           .=0 by ABSVALUE:7;
             end;
            Partial_Sums(ab).n = 0 by A41,Lm4;
            hence Partial_Sums(ab).n
            <= ( (Partial_Sums(ap).n) to_power (1/p) )
             * ( (Partial_Sums(bq).n) to_power (1/q) ) by A27;
           end;
       end;
        hence Partial_Sums(ab).n
            <= ( (Partial_Sums(ap).n) to_power (1/p) )
             * ( (Partial_Sums(bq).n) to_power (1/q) );
       end;
       case A43: A*B <> 0;
       A44: A <> 0 & B <> 0 by A43;
       A45: A > 0 by A19,A44; then
       A46: Ap > 0 by POWER:39;
       A47: B > 0 by A20,A44; then
       A48: Bq > 0 by POWER:39;
       deffunc F(Nat) =abs(a.$1)/Ap;
       consider x be Real_Sequence such that
       A49: for n be Nat holds x.n=F(n) from SEQ_1:sch 1;
       deffunc G(Nat) =abs(b.$1)/Bq;
       consider y be Real_Sequence such that
       A50: for n be Nat holds y.n=G(n) from SEQ_1:sch 1;
       A51: for n be Nat holds 0 <=x.n
          proof
          let n be Nat;
          0 <= abs(a.n) by COMPLEX1:132; then
          0 <= abs(a.n)/Ap by A46,REAL_2:125;
          hence 0 <= x.n by A49;
          end;
       A52: for n be Nat holds 0 <=y.n
          proof
          let n be Nat;
          0 <= abs(b.n) by COMPLEX1:132;
          then 0 <= abs(b.n)/Bq by A48,REAL_2:125;
          hence 0 <= y.n by A50;
          end;
       A53: for n be Nat holds
         (x.n * y.n <= (x.n) to_power p / p + (y.n) to_power q / q
         & (x.n * y.n = (x.n) to_power p / p + (y.n) to_power q / q
         iff  (x.n) to_power p = (y.n) to_power q))
         proof
         let n be Nat;
            A54:0 <= x.n by A51;
            A55:0 <= y.n by A52;
            thus x.n * y.n <= (x.n) to_power p / p + (y.n) to_power q / q
            & (x.n * y.n = (x.n) to_power p / p + (y.n) to_power q / q
             iff (x.n) to_power p = (y.n) to_power q)
          by A1,A2,A54,A55,Th5;
        end;
       A56: for n be Nat holds
         ((1/(Ap*Bq)) (#) ab).n = x.n * y.n
        proof
        let n be Nat;
        A57: x.n= abs(a.n)/Ap by A49;
        A58: y.n= abs(b.n)/Bq by A50;
        thus x.n*y.n=(abs(a.n)/Ap)*(abs(b.n)/Bq) by A57,A58
                   .= (abs(a.n)*abs(b.n))/(Ap*Bq) by XCMPLX_1:77
                   .=abs(a.n*b.n)/(Ap*Bq) by COMPLEX1:151
                   .=ab.n/(Ap*Bq) by A10
                   .=(1/(Ap*Bq))*ab.n by XCMPLX_1:100
                   .=((1/(Ap*Bq)) (#) ab).n by SEQ_1:13;
        end;
     A59: for n be Nat holds
      (((1/p)(#)((1/A)(#)ap)) + ((1/q)(#)((1/B)(#)bq))).n
         = (x.n) to_power p / p + (y.n) to_power q / q
       proof
        let n be Nat;
        A60: x.n= abs(a.n)/Ap by A49;
        A61: y.n= abs(b.n)/Bq by A50;
        A62: (x.n) to_power p / p
            = ((abs(a.n)/Ap) to_power p) /p by A60;
        A63:  (abs(a.n)/Ap) to_power p
             =abs(a.n) to_power p/Ap to_power p
             proof
               now per cases;
                case A64: abs(a.n) =0;
                thus (abs(a.n)/Ap) to_power p
                =(0/Ap) to_power p by A64
                .=0 /Ap to_power p by A5,POWER:def 2
                .=0 to_power p/Ap to_power p by A5,POWER:def 2
                .=abs(a.n) to_power p/Ap to_power p by A64;
                end;
                case A65: abs(a.n) <> 0;
                abs(a.n) > 0 by A65,COMPLEX1:132;
                hence (abs(a.n)/Ap) to_power p
                =abs(a.n) to_power p/Ap to_power p by A46,POWER:36;
                end;
             end;
             hence thesis;
            end;
        A66: (x.n) to_power p / p
            =(abs(a.n) to_power p/Ap to_power p ) /p by A62,A63
            .=( ap.n / Ap to_power p) /p by A10
            .=( ap.n / (A to_power ((1/p)*p))) /p
              by A45,POWER:38
            .= ( ap.n / (A to_power 1 )) /p by A6,XCMPLX_1:88
            .= ( ap.n / A ) /p by POWER:30
            .= (1/p)*(ap.n / A) by XCMPLX_1:100
            .= (1/p)*((1/A)*ap.n) by XCMPLX_1:100
            .= (1/p)*(((1/A)(#)ap).n) by SEQ_1:13
            .=((1/p)(#)((1/A)(#)ap)).n by SEQ_1:13;
        A67: (y.n) to_power q / q
            = ((abs(b.n)/Bq) to_power q) /q by A61;
        A68:  (abs(b.n)/Bq) to_power q
             =abs(b.n) to_power q/Bq to_power q
             proof
               now per cases;
                case A69: abs(b.n) =0;
                thus (abs(b.n)/Bq) to_power q
                =(0/Bq) to_power q by A69
                .=0 by A4,POWER:def 2
                .=0 /Bq to_power q
                .=0 to_power q/Bq to_power q by A4,POWER:def 2
                .=abs(b.n) to_power q/Bq to_power q by A69;
                end;
                case A70: abs(b.n) <> 0;
                abs(b.n) > 0 by A70,COMPLEX1:132;
                hence (abs(b.n)/Bq) to_power q
                =abs(b.n) to_power q/Bq to_power q by A48,POWER:36;
                end;
             end;
             hence thesis;
            end;
        A71: (y.n) to_power q / q
            =(abs(b.n) to_power q/Bq to_power q ) /q by A67,A68
            .=( bq.n / Bq to_power q) /q by A10
            .=( bq.n / (B to_power ((1/q)*q))) /q
              by A47,POWER:38
            .= ( bq.n / (B to_power 1 )) /q by A7,XCMPLX_1:88
            .= ( bq.n / B ) /q by POWER:30
            .= (1/q)*(bq.n / B) by XCMPLX_1:100
            .= (1/q)*((1/B)*bq.n) by XCMPLX_1:100
            .= (1/q)*(((1/B)(#)bq).n) by SEQ_1:13
            .=((1/q)(#)((1/B)(#)bq)).n by SEQ_1:13;
             (x.n) to_power p / p + (y.n) to_power q / q
            =((1/p)(#)((1/A)(#)ap)).n + ((1/q)(#)((1/B)(#)bq)).n
           by A66,A71;
         hence (x.n) to_power p / p + (y.n) to_power q / q
            =(((1/p)(#)((1/A)(#)ap)) + ((1/q)(#)((1/B)(#)bq))).n
           by SEQ_1:11;
     end;
     A72: for n be Nat holds
           ((1/(Ap*Bq)) (#) ab).n
          <= (((1/p)(#)((1/A)(#)ap)) + ((1/q)(#)((1/B)(#)bq))).n
           proof
           let n be Nat;
           A73: ((1/(Ap*Bq)) (#) ab).n=x.n * y.n by A56;
           A74: x.n * y.n <= (x.n) to_power p / p + (y.n) to_power q / q
               by A53;
           A75: (((1/p)(#)((1/A)(#)ap)) + ((1/q)(#)((1/B)(#)bq))).n
           = (x.n) to_power p / p + (y.n) to_power q / q by A59;
           thus thesis by A73,A74,A75;
          end;
    A76:Partial_Sums( (1/(Ap*Bq)) (#) ab).n
        <=Partial_Sums(((1/p)(#)((1/A)(#)ap)) + ((1/q)(#)((1/B)(#)bq))).n
     by A72,SERIES_1:17;
    A77: Partial_Sums( (1/(Ap*Bq)) (#) ab).n
          = ((1/(Ap*Bq)) (#)  Partial_Sums(ab)).n by SERIES_1:12
          .= (1/(Ap*Bq)) * Partial_Sums(ab).n by SEQ_1:13;
    A78: Partial_Sums(((1/p)(#)((1/A)(#)ap)) + ((1/q)(#)((1/B)(#)bq))).n
    = (Partial_Sums(((1/p)(#)((1/A)(#)ap)))
    +   Partial_Sums(((1/q)(#)((1/B)(#)bq)))).n by SERIES_1:8
   .=Partial_Sums((1/p)(#)((1/A)(#)ap)).n
   + Partial_Sums((1/q)(#)((1/B)(#)bq)).n by SEQ_1:11
  .=((1/p)(#)Partial_Sums((1/A)(#)ap)).n
   + Partial_Sums((1/q)(#)((1/B)(#)bq)).n by SERIES_1:12
   .=(1/p)*(Partial_Sums((1/A)(#)ap).n)
   + Partial_Sums((1/q)(#)((1/B)(#)bq)).n by SEQ_1:13
  .=(1/p)*(((1/A)(#)Partial_Sums(ap)).n)
   + Partial_Sums((1/q)(#)((1/B)(#)bq)).n by SERIES_1:12
  .=(1/p)*((1/A)*Partial_Sums(ap).n)
   + Partial_Sums((1/q)(#)((1/B)(#)bq)).n by SEQ_1:13
 .=(1/p)*((1/A)*Partial_Sums(ap).n)
   + ((1/q)(#)Partial_Sums((1/B)(#)bq)).n by SERIES_1:12
.=(1/p)*((1/A)*Partial_Sums(ap).n)
   + (1/q)*(Partial_Sums((1/B)(#)bq).n) by SEQ_1:13
.=(1/p)*((1/A)*Partial_Sums(ap).n)
   + (1/q)*(((1/B)(#)Partial_Sums(bq)).n) by SERIES_1:12
.=(1/p)*((1/A)*Partial_Sums(ap).n)
   +(1/q)*((1/B)*Partial_Sums(bq).n) by SEQ_1:13
.=(1/p)*1 +(1/q)*((1/B)*B) by A45,XCMPLX_1:88
.=(1/p)*1 +(1/q)*(1) by A47,XCMPLX_1:88
.=1 by A2;
   A79: Ap*Bq > 0 by A46,A48,REAL_2:122;
    (1/(Ap*Bq)) * Partial_Sums(ab).n <= 1 by A76,A77,A78;
    then Partial_Sums(ab).n/(Ap*Bq) <= 1 by XCMPLX_1:100;
    hence Partial_Sums(ab).n
        <= ( (Partial_Sums(ap).n) to_power (1/p) )
          * ( (Partial_Sums(bq).n) to_power (1/q) ) by A79,REAL_2:118;
       end;
  end;
hence thesis;
end;

theorem Th7:
for p be Real st 1 < p
for a,b,ap,bp,ab be Real_Sequence
  st ( for n be Nat holds
              ap.n=abs(a.n) to_power p
           &  bp.n=abs(b.n) to_power p
           & ab.n=abs(a.n+b.n) to_power p ) holds
  for n be Nat holds
     (Partial_Sums(ab).n) to_power (1/p)
     <= ( Partial_Sums(ap).n) to_power (1/p)
      + ( Partial_Sums(bp).n) to_power (1/p)
proof
let p be Real such that
   A1:   1 < p;
   let  a,b,ap,bp,ab be Real_Sequence such that
   A2: for n be Nat holds
              ap.n=abs(a.n) to_power p
           &  bp.n=abs(b.n) to_power p
           &  ab.n=abs(a.n+ b.n) to_power p;
    reconsider pp=1/p as Real;
    reconsider qq=1-pp as Real;
    reconsider q=1/qq as Real;
    1/p < 1 by A1,REAL_2:142; then
    1-1 < 1-pp by REAL_1:92; then
  A3:  0 < qq;
  A4:  qq=1/q by XCMPLX_1:56;
  A5:  0 < q by A3,A4,REAL_2:150;
  A6:  0 < p by A1;
  A7: p <> 0 by A6;
  A8: q <> 0 by A5;
  A9: 1/p > 0 by A6,REAL_2:127;
  1-1 < p-1 by A1,REAL_1:92; then
  A10: 0 < p-1;
  A11:  1/p + 1/q= 1 by A4;
  A12: p <> 0 & q <> 0 by A7,A8;
  A13: p*q <> 0 by A12,XCMPLX_1:6;
  (1/p + 1/q)*(p*q) = 1*(p*q) by A11;
  then ((1*q+1*p)/(p*q))*(p*q) =1*(p*q) by A12,XCMPLX_1:117; then
  A14:q+p=p*q by A13,XCMPLX_1:88;
  A15:(p-1)*q = q+p-q by A14 .=p;
deffunc F(Nat)=abs(a.$1+ b.$1) to_power (p-1);
 consider  x be Real_Sequence such that
A16: for n be Nat holds x.n=F(n) from SEQ_1:sch 1;
A17:  for n be Nat holds 0 <= x.n
   proof
       let n be Nat;
         A18: 0 <= abs(a.n+ b.n) by COMPLEX1:132;
         A19: x.n=abs(a.n+ b.n) to_power (p-1) by A16;
         A20: abs(a.n+ b.n) = 0 or abs(a.n+ b.n) > 0 by A18;
         now per cases by A20;
           case A21: abs(a.n+ b.n) = 0;
           thus 0 <= x.n by A10,A19,A21,POWER:def 2;
           end;
           case A22: abs(a.n+ b.n) > 0;
           thus 0 <= x.n by A19,A22,POWER:39;
           end;
         end;
         hence thesis;
     end;
A23:  for n be Nat holds ab.n=x.n*abs(a.n+b.n)
      proof
      let n be Nat;
         now per cases;
               case A24: abs(a.n+b.n)=0;
                  thus ab.n=abs(a.n+ b.n) to_power p by A2
                        .= 0 by A6,A24,POWER:def 2
                        .= x.n * abs(a.n+b.n) by A24;
               end;
               case A25: abs(a.n+b.n) <> 0;
                   0 <= abs(a.n+b.n) by COMPLEX1:132; then
                   A26: 0 < abs(a.n+b.n) by A25;
                   thus ab.n
                   =abs(a.n+ b.n) to_power ((p-1)+1) by A2
                  .= abs(a.n+ b.n) to_power (p-1)
                  * abs(a.n+ b.n) to_power 1 by A26,POWER:32
                  .=(abs(a.n+ b.n)  to_power (p-1))
                    * abs(a.n+ b.n) by POWER:30
                  .= x.n * abs(a.n+b.n) by A16;
               end;
         end;
         hence thesis;
       end;
A27:  for n be Nat holds ab.n <= ( x(#)abs(a)+x(#)abs(b) ).n
 proof
  let n be Nat;
  A28: 0 <= x.n by A17;
  abs(a.n+b.n) <= abs(a.n)+abs(b.n) by COMPLEX1:142; then
  A29: x.n * abs(a.n+b.n)
    <= x.n * (abs(a.n)+abs(b.n)) by A28,XREAL_1:66;
  A30: ab.n=x.n*abs(a.n+b.n) by A23;
   x.n * (abs(a.n)+abs(b.n))
      = x.n * (abs(a.n))+x.n * (abs(b.n))
     .= x.n * (abs(a).n)+x.n * (abs(b.n)) by SEQ_1:16
     .= x.n * (abs(a).n)+x.n * (abs(b).n) by SEQ_1:16
     .= (x(#)abs(a)).n +x.n * (abs(b).n) by SEQ_1:12
     .= (x(#)abs(a)).n +(x(#)abs(b)).n by SEQ_1:12
     .= (x(#)abs(a) +x(#)abs(b)).n by SEQ_1:11;
  hence thesis by A29,A30;
  end;
A31: for n be Nat holds (x(#)abs(a)).n= abs(a.n*x.n)
proof
let n be Nat;
0 <= x.n by A17; then
A32: abs(x.n)=x.n by ABSVALUE:def 1;
thus (x(#)abs(a)).n =x.n * abs(a).n by SEQ_1:12
      .=x.n * abs(a.n) by SEQ_1:16
      .=abs(a.n*x.n) by A32,COMPLEX1:151;
end;
A33: for n be Nat holds (x(#)abs(b)).n= abs(b.n*x.n)
proof
let n be Nat;
0 <= x.n by A17; then
A34: abs(x.n)=x.n by ABSVALUE:def 1;
thus (x(#)abs(b)).n =x.n * abs(b).n by SEQ_1:12
      .=x.n * abs(b.n) by SEQ_1:16
      .=abs(b.n*x.n) by A34,COMPLEX1:151;
end;
A35: for n be Nat holds abs(x.n) to_power q = ab.n
 proof
 let n be Nat;
 0 <= x.n by A17;
then abs(x.n)=x.n by ABSVALUE:def 1;
then
A36: abs(x.n) to_power q = (abs(a.n+b.n) to_power (p-1)) to_power q by A16;
       now per cases;
                 case A37: abs(a.n+b.n)=0;
                  A38: ab.n = 0 to_power p by A2,A37
                           .= 0 by A6,POWER:def 2;
                  A39: abs(x.n) to_power q
                           =(abs(a.n+b.n) to_power (p-1)) to_power q by A36
                          .=(0 to_power (p-1)) to_power q by A37
                          .=0 to_power q by A10,POWER:def 2
                          .=0 by A5,POWER:def 2;
                   thus abs(x.n) to_power q = ab.n by A38,A39;
                   end;
                   case A40: abs(a.n+b.n) <> 0;
                     A41: 0 < abs(a.n+b.n) by A40,COMPLEX1:132;
                    thus abs(x.n) to_power q
                           =(abs(a.n+b.n) to_power (p-1)) to_power q by A36
                          .= abs(a.n+b.n)  to_power ((p-1)*q) by A41,POWER:38
                          .=ab.n by A2,A15;
                   end;
         end;
 hence thesis;
 end;
A42:  for n be Nat holds
          Partial_Sums(x(#)abs(a)).n
          <= ( (Partial_Sums(ap).n) to_power (1/p) )
           * ( (Partial_Sums(ab).n) to_power (1/q) )
 by A1,A2,A11,A31,A35,Th6;
A43:  for n be Nat holds
    Partial_Sums(x(#)abs(b)).n <= ( (Partial_Sums(bp).n) to_power (1/p) )
    * ( (Partial_Sums(ab).n) to_power (1/q) ) by A1,A2,A11,A33,A35,Th6;
A44: for n be Nat holds
    Partial_Sums(ab).n <= ( ((Partial_Sums(ap).n) to_power (1/p)) +
         ((Partial_Sums(bp).n) to_power (1/p)))
       * ( (Partial_Sums(ab).n) to_power (1/q) )
   proof
   let n be Nat;
    A45:  Partial_Sums(ab).n <= Partial_Sums(x(#)abs(a)+x(#)abs(b)).n
    by A27,SERIES_1:17;
    A46:  (Partial_Sums(x(#)abs(a)+x(#)abs(b))).n
         =(Partial_Sums(x(#)abs(a))+Partial_Sums(x(#)abs(b))).n
       by SERIES_1:8
         .=Partial_Sums(x(#)abs(a)).n+Partial_Sums(x(#)abs(b)).n by SEQ_1:11;
    A47: Partial_Sums(x(#)abs(a)).n
           <= ( (Partial_Sums(ap).n) to_power (1/p) )
            * ( (Partial_Sums(ab).n) to_power (1/q) ) by A42;
    A48: Partial_Sums(x(#)abs(b)).n
          <= ( (Partial_Sums(bp).n) to_power (1/p) )
           * ( (Partial_Sums(ab).n) to_power (1/q) ) by A43;
          Partial_Sums(x(#)abs(a)).n + Partial_Sums(x(#)abs(b)).n
         <= ( (Partial_Sums(ap).n) to_power (1/p) )
            * ( (Partial_Sums(ab).n) to_power (1/q) )
         +  ( (Partial_Sums(bp).n) to_power (1/p) )
           * ( (Partial_Sums(ab).n) to_power (1/q) ) by A47,A48,XREAL_1:9;
    hence thesis by A45,A46,XXREAL_0:2;
   end;
A49:  for n be Nat holds 0 <= ap.n
   proof
       let n be Nat;
         A50: 0 <= abs(a.n) by COMPLEX1:132;
         A51: ap.n=abs(a.n) to_power p by A2;
         A52: abs(a.n) = 0 or abs(a.n) > 0 by A50;
         now per cases by A52;
           case abs(a.n) = 0;
           hence 0 <= ap.n by A6,A51,POWER:def 2;
           end;
           case abs(a.n) > 0;
           hence 0 <= ap.n by A51,POWER:39;
           end;
         end;
         hence thesis;
     end;
A53:  for n be Nat holds 0 <= bp.n
   proof
       let n be Nat;
         A54:  0 <= abs(b.n) by COMPLEX1:132;
         A55:  bp.n=abs(b.n) to_power p by A2;
         A56:  abs(b.n) = 0 or abs(b.n) > 0 by A54;
         now per cases by A56;
           case abs(b.n) = 0;
           hence 0 <= bp.n by A6,A55,POWER:def 2;
           end;
           case abs(b.n) > 0;
           hence 0 <= bp.n by A55,POWER:39;
           end;
         end;
         hence thesis;
     end;
A57: for n be Nat holds 0 <= Partial_Sums(ap).n by A49,Lm2;
A58: for n be Nat holds 0 <= Partial_Sums(bp).n by A53,Lm2;
A59:  for n be Nat holds 0 <= ab.n
   proof
       let n be Nat;
         A60:  0 <= abs(a.n+b.n) by COMPLEX1:132;
         A61:  ab.n=abs(a.n+b.n) to_power p by A2;
         0 to_power p <= abs(a.n+b.n) to_power p by A6,A60,Th3;
         hence thesis by A6,A61,POWER:def 2;
     end;
A62: for n be Nat holds 0 <= Partial_Sums(ab).n by A59,Lm2;
now let n be Nat;
set A=Partial_Sums(ab).n;
set C= ( ((Partial_Sums(ap).n) to_power (1/p)) +
         ((Partial_Sums(bp).n) to_power (1/p)));
set D= ( A to_power (1/q) );
A63: 0 <= A by A62;
A64:  A <= C*D by A44;
 0 <= Partial_Sums(ap).n by A57; then
 0 to_power (1/p) <= (Partial_Sums(ap).n) to_power (1/p)
         by A9,Th3; then
 A65: 0 <= (Partial_Sums(ap).n) to_power (1/p)
         by A9,POWER:def 2;
 0 <= Partial_Sums(bp).n by A58;
 then 0 to_power (1/p) <= (Partial_Sums(bp).n) to_power (1/p)
         by A9,Th3; then
 A66: 0 <= (Partial_Sums(bp).n) to_power (1/p)
         by A9,POWER:def 2;
 0+0 <= (Partial_Sums(ap).n) to_power (1/p)
         + (Partial_Sums(bp).n) to_power (1/p)
        by A65,A66,XREAL_1:9;
 then
  A67: 0 <= C;
  now per cases;
     case A=0; then
       A to_power (1/p) = 0 to_power (1/p)
       .= 0 by A9,POWER:def 2;
     hence A to_power (1/p) <= C by A67;
     end;
     case A<>0; then
     A68: 0 < A by A63; then
     A69: 0 < D by POWER:39;
     set B=1/D;
     A70: 0 < B by A69,REAL_2:127;
     A71: A *B <=C* D *B by A64,A70,XREAL_1:66;
     A72: C*D*B = C* (D *B)
      .= C*1 by A69,XCMPLX_1:88
     .= C;
     A *B =A/D by XCMPLX_1:100
         .=(A to_power 1) / D by POWER:30
        .=A to_power (1-(1/q)) by A68,POWER:34
        .=A to_power (1/p+0) by A11
        .= A to_power (1/p);
        hence A to_power (1/p) <= (Partial_Sums(ap).n) to_power (1/p)
           + (Partial_Sums(bp).n) to_power (1/p) by A71,A72;
     end;
  end;
hence (Partial_Sums(ab).n) to_power (1/p) <=
  (Partial_Sums(ap).n) to_power (1/p) + (Partial_Sums(bp).n) to_power (1/p);
end;
hence thesis;
end;

theorem Th8:
for a,b be Real_Sequence st
   ( (for n be Nat holds a.n <= b.n )
   & b is convergent & a is non-decreasing ) holds
     a is convergent & lim a <= lim b
proof
let a,b be Real_Sequence such that
  A1:for n be Nat holds a.n <= b.n and
  A2: b is convergent and
  A3: a is non-decreasing;
 b is bounded by A2,SEQ_2:27; then
 A4: b is bounded_above by SEQ_2:def 5;
 a is bounded_above
 proof
   consider r be real number such that
     A5: for n be Nat holds b.n < r by A4,SEQ_2:def 3;
   now let n be Nat;
     A6: b.n < r by A5;
     a.n <=b.n by A1; then
     a.n <= r by A6,XXREAL_0:2; then
     a.n+0 < r+1 by XREAL_1:10;
     hence a.n < r+1;
   end;
   hence thesis by SEQ_2:def 3;
end;
 hence a is convergent by A3,SEQ_4:51;
 hence lim a <=lim b by A1,A2,SEQ_2:32;
end;

theorem Th9:
for a,b,c be Real_Sequence st
   ( (for n be Nat holds a.n <= b.n+c.n )
   & b is convergent & c is convergent & a is non-decreasing ) holds
     a is convergent & lim a <= lim b + lim c
     proof
let a,b,c be Real_Sequence such that
  A1:for n be Nat holds a.n <= b.n+c.n and
  A2: b is convergent and
  A3: c is convergent and
  A4: a is non-decreasing;
  A5: b+c is convergent by A2,A3,SEQ_2:19;
  A6: now let n be Nat;
  a.n <=b.n + c.n by A1;
  hence a.n <= (b+c).n by SEQ_1:11;
  end;
  A7: lim (b+c) = lim b + lim c by A2,A3,SEQ_2:20;
 thus a is convergent by A4,A5,A6,Th8;
 thus lim a <=lim b+lim c by A4,A5,A6,A7,Th8;
end;

theorem Th10:
for p be Real st 0 < p
for a,ap be Real_Sequence st
   a is convergent
  & (for n be Nat holds 0 <=a.n )
  & (for n be Nat holds ap.n=(a.n) to_power p) holds
   ap is convergent & lim ap = (lim a) to_power p
proof
let p be Real such that
  A1: 0 < p;
let a,ap be Real_Sequence such that
  A2: a is convergent and
  A3:for n be Nat holds 0 <=a.n and
  A4: for n be Nat holds ap.n=(a.n) to_power p;
 now per cases;
  case A5: lim a =0;
     now per cases;
        case A6: ex n be Nat st for m be Nat
          st n<=m holds a.m=0;
          consider N be Nat such that
          A7:   for m be Nat st N<=m holds a.m=0 by A6;
          A8:   for n be Nat holds (a^\N).n=0
          proof
             let n be Nat;
             N<=n+N by NAT_1:37; then a.(n+N)=0 by A7;
             hence (a^\N).n=0 by SEQM_3:def 9;
         end;
         A9: now let e be real number such that A10: e>0;
              take n=0; let m be Nat such that n<=m;
              A11: (ap^\N).m= ap.(m+N) by SEQM_3:def 9
                               .= (a.(m+N))  to_power p by A4
                     .= ((a^\N).m) to_power p by SEQM_3:def 9
                     .= 0 to_power p by A8
                     .= 0 by A1,POWER:def 2;
              A12: (lim a) to_power p = 0 to_power p by A5
                .= 0 by A1,POWER:def 2;
             abs((ap^\N).m-((lim a) to_power p))
              =abs(0- 0 ) by A11,A12
             .=0 by ABSVALUE:7;
            hence abs((ap^\N).m-((lim a) to_power p)) < e by A10;
        end;
       then (ap^\N) is convergent by SEQ_2:def 6;
       then ap is convergent & ((lim a) to_power p)
        =lim(ap^\N) by A9,SEQ_2:def 7,SEQ_4:35;
        hence ap is convergent & lim ap = (lim a)  to_power p
       by SEQ_4:33;
    end;
    case A13: for n be Nat ex m  be Nat st n<=m & a.m<>0;
        consider m1 be Nat such that
        A14: 0<=m1 & a.m1 <>0 by A13;
        defpred P[Nat] means a.$1 <> 0;
        A15: ex m be Nat st P[m] by A14;
        consider M be Element of NAT such that
        A16: P[M] & for n be Nat st P[n] holds M<=n
        from NAT_1:sch 5(A15);
        A17: now let n be Nat;
             consider m be Nat such that
             A18: n+1<=m & a.m <>0 by A13;
           take m; thus n<m & a.m <>0 by A18,NAT_1:38;
       end;
       defpred P[Nat,set,set] means
        for n,m be Nat st $2=n & $3=m holds
          n<m & a.m <>0 & for k be Nat st n<k & a.k <>0 holds m<=k;
      A19: for n be Nat for x be Element of NAT
      ex y be Element of NAT st P[n,x,y]
         proof let n be Nat; let x be Element of NAT;
            defpred P[Nat] means x<$1 & a.$1 <>0;
            A20: ex m be Nat st P[m] by A17;
            consider l be Nat such that A21: P[l] &
            for k be Nat st P[k] holds l<=k from NAT_1:sch 5(A20);
            take l; thus thesis by A21;
        end;
        consider F be Function of NAT,NAT such that
        A22: F.0=M & for n be Element of NAT holds P[n,F.n,F.(n+1)]
         from RECDEF_1:sch 2(A19);
        A23: dom F=NAT & rng F c= NAT by FUNCT_2:def 1,RELSET_1:12;
        then rng F c= REAL by XBOOLE_1:1;
       then reconsider F as Real_Sequence by A23,FUNCT_2:def 1,RELSET_1:11;
       A24: now let n be Nat;
             F.n in rng F by A23,FUNCT_1:def 5;
            hence F.n is Nat by A23;
        end;
        now let n be Nat;
           F.n is Nat & F.(n+1) is Nat by A24;
           hence F.n<F.(n+1) by A22;
        end;
        then reconsider F as increasing Seq_of_Nat
        by A23,SEQM_3:def 8,def 11;
       A25: for n be Nat st a.n <> 0 ex m be Nat st F.m=n
         proof
            defpred P[Nat] means a.$1 <>0 & for m be Nat holds F.m<>$1;
            assume
            A26: ex n be Nat st P[n];
            consider M1 be Nat such that A27: P[M1] &
            for n be Nat st P[n] holds M1<=n from NAT_1:sch 5(A26);
            defpred P[Nat] means $1<M1 & a.$1 <> 0
            & ex m be Nat st F.m=$1;
             A28: ex n be Nat st P[n]
              proof
                take M;
                 A29: M<=M1 by A16,A27;
                 M <> M1 by A22,A27;
                hence M<M1 by A29,REAL_1:def 5;
                thus a.M <>0 by A16;
                take 0; thus thesis by A22;
              end;
            A30: for n be Nat st P[n] holds n<=M1;
            consider MX be Nat such that A31: P[MX] &
           for n be Nat st P[n] holds n<=MX from NAT_1:sch 6(A30,A28);
           A32: for k be Nat st MX<k & k<M1 holds a.k=0
              proof
              given k be Nat such that A33: MX<k & k<M1 & a.k <> 0;
              now per cases;
                case ex m be Nat st F.m=k;
                  hence contradiction by A31,A33;
                end;
                case for m be Nat holds F.m<>k;
                  hence contradiction by A27,A33;
                end;
              end;
              hence contradiction;
            end;
          consider m be Nat such that A34: F.m=MX by A31;
           A35: MX<F.(m+1) & a.(F.(m+1))<>0 &
              for k be Nat st MX<k & a.k<>0 holds F.(m+1)<=k by A22,A34;
           A36: F.(m+1)<=M1 by A22,A27,A31,A34;
           now assume F.(m+1)<>M1; then F.(m+1)<M1 by A36,REAL_1:def 5;
               hence contradiction by A32,A35;
            end;
         hence contradiction by A27;
        end;
     A37: a*F is subsequence of a by SEQM_3:def 10;
     then A38: a*F is convergent by A2,SEQ_4:29;
     A39: lim (a*F)=0 by A2,A5,A37,SEQ_4:30;
       A40: (lim a) to_power p = 0 to_power p by A5
      .=0 by A1,POWER:def 2;
       now let e be real number;
           assume A41: 0<e; then
                  0 < (e to_power (1/p) ) by POWER:39;
              then consider n be Nat such that
              A42: for m be Nat st n<=m holds abs((a*F).m-0)
              < (e to_power (1/p) )
                  by A38,A39,SEQ_2:def 7;
               take k=F.n; let m be Nat such that A43: k<=m;
             now per cases;
              case A44: a.m=0;
                     ap.m= (a.m) to_power p by A4
                   .= 0 to_power p by A44
                   .= 0 by A1,POWER:def 2;
                then abs(ap.m-((lim a) to_power p)) =abs(0-0) by A40
                .=0 by ABSVALUE:7;
              hence abs(ap.m-((lim a) to_power p))<e by A41;
               end;
             case A45:  a.m<>0;
               A46: a.m > 0 by A3,A45;
               then consider l be Nat such that
          A47: m=F.l by A25;
               n<=l by A43,A47,SEQM_3:7;
               then abs((a*F).l-0)< (e to_power (1/p) ) by A42;
               then abs(a.(F.l))< (e to_power (1/p) ) by SEQM_3:31; then
               A48: abs(a.m)< (e to_power (1/p) ) by A47;
               abs(a.m) > 0 by A45,COMPLEX1:133; then
               abs(a.m) to_power p < (e to_power (1/p) ) to_power p
              by A1,A48,POWER:42; then
               abs(a.m) to_power p < e to_power ( (1/p) *p ) by A41,POWER:38;
               then abs(a.m) to_power p < e to_power 1
               by A1,XCMPLX_1:107;
               then abs(a.m) to_power p < e by POWER:30; then
               A49: (a.m) to_power p < e  by A46,ABSVALUE:def 1;
               A50: (a.m) to_power p = ap.m by A4;
               A51: 0 < ap.m by A46,A50,POWER:39;
               ap.m < e by A49,A50;
               then abs(ap.m) < e by A51,ABSVALUE:def 1;
               hence abs(ap.m -((lim a) to_power p) ) < e by A40;
             end;
           end;
          hence abs(ap.m -((lim a) to_power p) ) < e;
      end;
      then
       A52: for e be real number st e > 0 holds
        ex k be Nat st for m be Nat st k <=m holds
         abs(ap.m -((lim a) to_power p) ) < e;
       hence ap is convergent by SEQ_2:def 6;
       hence lim ap = (lim a) to_power p by A52,SEQ_2:def 7;
     end;
   end;
       hence ap is convergent & lim ap = (lim a)  to_power p;
  end;
 case A53: lim a <>0;
      0 <= lim a by A2,A3,SEQ_2:31; then
      A54: lim a > 0 by A53;
            ex k be Nat st rng (a^\k) c= dom ( #R p)
      proof
         set e0=(lim a );
         A55: e0/2 > 0 by A54,SEQ_2:3;
         consider k be Nat such that
           A56: for m be Nat st k<=m holds abs(a.m-e0)<e0/2
          by A2,A55,SEQ_2:def 7;
         take k;
         A57: now let m be Nat;
               k<= k+m by NAT_1:37;
               then abs(a.(k+m)-e0)<e0/2 by A56;
               then -(e0/2) <= a.(k+m)-e0 by ABSVALUE:12;
               then -(e0/2)+e0 <= a.(k+m)-e0+e0 by XREAL_1:9;
                then 0 < a.(k+m) by A55;
                hence 0 < (a^\k).m by SEQM_3:def 9;
         end;
         now let x be set such that
           A58: x in rng (a^\k);
               consider n be Nat such that
          A59: x = (a^\k).n by A58,RFUNCT_2:9;
               0 < (a^\k).n by A57;
               then (a^\k).n in {g where g is Real : 0<g}; then
               (a^\k).n in right_open_halfline(0) by LIMFUNC1:def 3;
               then (a^\k).n in dom ( #R p) by TAYLOR_1:def 3;
              hence x in dom ( #R p) by A59;
        end;
        hence thesis by TARSKI:def 3;
      end; then
      consider k be Nat such that
      A60:  rng (a^\k) c= dom ( #R p);
      A61:  a^\k is convergent & lim (a^\k) = lim a by A2,SEQ_4:33;
      A62:  lim (a^\k) > 0 by A54,A61;
           ( #R p) is_differentiable_in lim (a^\k) by A62,TAYLOR_1:21;
      then ( #R p) is_continuous_in lim (a^\k) by FDIFF_1:32; then
      A63:( #R p)*(a^\k) is convergent & ( #R p).(lim (a^\k))
        = lim ( ( #R p)*(a^\k)) by A60,A61,FCONT_1:def 1;
      A64:  ( #R p)*(a^\k) = ap^\k
        proof
          now let x be set such that
          A65:  x in NAT;
          reconsider n=x as Nat by A65;
              (a^\k).n in rng (a^\k) by RFUNCT_2:10;
              then (a^\k).n in dom ( #R p) by A60; then
             A66: (a^\k).n in right_open_halfline(0)
            by TAYLOR_1:def 3;
             then a.(k+n) in right_open_halfline(0) by SEQM_3:def 9;
              then a.(k+n) in {g where g is Real : 0<g}
             by LIMFUNC1:def 3;
              then consider g be Real such that
             A67: a.(k+n) = g & g > 0;
             A68: a.(k+n) > 0 by A67;
            thus (( #R p)*(a^\k)).x = ( #R p).((a^\k).n) by A60,RFUNCT_2:21
            .=((a^\k).n) #R p by A66,TAYLOR_1:def 3
            .=(a.(k+n)) #R p by SEQM_3:def 9
            .=(a.(k+n)) to_power p by A68,POWER:def 2
            .=ap.(k+n) by A4
            .=(ap^\k).x by SEQM_3:def 9;
       end;
       hence thesis by SEQ_1:8;
        end;
      A69: lim a in right_open_halfline(0)
        proof
          lim a in {g where g is Real : 0<g} by A54;
          hence thesis by LIMFUNC1:def 3;
        end;
      A70: ( #R p).(lim (a^\k)) =( #R p).(lim a) by A61
                      .=(lim a) #R p by A69,TAYLOR_1:def 3
                      .=(lim a) to_power p by A54,POWER:def 2;
      ap^\k is convergent & lim (ap^\k)=(lim a) to_power p
     by A63,A64,A70;
      hence ap is convergent & lim ap = (lim a) to_power p
    by SEQ_4:35,36;
   end;
end;
hence ap is convergent & lim ap = (lim a) to_power p;
end;

theorem
for p be Real st 0 < p
for a,ap be Real_Sequence st a is summable
  & (for n be Nat holds 0 <=a.n )
  & (for n be Nat holds ap.n=(Partial_Sums(a).n) to_power p) holds
   ap is convergent
   & lim ap = Sum(a) to_power p
   & ap is non-decreasing
   & (for n be Nat holds ap.n <= Sum(a) to_power p )
proof
let p be Real such that
  A1: 0 < p;
let a,ap be Real_Sequence such that
  A2:  a is summable and
  A3:for n be Nat holds 0 <=a.n and
  A4: for n be Nat holds ap.n=(Partial_Sums(a).n) to_power p;
A5:   Partial_Sums(a) is convergent  by A2,SERIES_1:def 2;
A6:   lim  Partial_Sums(a) = Sum(a) by SERIES_1:def 3;
A7:   for n be Nat holds 0 <= Partial_Sums(a).n by A3,Lm2;
A8:   ap is convergent & lim ap = (lim Partial_Sums(a))  to_power p
    by A1,A4,A5,A7,Th10;
thus
A9:  ap is convergent & lim ap = (Sum(a))  to_power p by A6,A8;
A10:  Partial_Sums(a) is non-decreasing by A3,SERIES_1:19;
now let n, m be Nat such that
    A11: n <=m;
    A12: ap.n = (Partial_Sums(a).n) to_power p by A4;
    A13: ap.m = (Partial_Sums(a).m) to_power p by A4;
    A14: Partial_Sums(a).n <= Partial_Sums(a).m by A10,A11,SEQM_3:12;
         0 <= Partial_Sums(a).n by A7;
    then (Partial_Sums(a).n) to_power p <= (Partial_Sums(a).m) to_power p
   by A1,A14,Th3;
    hence ap.n <= ap.m by A12,A13;
end;
hence
A15: ap is non-decreasing by SEQM_3:12;
    ap is bounded by A8,SEQ_2:27;
then ap is bounded_above by SEQ_2:def 5;
then for n be Nat holds ap.n<=lim ap by A15,SEQ_4:54;
hence thesis by A9;
end;

theorem
for p, q be Real st 1 < p & 1/p + 1/q = 1
for a,b,ap,bq,ab be Real_Sequence
  st  (( for n be Nat holds
              ap.n=abs(a.n) to_power p
           & bq.n=abs(b.n) to_power q
           & ab.n=abs(a.n* b.n)  )
       & ap is summable & bq is summable ) holds
    ab is summable &
    Sum ab <= ( Sum(ap) to_power (1/p) ) * ( Sum(bq) to_power (1/q) )
proof
 let p,q be Real such that
  A1: 1 < p and
  A2: 1/p + 1/q = 1;
    reconsider pp=1/p, qq=1/q as Real;
    A3: qq = 1 -pp by A2;
    1/p < 1 by A1,REAL_2:142; then
    1-1 < 1-pp by REAL_1:92; then
    A4:  0 < q by A3,REAL_2:150;
    A5:  0 < p by A1;
    A6: 1/p > 0 by A5,REAL_2:127;
    A7: 1/q > 0 by A4,REAL_2:127;
   let  a,b,ap,bq,ab be Real_Sequence such that
   A8: for n be Nat holds ap.n=abs(a.n) to_power p
           & bq.n=abs(b.n) to_power q
           & ab.n=abs(a.n* b.n) and
   A9: ap is summable and
   A10: bq is summable;
A11:   for n be Nat holds Partial_Sums(ab).n
     <= ( (Partial_Sums(ap).n) to_power (1/p) )
      * ( (Partial_Sums(bq).n) to_power (1/q) ) by A1,A2,A8,Th6;
deffunc F(Nat)=(Partial_Sums(ap).$1) to_power (1/p);
 consider x be Real_Sequence such that
A12: for n be Nat holds x.n=F(n) from SEQ_1:sch 1;
deffunc G(Nat)=(Partial_Sums(bq).$1) to_power (1/q);
 consider y be Real_Sequence such that
A13: for n be Nat holds y.n=G(n) from SEQ_1:sch 1;
A14:  Partial_Sums(ap) is convergent by A9,SERIES_1:def 2;
A15:  Sum ap = lim Partial_Sums(ap) by SERIES_1:def 3;
A16:  for n be Nat holds 0 <= ap.n
   proof
       let n be Nat;
         A17:  0 <= abs(a.n) by COMPLEX1:132;
         A18:  ap.n=abs(a.n) to_power p by A8;
         A19:  abs(a.n) = 0 or abs(a.n) > 0 by A17;
         now per cases by A19;
           case abs(a.n) = 0;
           hence 0 <= ap.n by A5,A18,POWER:def 2;
           end;
           case abs(a.n) > 0;
           hence 0 <= ap.n by A18,POWER:39;
           end;
         end;
         hence thesis;
     end;
A20: for n be Nat holds 0 <= Partial_Sums(ap).n by A16,Lm2;
A21: x is convergent & lim x= Sum(ap) to_power (1/p)
by A6,A12,A14,A15,A20,Th10;
A22:  Partial_Sums(bq) is convergent by A10,SERIES_1:def 2;
A23:  Sum(bq) = lim Partial_Sums(bq) by SERIES_1:def 3;
A24:  for n be Nat holds 0 <= bq.n
   proof
       let n be Nat;
         A25:  0 <= abs(b.n) by COMPLEX1:132;
         A26:  bq.n=abs(b.n) to_power q by A8;
         A27:  abs(b.n) = 0 or abs(b.n) > 0 by A25;
         now per cases by A27;
           case abs(b.n) = 0;
           hence 0 <= bq.n by A4,A26,POWER:def 2;
           end;
           case abs(b.n) > 0;
           hence 0 <= bq.n by A26,POWER:39;
           end;
         end;
         hence thesis;
  end;
A28: for n be Nat holds 0 <= Partial_Sums(bq).n by A24,Lm2;
A29: y is convergent & lim y= Sum(bq) to_power (1/q)
by A7,A13,A22,A23,A28,Th10;
A30: x(#)y is convergent
& lim (x(#)y) = (Sum(ap) to_power (1/p))* (Sum(bq) to_power (1/q))
by A21,A29,SEQ_2:28,29;
A31: for n be Nat holds Partial_Sums(ab).n <=(x(#)y).n
proof
 let n be Nat;
    A32: Partial_Sums(ab).n <=
         ( (Partial_Sums(ap).n) to_power (1/p) )
      * ( (Partial_Sums(bq).n)  to_power (1/q) ) by A11;
    A33: x.n = (Partial_Sums(ap).n) to_power (1/p) by A12;
         y.n = (Partial_Sums(bq).n)  to_power (1/q) by A13; then
      Partial_Sums(ab).n <=x.n*y.n by A32,A33;
    hence thesis by SEQ_1:12;
end;
A34: for n be Nat holds 0 <= ab.n
     proof
       let n be Nat;
       ab.n= abs(a.n*b.n) by A8;
       hence 0 <= ab.n by COMPLEX1:132;
     end;
A35: Partial_Sums(ab) is non-decreasing by A34,SERIES_1:19;
  Partial_Sums(ab) is convergent &
    lim Partial_Sums(ab) <= lim (x(#)y) by A30,A31,A35,Th8;
  hence ab is summable &
    Sum(ab) <= ( Sum(ap) to_power (1/p) )
      * ( Sum(bq)  to_power (1/q) ) by A30,SERIES_1:def 2,def 3;
end;

theorem
for p be Real st 1 < p
for a,b,ap,bp,ab be Real_Sequence
  st( ( for n be Nat holds ap.n=abs(a.n) to_power p
           & bp.n=abs(b.n) to_power p
           & ab.n=abs(a.n+b.n) to_power p )
      & ap is summable & bp is summable ) holds
   ab is summable & Sum(ab) to_power (1/p)
      <= Sum(ap) to_power (1/p) + Sum(bp) to_power (1/p)
proof
 let p be Real such that
  A1: 1 < p;
  A2: 0 < p by A1;
  A3: p <> 0 by A2;
  A4: 1/p > 0 by A2,REAL_2:127;
   let a,b,ap,bp,ab be Real_Sequence such that
   A5: for n be Nat holds ap.n=abs(a.n) to_power p
           &  bp.n=abs(b.n) to_power p
           & ab.n=abs(a.n+ b.n) to_power p and
   A6: ap is summable and
   A7: bp is summable;
A8:   for n be Nat holds
     (Partial_Sums(ab).n) to_power (1/p)
     <= ( (Partial_Sums(ap).n) to_power (1/p) )
      + ( (Partial_Sums(bp).n) to_power (1/p) ) by A1,A5,Th7;
deffunc F(Nat)=(Partial_Sums(ap).$1) to_power (1/p);
 consider x be Real_Sequence such that
A9: for n be Nat holds x.n=F(n) from SEQ_1:sch 1;
deffunc G(Nat)=(Partial_Sums(bp).$1) to_power (1/p);
 consider y be Real_Sequence such that
A10: for n be Nat holds y.n=G(n) from SEQ_1:sch 1;
A11:  Partial_Sums(ap) is convergent by A6,SERIES_1:def 2;
A12:  Sum(ap) = lim Partial_Sums(ap) by SERIES_1:def 3;
A13:  for n be Nat holds 0 <= ap.n
   proof
       let n be Nat;
         A14: 0 <= abs(a.n) by COMPLEX1:132;
         A15: ap.n=abs(a.n) to_power p by A5;
         A16: abs(a.n) = 0 or abs(a.n) > 0 by A14;
         now per cases by A16;
           case abs(a.n) = 0;
           hence 0 <= ap.n by A2,A15,POWER:def 2;
           end;
           case abs(a.n) > 0;
           hence 0 <= ap.n by A15,POWER:39;
           end;
         end;
         hence thesis;
     end;
A17: for n be Nat holds 0 <= Partial_Sums(ap).n by A13,Lm2;
A18: x is convergent & lim x= Sum(ap) to_power (1/p)
by A4,A9,A11,A12,A17,Th10;
A19:  Partial_Sums(bp) is convergent by A7,SERIES_1:def 2;
A20:  Sum(bp) = lim Partial_Sums(bp) by SERIES_1:def 3;
A21:  for n be Nat holds 0 <= bp.n
   proof
       let n be Nat;
         A22: 0 <= abs(b.n) by COMPLEX1:132;
         A23: bp.n=abs(b.n) to_power p by A5;
         A24: abs(b.n) = 0 or abs(b.n) > 0 by A22;
         now per cases by A24;
           case abs(b.n) = 0;
           hence 0 <= bp.n by A2,A23,POWER:def 2;
           end;
           case abs(b.n) > 0;
           hence 0 <= bp.n by A23,POWER:39;
           end;
         end;
         hence thesis;
  end;
A25: for n be Nat holds 0 <= Partial_Sums(bp).n by A21,Lm2;
A26: y is convergent & lim y= Sum(bp) to_power (1/p)
by A4,A10,A19,A20,A25,Th10;
deffunc H(Nat)=(Partial_Sums(ab).$1) to_power (1/p);
 consider z be Real_Sequence such that
A27: for n be Nat holds z.n=H(n) from SEQ_1:sch 1;
A28: for n be Nat holds z.n <=x.n + y.n
proof
 let n be Nat;
    A29: (Partial_Sums(ab).n) to_power (1/p) <=
         ( (Partial_Sums(ap).n) to_power (1/p) )
      + ( (Partial_Sums(bp).n) to_power (1/p) ) by A8;
    A30: x.n = (Partial_Sums(ap).n) to_power (1/p) by A9;
    A31: y.n = (Partial_Sums(bp).n) to_power (1/p) by A10;
         z.n = (Partial_Sums(ab).n) to_power (1/p) by A27;
    hence thesis by A29,A30,A31;
end;
A32: for n be Nat holds 0 <= ab.n
  proof
       let n be Nat;
           A33:  0 <= abs(a.n + b.n) by COMPLEX1:132;
           A34:  ab.n=abs(a.n +b.n) to_power p by A5;
           A35:  abs(a.n+b.n) = 0 or abs(a.n + b.n) > 0 by A33;
           per cases by A35;
             suppose abs(a.n+b.n) = 0;
             hence 0 <= ab.n by A2,A34,POWER:def 2;
             end;
             suppose abs(a.n+b.n) > 0;
             hence 0 <= ab.n by A34,POWER:39;
             end;
  end;
A36: for n be Nat holds 0 <= Partial_Sums(ab).n by A32,Lm2;
A37: for n be Nat holds 0 <= z.n
  proof
       let n be Nat;
           A38:  0 <= Partial_Sums(ab).n by A36;
           A39:  z.n=(Partial_Sums(ab).n) to_power (1/p) by A27;
           A40:  Partial_Sums(ab).n = 0 or Partial_Sums(ab).n > 0 by A38;
           per cases by A40;
             suppose Partial_Sums(ab).n = 0;
             hence 0 <= z.n by A4,A39,POWER:def 2;
             end;
             suppose Partial_Sums(ab).n > 0;
             hence 0 <= z.n by A39,POWER:39;
             end;
  end;
A41: z is non-decreasing
proof
A42: Partial_Sums(ab) is non-decreasing by A32,SERIES_1:19;
 now let n,m be Nat such that
     A43: n <= m;
     A44: Partial_Sums(ab).n
      <= Partial_Sums(ab).m by A42,A43,SEQM_3:12;
     A45: 0 <= Partial_Sums(ab).m by A36;
     A46: 0 <= (Partial_Sums(ab).m) to_power (1/p)
       proof
         A47:  Partial_Sums(ab).m = 0 or Partial_Sums(ab).m > 0 by A45;
           per cases by A47;
             suppose Partial_Sums(ab).m = 0;
              hence 0 <= (Partial_Sums(ab).m) to_power (1/p)
                by A4,POWER:def 2;
              end;
             suppose Partial_Sums(ab).m > 0;
              hence 0 <= (Partial_Sums(ab).m) to_power (1/p) by POWER:39;
             end;
       end;
    now per cases;
      case Partial_Sums(ab).n = Partial_Sums(ab).m;
        hence (Partial_Sums(ab).n) to_power (1/p)
         <= (Partial_Sums(ab).m) to_power (1/p);
      end;
      case Partial_Sums(ab).n <> Partial_Sums(ab).m; then
              A48: Partial_Sums(ab).n < Partial_Sums(ab).m by A44,REAL_1:def 5;
                 now per cases;
                   case A49: Partial_Sums(ab).n =0;
                   (Partial_Sums(ab).n) to_power (1/p)
                   = 0 to_power (1/p) by A49
                   .=0 by A4,POWER:def 2;
                   hence (Partial_Sums(ab).n) to_power (1/p)
                   <= (Partial_Sums(ab).m) to_power (1/p) by A46;
                   end;
                  case A50: Partial_Sums(ab).n <> 0;
                  0 <= Partial_Sums(ab).n by A36; then
                  0 < Partial_Sums(ab).n by A50;
                  hence (Partial_Sums(ab).n) to_power (1/p)
                  <= (Partial_Sums(ab).m) to_power (1/p) by A4,A48,POWER:42;
               end;
              end;
              hence (Partial_Sums(ab).n) to_power (1/p)
               <= (Partial_Sums(ab).m) to_power (1/p);
      end;
   end;
   hence (Partial_Sums(ab).n) to_power (1/p)
               <= (Partial_Sums(ab).m) to_power (1/p);
   end; then
  A51: for n,m be Nat st n <= m holds
              (Partial_Sums(ab).n) to_power (1/p)
            <= (Partial_Sums(ab).m) to_power (1/p);
   now let n,m be Nat;
     assume n <= m; then
     A52: (Partial_Sums(ab).n) to_power (1/p)
                 <= (Partial_Sums(ab).m) to_power (1/p) by A51;
     A53: z.n =(Partial_Sums(ab).n) to_power (1/p) by A27;
     A54: z.m =(Partial_Sums(ab).m) to_power (1/p) by A27;
     thus z.n <= z.m by A52,A53,A54;
   end;
   hence thesis by SEQM_3:12;
 end;
A55: z is convergent & lim z <= lim x + lim y by A18,A26,A28,A41,Th9;
A56: for n be Nat holds (z.n) to_power p = Partial_Sums(ab).n
proof
let n be Nat;
 A57: z.n = (Partial_Sums(ab).n) to_power (1/p) by A27;
   now per cases;
         case A58: Partial_Sums(ab).n =0;
           z.n=(Partial_Sums(ab).n) to_power (1/p) by A57
            .= 0 by A4,A58,POWER:def 2;
           hence (z.n) to_power p = 0 by A2,POWER:def 2
             .= Partial_Sums(ab).n by A58;
         end;
         case A59: Partial_Sums(ab).n <> 0;
                   0 <= Partial_Sums(ab).n by A36; then
                   A60: 0 < Partial_Sums(ab).n by A59;
                   thus (z.n) to_power p
                   = ( (Partial_Sums(ab).n) to_power (1/p) ) to_power p
                    by A57
                  .= ( Partial_Sums(ab).n) to_power ((1/p)*p)
                 by A60,POWER:38
                  .=( Partial_Sums(ab).n) to_power 1 by A3,XCMPLX_1:107
                  .= Partial_Sums(ab).n by POWER:30;
         end;
   end;
   hence thesis;
end;
A61: Partial_Sums(ab) is convergent
     & lim Partial_Sums(ab) = (lim z) to_power p by A2,A37,A55,A56,Th10;
A62: ab is summable & Sum(ab)= (lim z) to_power p
      by A61,SERIES_1:def 2,def 3;
  Sum(ab) to_power (1/p) = lim z
  proof
    per cases;
      suppose A63: lim z=0;
         thus Sum(ab) to_power (1/p)
           = ((lim z) to_power p) to_power (1/p) by A62
          .= (0 to_power p) to_power (1/p) by A63
          .= 0 to_power (1/p) by A2,POWER:def 2
          .= 0 by A4,POWER:def 2
          .= lim z by A63;
      end;
      suppose lim z <> 0; then
      A64: 0 < lim z by A37,A55,SEQ_2:31;
          thus (Sum ab) to_power (1/p)
                = (lim z) to_power ((1/p)*p) by A62,A64,POWER:38
               .= (lim z) to_power 1 by A3,XCMPLX_1:107
               .= lim z by POWER:30;
      end;
  end;
  hence thesis by A18,A26,A55,A62;
end;
