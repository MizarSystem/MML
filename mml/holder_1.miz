:: H\"older's Inequality and {M}inkowski's Inequality
::  by Yasumasa Suzuki
:: 
:: Received September 25, 2004
:: Copyright (c) 2004 Association of Mizar Users

environ

 vocabulary PRE_TOPC, BOOLE, RLVECT_1, FUNCT_1, ARYTM, ARYTM_1, ARYTM_3,
      PROB_1, LATTICES, RELAT_1, ABSVALUE, ORDINAL2, PARTFUN1, LIMFUNC1,
      FCONT_1, SEQ_1, SEQ_2, SEQM_3, RCOMP_1, FDIFF_1, PREPOWER, POWER,
      SERIES_1, FINSEQ_4, SUPINF_2;
 notation TARSKI, XBOOLE_0, SUBSET_1, RELAT_1, FUNCT_1, PARTFUN1, PARTFUN2,
      FUNCT_2, RFUNCT_2, LIMFUNC1, RCOMP_1, FCONT_1, ORDINAL2, XCMPLX_0,
      XREAL_0, RAT_1, ORDINAL1, NUMBERS, REAL_1, NAT_1, INT_1, COMPLEX1,
      FINSEQ_4, SEQ_1, SEQ_2, SEQM_3, SERIES_1, FDIFF_1, SEQFUNC, PREPOWER,
      POWER, SIN_COS, TAYLOR_1;
 constructors ARYTM_0, ARYTM_2, XCMPLX_0, XREAL_0, REAL_1, NAT_1, PARTFUN1,
      PARTFUN2, LIMFUNC1, FCONT_1, RFUNCT_2, RCOMP_1, MEMBERED, SEQ_1, SEQ_2,
      SEQM_3, COMPLEX1, GROUP_1, SERIES_1, PREPOWER, COMSEQ_3, FDIFF_1,
      FINSEQ_4, SIN_COS, SEQFUNC, INT_2, TAYLOR_1;
 clusters RELSET_1, XREAL_0, MEMBERED, NEWTON, NAT_1, RAT_1, RCOMP_1, INT_1,
      SEQ_1, SEQM_3, SIN_COS, PREPOWER, TAYLOR_1, ORDINAL2;
 requirements SUBSET, REAL, BOOLE, NUMERALS, ARITHM;
 theorems AXIOMS, XBOOLE_1, ABSVALUE, REAL_1, REAL_2, TARSKI, XBOOLE_0,
      XREAL_0, SUBSET_1, XCMPLX_1, RCOMP_1, SEQ_1, SEQ_2, SEQM_3, SERIES_1,
      FUNCT_1, RFUNCT_2, NAT_1, FINSEQ_4, POWER, LIMFUNC1, FCONT_1, FCONT_3,
      FDIFF_1, ROLLE, SEQ_4, PREPOWER, RELSET_1, FUNCT_2, TAYLOR_1;
 schemes SEQ_1, RECDEF_1, NAT_1, PARTFUN2;

begin :: H\"older 's inequality

 reserve a, b, p, q for Real;

registration
  let x be real number;
  cluster right_closed_halfline(x) -> non empty;
coherence
proof
  reconsider x as Real by XREAL_0:def 1;
  x in {g where g is Real : x<=g};
  hence thesis by LIMFUNC1:def 2;
end;
end;

theorem
 for p, q be Real st 0 < p & 0 < q
  for a be Real st 0 <= a holds
    (a to_power p) * (a to_power q) = a to_power (p+q)
 proof
 let p, q be Real such that
 AS1: 0 < p & 0 < q;
 let a be Real such that
 AS2: 0 <=a;
K2: 0+ 0 < p+q by REAL_1:67,AS1;
    now per cases;
          case K11: a=0; then
            L1: (a to_power p) * (a to_power q)
               = 0 * (0 to_power q) by POWER:def 2,AS1
              .= 0;
              a to_power (p+q) = 0 by POWER:def 2,K2,K11;
         hence (a to_power p) * (a to_power q)
                   = a to_power (p+q) by L1;
          end;
          case a <> 0; then
            0 < a by AS2;
            hence (a to_power p) * (a to_power q)
                  = a to_power (p+q) by POWER:32;
          end;
     end;
hence thesis;
end;

theorem
 for p, q be Real st 0 < p & 0 < q
  for a be Real st 0 <=a
    holds (a to_power p) to_power q = a to_power (p*q)
proof
  let p, q be Real such that
AS1:0 < p & 0 < q;
  let a be Real such that
AS2:0 <=a;
K2: 0 < p*q by AS1,REAL_2:122;
    now per cases;
      case K11: a=0; then
    L1: (a to_power p) to_power q = (0 to_power p) to_power q
              .= 0 to_power q by POWER:def 2,AS1
              .= 0 by POWER:def 2,AS1;
              a to_power (p*q) = 0 to_power (p*q) by K11
              .=0 by POWER:def 2,K2;
            hence (a to_power p) to_power q
                   = a to_power (p*q) by L1;
          end;
          case K22: a <> 0;
           0 < a by K22,AS2;
           hence (a to_power p) to_power q = a to_power (p*q) by POWER:38;
          end;
     end;
hence thesis;
end;

theorem LMPOW3:
 for p be Real st 0 < p
  for a,b be Real st 0 <= a & a <= b
    holds a to_power p <= b to_power p
proof
 let p be Real such that
 AS1: 0 < p;
 let a, b be Real such that
 AS2: 0 <= a & a<=b;
 per cases;
   suppose a=b;
     hence a to_power p <= b to_power p;
   end;
   suppose CAS1:a<>b;
     thus a to_power p <= b to_power p
     proof
      L1: a < b by CAS1,AS2,REAL_1:def 5;
      now per cases;
         case C21: a=0; then
         L5: a to_power p = 0 by POWER:def 2,AS1;
         L4: 0 < b by L1,C21;
         thus a to_power p <= b to_power p by L5,L4,POWER:39;
        end;
        case a <> 0; then
         0 < a by AS2;
         hence a to_power p <= b to_power p by L1,POWER:42,AS1;
       end;
      end;
     hence thesis;
     end;
   end;
end;

theorem LM01:
  1 < p & 1/p + 1/q = 1 & 0 < a & 0 < b implies
  (a * b <= a #R p / p + b #R q / q
 & (a * b = a #R p / p + b #R q / q iff a #R p= b #R q) )
 proof
  assume that
  A0: 1 < p and
  A1: 1/p + 1/q = 1 and
  A2: 0 < a and
  A3: 0 < b;
reconsider pp=1/p, qq=1/q as Real;
P1: qq = 1 -pp by A1,XCMPLX_1:26;
1/p < 1 by A0,REAL_2:142;
then 1-pp <> 0 by XCMPLX_1:15;
then q" <> 0 by P1,XCMPLX_1:217;
then (q")" <> 0 by XCMPLX_1:203; then
P2: p <> 0 & q <> 0 by A0;
P3: p*q <> 0 by XCMPLX_1:6,P2;
((1*q+1*p)/(p*q))*(p*q) =1*(p*q) by A1,P2,XCMPLX_1:117; then
P4:q+p=p*q by P3,XCMPLX_1:88;
P5: (1-q)*p + q=p+q-p*q .=0 by P4;
P51:(q-1)*p = q+p-p by P4 .=q;
FG:  ex g be PartFunc of REAL,REAL st dom(g)=REAL &
            for x be Real holds g.x=1 / q - x &
            for x be Real holds g is_differentiable_in x & diff(g,x)=-1
proof
defpred X[set] means $1 in REAL;
deffunc U(Real) = 1/q - $1;
consider g being PartFunc of REAL,REAL such that
  A1:   for d be Element of REAL holds d in dom g iff X[d] and
  A2:   for d be Element of REAL
             st d in dom g holds g/.d = U(d) from PARTFUN2:sch 2;
  take g;
     A3: dom(g)=REAL
         proof
          A4: dom(g) c= REAL by RELSET_1:12;
           for x be set st x in REAL holds x in dom g by A1;
          then REAL c=dom(g) by TARSKI:def 3;
          hence dom (g) =REAL by A4,XBOOLE_0:def 10;
        end;
  A5: for d be Element of REAL holds g.d = 1 / q-d
      proof
        let d be Element of REAL;
        g/.d = 1 / q-d by A2,A3;
        hence g.d = 1 / q-d by A3,FINSEQ_4:def 4;
  end;
  A6: for d be Real st d in REAL holds g.d = (-1)*d + 1 / q
        proof
          let d be Real such that d in REAL;
          thus g.d=1 / q-d by A5
             .= (-1)*d + 1 / q;
          end;
  A7: dom(g) is open Subset of REAL by A3,FCONT_3:4,SUBSET_1:def 4; then
 A8: g is_differentiable_on dom(g) by A3,A6,FDIFF_1:31;
  for x be Real holds g is_differentiable_in x & diff(g,x)=-1
  proof
    let d be Real;
    thus g is_differentiable_in d by A3,A7,A8,FDIFF_1:16;
    thus diff(g,d)=(g`|dom(g)).d by A3,A8,FDIFF_1:def 8
                 .= -1 by A3,A6,A7,FDIFF_1:31;
end;
 hence thesis by A3,A5;
 end;
FH:  ex h be PartFunc of REAL,REAL
        st dom(h)= right_open_halfline(0)  &
            for x be Real st x > 0 holds  
              h.x=x #R p / p &
              h is_differentiable_in x & diff(h,x)=x #R (p-1)
 proof
 set h=(1/p)(#)( #R p);
H0: p <> 0 by A0;
take h;
 dom( #R p) =right_open_halfline(0) by TAYLOR_1:def 3;
hence
H1: dom(h)= right_open_halfline(0) by SEQ_1:def 6;
H2: now let x be Real such that
AS: x > 0;
H21: x in right_open_halfline(0)
proof
  x in {g where g is Real : 0<g} by AS;
  hence thesis by LIMFUNC1:def 3;
  end;
hence h.x = (1/p) * ( #R p).x by H1,SEQ_1:def 6
            .=(1/p) *(x #R p) by H21,TAYLOR_1:def 3
            .=(x #R p) /p by XCMPLX_1:100;
H31: ( #R p) is_differentiable_in x by TAYLOR_1:21,AS;
hence h is_differentiable_in x by FDIFF_1:23;
thus diff(h,x) = (1/p)*diff(( #R p),x) by H31,FDIFF_1:23
                     .= (1/p)*(p*(x #R (p-1))) by AS,TAYLOR_1:21
                     .= (1/p)*p*(x #R (p-1))
                     .= 1*x #R (p-1) by H0,XCMPLX_1:107
                     .=x #R (p-1);
end;
thus thesis by H2;
end;
consider g be PartFunc of REAL,REAL such that
    G1: dom(g)=REAL and
    G2: for x be Real holds g.x=1 / q - x and
    G3:  for x be Real holds
            g is_differentiable_in x & diff(g,x)=-1 by FG;
consider h be PartFunc of REAL,REAL such that
   H1: dom(h)= right_open_halfline(0) and
   H2:  for x be Real st x > 0 holds  
            h.x=x #R p / p  &  h is_differentiable_in x  
            & diff(h,x)=x #R (p-1) by FH;
set f=h+g;
F0:  dom f= dom h /\ dom g by SEQ_1:def 3 
             .= right_open_halfline(0) /\ REAL by G1,H1
             .= right_open_halfline(0) by XBOOLE_1:28; 
F1: for x be Real st x in right_open_halfline(0)  holds
     f.x=x #R p / p +  1 / q - x & 
     f  is_differentiable_in x & diff(f,x)=x #R (p-1) -1 
 proof
 let x be Real such that
   AS0: x in right_open_halfline(0);
   x in {y where y is Real : 0< y} by LIMFUNC1:def 3,AS0;
  then ex y be Real st x=y & 0 < y; then
   AS: 0 < x;
   P1: g is_differentiable_in x by G3;
   P2: diff(g,x)=-1 by G3;
   P3: h is_differentiable_in x by H2,AS;
   P4: diff(h,x)=x #R (p-1) by H2,AS;
   thus f.x=h.x + g.x by AS0,F0,SEQ_1:def 3
             .=x #R p / p + g.x by H2,AS
             .=x #R p / p +(1 / q - x) by G2
             .=x #R p / p +1 / q - x;
   thus f is_differentiable_in x by FDIFF_1:21,P1,P3;
   thus diff(f,x)=diff(h,x)+diff(g,x) by FDIFF_1:21,P1,P3
                    .=x #R (p-1) - 1 by P2,P4;
  end;
 F10a: 1 #R p / p +  1 / q = 1 by A1,PREPOWER:87;
 F10b:  for x be Real st 0 < x & x <> 1 holds
               x < x #R p / p +  1 / q
    proof
     let x be Real such that
       AS0: 0 < x & x <> 1;
       AS1: x < 1 or x > 1 by AS0,REAL_1:def 5;
       x in {y where y is Real : 0< y} by AS0; then
       AS2: x in right_open_halfline(0) by LIMFUNC1:def 3;
       R1: right_open_halfline(0) is open Subset of REAL by FCONT_3:7;
       R2: right_open_halfline(0) c= dom f by F0;
       R3: for x be Real st x in right_open_halfline(0) holds
                 f  is_differentiable_in x by F1;
       F11: f is_differentiable_on right_open_halfline(0)
      by R1,R2,R3,FDIFF_1:16; then
       F12: f is_continuous_on right_open_halfline(0) by FDIFF_1:33;
       1 in  {y where y is Real : 0< y};
       then 1 in right_open_halfline(0) by LIMFUNC1:def 3;
       then
       F13: f.1= 1 #R p / p +  1 / q - 1 by F1 
            .=1/p + 1/q -1 by PREPOWER:87
            .=0 by A1;
       now per cases by AS1;
         case CA1: x<1;
            set t=1-x;
            1-1 < 1-x by CA1,REAL_1:92; then
            C2: 0 < t;
            C3: [.x,x+t.] c= right_open_halfline(0)
            proof
             now
               let z be set such that 
                C31: z in [.x,x+t.];
                  z in {r where r is Real: x<=r & r<=x+t }
                 by C31,RCOMP_1:def 1;
                 then consider r be Real such that
                  C32:r=z & x<=r & r<=x+t;
                 0 < r by C32,AS0;
                 then z in {y where y is Real : 0< y} by C32;
                 hence z in right_open_halfline(0) by LIMFUNC1:def 3;
              end;
             hence thesis by TARSKI:def 3;
            end;
            ].x,x+t.[ c= [.x,x+t.] by RCOMP_1:15; then
            C4: ].x,x+t.[ c= right_open_halfline(0) by C3,XBOOLE_1:1;
            C5: f is_continuous_on [.x,x+t.] by C3,F12,FCONT_1:17;
            C6: f is_differentiable_on ].x,x+t.[ by C4,F11,FDIFF_1:34;
            consider s be Real such that
                S1: 0<s and
                S2: s<1 and
                S3: f.(x+t) = f.x + t*diff(f,x+s*t) by ROLLE:4,C2,C5,C6;
           0*t < s*t by S1,C2,REAL_1:70; then
           0 + 0 < x+s*t by AS0,REAL_1:67; then
           C7: 0 < x+s*t;
           s*t < 1*t by S2,C2,REAL_1:70; then
           C8: x+s*t <  x+t by REAL_1:67;
           C9: x+s*t in right_open_halfline(0)
           proof
              x+s*t in {y where y is Real : 0< y} by C7;
              hence x+s*t in right_open_halfline(0) by LIMFUNC1:def 3;
           end;
           C10: x+s*t < 1 by C8;
           C11: diff(f,x+s*t) =(x+s*t) #R (p-1)-1 by F1,C9;
           1-1 < p-1 by A0,REAL_1:92; then
           C12: 0 < p-1;
           (x+s*t) to_power (p-1) < (x+s*t) to_power 0
            by POWER:45,C12,C7,C10;
           then (x+s*t) #R (p-1) < (x+s*t) to_power 0 by POWER:def 2,C7;
           then (x+s*t) #R (p-1) < (x+s*t) #R 0 by POWER:def 2,C7;
           then (x+s*t) #R (p-1) < 1 by PREPOWER:85,C7;
           then (x+s*t) #R (p-1) -1 <  1-1 by REAL_1:92;
           then t*diff(f,x+s*t) < t*0 by C11,C2,REAL_1:70;
           then f.x + t*diff(f,x+s*t) <  f.x +0 by REAL_1:67;
           then
           C14:  f.(x+t) <  f.x by S3;
            0 <  f.x by C14,F13; then
            0 < x #R p / p +  1 / q-x by AS2,F1;
           then 0+x < x #R p / p +  1 / q-x+x by REAL_1:67;
            hence x < x #R p / p +  1 / q;
         end;
         case CA3: x > 1;
            set t=x-1;
            1-1 < x-1 by CA3,REAL_1:92; then
            C2: 0 < t;
            C3: [.1,1+t.] c= right_open_halfline(0)
            proof
             now 
               let z be set such that 
                C31: z in [.1,1+t.];
                  z in   {r where r is Real: 1<=r & r<=1+t }
                 by C31,RCOMP_1:def 1;
                 then consider r be Real such that
                 C32:r=z & 1<=r & r<=1+t;
                 0 < r by AXIOMS:22,C32;
                 then z in {y where y is Real : 0< y} by C32;
                 hence z in right_open_halfline(0) by LIMFUNC1:def 3;
              end;
             hence thesis by TARSKI:def 3;
            end;
            ].1,1+t.[ c= [.1,1+t.] by RCOMP_1:15; then
            C4: ].1,1+t.[ c= right_open_halfline(0) by C3,XBOOLE_1:1;
            C5: f is_continuous_on [.1,1+t.] by C3,F12,FCONT_1:17;
            C6: f is_differentiable_on ].1,1+t.[ by C4,F11,FDIFF_1:34;
            consider s be Real such that
                S1: 0<s and
                s<1 and
                S3: f.(1+t) = f.1 + t*diff(f,1+s*t) by ROLLE:4,C2,C5,C6;
C61:       0*t < s*t by S1,C2,REAL_1:70; then
           0 + 0 < 1+s*t by REAL_1:67; then
           C7: 0 < 1+s*t;
           C9: 1+s*t in right_open_halfline(0)
           proof
              1+s*t in {y where y is Real : 0< y} by C7;
              hence 1+s*t in right_open_halfline(0) by LIMFUNC1:def 3;
           end;
           1+ 0 < 1+ s*t by C61,REAL_1:67; then
           C10: 1 < 1+s*t;
           C11: diff(f,1+s*t) =(1+s*t) #R (p-1)-1 by F1,C9;
           1-1 < p-1 by A0,REAL_1:92; then
            1 < (1+s*t) #R (p-1) by PREPOWER:100,C10;
           then 1-1 < (1+s*t) #R (p-1) -1 by REAL_1:92;
           then t*0 < t*diff(f,1+s*t) by C11,C2,REAL_1:70;
           then f.1 +0 <  f.1 + t*diff(f,1+s*t) by REAL_1:67;
           then
           C14:  f.1 < f.(1+t) by S3;
            0 < f.x by C14,F13;
           then 0 < x #R p / p + 1 / q-x by AS2,F1;
           then 0+x < x #R p / p + 1 / q-x+x by REAL_1:67;
            hence  x < x #R p / p + 1 / q;
         end;
      end;
      hence thesis;
     end;
F11:  0 < b #R (1-q) by A3,PREPOWER:95; then
F12:0*(b #R (1-q)) < a * (b #R (1-q)) by A2, REAL_1:70;
F13:  0 < b #R q by A3,PREPOWER:95;
  a * (b #R (1-q)) <= (a * (b #R (1-q))) #R p / p +  1 / q
proof
    now per cases;
      case CA1: a * (b #R (1-q)) =1;
        hence a * (b #R (1-q)) = 1 #R p / p +  1 / q by F10a
             .=(a * (b #R (1-q))) #R p / p +  1 / q by CA1;
        end;
      case CA2: a * (b #R (1-q)) <>1;
       thus a * (b #R (1-q)) <= (a * (b #R (1-q))) #R p / p +  1 / q
        by CA2,F10b,F12;
      end;
   end;
    hence thesis;
 end;
then
 a * (b #R (1-q)) *(b #R q)
 <= ((a * (b #R (1-q))) #R p / p + 1 / q)*(b #R q) by AXIOMS:25,F13;
 then a*( (b #R (1-q)) *(b #R q))
 <= ((a * (b #R (1-q))) #R p / p + 1 / q)*(b #R q);
 then a*(b #R ((1-q) + q))
  <= ((a * (b #R (1-q))) #R p / p + 1 / q)*(b #R q) by PREPOWER:89,A3;
 then a*b <= ((a * (b #R (1-q))) #R p / p +  1 / q)*(b #R q)
 by PREPOWER:86,A3;
then a*b <= ((a #R p * (b #R (1-q)) #R p )/ p +  1 / q)*(b #R q)
 by PREPOWER:92,F11,A2; then
 a*b
  <= (a #R p * (b #R ((1-q)*p) )/ p + 1 / q)*(b #R q) by PREPOWER:105,A3;
  then
a*b <= (a #R p * (b #R ((1-q)*p) )/ p )*(b #R q)+  (1 / q)*(b #R q); then
a*b <= (a #R p * ((b #R ((1-q)*p) )/ p )*(b #R q))+  (1 / q)*(b #R q)
 by XCMPLX_1:75; then
 a*b <= a #R p * ((b #R ((1-q)*p) )/ p*(b #R q))+  (1 / q)*(b #R q); then
 a*b <= a #R p * ((b #R ((1-q)*p) )*(b #R q)/p)+  (1 / q)*(b #R q)
 by XCMPLX_1:75; then
 a*b <= a #R p * (b #R ((1-q)*p + q)/p)+  (1 / q)*(b #R q)
 by PREPOWER:89,A3;
then a*b <= a #R p * (1/p)+  (1 / q)*(b #R q) by P5,A3,PREPOWER:85;
then a*b <= a #R p /p+ (1 / q)*(b #R q) by XCMPLX_1:100;
then
INEQ1:  a*b <= a #R p /p+ b #R q/q by XCMPLX_1:100;
INEQ2: a * b = a #R p / p + b #R q / q iff a #R p= b #R q
proof
L: now assume
     AS: a * b = a #R p / p + b #R q / q;
 a*b  = a #R p /p+  (1 / q)*(b #R q) by AS,XCMPLX_1:100; then
 a*b = a #R p * (1/p)+  (1 / q)*(b #R q) by XCMPLX_1:100; then
 a*b = a #R p * (b #R 0/p)+  (1 / q)*(b #R q) by A3,PREPOWER:85; then
 a*b = a #R p * (b #R ((1-q)*p + q)/p)+  (1 / q)*(b #R q) by P5; then
 a*b = a #R p * ((b #R ((1-q)*p) )*(b #R q)/p)+  (1 / q)*(b #R q)
 by PREPOWER:89,A3; then
 a*b = a #R p * ((b #R ((1-q)*p) )/ p*(b #R q))+  (1 / q)*(b #R q)
 by XCMPLX_1:75; then
a*b = (a #R p * ((b #R ((1-q)*p) )/ p )*(b #R q))+  (1 / q)*(b #R q); then
a*b = (a #R p * (b #R ((1-q)*p) )/ p )*(b #R q)+  (1 / q)*(b #R q)
 by XCMPLX_1:75; then
 a*b = (a #R p * (b #R ((1-q)*p) )/ p +  1 / q)*(b #R q); then
 a*b = ((a #R p * (b #R (1-q)) #R p )/ p +  1 / q)*(b #R q)
 by PREPOWER:105,A3; then
 a*b = ((a * (b #R (1-q))) #R p / p +  1 / q)*(b #R q)
 by PREPOWER:92,F11,A2;
 then a*(b #R ((1-q) + q))
  = ((a * (b #R (1-q))) #R p / p +  1 / q)*(b #R q) by PREPOWER:86,A3;
 then a*( (b #R (1-q)) *(b #R q))
 = ((a * (b #R (1-q))) #R p / p +  1 / q)*(b #R q) by PREPOWER:89,A3;then
 a * (b #R (1-q)) *(b #R q)
 = ((a * (b #R (1-q))) #R p / p +  1 / q)*(b #R q) by XCMPLX_1:4; then
PB1:  a * (b #R (1-q)) = (a * (b #R (1-q))) #R p / p +  1 / q
 by XCMPLX_1:5,F13;
a *( b #R (1-q)) = 1 by F10b,F12,PB1;
then a *(( b #R (1-q))*( b #R (q-1)))  =1*( b #R (q-1));
then a *( b #R ( (1-q)+ (q-1)) )  = b #R (q-1)
by PREPOWER:89,A3;
then a*1 = b #R (q-1) by A3,PREPOWER:85;
hence a #R p = b #R q by P51,PREPOWER:105,A3;
end;
F0:  0 < b #R (q-1) by A3,PREPOWER:95;
G0:  p > 0 by A0,AXIOMS:22;
R: now assume 
      AS: a #R p= b #R q; then
F1:a #R p = (b #R (q-1) ) #R p by P51,PREPOWER:105,A3;
a=a #R 1 by A2,PREPOWER:86
  .=a #R (p *(1/p) ) by G0,XCMPLX_1:107
  .= (a #R p ) #R (1/p) by A2,PREPOWER:105
  .= (b #R (q-1) ) #R (p *(1/p)) by F0,PREPOWER:105,F1
  .=(b #R (q-1) ) #R 1 by G0,XCMPLX_1:107
  .= b #R (q-1) by F0,PREPOWER:86;
then a*1 = b #R (q-1);
then a *( b #R ( (1-q)+ (q-1)) ) = b #R (q-1) by A3,PREPOWER:85;
then a *(( b #R (1-q))*( b #R (q-1)))  =1*( b #R (q-1)) by PREPOWER:89,A3;
then a *( b #R (1-q))*( b #R (q-1))  =1*( b #R (q-1)) by XCMPLX_1:4;
then
 AS1: a *( b #R (1-q))  =1 by XCMPLX_1:5,F0;
    thus a #R p / p + b #R q / q = b #R q / p + b #R q / q by AS
      .=b #R q *(1/ p) + b #R q / q by XCMPLX_1:100
      .=b #R q *(1/ p) + b #R q *(1/q) by XCMPLX_1:100
      .=b #R q *1 by A1
      .=a* ( (b #R (1-q)) *(b #R q)) by AS1
      .=a*(b #R ((1-q) + q)) by PREPOWER:89,A3
      .=a* b by A3,PREPOWER:86;
   end;   
thus thesis by L,R;
end;
thus thesis by INEQ1,INEQ2;
end;

theorem LM02:
  1 < p & 1/p + 1/q = 1 & 0 <= a & 0 <= b implies
  (a * b <= a to_power p / p + b to_power q / q
  & (a * b = a to_power p / p + b to_power q / q
  iff  a to_power p = b to_power q))
proof
  assume that
  A0: 1 < p and
  A1: 1/p + 1/q = 1 and
  A2: 0 <= a and
  A3: 0 <= b;
  reconsider pp=1/p, qq=1/q as Real;
  A4: 0 < p by A0,AXIOMS:22;  
  P1: qq = 1 -pp by A1,XCMPLX_1:26;
  1/p < 1 by A0,REAL_2:142;
  then 1-1 < 1-pp by REAL_1:92; then
  N00:  0 < qq by P1; then
  Q0:  0 < q by REAL_2:150;
  P0:  0 < p by A0,AXIOMS:22;
  NP0: p <> 0 by A4;
  NQ0: q <> 0 by Q0;
   Q1: 0 <= a to_power p / p
  proof
    Q00: 0 < p by A0,AXIOMS:22;
    Q10: a=0 or 0 < a by A2;
    now per cases by Q10;
     case 0 < a; then
       0 < a to_power p by POWER:39; then
       0/p < a to_power p/p by Q00,REAL_1:73;
       hence 0 <= a to_power p / p;
     end;
     case 0 = a; then
            0 = a to_power p by POWER:def 2,Q00;
            hence 0 <= a to_power p / p;
     end;
   end;
   hence thesis;
  end;
  Q2: 0 <= b to_power q / q 
  proof
      Q20: b=0 or 0 < b by A3;  
      now per cases by Q20;
       case 0 < b; then
         0 < b to_power q by POWER:39;
         then 0/q < b to_power q/q by Q0,REAL_1:73;
         hence 0 <= b to_power q / q;
       end;
       case 0 = b; then
              0 = b to_power q by POWER:def 2,Q0;
              hence 0 <= b to_power q / q;
       end;
     end;
     hence thesis;
    end;
  Q3: 0+0 <=a to_power p / p +b to_power q / q by Q1,Q2,REAL_1:55;
  now per cases;
    case CA1: a*b=0;
      GB0: a * b <= a to_power p / p + b to_power q / q by CA1,Q3;
      a * b = a to_power p / p + b to_power q / q
                 iff a to_power p = b to_power q
     proof
     CA11: a=0 or b=0 by CA1,XCMPLX_1:6;
       now per cases by CA11;
        case C1:a=0;
        thus a * b = a to_power p  / p + b to_power q / q
                 iff  a to_power p  = b to_power q
         proof
          L: now assume
           a * b = a to_power p  / p + b to_power q / q;
           then 0 = 0/p + b to_power q / q by C1,POWER:def 2,A4;
           then 0*q = (b to_power q /q)*q;
           then 0 = b to_power q by NQ0,XCMPLX_1:88;
           then
           L1: 0  = (b to_power q ) to_power (1/q) by N00,POWER:def 2;
           B0: 0=b
             proof
                 assume
                 B01: b <> 0;
                 then 0 = b to_power (q * (1/q) ) by A3,L1,POWER:38;
                 then 0 = b to_power 1 by NQ0,XCMPLX_1:107;
                 then 0 = b by POWER:30;
                 hence contradiction by B01;
             end;
            thus a to_power p = 0 to_power p by C1
            .= 0 by P0,POWER:def 2
            .= 0 to_power q by Q0,POWER:def 2
            .= b to_power q by B0;
         end;
           now assume
           D0: a to_power p  = b to_power q;
           D1: a to_power p /p = 0 to_power p /p by C1
                           .= 0/p by P0,POWER:def 2
                           .=0;
           D2: b to_power q /q = a to_power p /q by D0
                               .=0 /q by P0,POWER:def 2,C1
                               .=0;
           thus a*b=0 by CA1
                 .=a to_power p /p + b to_power q /q by D1,D2;
          end;
        hence thesis by L;
         end;
        end;
        case C2:b=0;
        thus a * b = a to_power p / p + b to_power q / q
                 iff a to_power p = b to_power q
         proof  
         PP1: 1/p > 0 by REAL_2:127,A4; 
          L: now assume
           a * b = a to_power p / p + b to_power q / q;
           then 0 = 0/q + a to_power p / p by C2,POWER:def 2,Q0;
           then 0*p = (a to_power p/p)*p;
           then 0  = a to_power p by NP0,XCMPLX_1:88;
           then
           L1: 0 = (a to_power p ) to_power (1/p) by PP1,POWER:def 2;
           B0: 0=a
             proof
                 assume
                 B01: a <> 0;
                 then a > 0 by A2;
                 then 0 = a to_power (p * (1/p) ) by L1,POWER:38;
                 then 0 = a to_power 1 by NP0,XCMPLX_1:107;
                 hence contradiction by B01,POWER:30;
             end;
            thus b to_power q = 0 to_power q by C2
            .= 0 by Q0,POWER:def 2
            .= 0 to_power p by P0,POWER:def 2
            .= a to_power p by B0;
         end;
           now assume
           D0:  a to_power p = b to_power q;
           D1:  b to_power q /q = 0 to_power q /q by C2
                           .= 0/q by Q0,POWER:def 2
                           .= 0;
           D2: a to_power p /p = b to_power q /p by D0
                               .= 0 to_power q /p by C2
                               .=0 /p by Q0,POWER:def 2
                               .=0;
           thus a*b=0 by CA1
                 .=a to_power p /p + b to_power q /q by D1,D2;
          end;
          hence thesis by L;
         end;
         end;
      end;
     hence thesis;
     end;
     hence a * b <= a to_power p / p + b to_power q / q &
      (a * b = a to_power p / p + b to_power q / q
                 iff a to_power p  = b to_power q ) by GB0;
    end;
    case a*b<>0; then
       CA21: a <> 0 & b <> 0;
       CA22: 0 < a by CA21,A2;
       CA23: 0 < b by CA21,A3;
        a * b <= a #R p / p + b #R q / q by CA22,CA23,A0,A1,LM01;
      then a * b <= a to_power p / p + b #R q / q by CA22,POWER:def 2;
      then
      GB1: a * b <= a to_power p / p + b to_power q / q
         by CA23,POWER:def 2;
      a * b = a #R p / p + b #R q / q
           iff a #R p  = b #R q by CA22,CA23,A0,A1,LM01;
      then a * b = a to_power p  / p + b #R q / q
           iff a to_power p = b #R q by CA22,POWER:def 2; then
      a * b = a to_power p / p + b to_power q / q
           iff a to_power p = b to_power q by CA23,POWER:def 2;
      hence a * b <= a to_power p / p + b to_power q / q &
      (a * b = a to_power p  / p + b to_power q / q
                 iff a to_power p = b to_power q ) by GB1;
 end;
 end;
 hence thesis;
end;

LM03:
for a be Real_Sequence
  st for n be Nat holds 0 <= a.n holds
      for n be Nat holds a.n <= Partial_Sums(a).n
proof
let a be Real_Sequence such that
   AS1: for n be Nat holds 0 <= a.n;
   defpred P[Nat] means a.$1 <=Partial_Sums(a).$1;
 P0: P[0] by SERIES_1:def 1;
 P1:  for n be Nat st P[n] holds P[n+1]
       proof
         let n be Nat such that
        AS:  P[n];
        Q1: Partial_Sums(a).(n+1) = Partial_Sums(a).n + a.(n+1)
          by SERIES_1:def 1;
         a.n <= Partial_Sums(a).n by AS; then
         Q2: a.n + a.(n+1) <= Partial_Sums(a).n + a.(n+1) by AXIOMS:24;
         0 <= a.n by AS1;
         then 0 + a.(n+1) <= a.n + a.(n+1) by AXIOMS:24;
         hence P[n+1] by Q1,AXIOMS:22,Q2;
      end;
       for n be Nat holds P[n] from NAT_1:sch 1(P0,P1);
     hence thesis;
  end;

LM04:
for a be Real_Sequence st for n be Nat holds 0 <= a.n holds
      for n be Nat holds 0 <= Partial_Sums(a).n
proof
  let a be Real_Sequence such that
AS1: for n be Nat holds 0 <= a.n;
  let n be Nat;
P1: a.n <=Partial_Sums(a).n by LM03,AS1;
  0 <= a.n by AS1;
  hence 0 <=Partial_Sums(a).n by P1;
end;

LM05:
for a be Real_Sequence st for n be Nat holds 0 <= a.n
for n be Nat st Partial_Sums(a).n=0
  holds for k be Nat st k <= n holds a.k=0
proof
let a be Real_Sequence such that
AS1:  for n be Nat holds 0 <= a.n;
let n be Nat such that
 P1: Partial_Sums(a).n=0;
  now let k be Nat such that
      P2: k <=n;
      Partial_Sums(a) is non-decreasing by AS1,SERIES_1:19; then
      P3: Partial_Sums(a).k <= Partial_Sums(a).n by SEQM_3:12,P2;
      a.k <=Partial_Sums(a).k by AS1,LM03; then
      a.k <=0 by P1,P3;
      hence a.k=0 by AS1;
  end;
 hence thesis;
end;

LM06:
for a be Real_Sequence
for n be Nat st (for k be Nat st k <=n holds a.k=0)
    holds Partial_Sums(a).n=0
proof
let a be Real_Sequence;
defpred P[Nat] means (for k be Nat st k <=$1 holds a.k=0)
    implies Partial_Sums(a).$1=0;
P0: P[0]
  proof
    assume for k be Nat st k <=0 holds a.k=0; then
      L1: a.0=0;
      thus Partial_Sums(a).0=a.0 by SERIES_1:def 1
                                   .=0 by L1;
   end;
P1: for n be Nat st P[n] holds P[n+1]
  proof
    let n be Nat such that
     AS: P[n];
     now assume
     AS1: for k be Nat st k <=n+1 holds a.k=0;
      now let k be Nat such that
          AS2: k <= n;
          n <= n+1 by NAT_1:29; then
          k <= n+1 by AS2,AXIOMS:22;
          hence a.k=0 by AS1;
      end;
     then
     L1:Partial_Sums(a).n=0 by AS;
     thus Partial_Sums(a).(n+1)
                      =Partial_Sums(a).n+a.(n+1) by SERIES_1:def 1
                     .=0 by AS1,L1;
     end;
 hence thesis;
end;
thus for n be Nat holds P[n] from NAT_1:sch 1 (P0,P1);
end;

begin  :: Minkowski's inequality

theorem LM07:
for p, q be Real st 1 < p & 1/p + 1/q = 1
for a,b,ap,bq,ab be Real_Sequence st
  ( for n be Nat holds
              ap.n=abs(a.n) to_power p
           & bq.n=abs(b.n) to_power q
           & ab.n=abs(a.n* b.n)) holds
  for n be Nat holds
     Partial_Sums(ab).n <= ( (Partial_Sums(ap).n) to_power (1/p) )
      * ( (Partial_Sums(bq).n) to_power (1/q) )
   proof
  let p,q be Real such that
  A0: 1 < p and
  A1: 1/p + 1/q = 1;
    reconsider pp=1/p, qq=1/q as Real;
    A02: qq = 1 -pp by A1,XCMPLX_1:26;
    1/p < 1 by A0,REAL_2:142;
    then 1-1 < 1-pp by REAL_1:92;
    then
    A04: 0 < q by A02,REAL_2:150;
    A05: 0 < p by A0,AXIOMS:22;
    A06: p <> 0 by A05;
    A07: q <> 0 by A04;
    A09: 1/p > 0 by REAL_2:127,A05;
    A10: 1/q > 0 by REAL_2:127,A04;
  let  a,b,ap,bq,ab be Real_Sequence such that
  A2: for n be Nat holds ap.n=abs(a.n) to_power p
           & bq.n=abs(b.n) to_power q & ab.n=abs(a.n* b.n);
  let n be Nat;
     set A=Partial_Sums(ap).n;
     set B=Partial_Sums(bq).n;
     set Ap=A to_power (1/p);
     set Bq=B to_power (1/q);
     P01:for n be Nat holds 0 <= ap.n
     proof
       let n be Nat;
         Q1: 0 <= abs(a.n) by ABSVALUE:5;
         Q2: ap.n=abs(a.n) to_power p by A2;
         Q3: abs(a.n) = 0 or abs(a.n) > 0 by Q1;
         now per cases by Q3;
           case abs(a.n) = 0;
           hence 0 <= ap.n by Q2,POWER:def 2,A05;
           end;
           case abs(a.n) > 0;
           hence 0 <= ap.n by Q2,POWER:39;
           end;
         end;
         hence thesis;
     end;
     P02:for n be Nat holds 0 <= bq.n
     proof
       let n be Nat;
         Q1:  0 <= abs(b.n) by ABSVALUE:5;
         Q2:  bq.n=abs(b.n) to_power q by A2;
         Q3:  abs(b.n) = 0 or abs(b.n) > 0 by Q1;
         now per cases by Q3;
           case abs(b.n) = 0;
           hence 0 <= bq.n by Q2,POWER:def 2,A04;
           end;
           case abs(b.n) > 0;
           hence 0 <= bq.n by Q2,POWER:39;
           end;
         end;
         hence thesis;
     end;
     P1: 0 <= A by LM04,P01;
     P2: 0 <= B by LM04,P02;
     now per cases;
       case CA1: A*B = 0;
        R1: 0 <= Ap 
        proof
        Q10: A=0 or 0 < A by P1;
        now per cases by Q10;
           case 0 < A;
           hence 0 <= A to_power (1/p) by POWER:39;
          end;
          case 0 = A;
               then 0 = A to_power (1/p) by POWER:def 2,A09;
               hence 0 <= A to_power (1/p);
          end;
       end;
      hence thesis;
      end;
     R2: 0 <= Bq 
       proof
         Q10: B=0 or 0 < B by P2;  
         now per cases by Q10; 
            case 0 < B;
            hence 0 <= B to_power (1/q) by POWER:39;
           end;
           case Q102: 0 = B;
                0 = B to_power (1/q) by Q102,POWER:def 2,A10;
                hence 0 <= B to_power (1/q);
           end;
        end;
       hence thesis;
       end;
       R3: 0 <=Ap*Bq by R1,R2,REAL_2:121;
       CA11: A=0 or B=0 by CA1,XCMPLX_1:6;
         now per cases by CA11;
           case C1: A=0;
             R4: for k be Nat st k <=n holds 
                   ap.k=0 by C1,P01,LM05;
             R5: for k be Nat st k <=n holds a.k=0
             proof
              let k be Nat such that
                R6: k <=n;
                ap.k=0 by R6,R4; then
                R7: abs(a.k) to_power p = 0 by A2;
                abs(a.k) =0
                   proof
                   assume abs(a.k) <> 0;
                   then abs(a.k) > 0 by ABSVALUE:5;
                   hence contradiction by R7,POWER:39;
                   end;
                hence thesis by ABSVALUE:7;
             end;
             R6: for k be Nat st k <=n holds ab.k=0
             proof
             let k be Nat such that
                R61: k <=n;
                thus ab.k=abs(a.k * b.k) by A2
                           .=abs(0 * b.k) by R61,R5
                           .=0 by ABSVALUE:7;
             end;
            Partial_Sums(ab).n = 0 by R6,LM06;
            hence Partial_Sums(ab).n
            <= ( (Partial_Sums(ap).n) to_power (1/p) )
             * ( (Partial_Sums(bq).n)  to_power (1/q) ) by R3;
           end;
           case C2: B=0;
             R4: for k be Nat st k <=n holds bq.k=0 by C2,P02,LM05;
             R5: for k be Nat st k <=n holds b.k=0
             proof
              let k be Nat such that
                R6: k <=n;
                bq.k=0 by R6,R4; then
                R7: abs(b.k) to_power q = 0 by A2;
                abs(b.k) =0
                   proof
                   assume abs(b.k) <> 0; then
                   abs(b.k) > 0 by ABSVALUE:5; then
                   abs(b.k) to_power q  > 0 by POWER:39;
                   hence contradiction by R7;
                   end;
                hence thesis by ABSVALUE:7;
             end;
             R6: for k be Nat st k <=n holds ab.k=0
             proof
             let k be Nat such that
                R61: k <=n;
                thus ab.k=abs(a.k * b.k) by A2
                           .=abs(a.k * 0) by R61,R5
                           .=0 by ABSVALUE:7;
             end;
            Partial_Sums(ab).n = 0 by R6,LM06;
            hence Partial_Sums(ab).n
            <= ( (Partial_Sums(ap).n) to_power (1/p) )
             * ( (Partial_Sums(bq).n) to_power (1/q) ) by R3;
           end;
       end;
        hence Partial_Sums(ab).n
            <= ( (Partial_Sums(ap).n) to_power (1/p) )
             * ( (Partial_Sums(bq).n) to_power (1/q) );
       end;
       case CA2: A*B <> 0;
       L1: A <> 0 & B <> 0 by CA2;
       L1a: A > 0 by L1,P1; then
       L2: Ap > 0 by POWER:39;
       L2b: B > 0 by L1,P2; then
       L3: Bq > 0 by POWER:39;
       deffunc F(Nat) =abs(a.$1)/Ap;
       consider x be Real_Sequence such that
       L4: for n be Nat holds x.n=F(n) from SEQ_1:sch 1;
       deffunc G(Nat) =abs(b.$1)/Bq;
       consider y be Real_Sequence such that
       L5: for n be Nat holds y.n=G(n) from SEQ_1:sch 1;
       L6: for n be Nat holds 0 <=x.n
          proof
          let n be Nat;
          0 <= abs(a.n) by ABSVALUE:5; then
          0 <= abs(a.n)/Ap by L2,REAL_2:125;
          hence 0 <= x.n by L4;
          end;
       L7: for n be Nat holds 0 <=y.n
          proof
          let n be Nat;
          0 <= abs(b.n) by ABSVALUE:5;
          then 0 <= abs(b.n)/Bq by L3,REAL_2:125;
          hence 0 <= y.n by L5;
          end;
       L8: for n be Nat holds 
         (x.n * y.n <= (x.n) to_power p / p + (y.n) to_power q / q
         & (x.n * y.n = (x.n) to_power p / p + (y.n) to_power q / q 
         iff  (x.n) to_power p = (y.n) to_power q)) 
         proof
         let n be Nat;
            R1:0 <= x.n by L6;
            R2:0 <= y.n by L7;
            thus x.n * y.n <= (x.n) to_power p / p + (y.n) to_power q / q
            & (x.n * y.n = (x.n) to_power p / p + (y.n) to_power q / q
             iff (x.n) to_power p = (y.n) to_power q)
          by R1,R2,A0,A1,LM02;
        end;
       L9: for n be Nat holds
         ((1/(Ap*Bq)) (#) ab).n = x.n * y.n 
        proof
        let n be Nat;
        B1: x.n= abs(a.n)/Ap by L4;
        B2: y.n= abs(b.n)/Bq by L5;
        thus x.n*y.n=(abs(a.n)/Ap)*(abs(b.n)/Bq) by B1,B2
                   .= (abs(a.n)*abs(b.n))/(Ap*Bq) by XCMPLX_1:77
                   .=abs(a.n*b.n)/(Ap*Bq) by ABSVALUE:10
                   .=ab.n/(Ap*Bq) by A2
                   .=(1/(Ap*Bq))*ab.n by XCMPLX_1:100 
                   .=((1/(Ap*Bq)) (#) ab).n by SEQ_1:13;
        end;
     L10: for n be Nat holds
      (((1/p)(#)((1/A)(#)ap)) + ((1/q)(#)((1/B)(#)bq))).n 
         = (x.n) to_power p / p + (y.n) to_power q / q
       proof
        let n be Nat;
        B1: x.n= abs(a.n)/Ap by L4;
        B2: y.n= abs(b.n)/Bq by L5;   
        B4: (x.n) to_power p / p
            = ((abs(a.n)/Ap) to_power p) /p by B1;
        B5:  (abs(a.n)/Ap) to_power p  
             =abs(a.n) to_power p/Ap to_power p
             proof
               now per cases;
                case NC1: abs(a.n) =0;
                thus (abs(a.n)/Ap) to_power p
                =(0/Ap) to_power p by NC1
                .=0 /Ap to_power p by POWER:def 2,A05
                .=0 to_power p/Ap to_power p by POWER:def 2,A05
                .=abs(a.n) to_power p/Ap to_power p by NC1;
                end;
                case NC2: abs(a.n) <> 0;
                abs(a.n) > 0 by ABSVALUE:5,NC2;                
                hence (abs(a.n)/Ap) to_power p
                =abs(a.n) to_power p/Ap to_power p by L2,POWER:36;
                end;
             end;
             hence thesis;
            end;
        B6: (x.n) to_power p / p    
            =(abs(a.n) to_power p/Ap to_power p ) /p by B4,B5
            .=( ap.n / Ap to_power p) /p by A2
            .=( ap.n / (A to_power ((1/p)*p))) /p
              by POWER:38,L1a
            .= ( ap.n / (A to_power 1 )) /p by A06,XCMPLX_1:88 
            .= ( ap.n / A ) /p by POWER:30
            .= (1/p)*(ap.n / A) by XCMPLX_1:100
            .= (1/p)*((1/A)*ap.n) by XCMPLX_1:100
            .= (1/p)*(((1/A)(#)ap).n) by SEQ_1:13
            .=((1/p)(#)((1/A)(#)ap)).n by SEQ_1:13;            
        B4y: (y.n) to_power q / q
            = ((abs(b.n)/Bq) to_power q) /q by B2;
        B5y:  (abs(b.n)/Bq) to_power q  
             =abs(b.n) to_power q/Bq to_power q 
             proof
               now per cases;
                case NC1: abs(b.n) =0;
                thus (abs(b.n)/Bq) to_power q
                =(0/Bq) to_power q by NC1
                .=0 by POWER:def 2,A04
                .=0 /Bq to_power q
                .=0 to_power q/Bq to_power q by POWER:def 2,A04
                .=abs(b.n) to_power q/Bq to_power q by NC1;
                end;
                case NC2: abs(b.n) <> 0;
                abs(b.n) > 0 by ABSVALUE:5,NC2;
                hence (abs(b.n)/Bq) to_power q
                =abs(b.n) to_power q/Bq to_power q by L3,POWER:36;
                end;
             end;
             hence thesis;
            end;
        B6y: (y.n) to_power q / q    
            =(abs(b.n) to_power q/Bq to_power q ) /q by B4y,B5y
            .=( bq.n / Bq to_power q) /q by A2
            .=( bq.n / (B to_power ((1/q)*q))) /q
              by POWER:38,L2b
            .= ( bq.n / (B to_power 1 )) /q by A07,XCMPLX_1:88
            .= ( bq.n / B ) /q by POWER:30
            .= (1/q)*(bq.n / B) by XCMPLX_1:100
            .= (1/q)*((1/B)*bq.n) by XCMPLX_1:100
            .= (1/q)*(((1/B)(#)bq).n) by SEQ_1:13
            .=((1/q)(#)((1/B)(#)bq)).n by SEQ_1:13;
             (x.n) to_power p / p + (y.n) to_power q / q
            =((1/p)(#)((1/A)(#)ap)).n + ((1/q)(#)((1/B)(#)bq)).n
           by B6,B6y;
         hence (x.n) to_power p / p + (y.n) to_power q / q
            =(((1/p)(#)((1/A)(#)ap)) + ((1/q)(#)((1/B)(#)bq))).n
           by SEQ_1:11;
     end;
     L11: for n be Nat holds
           ((1/(Ap*Bq)) (#) ab).n
          <= (((1/p)(#)((1/A)(#)ap)) + ((1/q)(#)((1/B)(#)bq))).n
           proof
           let n be Nat;
           S1: ((1/(Ap*Bq)) (#) ab).n=x.n * y.n by L9;
           S2: x.n * y.n <= (x.n) to_power p / p + (y.n) to_power q / q
               by L8;
           S3: (((1/p)(#)((1/A)(#)ap)) + ((1/q)(#)((1/B)(#)bq))).n 
           = (x.n) to_power p / p + (y.n) to_power q / q by L10;
           thus thesis by S1,S2,S3;
          end;
    L12:Partial_Sums( (1/(Ap*Bq)) (#) ab).n
        <=Partial_Sums(((1/p)(#)((1/A)(#)ap)) + ((1/q)(#)((1/B)(#)bq))).n
     by SERIES_1:17,L11;
    L13: Partial_Sums( (1/(Ap*Bq)) (#) ab).n
          = ((1/(Ap*Bq)) (#)  Partial_Sums(ab)).n by SERIES_1:12 
          .= (1/(Ap*Bq)) * Partial_Sums(ab).n by SEQ_1:13;
    L14: Partial_Sums(((1/p)(#)((1/A)(#)ap)) + ((1/q)(#)((1/B)(#)bq))).n
    = (Partial_Sums(((1/p)(#)((1/A)(#)ap)))
    +   Partial_Sums(((1/q)(#)((1/B)(#)bq)))).n by SERIES_1:8
   .=Partial_Sums((1/p)(#)((1/A)(#)ap)).n
   + Partial_Sums((1/q)(#)((1/B)(#)bq)).n by SEQ_1:11
  .=((1/p)(#)Partial_Sums((1/A)(#)ap)).n
   + Partial_Sums((1/q)(#)((1/B)(#)bq)).n by SERIES_1:12
   .=(1/p)*(Partial_Sums((1/A)(#)ap).n)
   + Partial_Sums((1/q)(#)((1/B)(#)bq)).n by SEQ_1:13
  .=(1/p)*(((1/A)(#)Partial_Sums(ap)).n)
   + Partial_Sums((1/q)(#)((1/B)(#)bq)).n by SERIES_1:12
  .=(1/p)*((1/A)*Partial_Sums(ap).n)
   + Partial_Sums((1/q)(#)((1/B)(#)bq)).n by SEQ_1:13
 .=(1/p)*((1/A)*Partial_Sums(ap).n)
   + ((1/q)(#)Partial_Sums((1/B)(#)bq)).n by SERIES_1:12
.=(1/p)*((1/A)*Partial_Sums(ap).n)
   + (1/q)*(Partial_Sums((1/B)(#)bq).n) by SEQ_1:13
.=(1/p)*((1/A)*Partial_Sums(ap).n)
   + (1/q)*(((1/B)(#)Partial_Sums(bq)).n) by SERIES_1:12
.=(1/p)*((1/A)*Partial_Sums(ap).n)
   +(1/q)*((1/B)*Partial_Sums(bq).n) by SEQ_1:13
.=(1/p)*1 +(1/q)*((1/B)*B) by L1a,XCMPLX_1:88
.=(1/p)*1 +(1/q)*(1) by L2b,XCMPLX_1:88
.=1 by A1;
   L15: Ap*Bq > 0 by L2,L3,REAL_2:122;
    (1/(Ap*Bq)) * Partial_Sums(ab).n <= 1 by L12,L13,L14;
    then Partial_Sums(ab).n/(Ap*Bq) <= 1 by XCMPLX_1:100;
    hence Partial_Sums(ab).n
        <= ( (Partial_Sums(ap).n) to_power (1/p) )
          * ( (Partial_Sums(bq).n) to_power (1/q) ) by REAL_2:118,L15;
       end;
  end;
hence thesis;
end;

theorem LM08:
for p be Real st 1 < p
for a,b,ap,bp,ab be Real_Sequence
  st ( for n be Nat holds
              ap.n=abs(a.n) to_power p
           &  bp.n=abs(b.n) to_power p
           & ab.n=abs(a.n+b.n) to_power p ) holds
  for n be Nat holds
     (Partial_Sums(ab).n) to_power (1/p)
     <= ( Partial_Sums(ap).n) to_power (1/p)
      + ( Partial_Sums(bp).n) to_power (1/p)
proof
let p be Real such that
   A0:   1 < p;
   let  a,b,ap,bp,ab be Real_Sequence such that
   A2: for n be Nat holds
              ap.n=abs(a.n) to_power p
           &  bp.n=abs(b.n) to_power p
           &  ab.n=abs(a.n+ b.n) to_power p;
    reconsider pp=1/p as Real;
    reconsider qq=1-pp as Real;
    reconsider q=1/qq as Real;
    1/p < 1 by A0,REAL_2:142; then
    1-1 < 1-pp by REAL_1:92; then
  A02:  0 < qq;
  A03:  qq=1/q by XCMPLX_1:56;
  A04:  0 < q by A02,A03,REAL_2:150;
  A05:  0 < p by A0,AXIOMS:22;
  A06: p <> 0 by A05;
  A07: q <> 0 by A04;
  A09: 1/p > 0 by REAL_2:127,A05;
  1-1 < p-1 by A0,REAL_1:92; then
  A11: 0 < p-1;
  P0:  1/p + 1/q= 1 by A03;
  IP2: p <> 0 & q <> 0 by A06,A07;
  IP3: p*q <> 0 by XCMPLX_1:6,IP2;
  (1/p + 1/q)*(p*q) = 1*(p*q) by P0;
  then ((1*q+1*p)/(p*q))*(p*q) =1*(p*q) by IP2,XCMPLX_1:117; then
  IP4:q+p=p*q by IP3,XCMPLX_1:88;
  IP5:(p-1)*q = q+p-q by IP4 .=p;
deffunc F(Nat)=abs(a.$1+ b.$1) to_power (p-1);
 consider  x be Real_Sequence such that
P1: for n be Nat holds x.n=F(n) from SEQ_1:sch 1;
P2:  for n be Nat holds 0 <= x.n
   proof
       let n be Nat;
         Q1: 0 <= abs(a.n+ b.n) by ABSVALUE:5;
         Q2: x.n=abs(a.n+ b.n) to_power (p-1) by P1;
         Q3: abs(a.n+ b.n) = 0 or abs(a.n+ b.n) > 0 by Q1;
         now per cases by Q3;
           case CA1: abs(a.n+ b.n) = 0;
           thus 0 <= x.n by CA1,Q2,POWER:def 2,A11;
           end;
           case CA2: abs(a.n+ b.n) > 0;
           thus 0 <= x.n by CA2,Q2,POWER:39;
           end;
         end;
         hence thesis;
     end;
P5:  for n be Nat holds ab.n=x.n*abs(a.n+b.n)
      proof
      let n be Nat;
         now per cases;
               case K21: abs(a.n+b.n)=0;
                  thus ab.n=abs(a.n+ b.n) to_power p by A2
                        .= 0 by POWER:def 2,A05,K21
                        .= x.n * abs(a.n+b.n) by K21;
               end;           
               case K22: abs(a.n+b.n) <> 0;
                   0 <= abs(a.n+b.n) by ABSVALUE:5; then
                   LL: 0 < abs(a.n+b.n) by K22;
                   thus ab.n
                   =abs(a.n+ b.n) to_power ((p-1)+1) by A2
                  .= abs(a.n+ b.n) to_power (p-1)
                  * abs(a.n+ b.n) to_power 1 by LL,POWER:32
                  .=(abs(a.n+ b.n)  to_power (p-1))
                    * abs(a.n+ b.n) by POWER:30
                  .= x.n * abs(a.n+b.n) by P1;
               end;
         end;
         hence thesis;
       end;
P7:  for n be Nat holds ab.n <= ( x(#)abs(a)+x(#)abs(b) ).n
 proof
  let n be Nat;
  L0: 0 <= x.n by P2;
  abs(a.n+b.n) <= abs(a.n)+abs(b.n) by ABSVALUE:13; then
  L1: x.n * abs(a.n+b.n)
    <= x.n * (abs(a.n)+abs(b.n)) by L0,AXIOMS:25;
  L2: ab.n=x.n*abs(a.n+b.n) by P5;
   x.n * (abs(a.n)+abs(b.n))
      = x.n * (abs(a.n))+x.n * (abs(b.n))
     .= x.n * (abs(a).n)+x.n * (abs(b.n)) by SEQ_1:16
     .= x.n * (abs(a).n)+x.n * (abs(b).n) by SEQ_1:16    
     .= (x(#)abs(a)).n +x.n * (abs(b).n) by SEQ_1:12
     .= (x(#)abs(a)).n +(x(#)abs(b)).n by SEQ_1:12
     .= (x(#)abs(a) +x(#)abs(b)).n by SEQ_1:11;
  hence thesis by L1,L2;
  end;
P8: for n be Nat holds (x(#)abs(a)).n= abs(a.n*x.n)
proof
let n be Nat;
0 <= x.n by P2; then
L1: abs(x.n)=x.n by ABSVALUE:def 1;
thus (x(#)abs(a)).n =x.n * abs(a).n by SEQ_1:12
      .=x.n * abs(a.n) by SEQ_1:16
      .=abs(a.n*x.n) by ABSVALUE:10,L1;
end;
P9: for n be Nat holds (x(#)abs(b)).n= abs(b.n*x.n)
proof
let n be Nat;
0 <= x.n by P2; then
L1: abs(x.n)=x.n by ABSVALUE:def 1;
thus (x(#)abs(b)).n =x.n * abs(b).n by SEQ_1:12
      .=x.n * abs(b.n) by SEQ_1:16
      .=abs(b.n*x.n) by L1,ABSVALUE:10;
end;
P10: for n be Nat holds abs(x.n) to_power q = ab.n
 proof
 let n be Nat;
 0 <= x.n by P2;
then abs(x.n)=x.n by ABSVALUE:def 1;
then
L2: abs(x.n) to_power q = (abs(a.n+b.n) to_power (p-1)) to_power q by P1;
       now per cases;
                 case K21: abs(a.n+b.n)=0;
                  K211: ab.n = 0 to_power p by K21,A2
                           .= 0 by POWER:def 2,A05;
                  K212: abs(x.n) to_power q
                           =(abs(a.n+b.n) to_power (p-1)) to_power q by L2
                          .=(0 to_power (p-1)) to_power q by K21
                          .=0 to_power q by POWER:def 2,A11
                          .=0 by POWER:def 2,A04;
                   thus abs(x.n) to_power q = ab.n by K211,K212; 
                   end;           
                   case K22: abs(a.n+b.n) <> 0;
                     LL: 0 < abs(a.n+b.n) by K22,ABSVALUE:5;
                    thus abs(x.n) to_power q
                           =(abs(a.n+b.n) to_power (p-1)) to_power q by L2
                          .= abs(a.n+b.n)  to_power ((p-1)*q) by LL,POWER:38
                          .=ab.n by A2,IP5;
                   end;
         end;
 hence thesis;
 end;
P13:  for n be Nat holds
          Partial_Sums(x(#)abs(a)).n  
          <= ( (Partial_Sums(ap).n) to_power (1/p) )  
           * ( (Partial_Sums(ab).n) to_power (1/q) )
 by P8,P10,LM07,A0,P0,A2;
P14:  for n be Nat holds
    Partial_Sums(x(#)abs(b)).n <= ( (Partial_Sums(bp).n) to_power (1/p) )
    * ( (Partial_Sums(ab).n) to_power (1/q) ) by P9,P10,LM07,A0,P0,A2;
P15: for n be Nat holds
    Partial_Sums(ab).n <= ( ((Partial_Sums(ap).n) to_power (1/p)) +
         ((Partial_Sums(bp).n) to_power (1/p)))
       * ( (Partial_Sums(ab).n) to_power (1/q) )
   proof
   let n be Nat;
    L1:  Partial_Sums(ab).n <= Partial_Sums(x(#)abs(a)+x(#)abs(b)).n
    by P7,SERIES_1:17;
    L3:  (Partial_Sums(x(#)abs(a)+x(#)abs(b))).n
         =(Partial_Sums(x(#)abs(a))+Partial_Sums(x(#)abs(b))).n
       by SERIES_1:8
         .=Partial_Sums(x(#)abs(a)).n+Partial_Sums(x(#)abs(b)).n by SEQ_1:11;
    L4: Partial_Sums(x(#)abs(a)).n  
           <= ( (Partial_Sums(ap).n) to_power (1/p) )  
            * ( (Partial_Sums(ab).n) to_power (1/q) ) by P13;
    L5: Partial_Sums(x(#)abs(b)).n
          <= ( (Partial_Sums(bp).n) to_power (1/p) )
           * ( (Partial_Sums(ab).n) to_power (1/q) ) by P14;
          Partial_Sums(x(#)abs(a)).n + Partial_Sums(x(#)abs(b)).n
         <= ( (Partial_Sums(ap).n) to_power (1/p) )  
            * ( (Partial_Sums(ab).n) to_power (1/q) )
         +  ( (Partial_Sums(bp).n) to_power (1/p) )
           * ( (Partial_Sums(ab).n) to_power (1/q) ) by L4,L5,REAL_1:55;
    hence thesis by AXIOMS:22, L1,L3;
   end;       
P16:  for n be Nat holds 0 <= ap.n 
   proof
       let n be Nat;
         Q1: 0 <= abs(a.n) by ABSVALUE:5;
         Q2: ap.n=abs(a.n) to_power p by A2;
         Q3: abs(a.n) = 0 or abs(a.n) > 0 by Q1;
         now per cases by Q3;
           case abs(a.n) = 0;
           hence 0 <= ap.n by Q2,POWER:def 2,A05;
           end;
           case abs(a.n) > 0;
           hence 0 <= ap.n by Q2,POWER:39;
           end;
         end;
         hence thesis;
     end;
P17:  for n be Nat holds 0 <= bp.n 
   proof
       let n be Nat;
         Q1:  0 <= abs(b.n) by ABSVALUE:5;
         Q2:  bp.n=abs(b.n) to_power p by A2;
         Q3:  abs(b.n) = 0 or abs(b.n) > 0 by Q1;
         now per cases by Q3;
           case abs(b.n) = 0;
           hence 0 <= bp.n by Q2,POWER:def 2,A05;
           end;
           case abs(b.n) > 0;
           hence 0 <= bp.n by Q2,POWER:39;
           end;
         end;
         hence thesis;
     end;
P18: for n be Nat holds 0 <= Partial_Sums(ap).n by P16,LM04; 
P19: for n be Nat holds 0 <= Partial_Sums(bp).n by P17,LM04; 
P20:  for n be Nat holds 0 <= ab.n
   proof
       let n be Nat;
         Q1:  0 <= abs(a.n+b.n) by ABSVALUE:5;
         Q2:  ab.n=abs(a.n+b.n) to_power p by A2;
         0 to_power p <= abs(a.n+b.n) to_power p by Q1,LMPOW3,A05;
         hence thesis by Q2,POWER:def 2,A05;
     end;
P21: for n be Nat holds 0 <= Partial_Sums(ab).n by P20,LM04; 
now let n be Nat;
set A=Partial_Sums(ab).n;
set C= ( ((Partial_Sums(ap).n) to_power (1/p)) +
         ((Partial_Sums(bp).n) to_power (1/p)));
set D= ( A to_power (1/q) );
L1: 0 <= A by P21;
L2:  A <= C*D by P15;
 0 <= Partial_Sums(ap).n by P18; then
 0 to_power (1/p) <= (Partial_Sums(ap).n) to_power (1/p)
         by LMPOW3,A09; then
 L3: 0 <= (Partial_Sums(ap).n) to_power (1/p)
         by POWER:def 2,A09;
 0 <= Partial_Sums(bp).n by P19;
 then 0 to_power (1/p) <= (Partial_Sums(bp).n) to_power (1/p)
         by LMPOW3,A09; then
 L4: 0 <= (Partial_Sums(bp).n) to_power (1/p)
         by POWER:def 2,A09;
 0+0 <= (Partial_Sums(ap).n) to_power (1/p)
         + (Partial_Sums(bp).n) to_power (1/p)
        by REAL_1:55,L3,L4;
 then
  L5: 0 <= C;
  now per cases;
     case A=0; then
       A to_power (1/p) = 0 to_power (1/p)
       .= 0 by POWER:def 2,A09;
     hence A to_power (1/p) <= C by L5;
     end;
     case A<>0; then
     D1: 0 < A by L1; then
     D2: 0 < D by POWER:39;
     set B=1/D;
     D4: 0 < B by D2,REAL_2:127;
     D5: A *B <=C* D *B by L2,AXIOMS:25,D4;
     D6: C*D*B = C* (D *B)
      .= C*1 by D2,XCMPLX_1:88
     .= C;
     A *B =A/D by XCMPLX_1:100
         .=(A to_power 1) / D by POWER:30
        .=A to_power (1-(1/q)) by D1,POWER:34
        .=A to_power (1/p+0) by P0
        .= A to_power (1/p);
        hence A to_power (1/p) <= (Partial_Sums(ap).n) to_power (1/p)
           + (Partial_Sums(bp).n) to_power (1/p) by D6,D5;
     end;
  end;
hence (Partial_Sums(ab).n) to_power (1/p) <=
  (Partial_Sums(ap).n) to_power (1/p) + (Partial_Sums(bp).n) to_power (1/p);
end;
hence thesis;
end;      

theorem LMSEQ1:
for a,b be Real_Sequence st
   ( (for n be Nat holds a.n <= b.n )
   & b is convergent & a is non-decreasing ) holds
     a is convergent & lim a <= lim b
proof
let a,b be Real_Sequence such that
  AS1:for n be Nat holds a.n <= b.n and
  AS2: b is convergent and
  AS3: a is non-decreasing;
 b is bounded by AS2,SEQ_2:27; then
 P1: b is bounded_above by SEQ_2:def 5;
 a is bounded_above
 proof
   consider r be real number such that
     P2: for n be Nat holds b.n < r by P1,SEQ_2:def 3;
   now let n be Nat;
     P3: b.n < r by P2;
     a.n <=b.n by AS1; then
     a.n <= r by P3,AXIOMS:22; then
     a.n+0 < r+1 by REAL_1:67;
     hence a.n < r+1;
   end;
   hence thesis by SEQ_2:def 3;
end;
 hence a is convergent by AS3,SEQ_4:51;
 hence lim a <=lim b by AS1,AS2,SEQ_2:32;
end;

theorem LMSEQ2:
for a,b,c be Real_Sequence st
   ( (for n be Nat holds a.n <= b.n+c.n )
   & b is convergent & c is convergent & a is non-decreasing ) holds
     a is convergent & lim a <= lim b + lim c
     proof
let a,b,c be Real_Sequence such that
  AS1:for n be Nat holds a.n <= b.n+c.n and
  AS2: b is convergent and
  AS3: c is convergent and
  AS4: a is non-decreasing;
  P1: b+c is convergent by AS2,AS3,SEQ_2:19;
  P2: now let n be Nat;
  a.n <=b.n + c.n by AS1;
  hence a.n <= (b+c).n by SEQ_1:11;
  end;
  P3: lim (b+c) = lim b + lim c by AS2,AS3,SEQ_2:20;
 thus a is convergent by P1,P2,AS4,LMSEQ1;
 thus lim a <=lim b+lim c by P1,P2,P3,AS4,LMSEQ1;
end;

theorem LMSEQ3:
for p be Real st 0 < p
for a,ap be Real_Sequence st  
   a is convergent  
  & (for n be Nat holds 0 <=a.n )
  & (for n be Nat holds ap.n=(a.n) to_power p) holds
   ap is convergent & lim ap = (lim a) to_power p
proof
let p be Real such that
  AS1: 0 < p;
let a,ap be Real_Sequence such that
  AS2: a is convergent and
  AS3:for n be Nat holds 0 <=a.n and
  AS4: for n be Nat holds ap.n=(a.n) to_power p;
 now per cases;
  case CA1: lim a =0;
     now per cases;
        case CA11: ex n be Nat st for m be Nat
          st n<=m holds a.m=0;
          consider N be Nat such that 
          A3:   for m be Nat st N<=m holds a.m=0 by CA11;
          A4:   for n be Nat holds (a^\N).n=0
          proof 
             let n be Nat;
             N<=n+N by NAT_1:37; then a.(n+N)=0 by A3;
             hence (a^\N).n=0 by SEQM_3:def 9;
         end;
         A6: now let e be real number such that A7: e>0;
              take n=0; let m be Nat such that n<=m;
              A61: (ap^\N).m= ap.(m+N) by SEQM_3:def 9
                               .= (a.(m+N))  to_power p by AS4
                     .= ((a^\N).m) to_power p by SEQM_3:def 9
                     .= 0 to_power p by A4
                     .= 0 by POWER:def 2,AS1;
              A62: (lim a) to_power p = 0 to_power p by CA1
                .= 0 by POWER:def 2,AS1;
             abs((ap^\N).m-((lim a) to_power p))
              =abs(0- 0 ) by A61,A62
             .=0 by ABSVALUE:7;
            hence abs((ap^\N).m-((lim a) to_power p)) < e by A7;
        end;
       then (ap^\N) is convergent by SEQ_2:def 6;
       then ap is convergent & ((lim a) to_power p)
        =lim(ap^\N) by A6,SEQ_2:def 7,SEQ_4:35;
        hence ap is convergent & lim ap = (lim a)  to_power p
       by SEQ_4:33;
    end;
    case CA12: for n be Nat ex m  be Nat st n<=m & a.m<>0;
        consider m1 be Nat such that 
        A10: 0<=m1 & a.m1 <>0 by CA12;
        defpred P[Nat] means a.$1 <> 0;
        A11: ex m be Nat st P[m] by A10;
        consider M be Element of NAT such that
        A12: P[M] & for n be Nat st P[n] holds M<=n
        from NAT_1:sch 5(A11);
        A13: now let n be Nat;
             consider m be Nat such that
             A14: n+1<=m & a.m <>0 by CA12;
           take m; thus n<m & a.m <>0 by A14,NAT_1:38;
       end;
       defpred P[Nat,set,set] means 
        for n,m be Nat st $2=n & $3=m holds
          n<m & a.m <>0 & for k be Nat st n<k & a.k <>0 holds m<=k;
      A15: for n be Nat for x be Element of NAT 
      ex y be Element of NAT st P[n,x,y]
         proof let n be Nat; let x be Element of NAT;
            defpred P[Nat] means x<$1 & a.$1 <>0;
            A16: ex m be Nat st P[m] by A13;
            consider l be Nat such that A17: P[l] &
            for k be Nat st P[k] holds l<=k from NAT_1:sch 5(A16);
            take l; thus thesis by A17;
        end;        
        consider F be Function of NAT,NAT such that
        A18: F.0=M & for n be Element of NAT holds P[n,F.n,F.(n+1)]
         from RECDEF_1:sch 2(A15);
        A19: dom F=NAT & rng F c= NAT by FUNCT_2:def 1,RELSET_1:12;
        then rng F c= REAL by XBOOLE_1:1;
       then reconsider F as Real_Sequence by A19,FUNCT_2:def 1,RELSET_1:11;
       A20: now let n be Nat; 
             F.n in rng F by A19,FUNCT_1:def 5;
            hence F.n is Nat by A19;
        end;        
        now let n be Nat;
           F.n is Nat & F.(n+1) is Nat by A20;
           hence F.n<F.(n+1) by A18;
        end;
        then reconsider F as increasing Seq_of_Nat 
        by A19,SEQM_3:def 8,def 11;
       A21: for n be Nat st a.n <> 0 ex m be Nat st F.m=n
         proof
            defpred P[Nat] means a.$1 <>0 & for m be Nat holds F.m<>$1;
            assume
            A22: ex n be Nat st P[n];
            consider M1 be Nat such that A23: P[M1] &
            for n be Nat st P[n] holds M1<=n from NAT_1:sch 5(A22);
            defpred P[Nat] means $1<M1 & a.$1 <> 0 
            & ex m be Nat st F.m=$1;
             A24: ex n be Nat st P[n]
              proof 
                take M;
                 A25: M<=M1 by A12,A23;
                 M <> M1 by A18,A23;
                hence M<M1 by A25,REAL_1:def 5;
                thus a.M <>0 by A12;
                take 0; thus thesis by A18;
              end;
            A26: for n be Nat st P[n] holds n<=M1;
            consider MX be Nat such that A27: P[MX] &
           for n be Nat st P[n] holds n<=MX from NAT_1:sch 6(A26,A24);
           A28: for k be Nat st MX<k & k<M1 holds a.k=0
              proof 
              given k be Nat such that A29: MX<k & k<M1 & a.k <> 0;
              now per cases;
                case ex m be Nat st F.m=k;
                  hence contradiction by A27,A29;
                end;
                case for m be Nat holds F.m<>k;
                  hence contradiction by A23,A29;
                end;
              end; 
              hence contradiction;
            end;
          consider m be Nat such that A30: F.m=MX by A27;
           A31: MX<F.(m+1) & a.(F.(m+1))<>0 &
              for k be Nat st MX<k & a.k<>0 holds F.(m+1)<=k by A18,A30;
           A32: F.(m+1)<=M1 by A18,A23,A27,A30;
           now assume F.(m+1)<>M1; then F.(m+1)<M1 by A32,REAL_1:def 5;
               hence contradiction by A28,A31;
            end;
         hence contradiction by A23;
        end; 
     A36: a*F is_subsequence_of a by SEQM_3:def 10;
     then A37: a*F is convergent by AS2,SEQ_4:29;
     A38: lim (a*F)=0 by AS2,CA1,A36,SEQ_4:30;
       AP2: (lim a) to_power p = 0 to_power p by CA1
      .=0 by AS1,POWER:def 2;
       now let e be real number;
           assume A41: 0<e; then
                  0 < (e to_power (1/p) ) by POWER:39;
              then consider n be Nat such that
              A42: for m be Nat st n<=m holds abs((a*F).m-0)
              < (e to_power (1/p) )
                  by A38,A37,SEQ_2:def 7;
               take k=F.n; let m be Nat such that A43: k<=m;
             now per cases;
              case A44: a.m=0;
                     ap.m= (a.m) to_power p by AS4
                   .= 0 to_power p by A44
                   .= 0 by AS1,POWER:def 2;
                then abs(ap.m-((lim a) to_power p)) =abs(0-0) by AP2
                .=0 by ABSVALUE:7;
              hence abs(ap.m-((lim a) to_power p))<e by A41;
               end;
             case A441:  a.m<>0;
               AA: a.m > 0 by A441,AS3;
               then consider l be Nat such that
          A45: m=F.l by A21;
               n<=l by A43,A45,SEQM_3:7;
               then abs((a*F).l-0)< (e to_power (1/p) ) by A42;
               then abs(a.(F.l))< (e to_power (1/p) ) by SEQM_3:31; then
               A46: abs(a.m)< (e to_power (1/p) ) by A45;
               abs(a.m) > 0 by A441,ABSVALUE:6; then
               abs(a.m) to_power p < (e to_power (1/p) ) to_power p
              by A46,POWER:42,AS1; then
               abs(a.m) to_power p < e to_power ( (1/p) *p ) by POWER:38,A41;
               then abs(a.m) to_power p < e to_power 1
               by AS1,XCMPLX_1:107;
               then abs(a.m) to_power p < e by POWER:30; then
               A47: (a.m) to_power p < e  by AA,ABSVALUE:def 1;
               A48: (a.m) to_power p = ap.m by AS4;
               A49: 0 < ap.m by AA,A48,POWER:39;
               ap.m < e by A47,A48;
               then abs(ap.m) < e by A49,ABSVALUE:def 1;
               hence abs(ap.m -((lim a) to_power p) ) < e by AP2;
             end;
           end;
          hence abs(ap.m -((lim a) to_power p) ) < e;
      end;
      then
       G0: for e be real number st e > 0 holds
        ex k be Nat st for m be Nat st k <=m holds
         abs(ap.m -((lim a) to_power p) ) < e;
       hence ap is convergent by SEQ_2:def 6;
       hence lim ap = (lim a) to_power p by G0,SEQ_2:def 7;
     end;
   end;
       hence ap is convergent & lim ap = (lim a)  to_power p;
  end;
 case CA2: lim a <>0;
      0 <= lim a by SEQ_2:31,AS2,AS3; then
      P1: lim a > 0 by CA2;
            ex k be Nat st rng (a^\k) c= dom ( #R p)
      proof
         set e0=(lim a );
         L2: e0/2 > 0 by SEQ_2:3,P1;
         consider k be Nat such that
           L3: for m be Nat st k<=m holds abs(a.m-e0)<e0/2
          by AS2,L2,SEQ_2:def 7;
         take k;
         L4: now let m be Nat;
               k<= k+m by NAT_1:37;
               then abs(a.(k+m)-e0)<e0/2 by L3;
               then -(e0/2) <= a.(k+m)-e0 by ABSVALUE:12;
               then -(e0/2)+e0 <= a.(k+m)-e0+e0 by REAL_1:55;
                then 0 < a.(k+m) by L2;
                hence 0 < (a^\k).m by SEQM_3:def 9;
         end;
         now let x be set such that
           AS: x in rng (a^\k);
               consider n be Nat such that
          AS1: x = (a^\k).n by AS,RFUNCT_2:9;
               0 < (a^\k).n by L4;
               then (a^\k).n in {g where g is Real : 0<g}; then
               (a^\k).n in right_open_halfline(0) by LIMFUNC1:def 3;
               then (a^\k).n in dom ( #R p) by TAYLOR_1:def 3;
              hence x in dom ( #R p) by AS1;
        end;
        hence thesis by TARSKI:def 3;
      end; then
      consider k be Nat such that
      P3:  rng (a^\k) c= dom ( #R p);
      P4:  a^\k is convergent & lim (a^\k) = lim a by AS2,SEQ_4:33;
      P5:  lim (a^\k) > 0 by P4,P1;      
           ( #R p) is_differentiable_in lim (a^\k) by P5, TAYLOR_1:21;
      then ( #R p) is_continuous_in lim (a^\k) by FDIFF_1:32; then
      P9:( #R p)*(a^\k) is convergent & ( #R p).(lim (a^\k))
        = lim ( ( #R p)*(a^\k)) by P3,P4,FCONT_1:def 1;  
      P10:  ( #R p)*(a^\k) = ap^\k
        proof
          now let x be set such that
          AX:  x in NAT;
          reconsider n=x as Nat by AX;
              (a^\k).n in rng (a^\k) by RFUNCT_2:10;
              then (a^\k).n in dom ( #R p) by P3; then
             P11: (a^\k).n in right_open_halfline(0)
            by TAYLOR_1:def 3;
             then a.(k+n) in right_open_halfline(0) by SEQM_3:def 9;
              then a.(k+n) in {g where g is Real : 0<g}
             by LIMFUNC1:def 3;
              then consider g be Real such that
             PQ1: a.(k+n) = g & g > 0;
             P12: a.(k+n) > 0 by PQ1;            
            thus (( #R p)*(a^\k)).x = ( #R p).((a^\k).n) by P3,RFUNCT_2:21
            .=((a^\k).n) #R p by P11,TAYLOR_1:def 3
            .=(a.(k+n)) #R p by SEQM_3:def 9
            .=(a.(k+n)) to_power p by P12,POWER:def 2
            .=ap.(k+n) by AS4
            .=(ap^\k).x by SEQM_3:def 9;
       end;
       hence thesis by SEQ_1:8;
        end;
      PPP: lim a in right_open_halfline(0)
        proof
          lim a in {g where g is Real : 0<g} by P1;
          hence thesis by LIMFUNC1:def 3;
        end;
      P11: ( #R p).(lim (a^\k)) =( #R p).(lim a) by P4
                      .=(lim a) #R p by PPP,TAYLOR_1:def 3
                      .=(lim a) to_power p by P1,POWER:def 2;
      ap^\k is convergent & lim (ap^\k)=(lim a) to_power p
     by P9,P10,P11;
      hence ap is convergent & lim ap = (lim a) to_power p
    by SEQ_4:35,SEQ_4:36;
   end;
end;
hence ap is convergent & lim ap = (lim a) to_power p;
end;

theorem
for p be Real st 0 < p
for a,ap be Real_Sequence st a is summable
  & (for n be Nat holds 0 <=a.n )
  & (for n be Nat holds ap.n=(Partial_Sums(a).n) to_power p) holds
   ap is convergent
   & lim ap = Sum(a) to_power p
   & ap is non-decreasing
   & (for n be Nat holds ap.n <= Sum(a) to_power p )
proof
let p be Real such that
  AS1: 0 < p;
let a,ap be Real_Sequence such that
  AS2:  a is summable and
  AS3:for n be Nat holds 0 <=a.n and
  AS4: for n be Nat holds ap.n=(Partial_Sums(a).n) to_power p;
L1:   Partial_Sums(a) is convergent  by AS2,SERIES_1:def 2;
L2:   lim  Partial_Sums(a) = Sum(a) by SERIES_1:def 3;
L3:   for n be Nat holds 0 <= Partial_Sums(a).n by LM04,AS3;
L4:   ap is convergent & lim ap = (lim Partial_Sums(a))  to_power p
    by AS1,LMSEQ3,L1,L3,AS4;
thus
L5:  ap is convergent & lim ap = (Sum(a))  to_power p by L4,L2;
L6:  Partial_Sums(a) is non-decreasing by AS3,SERIES_1:19;
now let n, m be Nat such that
    ASL: n <=m;
    P0: ap.n = (Partial_Sums(a).n) to_power p by AS4;
    P1: ap.m = (Partial_Sums(a).m) to_power p by AS4;
    B1: Partial_Sums(a).n <= Partial_Sums(a).m by L6,SEQM_3:12,ASL;
         0 <= Partial_Sums(a).n by L3;
    then (Partial_Sums(a).n) to_power p <= (Partial_Sums(a).m) to_power p
   by AS1,B1,LMPOW3;
    hence ap.n <= ap.m by P0,P1;
end;
hence
L7: ap is non-decreasing by SEQM_3:12;
    ap is bounded by SEQ_2:27,L4;
then ap is bounded_above by SEQ_2:def 5;
then for n be Nat holds ap.n<=lim ap by SEQ_4:54,L7;
hence thesis by L5;
end;

theorem
for p, q be Real st 1 < p & 1/p + 1/q = 1
for a,b,ap,bq,ab be Real_Sequence
  st  (( for n be Nat holds
              ap.n=abs(a.n) to_power p
           & bq.n=abs(b.n) to_power q
           & ab.n=abs(a.n* b.n)  )
       & ap is summable & bq is summable ) holds
    ab is summable &
    Sum ab <= ( Sum(ap) to_power (1/p) ) * ( Sum(bq) to_power (1/q) )
proof
 let p,q be Real such that  
  A0: 1 < p and
  A1: 1/p + 1/q = 1;
    reconsider pp=1/p, qq=1/q as Real;
    A02: qq = 1 -pp by A1,XCMPLX_1:26;
    1/p < 1 by A0,REAL_2:142; then
    1-1 < 1-pp by REAL_1:92; then
    A04:  0 < q by A02,REAL_2:150;
    A05:  0 < p by A0,AXIOMS:22;
    A09: 1/p > 0 by REAL_2:127,A05;
    A10: 1/q > 0 by REAL_2:127,A04;
   let  a,b,ap,bq,ab be Real_Sequence such that
   A2: for n be Nat holds ap.n=abs(a.n) to_power p
           & bq.n=abs(b.n) to_power q
           & ab.n=abs(a.n* b.n) and
   A3: ap is summable and
   A4: bq is summable;
P0:   for n be Nat holds Partial_Sums(ab).n
     <= ( (Partial_Sums(ap).n) to_power (1/p) )
      * ( (Partial_Sums(bq).n) to_power (1/q) ) by LM07,A0,A1,A2;
deffunc F(Nat)=(Partial_Sums(ap).$1) to_power (1/p);
 consider x be Real_Sequence such that
P1: for n be Nat holds x.n=F(n) from SEQ_1:sch 1;
deffunc G(Nat)=(Partial_Sums(bq).$1) to_power (1/q);
 consider y be Real_Sequence such that
P2: for n be Nat holds y.n=G(n) from SEQ_1:sch 1;
P3:  Partial_Sums(ap) is convergent by A3,SERIES_1:def 2;
P4:  Sum ap = lim Partial_Sums(ap) by SERIES_1:def 3;
P5:  for n be Nat holds 0 <= ap.n
   proof
       let n be Nat;
         Q1:  0 <= abs(a.n) by ABSVALUE:5;
         Q2:  ap.n=abs(a.n) to_power p by A2;
         Q3:  abs(a.n) = 0 or abs(a.n) > 0 by Q1;
         now per cases by Q3;
           case abs(a.n) = 0;
           hence 0 <= ap.n by Q2,POWER:def 2,A05;
           end;
           case abs(a.n) > 0;
           hence 0 <= ap.n by Q2,POWER:39;
           end;
         end;
         hence thesis;
     end;
P6: for n be Nat holds 0 <= Partial_Sums(ap).n by P5,LM04;
P7: x is convergent & lim x= Sum(ap) to_power (1/p) 
by P1,P3,P4,P6,A09,LMSEQ3;
P8:  Partial_Sums(bq) is convergent by A4,SERIES_1:def 2;
P9:  Sum(bq) = lim Partial_Sums(bq) by SERIES_1:def 3;
P10:  for n be Nat holds 0 <= bq.n 
   proof
       let n be Nat;
         Q1:  0 <= abs(b.n) by ABSVALUE:5;
         Q2:  bq.n=abs(b.n) to_power q by A2;
         Q3:  abs(b.n) = 0 or abs(b.n) > 0 by Q1;
         now per cases by Q3;
           case abs(b.n) = 0;
           hence 0 <= bq.n by Q2,POWER:def 2,A04;
           end;
           case abs(b.n) > 0;
           hence 0 <= bq.n by Q2,POWER:39;
           end;
         end;
         hence thesis;
  end;
P11: for n be Nat holds 0 <= Partial_Sums(bq).n by P10,LM04; 
P12: y is convergent & lim y= Sum(bq) to_power (1/q) 
by P2,P8,P9,P11,A10, LMSEQ3;
P13: x(#)y is convergent
& lim (x(#)y) = (Sum(ap) to_power (1/p))* (Sum(bq) to_power (1/q))
by P7,P12,SEQ_2:28,SEQ_2:29;
P14: for n be Nat holds Partial_Sums(ab).n <=(x(#)y).n
proof    
 let n be Nat;
    L1: Partial_Sums(ab).n <=
         ( (Partial_Sums(ap).n) to_power (1/p) )
      * ( (Partial_Sums(bq).n)  to_power (1/q) ) by P0;
    L2: x.n = (Partial_Sums(ap).n) to_power (1/p) by P1;
         y.n = (Partial_Sums(bq).n)  to_power (1/q) by P2; then
      Partial_Sums(ab).n <=x.n*y.n by L1,L2;
    hence thesis by SEQ_1:12;
end;
P15: for n be Nat holds 0 <= ab.n
     proof
       let n be Nat;
       ab.n= abs(a.n*b.n) by A2;
       hence 0 <= ab.n by ABSVALUE:5;
     end;
P16: Partial_Sums(ab) is non-decreasing by P15,SERIES_1:19;
  Partial_Sums(ab) is convergent &
    lim Partial_Sums(ab) <= lim (x(#)y) by P13,P14,P16,LMSEQ1;
  hence ab is summable &
    Sum(ab) <= ( Sum(ap) to_power (1/p) )
      * ( Sum(bq)  to_power (1/q) ) by P13,SERIES_1:def 2,SERIES_1:def 3;
end;

theorem
for p be Real st 1 < p
for a,b,ap,bp,ab be Real_Sequence
  st( ( for n be Nat holds ap.n=abs(a.n) to_power p
           & bp.n=abs(b.n) to_power p
           & ab.n=abs(a.n+b.n) to_power p )
      & ap is summable & bp is summable ) holds
   ab is summable & Sum(ab) to_power (1/p)
      <= Sum(ap) to_power (1/p) + Sum(bp) to_power (1/p)
proof
 let p be Real such that
  A0: 1 < p;
  A05: 0 < p by A0,AXIOMS:22;
  A06: p <> 0 by A05;
  A09: 1/p > 0 by REAL_2:127,A05;
   let a,b,ap,bp,ab be Real_Sequence such that
   A2: for n be Nat holds ap.n=abs(a.n) to_power p
           &  bp.n=abs(b.n) to_power p
           & ab.n=abs(a.n+ b.n) to_power p and
   A3: ap is summable and
   A4: bp is summable;
P0:   for n be Nat holds
     (Partial_Sums(ab).n) to_power (1/p)
     <= ( (Partial_Sums(ap).n) to_power (1/p) )
      + ( (Partial_Sums(bp).n) to_power (1/p) ) by LM08,A0,A2;
deffunc F(Nat)=(Partial_Sums(ap).$1) to_power (1/p);
 consider x be Real_Sequence such that
P1: for n be Nat holds x.n=F(n) from SEQ_1:sch 1;
deffunc G(Nat)=(Partial_Sums(bp).$1) to_power (1/p);
 consider y be Real_Sequence such that
P2: for n be Nat holds y.n=G(n) from SEQ_1:sch 1;
P3:  Partial_Sums(ap) is convergent by A3,SERIES_1:def 2;
P4:  Sum(ap) = lim Partial_Sums(ap) by SERIES_1:def 3;
P5:  for n be Nat holds 0 <= ap.n
   proof
       let n be Nat;
         Q1: 0 <= abs(a.n) by ABSVALUE:5;
         Q2: ap.n=abs(a.n) to_power p by A2;
         Q3: abs(a.n) = 0 or abs(a.n) > 0 by Q1;
         now per cases by Q3;
           case abs(a.n) = 0;
           hence 0 <= ap.n by Q2,POWER:def 2,A05;
           end;
           case abs(a.n) > 0;
           hence 0 <= ap.n by Q2,POWER:39;
           end;
         end;
         hence thesis;
     end;
P6: for n be Nat holds 0 <= Partial_Sums(ap).n by P5,LM04; 
P7: x is convergent & lim x= Sum(ap) to_power (1/p) 
by P1,P3,P4,P6,A09,LMSEQ3;
P8:  Partial_Sums(bp) is convergent by A4,SERIES_1:def 2;
P9:  Sum(bp) = lim Partial_Sums(bp) by SERIES_1:def 3;
P10:  for n be Nat holds 0 <= bp.n
   proof
       let n be Nat;
         Q1: 0 <= abs(b.n) by ABSVALUE:5;
         Q2: bp.n=abs(b.n) to_power p by A2;
         Q3: abs(b.n) = 0 or abs(b.n) > 0 by Q1;
         now per cases by Q3;
           case abs(b.n) = 0;
           hence 0 <= bp.n by Q2,POWER:def 2,A05;
           end;
           case abs(b.n) > 0;
           hence 0 <= bp.n by Q2,POWER:39;
           end;
         end;
         hence thesis;
  end;
P11: for n be Nat holds 0 <= Partial_Sums(bp).n by P10,LM04; 
P12: y is convergent & lim y= Sum(bp) to_power (1/p) 
by P2,P8,P9,P11,A09, LMSEQ3;
deffunc H(Nat)=(Partial_Sums(ab).$1) to_power (1/p);
 consider z be Real_Sequence such that
P13: for n be Nat holds z.n=H(n) from SEQ_1:sch 1;
P14: for n be Nat holds z.n <=x.n + y.n
proof    
 let n be Nat;
    L1: (Partial_Sums(ab).n) to_power (1/p) <=
         ( (Partial_Sums(ap).n) to_power (1/p) )  
      + ( (Partial_Sums(bp).n) to_power (1/p) ) by P0;
    L2: x.n = (Partial_Sums(ap).n) to_power (1/p) by P1;
    L3: y.n = (Partial_Sums(bp).n) to_power (1/p) by P2;
         z.n = (Partial_Sums(ab).n) to_power (1/p) by P13;
    hence thesis by L1,L2,L3;
end;
P15: for n be Nat holds 0 <= ab.n
  proof
       let n be Nat;
           Q1:  0 <= abs(a.n + b.n) by ABSVALUE:5;
           Q2:  ab.n=abs(a.n +b.n) to_power p by A2;
           Q3:  abs(a.n+b.n) = 0 or abs(a.n + b.n) > 0 by Q1;
           per cases by Q3;
             suppose abs(a.n+b.n) = 0;
             hence 0 <= ab.n by Q2,POWER:def 2,A05;
             end;
             suppose abs(a.n+b.n) > 0;
             hence 0 <= ab.n by Q2,POWER:39;
             end;
  end;
P16: for n be Nat holds 0 <= Partial_Sums(ab).n by P15,LM04;
P25: for n be Nat holds 0 <= z.n
  proof
       let n be Nat;
           Q1:  0 <= Partial_Sums(ab).n by P16;
           Q2:  z.n=(Partial_Sums(ab).n) to_power (1/p) by P13;
           Q3:  Partial_Sums(ab).n = 0 or Partial_Sums(ab).n > 0 by Q1;
           per cases by Q3;
             suppose Partial_Sums(ab).n = 0;
             hence 0 <= z.n by Q2,POWER:def 2,A09;
             end;
             suppose Partial_Sums(ab).n > 0;
             hence 0 <= z.n by Q2,POWER:39;
             end;
  end;
P26: z is non-decreasing
proof
L1: Partial_Sums(ab) is non-decreasing by P15,SERIES_1:19;
 now let n,m be Nat such that
     AS: n <= m;
     R1: Partial_Sums(ab).n
      <= Partial_Sums(ab).m by AS,L1,SEQM_3:12;
     R2: 0 <= Partial_Sums(ab).m by P16;
     R3: 0 <= (Partial_Sums(ab).m) to_power (1/p)
       proof
         Q3:  Partial_Sums(ab).m = 0 or Partial_Sums(ab).m > 0 by R2;
           per cases by Q3;
             suppose Partial_Sums(ab).m = 0;
              hence 0 <= (Partial_Sums(ab).m) to_power (1/p)
                by POWER:def 2,A09;
              end;
             suppose Partial_Sums(ab).m > 0;
              hence 0 <= (Partial_Sums(ab).m) to_power (1/p) by POWER:39;
             end;
       end;
    now per cases;
      case Partial_Sums(ab).n = Partial_Sums(ab).m;
        hence (Partial_Sums(ab).n) to_power (1/p)
         <= (Partial_Sums(ab).m) to_power (1/p);
      end;
      case Partial_Sums(ab).n <> Partial_Sums(ab).m; then
              K1: Partial_Sums(ab).n < Partial_Sums(ab).m by REAL_1:def 5,R1;
                 now per cases;
                   case K21: Partial_Sums(ab).n =0;
                   (Partial_Sums(ab).n) to_power (1/p)
                   = 0 to_power (1/p) by K21
                   .=0 by POWER:def 2,A09;
                   hence (Partial_Sums(ab).n) to_power (1/p)
                   <= (Partial_Sums(ab).m) to_power (1/p) by R3;
                   end;
                  case K22: Partial_Sums(ab).n <> 0;
                  0 <= Partial_Sums(ab).n by P16; then
                  0 < Partial_Sums(ab).n by K22;
                  hence (Partial_Sums(ab).n) to_power (1/p)
                  <= (Partial_Sums(ab).m) to_power (1/p) by K1,A09,POWER:42;
               end;
              end;
              hence (Partial_Sums(ab).n) to_power (1/p)
               <= (Partial_Sums(ab).m) to_power (1/p);
      end;
   end;
   hence (Partial_Sums(ab).n) to_power (1/p)
               <= (Partial_Sums(ab).m) to_power (1/p);
   end; then
  PL: for n,m be Nat st n <= m holds
              (Partial_Sums(ab).n) to_power (1/p)
            <= (Partial_Sums(ab).m) to_power (1/p);
   now let n,m be Nat;
     assume n <= m; then
     LL1: (Partial_Sums(ab).n) to_power (1/p) 
                 <= (Partial_Sums(ab).m) to_power (1/p) by PL; 
     LL2: z.n =(Partial_Sums(ab).n) to_power (1/p) by P13;
     LL3: z.m =(Partial_Sums(ab).m) to_power (1/p) by P13;
     thus z.n <= z.m by LL1,LL2,LL3;
   end;
   hence thesis by SEQM_3:12;
 end;  
Z1: z is convergent & lim z <= lim x + lim y by P7,P12,P14,P26,LMSEQ2;
Z2: for n be Nat holds (z.n) to_power p = Partial_Sums(ab).n
proof
let n be Nat;
 L1: z.n = (Partial_Sums(ab).n) to_power (1/p) by P13;
   now per cases;
         case K21: Partial_Sums(ab).n =0;
           z.n=(Partial_Sums(ab).n) to_power (1/p) by L1
            .= 0 by POWER:def 2,A09,K21;
           hence (z.n) to_power p = 0 by POWER:def 2,A05
             .= Partial_Sums(ab).n by K21;
         end;           
         case K22: Partial_Sums(ab).n <> 0;
                   0 <= Partial_Sums(ab).n by P16; then
                   LL: 0 < Partial_Sums(ab).n by K22;
                   thus (z.n) to_power p
                   = ( (Partial_Sums(ab).n) to_power (1/p) ) to_power p
                    by L1
                  .= ( Partial_Sums(ab).n) to_power ((1/p)*p)
                 by LL,POWER:38
                  .=( Partial_Sums(ab).n) to_power 1 by A06,XCMPLX_1:107
                  .= Partial_Sums(ab).n by POWER:30;
         end;
   end;
   hence thesis;
end;
Z3: Partial_Sums(ab) is convergent 
     & lim Partial_Sums(ab) = (lim z) to_power p by Z1,Z2,P25,A05,LMSEQ3;
Z4: ab is summable & Sum(ab)= (lim z) to_power p
      by Z3,SERIES_1:def 2,SERIES_1:def 3;
  Sum(ab) to_power (1/p) = lim z
  proof
    per cases;
      suppose K21: lim z=0;
         thus Sum(ab) to_power (1/p)
           = ((lim z) to_power p) to_power (1/p) by Z4
          .= (0 to_power p) to_power (1/p) by K21
          .= 0 to_power (1/p) by POWER:def 2,A05
          .= 0 by POWER:def 2,A09
          .= lim z by K21;
      end;
      suppose lim z <> 0; then
      LL: 0 < lim z by Z1,P25,SEQ_2:31;
          thus (Sum ab) to_power (1/p)
                = (lim z) to_power ((1/p)*p) by LL,POWER:38,Z4
               .= (lim z) to_power 1 by A06,XCMPLX_1:107
               .= lim z by POWER:30;
      end;
  end;
  hence thesis by Z1,Z4,P7,P12;
end;
