:: Integers
::  by Micha{\l} J. Trybulec
::
:: Received February 7, 1990
:: Copyright (c) 1990 Association of Mizar Users

environ

 vocabularies NUMBERS, SUBSET_1, XREAL_0, ORDINAL1, ZFMISC_1, CARD_1, XBOOLE_0,
      ARYTM_1, TARSKI, ARYTM_2, ARYTM_3, ARYTM_0, REAL_1, XXREAL_0, NAT_1,
      RELAT_1, INT_1;
 notations TARSKI, XBOOLE_0, ZFMISC_1, SUBSET_1, ORDINAL1, ARYTM_2, ARYTM_1,
      NUMBERS, ARYTM_0, XCMPLX_0, XREAL_0, REAL_1, NAT_1, XXREAL_0;
 constructors FUNCT_4, ARYTM_1, ARYTM_0, XXREAL_0, REAL_1, NAT_1, FINSET_1,
      CARD_1;
 registrations ORDINAL1, NUMBERS, XXREAL_0, XREAL_0, REAL_1, NAT_1;
 requirements REAL, NUMERALS, SUBSET, BOOLE, ARITHM;
 definitions TARSKI, XBOOLE_0, CARD_1;
 theorems NAT_1, AXIOMS, TARSKI, XREAL_0, XCMPLX_0, XCMPLX_1, ZFMISC_1,
      XBOOLE_0, NUMBERS, ARYTM_0, ARYTM_2, ARYTM_1, XREAL_1, XXREAL_0,
      ORDINAL1;
 schemes NAT_1, XBOOLE_0, SUBSET_1;

begin

reserve X,x,y,z for set,
  k,l,n for Element of NAT,
  r for real number;

Lm1: z in [:{0},NAT:] \ {[0,0]} implies ex k st z = -k
proof
A1: [:{0},NAT:] c= [:{0},REAL+:] by ARYTM_2:2,ZFMISC_1:118;
  assume
A2: z in [:{0},NAT:] \ {[0,0]};
  then
A3: not z in {[0,0]} by XBOOLE_0:def 5;
  z in NAT \/ [:{0},NAT:] by A2,XBOOLE_0:def 3;
  then z in INT by A3,NUMBERS:def 4,XBOOLE_0:def 5;
  then reconsider z9 = z as Element of REAL by NUMBERS:15;
  consider x,y such that
  x in {0} and
A4: y in NAT and
A5: z = [x,y] by A2,ZFMISC_1:103;
  reconsider y as Element of NAT by A4;
  z in [:{0},NAT:] by A2;
  then consider x9,y9 being Element of REAL+ such that
A6: z9 = [0,x9] and
A7: y = y9 and
A8: +(z9,y) = y9 - x9 by A4,A1,ARYTM_0:def 2,ARYTM_2:2;
  x9 = y9 by A5,A6,A7,ZFMISC_1:33;
  then
A9: y9 - x9 = 0 by ARYTM_1:18;
  take y;
  consider x1,x2,y1,y2 being Element of REAL such that
A10: z9 = [*x1,x2*] and
A11: y = [*y1,y2*] and
A12: z9 + y = [*+(x1,y1),+(x2,y2)*] by XCMPLX_0:def 4;
A13: x2 = 0 by A10,ARYTM_0:26;
  then
A14: +(x2,y2) = 0 by A11,ARYTM_0:13,26;
  y2 = 0 by A11,ARYTM_0:26;
  then
A15: y = y1 by A11,ARYTM_0:def 7;
  z9 = x1 by A10,A13,ARYTM_0:def 7;
  then z9 + y = 0 by A12,A15,A8,A9,A14,ARYTM_0:def 7;
  hence thesis;
end;

Lm2: for k st x = -k & k <> x holds x in [:{0},NAT:] \ {[0,0]}
proof
  let k such that
A1: x = -k and
A2: k <> x;
  reconsider r = x as Element of REAL by A1;
  r + k = 0 by A1;
  then consider x1,x2,y1,y2 being Element of REAL such that
A3: r = [*x1,x2*] and
A4: k = [*y1,y2*] and
A5: 0 = [*+(x1,y1),+(x2,y2)*] by XCMPLX_0:def 4;
A6: y2 = 0 by A4,ARYTM_0:26;
  then
A7: y1 = k by A4,ARYTM_0:def 7;
  +(x2,y2) = 0 by A5,ARYTM_0:26;
  then
A8: +(x1,y1) = 0 by A5,ARYTM_0:def 7;
A9: k in omega;
A10: now
    assume x1 in REAL+;
    then consider x9,y9 being Element of REAL+ such that
A11: x1 = x9 and
A12: y1 = y9 and
A13: 0 = x9 + y9 by A9,A7,A8,ARYTM_0:def 2,ARYTM_2:2;
A14: y9 = 0 by A13,ARYTM_2:6;
    x9 = 0 by A13,ARYTM_2:6;
    hence contradiction by A2,A3,A4,A6,A11,A12,A14,ARYTM_0:26;
  end;
  x2 = 0 by A3,ARYTM_0:26;
  then
A15: x1 = r by A3,ARYTM_0:def 7;
  r in REAL+ \/ [:{0},REAL+:] by NUMBERS:def 1,XBOOLE_0:def 5;
  then x in [:{0},REAL+:] by A15,A10,XBOOLE_0:def 3;
  then consider x9,y9 being Element of REAL+ such that
A16: x1 = [0,x9] and
A17: y1 = y9 and
A18: 0 = y9 - x9 by A9,A15,A7,A8,ARYTM_0:def 2,ARYTM_2:2;
A19: 0 in {0} by TARSKI:def 1;
A20: not r in {[0,0]} by NUMBERS:def 1,XBOOLE_0:def 5;
  x9 = y9 by A18,ARYTM_0:6;
  then x in [:{0},NAT:] by A15,A7,A16,A17,A19,ZFMISC_1:106;
  hence thesis by A20,XBOOLE_0:def 5;
end;

definition
  redefine func INT means
  :Def1:
  x in it iff ex k st x = k or x = - k;
  compatibility
  proof
    let I be set;
    thus I = INT implies for x holds x in I iff ex k st x = k or x = - k
    proof
      assume
A1:   I = INT;
      let x;
      thus x in I implies ex k st x = k or x = - k
      proof
        assume
A2:     x in I;
        then
A3:     not x in {[0,0]} by A1,NUMBERS:def 4,XBOOLE_0:def 5;
        per cases by A1,A2,NUMBERS:def 4,XBOOLE_0:def 3;
        suppose
          x in NAT;
          hence thesis;
        end;
        suppose
          x in [:{0},NAT:];
          then x in [:{0},NAT:] \ {[0,0]} by A3,XBOOLE_0:def 5;
          hence thesis by Lm1;
        end;
      end;
      given k such that
A4:   x = k or x = - k;
      per cases by A4;
      suppose
A5:     x = k;
        then
A6:     not x in {[0,0]} by NUMBERS:def 1,XBOOLE_0:def 5;
        x in NAT \/ [:{0},NAT:] by A5,XBOOLE_0:def 3;
        hence thesis by A1,A6,NUMBERS:def 4,XBOOLE_0:def 5;
      end;
      suppose
        x = -k & k <> x;
        then
A7:     x in [:{0},NAT:] \ {[0,0]} by Lm2;
        then
A8:     not x in {[0,0]} by XBOOLE_0:def 5;
        x in NAT \/ [:{0},NAT:] by A7,XBOOLE_0:def 3;
        hence thesis by A1,A8,NUMBERS:def 4,XBOOLE_0:def 5;
      end;
    end;
    assume
A9: for x holds x in I iff ex k st x = k or x = - k;
    thus I c= INT
    proof
      let x;
      assume x in I;
      then consider k such that
A10:  x = k or x = - k by A9;
      per cases by A10;
      suppose
A11:    x = k;
        then
A12:    not x in {[0,0]} by NUMBERS:def 1,XBOOLE_0:def 5;
        x in NAT \/ [:{0},NAT:] by A11,XBOOLE_0:def 3;
        hence thesis by A12,NUMBERS:def 4,XBOOLE_0:def 5;
      end;
      suppose
        x = -k & k <> x;
        then
A13:    x in [:{0},NAT:] \ {[0,0]} by Lm2;
        then
A14:    not x in {[0,0]} by XBOOLE_0:def 5;
        x in NAT \/ [:{0},NAT:] by A13,XBOOLE_0:def 3;
        hence thesis by A14,NUMBERS:def 4,XBOOLE_0:def 5;
      end;
    end;
    let x;
    assume
A15: x in INT;
    then
A16: not x in {[0,0]} by NUMBERS:def 4,XBOOLE_0:def 5;
    per cases by A15,NUMBERS:def 4,XBOOLE_0:def 3;
    suppose
      x in NAT;
      hence thesis by A9;
    end;
    suppose
      x in [:{0},NAT:];
      then x in [:{0},NAT:] \ {[0,0]} by A16,XBOOLE_0:def 5;
      then ex k st x = k or x = - k by Lm1;
      hence thesis by A9;
    end;
  end;
end;

definition
  let i be number;
  attr i is integer means
  :Def2:
  i in INT;
end;

registration
  cluster integer Real;
  existence
  proof
    take 0;
    thus 0 in INT by Def1;
  end;
  cluster integer number;
  existence
  proof
    take 0;
    thus 0 in INT by Def1;
  end;
  cluster -> integer Element of INT;
  coherence by Def2;
end;

definition
  mode Integer is integer number;
end;

canceled 6;

theorem Th7:
  for k being natural number st r = k or r = -k holds r is Integer
proof
  let k be natural number;
  assume
A1: r = k or r = -k;
  k in NAT by ORDINAL1:def 13;
  then r in INT by A1,Def1;
  hence thesis;
end;

theorem Th8:
  r is Integer implies ex k st r = k or r = - k
proof
  assume r is Integer;
  then r is Element of INT by Def2;
  hence thesis by Def1;
end;

:: Relations between sets INT, NAT and REAL ( and their elements )

registration
  cluster -> integer Element of NAT;
  coherence by Th7;
  cluster natural -> integer number;
  coherence by Th7;
end;

Lm3: x in INT implies x in REAL by NUMBERS:15;

registration
  cluster integer -> real number;
  coherence
  proof
    let n be number;
    assume n is integer;
    then n is Element of INT by Def2;
    then reconsider n as Element of REAL by Lm3;
    n is real;
    hence thesis;
  end;
end;

reserve i,i0,i1,i2,i3,i4,i5,i8,i9,j for Integer;

registration
  let i1,i2 be Integer;
  cluster i1 + i2 -> integer;
  coherence
  proof
    consider l such that
A1: i2 = l or i2 = - l by Th8;
    consider k such that
A2: i1 = k or i1 = - k by Th8;
A3: now
A4:   now
        assume l - k <= 0;
        then l <= 0 + k by XREAL_1:22;
        then consider z being Nat such that
A5:     k = l + z by NAT_1:10;
        - z = - k + l by A5;
        hence l - k is Integer by Th7;
      end;
      assume that
A6:   i1 = - k and
A7:   i2 = l;
      now
        assume 0 <= l - k;
        then 0 + k <= l by XREAL_1:21;
        then ex z being Nat st l = k + z by NAT_1:10;
        hence l - k is Integer;
      end;
      hence i1 + i2 is Integer by A6,A7,A4;
    end;
A8: now
A9:   now
        assume k - l <= 0;
        then k <= 0 + l by XREAL_1:22;
        then consider z being Nat such that
A10:    l = k + z by NAT_1:10;
        - z = - l + k by A10;
        hence k - l is Integer by Th7;
      end;
      assume that
A11:  i1 = k and
A12:  i2 = - l;
      now
        assume 0 <= k - l;
        then 0 + l <= k by XREAL_1:21;
        then ex z being Nat st k = l + z by NAT_1:10;
        hence k - l is Integer;
      end;
      hence i1 + i2 is Integer by A11,A12,A9;
    end;
    now
      assume that
A13:  i1 = - k and
A14:  i2 = - l;
      i1 + i2 = - (k + l) by A13,A14;
      hence i1 + i2 is Integer by Th7;
    end;
    hence thesis by A2,A1,A8,A3;
  end;
  cluster i1 * i2 -> integer;
  coherence
  proof
    consider l such that
A15: i2 = l or i2 = - l by Th8;
    consider k such that
A16: i1 = k or i1 = - k by Th8;
A17: now
      assume that
A18:  i1 = - k and
A19:  i2 = - l;
      i1 * i2 = k * l by A18,A19;
      hence i1 * i2 is Integer;
    end;
    now
      assume i1 = - k & i2 = l or i1 = k & i2 = - l;
      then i1 * i2 = - (k * l);
      hence i1 * i2 is Integer by Th7;
    end;
    hence thesis by A16,A15,A17;
  end;
end;

registration
  let i0 be Integer;
  cluster - i0 -> integer;
  coherence
  proof
    ex k st i0 = k or i0 = - k by Th8;
    hence thesis by Th7;
  end;
end;

registration
  let i1,i2 be Integer;
  cluster i1 - i2 -> integer;
  coherence
  proof
    i1 - i2 = i1 + (- i2);
    hence thesis;
  end;
end;

:: Some basic theorems about integers

canceled 7;

theorem Th16:
  0 <= i0 implies i0 in NAT
proof
  consider k such that
A1: i0 = k or i0 = - k by Th8;
  assume 0 <= i0;
  then i0 = - k implies i0 is Element of NAT;
  hence thesis by A1;
end;

theorem
  r is Integer implies r + 1 is Integer & r - 1 is Integer;

theorem Th18:
  i2 <= i1 implies i1 - i2 in NAT
proof
  assume i2 <= i1;
  then i2 - i2 <= i1 - i2 by XREAL_1:11;
  hence thesis by Th16;
end;

theorem Th19:
  i1 + k = i2 implies i1 <= i2
proof
  reconsider i0 = k as Integer;
  assume i1 + k = i2;
  then 0 + (i1 + k) <= k + i2 by XREAL_1:8;
  then i1 + i0 - i0 <= i2 + i0 - i0 by XREAL_1:11;
  hence thesis;
end;

Lm4: for j being Element of NAT holds j < 1 implies j = 0
proof
  let j be Element of NAT;
  assume j < 1;
  then j < 0 + 1;
  hence thesis by NAT_1:13;
end;

Lm5: 0 < i1 implies 1 <= i1
proof
  assume
A1: 0 < i1;
  then reconsider i2 = i1 as Element of NAT by Th16;
  0 <> i2 by A1;
  hence thesis by Lm4;
end;

theorem Th20:
  i0 < i1 implies i0 + 1 <= i1
proof
  assume i0 < i1;
  then i0 + (- i0) < i1 + (- i0) by XREAL_1:8;
  then 1 <= i1 + (- i0) by Lm5;
  then 1 + i0 <= i1 + (- i0) + i0 by XREAL_1:8;
  hence thesis;
end;

theorem Th21:
  i1 < 0 implies i1 <= - 1
proof
  assume i1 < 0;
  then 0 < - i1 by XREAL_1:60;
  then 1 <= - i1 by Lm5;
  then - - i1 <= - 1 by XREAL_1:26;
  hence thesis;
end;

theorem Th22:
  i1 * i2 = 1 iff i1 = 1 & i2 = 1 or i1 = - 1 & i2 = - 1
proof
  thus i1 * i2 = 1 implies i1 = 1 & i2 = 1 or i1 = - 1 & i2 = - 1
  proof
    assume
A1: i1 * i2 = 1;
    then
A2: not i2 = 0;
A3: now
A4:   (- i1) * (- i2) = i1 * i2;
      assume that
A5:   i1 < 0 and
A6:   i2 < 0;
A7:   -i2 is Element of NAT by A6,Th16;
      -i1 is Element of NAT by A5,Th16;
      then - (- i1) = - 1 by A1,A7,A4,NAT_1:15;
      hence i1 = - 1 & i2 = - 1 by A1;
    end;
A8: now
      assume that
A9:   0 < i1 and
A10:  0 < i2;
A11:  i2 is Element of NAT by A10,Th16;
      i1 is Element of NAT by A9,Th16;
      hence i1 = 1 & i2 = 1 by A1,A11,NAT_1:15;
    end;
    not i1 = 0 by A1;
    hence thesis by A1,A2,A8,A3;
  end;
  thus thesis;
end;

theorem
  i1 * i2 = - 1 iff i1 = - 1 & i2 = 1 or i1 = 1 & i2 = - 1
proof
  thus i1 * i2 = - 1 implies i1 = - 1 & i2 = 1 or i1 = 1 & i2 = - 1
  proof
    assume i1 * i2 = - 1;
    then (- i1) * i2 = 1;
    then - (- i1) = - 1 & i2 = 1 or - i1 = - 1 & i2 = - 1 by Th22;
    hence thesis;
  end;
  assume i1 = - 1 & i2 = 1 or i1 = 1 & i2 = - 1;
  hence thesis;
end;

Lm6: i0 <= i1 implies ex k st i0 + k = i1
proof
  assume i0 <= i1;
  then reconsider k = i1 - i0 as Element of NAT by Th18;
  i0 + k = i1;
  hence thesis;
end;

Lm7: i0 <= i1 implies ex k st i1 - k = i0
proof
  assume i0 <= i1;
  then reconsider k = i1 - i0 as Element of NAT by Th18;
  i1 - k = i0;
  hence thesis;
end;

scheme
  SepInt { P[Integer] } : ex X being Subset of INT st for x being Integer
  holds x in X iff P[x] proof
  defpred P1[set] means ex i0 st i0 = $1 & P[i0];
  consider X such that
A1: for y holds y in X iff y in INT & P1[y] from XBOOLE_0:sch 1;
  y in X implies y in INT by A1;
  then reconsider X as Subset of INT by TARSKI:def 3;
  take X;
  let i0;
A2: i0 in X implies P[i0]
  proof
    assume i0 in X;
    then ex i1 st i0 = i1 & P[i1] by A1;
    hence thesis;
  end;
  P[i0] implies i0 in X
  proof
    assume
A3: P[i0];
    i0 in INT by Def2;
    hence thesis by A1,A3;
  end;
  hence thesis by A2;
end;

scheme
  IntIndUp { F() -> Integer, P[Integer] } : for i0 st F() <= i0 holds P[i0]
provided
A1: P[F()] and
A2: for i2 st F() <= i2 holds P[i2] implies P[i2 + 1]
proof
  defpred Q[natural number] means for i2 st $1 = i2 - F() holds P[i2];
A3: for k st Q[k] holds Q[k + 1]
  proof
    let k;
    reconsider i8 = k as Integer;
    assume
A4: Q[k];
    let i2;
    assume
A5: k + 1 = i2 - F();
    then i2 - 1 = i8 + F();
    then
A6: F() <= i2 - 1 by Th19;
    k = i2 - 1 - F() by A5;
    then P[i2 - 1 + 1] by A2,A4,A6;
    hence thesis;
  end;
  let i0;
  assume F() <= i0;
  then reconsider l = i0 - F() as Element of NAT by Th18;
A7: l = i0 - F();
A8: Q[0] by A1;
  for k holds Q[k] from NAT_1:sch 1(A8,A3);
  hence thesis by A7;
end;

scheme
  IntIndDown { F() -> Integer, P[Integer] } : for i0 st i0 <= F() holds P[i0]
provided
A1: P[F()] and
A2: for i2 st i2 <= F() holds P[i2] implies P[i2 - 1]
proof
  defpred Q[Integer] means for i2 st $1 = - i2 holds P[i2];
A3: for i2 st - F() <= i2 holds Q[i2] implies Q[i2 + 1]
  proof
    let i2;
    assume that
A4: - F() <= i2 and
A5: Q[i2];
    let i3;
    assume
A6: i2 + 1 = - i3;
    then
A7: i2 = - (i3 + 1);
    - (- i3 - 1) <= - (- F()) by A4,A6,XREAL_1:26;
    then P[i3 + 1 - 1] by A2,A5,A7;
    hence thesis;
  end;
  let i0;
  assume i0 <= F();
  then
A8: - F() <= - i0 by XREAL_1:26;
A9: Q[- F()] by A1;
  for i2 st - F() <= i2 holds Q[i2] from IntIndUp(A9,A3);
  hence thesis by A8;
end;

scheme
  IntIndFull { F() -> Integer, P[Integer] } : for i0 holds P[i0]
provided
A1: P[F()] and
A2: for i2 holds P[i2] implies P[i2 - 1] & P[i2 + 1]
proof
  let i0;
A3: P[F()] by A1;
A4: now
A5: for i2 st i2 <= F() holds P[i2] implies P[i2 - 1] by A2;
A6: for i2 st i2 <= F() holds P[i2] from IntIndDown(A3,A5);
    assume i0 <= F();
    hence thesis by A6;
  end;
  now
A7: for i2 st F() <= i2 holds P[i2] implies P[i2 + 1] by A2;
A8: for i2 st F() <= i2 holds P[i2] from IntIndUp(A3,A7);
    assume F() <= i0;
    hence thesis by A8;
  end;
  hence thesis by A4;
end;

scheme
  IntMin { F() -> Integer, P[Integer] } : ex i0 st P[i0] & for i1 st P[i1]
  holds i0 <= i1
provided
A1: for i1 st P[i1] holds F() <= i1 and
A2: ex i1 st P[i1]
proof
  defpred Q[Nat] means P[F() + $1];
  consider i1 such that
A3: P[i1] by A2;
  ex k st F() + k = i1 by A1,A3,Lm6;
  then
A4: ex k be Nat st Q[k] by A3;
  consider l be Nat such that
A5: Q[l] & for n be Nat st Q[n] holds l <= n from NAT_1:sch 5(A4);
  take i0 = F() + l;
  for i1 st P[i1] holds i0 <= i1
  proof
    let i1;
    assume
A6: P[i1];
    then ex n st F() + n = i1 by A1,Lm6;
    then i0 - F() <= i1 - F() by A5,A6;
    hence thesis by XREAL_1:11;
  end;
  hence thesis by A5;
end;

scheme
  IntMax { F() -> Integer, P[Integer] } : ex i0 st P[i0] & for i1 st P[i1]
  holds i1 <= i0
provided
A1: for i1 st P[i1] holds i1 <= F() and
A2: ex i1 st P[i1]
proof
  defpred Q[Nat] means P[F() - $1];
  consider i1 such that
A3: P[i1] by A2;
  ex k st i1 = F() - k by A1,A3,Lm7;
  then
A4: ex k be Nat st Q[k] by A3;
  consider l be Nat such that
A5: Q[l] & for n be Nat st Q[n] holds l <= n from NAT_1:sch 5(A4);
  take i0 = F() - l;
  for i1 st P[i1] holds i1 <= i0
  proof
    let i1;
    assume
A6: P[i1];
    then consider n such that
A7: F() - n = i1 by A1,Lm7;
    l <= n by A5,A6,A7;
    then F() + (- i0) - F() <= F() - i1 - F() by A7,XREAL_1:11;
    then - i0 <= F() + (- i1) - F();
    hence thesis by XREAL_1:26;
  end;
  hence thesis by A5;
end;

:: abs and sgn functions with integers

definition
  let i1,i2,i3 be Integer;
  pred i1,i2 are_congruent_mod i3 means
  :Def3:
  ex i4 st i3 * i4 = i1 - i2;
end;

canceled 8;

theorem
  i1,i1 are_congruent_mod i2
proof
  i2 * 0 = i1 - i1;
  hence thesis by Def3;
end;

theorem
  i1,0 are_congruent_mod i1 & 0,i1 are_congruent_mod i1
proof
A1: i1 * (- 1) = 0 - i1;
  i1 * 1 = i1 - 0;
  hence thesis by A1,Def3;
end;

theorem
  i1,i2 are_congruent_mod 1
proof
  i1 - i2 = 1 * (i1 - i2);
  hence thesis by Def3;
end;

theorem
  i1,i2 are_congruent_mod i3 implies i2,i1 are_congruent_mod i3
proof
  assume i1,i2 are_congruent_mod i3;
  then consider i0 such that
A1: (i1 - i2) = i3 * i0 by Def3;
  i2 - i1 = i3 * (- i0) by A1;
  hence thesis by Def3;
end;

theorem
  i1,i2 are_congruent_mod i5 & i2,i3 are_congruent_mod i5 implies i1,i3
  are_congruent_mod i5
proof
  assume that
A1: i1,i2 are_congruent_mod i5 and
A2: i2,i3 are_congruent_mod i5;
  consider i8 such that
A3: i5 * i8 = i1 - i2 by A1,Def3;
  consider i9 such that
A4: i5 * i9 = i2 - i3 by A2,Def3;
  i5 * (i8 + i9) = i1 - i3 by A3,A4;
  hence thesis by Def3;
end;

theorem
  i1,i2 are_congruent_mod i5 & i3,i4 are_congruent_mod i5 implies (i1 +
  i3),(i2 + i4) are_congruent_mod i5
proof
  assume that
A1: i1,i2 are_congruent_mod i5 and
A2: i3,i4 are_congruent_mod i5;
  consider i8 such that
A3: i5 * i8 = i1 - i2 by A1,Def3;
  consider i9 such that
A4: i5 * i9 = i3 - i4 by A2,Def3;
  i5 * (i8 + i9) = (i1 + i3) - (i2 + i4) by A3,A4;
  hence thesis by Def3;
end;

theorem
  i1,i2 are_congruent_mod i5 & i3,i4 are_congruent_mod i5 implies (i1 -
  i3),(i2 - i4) are_congruent_mod i5
proof
  assume that
A1: i1,i2 are_congruent_mod i5 and
A2: i3,i4 are_congruent_mod i5;
  consider i8 such that
A3: i5 * i8 = i1 - i2 by A1,Def3;
  consider i9 such that
A4: i5 * i9 = i3 - i4 by A2,Def3;
  (i1 - i3) - (i2 - i4) = i5 * (i8 - i9) by A3,A4;
  hence thesis by Def3;
end;

theorem
  i1,i2 are_congruent_mod i5 & i3,i4 are_congruent_mod i5 implies (i1 *
  i3),(i2 * i4) are_congruent_mod i5
proof
  assume that
A1: i1,i2 are_congruent_mod i5 and
A2: i3,i4 are_congruent_mod i5;
  consider i8 such that
A3: i5 * i8 = i1 - i2 by A1,Def3;
  consider i9 such that
A4: i5 * i9 = i3 - i4 by A2,Def3;
  (i1 * i3) - (i2 * i4) = (i1 - i2) * i3 + (i3 - i4) * i2
    .= (i5 * i8) * i3 + (i5 * i9) * i2 by A3,A4
    .= i5 * ((i8 * i3) + (i9 * i2));
  hence thesis by Def3;
end;

theorem
  (i1 + i2),i3 are_congruent_mod i5 iff i1, (i3 - i2) are_congruent_mod i5
proof
  thus (i1 + i2),i3 are_congruent_mod i5 implies i1,(i3 - i2)
  are_congruent_mod i5
  proof
    assume (i1 + i2),i3 are_congruent_mod i5;
    then
A1: ex i0 st i5 * i0 = (i1 + i2) - i3 by Def3;
    (i1 + i2) - i3 = i1 - (i3 - i2);
    hence thesis by A1,Def3;
  end;
  assume i1, (i3 - i2) are_congruent_mod i5;
  then
A2: ex i0 st i5 * i0 = i1 - (i3 - i2) by Def3;
  i1 - (i3 - i2) = (i1 + i2) - i3;
  hence thesis by A2,Def3;
end;

theorem
  i4 * i5 = i3 implies (i1,i2 are_congruent_mod i3 implies i1,i2
  are_congruent_mod i4)
proof
  assume
A1: i4 * i5 = i3;
  assume i1,i2 are_congruent_mod i3;
  then consider i0 such that
A2: i3 * i0 = i1 - i2 by Def3;
  i1 - i2 = i4 * (i5 * i0) by A1,A2;
  hence thesis by Def3;
end;

theorem
  i1,i2 are_congruent_mod i5 iff (i1 + i5),i2 are_congruent_mod i5
proof
  thus i1,i2 are_congruent_mod i5 implies (i1 + i5),i2 are_congruent_mod i5
  proof
    assume i1,i2 are_congruent_mod i5;
    then consider i0 such that
A1: i5 * i0 = i1 - i2 by Def3;
    i5 * (i0 + 1) = (i1 + i5) - i2 by A1;
    hence thesis by Def3;
  end;
  assume (i1 + i5),i2 are_congruent_mod i5;
  then consider i0 such that
A2: i5 * i0 = (i1 + i5) - i2 by Def3;
  i5 * (i0 - 1) = i1 - i2 by A2;
  hence thesis by Def3;
end;

theorem
  i1,i2 are_congruent_mod i5 iff (i1 - i5),i2 are_congruent_mod i5
proof
  thus i1,i2 are_congruent_mod i5 implies (i1 - i5),i2 are_congruent_mod i5
  proof
    assume i1,i2 are_congruent_mod i5;
    then consider i0 such that
A1: i5 * i0 = i1 - i2 by Def3;
    i5 * (i0 - 1) = (i1 - i5) - i2 by A1;
    hence thesis by Def3;
  end;
  assume (i1 - i5),i2 are_congruent_mod i5;
  then consider i0 such that
A2: i5 * i0 = (i1 - i5) - i2 by Def3;
  i5 * (i0 + 1) = i1 - i2 by A2;
  hence thesis by Def3;
end;

theorem Th44:
  i1 <= r & r - 1 < i1 & i2 <= r & r - 1 < i2 implies i1 = i2
proof
  assume that
A1: i1 <= r and
A2: r - 1 < i1 and
A3: i2 <= r and
A4: r - 1 < i2;
  i2 = i1 + (i2 - i1);
  then consider i0 such that
A5: i2 = i1 + i0;
A6: now
    assume that
A7: 0 < i0 and
    i1 <> i2;
    1 <= i0 by A7,Lm5;
    then r - 1 + 1 < i1 + i0 by A2,XREAL_1:10;
    hence contradiction by A3,A5;
  end;
A8: now
    assume that
A9: i0 < 0 and
    i1 <> i2;
    i0 <= - 1 by A9,Th21;
    then i1 + i0 <= r + (- 1) by A1,XREAL_1:9;
    hence contradiction by A4,A5;
  end;
  i0 = 0 implies i2 = i1 by A5;
  hence thesis by A8,A6;
end;

theorem Th45:
  r <= i1 & i1 < r + 1 & r <= i2 & i2 < r + 1 implies i1 = i2
proof
  assume that
A1: r <= i1 and
A2: i1 < r + 1 and
A3: r <= i2 and
A4: i2 < r + 1;
  i2 = i1 + (i2 - i1);
  then consider i0 such that
A5: i2 = i1 + i0;
A6: now
    assume that
A7: i0 < 0 and
    i1 <> i2;
    i0 <= - 1 by A7,Th21;
    then i1 + i0 < r + 1 + (- 1) by A2,XREAL_1:10;
    hence contradiction by A3,A5;
  end;
A8: now
    assume that
A9: 0 < i0 and
    i1 <> i2;
    1 <= i0 by A9,Lm5;
    hence contradiction by A1,A4,A5,XREAL_1:9;
  end;
  i0 = 0 implies i2 = i1 by A5;
  hence thesis by A6,A8;
end;

reserve r1,p,p1,g,g1,g2 for real number,
  Y for Subset of REAL;

Lm8: for r ex n st r<n
proof
  defpred P[Real] means for r st r in NAT holds not $1<r;
  let r;
  consider Y such that
A1: for p1 being Real holds p1 in Y iff P[p1] from SUBSET_1:sch 3;
  for r,p1 st r in NAT & p1 in Y holds r <= p1 by A1;
  then consider g2 such that
A2: for r,p st r in NAT & p in Y holds r <= g2 & g2 <= p by AXIOMS:26;
A3: g2+-1<g2+0 by XREAL_1:8;
  for g ex r st r in NAT & g<r
  proof
    given g1 such that
A4: for r st r in NAT holds not g1<r;
    g1 is Real by XREAL_0:def 1;
    then
A5: g1 in Y by A1,A4;
    now
      assume not g2-1 in Y;
      then consider r1 such that
A6:   r1 in NAT and
A7:   g2-1<r1 by A1;
A8:   r1+1 in NAT by A6,AXIOMS:28;
      g2-1+1<r1+1 by A7,XREAL_1:8;
      hence contradiction by A2,A5,A8;
    end;
    hence contradiction by A2,A3;
  end;
  then consider p such that
A9: p in NAT and
A10: r<p;
  reconsider p as Element of NAT by A9;
  take p;
  thus thesis by A10;
end;

definition
  let r be real number;
  func [\ r /] -> Integer means
  :Def4:
  it <= r & r - 1 < it;
  existence
  proof
    defpred P[Integer] means r < $1;
    consider n such that
A1: - r < n by Lm8;
A2: - n < -- r by A1,XREAL_1:26;
A3: for i1 st P[i1] holds -n <= i1
    proof
      let i1;
      assume r < i1;
      then r + -n < i1 + r by A2,XREAL_1:10;
      hence thesis by XREAL_1:8;
    end;
    ex n st r < n by Lm8;
    then
A4: ex i0 st P[i0];
    consider i1 such that
A5: P[i1] & for i2 st P[i2] holds i1 <= i2 from IntMin(A3,A4);
A6: r - 1 < i1 - 1 by A5,XREAL_1:11;
    r < i1 - 1 implies i1 <= i1-1 by A5;
    hence thesis by A6,XREAL_1:148;
  end;
  uniqueness by Th44;
end;

canceled;

theorem Th47:
  [\ r /] = r iff r is integer
proof
  r is Integer implies [\ r /] = r
  proof
    r + 0 < r + 1 by XREAL_1:8;
    then
A1: r - 1 < r + 1 - 1 by XREAL_1:11;
    assume r is Integer;
    hence thesis by A1,Def4;
  end;
  hence thesis;
end;

theorem Th48:
  [\ r /] < r iff r is not integer
proof
  now
    assume
A1: not r is Integer;
    [\ r /] <= r by Def4;
    hence [\ r /] < r by A1,XXREAL_0:1;
  end;
  hence thesis by Th47;
end;

canceled;

theorem
  [\ r /] - 1 < r & [\ r /] < r + 1
proof
  [\ r /] <= r by Def4;
  then
A1: [\ r /] + 0 < r + 1 by XREAL_1:10;
  then [\ r /] + (- 1) < r + 1 + (- 1) by XREAL_1:8;
  hence thesis by A1;
end;

theorem Th51:
  [\ r /] + i0 = [\ r + i0 /]
proof
  r - 1 < [\ r /] by Def4;
  then r - 1 + i0 < [\ r /] + i0 by XREAL_1:8;
  then
A1: r + i0 - 1 < [\ r /] + i0;
  [\ r /] <= r by Def4;
  then [\ r /] + i0 <= r + i0 by XREAL_1:8;
  hence thesis by A1,Def4;
end;

theorem Th52:
  r < [\ r /] + 1
proof
  r - 1 < [\ r /] by Def4;
  then r - 1 + 1 < [\ r /] + 1 by XREAL_1:8;
  hence thesis;
end;

definition
  let r be real number;
  func [/ r \] -> Integer means
  :Def5:
  r <= it & it < r + 1;
  existence
  proof
A1: now
A2:   r + 0 < r + 1 by XREAL_1:8;
      assume r is Integer;
      hence r <= [\ r /] & [\ r /] < r + 1 by A2,Th47;
    end;
    now
      assume not r is Integer;
      then [\ r /] < r by Th48;
      hence r <= [\ r /] + 1 & [\ r /] + 1 < r + 1 by Th52,XREAL_1:8;
    end;
    hence thesis by A1;
  end;
  uniqueness by Th45;
end;

canceled;

theorem Th54:
  [/ r \] = r iff r is integer
proof
  r + 0 < r + 1 by XREAL_1:8;
  hence thesis by Def5;
end;

theorem Th55:
  r < [/ r \] iff r is not integer
proof
  now
    assume
A1: not r is Integer;
    r <= [/ r \] by Def5;
    hence r < [/ r \] by A1,XXREAL_0:1;
  end;
  hence thesis by Th54;
end;

canceled;

theorem
  r - 1 < [/ r \] & r < [/ r \] + 1
proof
  r <= [/ r \] by Def5;
  then
A1: r + 0 < [/ r \] + 1 by XREAL_1:10;
  then r + (- 1) < [/ r \] + 1 + (- 1) by XREAL_1:8;
  hence thesis by A1;
end;

theorem
  [/ r \] + i0 = [/ r + i0 \]
proof
  [/ r \] < r + 1 by Def5;
  then [/ r \] + i0 < r + 1 + i0 by XREAL_1:8;
  then
A1: [/ r \] + i0 < r + i0 + 1;
  r <= [/ r \] by Def5;
  then r + i0 <= [/ r \] + i0 by XREAL_1:8;
  hence thesis by A1,Def5;
end;

theorem Th59:
  [\ r /] = [/ r \] iff r is integer
proof
A1: now
    assume
A2: not r is Integer;
    then [\ r /] < r by Th48;
    hence [\ r /] <> [/ r \] by A2,Th55;
  end;
  now
    assume r is Integer;
    hence [\ r /] = r & r = [/ r \] by Th47,Th54;
    hence [\ r /] = [/ r \];
  end;
  hence thesis by A1;
end;

theorem Th60:
  [\ r /] < [/ r \] iff r is not integer
proof
  now
    assume
A1: not r is Integer;
    then
A2: r < [/ r \] by Th55;
    [\ r /] < r by A1,Th48;
    hence [\ r /] < [/ r \] by A2,XXREAL_0:2;
  end;
  hence thesis by Th59;
end;

theorem
  [\ r /] <= [/ r \]
proof
A1: r <= [/ r \] by Def5;
  [\ r /] <= r by Def4;
  hence thesis by A1,XXREAL_0:2;
end;

theorem
  [\ ([/ r \]) /] = [/ r \] by Th47;

theorem
  [\ ([\ r /]) /] = [\ r /] by Th47;

theorem
  [/ ([/ r \]) \] = [/ r \] by Th54;

theorem
  [/ ([\ r /]) \] = [\ r /] by Th54;

theorem
  [\ r /] = [/ r \] iff not [\ r /] + 1 = [/ r \]
proof
  set Diff = [/ r \] + (- [\ r /]);
A1: now
    assume not r is Integer;
    then [\ r /] < [/ r \] by Th60;
    then [\ r /] + (- [\ r /]) < Diff by XREAL_1:8;
    then
A2: 1 <= Diff by Lm5;
    r - 1 < [\ r /] by Def4;
    then
A3: - [\ r /] < - (r - 1) by XREAL_1:26;
    [/ r \] < r + 1 by Def5;
    then Diff < r + 1 + (- (r - 1)) by A3,XREAL_1:10;
    then Diff + 1 + (- 1) <= 1 + 1 + (- 1) by Th20;
    then [\ r /] + 1 = [\ r /] + Diff by A2,XXREAL_0:1;
    hence [\ r /] + 1 = [/ r \] & [\ r /] <> [/ r \];
  end;
  now
    assume r is Integer;
    then [\ r /] = [/ r \] by Th59;
    hence [\ r /] = [/ r \] & [\ r /] + 1 <> [/ r \];
  end;
  hence thesis by A1;
end;

definition
  let r be real number;
  func frac r equals
  r - [\ r /];
  coherence;
end;

registration
  let r be real number;
  cluster frac r -> real;
  coherence;
end;

definition
  let r be real number;
  redefine func frac r -> Real;
  coherence by XREAL_0:def 1;
end;

canceled;

theorem
  r = [\ r /] + frac r;

theorem Th69:
  frac r < 1 & 0 <= frac r
proof
  r - 1 < [\ r /] by Def4;
  then frac r + (r - 1) < r - [\ r /] + [\ r /] by XREAL_1:8;
  then frac r + (- 1) + r - r < r - r by XREAL_1:11;
  then
A1: frac r - 1 + 1 < 0 + 1 by XREAL_1:8;
  [\ r /] <= r by Def4;
  then [\ r /] + (r - [\ r /]) <= r + frac r by XREAL_1:8;
  then r - r <= r + frac r - r by XREAL_1:11;
  hence thesis by A1;
end;

theorem
  [\ frac r /] = 0
proof
  [\ frac r /] = [\ (r + (- [\ r /])) /] .= [\ r /] + (- [\ r /]) by Th51
    .= 0;
  hence thesis;
end;

theorem Th71:
  frac r = 0 iff r is integer
proof
  now
    assume r is Integer;
    then r = [\ r /] by Th47;
    hence frac r = 0;
  end;
  hence thesis;
end;

theorem
  0 < frac r iff r is not integer
proof
  now
    assume not r is Integer;
    then 0 <> frac r;
    hence 0 < frac r by Th69;
  end;
  hence thesis by Th71;
end;

:: Functions div and mod

definition
  let i1,i2 be Integer;
  func i1 div i2 -> Integer equals
  [\ i1 / i2 /];
  correctness;
end;

definition
  let i1,i2 be Integer;
  func i1 mod i2 -> Integer equals
  :Def8:
  i1 - (i1 div i2) * i2 if i2 <> 0
  otherwise 0;
  correctness;
end;

:: The divisibility relation

definition
  let i1,i2 be Integer;
  pred i1 divides i2 means
  :Def9:
  ex i3 st i2 = i1 * i3;
  reflexivity
  proof
    reconsider x = 1 as Integer;
    let a be Integer;
    take x;
    thus thesis;
  end;
end;

canceled;

theorem Th74:
  for r being real number st r <> 0 holds [\ r / r /] = 1
proof
  let r be real number;
  assume r <> 0;
  hence [\ r / r /] = [\ 1 /] by XCMPLX_1:60
    .= 1 by Th47;
end;

theorem
  for i being Integer holds i div 0 = 0
proof
  let i be Integer;
A1: i / 0 = i * 0" by XCMPLX_0:def 9
    .= i * 0;
  0 - 1 < 0;
  hence thesis by A1,Def4;
end;

theorem
  for i being Integer st i <> 0 holds i div i = 1 by Th74;

theorem
  for i being Integer holds i mod i = 0
proof
  let i be Integer;
  per cases;
  suppose
    i = 0;
    hence thesis by Def8;
  end;
  suppose
A1: i <> 0;
    hence i mod i = i - (i div i) * i by Def8
      .= i - 1 * i by A1,Th74
      .= 0;
  end;
end;

begin :: Addenda
:: from FSM_1

theorem
  for k, i being Integer holds
  k < i implies ex j being Element of NAT st j = i-k & 1 <= j
proof
  let k,i be Integer;
  assume k < i;
  then
A1: k - k < i - k by XREAL_1:11;
  then reconsider j = i - k as Element of NAT by Th16;
  reconsider j9 = j, 09 = 0 as Integer;
  take j;
  thus j = i - k;
  09 + 1 <= j9 by A1,Th20;
  hence thesis;
end;

:: from SCMFSA_7, 2005.02.05, A.T.

theorem Th79:
  for a,b being Integer st a < b holds a <= b - 1
proof
  let a,b be Integer;
  assume a < b;
  then a - 1 < b - 1 by XREAL_1:11;
  then a - 1 + 1 <= b - 1 by Th20;
  hence thesis;
end;

:: from UNIFORM1, 2005.08.22, A.T.

theorem
  for r being real number st r>=0 holds [/ r \]>=0 & [\ r /]>=0 &
  [/ r \] is Element of NAT & [\ r /] is Element of NAT
proof
  let r be real number;
  assume
A1: r>=0;
A2: r<=[/ r \] by Def5;
  r-1<[\ r /] by Def4;
  then r-1+1<[\ r /]+1 by XREAL_1:8;
  then 0-1<[\ r /]+1-1 by A1,XREAL_1:11;
  then [\ r /]>=0 by Th21;
  hence thesis by A1,A2,Th16;
end;

:: from SCMFSA9A, 2005.11.16, A.T.

theorem Th81:
  for i being Integer, r being real number st i <= r holds i <= [\ r /]
proof
  let i be Integer;
  let r be real number;
  assume i <= r;
  then
A1: i-1 <= r-1 by XREAL_1:11;
  r-1 < [\ r /] by Def4;
  then i-1 < [\ r /] by A1,XXREAL_0:2;
  then i-1+1 <= [\ r /] by Th20;
  hence thesis;
end;

theorem
  for m,n being natural number holds 0 <= m qua Integer div n by Th81;

:: from SCMFSA9A, 2006.03.14, A.T.

theorem
  0 < i & 1 < j implies i div j < i
proof
  assume that
A1: 0 < i and
A2: 1 < j;
  assume
A3: i <= i div j;
  i div j <= i/j by Def4;
  then j * (i div j) <= j * (i/j) by A2,XREAL_1:66;
  then j * (i div j) <= i by A2,XCMPLX_1:88;
  then j * (i div j) <= i div j by A3,XXREAL_0:2;
  then j * (i div j) * (i div j)" <= (i div j) * (i div j)" by A1,A3,
  XREAL_1
  :66;
  then j * ((i div j) * (i div j)") <= (i div j) * (i div j)";
  then j * 1 <= (i div j) * (i div j)" by A1,A3,XCMPLX_0:def 7;
  hence contradiction by A1,A2,A3,XCMPLX_0:def 7;
end;

:: from NEWTON, 2007.01.02, AK

theorem
  i2 >= 0 implies i1 mod i2 >= 0
proof
  assume
A1: i2 >= 0;
  per cases by A1;
  suppose
A2: i2 > 0;
    [\ i1/i2 /] <= i1/i2 by Def4;
    then (i1 div i2)*i2 <= (i1/i2)*i2 by A2,XREAL_1:66;
    then (i1 div i2)*i2 <= i1 by A2,XCMPLX_1:88;
    then i1 - (i1 div i2)*i2 >= 0 by XREAL_1:50;
    hence thesis by Def8;
  end;
  suppose
    i2 = 0;
    hence thesis by Def8;
  end;
end;

theorem
  i2 > 0 implies i1 mod i2 < i2
proof
  assume
A1: i2 > 0;
  i1/i2 -1 < [\ i1/i2 /] by Def4;
  then (i1/i2 -1)*i2 < (i1 div i2)*i2 by A1,XREAL_1:70;
  then i1/i2*i2 -1*i2 < (i1 div i2)*i2;
  then i1 -i2 < (i1 div i2)*i2-0 by A1,XCMPLX_1:88;
  then i1 -(i1 div i2)*i2 < i2-0 by XREAL_1:19;
  hence thesis by A1,Def8;
end;

theorem
  i2 <> 0 implies i1 = (i1 div i2) * i2 + (i1 mod i2)
proof
  assume i2 <> 0;
  then
  (i1 div i2) * i2 +(i1 mod i2) = (i1 div i2 )*i2 + (i1 - ( i1 div i2 )*i2
  ) by Def8
    .= i1;
  hence thesis;
end;

:: from AMI_3, 2007.06.14, A.T.

theorem
  for m,j being Integer holds m*j, 0 are_congruent_mod m
proof
  let m,j be Integer;
  take j;
  thus m*j = m*j - 0;
end;

:: from AMI_4, 2007.06.14, A.T.

theorem
  i >= 0 & j >= 0 implies i div j >= 0
proof
  assume that
A1: i >= 0 and
A2: j >= 0;
A3: i / j - 1 < [\ i / j /] by Def4;
  i / j - 1 >= 0-1 by A1,A2,XREAL_1:11;
  then - 1 < [\ i / j /] by A3,XXREAL_0:2;
  hence thesis by Th21;
end;

:: from INT_3, 2007.07.27, A.T.

theorem
  for n being natural number st n > 0 for a being Integer holds a mod n
  = 0 iff n divides a
proof
  let n be natural number;
  assume
A1: n > 0;
  let a be Integer;
A2: now
A3: a mod n = a - (a div n) * n by A1,Def8
      .= a - ([\ a/n /]) * n;
    assume n divides a;
    then consider k being Integer such that
A4: n * k = a by Def9;
    -n <> 0 by A1;
    then -n + a < 0 + a by XREAL_1:8;
    then (-n + a) * n" < (n * k) * n" by A1,A4,XREAL_1:70;
    then (-n) * n" + a * n" < (n * k) * n";
    then (-n) * n" + a/n < (n * n") * k by XCMPLX_0:def 9;
    then (-n) * n" + a/n < 1 * k by A1,XCMPLX_0:def 7;
    then -n * n" + a/n < k;
    then -1 + a/n < k by A1,XCMPLX_0:def 7;
    then
A5: a/n - 1 < k;
    k <= a/n
    proof
      assume k > a/n;
      then k * n > a/n * n by A1,XREAL_1:70;
      then k * n > (a * n") * n by XCMPLX_0:def 9;
      then k * n > a * (n" * n);
      then n * k > a * 1 by A1,XCMPLX_0:def 7;
      hence thesis by A4;
    end;
    then ([\ a/n /]) = k by A5,Def4;
    hence a mod n = 0 by A4,A3;
  end;
  now
    assume a mod n = 0;
    then 0 = a - (a div n) * n by A1,Def8;
    hence n divides a by Def9;
  end;
  hence thesis by A2;
end;

:: from JORDAN1D, 2007.07.27, A.T.

reserve r, s for real number;

theorem
  r/s is not Integer implies - [\ r/s /] = [\ (-r) / s /] + 1
proof
  r/s - 1 < [\ r/s /] by Def4;
  then - (r/s - 1) > - [\ r/s /] by XREAL_1:26;
  then -r/s + 1 > - [\ r/s /];
  then - [\ r/s /] <= (-r) / s + 1 by XCMPLX_1:188;
  then
A1: - [\ r/s /] - 1 <= (-r) / s + 1 - 1 by XREAL_1:11;
  assume r/s is not Integer;
  then [\ r/s /] < r/s by Th48;
  then -r/s < - [\ r/s /] by XREAL_1:26;
  then -r/s - 1 < - [\ r/s /] - 1 by XREAL_1:11;
  then (-r)/s - 1 < - [\ r/s /] - 1 by XCMPLX_1:188;
  then - [\ r/s /] - 1 + 1 = [\ (-r) / s /] + 1 by A1,Def4;
  hence thesis;
end;

theorem
  r/s is Integer implies - [\ r/s /] = [\ (-r) / s /]
proof
  assume r/s is Integer;
  then
A1: [\ r/s /] = r/s by Th47;
A2: -r/s = (-r)/s by XCMPLX_1:188;
  then (-r) / s - 1 < - [\ r/s /] - 0 by A1,XREAL_1:17;
  hence thesis by A1,A2,Def4;
end;

:: missing, 2008.05.16, A.T.

theorem
  r <= i implies [/ r \] <= i
proof
  assume r <= i;
  then
A1: r+1 <= i+1 by XREAL_1:8;
  [/ r \] < r+1 by Def5;
  then [/ r \] < i+1 by A1,XXREAL_0:2;
  then [/ r \] <= i+1-1 by Th79;
  hence thesis;
end;

:: from POLYNOM2, 2010.02.13, A.T.

scheme
  FinInd{M, N() -> Element of NAT, P[Nat]} : for i being Element of NAT st M()
  <= i & i <= N() holds P[i]
provided
A1: P[M()] and
A2: for j being Element of NAT st M() <= j & j < N() holds P[j] implies P[j+1]
proof
  defpred Q[Nat] means M() <= $1 & $1 <= N() & not(P[$1]);
  assume not(for i being Element of NAT st M() <= i & i <= N() holds P[i]);
  then
A3: ex i being Nat st Q[i];
  consider k being Nat such that
A4: Q[k] & for k9 being Nat st Q[k9] holds k <= k9 from NAT_1:sch 5(A3);
  per cases;
  suppose
    k = M();
    hence thesis by A1,A4;
  end;
  suppose
    k <> M();
    then M() < k by A4,XXREAL_0:1;
    then M() + 1 <= k by NAT_1:13;
    then
A5: (M() + 1) - 1 <= k - 1 by XREAL_1:11;
    then reconsider k9 = k - 1 as Element of NAT by Th16;
A6: k9 <> k9 + 1;
    k9 <= k9 + 1 by NAT_1:11;
    then
A7: k9 < k by A6,XXREAL_0:1;
    then
A8: k9 < N() by A4,XXREAL_0:2;
A9: (k - 1) + 1 = k + 0;
    not(Q[k9]) by A4,A7;
    hence thesis by A2,A4,A5,A9,A8;
  end;
end;

scheme
  FinInd2{M,N() -> Element of NAT, P[Nat]} : for i being Element of NAT st M()
  <= i & i <= N() holds P[i]
provided
A1: P[M()] and
A2: for j being Element of NAT st M() <= j & j < N() holds (for j9 being
Element of NAT st M() <= j9 & j9 <= j holds P[j9]) implies P[j+1]
proof
  defpred Q[Element of NAT] means for j being Element of NAT st M() <= j & j
  <= ($1) holds P[j];
A3: for j being Element of NAT st M() <= j & j < N() holds Q[j] implies Q[j+ 1]
  proof
    let j be Element of NAT;
    assume that
A4: M() <= j and
A5: j < N();
    assume
A6: Q[j];
    thus Q[j+1]
    proof
      let i be Element of NAT;
      assume that
A7:   M() <= i and
A8:   i <= j + 1;
      per cases;
      suppose
        i = j + 1;
        hence thesis by A2,A4,A5,A6;
      end;
      suppose
        i <> j + 1;
        then i < j + 1 by A8,XXREAL_0:1;
        then i <= j by NAT_1:13;
        hence thesis by A6,A7;
      end;
    end;
  end;
A9: Q[M()] by A1,XXREAL_0:1;
  for i being Element of NAT st M() <= i & i <= N() holds Q[i] from
  FinInd(A9,A3);
  hence thesis;
end;
