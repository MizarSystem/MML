:: Predicate Calculus for Boolean Valued Functions, II
::  by Shunichi Kobayashi and Yatsuka Nakamura
::
:: Received March 13, 1999
:: Copyright (c) 1999 Association of Mizar Users

environ

 vocabularies FUNCT_2, MARGREL1, PARTIT1, BVFUNC_1, ZF_LANG, FUNCT_1, RELAT_1,
      BINARITH, EQREL_1, BVFUNC_2, T_1TOPSP;
 notations TARSKI, XBOOLE_0, SUBSET_1, MARGREL1, VALUAT_1, RELAT_1, FUNCT_1,
      FRAENKEL, EQREL_1, BINARITH, BVFUNC_1, BVFUNC_2;
 constructors BINARITH, BVFUNC_2, BVFUNC_1;
 registrations MARGREL1, VALUAT_1, BINARITH, FRAENKEL;
 requirements SUBSET, BOOLE;
 definitions BVFUNC_1;
 theorems FUNCT_1, FUNCT_2, T_1TOPSP, MARGREL1, BINARITH, BVFUNC_1, BVFUNC_2,
      VALUAT_1;

begin

::Chap. 1  Preliminaries

reserve Y for non empty set;

theorem  for a,b,c being Element of Funcs(Y,BOOLEAN) holds
a '<' (b 'imp' c) implies a '&' b '<' c
proof
  let a,b,c be Element of Funcs(Y,BOOLEAN);
  assume A1:a '<' (b 'imp' c);
     for x being Element of Y holds
   (a '&' b 'imp' c).x = TRUE
  proof
    let x be Element of Y;
    A2: a 'imp' (b 'imp' c) = I_el(Y) by A1,BVFUNC_1:19;
    A3:(a 'imp' (b 'imp' c)).x
    =('not' a.x) 'or' (b 'imp' c).x by BVFUNC_1:def 11
   .=('not' a.x) 'or' (('not' b.x) 'or' c.x) by BVFUNC_1:def 11
   .=('not' a.x 'or' 'not' b.x) 'or' c.x by BINARITH:20;
       (a '&' b 'imp' c).x
    =('not' (a '&' b).x) 'or' c.x by BVFUNC_1:def 11
   .='not' (a.x '&' b.x) 'or' c.x by VALUAT_1:def 6
   .=('not' a.x 'or' 'not' b.x) 'or' c.x by BINARITH:9;
    hence thesis by A2,A3,BVFUNC_1:def 14;
  end;
  then (a '&' b) 'imp' c = I_el(Y) by BVFUNC_1:def 14;
  hence thesis by BVFUNC_1:19;
end;

theorem  for a,b,c being Element of Funcs(Y,BOOLEAN) holds
a '&' b '<' c implies a '<' (b 'imp' c)
proof
  let a,b,c be Element of Funcs(Y,BOOLEAN);
  assume A1:a '&' b '<' c;
     for x being Element of Y holds
   (a 'imp' (b 'imp' c)).x = TRUE
  proof
    let x be Element of Y;
    A2: (a '&' b) 'imp' c = I_el(Y) by A1,BVFUNC_1:19;
    A3:(a 'imp' (b 'imp' c)).x
    =('not' a.x) 'or' (b 'imp' c).x by BVFUNC_1:def 11
   .=('not' a.x) 'or' (('not' b.x) 'or' c.x) by BVFUNC_1:def 11
   .=('not' a.x 'or' 'not' b.x) 'or' c.x by BINARITH:20;
       (a '&' b 'imp' c).x
    =('not' (a '&' b).x) 'or' c.x by BVFUNC_1:def 11
   .='not' (a.x '&' b.x) 'or' c.x by VALUAT_1:def 6
   .=('not' a.x 'or' 'not' b.x) 'or' c.x by BINARITH:9;
    hence thesis by A2,A3,BVFUNC_1:def 14;
  end;
  then a 'imp' (b 'imp' c) = I_el(Y) by BVFUNC_1:def 14;
  hence thesis by BVFUNC_1:19;
end;

theorem  for a,b being Element of Funcs(Y,BOOLEAN) holds
  a 'or' (a '&' b) = a
proof
  let a,b be Element of Funcs(Y,BOOLEAN);
  A1:for x being Element of Y holds
   (a 'or' (a '&' b)).x = a.x
  proof
    let x be Element of Y;
    A2:(a 'or' (a '&' b)).x
    =a.x 'or' (a '&' b).x by BVFUNC_1:def 7
   .=a.x 'or' (a.x '&' b.x) by VALUAT_1:def 6;
       now per cases by MARGREL1:39;
     case a.x=TRUE;
     hence thesis by A2,BINARITH:19;
     end;
     case A3: a.x=FALSE;
      then (a 'or' (a '&' b)).x
      =FALSE 'or' FALSE by A2,MARGREL1:45
      .=FALSE by BINARITH:7;
     hence thesis by A3;
    end;
    end;
    hence thesis;
  end;
  consider k3 being Function such that
              A4: (a 'or' (a '&' b))=k3 & dom k3=Y & rng k3 c= BOOLEAN
                     by FUNCT_2:def 2;
  consider k4 being Function such that
    A5: a=k4 & dom k4=Y & rng k4 c= BOOLEAN
                     by FUNCT_2:def 2;
     for u being set st u in Y holds k3.u=k4.u by A1,A4,A5;
  hence thesis by A4,A5,FUNCT_1:9;
end;

theorem  for a,b being Element of Funcs(Y,BOOLEAN) holds
  a '&' (a 'or' b) = a
proof
  let a,b be Element of Funcs(Y,BOOLEAN);
  A1:for x being Element of Y holds
   (a '&' (a 'or' b)).x = a.x
  proof
    let x be Element of Y;
    A2:(a '&' (a 'or' b)).x
    =a.x '&' (a 'or' b).x by VALUAT_1:def 6
   .=a.x '&' (a.x 'or' b.x) by BVFUNC_1:def 7;
       now per cases by MARGREL1:39;
     case A3:a.x=TRUE;
      then (a '&' (a 'or' b)).x
      =TRUE '&' TRUE by A2,BINARITH:19
      .=TRUE by MARGREL1:45;
     hence thesis by A3;
     end;
     case a.x=FALSE;
     hence thesis by A2,MARGREL1:45;
    end;
    end;
    hence thesis;
  end;
  consider k3 being Function such that
              A4: (a '&' (a 'or' b))=k3 & dom k3=Y & rng k3 c= BOOLEAN
                     by FUNCT_2:def 2;
  consider k4 being Function such that
    A5: a=k4 & dom k4=Y & rng k4 c= BOOLEAN
                     by FUNCT_2:def 2;
     for u being set st u in Y holds k3.u=k4.u by A1,A4,A5;
  hence thesis by A4,A5,FUNCT_1:9;
end;

theorem Th5: for a being Element of Funcs(Y,BOOLEAN) holds
a '&' 'not' a = O_el(Y)
proof
  let a be Element of Funcs(Y,BOOLEAN);
  A1:for x being Element of Y holds
   (a '&' 'not' a).x = (O_el Y).x
  proof
    let x be Element of Y;
    A2:(a '&' 'not' a).x
     =a.x '&' ('not' a).x by VALUAT_1:def 6
    .=a.x '&' 'not' a.x by VALUAT_1:def 5;
A3:'not' FALSE=TRUE & 'not' TRUE=FALSE by MARGREL1:41;
    A4:(O_el Y).x=FALSE by BVFUNC_1:def 13;
       now per cases by MARGREL1:39;
      case a.x=TRUE;
      hence thesis by A2,A3,A4,MARGREL1:45;
      end;
      case a.x=FALSE;
      hence thesis by A2,A4,MARGREL1:45;
    end;
    end;
    hence thesis;
  end;
  consider k3 being Function such that
              A5: (a '&' 'not' a)=k3 & dom k3=Y & rng k3 c= BOOLEAN
                     by FUNCT_2:def 2;
  consider k4 being Function such that
    A6: O_el(Y)=k4 & dom k4=Y & rng k4 c= BOOLEAN
                     by FUNCT_2:def 2;
     for u being set st u in Y holds k3.u=k4.u by A1,A5,A6;
  hence (a '&' 'not' a)=O_el(Y) by A5,A6,FUNCT_1:9;
end;

theorem  for a being Element of Funcs(Y,BOOLEAN) holds
a 'or' 'not' a = I_el(Y)
proof
  let a be Element of Funcs(Y,BOOLEAN);
  A1:for x being Element of Y holds
   (a 'or' 'not' a).x = (I_el Y).x
  proof
    let x be Element of Y;
       (a 'or' 'not' a).x
     =a.x 'or' ('not' a).x by BVFUNC_1:def 7
    .=a.x 'or' 'not' a.x by VALUAT_1:def 5
    .=TRUE by BINARITH:18;
    hence thesis by BVFUNC_1:def 14;
  end;
  consider k3 being Function such that
              A2: (a 'or' 'not' a)=k3 & dom k3=Y & rng k3 c= BOOLEAN
                     by FUNCT_2:def 2;
  consider k4 being Function such that
    A3: I_el(Y)=k4 & dom k4=Y & rng k4 c= BOOLEAN
                     by FUNCT_2:def 2;
     for u being set st u in Y holds k3.u=k4.u by A1,A2,A3;
  hence (a 'or' 'not' a)=I_el(Y) by A2,A3,FUNCT_1:9;
end;

theorem Th7: for a,b being Element of Funcs(Y,BOOLEAN) holds
a 'eqv' b = (a 'imp' b) '&' (b 'imp' a)
proof
  let a,b be Element of Funcs(Y,BOOLEAN);
  A1:for x being Element of Y holds
    (a 'eqv' b).x = ((a 'imp' b) '&' (b 'imp' a)).x
  proof
    let x be Element of Y;
       (a 'eqv' b).x
    ='not' (a.x 'xor' b.x) by BVFUNC_1:def 12
   .='not' (('not' a.x '&' b.x) 'or' (a.x '&' 'not'
b.x)) by BINARITH:def 2
   .='not' ('not' a.x '&' b.x) '&' 'not' (a.x '&' 'not'
b.x) by BINARITH:10
   .=('not' 'not' a.x 'or' 'not' b.x) '&' 'not' (a.x '&' 'not'
b.x) by BINARITH:9
   .=('not' 'not' a.x 'or' 'not' b.x) '&'
   ('not' a.x 'or' 'not' 'not'
b.x) by BINARITH:9
   .=(a.x 'or' 'not' b.x) '&' ('not' a.x 'or' 'not' 'not'
b.x)
   .=(a.x 'or' 'not' b.x) '&' ('not' a.x 'or' b.x)
   .=((a.x 'or' 'not' b.x) '&' 'not' a.x) 'or'
     ((a.x 'or' 'not' b.x) '&' b.x) by BINARITH:22
   .=(('not' a.x '&' a.x) 'or' ('not' a.x '&' 'not' b.x)) 'or'
     (b.x '&' (a.x 'or' 'not' b.x)) by BINARITH:22
   .=(('not' a.x '&' a.x) 'or' ('not' a.x '&' 'not' b.x)) 'or'
     ((b.x '&' a.x) 'or' (b.x '&' 'not' b.x))
    by BINARITH:22
   .=(FALSE 'or' ('not' a.x '&' 'not' b.x)) 'or'
     ((b.x '&' a.x) 'or' (b.x '&' 'not' b.x))
    by MARGREL1:46
   .=(FALSE 'or' ('not' a.x '&' 'not' b.x)) 'or'
     ((b.x '&' a.x) 'or' FALSE) by MARGREL1:46
   .=('not' a.x '&' 'not' b.x) 'or'
     ((b.x '&' a.x) 'or' FALSE) by BINARITH:7
   .=('not' a.x '&' 'not' b.x) 'or' (b.x '&' a.x)
    by BINARITH:7
   .=(('not' a.x '&' 'not' b.x) 'or' b.x) '&'
     (('not' a.x '&' 'not' b.x) 'or' a.x) by BINARITH:23
   .=((b.x 'or' 'not' a.x) '&' (b.x 'or' 'not' b.x)) '&'
     (a.x 'or' ('not' a.x '&' 'not' b.x)) by BINARITH:23
   .=((b.x 'or' 'not' a.x) '&' (b.x 'or' 'not' b.x)) '&'
     ((a.x 'or' 'not' a.x) '&' (a.x 'or' 'not' b.x))
    by BINARITH:23
   .=((b.x 'or' 'not' a.x) '&' TRUE) '&'
     ((a.x 'or' 'not' a.x) '&' (a.x 'or' 'not' b.x))
    by BINARITH:18
   .=((b.x 'or' 'not' a.x) '&' TRUE) '&'
     (TRUE '&' (a.x 'or' 'not' b.x)) by BINARITH:18
   .=(b.x 'or' 'not' a.x) '&'
     (TRUE '&' (a.x 'or' 'not' b.x)) by MARGREL1:50
   .=(b.x 'or' 'not' a.x) '&' (a.x 'or' 'not' b.x)
    by MARGREL1:50
   .=(a 'imp' b).x '&' ('not' b.x 'or' a.x) by BVFUNC_1:def 11
   .=(a 'imp' b).x '&' (b 'imp' a).x by BVFUNC_1:def 11
   .=((a 'imp' b) '&' (b 'imp' a)).x by VALUAT_1:def 6;
    hence thesis;
  end;
  consider k3 being Function such that
              A2: (a 'eqv' b)=k3 & dom k3=Y & rng k3 c= BOOLEAN
                     by FUNCT_2:def 2;
  consider k4 being Function such that
    A3: ((a 'imp' b) '&' (b 'imp' a))=k4 & dom k4=Y & rng k4 c= BOOLEAN
                     by FUNCT_2:def 2;
     for u being set st u in Y holds k3.u=k4.u by A1,A2,A3;
  hence (a 'eqv' b)=((a 'imp' b) '&' (b 'imp' a)) by A2,A3,FUNCT_1:9;
end;

theorem Th8: for a,b being Element of Funcs(Y,BOOLEAN) holds
a 'imp' b = 'not' a 'or' b
proof
  let a,b be Element of Funcs(Y,BOOLEAN);
  A1:for x being Element of Y holds
    (a 'imp' b).x = ('not' a 'or' b).x
  proof
    let x be Element of Y;
       (a 'imp' b).x
    =('not' a.x) 'or' b.x by BVFUNC_1:def 11
   .=('not' a).x 'or' b.x by VALUAT_1:def 5
   .=('not' a 'or' b).x by BVFUNC_1:def 7;
    hence thesis;
  end;
  consider k3 being Function such that
              A2: (a 'imp' b)=k3 & dom k3=Y & rng k3 c= BOOLEAN
                     by FUNCT_2:def 2;
  consider k4 being Function such that
    A3: ('not' a 'or' b)=k4 & dom k4=Y & rng k4 c= BOOLEAN
                     by FUNCT_2:def 2;
     for u being set st u in Y holds k3.u=k4.u by A1,A2,A3;
  hence thesis by A2,A3,FUNCT_1:9;
end;

theorem  for a,b being Element of Funcs(Y,BOOLEAN) holds
a 'xor' b = ('not' a '&' b) 'or' (a '&' 'not' b)
proof
  let a,b be Element of Funcs(Y,BOOLEAN);
  A1:for x being Element of Y holds
    (a 'xor' b).x = (('not' a '&' b) 'or' (a '&' 'not' b)).x
  proof
    let x be Element of Y;
       (a 'xor' b).x
    =a.x 'xor' b.x by BVFUNC_1:def 8
   .=('not' a.x '&' b.x) 'or' (a.x '&' 'not' b.x)
    by BINARITH:def 2
   .=(('not' a).x '&' b.x) 'or' (a.x '&' 'not' b.x)
    by VALUAT_1:def 5
   .=(('not' a).x '&' b.x) 'or' (a.x '&' ('not' b).x)
    by VALUAT_1:def 5
   .=('not' a '&' b).x 'or' (a.x '&' ('not' b).x)
    by VALUAT_1:def 6
   .=('not' a '&' b).x 'or' (a '&' 'not' b).x
    by VALUAT_1:def 6
   .=(('not' a '&' b) 'or' (a '&' 'not' b)).x
    by BVFUNC_1:def 7;
    hence thesis;
  end;
  consider k3 being Function such that
              A2: (a 'xor' b)=k3 & dom k3=Y & rng k3 c= BOOLEAN
                     by FUNCT_2:def 2;
  consider k4 being Function such that
    A3: (('not' a '&' b) 'or' (a '&' 'not' b))=k4 & dom k4=Y &
     rng k4 c= BOOLEAN by FUNCT_2:def 2;
     for u being set st u in Y holds k3.u=k4.u by A1,A2,A3;
  hence thesis by A2,A3,FUNCT_1:9;
end;

theorem Th10: for a,b being Element of Funcs(Y,BOOLEAN) holds
(a 'eqv' b)=I_el(Y) iff ((a 'imp' b)=I_el(Y) & (b 'imp' a)=I_el(Y))
proof
  let a,b be Element of Funcs(Y,BOOLEAN);
  thus (a 'eqv' b)=I_el(Y) implies ((a 'imp' b)=I_el(Y) & (b 'imp' a)=I_el(Y))
  proof
    assume (a 'eqv' b)=I_el(Y);
     then a = b by BVFUNC_1:20;
    hence thesis by BVFUNC_1:19;
  end;
    assume a 'imp' b=I_el(Y) & b 'imp' a=I_el(Y);
     then (a 'eqv' b)=I_el(Y) '&' I_el(Y) by Th7;
    hence thesis by BVFUNC_1:9;
end;

theorem  for a,b,c being Element of Funcs(Y,BOOLEAN) holds
(a 'eqv' b)=I_el(Y) & (b 'eqv' c)=I_el(Y) implies (a 'eqv' c)=I_el(Y)
by BVFUNC_1:20;

theorem  for a,b being Element of Funcs(Y,BOOLEAN) holds
a 'eqv' b=I_el(Y) implies 'not' a 'eqv' 'not' b=I_el(Y)
proof
  let a,b be Element of Funcs(Y,BOOLEAN);
  assume (a 'eqv' b)=I_el(Y);
   then a = b by BVFUNC_1:20;
  hence thesis by BVFUNC_1:20;
end;

theorem  for a,b,c,d being Element of Funcs(Y,BOOLEAN) holds
(a 'eqv' b)=I_el(Y) & (c 'eqv' d)=I_el(Y) implies
((a '&' c) 'eqv' (b '&' d))=I_el(Y)
proof
  let a,b,c,d be Element of Funcs(Y,BOOLEAN);
  assume a 'eqv' b=I_el(Y) & c 'eqv' d=I_el(Y);
   then a = b & c = d by BVFUNC_1:20;
  hence thesis by BVFUNC_1:20;
end;

theorem  for a,b,c,d being Element of Funcs(Y,BOOLEAN) holds
(a 'eqv' b)=I_el(Y) & (c 'eqv' d)=I_el(Y) implies
((a 'imp' c) 'eqv' (b 'imp' d))=I_el(Y)
proof
  let a,b,c,d be Element of Funcs(Y,BOOLEAN);
  assume a 'eqv' b=I_el(Y) & c 'eqv' d=I_el(Y);
   then a = b & c = d by BVFUNC_1:20;
  hence thesis by BVFUNC_1:20;
end;

theorem  for a,b,c,d being Element of Funcs(Y,BOOLEAN) holds
(a 'eqv' b)=I_el(Y) & (c 'eqv' d)=I_el(Y) implies
((a 'or' c) 'eqv' (b 'or' d))=I_el(Y)
proof
  let a,b,c,d be Element of Funcs(Y,BOOLEAN);
  assume a 'eqv' b=I_el(Y) & c 'eqv' d=I_el(Y);
   then a = b & c = d by BVFUNC_1:20;
  hence thesis by BVFUNC_1:20;
end;

theorem  for a,b,c,d being Element of Funcs(Y,BOOLEAN) holds
(a 'eqv' b)=I_el(Y) & (c 'eqv' d)=I_el(Y) implies
((a 'eqv' c) 'eqv' (b 'eqv' d))=I_el(Y)
proof
  let a,b,c,d be Element of Funcs(Y,BOOLEAN);
  assume a 'eqv' b=I_el(Y) & c 'eqv' d=I_el(Y);
   then a = b & c = d by BVFUNC_1:20;
  hence thesis by BVFUNC_1:20;
end;

begin

::Chap. 2  Predicate Calculus

theorem  for a,b being Element of Funcs(Y,BOOLEAN),
G being Subset of PARTITIONS(Y),
PA being a_partition of Y holds
All(a 'eqv' b,PA,G) = All(a 'imp' b,PA,G) '&' All(b 'imp' a,PA,G)
proof
  let a,b be Element of Funcs(Y,BOOLEAN);
  let G be Subset of PARTITIONS(Y);
  let PA be a_partition of Y;
  A1:for z being Element of Y holds
    All(a 'eqv' b,PA,G).z =
    (All(a 'imp' b,PA,G) '&' All(b 'imp' a,PA,G)).z
  proof
    let z be Element of Y;
       All(a 'eqv' b,PA,G).z
    =(All((a 'imp' b) '&' (b 'imp' a),PA,G)).z by Th7
   .=(All(a 'imp' b,PA,G) '&' All(b 'imp' a,PA,G)).z by BVFUNC_2:13;
    hence thesis;
  end;
  consider k3 being Function such that
              A2: (All(a 'eqv' b,PA,G))=k3 & dom k3=Y & rng k3 c= BOOLEAN
                     by FUNCT_2:def 2;
  consider k4 being Function such that
    A3: (All(a 'imp' b,PA,G) '&' All(b 'imp' a,PA,G))=k4 & dom k4=Y &
        rng k4 c= BOOLEAN
                     by FUNCT_2:def 2;
      Y=dom k3 & Y=dom k4 & (for u being set
            st u in Y holds k3.u=k4.u)by A1,A2,A3;
  hence (All(a 'eqv' b,PA,G))=
        (All(a 'imp' b,PA,G) '&' All(b 'imp' a,PA,G)) by A2,A3,FUNCT_1:9;
end;

theorem  for a being Element of Funcs(Y,BOOLEAN),
G being Subset of PARTITIONS(Y), PA,PB being a_partition of Y holds
All(a,PA,G) '<' Ex(a,PB,G)
proof
  let a be Element of Funcs(Y,BOOLEAN);
  let G be Subset of PARTITIONS(Y);
  let PA,PB be a_partition of Y;
  thus All(a,PA,G) '<' Ex(a,PB,G)
  proof
    A1:All(a,PA,G) '<' a by BVFUNC_2:11;
       a '<' Ex(a,PB,G) by BVFUNC_2:12;
    hence thesis by A1,BVFUNC_1:18;
  end;
end;

theorem  for a,u being Element of Funcs(Y,BOOLEAN),
G being Subset of PARTITIONS(Y), PA being a_partition of Y
st G is independent & PA in G & u is_independent_of PA,G holds
a 'imp' u = I_el(Y) implies All(a,PA,G) 'imp' u = I_el(Y)
proof
  let a,u be Element of Funcs(Y,BOOLEAN);
  let G be Subset of PARTITIONS(Y);
  let PA be a_partition of Y;
  assume A1:G is independent & PA in G & u is_independent_of PA,G &
             a 'imp' u = I_el(Y);
A2:All(a,PA,G) = B_INF(a,CompF(PA,G)) by BVFUNC_2:def 9;
     for x being Element of Y holds
    (All(a,PA,G) 'imp' u).x = TRUE
  proof
    let x be Element of Y;
       (a 'imp' u).x = TRUE by A1,BVFUNC_1:def 14;
    then A3:'not' a.x 'or' u.x = TRUE by BVFUNC_1:def 11;
    A4:'not' a.x=TRUE or 'not' a.x=FALSE by MARGREL1:39;
       now per cases by A3,A4,BINARITH:7;
      case 'not' a.x=TRUE;
      then a.x=FALSE by MARGREL1:41;
      then A5:a.x<>TRUE by MARGREL1:43;
         x in EqClass(x,CompF(PA,G)) & EqClass(x,CompF(PA,G)) in CompF(PA,G)
      by T_1TOPSP:def 1;
      then B_INF(a,CompF(PA,G)).x = FALSE by A5,BVFUNC_1:def 19;
      then (All(a,PA,G) 'imp' u).x ='not' FALSE 'or' u.x by A2,
BVFUNC_1:def 11
     .=TRUE 'or' u.x by MARGREL1:41
     .=TRUE by BINARITH:19;
      hence thesis;
      end;
      case u.x=TRUE;
      then (All(a,PA,G) 'imp' u).x
      ='not' All(a,PA,G).x 'or' TRUE by BVFUNC_1:def 11
     .=TRUE by BINARITH:19;
      hence thesis;
    end;
    end;
    hence thesis;
  end;
  hence All(a,PA,G) 'imp' u = I_el(Y) by BVFUNC_1:def 14;
end;

theorem  for u being Element of Funcs(Y,BOOLEAN),
G being Subset of PARTITIONS(Y), PA being a_partition of Y
st u is_independent_of PA,G holds
Ex(u,PA,G) '<' u
proof
  let u be Element of Funcs(Y,BOOLEAN);
  let G be Subset of PARTITIONS(Y);
  let PA be a_partition of Y;
  assume u is_independent_of PA,G;
  then A1: u is_dependent_of CompF(PA,G) by BVFUNC_2:def 8;
A2:Ex(u,PA,G) = B_SUP(u,CompF(PA,G)) by BVFUNC_2:def 10;
     for z being Element of Y holds
    (Ex(u,PA,G) 'imp' u).z = TRUE
  proof
    let z be Element of Y;
A3:z in EqClass(z,CompF(PA,G)) & EqClass(z,CompF(PA,G)) in CompF(PA,G)
      by T_1TOPSP:def 1;
    A4:(Ex(u,PA,G) 'imp' u).z
    ='not' Ex(u,PA,G).z 'or' u.z by BVFUNC_1:def 11;
       now per cases by MARGREL1:39;
    case u.z=TRUE;
      hence thesis by A4,BINARITH:19;
    end;
    case A5:u.z=FALSE;
         now given x1 being Element of Y such that
          A6:x1 in EqClass(z,CompF(PA,G)) & u.x1=TRUE;
           u.z=u.x1 by A1,A3,A6,BVFUNC_1:def 18;
        hence contradiction by A5,A6,MARGREL1:43;
      end;
      then B_SUP(u,CompF(PA,G)).z = FALSE by BVFUNC_1:def 20;
      then (Ex(u,PA,G) 'imp' u).z =TRUE 'or' u.z by A2,A4,MARGREL1:41
     .=TRUE by BINARITH:19;
      hence thesis;
    end;
    end;
    hence thesis;
  end;
  then Ex(u,PA,G) 'imp' u = I_el(Y) by BVFUNC_1:def 14;
  hence thesis by BVFUNC_1:19;
end;

theorem  for u being Element of Funcs(Y,BOOLEAN),
G being Subset of PARTITIONS(Y), PA being a_partition of Y
st u is_independent_of PA,G holds
u '<' All(u,PA,G)
proof
  let u be Element of Funcs(Y,BOOLEAN);
  let G be Subset of PARTITIONS(Y);
  let PA be a_partition of Y;
  assume u is_independent_of PA,G;
  then A1: u is_dependent_of CompF(PA,G) by BVFUNC_2:def 8;
A2:All(u,PA,G) = B_INF(u,CompF(PA,G)) by BVFUNC_2:def 9;
     for z being Element of Y holds
    (u 'imp' All(u,PA,G)).z = TRUE
  proof
    let z be Element of Y;
A3:z in EqClass(z,CompF(PA,G)) & EqClass(z,CompF(PA,G)) in CompF(PA,G)
      by T_1TOPSP:def 1;
    A4:(u 'imp' All(u,PA,G)).z
    ='not' u.z 'or' All(u,PA,G).z by BVFUNC_1:def 11;
       now per cases by MARGREL1:39;
    case u.z=FALSE;
      then (u 'imp' All(u,PA,G)).z
     =TRUE 'or' All(u,PA,G).z by A4,MARGREL1:41
     .=TRUE by BINARITH:19;
      hence thesis;
    end;
    case u.z=TRUE;
      then for x being Element of Y st x in EqClass(z,CompF(PA,G)) holds
         u.x=TRUE by A1,A3,BVFUNC_1:def 18;
      then All(u,PA,G).z=TRUE by A2,BVFUNC_1:def 19;
      hence thesis by A4,BINARITH:19;
    end;
    end;
    hence thesis;
  end;
  then u 'imp' All(u,PA,G) = I_el(Y) by BVFUNC_1:def 14;
  hence thesis by BVFUNC_1:19;
end;

theorem  for u being Element of Funcs(Y,BOOLEAN),
G being Subset of PARTITIONS(Y), PA,PB being a_partition of Y
st u is_independent_of PB,G holds
All(u,PA,G) '<' All(u,PB,G)
proof
  let u be Element of Funcs(Y,BOOLEAN);
  let G be Subset of PARTITIONS(Y);
  let PA,PB be a_partition of Y;
  assume u is_independent_of PB,G;
  then A1: u is_dependent_of CompF(PB,G) by BVFUNC_2:def 8;
A2:All(u,PA,G) = B_INF(u,CompF(PA,G)) by BVFUNC_2:def 9;
A3:All(u,PB,G) = B_INF(u,CompF(PB,G)) by BVFUNC_2:def 9;
     for z being Element of Y holds
    (All(u,PA,G) 'imp' All(u,PB,G)).z = TRUE
  proof
    let z be Element of Y;
A4:z in EqClass(z,CompF(PA,G)) & EqClass(z,CompF(PA,G)) in CompF(PA,G)
      by T_1TOPSP:def 1;
A5:z in EqClass(z,CompF(PB,G)) & EqClass(z,CompF(PB,G)) in CompF(PB,G)
      by T_1TOPSP:def 1;
    A6:(All(u,PA,G) 'imp' All(u,PB,G)).z
    ='not' All(u,PA,G).z 'or' All(u,PB,G).z by BVFUNC_1:def 11;
       now per cases by MARGREL1:39;
    case All(u,PA,G).z=FALSE;
      then (All(u,PA,G) 'imp' All(u,PB,G)).z
      =TRUE 'or' All(u,PB,G).z by A6,MARGREL1:41
     .=TRUE by BINARITH:19;
      hence thesis;
    end;
    case A7:All(u,PA,G).z=TRUE;
         now assume
           not (for x being Element of Y st x in EqClass(z,CompF(PA,G)) holds
           u.x=TRUE);
        then All(u,PA,G).z=FALSE by A2,BVFUNC_1:def 19;
        hence contradiction by A7,MARGREL1:43;
      end;
      then u.z=TRUE by A4;
      then for x being Element of Y st x in EqClass(z,CompF(PB,G)) holds
         u.x=TRUE by A1,A5,BVFUNC_1:def 18;
      then All(u,PB,G).z=TRUE by A3,BVFUNC_1:def 19;
      hence thesis by A6,BINARITH:19;
    end;
    end;
    hence thesis;
  end;
  then All(u,PA,G) 'imp' All(u,PB,G) = I_el(Y) by BVFUNC_1:def 14;
  hence thesis by BVFUNC_1:19;
end;

theorem  for u being Element of Funcs(Y,BOOLEAN),
G being Subset of PARTITIONS(Y), PA,PB being a_partition of Y
st u is_independent_of PA,G holds
Ex(u,PA,G) '<' Ex(u,PB,G)
proof
  let u be Element of Funcs(Y,BOOLEAN);
  let G be Subset of PARTITIONS(Y);
  let PA,PB be a_partition of Y;
  assume u is_independent_of PA,G;
  then A1: u is_dependent_of CompF(PA,G) by BVFUNC_2:def 8;
A2:Ex(u,PA,G) = B_SUP(u,CompF(PA,G)) by BVFUNC_2:def 10;
A3:Ex(u,PB,G) = B_SUP(u,CompF(PB,G)) by BVFUNC_2:def 10;
     for z being Element of Y holds
    (Ex(u,PA,G) 'imp' Ex(u,PB,G)).z = TRUE
  proof
    let z be Element of Y;
A4:z in EqClass(z,CompF(PA,G)) & EqClass(z,CompF(PA,G)) in CompF(PA,G)
      by T_1TOPSP:def 1;
A5:z in EqClass(z,CompF(PB,G)) & EqClass(z,CompF(PB,G)) in CompF(PB,G)
      by T_1TOPSP:def 1;
    A6:(Ex(u,PA,G) 'imp' Ex(u,PB,G)).z
    ='not' Ex(u,PA,G).z 'or' Ex(u,PB,G).z by BVFUNC_1:def 11;
       now per cases by MARGREL1:39;
    case Ex(u,PB,G).z=TRUE;
      hence thesis by A6,BINARITH:19;
    end;
    case A7:Ex(u,PB,G).z=FALSE;
         now assume
           (ex x being Element of Y st
            x in EqClass(z,CompF(PB,G)) & u.x=TRUE);
        then Ex(u,PB,G).z=TRUE by A3,BVFUNC_1:def 20;
        hence contradiction by A7,MARGREL1:43;
      end;
      then u.z<>TRUE by A5;
      then not (ex x being Element of Y st
            x in EqClass(z,CompF(PA,G)) & u.x=TRUE) by A1,A4,
BVFUNC_1:def 18;
      then (B_SUP(u,CompF(PA,G))).z = FALSE by BVFUNC_1:def 20;
      then (Ex(u,PA,G) 'imp' Ex(u,PB,G)).z
      =TRUE 'or' Ex(u,PB,G).z by A2,A6,MARGREL1:41
     .=TRUE by BINARITH:19;
      hence thesis;
    end;
    end;
    hence thesis;
  end;
  then Ex(u,PA,G) 'imp' Ex(u,PB,G) = I_el(Y) by BVFUNC_1:def 14;
  hence thesis by BVFUNC_1:19;
end;

theorem  for a,b being Element of Funcs(Y,BOOLEAN),
G being Subset of PARTITIONS(Y),
PA being a_partition of Y holds
All(a 'eqv' b,PA,G) '<' All(a,PA,G) 'eqv' All(b,PA,G)
proof
  let a,b be Element of Funcs(Y,BOOLEAN);
  let G be Subset of PARTITIONS(Y);
  let PA be a_partition of Y;
A1:All(a 'eqv' b,PA,G) = B_INF(a 'eqv' b,CompF(PA,G)) by BVFUNC_2:def 9;
A2:All(a,PA,G) = B_INF(a,CompF(PA,G)) by BVFUNC_2:def 9;
A3:All(b,PA,G) = B_INF(b,CompF(PA,G)) by BVFUNC_2:def 9;
    let z be Element of Y;
    assume A4:(All(a 'eqv' b,PA,G)).z=TRUE;
    A5: now assume
         not (for x being Element of Y st x in EqClass(z,CompF(PA,G)) holds
         (a 'eqv' b).x=TRUE);
      then (All(a 'eqv' b,PA,G)).z=FALSE by A1,BVFUNC_1:def 19;
      hence contradiction by A4,MARGREL1:43;
    end;
    A6:(All(a,PA,G) 'eqv' All(b,PA,G)).z
     ='not'( All(a,PA,G).z 'xor' All(b,PA,G).z) by BVFUNC_1:def 12
    .='not' (('not' All(a,PA,G).z '&' All(b,PA,G).z) 'or'
        (All(a,PA,G).z '&' 'not' All(b,PA,G).z)) by BINARITH:def 2
    .='not' ('not' All(a,PA,G).z '&' All(b,PA,G).z) '&'
      'not' (All(a,PA,G).z '&' 'not' All(b,PA,G).z) by BINARITH:10
    .=('not' 'not' All(a,PA,G).z 'or' 'not' All(b,PA,G).z) '&'
      'not' (All(a,PA,G).z '&' 'not' All(b,PA,G).z) by BINARITH:9
    .=('not' 'not' All(a,PA,G).z 'or' 'not' All(b,PA,G).z) '&'
      ('not' All(a,PA,G).z 'or' 'not' 'not' All(b,PA,G).z)
      by BINARITH:9
    .=(All(a,PA,G).z 'or' 'not' All(b,PA,G).z) '&'
      ('not' All(a,PA,G).z 'or' 'not' 'not' All(b,PA,G).z)
    .=(All(a,PA,G).z 'or' 'not' All(b,PA,G).z) '&'
      ('not' All(a,PA,G).z 'or' All(b,PA,G).z)
    .=((All(a,PA,G).z 'or' 'not' All(b,PA,G).z) '&' 'not'
All(a,PA,G).z) 'or'
      ((All(a,PA,G).z 'or' 'not' All(b,PA,G).z) '&' All(b,PA,G).z)
     by BINARITH:22
    .=('not' All(a,PA,G).z '&' All(a,PA,G).z 'or'
       'not' All(a,PA,G).z '&' 'not' All(b,PA,G).z) 'or'
      (All(b,PA,G).z '&' (All(a,PA,G).z 'or' 'not' All(b,PA,G).z))
     by BINARITH:22
    .=(('not' All(a,PA,G).z '&' All(a,PA,G).z) 'or'
       ('not' All(a,PA,G).z '&' 'not' All(b,PA,G).z)) 'or'
      ((All(b,PA,G).z '&' All(a,PA,G).z) 'or'
       (All(b,PA,G).z '&' 'not' All(b,PA,G).z)) by BINARITH:22
    .=(FALSE 'or'
       ('not' All(a,PA,G).z '&' 'not' All(b,PA,G).z)) 'or'
      ((All(b,PA,G).z '&' All(a,PA,G).z) 'or'
       (All(b,PA,G).z '&' 'not' All(b,PA,G).z)) by MARGREL1:46
    .=(FALSE 'or'
       ('not' All(a,PA,G).z '&' 'not' All(b,PA,G).z)) 'or'
      ((All(b,PA,G).z '&' All(a,PA,G).z) 'or' FALSE)
     by MARGREL1:46
    .=(('not' All(a,PA,G).z '&' 'not' All(b,PA,G).z)) 'or'
      ((All(b,PA,G).z '&' All(a,PA,G).z) 'or' FALSE)
     by BINARITH:7
    .=('not' All(a,PA,G).z '&' 'not' All(b,PA,G).z) 'or'
      (All(b,PA,G).z '&' All(a,PA,G).z) by BINARITH:7;
    per cases;
    suppose A7:
      (for x being Element of Y st x in EqClass(z,CompF(PA,G)) holds
         a.x=TRUE) &
      (for x being Element of Y st x in EqClass(z,CompF(PA,G)) holds
         b.x=TRUE);
      then A8:All(a,PA,G).z=TRUE by A2,BVFUNC_1:def 19;
         B_INF(b,CompF(PA,G)).z = TRUE by A7,BVFUNC_1:def 19;
      then (All(a,PA,G) 'eqv' All(b,PA,G)).z
      =('not' TRUE '&' 'not' TRUE) 'or' TRUE by A3,A6,A8,MARGREL1:45
     .=TRUE by BINARITH:19;
    hence thesis;
    end;
    suppose A9:
      (for x being Element of Y st x in EqClass(z,CompF(PA,G)) holds
         a.x=TRUE) &
      not (for x being Element of Y st x in EqClass(z,CompF(PA,G)) holds
         b.x=TRUE);
      then consider x1 being Element of Y such that
        A10: x1 in EqClass(z,CompF(PA,G)) & b.x1<>TRUE;
      A11:b.x1=FALSE by A10,MARGREL1:43;
      A12:a.x1=TRUE by A9,A10;
      A13: (a 'eqv' b).x1
      ='not' (a.x1 'xor' b.x1) by BVFUNC_1:def 12
     .='not' (('not' a.x1 '&' b.x1) 'or' (a.x1 '&' 'not' b.x1))
      by BINARITH:def 2
     .='not' ('not' TRUE '&' FALSE) '&' 'not' (TRUE '&' 'not'
FALSE) by A11,A12,BINARITH:10
     .='not' (FALSE '&' FALSE) '&' 'not' (TRUE '&' 'not' FALSE) by MARGREL1:41
     .='not' (FALSE '&' FALSE) '&' 'not' (TRUE '&' TRUE) by MARGREL1:41
     .='not' FALSE '&' 'not' (TRUE '&' TRUE) by MARGREL1:45
     .='not' FALSE '&' 'not' TRUE by MARGREL1:45
     .=TRUE '&' 'not' TRUE by MARGREL1:41
     .=TRUE '&' FALSE by MARGREL1:41
     .=FALSE by MARGREL1:49;
         (a 'eqv' b).x1=TRUE by A5,A10;
    hence thesis by A13,MARGREL1:43;
    end;
    suppose A14:
      not (for x being Element of Y st x in EqClass(z,CompF(PA,G)) holds
         a.x=TRUE) &
      (for x being Element of Y st x in EqClass(z,CompF(PA,G)) holds
         b.x=TRUE);
      then consider x1 being Element of Y such that
        A15: x1 in EqClass(z,CompF(PA,G)) & a.x1<>TRUE;
      A16:a.x1=FALSE by A15,MARGREL1:43;
      A17:b.x1=TRUE by A14,A15;
      A18: (a 'eqv' b).x1
      ='not' (a.x1 'xor' b.x1) by BVFUNC_1:def 12
     .='not' (('not' a.x1 '&' b.x1) 'or' (a.x1 '&' 'not' b.x1))
      by BINARITH:def 2
     .='not' ('not' FALSE '&' TRUE) '&' 'not' (FALSE '&' 'not'
TRUE) by A16,A17,BINARITH:10
     .='not' (TRUE '&' TRUE) '&' 'not' (FALSE '&' 'not' TRUE) by MARGREL1:41
     .='not' (TRUE '&' TRUE) '&' 'not' (FALSE '&' FALSE) by MARGREL1:41
     .='not' TRUE '&' 'not' (FALSE '&' FALSE) by MARGREL1:45
     .='not' TRUE '&' 'not' FALSE by MARGREL1:45
     .=FALSE '&' 'not' FALSE by MARGREL1:41
     .=FALSE by MARGREL1:49;
         (a 'eqv' b).x1=TRUE by A5,A15;
    hence thesis by A18,MARGREL1:43;
    end;
    suppose A19:
      not (for x being Element of Y st x in EqClass(z,CompF(PA,G)) holds
         a.x=TRUE) &
      not (for x being Element of Y st x in EqClass(z,CompF(PA,G)) holds
         b.x=TRUE);
      then A20:All(a,PA,G).z=FALSE by A2,BVFUNC_1:def 19;
         B_INF(b,CompF(PA,G)).z = FALSE by A19,BVFUNC_1:def 19;
      then (All(a,PA,G) 'eqv' All(b,PA,G)).z
      =(TRUE '&' 'not' FALSE) 'or' (FALSE '&' FALSE) by A3,A6,A20,MARGREL1:41
     .=(TRUE '&' TRUE) 'or' (FALSE '&' FALSE) by MARGREL1:41
     .=TRUE 'or' (FALSE '&' FALSE) by MARGREL1:45
     .=TRUE by BINARITH:19;
    hence thesis;
end;
end;

theorem  for a,b being Element of Funcs(Y,BOOLEAN),
G being Subset of PARTITIONS(Y),
PA being a_partition of Y holds
All(a '&' b,PA,G) '<' a '&' All(b,PA,G)
proof
  let a,b be Element of Funcs(Y,BOOLEAN);
  let G be Subset of PARTITIONS(Y);
  let PA be a_partition of Y;
A1:All(a '&' b,PA,G) = B_INF(a '&' b,CompF(PA,G)) by BVFUNC_2:def 9;
A2:All(b,PA,G) = B_INF(b,CompF(PA,G)) by BVFUNC_2:def 9;
    let z be Element of Y;
    assume A3:All(a '&' b,PA,G).z=TRUE;
A4:z in EqClass(z,CompF(PA,G)) & EqClass(z,CompF(PA,G)) in CompF(PA,G)
      by T_1TOPSP:def 1;
    A5: now assume
         not (for x being Element of Y st x in EqClass(z,CompF(PA,G)) holds
         (a '&' b).x=TRUE);
      then All(a '&' b,PA,G).z=FALSE by A1,BVFUNC_1:def 19;
      hence contradiction by A3,MARGREL1:43;
    end;
       now assume
         not (for x being Element of Y st x in EqClass(z,CompF(PA,G)) holds
         b.x=TRUE);
      then consider x1 being Element of Y such that
        A6:x1 in EqClass(z,CompF(PA,G)) & b.x1<>TRUE;
      A7:b.x1=FALSE by A6,MARGREL1:43;
         (a '&' b).x1=TRUE by A5,A6;
      then A8:a.x1 '&' b.x1=TRUE by VALUAT_1:def 6;
         a.x1 '&' b.x1 =FALSE by A7,MARGREL1:49;
      hence contradiction by A8,MARGREL1:43;
    end;
    then A9: B_INF(b,CompF(PA,G)).z = TRUE by BVFUNC_1:def 19;
       now assume
         not (for x being Element of Y st x in EqClass(z,CompF(PA,G)) holds
         a.x=TRUE);
      then consider x1 being Element of Y such that
        A10:x1 in EqClass(z,CompF(PA,G)) & a.x1<>TRUE;
      A11:a.x1=FALSE by A10,MARGREL1:43;
         (a '&' b).x1=TRUE by A5,A10;
      then A12:a.x1 '&' b.x1=TRUE by VALUAT_1:def 6;
         a.x1 '&' b.x1 =FALSE by A11,MARGREL1:49;
      hence contradiction by A12,MARGREL1:43;
    end;
    then a.z=TRUE by A4;
    then (a '&' All(b,PA,G)).z =TRUE '&' TRUE by A2,A9,VALUAT_1:def 6
   .=TRUE by MARGREL1:45;
    hence thesis;
end;

theorem  for a,u being Element of Funcs(Y,BOOLEAN),
G being Subset of PARTITIONS(Y),
PA being a_partition of Y holds
All(a,PA,G) 'imp' u '<' Ex(a 'imp' u,PA,G)
proof
  let a,u be Element of Funcs(Y,BOOLEAN);
  let G be Subset of PARTITIONS(Y);
  let PA be a_partition of Y;
A1:Ex(a 'imp' u,PA,G) = B_SUP(a 'imp' u,CompF(PA,G)) by BVFUNC_2:def 10;
A2:All(a,PA,G) = B_INF(a,CompF(PA,G)) by BVFUNC_2:def 9;
    let z be Element of Y;
    assume (All(a,PA,G) 'imp' u).z=TRUE;
    then A3:'not' All(a,PA,G).z 'or' u.z=TRUE by BVFUNC_1:def 11;
    A4: ('not' All(a,PA,G).z)=TRUE or
    ('not' All(a,PA,G).z)=FALSE by MARGREL1:39;
A5:z in EqClass(z,CompF(PA,G)) & EqClass(z,CompF(PA,G)) in CompF(PA,G)
      by T_1TOPSP:def 1;
       now per cases by A3,A4,BINARITH:7;
      case 'not' All(a,PA,G).z=TRUE;
      then All(a,PA,G).z=FALSE by MARGREL1:41;
      then All(a,PA,G).z<>TRUE by MARGREL1:43;
      then consider x1 being Element of Y such that
        A6: x1 in EqClass(z,CompF(PA,G)) & a.x1<>TRUE by A2,BVFUNC_1:def 19
;
         now assume
           not (ex x being Element of Y st
            x in EqClass(z,CompF(PA,G)) & (a 'imp' u).x=TRUE);
        then (a 'imp' u).x1<>TRUE by A6;
        then (a 'imp' u).x1=FALSE by MARGREL1:43;
        then A7:('not' a.x1) 'or' u.x1=FALSE by BVFUNC_1:def 11;
        A8:u.x1=TRUE or u.x1=FALSE by MARGREL1:39;
           'not' a.x1=TRUE or 'not' a.x1=FALSE by MARGREL1:39;
        then 'not' a.x1=FALSE & u.x1=FALSE
         by A7,A8,BINARITH:19;
        hence contradiction by A6,MARGREL1:41;
      end;
      hence thesis by A1,BVFUNC_1:def 20;
      end;
      case A9:u.z=TRUE;
         now assume
           not (ex x being Element of Y st
            x in EqClass(z,CompF(PA,G)) & (a 'imp' u).x=TRUE);
        then (a 'imp' u).z<>TRUE by A5;
        then (a 'imp' u).z=FALSE by MARGREL1:43;
        then A10:('not' a.z) 'or' u.z=FALSE by BVFUNC_1:def 11;
        A11:u.z=TRUE or u.z=FALSE by MARGREL1:39;
           'not' a.z=TRUE or 'not' a.z=FALSE by MARGREL1:39;
        then 'not' a.z=FALSE & u.z=FALSE
         by A10,A11,BINARITH:19;
        hence contradiction by A9,MARGREL1:43;
      end;
      hence thesis by A1,BVFUNC_1:def 20;
    end;
    end;
    hence thesis;
end;

theorem  for a,b being Element of Funcs(Y,BOOLEAN),
G being Subset of PARTITIONS(Y), PA being a_partition of Y holds
(a 'eqv' b)=I_el(Y) implies (All(a,PA,G) 'eqv' All(b,PA,G))=I_el(Y)
proof
  let a,b be Element of Funcs(Y,BOOLEAN);
  let G be Subset of PARTITIONS(Y);
  let PA be a_partition of Y;
  assume (a 'eqv' b)=I_el(Y);
  then (a 'imp' b)=I_el(Y) & (b 'imp' a)=I_el(Y) by Th10;
  then A1:'not' a 'or' b = I_el(Y) & 'not' b 'or' a = I_el(Y) by Th8;
A2:All(a,PA,G) = B_INF(a,CompF(PA,G)) by BVFUNC_2:def 9;
A3:All(b,PA,G) = B_INF(b,CompF(PA,G)) by BVFUNC_2:def 9;
     for z being Element of Y holds (All(a,PA,G) 'eqv' All(b,PA,G)).z=TRUE
  proof
    let z be Element of Y;
       All(a,PA,G) 'eqv' All(b,PA,G)
   =(All(a,PA,G) 'imp' All(b,PA,G)) '&'
    (All(b,PA,G) 'imp' All(a,PA,G)) by Th7
  .=('not' All(a,PA,G) 'or' All(b,PA,G)) '&'
    (All(b,PA,G) 'imp' All(a,PA,G)) by Th8
  .=('not' All(a,PA,G) 'or' All(b,PA,G)) '&'
    ('not' All(b,PA,G) 'or' All(a,PA,G)) by Th8
  .=(('not' All(a,PA,G) 'or' All(b,PA,G)) '&' 'not' All(b,PA,G)) 'or'
    (('not' All(a,PA,G) 'or' All(b,PA,G)) '&' All(a,PA,G)) by BVFUNC_1:15
  .=(('not' All(a,PA,G) '&' 'not' All(b,PA,G)) 'or' (All(b,PA,G) '&' 'not'
All(b,PA,G))) 'or'
    (('not' All(a,PA,G) 'or' All(b,PA,G)) '&' All(a,PA,G)) by BVFUNC_1:15
  .=(('not' All(a,PA,G) '&' 'not' All(b,PA,G)) 'or' (All(b,PA,G) '&' 'not'
All(b,PA,G))) 'or'
    (('not' All(a,PA,G) '&' All(a,PA,G)) 'or' (All(b,PA,G) '&' All(a,PA,G)))
    by BVFUNC_1:15
  .=(('not' All(a,PA,G) '&' 'not' All(b,PA,G)) 'or' O_el(Y)) 'or'
    (('not' All(a,PA,G) '&' All(a,PA,G)) 'or' (All(b,PA,G) '&' All(a,PA,G)))
    by Th5
  .=(('not' All(a,PA,G) '&' 'not' All(b,PA,G)) 'or' O_el(Y)) 'or'
    (O_el(Y) 'or' (All(b,PA,G) '&' All(a,PA,G)))
    by Th5
  .=('not' All(a,PA,G) '&' 'not' All(b,PA,G)) 'or'
    (O_el(Y) 'or' (All(b,PA,G) '&' All(a,PA,G)))
    by BVFUNC_1:12
  .=('not' All(a,PA,G) '&' 'not' All(b,PA,G)) 'or'
    (All(b,PA,G) '&' All(a,PA,G))
    by BVFUNC_1:12;
then A4:(All(a,PA,G) 'eqv' All(b,PA,G)).z
  =('not' All(a,PA,G) '&' 'not' All(b,PA,G)).z 'or'
    ( All(b,PA,G) '&' All(a,PA,G)).z by BVFUNC_1:def 7
  .=('not' All(a,PA,G)).z '&' ('not' All(b,PA,G)).z 'or'
    ( All(b,PA,G) '&' All(a,PA,G)).z by VALUAT_1:def 6
  .=(('not' All(a,PA,G)).z '&' ('not' All(b,PA,G)).z) 'or'
     All(b,PA,G).z '&' All(a,PA,G).z by VALUAT_1:def 6
  .=('not' All(a,PA,G).z '&' ('not' All(b,PA,G)).z) 'or'
    ( All(b,PA,G).z '&' All(a,PA,G).z) by VALUAT_1:def 5
  .=('not' All(a,PA,G).z '&' 'not' All(b,PA,G).z) 'or'
    ( All(b,PA,G).z '&' All(a,PA,G).z) by VALUAT_1:def 5;
    A5:now assume A6:
      (for x being Element of Y st x in EqClass(z,CompF(PA,G)) holds
         a.x=TRUE) &
      (for x being Element of Y st x in EqClass(z,CompF(PA,G)) holds
         b.x=TRUE);
      then A7:All(a,PA,G).z = TRUE by A2,BVFUNC_1:def 19;
         B_INF(b,CompF(PA,G)).z = TRUE by A6,BVFUNC_1:def 19;
      then (All(a,PA,G) 'eqv' All(b,PA,G)).z
     =('not' TRUE '&' 'not' TRUE) 'or' TRUE by A3,A4,A7,MARGREL1:45
    .=TRUE by BINARITH:19;
      hence thesis;
    end;
    A8:now assume A9:
      (for x being Element of Y st x in EqClass(z,CompF(PA,G)) holds
         a.x=TRUE) &
      not (for x being Element of Y st x in EqClass(z,CompF(PA,G)) holds
         b.x=TRUE);
      then consider x1 being Element of Y such that
        A10:x1 in EqClass(z,CompF(PA,G)) & b.x1<>TRUE;
      A11:b.x1=FALSE by A10,MARGREL1:43;
      A12:a.x1=TRUE by A9,A10;
         ('not' a 'or' b).x1 =('not' a).x1 'or' b.x1 by BVFUNC_1:def 7
    .='not' TRUE 'or' FALSE by A11,A12,VALUAT_1:def 5
    .=FALSE 'or' FALSE by MARGREL1:41
    .=FALSE by BINARITH:7;
      then ('not' a 'or' b).x1<>TRUE by MARGREL1:43;
      hence thesis by A1,BVFUNC_1:def 14;
    end;
    A13:now assume A14:
      not (for x being Element of Y st x in EqClass(z,CompF(PA,G)) holds
         a.x=TRUE) &
      (for x being Element of Y st x in EqClass(z,CompF(PA,G)) holds
         b.x=TRUE);
      then consider x1 being Element of Y such that
        A15:x1 in EqClass(z,CompF(PA,G)) & a.x1<>TRUE;
      A16:a.x1=FALSE by A15,MARGREL1:43;
      A17:b.x1=TRUE by A14,A15;
         ('not' b 'or' a).x1
     =('not' b).x1 'or' a.x1 by BVFUNC_1:def 7
    .='not' TRUE 'or' FALSE by A16,A17,VALUAT_1:def 5
    .=FALSE 'or' FALSE by MARGREL1:41
    .=FALSE by BINARITH:7;
      then ('not' b 'or' a).x1<>TRUE by MARGREL1:43;
      hence thesis by A1,BVFUNC_1:def 14;
    end;
       now assume A18:
      not (for x being Element of Y st x in EqClass(z,CompF(PA,G)) holds
         a.x=TRUE) &
      not (for x being Element of Y st x in EqClass(z,CompF(PA,G)) holds
         b.x=TRUE);
      then A19:All(a,PA,G).z = FALSE by A2,BVFUNC_1:def 19;
         B_INF(b,CompF(PA,G)).z = FALSE by A18,BVFUNC_1:def 19;
      then (All(a,PA,G) 'eqv' All(b,PA,G)).z
     =(TRUE '&' 'not' FALSE) 'or' (FALSE '&' FALSE) by A3,A4,A19,MARGREL1:41
    .=(TRUE '&' TRUE) 'or' (FALSE '&' FALSE) by MARGREL1:41
    .=TRUE 'or' (FALSE '&' FALSE) by MARGREL1:45
    .=TRUE by BINARITH:19;
      hence thesis;
    end;
    hence thesis by A5,A8,A13;
  end;
  hence thesis by BVFUNC_1:def 14;
end;

theorem  for a,b being Element of Funcs(Y,BOOLEAN),
G being Subset of PARTITIONS(Y), PA being a_partition of Y holds
(a 'eqv' b)=I_el(Y) implies (Ex(a,PA,G) 'eqv' Ex(b,PA,G))=I_el(Y)
proof
  let a,b be Element of Funcs(Y,BOOLEAN);
  let G be Subset of PARTITIONS(Y);
  let PA be a_partition of Y;
  assume (a 'eqv' b)=I_el(Y);
  then (a 'imp' b)=I_el(Y) & (b 'imp' a)=I_el(Y) by Th10;
  then A1:'not' a 'or' b = I_el(Y) & 'not' b 'or' a = I_el(Y) by Th8;
A2:Ex(a,PA,G) = B_SUP(a,CompF(PA,G)) by BVFUNC_2:def 10;
A3:Ex(b,PA,G) = B_SUP(b,CompF(PA,G)) by BVFUNC_2:def 10;
     for z being Element of Y holds (Ex(a,PA,G) 'eqv' Ex(b,PA,G)).z=TRUE
  proof
    let z be Element of Y;
       Ex(a,PA,G) 'eqv' Ex(b,PA,G)
   =(Ex(a,PA,G) 'imp' Ex(b,PA,G)) '&'
    (Ex(b,PA,G) 'imp' Ex(a,PA,G)) by Th7
  .=('not' Ex(a,PA,G) 'or' Ex(b,PA,G)) '&'
    (Ex(b,PA,G) 'imp' Ex(a,PA,G)) by Th8
  .=('not' Ex(a,PA,G) 'or' Ex(b,PA,G)) '&'
    ('not' Ex(b,PA,G) 'or' Ex(a,PA,G)) by Th8
  .=(('not' Ex(a,PA,G) 'or' Ex(b,PA,G)) '&' 'not' Ex(b,PA,G)) 'or'
    (('not' Ex(a,PA,G) 'or' Ex(b,PA,G)) '&' Ex(a,PA,G)) by BVFUNC_1:15
  .=(('not' Ex(a,PA,G) '&' 'not' Ex(b,PA,G)) 'or' (Ex(b,PA,G) '&' 'not'
Ex(b,PA,G))) 'or'
    (('not' Ex(a,PA,G) 'or' Ex(b,PA,G)) '&' Ex(a,PA,G)) by BVFUNC_1:15
  .=(('not' Ex(a,PA,G) '&' 'not' Ex(b,PA,G)) 'or' (Ex(b,PA,G) '&' 'not'
Ex(b,PA,G))) 'or'
    (('not' Ex(a,PA,G) '&' Ex(a,PA,G)) 'or' (Ex(b,PA,G) '&' Ex(a,PA,G)))
    by BVFUNC_1:15
  .=(('not' Ex(a,PA,G) '&' 'not' Ex(b,PA,G)) 'or' O_el(Y)) 'or'
    (('not' Ex(a,PA,G) '&' Ex(a,PA,G)) 'or' (Ex(b,PA,G) '&' Ex(a,PA,G)))
    by Th5
  .=(('not' Ex(a,PA,G) '&' 'not' Ex(b,PA,G)) 'or' O_el(Y)) 'or'
    (O_el(Y) 'or' (Ex(b,PA,G) '&' Ex(a,PA,G)))
    by Th5
  .=('not' Ex(a,PA,G) '&' 'not' Ex(b,PA,G)) 'or'
    (O_el(Y) 'or' (Ex(b,PA,G) '&' Ex(a,PA,G)))
    by BVFUNC_1:12
  .=('not' Ex(a,PA,G) '&' 'not' Ex(b,PA,G)) 'or'
    (Ex(b,PA,G) '&' Ex(a,PA,G))
    by BVFUNC_1:12;
then A4:(Ex(a,PA,G) 'eqv' Ex(b,PA,G)).z
   =('not' Ex(a,PA,G) '&' 'not' Ex(b,PA,G)).z 'or'
    ( Ex(b,PA,G) '&' Ex(a,PA,G)).z by BVFUNC_1:def 7
  .= ('not' Ex(a,PA,G)).z '&' ('not' Ex(b,PA,G)).z 'or'
    ( Ex(b,PA,G) '&' Ex(a,PA,G)).z by VALUAT_1:def 6
  .= ('not' Ex(a,PA,G)).z '&' ('not' Ex(b,PA,G)).z 'or'
    (Ex(b,PA,G).z '&' Ex(a,PA,G).z) by VALUAT_1:def 6
  .=('not' Ex(a,PA,G).z '&' ('not' Ex(b,PA,G)).z) 'or'
    ( Ex(b,PA,G).z '&' Ex(a,PA,G).z) by VALUAT_1:def 5
  .=('not' Ex(a,PA,G).z '&' 'not' Ex(b,PA,G).z) 'or'
    ( Ex(b,PA,G).z '&' Ex(a,PA,G).z) by VALUAT_1:def 5;
    per cases;
    suppose A5:
      (ex x being Element of Y st
            x in EqClass(z,CompF(PA,G)) & a.x=TRUE) &
      (ex x being Element of Y st
            x in EqClass(z,CompF(PA,G)) & b.x=TRUE);
    then A6:Ex(a,PA,G).z = TRUE by A2,BVFUNC_1:def 20;
       B_SUP(b,CompF(PA,G)).z = TRUE by A5,BVFUNC_1:def 20;
    then (Ex(a,PA,G) 'eqv' Ex(b,PA,G)).z
     =('not' TRUE '&' 'not' TRUE) 'or' TRUE by A3,A4,A6,MARGREL1:45
    .=TRUE by BINARITH:19;
    hence thesis;
    end;
    suppose A7:
      (ex x being Element of Y st
            x in EqClass(z,CompF(PA,G)) & a.x=TRUE) &
      not (ex x being Element of Y st
            x in EqClass(z,CompF(PA,G)) & b.x=TRUE);
    then consider x1 being Element of Y such that
      A8:x1 in EqClass(z,CompF(PA,G)) & a.x1=TRUE;
       b.x1<>TRUE by A7,A8;
    then A9:b.x1=FALSE by MARGREL1:43;
       ('not' a 'or' b).x1 =('not' a).x1 'or' b.x1 by BVFUNC_1:def 7
    .='not' TRUE 'or' FALSE by A8,A9,VALUAT_1:def 5
    .=FALSE 'or' FALSE by MARGREL1:41
    .=FALSE by BINARITH:7;
      then ('not' a 'or' b).x1<>TRUE by MARGREL1:43;
    hence thesis by A1,BVFUNC_1:def 14;
    end;
    suppose A10:
      not (ex x being Element of Y st
            x in EqClass(z,CompF(PA,G)) & a.x=TRUE) &
      (ex x being Element of Y st
            x in EqClass(z,CompF(PA,G)) & b.x=TRUE);
    then consider x1 being Element of Y such that
      A11:x1 in EqClass(z,CompF(PA,G)) & b.x1=TRUE;
       a.x1<>TRUE by A10,A11;
    then A12:a.x1=FALSE by MARGREL1:43;
       ('not' b 'or' a).x1 =('not' b).x1 'or' a.x1 by BVFUNC_1:def 7
    .='not' TRUE 'or' FALSE by A11,A12,VALUAT_1:def 5
    .=FALSE 'or' FALSE by MARGREL1:41
    .=FALSE by BINARITH:7;
      then ('not' b 'or' a).x1<>TRUE by MARGREL1:43;
    hence thesis by A1,BVFUNC_1:def 14;
    end;
    suppose A13:
      not (ex x being Element of Y st
            x in EqClass(z,CompF(PA,G)) & a.x=TRUE) &
      not (ex x being Element of Y st
            x in EqClass(z,CompF(PA,G)) & b.x=TRUE);
    then A14:Ex(a,PA,G).z = FALSE by A2,BVFUNC_1:def 20;
       B_SUP(b,CompF(PA,G)).z = FALSE by A13,BVFUNC_1:def 20;
    then (Ex(a,PA,G) 'eqv' Ex(b,PA,G)).z
     =(TRUE '&' 'not' FALSE) 'or' (FALSE '&' FALSE) by A3,A4,A14,MARGREL1:41
    .=(TRUE '&' TRUE) 'or' (FALSE '&' FALSE) by MARGREL1:41
    .=TRUE 'or' (FALSE '&' FALSE) by MARGREL1:45
    .=TRUE by BINARITH:19;
    hence thesis;
  end;
  end;
  hence thesis by BVFUNC_1:def 14;
end;
