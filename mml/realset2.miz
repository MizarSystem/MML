:: Properties of Fields
::  by J\'ozef Bia{\l}as
::
:: Received June 20, 1990
:: Copyright (c) 1990 Association of Mizar Users

environ

 vocabularies BOOLE, REALSET1, FUNCT_1, RELAT_1, BINOP_1, RLVECT_1, QC_LANG1,
      VECTSP_1, REALSET2, NAT_1, FUNCOP_1, FUNCT_4, CAT_1, FUNCT_7,
      GROUP_1;
 notations TARSKI, XBOOLE_0, ENUMSET1, ZFMISC_1, SUBSET_1, RELAT_1, FUNCT_1,
      REALSET1, FUNCOP_1, FUNCT_2, BINOP_1, FUNCT_4, FUNCT_7,
      STRUCT_0, RLVECT_1, GROUP_1, VECTSP_1;
 constructors ENUMSET1, BINOP_1, REALSET1, VECTSP_1, NAT_D, FUNCOP_1, FUNCT_4,
      FUNCT_7;
 registrations REALSET1, RELSET_1, SUBSET_1, XBOOLE_0, RLVECT_1, GROUP_1,
  VECTSP_1, STRUCT_0, FUNCOP_1;
 requirements SUBSET, BOOLE;
 definitions RLVECT_1, TARSKI, XBOOLE_0, REALSET1, BINOP_1, STRUCT_0, FUNCOP_1;
 theorems TARSKI, FUNCT_1, FUNCT_2, ZFMISC_1, ENUMSET1, REALSET1, RELAT_1,
      VECTSP_1, RELSET_1, XBOOLE_0, RLVECT_1, SUBSET_1, FUNCT_4, FUNCOP_1,
      CARD_1, XBOOLE_1, FUNCT_7;
 schemes FUNCT_2;

begin

reserve x,y for set;

definition
  let IT be LoopStr;
  attr IT is zeroed means :Def1:
                 for a being Element of IT holds
                      (the add of IT).(a,0.IT) = a &
                      (the add of IT).(0.IT,a) = a;
  attr IT is complementable means :Def2:
                 for a being Element of IT
                  ex b being Element of IT st
                      (the add of IT).(a,b) = 0.IT &
                      (the add of IT).(b,a) = 0.IT;
end;

Lm1:
now consider x being set;
     set B = {x};
A1:  x in B by TARSKI:def 1;
     consider og being BinOp of B;
A2:  og.(x,x) = x
     proof
     A3:dom og = [:B,B:] & rng og c= B by FUNCT_2:def 1,RELSET_1:12;
        [x,x] in [:B,B:] by A1,ZFMISC_1:def 2;
        then og.(x,x) in rng og by A3,FUNCT_1:def 5;
        hence thesis by A3,TARSKI:def 1;
     end;
     reconsider ng = x as Element of B by TARSKI:def 1;
A4:  for a,b,c being Element of B holds og.(og.(a,b),c) = og.(a,og.(b,c))
     proof
         let a,b,c be Element of B;
         a = x & b = x & c = x by TARSKI:def 1;
         hence thesis by A2;
     end;
A5:  for a being Element of B holds og.(a,ng) = a & og.(ng,a) = a
     proof
         let a be Element of B;
         a = x by TARSKI:def 1;
         hence thesis by A2;
     end;
A6: for a being Element of B ex b being Element of B st
     og.(a,b) = ng & og.(b,a) = ng
     proof
         let a be Element of B;
         take ng;
         thus thesis by TARSKI:def 1;
     end;
        for a,b being Element of B holds og.(a,b) = og.(b,a)
     proof
         let a,b be Element of B;
         a = x & b = x by TARSKI:def 1;
         hence thesis;
     end;
     hence ex A being non empty set st
              ex og being BinOp of A st
              ex ng being Element of A st
                 (for a,b,c being Element of A holds
                      og.(og.(a,b),c) = og.(a,og.(b,c))) &
                 (for a being Element of A holds
                      og.(a,ng) = a & og.(ng,a) = a) &
                 (for a being Element of A ex b being Element of A st
                      og.(a,b) = ng & og.(b,a) = ng) &
                  for a,b being Element of A holds
                      og.(a,b) = og.(b,a) by A4,A5,A6;
end;

registration
 cluster strict Abelian add-associative zeroed
                        complementable (non empty LoopStr);
  existence
   proof
     consider A being non empty set, og being BinOp of A, ng being Element of A
      such that
A1:       (for a,b,c being Element of A holds
                 og.(og.(a,b),c) = og.(a,og.(b,c))) &
            (for a being Element of A holds
                 og.(a,ng) = a & og.(ng,a) = a) &
            (for a being Element of A ex b being Element of A st
                 og.(a,b) = ng & og.(b,a) = ng) &
             for a,b being Element of A holds
                 og.(a,b) = og.(b,a) by Lm1;
    take L =LoopStr(#A,og,ng#);
C:    for a,b,c being Element of L holds a+b+c = a+(b+c) by A1;
B:    for a,b being Element of L holds a+b = b+a by A1;
      ng = 0.L;
    hence thesis by A1,Def1,Def2,RLVECT_1:def 5,def 6,B,C;
   end;
end;

definition
   mode AbGroup is Abelian add-associative zeroed complementable
    (non empty LoopStr);
end;

definition
  canceled 2;
  let IT be 1-sorted;
  attr IT is trivial means
   the carrier of IT is trivial;
end;

Lm2:
 for S being 1-sorted holds S is trivial iff
   for x,y being Element of S holds x = y
 proof
  let S be 1-sorted;
  set I = the carrier of S;
  per cases;
  suppose A1:I is non empty;
  thus S is trivial implies
    for x,y being Element of I holds x = y
  proof assume
A2:   I is trivial;
    per cases by A2,REALSET1:def 4;
    suppose I is empty;
    hence thesis by A1;
    end;
    suppose ex a being set st I = {a};
    then consider a being set such that
A3:   I = {a};
    let x, y be Element of I;
    thus x = a by A3,TARSKI:def 1
          .= y by A3,TARSKI:def 1;
  end;
  end;
  assume
A4: for x,y being Element of I holds x = y;
  consider a being set such that
A5:  a in I by A1,XBOOLE_0:def 1;
     I = {a}
  proof
    hereby
     let i be set;
     assume i in I;
     then a = i by A4,A5;
     hence i in {a} by TARSKI:def 1;
    end;
    let i be set;
    assume i in {a};
    hence i in I by A5,TARSKI:def 1;
  end;
  hence I is empty or ex x being set st I = {x};
  end;
  suppose A6:I is empty;
  thus S is trivial implies
    for x,y being Element of I holds x = y
  proof assume
      I is trivial;
    let x, y be Element of I;
    thus x = {} by A6,SUBSET_1:def 2
          .= y by A6,SUBSET_1:def 2;
  end;
  assume for x,y being Element of I holds x = y;
  thus I is empty or ex x being set st I = {x} by A6;
 end;
 end;

registration
 cluster trivial 1-sorted;
 existence
  proof
   take O = 1-sorted(#{0}#);
      now
     let x,y be Element of O;
     thus x = 0 by TARSKI:def 1 .= y by TARSKI:def 1;
   end;
   hence thesis by Lm2;
  end;
end;

Lm3:
 now
  let A be non trivial set;
  let od,om be BinOp of A;
  let nd be Element of A;
  let nm be Element of A\{nd};
  let nm0 be Element of A;
  assume
A1: nm0=nm;
   set F = doubleLoopStr(#A,od,om,nm0,nd#);
  thus F is non trivial
   proof
        now
      take nd,nm0;
      not nm in {nd} by XBOOLE_0:def 4;
      hence nd <> nm0 by A1,TARSKI:def 1;
     end;
     hence thesis by Lm2;
   end;
  thus F is strict;
 end;

registration
 cluster non trivial strict doubleLoopStr;
 existence
  proof
   consider A be non trivial set,
            od,om be BinOp of A,
            nd be Element of A,
            nm be Element of A\{nd};
   reconsider nm0=nm as Element of A;
   take doubleLoopStr(#A,od,om,nm0,nd#);
   thus thesis by Lm3;
  end;
end;

definition
 canceled;
 let IT be 1-sorted;
 redefine attr IT is trivial means
     for x,y being Element of IT holds x = y;
compatibility by Lm2;
end;

:: Properties of fields

     consider x,y being set such that
Lm4:  x<>y by VECTSP_1:78;
     set Z = {x,y};
Lm5:  x in Z by TARSKI:def 2;
Lm6:  y in Z by TARSKI:def 2;
        for s being Element of Z holds Z\{s} is non empty set
     proof
         let s be Element of Z;
         per cases by TARSKI:def 2;
         suppose
        s=x;
         then not y in {s} by Lm4,TARSKI:def 1;
         hence thesis by Lm6,XBOOLE_0:def 4;
         end;
         suppose
           s=y;
         then not x in {s} by Lm4,TARSKI:def 1;
         hence thesis by Lm5,XBOOLE_0:def 4;
     end;
     end;
     then reconsider A = Z as non trivial set by REALSET1:6;
     reconsider nd = x as Element of A by TARSKI:def 2;
Lm7:  for t being set holds t in [:A,A:] iff
     (t=[x,x] or t=[x,y] or t=[y,x] or t=[y,y])
     proof
        let t be set;
           t in [:A,A:] implies (t=[x,x] or t=[x,y] or t=[y,x] or t=[y,y])
        proof
           assume t in [:A,A:];
           then consider t1,t2 being set such that
        A1:t1 in A & t2 in A & t=[t1,t2] by ZFMISC_1:def 2;
           (t1=x or t1=y) & (t2=x or t2=y) by A1,TARSKI:def 2;
           hence thesis by A1;
        end;
        hence thesis by Lm5,Lm6,ZFMISC_1:def 2;
     end;
     set x1=[[x,x],x], x2=[[x,y],y], x3=[[y,x],y], x4=[[y,y],x];
     set F={x1,x2,x3,x4};
Lm9: for p being set st p in F ex q,r being set st [q,r] = p
     proof
         let p be set;
         assume p in F;
         then p=[[x,x],x] or p=[[x,y],y] or p=[[y,x],y] or p=[[y,y],x]
           by ENUMSET1:def 2;
         hence thesis;
     end;
        for q,r1,r2 being set st [q,r1] in F & [q,r2] in F holds r1 = r2
     proof
         let q,r1,r2 be set;
         assume
      A1:[q,r1] in F & [q,r2] in F;
         then A2:[q,r1]=[[x,x],x] or [q,r1]=[[x,y],y] or
         [q,r1]=[[y,x],y] or [q,r1]=[[y,y],x] by ENUMSET1:def 2;
            [q,r2]=[[x,x],x] or [q,r2]=[[x,y],y] or
         [q,r2]=[[y,x],y] or [q,r2]=[[y,y],x] by A1,ENUMSET1:def 2;
         then ((q=[x,x] & r1=x) or (q=[x,y] & r1=y) or
         (q=[y,x] & r1=y) or (q=[y,y] & r1=x)) &
         ((q=[x,x] & r2=x) or (q=[x,y] & r2=y) or
         (q=[y,x] & r2=y) or (q=[y,y] & r2=x)) by A2,ZFMISC_1:33;
         hence thesis by ZFMISC_1:33;
     end;
     then reconsider od = F as Function by Lm9,FUNCT_1:2;
        for t being set holds t in [:A,A:] iff ex r being set st [t,r] in F
     proof
         let t be set;
      A1:t in [:A,A:] implies ex r being set st [t,r] in F
         proof
             assume
A2:          t in [:A,A:];
         A3:(t=[x,x] or t=[y,y]) implies ex r being set st [t,r] in F
             proof
                 assume t=[x,x] or t=[y,y];
                 then [t,x] in F by ENUMSET1:def 2;
                 hence thesis;
             end;
                (t=[x,y] or t=[y,x]) implies ex r being set st [t,r] in F
             proof
                 assume t=[x,y] or t=[y,x];
                 then [t,y] in F by ENUMSET1:def 2;
                 hence thesis;
             end;
             hence thesis by A2,A3,Lm7;
         end;
            (ex r being set st [t,r] in F) implies t in [:A,A:]
         proof
            given r being set such that
         A4:[t,r] in F;
               [t,r]=[[x,x],x] or [t,r]=[[x,y],y] or
            [t,r]=[[y,x],y] or [t,r]=[[y,y],x] by A4,ENUMSET1:def 2;
            then t=[x,x] or t=[x,y] or t=[y,x] or t=[y,y] by ZFMISC_1:33;
            hence thesis by Lm7;
         end;
         hence thesis by A1;
     end;
then Lm10:[:A,A:] = dom od by RELAT_1:def 4;
 then Lm11: [x,x] in dom od by Lm7;
     Lm12: [[x,x],x] in od by ENUMSET1:def 2;
then Lm13: od.(x,x)=x by Lm11,FUNCT_1:def 4;
 Lm14: [x,y] in dom od by Lm7,Lm10;
     Lm15: [[x,y],y] in od by ENUMSET1:def 2;
then Lm16:od.(x,y)=y by Lm14,FUNCT_1:def 4;
 Lm17: [y,x] in dom od by Lm7,Lm10;
     Lm18: [[y,x],y] in od by ENUMSET1:def 2;
then Lm19:od.(y,x)=y by Lm17,FUNCT_1:def 4;
 Lm20: [y,y] in dom od by Lm7,Lm10;
        [[y,y],x] in od by ENUMSET1:def 2;
then Lm21:od.(y,y)=x by Lm20,FUNCT_1:def 4;
then Lm22:for t being set st t in [:A,A:] holds od.t in A
     by Lm5,Lm6,Lm7,Lm13,Lm16,Lm19;
     set s2=[[x,y],x], s3=[[y,x],x], s4=[[y,y],y];
     set D={x1,s2,s3,s4};
Lm23:for p being set st p in D ex q,r being set st [q,r] = p
     proof
         let p be set;
         assume p in D;
         then p=[[x,x],x] or p=[[x,y],x] or p=[[y,x],x] or p=[[y,y],y]
         by ENUMSET1:def 2;
         hence thesis;
     end;
        for q,r1,r2 being set st [q,r1] in D & [q,r2] in D holds r1 = r2
     proof
         let q,r1,r2 be set;
         assume
      A1:[q,r1] in D & [q,r2] in D;
      then A2:[q,r1]=[[x,x],x] or [q,r1]=[[x,y],x] or
         [q,r1]=[[y,x],x] or [q,r1]=[[y,y],y] by ENUMSET1:def 2;
            [q,r2]=[[x,x],x] or [q,r2]=[[x,y],x] or
         [q,r2]=[[y,x],x] or [q,r2]=[[y,y],y] by A1,ENUMSET1:def 2;
         then ((q=[x,x] & r1=x) or (q=[x,y] & r1=x) or
         (q=[y,x] & r1=x) or (q=[y,y] & r1=y)) &
         ((q=[x,x] & r2=x) or (q=[x,y] & r2=x) or
         (q=[y,x] & r2=x) or (q=[y,y] & r2=y)) by A2,ZFMISC_1:33;
         hence thesis by ZFMISC_1:33;
     end;
     then reconsider om = D as Function by Lm23,FUNCT_1:2;
        for t being set holds t in [:A,A:] iff ex r being set st [t,r] in D
     proof
         let t be set;
     A1:t in [:A,A:] implies ex r being set st [t,r] in D
         proof
           assume
A2:        t in [:A,A:];
        A3:(t=[x,x] or t=[x,y] or t=[y,x]) implies
           ex r being set st [t,r] in D
             proof
                 assume t=[x,x] or t=[x,y] or t=[y,x];
                 then [t,x] in D by ENUMSET1:def 2;
                 hence thesis;
             end;
                t=[y,y] implies ex r being set st [t,r] in D
             proof
                 assume t=[y,y];
                 then [t,y] in D by ENUMSET1:def 2;
                 hence thesis;
             end;
             hence thesis by A2,A3,Lm7;
         end;
            (ex r being set st [t,r] in D) implies t in [:A,A:]
         proof
            given r being set such that
         A4:[t,r] in D;
               [t,r]=[[x,x],x] or [t,r]=[[x,y],x] or
            [t,r]=[[y,x],x] or [t,r]=[[y,y],y] by A4,ENUMSET1:def 2;
            then t=[x,x] or t=[x,y] or t=[y,x] or t=[y,y] by ZFMISC_1:33;
            hence thesis by Lm7;
         end;
         hence thesis by A1;
     end;
then Lm24: [:A,A:] = dom om by RELAT_1:def 4;
 then Lm25: [x,x] in dom om by Lm7;
        [[x,x],x] in om by ENUMSET1:def 2;
then Lm26:om.(x,x)=x by Lm25,FUNCT_1:def 4;
 Lm27: [x,y] in dom om by Lm7,Lm24;
        [[x,y],x] in om by ENUMSET1:def 2;
then Lm28: om.(x,y)=x by Lm27,FUNCT_1:def 4;
 Lm29: [y,x] in dom om by Lm7,Lm24;
        [[y,x],x] in om by ENUMSET1:def 2;
then Lm30:om.(y,x)=x by Lm29,FUNCT_1:def 4;
 Lm31: [y,y] in dom om by Lm7,Lm24;
        [[y,y],y] in om by ENUMSET1:def 2;
then Lm32:om.(y,y)=y by Lm31,FUNCT_1:def 4;
then Lm33:for t being set st t in [:A,A:] holds om.t in A
         by Lm5,Lm6,Lm7,Lm26,Lm28,Lm30;
then Lm34:om is BinOp of A by Lm24,FUNCT_2:5;
Lm35:A\{x}={y} by Lm4,ZFMISC_1:23;
  then Lm36:[:A\{x},A\{x}:] = {[y,y]} by ZFMISC_1:35;
Lm37: for t being set holds t in [:A\{x},A\{x}:] implies om.t in A\{x}
     proof
        let t be set;
        assume t in [:A\{x},A\{x}:];
        then t=[y,y] by Lm36,TARSKI:def 1;
        hence thesis by Lm32,Lm35,TARSKI:def 1;
     end;
     reconsider nm = y as Element of A\{nd} by Lm35,TARSKI:def 1;
     reconsider od0=od as BinOp of A by Lm10,Lm22,FUNCT_2:5;
     reconsider om0=om as BinOp of A by Lm24,Lm33,FUNCT_2:5;
Lm38: for a,b,d being Element of A holds
     od0.(od0.(a,b),d) = od0.(a,od0.(b,d))
     proof
       let a,b,d be Element of A;
          (a=x & b=x & d=x) or (a=x & b=x & d=y) or (a=x & b=y & d=x) or
       (a=x & b=y & d=y) or (a=y & b=x & d=x) or (a=y & b=x & d=y) or
       (a=y & b=y & d=x) or (a=y & b=y & d=y) by TARSKI:def 2;
       hence thesis by Lm12,Lm16,Lm19,Lm21,Lm11,FUNCT_1:def 4;
     end;
Lm39: for a being Element of A holds od0.(a,nd) = a & od0.(nd,a) = a
     proof
       let a be Element of A;
          a=x or a=y by TARSKI:def 2;
       hence thesis by Lm11,Lm12,Lm14,Lm15,Lm17,Lm18,FUNCT_1:def 4;
     end;
Lm40: for a being Element of A ex b being Element of A st
     od0.(a,b) = nd & od0.(b,a) = nd
     proof
       let a be Element of A;
          a=x or a=y by TARSKI:def 2;
       hence thesis by Lm13,Lm21;
     end;
B:   nd = 0.LoopStr(#A,od0,nd#);
C:  for a,b,c being Element of LoopStr(#A,od0,nd#) holds a+b+c = a+(b+c)
         by Lm38;
        for a,b being Element of LoopStr(#A,od0,nd#) holds a+b = b+a
     proof
       let a,b be Element of LoopStr(#A,od0,nd#);
          (a=x & b=x) or (a=x & b=y) or (a=y & b=x) or (a=y & b=y)
         by TARSKI:def 2;
       hence thesis by Lm14,Lm15,Lm19,FUNCT_1:def 4;
     end;
then Lm41: LoopStr(#A,od0,nd#) is AbGroup
      by Def1,Def2,RLVECT_1:def 5,def 6,Lm39,Lm40,B,C;
     reconsider om1=om as DnT of nd,A by Lm34,Lm37,REALSET1:def 8;
Lm42:for B being non empty set, P being BinOp of B,
         e being Element of B st
     B = A\{nd} & e = nm & P = om1!(A,nd) holds LoopStr(#B,P,e#) is AbGroup
     proof
        let B be non empty set,
            P be BinOp of B,
            e be Element of B;
        assume
    A1: B = A\{nd} & e = nm & P = om1!(A,nd);
    A2: dom P = [:B,B:] & rng P c= B by FUNCT_2:def 1,RELSET_1:12;
    A4: for a,b,c being Element of B holds P.(P.(a,b),c) = P.(a,P.(b,c))
        proof
          let a,b,c be Element of B;
          a = y & b = y & c = y by A1,Lm35,TARSKI:def 1;
          hence thesis by A1,Lm35,TARSKI:def 1;
        end;
    A5: for a being Element of B holds P.(a,e) = a & P.(e,a) = a
        proof
          let a be Element of B;
          a = y by A1,Lm35,TARSKI:def 1;
          hence thesis by A1,Lm35,TARSKI:def 1;
        end;
    A6: for a being Element of B ex b being Element of B st
        P.(a,b) = e & P.(b,a) = e
        proof
          let a be Element of B;
          take e;
          thus thesis by A1,Lm35,TARSKI:def 1;
        end;
B:       e = 0.LoopStr(#B,P,e#);
C:     for a,b,c being Element of LoopStr(#B,P,e#) holds a+b+c = a+(b+c) by A4;
           for a,b being Element of LoopStr(#B,P,e#) holds a+b = b+a
        proof
          let a,b be Element of LoopStr(#B,P,e#);
             a = y & b = y by A1,Lm35,TARSKI:def 1;
          hence thesis;
        end;
        hence thesis by A5,A6,Def1,Def2,RLVECT_1:def 5,def 6,B,C;
     end;
Lm43: for a,b,d being Element of A holds
         om0.(a,od0.(b,d)) = od0.(om0.(a,b),om0.(a,d)) &
         om0.(od0.(a,b),d) = od0.(om0.(a,d),om0.(b,d))
     proof
       let a,b,d be Element of A;
          (a=x & b=x & d=x) or (a=x & b=x & d=y) or
       (a=x & b=y & d=x) or (a=x & b=y & d=y) or
       (a=y & b=x & d=x) or (a=y & b=x & d=y) or
       (a=y & b=y & d=x) or (a=y & b=y & d=y) by TARSKI:def 2;
       hence thesis by Lm13,Lm16,Lm19,Lm21,Lm26,Lm28,Lm30,Lm32;
     end;

definition
 func add_2 -> BinOp of 2 equals
  (0,0) .--> 0 +* (0,1) .--> 1 +* (1,0) .--> 1 +* (1,1) .--> 0;
 coherence
  proof
    set f2 = (0,0) .--> 0 +* (0,1) .--> 1,
        f1 = f2 +* (1,0) .--> 1,
        f = f1 +* (1,1) .--> 0;
A:  dom f = dom f1 \/ dom (1,1) .--> 0 by FUNCT_4:def 1
         .= dom f1 \/ {[1,1]} by FUNCOP_1:19
         .= dom f2 \/ dom (1,0) .--> 1 \/ {[1,1]} by FUNCT_4:def 1
         .= dom f2 \/ {[1,0]} \/ {[1,1]} by FUNCOP_1:19
         .= dom (0,0) .--> 0 \/ dom (0,1) .--> 1 \/ {[1,0]} \/ {[1,1]}
                   by FUNCT_4:def 1
         .= dom (0,0) .--> 0 \/ {[0,1]} \/ {[1,0]} \/ {[1,1]} by FUNCOP_1:19
         .= {[0,0]} \/ {[0,1]} \/ {[1,0]} \/ {[1,1]} by FUNCOP_1:19
         .= {[0,0],[0,1]} \/ {[1,0]} \/ {[1,1]} by ENUMSET1:41
         .= {[0,0],[0,1],[1,0]} \/ {[1,1]} by ENUMSET1:43
         .= {[0,0],[0,1],[1,0],[1,1]} by ENUMSET1:46
         .= [:2,2:] by ZFMISC_1:146,CARD_1:88;
D:  rng f2 c= rng (0,0) .--> 0 \/ rng (0,1) .--> 1 by FUNCT_4:18;
C:  rng f1 c= rng f2 \/ rng (1,0) .--> 1 by FUNCT_4:18;
B:  rng f c= rng f1 \/ rng (1,1) .--> 0 by FUNCT_4:18;
G:  1 c= 2 by ZFMISC_1:12,CARD_1:87,88;
F:  {1} c= 2 by ZFMISC_1:12,CARD_1:88;
    rng (0,1) .--> 1 c= {1} by FUNCOP_1:19;
    then
I:  rng (0,1) .--> 1 c= 2 by F,XBOOLE_1:1;
    rng (0,0) .--> 0 c= 1 by CARD_1:87,FUNCOP_1:19;
    then rng (0,0) .--> 0 c= 2 by G,XBOOLE_1:1;
    then rng (0,0) .--> 0 \/ rng (0,1) .--> 1 c= 2 by I,XBOOLE_1:8;
    then
H:  rng f2 c= 2 by D,XBOOLE_1:1;
    rng (1,0) .--> 1 c= {1} by FUNCOP_1:19;
    then rng (1,0) .--> 1 c= 2 by F,XBOOLE_1:1;
    then rng f2 \/ rng (1,0) .--> 1 c= 2 by H,XBOOLE_1:8;
    then
H:   rng f1 c= 2 by C,XBOOLE_1:1;
    rng (1,1) .--> 0 c= 1 by FUNCOP_1:19,CARD_1:87;
    then rng (1,1) .--> 0 c= 2 by G,XBOOLE_1:1;
    then rng f1 \/ rng (1,1) .--> 0 c= 2 by H,XBOOLE_1:8;
    then rng f c= 2 by B,XBOOLE_1:1;
   hence thesis by A,RELSET_1:11,FUNCT_2:def 1;
  end;
 func mult_2 -> BinOp of 2 equals
  (0,0) .--> 0 +* (0,1) .--> 0 +* (1,0) .--> 0 +* (1,1) .--> 1;
 coherence
  proof
    set f2 = (0,0) .--> 0 +* (0,1) .--> 0,
        f1 = f2 +* (1,0) .--> 0,
        f = f1 +* (1,1) .--> 1;
A:  dom f = dom f1 \/ dom (1,1) .--> 1 by FUNCT_4:def 1
         .= dom f1 \/ {[1,1]} by FUNCOP_1:19
         .= dom f2 \/ dom (1,0) .--> 0 \/ {[1,1]} by FUNCT_4:def 1
         .= dom f2 \/ {[1,0]} \/ {[1,1]} by FUNCOP_1:19
         .= dom (0,0) .--> 0 \/ dom (0,1) .--> 0 \/ {[1,0]} \/ {[1,1]}
                   by FUNCT_4:def 1
         .= dom (0,0) .--> 0 \/ {[0,1]} \/ {[1,0]} \/ {[1,1]} by FUNCOP_1:19
         .= {[0,0]} \/ {[0,1]} \/ {[1,0]} \/ {[1,1]} by FUNCOP_1:19
         .= {[0,0],[0,1]} \/ {[1,0]} \/ {[1,1]} by ENUMSET1:41
         .= {[0,0],[0,1],[1,0]} \/ {[1,1]} by ENUMSET1:43
         .= {[0,0],[0,1],[1,0],[1,1]} by ENUMSET1:46
         .= [:2,2:] by ZFMISC_1:146,CARD_1:88;
D:  rng f2 c= rng (0,0) .--> 0 \/ rng (0,1) .--> 0 by FUNCT_4:18;
C:  rng f1 c= rng f2 \/ rng (1,0) .--> 0 by FUNCT_4:18;
B:  rng f c= rng f1 \/ rng (1,1) .--> 1 by FUNCT_4:18;
G:  1 c= 2 by ZFMISC_1:12,CARD_1:87,88;
F:  {1} c= 2 by ZFMISC_1:12,CARD_1:88;
    rng (0,1) .--> 0 c= 1 by FUNCOP_1:19, CARD_1:87;
    then
I:  rng (0,1) .--> 0 c= 2 by G,XBOOLE_1:1;
    rng (0,0) .--> 0 c= 1 by CARD_1:87,FUNCOP_1:19;
    then rng (0,0) .--> 0 c= 2 by G,XBOOLE_1:1;
    then rng (0,0) .--> 0 \/ rng (0,1) .--> 0 c= 2 by I,XBOOLE_1:8;
    then
H:  rng f2 c= 2 by D,XBOOLE_1:1;
    rng (1,0) .--> 0 c= 1 by CARD_1:87,FUNCOP_1:19;
    then rng (1,0) .--> 0 c= 2 by G,XBOOLE_1:1;
    then rng f2 \/ rng (1,0) .--> 0 c= 2 by H,XBOOLE_1:8;
    then
H:   rng f1 c= 2 by C,XBOOLE_1:1;
    rng (1,1) .--> 1 c= {1} by FUNCOP_1:19;
    then rng (1,1) .--> 1 c= 2 by F,XBOOLE_1:1;
    then rng f1 \/ rng (1,1) .--> 1 c= 2 by H,XBOOLE_1:8;
    then rng f c= 2 by B,XBOOLE_1:1;
   hence thesis by A,RELSET_1:11,FUNCT_2:def 1;
  end;
end;

definition
 func dL-Z_2 -> doubleLoopStr equals
  doubleLoopStr(#2,add_2,mult_2,In(1,2),In(0,2)#);
 coherence;
end;

registration
 cluster dL-Z_2 -> strict non empty;
 coherence
  proof
   thus dL-Z_2 is strict;
   thus the carrier of dL-Z_2 is non empty;
  end;
end;

definition
  let IT be non empty doubleLoopStr;
  attr IT is Field-like means
:Def8: the LoopStr of IT is AbGroup &
 ::IT is not degenerated &
   ex A being non trivial set,
            od being BinOp of A, nd being Element of A,
            om being DnT of nd,A, nm being Element of A\{nd} st
           (IT = doubleLoopStr(#A,od,om,nm,nd#) &
           (for B being non empty set, P being BinOp of B,
                e being Element of B holds
           B = A\{nd} & e = nm & P = om!(A,nd) implies
           LoopStr(#B,P,e#) is AbGroup)) &
           for x,y,z being Element of A holds
            om.(x,od.(y,z)) = od.(om.(x,y),om.(x,z)) &
            om.(od.(x,y),z) = od.(om.(x,z),om.(y,z));
end;

registration
 let A be non trivial set,
     od be BinOp of A,
     nd be Element of A,
     om be BinOp of A,
     nm be Element of A;
 cluster doubleLoopStr(#A,od,om,nm,nd#) -> non empty;
 coherence
  proof
   thus the carrier of doubleLoopStr(#A,od,om,nm,nd#) is non empty;
  end;
end;

registration
 cluster strict Field-like (non empty doubleLoopStr);
  existence
   proof
     doubleLoopStr(#A,od0,om0,nm,nd#) is Field-like by Def8,Lm41,Lm42,Lm43;
    hence thesis;
   end;
end;

definition
  mode Field is Field-like (non empty doubleLoopStr);
end;

definition
   let F be Field;
   func suppf(F) -> non trivial set equals
    the carrier of F;
 coherence
  proof
      ex A being non trivial set st
   ex od being BinOp of A,
      nd being Element of A,
      om being DnT of nd,A,
      nm being Element of A\{nd} st
      (F = doubleLoopStr(#A,od,om,nm,nd#) &
      (for B being non empty set,
           P being BinOp of B,
           e being Element of B holds
           B = A\{nd} & e = nm & P = om!(A,nd) implies
           LoopStr(#B,P,e#) is AbGroup)) &
           for x,y,z being Element of A holds
           om.(x,od.(y,z)) = od.(om.(x,y),om.(x,z)) &
           om.(od.(x,y),z) = od.(om.(x,z),om.(y,z)) by Def8;
   then consider A being non trivial set,
                 od being BinOp of A,
                 nd being Element of A,
                 om being DnT of nd,A,
                 nm being Element of A\{nd} such that
A1: F = doubleLoopStr(#A,od,om,nm,nd#);
   thus thesis by A1;
end;
end;

Def9: for F being Field
 for X being non trivial set holds X = the carrier of F iff
 ex od being BinOp of X,
             nd being Element of X,
             om being DnT of nd,X,
             nm being Element of X\{nd} st
           F = doubleLoopStr(#X,od,om,nm,nd#)
proof let F be Field;
 let X be non trivial set;
 hereby assume
 Z: X = the carrier of F;
    ex A being non trivial set st
   ex od being BinOp of A,
      nd being Element of A,
      om being DnT of nd,A,
      nm being Element of A\{nd} st
      (F = doubleLoopStr(#A,od,om,nm,nd#) &
      (for B being non empty set,
           P being BinOp of B,
           e being Element of B holds
           B = A\{nd} & e = nm & P = om!(A,nd) implies
           LoopStr(#B,P,e#) is AbGroup)) &
           for x,y,z being Element of A holds
           om.(x,od.(y,z)) = od.(om.(x,y),om.(x,z)) &
           om.(od.(x,y),z) = od.(om.(x,z),om.(y,z)) by Def8;
   hence ex od being BinOp of X,
             nd being Element of X,
             om being DnT of nd,X,
             nm being Element of X\{nd} st
           F = doubleLoopStr(#X,od,om,nm,nd#) by Z;
  end;
  thus thesis;
end;

definition
   let F be Field;
   func odf(F) -> BinOp of suppf F means
:Def10: ex nd being Element of suppf(F),
              om being DnT of nd, suppf(F),
              nm being Element of suppf(F)\{nd} st
           F = doubleLoopStr(#suppf F,it,om,nm,nd#);
existence by Def9;
uniqueness;
end;

definition
   let F be Field;
   func ndf(F) -> Element of suppf(F) means
:Def11:    ex om being DnT of it,suppf(F),
             nm being Element of suppf(F)\{it} st
           F = doubleLoopStr(#suppf F,odf F,om,nm,it#);
existence by Def10;
uniqueness;
end;

definition
   let F be Field;
   func omf(F) -> DnT of ndf(F),suppf(F) means
:Def12:   ex nm being Element of suppf(F)\{ndf(F)} st
           F = doubleLoopStr(#suppf F,odf F,it,nm,ndf F#);
existence by Def11;
 uniqueness;
end;

definition
   let F be Field;
   func nmf(F) -> Element of suppf(F)\{ndf(F)} means
:Def13:       F = doubleLoopStr(#suppf F,odf F,omf F,it,ndf F#);
existence by Def12;
uniqueness;
end;

theorem Th1:
   for F being Field holds LoopStr(#suppf(F),odf(F),ndf(F)#) is AbGroup
proof
   let F be Field;
   consider A being non trivial set,
      od being BinOp of A,
      nd being Element of A,
      om being DnT of nd,A,
      nm being Element of A\{nd} such that
W1:   F = doubleLoopStr(#A,od,om,nm,nd#) and
      (for B being non empty set,
           P being BinOp of B,
           e being Element of B holds
           B = A\{nd} & e = nm & P = om!(A,nd) implies
           LoopStr(#B,P,e#) is AbGroup) &
           for x,y,z being Element of A holds
           om.(x,od.(y,z)) = od.(om.(x,y),om.(x,z)) &
           om.(od.(x,y),z) = od.(om.(x,z),om.(y,z)) by Def8;
W2: the LoopStr of F is AbGroup by Def8;
    od = odf(F) by W1,Def10;
   hence thesis by W1,W2,Def11;
end;

theorem Th2:
   for F being Field, B being non empty set,
       P being BinOp of B, e being Element of B st
   B = suppf(F)\{ndf(F)} & e = nmf(F) & P = omf(F)!(suppf(F),ndf(F)) holds
    LoopStr(#B,P,e#) is AbGroup
proof
   let F be Field, B be non empty set, P be BinOp of B, e be Element of B;
    ex A being non trivial set st ex od being BinOp of A,
                   nd being Element of A,
                   om being DnT of nd,A,
                   nm being Element of A\{nd} st
      (F = doubleLoopStr(#A,od,om,nm,nd#) &
                (for B being non empty set,
                     P being BinOp of B,
                     e being Element of B holds
                 B = A\{nd} & e = nm & P = om!(A,nd) implies
                  LoopStr(#B,P,e#) is AbGroup)) &
                for x,y,z being Element of A holds
                 om.(x,od.(y,z)) = od.(om.(x,y),om.(x,z)) &
                 om.(od.(x,y),z) = od.(om.(x,z),om.(y,z)) by Def8;
      then consider A being non trivial set,
               od being BinOp of A,
               nd being Element of A,
               om being DnT of nd,A,
               nm being Element of A\{nd} such that
A0:         F = doubleLoopStr(#A,od,om,nm,nd#) and
A2:         for B being non empty set,
                P being BinOp of B,
                e being Element of B st
                B = A\{nd} & e = nm & P = om!(A,nd) holds
                  LoopStr(#B,P,e#) is AbGroup;
A3: A = suppf(F) by A0;
   then reconsider od as BinOp of suppf(F);
   reconsider nd as Element of suppf(F) by A0;
   reconsider om as DnT of nd, suppf(F) by A0;
   reconsider nm as Element of suppf(F)\{nd} by A0;
A4:od = odf(F) by A0,Def10;
A5:F = doubleLoopStr(#suppf(F),odf(F),om,nm,nd#) by A0,Def10;
A6:nd=ndf(F) by A0,A4,Def11;
   reconsider om as DnT of ndf(F),suppf(F) by A0,A4,Def11;
   reconsider nm as Element of suppf(F)\{ndf(F)} by A0,A4,Def11;
A7:om=omf(F) by A5,A6,Def12;
    then nm=nmf(F) by A5,A6,Def13;
   hence thesis by A2,A3,A6,A7;
end;

theorem Th3:
   for F being Field, x,y,z being Element of suppf(F) holds
    omf(F).(x,odf(F).(y,z)) = odf(F).(omf(F).(x,y),omf(F).(x,z)) &
    omf(F).(odf(F).(x,y),z) = odf(F).(omf(F).(x,z),omf(F).(y,z))
  proof
   let F be Field;
      ex A being non trivial set,
      od being BinOp of A,
      nd being Element of A,
      om being DnT of nd, A,
      nm being Element of A\{nd} st
      (F = doubleLoopStr(#A,od,om,nm,nd#) &
      (for B being non empty set,
           P being BinOp of B,
           e being Element of B holds
         B = A\{nd} & e = nm & P = om!(A,nd) implies
                     LoopStr(#B,P,e#) is AbGroup)) &
                for x,y,z being Element of A holds
                 om.(x,od.(y,z)) = od.(om.(x,y),om.(x,z)) &
                 om.(od.(x,y),z) = od.(om.(x,z),om.(y,z)) by Def8;
   then consider A being non trivial set,
                 od being BinOp of A,
                 nd being Element of A,
                 om being DnT of nd,A,
                 nm being Element of A\{nd} such that
A0: F = doubleLoopStr(#A,od,om,nm,nd#) and
A2:for x,y,z being Element of A holds
    om.(x,od.(y,z)) = od.(om.(x,y),om.(x,z)) &
    om.(od.(x,y),z) = od.(om.(x,z),om.(y,z));
A3: A = suppf(F) by A0;
   reconsider od as BinOp of suppf(F) by A0;
   reconsider nd as Element of suppf(F) by A0;
   reconsider om as DnT of nd, suppf(F) by A0;
   reconsider nm as Element of suppf(F)\{nd} by A0;
A4:od = odf(F) by A0,Def10;
A5:F = doubleLoopStr(#suppf(F),odf(F),om,nm,nd#) by A0,Def10;
A6:nd=ndf(F) by A0,A4,Def11;
    reconsider om as DnT of ndf(F),suppf(F) by A0,A4,Def11;
       om=omf(F) by A5,A6,Def12;
    hence thesis by A2,A3,A4;
end;

theorem Th4:
   for F being Field,
       a,b,c being Element of suppf(F) holds
   odf(F).(odf(F).(a,b),c) = odf(F).(a,odf(F).(b,c))
proof
   let F be Field, a,b,c be Element of suppf(F);
      LoopStr(#suppf(F),odf(F),ndf(F)#) is AbGroup by Th1;
   then consider D being strict AbGroup such that
A1:D = LoopStr(#suppf(F),odf(F),ndf(F)#);
    reconsider a'=a, b'=b, c'=c as Element of D by A1;
   thus odf(F).(odf(F).(a,b),c) = a'+b'+c' by A1
       .= a'+(b'+c') by RLVECT_1:def 6
       .= odf(F).(a,odf(F).(b,c)) by A1;
end;

theorem Th5:
   for F being Field,
       a,b being Element of suppf(F) holds
   odf(F).(a,b) = odf(F).(b,a)
proof
   let F be Field, a,b be Element of suppf(F);
      LoopStr(#suppf(F),odf(F),ndf(F)#) is AbGroup by Th1;
   then consider D being strict AbGroup such that
A1:D = LoopStr(#suppf(F),odf(F),ndf(F)#);
    reconsider a'=a, b'=b as Element of D by A1;
   thus odf(F).(a,b) = a'+b' by A1
       .= b'+a'
       .= odf(F).(b,a) by A1;
end;

theorem Th6:
   for F being Field,
       a being Element of suppf(F) holds
   odf(F).(a,ndf(F)) = a & odf(F).(ndf(F),a) = a
proof
   let F be Field, a be Element of suppf(F);
      LoopStr(#suppf(F),odf(F),ndf(F)#) is AbGroup by Th1;
   then consider D being strict AbGroup such that
A1:D = LoopStr(#suppf(F),odf(F),ndf(F)#);
    ndf F = 0.LoopStr(#suppf(F),odf(F),ndf(F)#);
   hence thesis by A1,Def1;
end;

theorem Th7:
   for F being Field,
       a being Element of suppf(F) ex b being Element of suppf(F) st
   odf(F).(a,b) = ndf(F) & odf(F).(b,a) = ndf(F)
proof
   let F be Field,
       a be Element of suppf(F);
   LoopStr(#suppf(F),odf(F),ndf(F)#) is AbGroup by Th1;
   then consider D being strict AbGroup such that
A1:D = LoopStr(#suppf(F),odf(F),ndf(F)#);
    ndf F = 0.LoopStr(#suppf(F),odf(F),ndf(F)#);
   hence thesis by A1,Def2;
end;

theorem Th8:
   for F being Field,
       a,b,c being Element of suppf(F)\{ndf(F)} holds
   omf(F).(omf(F).(a,b),c) = omf(F).(a,omf(F).(b,c))
proof
   let F be Field,
       a,b,c be Element of suppf(F)\{ndf(F)};
   set B = suppf(F)\{ndf(F)};
   set P = omf(F)!(suppf(F),ndf(F));
   set e = nmf(F);
   reconsider D = LoopStr(#B,P,e#) as strict AbGroup by Th2;
   reconsider a,b,c as Element of D;
A1:omf(F)||(suppf(F)\{ndf(F)})
    is Function of [:suppf(F)\{ndf(F)},suppf(F)\{ndf(F)}:],
    (suppf(F)\{ndf(F)}) by REALSET1:11;
then A2:dom(omf(F)||(suppf(F)\{ndf(F)})) =
    [:suppf(F)\{ndf(F)},suppf(F)\{ndf(F)}:] by FUNCT_2:def 1;
A3:for s,t being Element of (suppf(F)\{ndf(F)}) holds
    (the add of D).(s,t) is Element of (suppf(F)\{ndf(F)}) &
    omf(F).(s,t) is Element of (suppf(F)\{ndf(F)})
    proof
        let s,t be Element of (suppf(F)\{ndf(F)});
     A4:[s,t] in [:suppf(F)\{ndf(F)},suppf(F)\{ndf(F)}:] by ZFMISC_1:def 2;
        consider W being Function of
        [:suppf(F)\{ndf(F)},suppf(F)\{ndf(F)}:],
        (suppf(F)\{ndf(F)}) such that
    A5: W = omf(F)||(suppf(F)\{ndf(F)}) by A1;
           W.(s,t) is Element of (suppf(F)\{ndf(F)});
        hence thesis by A2,A4,A5,FUNCT_1:70;
    end;
A6:for x,y being Element of suppf(F)\{ndf(F)} holds
    omf(F).(x,y) = (the add of D).(x,y)
    proof
      let x,y be Element of suppf(F)\{ndf(F)};
         [x,y] in [:suppf(F)\{ndf(F)},suppf(F)\{ndf(F)}:] by ZFMISC_1:def 2;
      hence thesis by A2,FUNCT_1:70;
    end;
A7:for x,y,z being Element of suppf(F)\{ndf(F)} holds
  omf(F).((the add of D).(x,y),z) = (the add of D).((the add of D).(x,y),z) &
    (the add of D).(x,omf(F).(y,z)) = omf(F).(x,omf(F).(y,z))
    proof
        let x,y,z be Element of suppf(F)\{ndf(F)};
    A8:(the add of D).(x,y) is Element of suppf(F)\{ndf(F)} by A3;
           omf(F).(y,z) is Element of suppf(F)\{ndf(F)} by A3;
        hence thesis by A6,A8;
    end;
       omf(F).(omf(F).(a,b),c) = omf(F).((the add of D).(a,b),c) by A6
                           .= a+b+c by A7
                           .= a+(b+c) by RLVECT_1:def 6
                           .= (the add of D).(a,omf(F).(b,c)) by A6
                           .= omf(F).(a,omf(F).(b,c)) by A7;
   hence thesis;
end;

theorem Th9:
   for F being Field,
       a,b being Element of suppf(F)\{ndf(F)} holds
   omf(F).(a,b) = omf(F).(b,a)
proof
   let F be Field,
       a,b be Element of suppf(F)\{ndf(F)};
   set B = suppf(F)\{ndf(F)};
   set P = omf(F)!(suppf(F),ndf(F));
   set e = nmf(F);
   reconsider D = LoopStr(#B,P,e#) as strict AbGroup by Th2;
   reconsider a,b as Element of D;
      omf(F)||(suppf(F)\{ndf(F)})
    is Function of [:suppf(F)\{ndf(F)},suppf(F)\{ndf(F)}:],
    (suppf(F)\{ndf(F)}) by REALSET1:11;
then A1: dom(omf(F)||(suppf(F)\{ndf(F)})) =
    [:suppf(F)\{ndf(F)},suppf(F)\{ndf(F)}:] by FUNCT_2:def 1;
A2:for x,y being Element of suppf(F)\{ndf(F)} holds
    omf(F).(x,y) = (the add of D).(x,y)
    proof
        let x,y be Element of suppf(F)\{ndf(F)};
           [x,y] in [:suppf(F)\{ndf(F)},suppf(F)\{ndf(F)}:] by ZFMISC_1:def 2;
        hence thesis by A1,FUNCT_1:70;
    end;
    then omf(F).(a,b) = a+b
                .= b+a
                .= omf(F).(b,a) by A2;
   hence thesis;
end;

theorem Th10:
   for F being Field,
       a being Element of suppf(F)\{ndf(F)} holds
   omf(F).(a,nmf(F)) = a & omf(F).(nmf(F),a) = a
proof
   let F be Field,
       a be Element of suppf(F)\{ndf(F)};
   set B = suppf(F)\{ndf(F)};
   set P = omf(F)!(suppf(F),ndf(F));
   set e = nmf(F);
   reconsider D = LoopStr(#B,P,e#) as strict AbGroup by Th2;
   reconsider a as Element of D;
   omf(F)||(suppf(F)\{ndf(F)})
    is Function of [:suppf(F)\{ndf(F)},suppf(F)\{ndf(F)}:],
    (suppf(F)\{ndf(F)}) by REALSET1:11;
then A1: dom(omf(F)||(suppf(F)\{ndf(F)})) =
    [:suppf(F)\{ndf(F)},suppf(F)\{ndf(F)}:] by FUNCT_2:def 1;
A2:for x,y being Element of suppf(F)\{ndf(F)} holds
    omf(F).(x,y) = (the add of D).(x,y)
    proof
        let x,y be Element of suppf(F)\{ndf(F)};
       [x,y] in [:suppf(F)\{ndf(F)},suppf(F)\{ndf(F)}:] by ZFMISC_1:def 2;
        hence thesis by A1,FUNCT_1:70;
    end;
    reconsider a as Element of suppf(F)\{ndf(F)};
A3:omf(F).(a,nmf(F)) = (the add of D).(a,0.D) by A2
                     .= a by Def1;
      omf(F).(nmf(F),a) = (the add of D).(0.D,a) by A2
                     .= a by Def1;
   hence thesis by A3;
end;

theorem Th11:
   for F being Field,
       a being Element of suppf(F)\{ndf(F)}
   ex b being Element of suppf(F)\{ndf(F)} st
   omf(F).(a,b) = nmf(F) & omf(F).(b,a) = nmf(F)
proof
   let F be Field,
       a be Element of suppf(F)\{ndf(F)};
   set B = suppf(F)\{ndf(F)};
   set P = omf(F)!(suppf(F),ndf(F));
   set e = nmf(F);
      LoopStr(#B,P,e#) is AbGroup by Th2;
   then consider D being strict AbGroup such that
A1:D = LoopStr(#B,P,e#);
   reconsider a as Element of D by A1;
   consider b being Element of D such that
A2:(the add of D).(a,b) = 0.D & (the add of D).(b,a) = 0.D
    by Def2;
   omf(F)||(suppf(F)\{ndf(F)})
    is Function of [:suppf(F)\{ndf(F)},suppf(F)\{ndf(F)}:],
    (suppf(F)\{ndf(F)}) by REALSET1:11;
then A3: dom(omf(F)||(suppf(F)\{ndf(F)})) =
    [:suppf(F)\{ndf(F)},suppf(F)\{ndf(F)}:] by FUNCT_2:def 1;
A4:for x,y being Element of suppf(F)\{ndf(F)} holds
    omf(F).(x,y) = (the add of D).(x,y)
    proof
        let x,y be Element of suppf(F)\{ndf(F)};
       [x,y] in [:suppf(F)\{ndf(F)},suppf(F)\{ndf(F)}:]
        by ZFMISC_1:def 2;
        hence thesis by A1,A3,FUNCT_1:70;
    end;
    reconsider b as Element of suppf(F)\{ndf(F)} by A1;
   take b;
   thus thesis by A1,A2,A4;
end;

definition
   let F be Field;
   func compf(F) -> Function of suppf(F),suppf(F) means
:Def14: for x being Element of suppf(F) holds odf(F).(x,it.x) = ndf(F);
existence
proof
  defpred Z[set,set] means odf(F).($1,$2) = ndf(F);
   A1:for x being set st x in suppf(F) ex y being set st
          y in suppf(F) & Z[x,y]
      proof
         let x be set;
         assume x in suppf(F);
         then consider y being Element of suppf(F) such that
      A2:odf(F).(x,y) = ndf(F) & odf(F).(y,x) = ndf(F) by Th7;
         take y;
         thus thesis by A2;
      end;
         ex C being Function of suppf(F),suppf(F) st
      for x being set st x in suppf(F) holds Z[x,C.x] from FUNCT_2:sch 1(A1);
      then consider C being Function of suppf(F),suppf(F) such that
A3:   for x being set st x in suppf(F) holds odf(F).(x,C.x) = ndf F;
      take C;
      thus thesis by A3;
end;
uniqueness
proof
   let C1,C2 be Function of suppf(F),suppf(F) such that
A4:for x being Element of suppf(F) holds odf(F).(x,C1.x) = ndf(F) and
A5:for x being Element of suppf(F) holds odf(F).(x,C2.x) = ndf(F);
      for x being set st x in suppf(F) holds C1.x = C2.x
   proof
     let x be set;
     assume
 A6:x in suppf(F);
 then A7:C1.x is Element of suppf(F) by FUNCT_2:7;
 A8:C2.x is Element of suppf(F) by A6,FUNCT_2:7;
     thus C1.x = odf(F).(C1.x,ndf(F)) by A7,Th6
             .= odf(F).(C1.x,odf(F).(x,C2.x)) by A5,A6
             .= odf(F).(odf(F).(C1.x,x),C2.x) by A6,A7,A8,Th4
             .= odf(F).(odf(F).(x,C1.x),C2.x) by A6,A7,Th5
             .= odf(F).(ndf(F),C2.x) by A4,A6
             .= C2.x by A8,Th6;
      end;
      hence thesis by FUNCT_2:18;
end;
end;

theorem Th12:
   for F being Field,
       x,y being Element of suppf(F) holds
   odf(F).(x,y) = ndf(F) implies y = compf(F).x
proof
   let F be Field,
       x,y be Element of suppf(F);
   assume
A1:odf(F).(x,y) = ndf(F);
      y = odf(F).(y,ndf(F)) by Th6
         .= odf(F).(y,odf(F).(x,compf(F).x)) by Def14
         .= odf(F).(odf(F).(y,x),compf(F).x) by Th4
         .= odf(F).(ndf(F),compf(F).x) by A1,Th5
         .= compf(F).x by Th6;
   hence thesis;
end;

theorem
   for F being Field,
       x being Element of suppf(F) holds
   x = compf(F).(compf(F).x)
proof
   let F be Field,
       x be Element of suppf(F);
      x = odf(F).(x,ndf F) by Th6
         .= odf(F).(x,odf(F).(compf(F).x,compf(F).(compf(F).x))) by Def14
         .= odf(F).(odf(F).(x,compf(F).x),compf(F).(compf(F).x)) by Th4
         .= odf(F).(ndf(F),compf(F).(compf(F).x)) by Def14
         .= compf(F).(compf(F).x) by Th6;
   hence thesis;
end;

theorem
    for F being Field,
        a,b being Element of suppf(F) holds
    (odf(F).(a,b) is Element of suppf(F) &
    omf(F).(a,b) is Element of suppf(F) &
    compf(F).a is Element of suppf(F));

theorem Th15:
   for F being Field,
       a,b,c being Element of suppf(F) holds
   omf(F).(a,odf(F).(b,compf(F).c)) =
   odf(F).(omf(F).(a,b),compf(F).(omf(F).(a,c)))
proof
   let F be Field,
       a,b,c be Element of suppf(F);
A1:odf(F).(omf(F).(a,c),compf(F).(omf(F).(a,c))) = ndf(F) by Def14;
A2:odf(F).(odf(F).(b,compf(F).c),c) =
   odf(F).(b,odf(F).(compf(F).c,c)) by Th4
   .= odf(F).(b,odf(F).(c,compf(F).c)) by Th5
   .= odf(F).(b,ndf(F)) by Def14
   .= b by Th6;
      omf(F).(a,odf(F).(b,compf(F).c))
       =odf(F).(omf(F).(a,odf(F).(b,compf(F).c)),
      odf(F).(omf(F).(a,c),compf(F).(omf(F).(a,c)))) by A1,Th6
   .= odf(F).(odf(F).(omf(F).(a,odf(F).(b,compf(F).c)),
      omf(F).(a,c)),compf(F).(omf(F).(a,c))) by Th4
   .= odf(F).(omf(F).(a,b),compf(F).(omf(F).(a,c))) by A2,Th3;
   hence thesis;
end;

theorem Th16:
   for F being Field,
       a,b,c being Element of suppf(F) holds
   omf(F).(odf(F).(a,compf(F).b),c) =
   odf(F).(omf(F).(a,c),compf(F).(omf(F).(b,c)))
proof
   let F be Field;
   let a,b,c be Element of suppf(F);
A1:odf(F).(omf(F).(b,c),compf(F).(omf(F).(b,c))) = ndf(F) by Def14;
A2:odf(F).(odf(F).(a,compf(F).b),b) =
   odf(F).(a,odf(F).(compf(F).b,b)) by Th4
   .= odf(F).(a,odf(F).(b,compf(F).b)) by Th5
   .= odf(F).(a,ndf(F)) by Def14
   .= a by Th6;
      omf(F).(odf(F).(a,compf(F).b),c)
        =odf(F).(omf(F).(odf(F).(a,compf(F).b),c),
      odf(F).(omf(F).(b,c),compf(F).(omf(F).(b,c)))) by A1,Th6
   .= odf(F).(odf(F).(omf(F).(odf(F).(a,compf(F).b),c),
      omf(F).(b,c)),compf(F).(omf(F).(b,c))) by Th4
   .= odf(F).(omf(F).(a,c),compf(F).(omf(F).(b,c))) by A2,Th3;
   hence thesis;
end;

theorem Th17:
   for F being Field,
       a being Element of suppf(F) holds omf(F).(a,ndf(F)) = ndf(F)
proof
   let F be Field,
       a be Element of suppf(F);
       omf(F).(a,ndf(F)) = omf(F).(a,odf(F).(nmf(F),compf(F).nmf(F)))
            by Def14
    .= odf(F).(omf(F).(a,nmf(F)),compf(F).(omf(F).(a,nmf F))) by Th15
    .= ndf(F) by Def14;
    hence thesis;
end;

theorem Th18:
   for F being Field,
       a being Element of suppf(F) holds omf(F).(ndf(F),a) = ndf(F)
proof
   let F be Field,
       a be Element of suppf(F);
      omf(F).(ndf(F),a) = omf(F).(odf(F).(nmf F, compf(F).nmf F),a) by
Def14
    .= odf(F).(omf(F).(nmf(F),a),compf(F).(omf(F).(nmf(F),a))) by Th16
    .= ndf(F) by Def14;
   hence thesis;
end;

theorem
  for F being Field,
       a,b being Element of suppf(F) holds
   compf(F).(omf(F).(a,b)) = omf(F).(a,compf(F).b)
   proof
      let F be Field,
          a,b be Element of suppf(F);
         odf(F).(omf(F).(a,b),omf(F).(a,compf(F).b))
         = omf(F).(a,odf(F).(b,compf(F).b)) by Th3
        .= omf(F).(a,ndf(F)) by Def14
        .= ndf(F) by Th17;
      hence thesis by Th12;
   end;

theorem
   for F being Field holds omf(F).(nmf(F),ndf(F)) = ndf(F) by Th17;

theorem
   for F being Field holds omf(F).(ndf(F),nmf(F)) = ndf(F) by Th18;

theorem
  for F being Field,
       a,b being Element of suppf(F) holds
   omf(F).(a,b) is Element of suppf(F);

theorem Th23:
   for F being Field,
       a,b,c being Element of suppf(F) holds
   omf(F).(omf(F).(a,b),c) = omf(F).(a,omf(F).(b,c))
proof
   let F be Field,
       a,b,c be Element of suppf(F);
A1:a = ndf(F) or b = ndf(F) or c = ndf(F) or
   (a is Element of suppf(F)\{ndf(F)} &
    b is Element of suppf(F)\{ndf(F)} &
    c is Element of suppf(F)\{ndf(F)}) by ZFMISC_1:64;
A2:a = ndf(F) implies omf(F).(omf(F).(a,b),c) = omf(F).(a,omf(F).(b,c))
   proof
      assume
   A3:a = ndf(F);
      hence omf(F).(omf(F).(a,b),c) = omf(F).(ndf(F),c) by Th18
                            .= ndf(F) by Th18
                            .= omf(F).(a,omf(F).(b,c)) by A3,Th18;
   end;
A4:b = ndf(F) implies omf(F).(omf(F).(a,b),c) = omf(F).(a,omf(F).(b,c))
   proof
      assume
   A5:b = ndf(F);
      hence omf(F).(omf(F).(a,b),c) = omf(F).(ndf(F),c) by Th17
                            .= ndf F by Th18
                            .= omf(F).(a,ndf(F)) by Th17
                            .= omf(F).(a,omf(F).(b,c)) by A5,Th18;
   end;
      c = ndf(F) implies omf(F).(omf(F).(a,b),c) = omf(F).(a,omf(F).(b,c))
   proof
      assume
   A6:c = ndf(F);
      hence omf(F).(omf(F).(a,b),c) = ndf(F) by Th17
                            .= omf(F).(a,ndf(F)) by Th17
                            .= omf(F).(a,omf(F).(b,c)) by A6,Th17;
   end;
   hence thesis by A1,A2,A4,Th8;
end;

theorem
  for F being Field,
       a,b being Element of suppf(F) holds
   omf(F).(a,b) = omf(F).(b,a)
proof
   let F be Field,
       a,b be Element of suppf(F);
A1:a = ndf(F) or b = ndf(F) or
   (a is Element of suppf(F)\{ndf(F)} &
    b is Element of suppf(F)\{ndf(F)}) by ZFMISC_1:64;
A2:a = ndf(F) implies omf(F).(a,b) = omf(F).(b,a)
   proof
      assume
   A3:a = ndf(F);
      then omf(F).(a,b) = ndf(F) by Th18
                  .= omf(F).(b,a) by A3,Th17;
      hence thesis;
   end;
   b = ndf(F) implies omf(F).(a,b) = omf(F).(b,a)
   proof
      assume
   A4:b = ndf(F);
      then omf(F).(a,b) = ndf(F) by Th17
                  .= omf(F).(b,a) by A4,Th18;
      hence thesis;
   end;
   hence thesis by A1,A2,Th9;
end;

theorem Th25:
   for F being Field,
       a being Element of suppf(F) holds
   omf(F).(a,nmf(F)) = a & omf(F).(nmf(F),a) = a
proof
   let F be Field,
       a be Element of suppf(F);
      a = ndf(F) or a is Element of suppf(F)\{ndf(F)} by ZFMISC_1:64;
   hence thesis by Th10,Th17,Th18;
end;

definition
  let F be Field;
  func revf(F) -> Function of suppf(F)\{ndf(F)},suppf(F)\{ndf(F)} means
:Def15: for x being Element of suppf(F)\{ndf(F)} holds
        omf(F).(x,it.x) = nmf(F);
existence
proof
  defpred Z[set,set] means omf(F).($1,$2) = nmf(F);
   A1:for x being set st x in suppf(F)\{ndf(F)} ex y being set st
          y in suppf(F)\{ndf(F)} & Z[x,y]
      proof
         let x be set;
         assume x in suppf(F)\{ndf(F)};
         then consider y being Element of suppf(F)\{ndf(F)} such that
      A2:omf(F).(x,y) = nmf(F) & omf(F).(y,x) = nmf(F) by Th11;
         reconsider y as set;
         take y;
         thus thesis by A2;
      end;
       ex C being Function of suppf(F)\{ndf(F)},suppf(F)\{ndf(F)} st
    for x being set st x in suppf(F)\{ndf(F)} holds Z[x,C.x] from FUNCT_2:sch 1
(A1);
    then consider C being Function of suppf(F)\{ndf(F)},suppf(F)\{ndf(F)} such
that
A3:for x being set st x in suppf(F)\{ndf(F)} holds omf(F).(x,C.x) = nmf(F);
    take C;
    thus thesis by A3;
end;
uniqueness
proof
   let C1,C2 be Function of suppf(F)\{ndf(F)},suppf(F)\{ndf(F)} such that
A4:for x being Element of suppf(F)\{ndf(F)} holds
       omf(F).(x,C1.x) = nmf(F) and
A5:for x being Element of suppf(F)\{ndf(F)} holds
       omf(F).(x,C2.x) = nmf(F);
      for x being set st x in suppf(F)\{ndf(F)} holds C1.x = C2.x
      proof
         let x be set;
         assume
     A6:x in suppf(F)\{ndf(F)};
      then A7:C1.x is Element of suppf(F)\{ndf(F)} by FUNCT_2:7;
      A8:C2.x is Element of suppf(F)\{ndf(F)} by A6,FUNCT_2:7;
            C1.x = omf(F).(C1.x,nmf(F)) by A7,Th10
             .= omf(F).(C1.x,omf(F).(x,C2.x)) by A5,A6
             .= omf(F).(omf(F).(C1.x,x),C2.x) by A6,A7,A8,Th8
             .= omf(F).(omf(F).(x,C1.x),C2.x) by A6,A7,Th9
             .= omf(F).(nmf(F),C2.x) by A4,A6
             .= C2.x by A8,Th10;
         hence thesis;
      end;
      hence thesis by FUNCT_2:18;
end;
end;

theorem
  for F being Field,
      x,y being Element of suppf(F)\{ndf(F)} holds
      omf(F).(x,y) = nmf(F) implies y = revf(F).x
proof
   let F be Field,
       x,y be Element of suppf(F)\{ndf(F)};
   assume
A1:omf(F).(x,y) = nmf(F);
      y = omf(F).(y,nmf(F)) by Th10
         .= omf(F).(y,omf(F).(x,revf(F).x)) by Def15
         .= omf(F).(omf(F).(y,x),revf(F).x) by Th8
         .= omf(F).(nmf(F),revf(F).x) by A1,Th9
         .= revf(F).x by Th10;
   hence thesis;
end;

theorem
  for F being Field,
      x being Element of suppf(F)\{ndf(F)} holds
      x =revf(F).(revf(F).x)
proof
   let F be Field,
       x be Element of suppf(F)\{ndf(F)};
   x = omf(F).(x,nmf(F)) by Th10
         .= omf(F).(x,omf(F).(revf(F).x,revf(F).(revf(F).x))) by Def15
         .= omf(F).(omf(F).(x,revf(F).x),revf(F).(revf(F).x)) by Th8
         .= omf(F).(nmf(F),revf(F).(revf(F).x)) by Def15
         .= revf(F).(revf(F).x) by Th10;
   hence thesis;
end;

theorem
  for F being Field,
      a,b being Element of suppf(F)\{ndf(F)} holds
   omf(F).(a,b) is Element of suppf(F)\{ndf(F)} &
   revf(F).a is Element of suppf(F)\{ndf(F)}
proof
   let F be Field,
       a,b be Element of suppf(F)\{ndf(F)};
   [a,b] in [:suppf(F)\{ndf(F)},suppf(F)\{ndf(F)}:] by ZFMISC_1:def 2;
   hence thesis by REALSET1:def 8;
end;

theorem
  for F being Field,
      a,b,c being Element of suppf(F) holds
   odf(F).(a,b) = odf(F).(a,c) implies b = c
proof
   let F be Field,
       a,b,c be Element of suppf(F);
   assume
A1:odf(F).(a,b) = odf(F).(a,c);
      b = odf(F).(ndf(F),b) by Th6
    .= odf(F).(odf(F).(a,compf(F).a),b) by Def14
    .= odf(F).(odf(F).(compf(F).a,a),b) by Th5
    .= odf(F).(compf(F).a,odf(F).(a,c)) by A1,Th4
    .= odf(F).(odf(F).(compf(F).a,a),c) by Th4
    .= odf(F).(odf(F).(a,compf(F).a),c) by Th5
    .= odf(F).(ndf(F),c) by Def14
    .= c by Th6;
   hence thesis;
end;

theorem
  for F being Field,
      a being Element of suppf(F)\{ndf(F)},
      b,c being Element of suppf(F) holds
   omf(F).(a,b) = omf(F).(a,c) implies b = c
proof
   let F be Field,
       a be Element of suppf(F)\{ndf(F)},
       b,c be Element of suppf(F);
   assume
A1:omf(F).(a,b) = omf(F).(a,c);
A2:revf(F).a is Element of suppf(F) by XBOOLE_0:def 4;
      b = omf(F).(nmf(F),b) by Th25
    .= omf(F).(omf(F).(a,revf(F).a),b) by Def15
    .= omf(F).(omf(F).(revf(F).a,a),b) by Th9
    .= omf(F).((revf(F).a),omf(F).(a,c)) by A1,A2,Th23
    .= omf(F).(omf(F).(revf(F).a,a),c) by A2,Th23
    .= omf(F).(omf(F).(a,revf(F).a),c) by Th9
    .= omf(F).(nmf(F),c) by Def15
    .= c by Th25;
   hence thesis;
end;
