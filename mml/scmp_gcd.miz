:: Recursive Euclide Algorithm
::  by JingChao Chen
::
:: Received June 15, 1999
:: Copyright (c) 1999 Association of Mizar Users

environ

 vocabularies AMI_3, SCMPDS_2, AMI_1, NAT_1, INT_1, INT_2, ABSVALUE, SCMPDS_3,
      AMI_2, ARYTM_1, CARD_1, SCMFSA6A, SCMFSA_7, FUNCT_1, RELAT_1, SCMPDS_1,
      FUNCOP_1, FUNCT_4, BOOLE, SCMP_GCD, ARYTM;
 notations XBOOLE_0, SUBSET_1, CARD_1, NUMBERS, XCMPLX_0, RELAT_1, FUNCT_1,
      INT_1, NAT_1, DOMAIN_1, STRUCT_0, FUNCT_4, AMI_1, SCMNORM, AMI_2, AMI_3,
      SCMPDS_1, SCMPDS_2, SCMPDS_3, SCMPDS_4, INT_2, XXREAL_0;
 constructors DOMAIN_1, XXREAL_0, REAL_1, NAT_1, NAT_D, SCMPDS_1, SCMPDS_4,
      AMI_3, SCMNORM, SCMPDS_3;
 registrations SETFAM_1, RELSET_1, NUMBERS, XREAL_0, INT_1, CARD_3, STRUCT_0,
      SCMPDS_2, ORDINAL1, FINSET_1, FUNCT_1;
 requirements NUMERALS, REAL, SUBSET, ARITHM, BOOLE;
 definitions AMI_1, SCMPDS_3, AMI_3;
 theorems AMI_1, AMI_3, NAT_1, TARSKI, FUNCT_4, INT_1, SCMPDS_2, ABSVALUE,
      GRFUNC_1, SCMPDS_4, SCMPDS_5, SCMPDS_6, ENUMSET1, SCMPDS_1, INT_2,
      XBOOLE_0, XBOOLE_1, NEWTON, XREAL_1, RELAT_1, XXREAL_0, ORDINAL1, NAT_D;
 schemes NAT_1;

begin :: Preliminaries

reserve m,n for Element of NAT,
  a,b for Int_position,
  i,j for Instruction of SCMPDS,
  s,s1,s2 for State of SCMPDS,
  I,J for Program of SCMPDS;

canceled 2;

theorem Th3:
  for m being Element of NAT,j being Integer st inspos m=j holds
  inspos(m+2) = (abs(j))+2
proof
  let m be Element of NAT,j be Integer;
  assume inspos m=j;
  then
A1: j=il.m
    .=m;
  then j >= 0 by NAT_1:2;
  hence (abs(j))+2 = m+2 by A1,ABSVALUE:def 1
    .= il.(m+2)
    .= inspos(m+2);
end;

definition
  let k be Nat;
  func intpos k -> Int_position equals
  dl.k;
  coherence
  proof
    dl.k in SCM-Data-Loc by AMI_3:def 2;
    hence thesis by SCMPDS_2:def 1,def 2;
  end;
end;

canceled;

theorem Th5:
  for n1,n2 be Element of NAT holds DataLoc(n1,n2) = intpos(n1+n2)
proof
  let n1,n2 be Element of NAT;
A1: n1+n2 >= 0 by NAT_1:2;
  thus DataLoc(n1,n2)=[1,abs(n1+n2)] by SCMPDS_2:def 4
    .=[1,n1+n2] by A1,ABSVALUE:def 1
    .=intpos(n1+n2);
end;

theorem Th6:
  for s being State of SCMPDS,m1,m2 being Element of NAT st IC s=inspos (m1+m2)
  holds ICplusConst(s,-m2)=inspos m1
proof
  let s be State of SCMPDS,m1,m2 be Element of NAT;
  assume
A1: IC s=inspos (m1+m2);
  consider m being Element of NAT such that
A2: m = IC s and
A3: ICplusConst(s,-m2) = abs(m+(-m2)) by SCMPDS_2:def 20;
A4: m=il.(m1+m2) by A1,A2
    .=(m1+m2);
  m1 >= 0 by NAT_1:2;
  hence ICplusConst(s,-m2) =m1 by A3,A4,ABSVALUE:def 1
    .=il.m1
    .=inspos m1;
end;

:: GBP:Global Base Pointer

definition
  func GBP -> Int_position equals
  intpos 0;
  coherence;
:: SBP:Stack Base(bottom) Pointer
  func SBP -> Int_position equals
  intpos 1;
  coherence;
end;

theorem
  GBP <> SBP by AMI_3:52;

theorem Th8:
  card (I ';' i)= card I + 1
proof
  thus card (I ';' i) = card (I ';' Load i) by SCMPDS_4:def 5
    .=card I+ card (Load i) by SCMPDS_4:45
    .=card I+1 by SCMPDS_5:6;
end;

theorem Th9:
  card (i ';' j)= 2
proof
  thus card (i ';' j) = card (Load i ';' Load j) by SCMPDS_4:def 6
    .=card (Load i)+card (Load j) by SCMPDS_4:45
    .=1+card(Load j) by SCMPDS_5:6
    .=1+1 by SCMPDS_5:6
    .=2;
end;

theorem Th10:
  (I ';' i).inspos card I =i & inspos card I in dom (I ';' i)
proof
A1: inspos 0 in dom Load i by SCMPDS_5:2;
  thus (I ';' i).inspos (card I) =(I ';' i).inspos(0+card I)
    .=(I ';' i).(inspos 0 + card I)
    .=(I ';' Load i).(inspos 0 + card I) by SCMPDS_4:def 5
    .=(Load i).inspos 0 by A1,SCMPDS_4:38
    .=i by SCMPDS_5:4;
  card (I ';' i) = card I+1 by Th8;
  then card I < card (I ';' i) by XREAL_1:31;
  hence thesis by SCMPDS_4:1;
end;

theorem Th11:
  (I ';' i ';' J).inspos card I =i
proof
  inspos card I in dom (I ';' i) by Th10;
  hence (I ';' i ';' J ).inspos card I =(I ';' i).inspos card I by
  SCMPDS_4:37
    .=i by Th10;
end;

begin :: The Construction of Recursive Euclide Algorithm

:: Greatest Common Divisor
:: gcd(x,y)     < x=(SBP,2) y=(SBP,3) >
:: BEGIN
:: if y=0 then gcd:=x else
:: gcd:=gcd(y, x mod y)
:: END

definition
  func GCD-Algorithm -> Program of SCMPDS equals
::Def04
  (((GBP:=0) ';' (SBP := 7) ';' saveIC(SBP,RetIC) ';'
  goto 2 ';' halt SCMPDS ) ';' (SBP,3)<=0_goto 9 ';'
  ((SBP,6):=(SBP,3)) ';' Divide(SBP,2,SBP,3) ';'
  ((SBP,7):=(SBP,3)) ';' ((SBP,4+RetSP):=(GBP,1))) ';'
  AddTo(GBP,1,4) ';' saveIC(SBP,RetIC) ';'
  (goto -7) ';' ((SBP,2):=(SBP,6)) ';' return SBP;
  coherence;
end;
set i00= GBP:=0, i01=SBP := 7, i02=saveIC(SBP,RetIC), i03=goto 2,
i04=halt SCMPDS, i05= (SBP,3)<=0_goto 9, i06= (SBP,6):=(SBP,3),
i07= Divide(SBP,2,SBP,3), i08= (SBP,7):=(SBP,3), i09= (SBP,4+RetSP):=(GBP,1),
i10=AddTo(GBP,1,4), i11=saveIC(SBP,RetIC), i12=goto -7, i13=(SBP,2):=(SBP,6),
i14=return SBP;

begin :: The Computation of Recursive Euclide Algorithm

theorem Th12:
  card GCD-Algorithm = 15
proof
  set GCD1=i00 ';' i01 ';' i02 ';' i03 ';' i04,
  GCD2=GCD1 ';' i05 ';' i06 ';' i07 ';' i08 ';' i09;
A1: card GCD1=card (i00 ';' i01 ';' i02 ';' i03)+ 1 by Th8
    .=card (i00 ';' i01 ';' i02)+1+1 by Th8
    .=card (i00 ';' i01)+1+1+1 by Th8
    .=2+1+1+1 by Th9
    .=5;
A2: card GCD2=card (GCD1 ';' i05 ';' i06 ';' i07 ';' i08 )+ 1 by Th8
    .=card (GCD1 ';' i05 ';' i06 ';' i07)+1+1 by Th8
    .=card (GCD1 ';' i05 ';' i06) +1+1+1 by Th8
    .=card (GCD1 ';' i05 )+1+1+1+1 by Th8
    .=5+1+1+1+1+1 by A1,Th8
    .=10;
  thus
  card GCD-Algorithm =card(GCD2 ';' i10 ';' i11 ';' i12 ';' i13)+1 by Th8
    .=card(GCD2 ';' i10 ';' i11 ';' i12)+1+1 by Th8
    .=card(GCD2 ';' i10 ';' i11)+1+1+1 by Th8
    .=card(GCD2 ';' i10)+1+1+1+1 by Th8
    .=10+1+1+1+1+1 by A2,Th8
    .=15;
end;

theorem
  n < 15 iff inspos n in dom GCD-Algorithm by Th12,SCMPDS_4:1;

theorem Th14:
  GCD-Algorithm.inspos 0=GBP:=0 & GCD-Algorithm.inspos 1=SBP:= 7 &
  GCD-Algorithm.inspos 2=saveIC(SBP,RetIC) & GCD-Algorithm.inspos 3=goto 2 &
  GCD-Algorithm.inspos 4=halt SCMPDS &
  GCD-Algorithm.inspos 5=(SBP,3)<=0_goto 9 &
  GCD-Algorithm.inspos 6=(SBP,6):=(SBP,3) &
  GCD-Algorithm.inspos 7=Divide(SBP,2,SBP,3) &
  GCD-Algorithm.inspos 8=(SBP,7):=(SBP,3) &
  GCD-Algorithm.inspos 9=(SBP,4+RetSP):=(GBP,1) &
  GCD-Algorithm.inspos 10=AddTo(GBP,1,4) &
  GCD-Algorithm.inspos 11=saveIC(SBP,RetIC) &
  GCD-Algorithm.inspos 12=goto -7 & GCD-Algorithm.inspos 13=(SBP,2):=(SBP,6) &
  GCD-Algorithm.inspos 14=return SBP
proof
  set I2=i00 ';' i01, I3=I2 ';' i02, I4=I3 ';' i03, I5=I4 ';' i04,
  I6=I5 ';' i05, I7=I6 ';' i06, I8=I7 ';' i07, I9=I8 ';' i08, I10=I9 ';' i09,
  I11=I10 ';' i10, I12=I11 ';' i11, I13=I12 ';' i12, I14=I13 ';' i13;
A1: card I2=2 by Th9;
  then
A2: card I3=2+1 by Th8;
  then
A3: card I4=3+1 by Th8;
  then
A4: card I5=4+1 by Th8;
  then
A5: card I6=5+1 by Th8;
  then
A6: card I7=6+1 by Th8;
  then
A7: card I8=7+1 by Th8;
  then
A8: card I9=8+1 by Th8;
  then
A9: card I10=9+1 by Th8;
  then
A10: card I11=10+1 by Th8;
  then
A11: card I12=11+1 by Th8;
  then
A12: card I13=12+1 by Th8;
  then
A13: card I14=13+1 by Th8;
  set J14=i13 ';' i14, J13=i12 ';' J14, J12=i11 ';' J13, J11=i10 ';' J12,
  J10=i09 ';' J11, J9=i08 ';' J10, J8=i07 ';' J9, J7=i06 ';' J8,
  J6=i05 ';' J7, J5=i04 ';' J6, J4=i03 ';' J5, J3=i02 ';' J4, J2=i01 ';' J3;
A14: GCD-Algorithm=I13 ';' J14 by SCMPDS_4:49;
  then
A15: GCD-Algorithm=I12 ';' J13 by SCMPDS_4:48;
  then
A16: GCD-Algorithm=I11 ';' J12 by SCMPDS_4:48;
  then
A17: GCD-Algorithm=I10 ';' J11 by SCMPDS_4:48;
  then
A18: GCD-Algorithm=I9 ';' J10 by SCMPDS_4:48;
  then
A19: GCD-Algorithm=I8 ';' J9 by SCMPDS_4:48;
  then
A20: GCD-Algorithm=I7 ';' J8 by SCMPDS_4:48;
  then
A21: GCD-Algorithm=I6 ';' J7 by SCMPDS_4:48;
  then
A22: GCD-Algorithm=I5 ';' J6 by SCMPDS_4:48;
  then
A23: GCD-Algorithm=I4 ';' J5 by SCMPDS_4:48;
  then
A24: GCD-Algorithm=I3 ';' J4 by SCMPDS_4:48;
  then
A25: GCD-Algorithm=I2 ';' J3 by SCMPDS_4:48;
  then GCD-Algorithm=i00 ';' J2 by SCMPDS_4:52;
  hence GCD-Algorithm.inspos 0=i00 by SCMPDS_6:16;
A26: card Load i00=1 by SCMPDS_5:6;
  GCD-Algorithm=Load i00 ';' i01 ';' J3 by A25,SCMPDS_4:43;
  hence GCD-Algorithm.inspos 1=i01 by A26,Th11;
  thus GCD-Algorithm.inspos 2=i02 by A1,A24,Th11;
  thus GCD-Algorithm.inspos 3=i03 by A2,A23,Th11;
  thus GCD-Algorithm.inspos 4=i04 by A3,A22,Th11;
  thus GCD-Algorithm.inspos 5=i05 by A4,A21,Th11;
  thus GCD-Algorithm.inspos 6=i06 by A5,A20,Th11;
  thus GCD-Algorithm.inspos 7=i07 by A6,A19,Th11;
  thus GCD-Algorithm.inspos 8=i08 by A7,A18,Th11;
  thus GCD-Algorithm.inspos 9=i09 by A8,A17,Th11;
  thus GCD-Algorithm.inspos 10=i10 by A9,A16,Th11;
  thus GCD-Algorithm.inspos 11=i11 by A10,A15,Th11;
  thus GCD-Algorithm.inspos 12=i12 by A11,A14,Th11;
  GCD-Algorithm=I14 ';' Load i14 by SCMPDS_4:def 5;
  hence GCD-Algorithm.inspos 13=i13 by A12,Th11;
  thus thesis by A13,Th10;
end;

Lm1: GCD-Algorithm c= s implies s.inspos 0=i00 & s.inspos 1=i01 &
s.inspos 2=i02 & s.inspos 3=i03 & s.inspos 4=i04 & s.inspos 5=i05 &
s.inspos 6=i06 & s.inspos 7=i07 & s.inspos 8=i08 & s.inspos 9=i09 &
s.inspos 10=i10 & s.inspos 11=i11 & s.inspos 12=i12 & s.inspos 13=i13 &
s.inspos 14=i14
proof
  set GA=GCD-Algorithm;
  assume
A1: GA c= s;
  inspos 0 in dom GA by Th12,SCMPDS_4:1;
  hence s.inspos 0=i00 by A1,Th14,GRFUNC_1:8;
  inspos 1 in dom GA by Th12,SCMPDS_4:1;
  hence s.inspos 1=i01 by A1,Th14,GRFUNC_1:8;
  inspos 2 in dom GA by Th12,SCMPDS_4:1;
  hence s.inspos 2=i02 by A1,Th14,GRFUNC_1:8;
  inspos 3 in dom GA by Th12,SCMPDS_4:1;
  hence s.inspos 3=i03 by A1,Th14,GRFUNC_1:8;
  inspos 4 in dom GA by Th12,SCMPDS_4:1;
  hence s.inspos 4=i04 by A1,Th14,GRFUNC_1:8;
  inspos 5 in dom GA by Th12,SCMPDS_4:1;
  hence s.inspos 5=i05 by A1,Th14,GRFUNC_1:8;
  inspos 6 in dom GA by Th12,SCMPDS_4:1;
  hence s.inspos 6=i06 by A1,Th14,GRFUNC_1:8;
  inspos 7 in dom GA by Th12,SCMPDS_4:1;
  hence s.inspos 7=i07 by A1,Th14,GRFUNC_1:8;
  inspos 8 in dom GA by Th12,SCMPDS_4:1;
  hence s.inspos 8=i08 by A1,Th14,GRFUNC_1:8;
  inspos 9 in dom GA by Th12,SCMPDS_4:1;
  hence s.inspos 9=i09 by A1,Th14,GRFUNC_1:8;
  inspos 10 in dom GA by Th12,SCMPDS_4:1;
  hence s.inspos 10=i10 by A1,Th14,GRFUNC_1:8;
  inspos 11 in dom GA by Th12,SCMPDS_4:1;
  hence s.inspos 11=i11 by A1,Th14,GRFUNC_1:8;
  inspos 12 in dom GA by Th12,SCMPDS_4:1;
  hence s.inspos 12=i12 by A1,Th14,GRFUNC_1:8;
  inspos 13 in dom GA by Th12,SCMPDS_4:1;
  hence s.inspos 13=i13 by A1,Th14,GRFUNC_1:8;
  inspos 14 in dom GA by Th12,SCMPDS_4:1;
  hence thesis by A1,Th14,GRFUNC_1:8;
end;

theorem Th15:
  for s being State of SCMPDS st Initialized GCD-Algorithm c= s
  holds IC Computation(s,4) = inspos 5 & Computation(s,4).GBP = 0 &
  Computation(s,4).SBP = 7 & Computation(s,4).intpos(7+RetIC) = inspos 2 &
  Computation(s,4).intpos 9 = s.intpos 9 &
  Computation(s,4).intpos 10 = s.intpos 10
proof
  let s be State of SCMPDS;
  set GA=GCD-Algorithm;
  assume
A1: Initialized GA c= s;
  then
A2: GA c= s by SCMPDS_4:57;
A3: IC s=inspos 0 by A1,SCMPDS_5:18;
A4: Computation(s,0+1) = Following Computation(s,0) by AMI_1:14
    .= Following s by AMI_1:13
    .= Exec(i00,s) by A2,A3,Lm1;
  then
A5: IC Computation(s,1)= Next IC s by SCMPDS_2:57
    .= inspos (0+1) by A3;
  then
A6: CurInstr Computation(s,1)=s.inspos 1 by AMI_1:54
    .=i01 by A2,Lm1;
A7: Computation(s,1+1) = Following Computation(s,1) by AMI_1:14
    .= Exec(i01,Computation(s,1)) by A6;
A8: Computation(s,1).GBP=0 by A4,SCMPDS_2:57;
A9: Computation(s,1).intpos 9=s.intpos 9 by A4,AMI_3:52,SCMPDS_2:57;
A10: Computation(s,1).intpos 10 =s.intpos 10 by A4,AMI_3:52,SCMPDS_2:57;
A11: IC Computation(s,2)= Next IC Computation(s,1) by A7,SCMPDS_2:57
    .= inspos (1+1) by A5;
  then
A12: CurInstr Computation(s,2)=s.inspos 2 by AMI_1:54
    .=i02 by A2,Lm1;
A13: Computation(s,2+1) = Following Computation(s,2) by AMI_1:14
    .= Exec(i02,Computation(s,2)) by A12;
A14: Computation(s,2).GBP=0 by A7,A8,AMI_3:52,SCMPDS_2:57;
A15: Computation(s,2).SBP=7 by A7,SCMPDS_2:57;
A16: Computation(s,2).intpos 9=s.intpos 9 by A7,A9,AMI_3:52,SCMPDS_2:57;
A17: Computation(s,2).intpos 10 =s.intpos 10 by A7,A10,AMI_3:52,SCMPDS_2:57;
A18: IC Computation(s,3)= Next IC Computation(s,2) by A13,SCMPDS_2:71
    .= inspos (2+1) by A11;
  then
A19: CurInstr Computation(s,3)=s.inspos 3 by AMI_1:54
    .=i03 by A2,Lm1;
A20: Computation(s,3+1) = Following Computation(s,3) by AMI_1:14
    .= Exec(i03,Computation(s,3)) by A19;
A21: DataLoc(Computation(s,2).SBP,RetIC)=intpos(7+1)
  by A15,Th5,SCMPDS_1:def 23;
  then
A22: Computation(s,3).GBP=0 by A13,A14,AMI_3:52,SCMPDS_2:71;
A23: Computation(s,3).SBP=7 by A13,A15,A21,AMI_3:52,SCMPDS_2:71;
A24: Computation(s,3).intpos 8=inspos 2 by A11,A13,A21,SCMPDS_2:71;
A25: Computation(s,3).intpos 9=s.intpos 9 by A13,A16,A21,AMI_3:52,SCMPDS_2:71;
A26: Computation(s,3).intpos 10 =s.intpos 10 by A13,A17,A21,AMI_3:52
  ,SCMPDS_2:71;
  thus
  IC Computation(s,4)= ICplusConst(Computation(s,3),2) by A20,SCMPDS_2:66
    .= inspos (3+2) by A18,SCMPDS_6:23
    .= inspos 5;
  thus Computation(s,4).GBP=0 by A20,A22,SCMPDS_2:66;
  thus Computation(s,4).SBP = 7 by A20,A23,SCMPDS_2:66;
  thus Computation(s,4).intpos(7+RetIC) = inspos 2
  by A20,A24,SCMPDS_1:def 23,SCMPDS_2:66;
  thus Computation(s,4).intpos 9=s.intpos 9 by A20,A25,SCMPDS_2:66;
  thus thesis by A20,A26,SCMPDS_2:66;
end;

Lm2: n>0 implies GBP <> intpos(m+n)
proof
  assume
A1: n>0;
  n<=m+n by NAT_1:11;
  hence thesis by A1,AMI_3:52;
end;

Lm3: n>1 implies SBP <> intpos(m+n)
proof
  assume
A1: n>1;
  n<=m+n by NAT_1:11;
  hence thesis by A1,AMI_3:52;
end;

Lm4: GCD-Algorithm c= s & IC s = inspos 5 &
n=s.SBP & s.GBP=0 & s.DataLoc(s.SBP,3) > 0 implies
IC Computation(s,7) = inspos (5+7) &
Computation(s,8) = Exec(i12,Computation(s,7)) & Computation(s,7).SBP=n+4 &
Computation(s,7).GBP=0 & Computation(s,7).intpos(n+7)
= s.DataLoc(s.SBP,2) mod s.DataLoc(s.SBP,3) &
Computation(s,7).intpos(n+6) = s.DataLoc(s.SBP,3) &
Computation(s,7).intpos(n+4) = n & Computation(s,7).intpos(n+5) = inspos 11
proof
  set x=s.DataLoc(s.SBP,2), y=s.DataLoc(s.SBP,3);
  assume
A1: GCD-Algorithm c= s;
  assume
A2: IC s = inspos 5;
  assume
A3: n=s.SBP;
  assume
A4: s.GBP=0;
  assume
A5: y > 0;
A6: Computation(s,1+0) = Following Computation(s,0) by AMI_1:14
    .= Following s by AMI_1:13
    .= Exec(i05,s) by A1,A2,Lm1;
  then
A7: IC Computation(s,1)= Next IC s by A5,SCMPDS_2:68
    .= inspos (5+1) by A2;
  then
A8: CurInstr Computation(s,1) =s.inspos 6 by AMI_1:54
    .=i06 by A1,Lm1;
A9: Computation(s,1+1) = Following Computation(s,1) by AMI_1:14
    .= Exec(i06,Computation(s,1)) by A8;
A10: Computation(s,1).SBP=n by A3,A6,SCMPDS_2:68;
A11: Computation(s,1).GBP=0 by A4,A6,SCMPDS_2:68;
A12: Computation(s,1).intpos(n+3) = Computation(s,1).DataLoc(n,3) by Th5
    .=y by A3,A6,SCMPDS_2:68;
A13: Computation(s,1).intpos(n+2) = Computation(s,1).DataLoc(n,2) by Th5
    .=x by A3,A6,SCMPDS_2:68;
A14: IC Computation(s,2)= Next IC Computation(s,1) by A9,SCMPDS_2:59
    .= inspos (6+1) by A7;
  then
A15: CurInstr Computation(s,2) =s.inspos 7 by AMI_1:54
    .=i07 by A1,Lm1;
A16: Computation(s,2+1) = Following Computation(s,2) by AMI_1:14
    .= Exec(i07,Computation(s,2)) by A15;
A17: DataLoc(Computation(s,1).SBP,6)=intpos(n+6) by A10,Th5;
  then
A18: Computation(s,2).SBP=n by A9,A10,Lm3,SCMPDS_2:59;
A19: Computation(s,2).GBP=0 by A9,A11,A17,Lm2,SCMPDS_2:59;
A20: Computation(s,2).intpos(n+6)=Computation(s,1).DataLoc(n,3)
  by A9,A10,A17,SCMPDS_2:59
    .= y by A12,Th5;
  n+3<>n+6;
  then
A21: Computation(s,2).intpos(n+3)=y by A9,A12,A17,AMI_3:52,SCMPDS_2:59;
  n+2<>n+6;
  then
A22: Computation(s,2).intpos(n+2)=x by A9,A13,A17,AMI_3:52,SCMPDS_2:59;
A23: IC Computation(s,3)= Next IC Computation(s,2) by A16,SCMPDS_2:64
    .= inspos (7+1) by A14;
  then
A24: CurInstr Computation(s,3) =s.inspos 8 by AMI_1:54
    .=i08 by A1,Lm1;
A25: Computation(s,3+1) = Following Computation(s,3) by AMI_1:14
    .= Exec(i08,Computation(s,3)) by A24;
A26: DataLoc(Computation(s,2).SBP,2)=intpos(n+2) by A18,Th5;
  then
A27: SBP <> DataLoc(Computation(s,2).SBP,2) by Lm3;
A28: DataLoc(Computation(s,2).SBP,3)=intpos(n+3) by A18,Th5;
  then SBP <> DataLoc(Computation(s,2).SBP,3) by Lm3;
  then
A29: Computation(s,3).SBP=n by A16,A18,A27,SCMPDS_2:64;
A30: GBP <> DataLoc(Computation(s,2).SBP,2) by A26,Lm2;
  GBP <> DataLoc(Computation(s,2).SBP,3) by A28,Lm2;
  then
A31: Computation(s,3).GBP=0 by A16,A19,A30,SCMPDS_2:64;
A32: Computation(s,3).intpos(n+3) = x mod y by A16,A21,A22,A26,A28,SCMPDS_2:64;
  n+6<>n+2;
  then
A33: intpos(n+6) <> DataLoc(Computation(s,2).SBP,2) by A26,AMI_3:52;
  n+6<>n+3;
  then intpos(n+6) <> DataLoc(Computation(s,2).SBP,3) by A28,AMI_3:52;
  then
A34: Computation(s,3).intpos(n+6) =y by A16,A20,A33,SCMPDS_2:64;
A35: IC Computation(s,4)= Next IC Computation(s,3) by A25,SCMPDS_2:59
    .= inspos (8+1) by A23;
  then
A36: CurInstr Computation(s,4) =s.inspos 9 by AMI_1:54
    .=i09 by A1,Lm1;
A37: Computation(s,4+1) = Following Computation(s,4) by AMI_1:14
    .= Exec(i09,Computation(s,4)) by A36;
A38: DataLoc(Computation(s,3).SBP,7)=intpos(n+7) by A29,Th5;
  then
A39: Computation(s,4).SBP=n by A25,A29,Lm3,SCMPDS_2:59;
A40: Computation(s,4).GBP=0 by A25,A31,A38,Lm2,SCMPDS_2:59;
A41: Computation(s,4).intpos(n+7)=Computation(s,3).DataLoc(n,3)
  by A25,A29,A38,SCMPDS_2:59
    .= x mod y by A32,Th5;
  n+6<>n+7;
  then
A42: Computation(s,4).intpos(n+6) =y by A25,A34,A38,
  AMI_3:52,SCMPDS_2:59;
A43: IC Computation(s,5)= Next IC Computation(s,4) by A37,SCMPDS_2:59
    .= inspos (9+1) by A35;
  then
A44: CurInstr Computation(s,5) =s.inspos 10 by AMI_1:54
    .=i10 by A1,Lm1;
A45: Computation(s,5+1) = Following Computation(s,5) by AMI_1:14
    .= Exec(i10,Computation(s,5)) by A44;
A46: DataLoc(Computation(s,4).SBP,4+RetSP)=intpos(n+(4+0))
  by A39,Th5,SCMPDS_1:def 22;
  then
A47: Computation(s,5).SBP=n by A37,A39,Lm3,SCMPDS_2:59;
A48: Computation(s,5).GBP=0 by A37,A40,A46,Lm2,SCMPDS_2:59;
  n+7<>n+4;
  then
A49: Computation(s,5).intpos(n+7) =x mod y by A37,A41,A46,AMI_3:52
  ,SCMPDS_2:59;
  n+6<>n+4;
  then
A50: Computation(s,5).intpos(n+6) =y by A37,A42,A46,
  AMI_3:52,SCMPDS_2:59;
A51: Computation(s,5).intpos(n+4) =Computation(s,4).DataLoc(0,1)
  by A37,A40,A46,SCMPDS_2:59
    .=Computation(s,4).intpos(0+1) by Th5
    .=n by A25,A29,A38,Lm3,SCMPDS_2:59;
A52: IC Computation(s,6)= Next IC Computation(s,5) by A45,SCMPDS_2:60
    .= inspos (10+1) by A43;
  then
A53: CurInstr Computation(s,6) =s.inspos 11 by AMI_1:54
    .=i11 by A1,Lm1;
A54: Computation(s,6+1) = Following Computation(s,6) by AMI_1:14
    .= Exec(i11,Computation(s,6)) by A53;
A55: DataLoc(Computation(s,5).GBP,1)=intpos(0+1) by A48,Th5;
  then
A56: Computation(s,6).SBP=n+4 by A45,A47,SCMPDS_2:60;
A57: Computation(s,6).GBP=0 by A45,A48,A55,AMI_3:52,SCMPDS_2:60;
  n+7 <> 1 by NAT_1:11;
  then
A58: Computation(s,6).intpos(n+7) =x mod y by A45,A49,A55,AMI_3:52
  ,SCMPDS_2:60;
  n+6 <> 1 by NAT_1:11;
  then
A59: Computation(s,6).intpos(n+6) =y by A45,A50,A55,
  AMI_3:52,SCMPDS_2:60;
  n+4 <> 1 by NAT_1:11;
  then
A60: Computation(s,6).intpos(n+4) =n by A45,A51,A55,AMI_3:52,SCMPDS_2:60;
  thus
  IC Computation(s,7)= Next IC Computation(s,6) by A54,SCMPDS_2:71
    .= inspos (11+1) by A52
    .= inspos (5+7);
  then
A61: CurInstr Computation(s,7) =s.inspos 12 by AMI_1:54
    .=i12 by A1,Lm1;
  thus Computation(s,8)=Computation(s,7+1)
    .= Following Computation(s,7) by AMI_1:14
    .= Exec(i12,Computation(s,7)) by A61;
A62: DataLoc(Computation(s,6).SBP,RetIC)=intpos(n+4+1)
  by A56,Th5,SCMPDS_1:def 23
    .=intpos(n+(4+1));
  then SBP <> DataLoc(Computation(s,6).SBP,RetIC) by Lm3;
  hence Computation(s,7).SBP=n+4 by A54,A56,SCMPDS_2:71;
  GBP <> DataLoc(Computation(s,6).SBP,RetIC) by A62,Lm2;
  hence Computation(s,7).GBP=0 by A54,A57,SCMPDS_2:71;
  n+7<>n+5;
  hence Computation(s,7).intpos(n+7) =x mod y by A54,A58,A62,AMI_3:52
  ,SCMPDS_2:71;
  n+6<>n+5;
  hence Computation(s,7).intpos(n+6) =y by A54,A59,A62,AMI_3:52
  ,SCMPDS_2:71;
  n+4<>n+5;
  hence Computation(s,7).intpos(n+4)=n by A54,A60,A62,AMI_3:52
  ,SCMPDS_2:71;
  thus thesis by A52,A54,A62,SCMPDS_2:71;
end;

Lm5: GCD-Algorithm c= s & IC s = inspos 5 &
n=s.SBP & s.GBP=0 & s.DataLoc(s.SBP,3) > 0 & 1<m & m <=n+1 implies
Computation(s,7).intpos m = s.intpos m
proof
  assume
A1: GCD-Algorithm c= s;
  assume
A2: IC s = inspos 5;
  assume
A3: n=s.SBP;
  assume
A4: s.GBP=0;
  assume
A5: s.DataLoc(s.SBP,3) > 0;
  assume
A6: 1 < m;
  assume
A7: m <= n+1;
A8: Computation(s,1+0) = Following Computation(s,0) by AMI_1:14
    .= Following s by AMI_1:13
    .= Exec(i05,s) by A1,A2,Lm1;
  then
A9: IC Computation(s,1)= Next IC s by A5,SCMPDS_2:68
    .= inspos (5+1) by A2;
  then
A10: CurInstr Computation(s,1) =s.inspos 6 by AMI_1:54
    .=i06 by A1,Lm1;
A11: Computation(s,1+1) = Following Computation(s,1) by AMI_1:14
    .= Exec(i06,Computation(s,1)) by A10;
A12: Computation(s,1).SBP=n by A3,A8,SCMPDS_2:68;
A13: Computation(s,1).GBP=0 by A4,A8,SCMPDS_2:68;
A14: Computation(s,1).intpos m = s.intpos m by A8,SCMPDS_2:68;
A15: IC Computation(s,2)= Next IC Computation(s,1) by A11,SCMPDS_2:59
    .= inspos (6+1) by A9;
  then
A16: CurInstr Computation(s,2) =s.inspos 7 by AMI_1:54
    .=i07 by A1,Lm1;
A17: Computation(s,2+1) = Following Computation(s,2) by AMI_1:14
    .= Exec(i07,Computation(s,2)) by A16;
A18: DataLoc(Computation(s,1).SBP,6)=intpos(n+6) by A12,Th5;
  then
A19: Computation(s,2).SBP=n by A11,A12,Lm3,SCMPDS_2:59;
A20: Computation(s,2).GBP=0 by A11,A13,A18,Lm2,SCMPDS_2:59;
  n+1 < n+6 by XREAL_1:8;
  then
A21: Computation(s,2).intpos m= s.intpos m by A7,A11,A14,A18,AMI_3:52
  ,SCMPDS_2:59;
A22: IC Computation(s,3)= Next IC Computation(s,2) by A17,SCMPDS_2:64
    .= inspos (7+1) by A15;
  then
A23: CurInstr Computation(s,3) =s.inspos 8 by AMI_1:54
    .=i08 by A1,Lm1;
A24: Computation(s,3+1) = Following Computation(s,3) by AMI_1:14
    .= Exec(i08,Computation(s,3)) by A23;
A25: DataLoc(Computation(s,2).SBP,2)=intpos(n+2) by A19,Th5;
  then
A26: SBP <> DataLoc(Computation(s,2).SBP,2) by Lm3;
A27: DataLoc(Computation(s,2).SBP,3)=intpos(n+3) by A19,Th5;
  then SBP <> DataLoc(Computation(s,2).SBP,3) by Lm3;
  then
A28: Computation(s,3).SBP=n by A17,A19,A26,SCMPDS_2:64;
A29: GBP <> DataLoc(Computation(s,2).SBP,2) by A25,Lm2;
  GBP <> DataLoc(Computation(s,2).SBP,3) by A27,Lm2;
  then
A30: Computation(s,3).GBP=0 by A17,A20,A29,SCMPDS_2:64;
  n+1 < n+2 by XREAL_1:8;
  then
A31: intpos m <> DataLoc(Computation(s,2).SBP,2) by A7,A25,AMI_3:52;
  n+1 < n+3 by XREAL_1:8;
  then intpos m <> DataLoc(Computation(s,2).SBP,3) by A7,A27,AMI_3:52;
  then
A32: Computation(s,3).intpos m =s.intpos m by A17,A21,A31,SCMPDS_2:64;
A33: IC Computation(s,4)= Next IC Computation(s,3) by A24,SCMPDS_2:59
    .= inspos (8+1) by A22;
  then
A34: CurInstr Computation(s,4) =s.inspos 9 by AMI_1:54
    .=i09 by A1,Lm1;
A35: Computation(s,4+1) = Following Computation(s,4) by AMI_1:14
    .= Exec(i09,Computation(s,4)) by A34;
A36: DataLoc(Computation(s,3).SBP,7)=intpos(n+7) by A28,Th5;
  then
A37: Computation(s,4).SBP=n by A24,A28,Lm3,SCMPDS_2:59;
A38: Computation(s,4).GBP=0 by A24,A30,A36,Lm2,SCMPDS_2:59;
  n+1 < n+7 by XREAL_1:8;
  then
A39: Computation(s,4).intpos m =s.intpos m by A7,A24,A32,A36,AMI_3:52
  ,SCMPDS_2:59;
A40: IC Computation(s,5)= Next IC Computation(s,4) by A35,SCMPDS_2:59
    .= inspos (9+1) by A33;
  then
A41: CurInstr Computation(s,5) =s.inspos 10 by AMI_1:54
    .=i10 by A1,Lm1;
A42: Computation(s,5+1) = Following Computation(s,5) by AMI_1:14
    .= Exec(i10,Computation(s,5)) by A41;
A43: DataLoc(Computation(s,4).SBP,4+RetSP)=intpos(n+(4+0))
  by A37,Th5,SCMPDS_1:def 22;
  then
A44: Computation(s,5).SBP=n by A35,A37,Lm3,SCMPDS_2:59;
A45: Computation(s,5).GBP=0 by A35,A38,A43,Lm2,SCMPDS_2:59;
  n+1 < n+4 by XREAL_1:8;
  then
A46: Computation(s,5).intpos m = s.intpos m by A7,A35,A39,A43,AMI_3:52
  ,SCMPDS_2:59;
  IC Computation(s,6)= Next IC Computation(s,5) by A42,SCMPDS_2:60
    .= inspos (10+1) by A40;
  then
A47: CurInstr Computation(s,6) =s.inspos 11 by AMI_1:54
    .=i11 by A1,Lm1;
A48: Computation(s,6+1) = Following Computation(s,6) by AMI_1:14
    .= Exec(i11,Computation(s,6)) by A47;
A49: DataLoc(Computation(s,5).GBP,1)=intpos(0+1) by A45,Th5;
  then
A50: Computation(s,6).SBP=n+4 by A42,A44,SCMPDS_2:60;
A51: Computation(s,6).intpos m =s.intpos m by A6,A42,A46,A49,AMI_3:52
  ,SCMPDS_2:60;
A52: DataLoc(Computation(s,6).SBP,RetIC)=intpos(n+4+1)
  by A50,Th5,SCMPDS_1:def 23
    .=intpos(n+(4+1));
  n+1 < n+5 by XREAL_1:8;
  hence thesis by A7,A48,A51,A52,AMI_3:52,SCMPDS_2:71;
end;

theorem Th16:
  for s being State of SCMPDS st GCD-Algorithm c= s
  & IC s = inspos 5 & s.SBP >0 & s.GBP=0 &
  s.DataLoc(s.SBP,3) >= 0 & s.DataLoc(s.SBP,2) >= s.DataLoc(s.SBP,3) holds
  ex n st CurInstr Computation(s,n) = return SBP &
  s.SBP=Computation(s,n).SBP & Computation(s,n).DataLoc(s.SBP,2)
  =s.DataLoc(s.SBP,2) gcd s.DataLoc(s.SBP,3) &
  for j be Element of NAT st 1<j & j <= s.SBP+1 holds
  s.intpos j=Computation(s,n).intpos j
proof
  set GA=GCD-Algorithm;
  defpred P[Element of NAT] means for s being State of SCMPDS st GA c= s
  & IC s = inspos 5 & s.SBP >0 & s.GBP=0 & s.DataLoc(s.SBP,3) <= $1 &
  s.DataLoc(s.SBP,3) >= 0 & s.DataLoc(s.SBP,2) >= s.DataLoc(s.SBP,3)
  holds ex n st CurInstr Computation(s,n) = return SBP &
  s.SBP=Computation(s,n).SBP & Computation(s,n).DataLoc(s.SBP,2)
  =s.DataLoc(s.SBP,2) gcd s.DataLoc(s.SBP,3) &
  (for j be Element of NAT st 1<j & j <= s.SBP+1 holds
  s.intpos j=Computation(s,n).intpos j);
  now
    let s be State of SCMPDS;
    set x=s.DataLoc(s.SBP,2), y=s.DataLoc(s.SBP,3);
    assume
A1: GA c= s;
    assume
A2: IC s = inspos 5;
    assume s.SBP >0;
    assume s.GBP=0;
    assume
A3: y <= 0;
    assume
A4: y >= 0;
    assume
A5: x >= y;
A6: Computation(s,1+0) = Following Computation(s,0) by AMI_1:14
      .= Following s by AMI_1:13
      .= Exec(i05,s) by A1,A2,Lm1;
    then
A7: IC Computation(s,1)= ICplusConst(s,9) by A3,SCMPDS_2:68
      .= inspos (5+9) by A2,SCMPDS_6:23;
    take n=1;
    thus CurInstr Computation(s,n)=s.inspos 14 by A7,AMI_1:54
      .=i14 by A1,Lm1;
    thus Computation(s,n).SBP=s.SBP by A6,SCMPDS_2:68;
A8: y = 0 by A3,A4,XXREAL_0:1;
    then
A9: abs(y)= 0 by ABSVALUE:def 1;
    thus Computation(s,n).DataLoc(s.SBP,2)=x by A6,SCMPDS_2:68
      .=abs(x) by A5,A8,ABSVALUE:def 1
      .=abs(x) gcd abs(y) by A9,NEWTON:65
      .=x gcd y by INT_2:51;
    thus for j be Element of NAT st 1<j & j <= s.SBP+1 holds
    s.intpos j=Computation(s,n).intpos j by A6,SCMPDS_2:68;
  end;
  then
A10: P[0];
A11: now
    let k be Element of NAT;
    assume
A12: P[k];
    now
      let s be State of SCMPDS;
      set x=s.DataLoc(s.SBP,2), y=s.DataLoc(s.SBP,3), yy=y;
      assume
A13:  GA c= s;
      assume
A14:  IC s = inspos 5;
      assume
A15:  s.SBP >0;
      assume
A16:  s.GBP=0;
      assume
A17:  y <= k+1;
      assume
A18:  y >= 0;
      assume
A19:  x >= y;
      then
A20:  x >= 0 by A18,XXREAL_0:2;
      reconsider y as Element of NAT by A18,INT_1:16;
      per cases by A17,NAT_1:8;
      suppose y <= k;
        hence ex n st CurInstr Computation(s,n) = return SBP &
        s.SBP=Computation(s,n).SBP &
        Computation(s,n).DataLoc(s.SBP,2)= x gcd yy &
        for j be Element of NAT st 1<j & j <= s.SBP+1 holds
        s.intpos j=Computation(s,n).intpos j by A12,A13,A14,A15,A16,A18,A19;
      end;
      suppose
A21:    y = k+1;
        then
A22:    y>0 by NAT_1:5;
        reconsider pn=s.SBP as Element of NAT by A15,INT_1:16;
A23:    pn=s.SBP;
        then
A24:    IC Computation(s,7) = inspos (5+7) by A13,A14,A16,A22,Lm4;
A25:    Computation
(s,8) = Exec(i12,Computation(s,7)) by A13,A14,A16,A22,A23,Lm4;
A26:    Computation(s,7).SBP= pn+4 by A13,A14,A16,A22,Lm4;
A27:    Computation(s,7).GBP=0 by A13,A14,A16,A22,A23,Lm4;
A28:    Computation(s,7).intpos(pn+7) = x mod y by A13,A14,A16,A22,Lm4;
A29:    Computation(s,7).intpos(pn+6) = y by A13,A14,A16,A22,Lm4;
A30:    Computation(s,7).intpos(pn+4) = pn by A13,A14,A16,A22,Lm4;
A31:    Computation(s,7).intpos(pn+5) = inspos 11 by A13,A14,A16,A22,Lm4;
        set s8=Computation(s,8);
A32:    IC s8= ICplusConst(Computation(s,7),-7) by A25,SCMPDS_2:66
          .= inspos 5 by A24,Th6;
A33:    GA c= s8 by A13,AMI_1:81;
A34:    s8.SBP=pn+4 by A25,A26,SCMPDS_2:66;
A35:    4<=pn+4 by NAT_1:11;
        then
A36:    s8.SBP > 0 by A34,XXREAL_0:2;
A37:    s8.GBP=0 by A25,A27,SCMPDS_2:66;
        set x1=s8.DataLoc(s8.SBP,2), y1=s8.DataLoc(s8.SBP,3);
A38:    x1=s8.intpos(pn+4+2) by A34,Th5
          .=y by A25,A29,SCMPDS_2:66;
A39:    y1=s8.intpos(pn+4+3) by A34,Th5
          .=x mod y by A25,A28,SCMPDS_2:66;
        then
A40:    y1<y by A21,NAT_1:5,NEWTON:79;
        then y1 <= k by A21,INT_1:20;
        then consider m such that
A41:    CurInstr Computation(s8,m) = return SBP and
A42:    s8.SBP=Computation(s8,m).SBP and
A43:    Computation(s8,m).DataLoc(s8.SBP,2)= x1 gcd y1 and
A44:    for j be Element of NAT st 1<j & j <= s8.SBP+1 holds s8.intpos j=
        Computation(s8,m).intpos j
        by A12,A22,A32,A33,A36,A37,A38,A39,A40,NEWTON:78;
        set s9=Computation(s,m+8);
A45:    s8.SBP=s9.SBP by A42,AMI_1:51;
A46:    Computation(s,m+(8+1))=Computation(s,m+8+1)
          .= Following s9 by AMI_1:14
          .= Exec(return SBP,s9) by A41,AMI_1:51;
A47:    1 < pn+4 by A35,XXREAL_0:2;
        pn+4 < s8.SBP+1 by A34,XREAL_1:31;
        then
A48:    s8.intpos(pn+4)=Computation(s8,m).intpos (pn+4) by A44,A47
          .=s9.intpos(pn+4) by AMI_1:51;
        5<=pn+5 by NAT_1:11;
        then
A49:    1 <pn+5 by XXREAL_0:2;
A50:    inspos 11=s8.intpos(pn+5) by A25,A31,SCMPDS_2:66
          .=Computation(s8,m).intpos (pn+5) by A34,A44,A49
          .=s9.intpos(pn+4+1) by AMI_1:51
          .=s9.DataLoc(s9.SBP,RetIC) by A34,A45,Th5,SCMPDS_1:def 23;
A51:    IC Computation(s,m+9)= (abs(s9.DataLoc(s9.SBP,RetIC)))+2
        by A46,SCMPDS_2:70
          .= inspos (11+2) by A50,Th3;
        then
A52:    CurInstr Computation(s,m+9) =s.inspos 13 by AMI_1:54
          .=i13 by A13,Lm1;
A53:    Computation(s,m+(9+1))=Computation(s,m+9+1)
          .= Following Computation(s,m+9) by AMI_1:14
          .= Exec(i13,Computation(s,m+9)) by A52;
A54:    Computation(s,m+9).SBP=s9.DataLoc(pn+4,RetSP)
        by A34,A45,A46,SCMPDS_2:70
          .=s9.intpos(pn+4+0) by Th5,SCMPDS_1:def 22
          .=pn by A25,A30,A48,SCMPDS_2:66;
A55:    Computation(s,m+9).intpos(pn+6)=s9.intpos(pn+4+2) by A46,Lm3,
        SCMPDS_2:70
          .=s9.DataLoc(s8.SBP,2) by A34,Th5
          .=x1 gcd y1 by A43,AMI_1:51;
        IC Computation(s,m+10)= Next IC Computation(s,m+9) by A53,
        SCMPDS_2:59
          .= inspos (13+1) by A51;
        then
A56:    CurInstr Computation(s,m+10)=s.inspos 14 by AMI_1:54
          .=i14 by A13,Lm1;
        hereby
          take n=m+10;
          thus CurInstr Computation(s,n) = return SBP by A56;
A57:      DataLoc(Computation(s,m+9).SBP,2)=intpos(pn+2) by A54,Th5;
          hence Computation(s,n).SBP=s.SBP by A53,A54,Lm3,SCMPDS_2:59;
          thus Computation(s,n).DataLoc(s.SBP,2)
          =Computation(s,m+9).DataLoc(pn,6) by A53,A54,SCMPDS_2:59
            .=yy gcd (x mod yy) by A38,A39,A55,Th5
            .=x gcd yy by A20,A21,NAT_1:5,NAT_D:30;
          hereby
            let j be Element of NAT;
            assume that
A58:        1<j and
A59:        j <= s.SBP+1;
            s.SBP <= s8.SBP by A34,NAT_1:11;
            then s.SBP +1 <= s8.SBP+1 by XREAL_1:8;
            then
A60:        j <= s8.SBP+1 by A59,XXREAL_0:2;
A61:        Computation(s,m+9).intpos j=s9.intpos j by A46,A58,
            AMI_3:52,SCMPDS_2:70
              .=Computation(s8,m).intpos j by AMI_1:51
              .=s8.intpos j by A44,A58,A60;
A62:        pn+1<pn+2 by XREAL_1:8;
            Computation(s,7).intpos j = s.intpos j
            by A13,A14,A16,A21,A23,A58,A59,Lm5,NAT_1:5;
            hence s.intpos j=s8.intpos j by A25,SCMPDS_2:66
              .=Computation(s,n).intpos j by A53,A57,A59,A61,A62,AMI_3:52
            ,SCMPDS_2:59;
          end;
        end;
      end;
    end;
    hence P[k+1];
  end;
A63: for n holds P[n] from NAT_1:sch 1(A10,A11);
  let s be State of SCMPDS;
  assume that
A64: GA c= s and
A65: IC s = inspos 5 and
A66: s.SBP >0 and
A67: s.GBP=0 and
A68: s.DataLoc(s.SBP,3) >= 0 and
A69: s.DataLoc(s.SBP,2) >= s.DataLoc(s.SBP,3);
  reconsider m=s.DataLoc(s.SBP,3) as Element of NAT by A68,INT_1:16;
  P[m] by A63;
  hence thesis by A64,A65,A66,A67,A68,A69;
end;

theorem Th17:
  for s being State of SCMPDS st GCD-Algorithm c= s
  & IC s = inspos 5 & s.SBP >0 & s.GBP=0 &
  s.DataLoc(s.SBP,3) >= 0 & s.DataLoc(s.SBP,2) >= 0 holds
  ex n st CurInstr Computation(s,n) = return SBP &
  s.SBP=Computation(s,n).SBP & Computation(s,n).DataLoc(s.SBP,2)
  =s.DataLoc(s.SBP,2) gcd s.DataLoc(s.SBP,3) &
  for j be Element of NAT st 1<j & j <= s.SBP+1 holds
  s.intpos j=Computation(s,n).intpos j
proof
  let s be State of SCMPDS;
  set GA=GCD-Algorithm, x=s.DataLoc(s.SBP,2), y=s.DataLoc(s.SBP,3), yy=y;
  assume that
A1: GA c= s and
A2: IC s = inspos 5 and
A3: s.SBP>0 and
A4: s.GBP=0 and
A5: y >= 0 and
A6: x >= 0;
  per cases;
  suppose x >= y;
    hence thesis by A1,A2,A3,A4,A5,Th16;
  end;
  suppose x < y;
    then
A7: y>0 by A6,XXREAL_0:2;
    reconsider y as Element of NAT by A5,INT_1:16;
    reconsider pn=s.SBP as Element of NAT by A3,INT_1:16;
A8: pn=s.SBP;
    then
A9: IC Computation(s,7) = inspos (5+7) by A1,A2,A4,A7,Lm4;
A10: Computation(s,8) = Exec(i12,Computation(s,7)) by A1,A2,A4,A7,A8,Lm4;
A11: Computation(s,7).SBP=pn+4 by A1,A2,A4,A7,Lm4;
A12: Computation(s,7).GBP=0 by A1,A2,A4,A7,A8,Lm4;
A13: Computation(s,7).intpos(pn+7) = x mod y by A1,A2,A4,A7,Lm4;
A14: Computation(s,7).intpos(pn+6) = y by A1,A2,A4,A7,Lm4;
A15: Computation(s,7).intpos(pn+4) = pn by A1,A2,A4,A7,Lm4;
A16: Computation(s,7).intpos(pn+5) = inspos 11 by A1,A2,A4,A7,Lm4;
    set s8=Computation(s,8);
A17: IC s8= ICplusConst(Computation(s,7),-7) by A10,SCMPDS_2:66
      .= inspos 5 by A9,Th6;
A18: GA c= s8 by A1,AMI_1:81;
A19: s8.SBP=pn+4 by A10,A11,SCMPDS_2:66;
A20: 4<=pn+4 by NAT_1:11;
    then
A21: s8.SBP > 0 by A19,XXREAL_0:2;
A22: s8.GBP=0 by A10,A12,SCMPDS_2:66;
    set x1=s8.DataLoc(s8.SBP,2), y1=s8.DataLoc(s8.SBP,3);
A23: x1=s8.intpos(pn+4+2) by A19,Th5
      .=y by A10,A14,SCMPDS_2:66;
A24: y1=s8.intpos(pn+4+3) by A19,Th5
      .=x mod y by A10,A13,SCMPDS_2:66;
    then y1<y by A7,NEWTON:79;
    then consider m such that
A25: CurInstr Computation(s8,m) = return SBP and
A26: s8.SBP=Computation(s8,m).SBP and
A27: Computation(s8,m).DataLoc(s8.SBP,2)= x1 gcd y1 and
A28: for j be Element of NAT st 1<j & j <= s8.SBP+1 holds s8.intpos j=
    Computation(s8,m).intpos j
    by A5,A17,A18,A21,A22,A23,A24,Th16,NEWTON:78;
    set s9=Computation(s,m+8);
A29: s8.SBP=s9.SBP by A26,AMI_1:51;
A30: Computation(s,m+(8+1))=Computation(s,m+8+1)
      .= Following s9 by AMI_1:14
      .= Exec(return SBP,s9) by A25,AMI_1:51;
A31: 1 < pn+4 by A20,XXREAL_0:2;
    pn+4 < s8.SBP+1 by A19,XREAL_1:31;
    then
A32: s8.intpos(pn+4)=Computation(s8,m).intpos (pn+4) by A28,A31
      .=s9.intpos(pn+4) by AMI_1:51;
    5<=pn+5 by NAT_1:11;
    then
A33: 1 <pn+5 by XXREAL_0:2;
A34: inspos 11=s8.intpos(pn+5) by A10,A16,SCMPDS_2:66
      .=Computation(s8,m).intpos (pn+5) by A19,A28,A33
      .=s9.intpos(pn+4+1) by AMI_1:51
      .=s9.DataLoc(s9.SBP,RetIC) by A19,A29,Th5,SCMPDS_1:def 23;
A35: IC Computation(s,m+9)= (abs(s9.DataLoc(s9.SBP,RetIC)))+2
    by A30,SCMPDS_2:70
      .= inspos (11+2) by A34,Th3;
    then
A36: CurInstr Computation(s,m+9) =s.inspos 13 by AMI_1:54
      .=i13 by A1,Lm1;
A37: Computation(s,m+(9+1))=Computation(s,m+9+1)
      .= Following Computation(s,m+9) by AMI_1:14
      .= Exec(i13,Computation(s,m+9)) by A36;
A38: Computation(s,m+9).SBP=s9.DataLoc(pn+4,RetSP) by A19,A29,A30,SCMPDS_2:70
      .=s9.intpos(pn+4+0) by Th5,SCMPDS_1:def 22
      .=pn by A10,A15,A32,SCMPDS_2:66;
A39: Computation(s,m+9).intpos(pn+6)=s9.intpos(pn+4+2) by A30,Lm3,
    SCMPDS_2:70
      .=s9.DataLoc(s8.SBP,2) by A19,Th5
      .=x1 gcd y1 by A27,AMI_1:51;
    IC Computation(s,m+10)= Next IC Computation(s,m+9) by A37,SCMPDS_2:59
      .= inspos (13+1) by A35;
    then
A40: CurInstr Computation(s,m+10)=s.inspos 14 by AMI_1:54
      .=i14 by A1,Lm1;
    hereby
      take n=m+10;
      thus CurInstr Computation(s,n) = return SBP by A40;
A41:  DataLoc(Computation(s,m+9).SBP,2)=intpos(pn+2) by A38,Th5;
      hence Computation(s,n).SBP=s.SBP by A37,A38,Lm3,SCMPDS_2:59;
      thus
      Computation(s,n).DataLoc(s.SBP,2)=Computation(s,m+9).DataLoc(pn,6)
      by A37,A38,SCMPDS_2:59
        .=yy gcd (x mod yy) by A23,A24,A39,Th5
        .=x gcd yy by A6,A7,NAT_D:30;
      hereby
        let j be Element of NAT;
        assume that
A42:    1<j and
A43:    j <= s.SBP+1;
        s.SBP <= s8.SBP by A19,NAT_1:11;
        then s.SBP +1 <= s8.SBP+1 by XREAL_1:8;
        then
A44:    j <= s8.SBP+1 by A43,XXREAL_0:2;
A45:    Computation(s,m+9).intpos j=s9.intpos j by A30,A42,AMI_3:52
        ,SCMPDS_2:70
          .=Computation(s8,m).intpos j by AMI_1:51
          .=s8.intpos j by A28,A42,A44;
A46:    pn+1<pn+2 by XREAL_1:8;
        Computation(s,7).intpos j = s.intpos j by A1,A2,A4,A7,A8,A42,A43
        ,Lm5;
        hence s.intpos j=s8.intpos j by A10,SCMPDS_2:66
          .=Computation(s,n).intpos j by A37,A41,A43,A45,A46,AMI_3:52
        ,SCMPDS_2:59;
      end;
    end;
  end;
end;

begin :: The Correctness of Recursive Euclide Algorithm

theorem
  for s being State of SCMPDS st Initialized GCD-Algorithm c= s
  for x, y being Integer st s.intpos 9 = x & s.intpos 10 = y
  & x >= 0 & y >= 0 holds (Result s).intpos 9 = x gcd y
proof
  let s be State of SCMPDS;
  set GA=GCD-Algorithm;
  assume
A1: Initialized GA c= s;
  let x, y be Integer;
  assume that
A2: s.intpos 9 = x and
A3: s.intpos 10 = y and
A4: x >= 0 and
A5: y >= 0;
  set s4=Computation(s,4);
A6: GA c= s by A1,SCMPDS_4:57;
A7: GA c= s4 by A1,AMI_1:81,SCMPDS_4:57;
A8: IC s4 = inspos 5 by A1,Th15;
A9: s4.GBP = 0 by A1,Th15;
A10: s4.SBP = 7 by A1,Th15;
A11: s4.intpos(7+RetIC) = inspos 2 by A1,Th15;
A12: s4.intpos 9 = s.intpos 9 by A1,Th15;
A13: s4.DataLoc(s4.SBP,3)=s4.intpos (7+3) by A10,Th5
    .=y by A1,A3,Th15;
A14: DataLoc(s4.SBP,2)=intpos(7+2) by A10,Th5;
  then
A15: s4.DataLoc(s4.SBP,2)=x by A1,A2,Th15;
  consider n such that
A16: CurInstr Computation(s4,n) = return SBP and
A17: s4.SBP=Computation(s4,n).SBP and
A18: Computation(s4,n).DataLoc(s4.SBP,2) =s4.DataLoc(s4.SBP,2) gcd s4.
  DataLoc(s4.SBP,3) and
A19: for j be Element of NAT st 1<j & j <= s4.SBP+1 holds s4.intpos j=
  Computation(s4,n).intpos j
  by A2,A4,A5,A7,A8,A9,A10,A12,A13,A14,Th17;
A20: DataLoc(Computation(s4,n).SBP,RetIC)=intpos(7+1)
  by A10,A17,Th5,SCMPDS_1:def 23;
A21: Computation(s4,n+1)= Following Computation(s4,n) by AMI_1:14
    .= Exec(i14,Computation(s4,n)) by A16;
  IC Computation(s,4+(n+1)) =Computation(s4,n+1).IC SCMPDS by AMI_1:51
    .= (abs(Computation(s4,n).DataLoc(Computation(s4,n).SBP,RetIC)))+2
  by A21,SCMPDS_2:70
    .= inspos (2+2) by A10,A11,A19,A20,Th3,SCMPDS_1:def 23;
  then s.IC Computation(s,4+(n+1)) =i04 by A6,Lm1;
  then Result s=Computation(s,4+(n+1)) by AMI_1:56
    .=Computation(s4,n+1) by AMI_1:51;
  hence thesis by A13,A14,A15,A18,A21,AMI_3:52,SCMPDS_2:70;
end;

::--------------------------

Lm6: GCD-Algorithm c= s1 & GCD-Algorithm c= s2 & IC s1 = inspos 5 &
n=s1.SBP & s1.GBP=0 & s1.DataLoc(s1.SBP,3) > 0 &
IC s2 = IC s1 & s2.SBP = s1.SBP & s2.GBP=0 &
s2.DataLoc(s1.SBP,2) = s1.DataLoc(s1.SBP,2) &
s2.DataLoc(s1.SBP,3) = s1.DataLoc(s1.SBP,3) implies
IC Computation(s1,7) = inspos (5+7) &
Computation(s1,8) = Exec(i12,Computation(s1,7)) &
Computation(s1,7).SBP=n+4 & Computation(s1,7).GBP=0 &
Computation(s1,7).intpos(n+7) = s1.intpos(n+2) mod s1.intpos(n+3) &
Computation(s1,7).intpos(n+6) = s1.intpos(n+3) &
IC Computation(s2,7) = inspos (5+7) &
Computation(s2,8) = Exec(i12,Computation(s2,7)) &
Computation(s2,7).SBP=n+4 & Computation(s2,7).GBP=0 &
Computation(s2,7).intpos(n+7) = s1.intpos(n+2) mod s1.intpos(n+3) &
Computation(s2,7).intpos(n+6) = s1.intpos(n+3) &
Computation(s1,7).intpos(n+4) = n &
Computation(s1,7).intpos(n+5) = inspos 11 &
Computation(s2,7).intpos(n+4) = n &
Computation(s2,7).intpos(n+5) = inspos 11
proof
  set GA=GCD-Algorithm;
  assume that
A1: GA c= s1 and
A2: GA c= s2;
  assume
A3: IC s1 = inspos 5;
  assume
A4: n=s1.SBP;
  assume
A5: s1.GBP=0;
  assume
A6: s1.DataLoc(s1.SBP,3) > 0;
  assume that
A7: IC s2 = IC s1 and
A8: s2.SBP = s1.SBP and
A9: s2.GBP=0;
  assume that
A10: s2.DataLoc(s1.SBP,2) = s1.DataLoc(s1.SBP,2) and
A11: s2.DataLoc(s1.SBP,3) = s1.DataLoc(s1.SBP,3);
A12: DataLoc(s1.SBP,2)=intpos(n+2) by A4,Th5;
A13: DataLoc(s1.SBP,3)=intpos(n+3) by A4,Th5;
  thus IC Computation(s1,7) = inspos (5+7) &
  Computation(s1,8) = Exec(i12,Computation(s1,7)) &
  Computation(s1,7).SBP=n+4 & Computation(s1,7).GBP=0 by A1,A3,A4,A5,A6,Lm4;
  thus Computation(s1,7).intpos(n+7)
  = s1.intpos(n+2) mod s1.intpos(n+3) by A1,A3,A4,A5,A6,A12,A13,Lm4;
  thus Computation(s1,7).intpos(n+6) =s1.intpos(n+3) by A1,A3,A4,A5,A6,A13
  ,Lm4;
  thus IC Computation(s2,7) = inspos (5+7) &
  Computation(s2,8) = Exec(i12,Computation(s2,7)) &
  Computation(s2,7).SBP=n+4 & Computation(s2,7).GBP=0 by A2,A3,A4,A6,A7,A8,A9
  ,A11,Lm4;
  thus Computation(s2,7).intpos(n+7)
  = s1.intpos(n+2) mod s1.intpos(n+3) by A2,A3,A4,A6,A7,A8,A9,A10,A11,A12,A13,
  Lm4;
  thus Computation(s2,7).intpos(n+6) =s1.intpos(n+3)
  by A2,A3,A4,A6,A7,A8,A9,A11,A13,Lm4;
  thus Computation(s1,7).intpos(n+4) = n &
  Computation(s1,7).intpos(n+5) = inspos 11
  by A1,A3,A4,A5,A6,Lm4;
  thus thesis
  by A2,A3,A4,A6,A7,A8,A9,A11,Lm4;
end;

Lm7: GCD-Algorithm c= s1 & GCD-Algorithm c= s2 & IC s1 = inspos 5 &
n=s1.SBP & s1.GBP=0 & s1.DataLoc(s1.SBP,3) > 0 &
IC s2 = IC s1 & s2.SBP = s1.SBP & s2.GBP=0 &
s2.DataLoc(s1.SBP,2) = s1.DataLoc(s1.SBP,2) &
s2.DataLoc(s1.SBP,3) = s1.DataLoc(s1.SBP,3) implies
for k be Element of NAT,a be Int_position st k <= 7 & s1.a=s2.a holds
IC Computation(s1,k) = IC Computation(s2,k) &
Computation(s1,k).a = Computation(s2,k).a
proof
  set GA=GCD-Algorithm;
  assume that
A1: GA c= s1 and
A2: GA c= s2;
  assume
A3: IC s1 = inspos 5;
  assume
A4: n=s1.SBP;
  assume
A5: s1.GBP=0;
  assume
A6: s1.DataLoc(s1.SBP,3) > 0;
  assume that
A7: IC s2 = IC s1 and
A8: s2.SBP = s1.SBP and
A9: s2.GBP=0;
  assume that
A10: s2.DataLoc(s1.SBP,2) = s1.DataLoc(s1.SBP,2) and
A11: s2.DataLoc(s1.SBP,3) = s1.DataLoc(s1.SBP,3);
A12: Computation(s1,1+0) = Following Computation(s1,0) by AMI_1:14
    .= Following s1 by AMI_1:13
    .= Exec(i05,s1) by A1,A3,Lm1;
A13: Computation(s2,1+0) = Following Computation(s2,0) by AMI_1:14
    .= Following s2 by AMI_1:13
    .= Exec(i05,s2) by A2,A3,A7,Lm1;
A14: IC Computation(s1,1)= Next IC s1 by A6,A12,SCMPDS_2:68
    .= inspos (5+1) by A3;
  then
A15: CurInstr Computation(s1,1) =s1.inspos 6 by AMI_1:54
    .=i06 by A1,Lm1;
A16: Computation(s1,1+1) = Following Computation(s1,1) by AMI_1:14
    .= Exec(i06,Computation(s1,1)) by A15;
A17: Computation(s1,1).SBP=n by A4,A12,SCMPDS_2:68;
A18: Computation(s1,1).GBP=0 by A5,A12,SCMPDS_2:68;
A19: IC Computation(s2,1)= Next IC s2 by A6,A8,A11,A13,SCMPDS_2:68
    .= inspos (5+1) by A3,A7;
  then
A20: CurInstr Computation(s2,1) =s2.inspos 6 by AMI_1:54
    .=i06 by A2,Lm1;
A21: Computation(s2,1+1) = Following Computation(s2,1) by AMI_1:14
    .= Exec(i06,Computation(s2,1)) by A20;
A22: IC Computation(s1,2)= Next IC Computation(s1,1) by A16,SCMPDS_2:59
    .= inspos (6+1) by A14;
  then
A23: CurInstr Computation(s1,2) =s1.inspos 7 by AMI_1:54
    .=i07 by A1,Lm1;
A24: Computation(s1,2+1) = Following Computation(s1,2) by AMI_1:14
    .= Exec(i07,Computation(s1,2)) by A23;
A25: DataLoc(Computation(s1,1).SBP,6)=intpos(n+6) by A17,Th5;
  then
A26: Computation(s1,2).SBP=n by A16,A17,Lm3,SCMPDS_2:59;
A27: Computation(s1,2).GBP=0 by A16,A18,A25,Lm2,SCMPDS_2:59;
A28: IC Computation(s2,2)= Next IC Computation(s2,1) by A21,SCMPDS_2:59
    .= inspos (6+1) by A19;
  then
A29: CurInstr Computation(s2,2) =s2.inspos 7 by AMI_1:54
    .=i07 by A2,Lm1;
A30: Computation(s2,2+1) = Following Computation(s2,2) by AMI_1:14
    .= Exec(i07,Computation(s2,2)) by A29;
A31: IC Computation(s1,3)= Next IC Computation(s1,2) by A24,SCMPDS_2:64
    .= inspos (7+1) by A22;
  then
A32: CurInstr Computation(s1,3) =s1.inspos 8 by AMI_1:54
    .=i08 by A1,Lm1;
A33: Computation(s1,3+1) = Following Computation(s1,3) by AMI_1:14
    .= Exec(i08,Computation(s1,3)) by A32;
A34: DataLoc(Computation(s1,2).SBP,2)=intpos(n+2) by A26,Th5;
  then
A35: SBP <> DataLoc(Computation(s1,2).SBP,2) by Lm3;
A36: DataLoc(Computation(s1,2).SBP,3)=intpos(n+3) by A26,Th5;
  then SBP <> DataLoc(Computation(s1,2).SBP,3) by Lm3;
  then
A37: Computation(s1,3).SBP=n by A24,A26,A35,SCMPDS_2:64;
A38: GBP <> DataLoc(Computation(s1,2).SBP,2) by A34,Lm2;
  GBP <> DataLoc(Computation(s1,2).SBP,3) by A36,Lm2;
  then
A39: Computation(s1,3).GBP=0 by A24,A27,A38,SCMPDS_2:64;
A40: IC Computation(s2,3)= Next IC Computation(s2,2) by A30,SCMPDS_2:64
    .= inspos (7+1) by A28;
  then
A41: CurInstr Computation(s2,3) =s2.inspos 8 by AMI_1:54
    .=i08 by A2,Lm1;
A42: Computation(s2,3+1) = Following Computation(s2,3) by AMI_1:14
    .= Exec(i08,Computation(s2,3)) by A41;
A43: IC Computation(s1,4)= Next IC Computation(s1,3) by A33,SCMPDS_2:59
    .= inspos (8+1) by A31;
  then
A44: CurInstr Computation(s1,4) =s1.inspos 9 by AMI_1:54
    .=i09 by A1,Lm1;
A45: Computation(s1,4+1) = Following Computation(s1,4) by AMI_1:14
    .= Exec(i09,Computation(s1,4)) by A44;
A46: DataLoc(Computation(s1,3).SBP,7)=intpos(n+7) by A37,Th5;
  then
A47: Computation(s1,4).SBP=n by A33,A37,Lm3,SCMPDS_2:59;
A48: Computation(s1,4).GBP=0 by A33,A39,A46,Lm2,SCMPDS_2:59;
A49: IC Computation(s2,4)= Next IC Computation(s2,3) by A42,SCMPDS_2:59
    .= inspos (8+1) by A40;
  then
A50: CurInstr Computation(s2,4) =s2.inspos 9 by AMI_1:54
    .=i09 by A2,Lm1;
A51: Computation(s2,4+1) = Following Computation(s2,4) by AMI_1:14
    .= Exec(i09,Computation(s2,4)) by A50;
A52: IC Computation(s1,5)= Next IC Computation(s1,4) by A45,SCMPDS_2:59
    .= inspos (9+1) by A43;
  then
A53: CurInstr Computation(s1,5) =s1.inspos 10 by AMI_1:54
    .=i10 by A1,Lm1;
A54: Computation(s1,5+1) = Following Computation(s1,5) by AMI_1:14
    .= Exec(i10,Computation(s1,5)) by A53;
  DataLoc(Computation(s1,4).SBP,4+RetSP)=intpos(n+(4+0))
  by A47,Th5,SCMPDS_1:def 22;
  then
A55: Computation(s1,5).GBP=0 by A45,A48,Lm2,SCMPDS_2:59;
A56: IC Computation(s2,5)= Next IC Computation(s2,4) by A51,SCMPDS_2:59
    .= inspos (9+1) by A49;
  then
A57: CurInstr Computation(s2,5) =s2.inspos 10 by AMI_1:54
    .=i10 by A2,Lm1;
A58: Computation(s2,5+1) = Following Computation(s2,5) by AMI_1:14
    .= Exec(i10,Computation(s2,5)) by A57;
A59: IC Computation(s1,6)= Next IC Computation(s1,5) by A54,SCMPDS_2:60
    .= inspos (10+1) by A52;
  then
A60: CurInstr Computation(s1,6) =s1.inspos 11 by AMI_1:54
    .=i11 by A1,Lm1;
A61: Computation(s1,6+1) = Following Computation(s1,6) by AMI_1:14
    .= Exec(i11,Computation(s1,6)) by A60;
A62: IC Computation(s2,6)= Next IC Computation(s2,5) by A58,SCMPDS_2:60
    .= inspos (10+1) by A56;
  then
A63: CurInstr Computation(s2,6) =s2.inspos 11 by AMI_1:54
    .=i11 by A2,Lm1;
A64: Computation(s2,6+1) = Following Computation(s2,6) by AMI_1:14
    .= Exec(i11,Computation(s2,6)) by A63;
A65: now
    let b;
    assume s1.b=s2.b;
    hence Computation(s1,1).b=s2.b by A12,SCMPDS_2:68
      .=Computation(s2,1).b by A13,SCMPDS_2:68;
  end;
A66: s1.b=s2.b implies Computation(s1,2).b=Computation(s2,2).b
  proof
    assume
A67: s1.b=s2.b;
    per cases;
    suppose
A68:  b=DataLoc(Computation(s1,1).SBP,6);
      then
A69:  b=DataLoc(Computation(s2,1).SBP,6) by A8,A65;
      thus Computation(s1,2).b=Computation(s1,1).DataLoc(s1.SBP,3)
      by A4,A16,A17,A68,SCMPDS_2:59
        .=Computation(s2,1).DataLoc(Computation(s1,1).SBP,3) by A4,A11,A17,A65
        .=Computation(s2,1).DataLoc(Computation(s2,1).SBP,3) by A8,A65
        .=Computation(s2,2).b by A21,A69,SCMPDS_2:59;
    end;
    suppose
A70:  b<>DataLoc(Computation(s1,1).SBP,6);
      then
A71:  b<>DataLoc(Computation(s2,1).SBP,6) by A8,A65;
      thus Computation(s1,2).b=Computation(s1,1).b by A16,A70,SCMPDS_2:59
        .=Computation(s2,1).b by A65,A67
        .=Computation(s2,2).b by A21,A71,SCMPDS_2:59;
    end;
  end;
A72: now
    let b;
    assume
A73: s1.b=s2.b;
    set x1=DataLoc(Computation(s1,2).SBP,2),
    x2=DataLoc(Computation(s1,2).SBP,3),
    y1=DataLoc(Computation(s2,2).SBP,2), y2=DataLoc(Computation(s2,2).SBP,3);
A74: x1=y1 by A8,A66;
A75: x2=y2 by A8,A66;
    per cases;
    suppose
A76:  b<>x1 & b<>x2;
      hence Computation(s1,3).b=Computation(s1,2).b by A24,SCMPDS_2:64
        .=Computation(s2,2).b by A66,A73
        .=Computation(s2,3).b by A30,A74,A75,A76,SCMPDS_2:64;
    end;
    suppose
A77:  b=x1;
A78:  n+2<>n+3;
      then
A79:  x1<>x2 by A34,A36,AMI_3:52;
A80:  y1<>y2 by A34,A36,A74,A75,A78,AMI_3:52;
      thus
      Computation(s1,3).b=Computation(s1,2).x1 div Computation(s1,2).x2
      by A24,A77,A79,SCMPDS_2:64
        .=Computation(s2,2).x1 div Computation(s1,2).x2 by A4,A10,A26,A66
        .=Computation(s2,2).x1 div Computation(s2,2).x2 by A4,A11,A26,A66
        .=Computation(s2,3).b by A30,A74,A75,A77,A80,SCMPDS_2:64;
    end;
    suppose
A81:  b=x2;
      hence
      Computation(s1,3).b=Computation(s1,2).x1 mod Computation(s1,2).x2
      by A24,SCMPDS_2:64
        .=Computation(s2,2).x1 mod Computation(s1,2).x2 by A4,A10,A26,A66
        .=Computation(s2,2).x1 mod Computation(s2,2).x2 by A4,A11,A26,A66
        .=Computation(s2,3).b by A30,A74,A75,A81,SCMPDS_2:64;
    end;
  end;
A82: now
    let b;
    assume
A83: s1.b=s2.b;
    per cases;
    suppose
A84:  b=DataLoc(Computation(s1,3).SBP,7);
      then
A85:  b=DataLoc(Computation(s2,3).SBP,7) by A8,A72;
      thus Computation(s1,4).b=Computation(s1,3).
      DataLoc(Computation(s1,3).SBP,3) by A33,A84,SCMPDS_2:59
        .=Computation(s2,3).DataLoc(Computation(s1,3).SBP,3) by A4,A11,A37,A72
        .=Computation(s2,3).DataLoc(Computation(s2,3).SBP,3) by A8,A72
        .=Computation(s2,4).b by A42,A85,SCMPDS_2:59;
    end;
    suppose
A86:  b<>DataLoc(Computation(s1,3).SBP,7);
      then
A87:  b<>DataLoc(Computation(s2,3).SBP,7) by A8,A72;
      thus Computation(s1,4).b=Computation(s1,3).b by A33,A86,
      SCMPDS_2:59
        .=Computation(s2,3).b by A72,A83
        .=Computation(s2,4).b by A42,A87,SCMPDS_2:59;
    end;
  end;
A88: now
    let b;
    assume
A89: s1.b=s2.b;
A90: s1.DataLoc(Computation(s1,4).GBP,1)=s2.intpos(0+1) by A8,A48,Th5
      .=s2.DataLoc(Computation(s1,4).GBP,1) by A48,Th5;
    per cases;
    suppose
A91:  b=DataLoc(Computation(s1,4).SBP,4+RetSP);
      then
A92:  b=DataLoc(Computation(s2,4).SBP,4+RetSP) by A8,A82;
      thus Computation(s1,5).b=Computation(s1,4).
      DataLoc(Computation(s1,4).GBP,1) by A45,A91,SCMPDS_2:59
        .=Computation(s2,4).DataLoc(Computation(s1,4).GBP,1) by A82,A90
        .=Computation(s2,4).DataLoc(Computation(s2,4).GBP,1) by A5,A9,A82
        .=Computation(s2,5).b by A51,A92,SCMPDS_2:59;
    end;
    suppose
A93:  b<>DataLoc(Computation(s1,4).SBP,4+RetSP);
      then
A94:  b<>DataLoc(Computation(s2,4).SBP,4+RetSP) by A8,A82;
      thus Computation(s1,5).b=Computation(s1,4).b by A45,A93,
      SCMPDS_2:59
        .=Computation(s2,4).b by A82,A89
        .=Computation(s2,5).b by A51,A94,SCMPDS_2:59;
    end;
  end;
A95: now
    let b;
    assume
A96: s1.b=s2.b;
A97: s1.DataLoc(Computation(s1,5).GBP,1)=s2.intpos(0+1) by A8,A55,Th5
      .=s2.DataLoc(Computation(s1,5).GBP,1) by A55,Th5;
    per cases;
    suppose
A98:  b=DataLoc(Computation(s1,5).GBP,1);
      then
A99:  b=DataLoc(Computation(s2,5).GBP,1) by A5,A9,A88;
      thus Computation(s1,6).b=Computation(s1,5).
      DataLoc(Computation(s1,5).GBP,1)+4 by A54,A98,SCMPDS_2:60
        .=Computation(s2,5).DataLoc(Computation(s1,5).GBP,1)+4 by A88,A97
        .=Computation(s2,5).DataLoc(Computation(s2,5).GBP,1)+4 by A5,A9,A88
        .=Computation(s2,6).b by A58,A99,SCMPDS_2:60;
    end;
    suppose
A100: b<>DataLoc(Computation(s1,5).GBP,1);
      then
A101: b<>DataLoc(Computation(s2,5).GBP,1) by A5,A9,A88;
      thus Computation(s1,6).b=Computation(s1,5).b by A54,A100,
      SCMPDS_2:60
        .=Computation(s2,5).b by A88,A96
        .=Computation(s2,6).b by A58,A101,SCMPDS_2:60;
    end;
  end;
A102: now
    let b;
    assume
A103: s1.b=s2.b;
    per cases;
    suppose
A104: b=DataLoc(Computation(s1,6).SBP,RetIC);
      then
A105: b=DataLoc(Computation(s2,6).SBP,RetIC) by A8,A95;
      thus Computation(s1,7).b=IC Computation(s1,6) by A61,A104,
      SCMPDS_2:71
        .=Computation(s2,7).b by A59,A62,A64,A105,SCMPDS_2:71;
    end;
    suppose
A106: b<>DataLoc(Computation(s1,6).SBP,RetIC);
      then
A107: b<>DataLoc(Computation(s2,6).SBP,RetIC) by A8,A95;
      thus Computation(s1,7).b=Computation(s1,6).b by A61,A106,
      SCMPDS_2:71
        .=Computation(s2,6).b by A95,A103
        .=Computation(s2,7).b by A64,A107,SCMPDS_2:71;
    end;
  end;
  hereby
    let k be Element of NAT,a be Int_position;
    assume that
A108: k <= 7 and
A109: s1.a=s2.a;
    per cases by A108,NAT_1:32;
    suppose
A110: k=0;
      hence IC Computation(s1,k) = IC s1 by AMI_1:13
        .=IC Computation(s2,k) by A7,A110,AMI_1:13;
      thus Computation(s1,k).a = s1.a by A110,AMI_1:13
        .=Computation(s2,k).a by A109,A110,AMI_1:13;
    end;
    suppose
A111: k=1;
      hence IC Computation(s1,k)=IC Computation(s2,k) by A14,A19;
      thus Computation(s1,k).a = Computation(s2,k).a by A65,A109,A111;
    end;
    suppose
A112: k=2;
      hence IC Computation(s1,k)=IC Computation(s2,k) by A22,A28;
      thus Computation(s1,k).a = Computation(s2,k).a by A66,A109,A112;
    end;
    suppose
A113: k=3;
      hence IC Computation(s1,k)=IC Computation(s2,k) by A31,A40;
      thus Computation(s1,k).a = Computation(s2,k).a by A72,A109,A113;
    end;
    suppose
A114: k=4;
      hence IC Computation(s1,k)=IC Computation(s2,k) by A43,A49;
      thus Computation(s1,k).a = Computation(s2,k).a by A82,A109,A114;
    end;
    suppose
A115: k=5;
      hence IC Computation(s1,k)=IC Computation(s2,k) by A52,A56;
      thus Computation(s1,k).a = Computation(s2,k).a by A88,A109,A115;
    end;
    suppose
A116: k=6;
      hence IC Computation(s1,k)=IC Computation(s2,k) by A59,A62;
      thus Computation(s1,k).a = Computation(s2,k).a by A95,A109,A116;
    end;
    suppose
A117: k=7;
      hence IC Computation(s1,k)= Next IC Computation(s2,6)
      by A59,A61,A62,SCMPDS_2:71
        .= IC Computation(s2,k) by A64,A117,SCMPDS_2:71;
      thus Computation(s1,k).a = Computation(s2,k).a by A102,A109,A117;
    end;
  end;
end;

Lm8: for s1,s2 being State of SCMPDS st
GCD-Algorithm c= s1 & GCD-Algorithm c= s2 & IC s1 = inspos 5 &
s1.SBP >0 & s1.GBP=0 & s1.DataLoc(s1.SBP,3) >= 0 &
s1.DataLoc(s1.SBP,2) >= s1.DataLoc(s1.SBP,3) &
IC s2 = IC s1 & s2.SBP = s1.SBP & s2.GBP=0 &
s2.DataLoc(s1.SBP,2) = s1.DataLoc(s1.SBP,2) &
s2.DataLoc(s1.SBP,3) = s1.DataLoc(s1.SBP,3) holds
ex n st CurInstr Computation(s1,n) = return SBP &
s1.SBP=Computation(s1,n).SBP & CurInstr Computation(s2,n) = return SBP &
s2.SBP=Computation(s2,n).SBP &
(for j be Element of NAT st 1<j & j <= s1.SBP+1 holds
s1.intpos j=Computation(s1,n).intpos j &
s2.intpos j=Computation(s2,n).intpos j ) &
for k be Element of NAT,a be Int_position st k <= n & s1.a=s2.a holds
IC Computation(s1,k) = IC Computation(s2,k) &
Computation(s1,k).a =Computation(s2,k).a
proof
  set GA=GCD-Algorithm;
  defpred P[Element of NAT] means for s1,s2 being State of SCMPDS st
  GA c= s1 & GA c= s2 & IC s1 = inspos 5 &
  s1.SBP >0 & s1.GBP=0 & s1.DataLoc(s1.SBP,3) <= $1 &
  s1.DataLoc(s1.SBP,3) >= 0 & s1.DataLoc(s1.SBP,2) >= s1.DataLoc(s1.SBP,3) &
  IC s2 = IC s1 & s2.SBP = s1.SBP & s2.GBP=0 &
  s2.DataLoc(s1.SBP,2) = s1.DataLoc(s1.SBP,2) &
  s2.DataLoc(s1.SBP,3) = s1.DataLoc(s1.SBP,3) holds
  ex n st CurInstr Computation(s1,n) = return SBP &
  s1.SBP=Computation(s1,n).SBP & CurInstr Computation(s2,n) = return SBP &
  s2.SBP=Computation(s2,n).SBP &
  (for j be Element of NAT st 1<j & j <= s1.SBP+1 holds
  s1.intpos j=Computation(s1,n).intpos j &
  s2.intpos j=Computation(s2,n).intpos j) &
  (for k be Element of NAT,a be Int_position st k <= n & s1.a=s2.a holds
  IC Computation(s1,k) = IC Computation(s2,k) &
  Computation(s1,k).a =Computation(s2,k).a);
A1: P[0]
  proof
    let s1,s2 be State of SCMPDS;
    set x =s1.DataLoc(s1.SBP,2), y =s1.DataLoc(s1.SBP,3),
    y2=s2.DataLoc(s1.SBP,3);
    assume that
A2: GA c= s1 and
A3: GA c= s2;
    assume
A4: IC s1 = inspos 5;
    assume that s1.SBP >0
    and s1.GBP=0;
    assume
A5: y <= 0;
    assume y >= 0;
    assume x >= y;
    assume that
A6: IC s2 = IC s1 and
A7: s2.SBP = s1.SBP
    and s2.GBP=0;
    assume that
    s2.DataLoc(s1.SBP,2) = x and
A8: y2 = y;
A9: Computation(s1,1+0) = Following Computation(s1,0) by AMI_1:14
      .= Following s1 by AMI_1:13
      .= Exec(i05,s1) by A2,A4,Lm1;
A10: Computation(s2,1+0) = Following Computation(s2,0) by AMI_1:14
      .= Following s2 by AMI_1:13
      .= Exec(i05,s2) by A3,A4,A6,Lm1;
A11: IC Computation(s1,1)= ICplusConst(s1,9) by A5,A9,SCMPDS_2:68
      .= inspos (5+9) by A4,SCMPDS_6:23;
A12: IC Computation(s2,1)= ICplusConst(s2,9) by A5,A7,A8,A10,SCMPDS_2:68
      .= inspos (5+9) by A4,A6,SCMPDS_6:23;
    take n=1;
    thus CurInstr Computation(s1,n)=s1.inspos 14 by A11,AMI_1:54
      .=i14 by A2,Lm1;
    thus Computation(s1,n).SBP=s1.SBP by A9,SCMPDS_2:68;
    thus CurInstr Computation(s2,n)=s2.inspos 14 by A12,AMI_1:54
      .=i14 by A3,Lm1;
    thus Computation(s2,n).SBP=s2.SBP by A10,SCMPDS_2:68;
    thus for j be Element of NAT st 1<j & j <= s1.SBP+1 holds
    s1.intpos j=Computation(s1,n).intpos j &
    s2.intpos j=Computation(s2,n).intpos j by A9,A10,SCMPDS_2:68;
    hereby
      let k be Element of NAT,a;
      assume that
A13:  k <= n and
A14:  s1.a=s2.a;
      per cases by A13,NAT_1:26;
      suppose
A15:    k=0;
        hence IC Computation(s1,k) = IC s2 by A6,AMI_1:13
          .=IC Computation(s2,k) by A15,AMI_1:13;
        thus Computation(s1,k).a =s1.a by A15,AMI_1:13
          .=Computation(s2,k).a by A14,A15,AMI_1:13;
      end;
      suppose
A16:    k=1;
        hence IC Computation(s1,k) =IC Computation(s2,k) by A11,A12;
        thus Computation(s1,k).a=s1.a by A9,A16,SCMPDS_2:68
          .=Computation(s2,k).a by A10,A14,A16,SCMPDS_2:68;
      end;
    end;
  end;
A17: now
    let k be Element of NAT;
    assume
A18: P[k];
    now
      let s1,s2 be State of SCMPDS;
      set x =s1.DataLoc(s1.SBP,2), y =s1.DataLoc(s1.SBP,3);
      assume that
A19:  GA c= s1 and
A20:  GA c= s2;
      assume
A21:  IC s1 = inspos 5;
      assume that
A22:  s1.SBP >0 and
A23:  s1.GBP=0;
      assume
A24:  y <= k+1;
      assume
A25:  y >= 0;
      assume
A26:  x >= y;
      assume that
A27:  IC s2 = IC s1 and
A28:  s2.SBP = s1.SBP and
A29:  s2.GBP=0;
      assume that
A30:  s2.DataLoc(s1.SBP,2) = x and
A31:  s2.DataLoc(s1.SBP,3) = y;
      reconsider y as Element of NAT by A25,INT_1:16;
      per cases by A24,NAT_1:8;
      suppose y <= k;
        hence ex n st CurInstr Computation(s1,n) = return SBP &
        s1.SBP=Computation(s1,n).SBP &
        CurInstr Computation(s2,n) = return SBP &
        s2.SBP=Computation(s2,n).SBP &
        (for j be Element of NAT st 1<j & j <= s1.SBP+1 holds
        s1.intpos j=Computation(s1,n).intpos j &
        s2.intpos j=Computation(s2,n).intpos j) &
        for k be Element of NAT,a st k <= n & s1.a=s2.a holds
        IC Computation(s1,k) = IC Computation(s2,k) &
        Computation(s1,k).a = Computation(s2,k).a
        by A18,A19,A20,A21,A22,A23,A25,A26,A27,A28,A29,A30,A31;
      end;
      suppose
A32:    y = k+1;
        then
A33:    y>0 by NAT_1:5;
        reconsider n=s1.SBP as Element of NAT by A22,INT_1:16;
A34:    n=s1.SBP;
        set s8=Computation(s1,8), t8=Computation(s2,8);

A35:    IC Computation(s1,7) = inspos (5+7) by A19,A21,A23,A30,A33,A34,Lm6;

A36:    s8 = Exec(i12,Computation(s1,7)) by A19,A21,A23,A30,A33,A34,Lm6;

A37:    Computation(s1,7).SBP=n+4 by A19,A21,A23,A30,A33,Lm6;

A38:    Computation(s1,7).GBP=0 by A19,A21,A23,A30,A33,A34,Lm6;

A39:    Computation
(s1,7).intpos(n+7) = s1.intpos(n+2) mod s1.intpos(n+3) by A19
        ,A21,A23,A30,A33,Lm6;

A40:    Computation(s1,7).intpos(n+6) = s1.intpos(n+3) by A19,A21,A23,A30,A33,
        Lm6;

A41:    IC Computation(s2,7) = inspos (5+7) by A20,A21,A27,A28,A29,A30,A31,A33
        ,A34,Lm6;

A42:    t8
 = Exec(i12,Computation(s2,7)) by A20,A21,A27,A28,A29,A30,A31,A33,A34,
        Lm6;

A43:    Computation(s2,7).SBP=n+4 by A20,A21,A27,A28,A29,A30,A31,A33,Lm6;

A44:    Computation(s2,7).GBP=0 by A20,A21,A27,A28,A29,A30,A31,A33,A34,Lm6;

A45:    Computation
(s2,7).intpos(n+7) = s1.intpos(n+2) mod s1.intpos(n+3) by A19
        ,A20,A21,A23,A27,A28,A29,A30,A31,A33,Lm6;

A46:    Computation(s2,7).intpos(n+6) = s1.intpos(n+3) by A19,A20,A21,A23,A27
        ,A28,A29,A30,A31,A33,Lm6;

A47:    Computation(s1,7).intpos(n+4) = n by A19,A21,A23,A30,A33,Lm6;

A48:    Computation(s1,7).intpos(n+5) = inspos 11 by A19,A21,A23,A30,A33,Lm6;

A49:    Computation
(s2,7).intpos(n+4) = n by A20,A21,A27,A28,A29,A30,A31,A33,Lm6;

A50:    Computation
(s2,7).intpos(n+5) = inspos 11 by A20,A21,A27,A28,A29,A30,A31
        ,A33,Lm6;
A51:    DataLoc(n+4,2)=intpos(n+4+2) by Th5
          .=intpos(n+(4+2));
A52:    DataLoc(n+4,3)=intpos(n+4+3) by Th5
          .=intpos(n+(4+3));
A53:    GA c= s8 by A19,AMI_1:81;
A54:    GA c= t8 by A20,AMI_1:81;
A55:    IC s8= ICplusConst(Computation(s1,7),-7) by A36,SCMPDS_2:66
          .= inspos 5 by A35,Th6;
A56:    s8.SBP=n+4 by A36,A37,SCMPDS_2:66;
A57:    4<=n+4 by NAT_1:11;
        then
A58:    s8.SBP > 0 by A56,XXREAL_0:2;
A59:    s8.GBP=0 by A36,A38,SCMPDS_2:66;
        set x1=s8.DataLoc(s8.SBP,2), y1=s8.DataLoc(s8.SBP,3);
A60:    x1=s1.intpos(n+3) by A36,A40,A51,A56,SCMPDS_2:66
          .=y by Th5;
A61:    y1= s1.intpos(n+2) mod s1.intpos(n+3) by A36,A39,A52,A56,SCMPDS_2:66
          .= s1.intpos(n+2) mod y by Th5;
        then
A62:    y1<y by A32,NAT_1:5,NEWTON:79;
        then
A63:    y1 <= k by A32,INT_1:20;
A64:    IC t8= ICplusConst(Computation(s2,7),-7) by A42,SCMPDS_2:66
          .= IC s8 by A41,A55,Th6;
A65:    t8.SBP=s8.SBP by A42,A43,A56,SCMPDS_2:66;
A66:    t8.GBP=0 by A42,A44,SCMPDS_2:66;
        set x3=t8.DataLoc(s8.SBP,2);
A67:    x3=s1.intpos(n+3) by A42,A46,A51,A56,SCMPDS_2:66
          .=x1 by A60,Th5;
        t8.DataLoc(s8.SBP,3)=s1.intpos(n+2) mod s1.intpos(n+3) by A42,A45
        ,A52,A56,SCMPDS_2:66
          .=y1 by A61,Th5;
        then consider m such that
A68:    CurInstr Computation(s8,m) = return SBP and
A69:    s8.SBP=Computation(s8,m).SBP and
A70:    CurInstr Computation(t8,m) = return SBP and
A71:    t8.SBP=Computation(t8,m).SBP and
A72:    for j be Element of NAT st 1<j & j <= s8.SBP+1 holds s8.intpos j=
        Computation(s8,m).intpos j & t8.intpos j=Computation(t8,m).intpos j and
A73:    for k be Element of NAT,a be Int_position st k <= m & s8.a=t8.a

holds IC Computation(s8,k) = IC Computation(t8,k) & Computation(s8,k).a =
        Computation(t8,k).a
        by A18,A33,A53,A54,A55,A58,A59,A60,A61,A62,A63,A64,A65,A66,A67,
        NEWTON:78;
        set s9=Computation(s1,m+8), t9=Computation(s2,m+8);
A74:    s8.SBP=s9.SBP by A69,AMI_1:51;
A75:    Computation(s1,m+(8+1))=Computation(s1,m+8+1)
          .= Following s9 by AMI_1:14
          .= Exec(return SBP,s9) by A68,AMI_1:51;
A76:    1 < n+4 by A57,XXREAL_0:2;
A77:    n+4 < s8.SBP+1 by A56,XREAL_1:31;
        then
A78:    s8.intpos(n+4)=Computation(s8,m).intpos (n+4) by A72,A76
          .=s9.intpos(n+4) by AMI_1:51;
        5<=n+5 by NAT_1:11;
        then
A79:    1 <n+5 by XXREAL_0:2;
A80:    intpos(n+(4+1))=intpos(n+4+1)
          .=DataLoc(n+4,1) by Th5;
A81:    inspos 11=s8.intpos(n+5) by A36,A48,SCMPDS_2:66
          .=Computation(s8,m).intpos (n+5) by A56,A72,A79
          .=s9.DataLoc(s9.SBP,RetIC) by A56,A74,A80,AMI_1:51,SCMPDS_1:def 23;
A82:    t9.SBP=n+4 by A56,A65,A71,AMI_1:51;
A83:    Computation(s2,m+(8+1))=Computation(s2,m+8+1)
          .= Following t9 by AMI_1:14
          .= Exec(return SBP,t9) by A70,AMI_1:51;
A84:    t8.intpos(n+4)=Computation(t8,m).intpos (n+4) by A72,A76,A77
          .=t9.intpos(n+4) by AMI_1:51;
A85:    inspos 11=t8.intpos(n+5) by A42,A50,SCMPDS_2:66
          .=Computation(t8,m).intpos (n+5) by A56,A72,A79
          .=t9.DataLoc(t9.SBP,RetIC) by A80,A82,AMI_1:51,SCMPDS_1:def 23;
A86:    IC Computation(s1,m+9)= (abs(s9.DataLoc(s9.SBP,RetIC)))+2
        by A75,SCMPDS_2:70
          .= inspos (11+2) by A81,Th3;
        then
A87:    CurInstr Computation(s1,m+9) =s1.inspos 13 by AMI_1:54
          .=i13 by A19,Lm1;
A88:    Computation(s1,m+(9+1))=Computation(s1,m+9+1)
          .= Following Computation(s1,m+9) by AMI_1:14
          .= Exec(i13,Computation(s1,m+9)) by A87;
A89:    Computation(s1,m+9).SBP=s9.DataLoc(n+4,RetSP)
        by A56,A74,A75,SCMPDS_2:70
          .=s9.intpos(n+4+0) by Th5,SCMPDS_1:def 22
          .=n by A36,A47,A78,SCMPDS_2:66;
A90:    IC Computation(s2,m+9)= (abs(t9.DataLoc(t9.SBP,RetIC)))+2
        by A83,SCMPDS_2:70
          .= inspos (11+2) by A85,Th3;
        then
A91:    CurInstr Computation(s2,m+9) =s2.inspos 13 by AMI_1:54
          .=i13 by A20,Lm1;
A92:    Computation(s2,m+(9+1))=Computation(s2,m+9+1)
          .= Following Computation(s2,m+9) by AMI_1:14
          .= Exec(i13,Computation(s2,m+9)) by A91;
A93:    Computation(s2,m+9).SBP=t9.DataLoc(n+4,RetSP) by A82,A83,SCMPDS_2:70
          .=t9.intpos(n+4+0) by Th5,SCMPDS_1:def 22
          .=n by A42,A49,A84,SCMPDS_2:66;
A94:    IC Computation(s1,m+10)= Next IC Computation(s1,m+9) by A88,
        SCMPDS_2:59
          .= inspos (13+1) by A86;
A95:    IC Computation(s2,m+10)= Next IC Computation(s2,m+9) by A92,
        SCMPDS_2:59
          .= inspos (13+1) by A90;
        hereby
          take nn=m+10;
          thus CurInstr Computation(s1,nn) =s1.inspos 14 by A94,AMI_1:54
            .=return SBP by A19,Lm1;
A96:      DataLoc(Computation(s1,m+9).SBP,2)=intpos(n+2) by A89,Th5;
          hence Computation(s1,nn).SBP=s1.SBP by A88,A89,Lm3,
          SCMPDS_2:59;
          thus CurInstr Computation(s2,nn) =s2.inspos 14 by A95,AMI_1:54
            .=return SBP by A20,Lm1;
A97:      DataLoc(Computation(s2,m+9).SBP,2)=intpos(n+2) by A93,Th5;
          hence Computation(s2,nn).SBP=s2.SBP by A28,A92,A93,Lm3,
          SCMPDS_2:59;
          hereby
            let j be Element of NAT;
            assume that
A98:        1<j and
A99:        j <= s1.SBP+1;
            s1.SBP <= s8.SBP by A56,NAT_1:11;
            then s1.SBP +1 <= s8.SBP+1 by XREAL_1:8;
            then
A100:       j <= s8.SBP+1 by A99,XXREAL_0:2;
A101:       Computation(s1,m+9).intpos j=s9.intpos j by A75,A98,
            AMI_3:52,SCMPDS_2:70
              .=Computation(s8,m).intpos j by AMI_1:51
              .=s8.intpos j by A72,A98,A100;
A102:       n+1<n+2 by XREAL_1:8;
            Computation(s1,7).intpos j = s1.intpos j
            by A19,A21,A23,A32,A34,A98,A99,Lm5,NAT_1:5;
            hence s1.intpos j=s8.intpos j by A36,SCMPDS_2:66
              .=Computation(s1,nn).intpos j by A88,A96,A99,A101,A102,
            AMI_3:52,SCMPDS_2:59;
A103:       Computation(s2,m+9).intpos j=t9.intpos j by A83,A98,AMI_3:52
            ,SCMPDS_2:70
              .=Computation(t8,m).intpos j by AMI_1:51
              .=t8.intpos j by A72,A98,A100;
            j <= n+1 by A99;
            then Computation(s2,7).intpos j = s2.intpos j
            by A20,A21,A27,A28,A29,A31,A32,A98,Lm5,NAT_1:5;
            hence s2.intpos j=t8.intpos j by A42,SCMPDS_2:66
              .=Computation(s2,nn).intpos j by A92,A97,A99,A102,A103,
            AMI_3:52,SCMPDS_2:59;
          end;
          hereby
            let j be Element of NAT,a;
            assume that
A104:       j <= nn and
A105:       s1.a=s2.a;
            nn=m+9+1;
            then
A106:       j <= m+9 or j=nn by A104,NAT_1:8;
A107:       m+(8+1)=m+8+1;
A108:       now
              assume
A109:         j <= m+8;
              per cases;
              suppose j<7+1;
                hence j <=7 or j>=8 & j <= m+8 by NAT_1:13;
              end;
              suppose j>=8;
                hence j <=7 or j>=8 & j <= m+8 by A109;
              end;
            end;
A110:       s8.a=Computation(s1,7).a by A36,SCMPDS_2:66
              .=Computation(s2,7).a by A19,A20,A21,A23,A27,A28,A29,A30,A31,A33
            ,A34,A105,Lm7
              .=t8.a by A42,SCMPDS_2:66;
A111:       now
              let b;
              assume
A112:         s8.b=t8.b;
              per cases;
              suppose b=SBP;
                hence Computation(s1,m+9).b=Computation(s2,m+9).b by A89
                ,A93;
              end;
              suppose
A113:           b<>SBP;
                hence Computation(s1,m+9).b=s9.b by A75,SCMPDS_2:70
                  .=Computation(s8,m).b by AMI_1:51
                  .=Computation(t8,m).b by A73,A112
                  .=t9.b by AMI_1:51
                  .=Computation(s2,m+9).b by A83,A113,SCMPDS_2:70;
              end;
            end;
A114:       s8.DataLoc(Computation(s1,m+9).SBP,6)=x1 by A51,A56,A89,Th5
              .=t8.DataLoc(Computation(s1,m+9).SBP,6) by A51,A56,A67,A89,Th5;
A115:       now
              per cases;
              suppose
A116:           a<>DataLoc(Computation(s2,m+9).SBP,2);
                hence Computation(s1,nn).a=Computation(s1,m+9).a
                by A88,A89,A93,SCMPDS_2:59
                  .=Computation(s2,m+9).a by A110,A111
                  .=Computation(s2,nn).a by A92,A116,SCMPDS_2:59;
              end;
              suppose
A117:           a=DataLoc(Computation(s2,m+9).SBP,2);
                hence Computation(s1,nn).a=
                Computation(s1,m+9).DataLoc(Computation(s1,m+9).SBP,6)
                by A88,A89,A93,SCMPDS_2:59
                  .=Computation(s2,m+9).DataLoc(Computation(s2,m+9).SBP,6)
                by A89,A93,A111,A114
                  .=Computation(s2,nn).a by A92,A117,SCMPDS_2:59;
              end;
            end;
            per cases by A106,A107,A108,NAT_1:8;
            suppose j <=7;
              hence IC Computation(s1,j) = IC Computation(s2,j) &
              Computation(s1,j).a=Computation(s2,j).a
              by A19,A20,A21,A23,A27,A28,A29,A30,A31,A33,A34,A105,Lm7;
            end;
            suppose
A118:         j>=8 & j <= m+8;
              then consider j1 be Nat such that
A119:         j=8+j1 by NAT_1:10;
              reconsider j1 as Element of NAT by ORDINAL1:def 13;
A120:         j1 <= m by A118,A119,XREAL_1:8;
              thus IC Computation(s1,j) = IC Computation(s8,j1) by A119,
              AMI_1:51
                .=IC Computation(t8,j1) by A73,A110,A120
                .=IC Computation(s2,j) by A119,AMI_1:51;
              thus Computation(s1,j).a = Computation(s8,j1).a by A119,
              AMI_1:51
                .=Computation(t8,j1).a by A73,A110,A120
                .=Computation(s2,j).a by A119,AMI_1:51;
            end;
            suppose
A121:         j = m+9;
              hence IC Computation(s1,j) = IC Computation(s2,j) by A86
              ,A90;
              thus Computation(s1,j).a=Computation(s2,j).a by A110,A111
              ,A121;
            end;
            suppose
A122:         j = nn;
              hence IC Computation(s1,j) = IC Computation(s2,j) by A94
              ,A95;
              thus Computation(s1,j).a=Computation(s2,j).a by A115,A122;
            end;
          end;
        end;
      end;
    end;
    hence P[k+1];
  end;
A123: for n holds P[n] from NAT_1:sch 1(A1,A17);
  let s1,s2 be State of SCMPDS;
  assume that
A124: GA c= s1 and
A125: GA c= s2 and
A126: IC s1 = inspos 5 and
A127: s1.SBP >0 and
A128: s1.GBP=0 and
A129: s1.DataLoc(s1.SBP,3) >= 0 and
A130: s1.DataLoc(s1.SBP,2) >= s1.DataLoc(s1.SBP,3) and
A131: IC s2 = IC s1 and
A132: s2.SBP = s1.SBP and
A133: s2.GBP=0 and
A134: s2.DataLoc(s1.SBP,2) = s1.DataLoc(s1.SBP,2) and
A135: s2.DataLoc(s1.SBP,3) = s1.DataLoc(s1.SBP,3);
  reconsider m=s1.DataLoc(s1.SBP,3) as Element of NAT by A129,INT_1:16;
  P[m] by A123;
  hence thesis by A124,A125,A126,A127,A128,A129,A130,A131,A132,A133,A134
  ,A135;
end;

Lm9: for s1,s2 being State of SCMPDS,a be Int_position,k be Element of NAT
st Initialized GCD-Algorithm c= s1 & Initialized GCD-Algorithm c= s2
& s1.a=s2.a & k <= 4 holds IC Computation(s1,k) = IC Computation(s2,k) &
Computation(s1,k).a = Computation(s2,k).a
proof
  let s1,s2 be State of SCMPDS,a be Int_position,k be Element of NAT;
  set GA=GCD-Algorithm;
  assume that
A1: Initialized GA c= s1 and
A2: Initialized GA c= s2;
  assume that
A3: s1.a=s2.a and
A4: k <= 4;
A5: GA c= s1 by A1,SCMPDS_4:57;
A6: GA c= s2 by A2,SCMPDS_4:57;
A7: IC s1=inspos 0 by A1,SCMPDS_5:18;
A8: Computation(s1,0+1) = Following Computation(s1,0) by AMI_1:14
    .= Following s1 by AMI_1:13
    .= Exec(i00,s1) by A5,A7,Lm1;
A9: IC s2=inspos 0 by A2,SCMPDS_5:18;
A10: Computation(s2,0+1) = Following Computation(s2,0) by AMI_1:14
    .= Following s2 by AMI_1:13
    .= Exec(i00,s2) by A6,A9,Lm1;
A11: IC Computation(s1,1)= Next IC s1 by A8,SCMPDS_2:57
    .= inspos (0+1) by A7;
  then
A12: CurInstr Computation(s1,1)=s1.inspos 1 by AMI_1:54
    .=i01 by A5,Lm1;
A13: Computation(s1,1+1) = Following Computation(s1,1) by AMI_1:14
    .= Exec(i01,Computation(s1,1)) by A12;
A14: IC Computation(s2,1)= Next IC s2 by A10,SCMPDS_2:57
    .= inspos (0+1) by A9;
  then
A15: CurInstr Computation(s2,1)=s2.inspos 1 by AMI_1:54
    .=i01 by A6,Lm1;
A16: Computation(s2,1+1) = Following Computation(s2,1) by AMI_1:14
    .= Exec(i01,Computation(s2,1)) by A15;
A17: IC Computation(s1,2)= Next IC Computation(s1,1) by A13,SCMPDS_2:57
    .= inspos (1+1) by A11;
  then
A18: CurInstr Computation(s1,2)=s1.inspos 2 by AMI_1:54
    .=i02 by A5,Lm1;
A19: Computation(s1,2+1) = Following Computation(s1,2) by AMI_1:14
    .= Exec(i02,Computation(s1,2)) by A18;
A20: Computation(s1,2).SBP=7 by A13,SCMPDS_2:57;
A21: IC Computation(s2,2)= Next IC Computation(s2,1) by A16,SCMPDS_2:57
    .= inspos (1+1) by A14;
  then
A22: CurInstr Computation(s2,2)=s2.inspos 2 by AMI_1:54
    .=i02 by A6,Lm1;
A23: Computation(s2,2+1) = Following Computation(s2,2) by AMI_1:14
    .= Exec(i02,Computation(s2,2)) by A22;
A24: Computation(s2,2).SBP=7 by A16,SCMPDS_2:57;
A25: IC Computation(s1,3)= Next IC Computation(s1,2) by A19,SCMPDS_2:71
    .= inspos (2+1) by A17;
  then
A26: CurInstr Computation(s1,3)=s1.inspos 3 by AMI_1:54
    .=i03 by A5,Lm1;
A27: Computation(s1,3+1) = Following Computation(s1,3) by AMI_1:14
    .= Exec(i03,Computation(s1,3)) by A26;
A28: IC Computation(s2,3)= Next IC Computation(s2,2) by A23,SCMPDS_2:71
    .= inspos (2+1) by A21;
  then
A29: CurInstr Computation(s2,3)=s2.inspos 3 by AMI_1:54
    .=i03 by A6,Lm1;
A30: Computation(s2,3+1) = Following Computation(s2,3) by AMI_1:14
    .= Exec(i03,Computation(s2,3)) by A29;
A31: now
    let b;
    assume
A32: s1.b=s2.b;
    per cases;
    suppose
A33:  b=GBP;
      hence Computation(s1,1).b=0 by A8,SCMPDS_2:57
        .=Computation(s2,1).b by A10,A33,SCMPDS_2:57;
    end;
    suppose
A34:  b<>GBP;
      hence Computation(s1,1).b=s1.b by A8,SCMPDS_2:57
        .=Computation(s2,1).b by A10,A32,A34,SCMPDS_2:57;
    end;
  end;
A35: now
    let b;
    assume
A36: s1.b=s2.b;
    per cases;
    suppose
A37:  b=SBP;
      hence Computation(s1,2).b=7 by A13,SCMPDS_2:57
        .=Computation(s2,2).b by A16,A37,SCMPDS_2:57;
    end;
    suppose
A38:  b<>SBP;
      hence Computation(s1,2).b=Computation(s1,1).b by A13,SCMPDS_2:57
        .=Computation(s2,1).b by A31,A36
        .=Computation(s2,2).b by A16,A38,SCMPDS_2:57;
    end;
  end;
A39: now
    let b;
    assume
A40: s1.b=s2.b;
    per cases;
    suppose
A41:  b=DataLoc(Computation(s1,2).SBP,RetIC);
      hence Computation(s1,3).b=IC Computation(s1,2) by A19,SCMPDS_2:71
        .=Computation(s2,3).b by A17,A20,A21,A23,A24,A41,SCMPDS_2:71;
    end;
    suppose
A42:  b<>DataLoc(Computation(s1,2).SBP,RetIC);
      hence Computation(s1,3).b=Computation(s1,2).b by A19,SCMPDS_2:71
        .=Computation(s2,2).b by A35,A40
        .=Computation(s2,3).b by A20,A23,A24,A42,SCMPDS_2:71;
    end;
  end;
  per cases by A4,NAT_1:29;
  suppose
A43: k=0;
    hence IC Computation(s1,k) = IC s1 by AMI_1:13
      .=IC Computation(s2,k) by A7,A9,A43,AMI_1:13;
    thus Computation(s1,k).a = s1.a by A43,AMI_1:13
      .=Computation(s2,k).a by A3,A43,AMI_1:13;
  end;
  suppose
A44: k=1;
    hence IC Computation(s1,k)=IC Computation(s2,k) by A11,A14;
    thus thesis by A3,A31,A44;
  end;
  suppose
A45: k=2;
    hence IC Computation(s1,k)=IC Computation(s2,k) by A17,A21;
    thus thesis by A3,A35,A45;
  end;
  suppose
A46: k=3;
    hence IC Computation(s1,k)=IC Computation(s2,k) by A25,A28;
    thus thesis by A3,A39,A46;
  end;
  suppose
A47: k=4;
    hence IC Computation(s1,k)= ICplusConst(Computation(s1,3),2)
    by A27,SCMPDS_2:66
      .= inspos (3+2) by A25,SCMPDS_6:23
      .= ICplusConst(Computation(s2,3),2) by A28,SCMPDS_6:23
      .= IC Computation(s2,k) by A30,A47,SCMPDS_2:66;
    thus Computation(s1,k).a = Computation(s1,3).a by A27,A47,SCMPDS_2:66
      .=Computation(s2,3).a by A3,A39
      .=Computation(s2,k).a by A30,A47,SCMPDS_2:66;
  end;
end;

begin :: The Autonomy of Recursive Euclide Algorithm

theorem
  for p being FinPartState of SCMPDS,x,y being Integer st y >= 0 & x >= y
  & p=(intpos 9,intpos 10) --> (x,y)
  holds Initialized GCD-Algorithm +* p is autonomic
proof
  let p be FinPartState of SCMPDS,x,y be Integer;
  set GA=GCD-Algorithm, IA=Initialized GA, a=intpos 9, b=intpos 10;
  assume that
A1: y >= 0 and
A2: x >= y and
A3: p=(a,b) --> (x,y);
A4: dom p = { a,b } by A3,FUNCT_4:65;
A5: dom IA= {IC SCMPDS} \/ dom GA by SCMPDS_4:27;
  now
    assume dom IA meets dom p;
    then consider z being set such that
A6: z in dom IA and
A7: z in dom p by XBOOLE_0:3;
    z = a or z = b by A4,A7,TARSKI:def 2;
    hence contradiction by A6,SCMPDS_4:31;
  end;
  then
A8: IA c= IA +* p by FUNCT_4:33;
A9: a in dom p by A4,TARSKI:def 2;
A10: b in dom p by A4,TARSKI:def 2;
A11: for t being State of SCMPDS st IA +* p c= t holds t.a = x & t.b = y
  proof
    let t be State of SCMPDS such that
A12: IA +* p c= t;
    p c= IA +* p by FUNCT_4:26;
    then
A13: p c= t by A12,XBOOLE_1:1;
    hence t.a = p.a by A9,GRFUNC_1:8
      .= x by A3,AMI_3:52,FUNCT_4:66;
    thus t.b = p.b by A10,A13,GRFUNC_1:8
      .= y by A3,FUNCT_4:66;
  end;
  thus IA +* p is autonomic
  proof
    let s1,s2 be State of SCMPDS such that
A14: IA +* p c= s1 and
A15: IA +* p c= s2;
A16: IA c= s1 by A8,A14,XBOOLE_1:1;
    then
A17: GA c= s1 by SCMPDS_4:57;
A18: IA c= s2 by A8,A15,XBOOLE_1:1;
    then
A19: GA c= s2 by SCMPDS_4:57;
A20: s1.a=x by A11,A14;
A21: s1.b=y by A11,A14;
A22: s2.a=x by A11,A15;
A23: s2.b=y by A11,A15;
    set s4=Computation(s1,4), t4=Computation(s2,4);
A24: GA c= s4 by A16,AMI_1:81,SCMPDS_4:57;
A25: IC s4 = inspos 5 by A16,Th15;
A26: s4.GBP = 0 by A16,Th15;
A27: s4.SBP = 7 by A16,Th15;
A28: s4.intpos(7+RetIC) = inspos 2 by A16,Th15;
A29: s4.intpos 9 = s1.intpos 9 by A16,Th15;
A30: s4.intpos 10 = s1.intpos 10 by A16,Th15;
A31: s4.DataLoc(s4.SBP,3)=s4.intpos (7+3) by A27,Th5
      .=y by A11,A14,A30;
A32: DataLoc(s4.SBP,2)=intpos(7+2) by A27,Th5;
A33: GA c= t4 by A18,AMI_1:81,SCMPDS_4:57;
A34: IC t4 = inspos 5 by A18,Th15;
A35: t4.GBP = 0 by A18,Th15;
A36: t4.SBP = 7 by A18,Th15;
A37: t4.intpos(7+RetIC) = inspos 2 by A18,Th15;
A38: t4.intpos 9 = s2.intpos 9 by A18,Th15;
A39: t4.intpos 10 = s2.intpos 10 by A18,Th15;
    t4.DataLoc(t4.SBP,3)=t4.intpos (7+3) by A36,Th5
      .=s4.DataLoc(s4.SBP,3) by A11,A15,A31,A39;
    then consider n such that
A40: CurInstr Computation(s4,n) = return SBP and
A41: s4.SBP=Computation(s4,n).SBP and
A42: CurInstr Computation(t4,n) = return SBP and
A43: t4.SBP=Computation(t4,n).SBP and
A44: for j be Element of NAT st 1<j & j <= s4.SBP+1 holds s4.intpos j=
    Computation(s4,n).intpos j & t4.intpos j=Computation(t4,n).intpos j and
A45: for k be Element of NAT,c be Int_position st k <= n & s4.c = t4.c
    holds IC Computation(s4,k) = IC Computation(t4,k) & Computation(s4,k).c =
    Computation(t4,k).c
    by A1,A2,A11,A15,A20,A24,A25,A26,A27,A29,A31,A32,A33,A34,A35,A36,A38,
    Lm8;
A46: Computation(s4,n).DataLoc(Computation(s4,n).SBP,RetIC)
    =Computation(s4,n).intpos(7+1) by A27,A41,Th5,SCMPDS_1:def 23
      .=inspos 2 by A27,A28,A44,SCMPDS_1:def 23;
A47: Computation(t4,n).DataLoc(Computation(t4,n).SBP,RetIC)
    =Computation(t4,n).intpos(7+1) by A36,A43,Th5,SCMPDS_1:def 23
      .=inspos 2 by A27,A37,A44,SCMPDS_1:def 23;
A48: Computation(s4,n+1)= Following Computation(s4,n) by AMI_1:14
      .= Exec(i14,Computation(s4,n)) by A40;
    then
A49: IC Computation(s4,n+1)=
    (abs(Computation(s4,n).DataLoc(Computation(s4,n).SBP,RetIC)))+2
    by SCMPDS_2:70
      .= inspos (2+2) by A46,Th3;
    then
A50: CurInstr Computation(s4,n+1) =s4.inspos 4 by AMI_1:54
      .=s1.inspos 4 by AMI_1:54
      .=i04 by A17,Lm1;
A51: Computation(t4,n+1)= Following Computation(t4,n) by AMI_1:14
      .= Exec(i14,Computation(t4,n)) by A42;
    then
A52: IC Computation(t4,n+1)= (abs(Computation(t4,n).
    DataLoc(Computation(t4,n).SBP,RetIC)))+2 by SCMPDS_2:70
      .= inspos (2+2) by A47,Th3;
    then
A53: CurInstr Computation(t4,n+1) =t4.inspos 4 by AMI_1:54
      .=s2.inspos 4 by AMI_1:54
      .=i04 by A19,Lm1;
A54: s4.a=t4.a by A16,A18,A20,A22,Lm9;
A55: s4.b=t4.b by A16,A18,A21,A23,Lm9;
A56: Computation(s4,n+1).a=Computation(s4,n).a by A48,AMI_3:52,SCMPDS_2:70
      .=Computation(t4,n).a by A45,A54
      .=Computation(t4,n+1).a by A51,AMI_3:52,SCMPDS_2:70;
A57: Computation(s4,n+1).b=Computation(s4,n).b by A48,AMI_3:52,SCMPDS_2:70
      .=Computation(t4,n).b by A45,A55
      .=Computation(t4,n+1).b by A51,AMI_3:52,SCMPDS_2:70;
A58: now
      let j be Element of NAT;
A59:  j<n+4+1 or j>=n+5;
A60:  now
        assume
A61:    j <= n+4;
A62:    j<3+1 or j>= 4;
        per cases by A62,NAT_1:13;
        case j<=3;
          hence j<=3;
        end;
        case j>=4;
          hence j>=4 & j <= n+4 by A61;
        end;
      end;
      per cases by A59,A60,NAT_1:13;
      suppose j<=3;
        then
A63:    j<=4 by XXREAL_0:2;
        hence IC Computation(s1,j)=IC Computation(s2,j) by A16,A18,A20,A22
        ,Lm9;
        thus Computation(s1,j).a=Computation(s2,j).a
        by A16,A18,A20,A22,A63,Lm9;
        thus Computation(s1,j).b=Computation(s2,j).b
        by A16,A18,A21,A23,A63,Lm9;
      end;
      suppose
A64:    j>=4 & j<=n+4;
        then consider j1 be Nat such that
A65:    j=4+j1 by NAT_1:10;
        reconsider j1 as Element of NAT by ORDINAL1:def 13;
A66:    j1 <= n by A64,A65,XREAL_1:8;
        thus IC Computation(s1,j) = IC Computation(s4,j1) by A65,AMI_1:51
          .=IC Computation(t4,j1) by A45,A54,A66
          .=IC Computation(s2,j) by A65,AMI_1:51;
        thus Computation(s1,j).a = Computation(s4,j1).a by A65,AMI_1:51
          .=Computation(t4,j1).a by A45,A54,A66
          .=Computation(s2,j).a by A65,AMI_1:51;
        thus Computation(s1,j).b = Computation(s4,j1).b by A65,AMI_1:51
          .=Computation(t4,j1).b by A45,A55,A66
          .=Computation(s2,j).b by A65,AMI_1:51;
      end;
      suppose j>=n+5;
        then consider j1 be Nat such that
A67:    j=n+(1+4)+j1 by NAT_1:10;
        reconsider j1 as Element of NAT by ORDINAL1:def 13;
A68:    j=n+1+j1+4 by A67;
        hence IC Computation(s1,j)=IC Computation(s4,n+1+j1) by
        AMI_1:51
          .=IC Computation(t4,n+1) by A49,A50,A52,AMI_1:52,NAT_1:11
          .=IC Computation(t4,n+1+j1) by A53,AMI_1:52,NAT_1:11
          .=IC Computation(s2,j) by A68,AMI_1:51;
        thus Computation(s1,j).a = Computation(s4,n+1+j1).a by A68,
        AMI_1:51
          .=Computation(t4,n+1).a by A50,A56,AMI_1:52,NAT_1:11
          .=Computation(t4,n+1+j1).a by A53,AMI_1:52,NAT_1:11
          .=Computation(s2,j).a by A68,AMI_1:51;
        thus Computation(s1,j).b = Computation(s4,n+1+j1).b by A68,
        AMI_1:51
          .=Computation(t4,n+1).b by A50,A57,AMI_1:52,NAT_1:11
          .=Computation(t4,n+1+j1).b by A53,AMI_1:52,NAT_1:11
          .=Computation(s2,j).b by A68,AMI_1:51;
      end;
    end;
    set A = { IC SCMPDS, a,b };
A69: dom(IA +* p) = { IC SCMPDS } \/ dom GA \/ { a, b } by A4,A5,FUNCT_4:def 1
      .= { IC SCMPDS } \/ { a,b } \/ dom GA by XBOOLE_1:4
      .= A \/ dom GA by ENUMSET1:42;
    let k be Element of NAT;
A70: GA c= Computation(s2,k) by A19,AMI_1:86;
    GA c= Computation(s1,k) by A17,AMI_1:86;
    then
A71: Computation(s1,k) | dom GA = GA by GRFUNC_1:64
      .= (Computation(s2,k))| dom GA by A70,GRFUNC_1:64;
A72: (Computation(s1,k)).IC SCMPDS = IC Computation(s1,k)
      .=IC Computation(s2,k) by A58
      .=(Computation(s2,k)).IC SCMPDS;
A73: Computation(s1,k).a = Computation(s2,k).a by A58;
A74: Computation(s1,k).b = Computation(s2,k).b by A58;
    dom(Computation(s1,k)) = the carrier of SCMPDS by AMI_1:79
      .= dom(Computation(s2,k)) by AMI_1:79;
    then (Computation(s1,k))|A = (Computation(s2,k))|A by A72,A73,A74,
    GRFUNC_1:92;
    hence thesis
    by A69,A71,RELAT_1:185;
  end;
end;

