:: The Banach Space $l^p$
::  by Yasumasa Suzuki
::
:: Received September 25, 2004
:: Copyright (c) 2004 Association of Mizar Users

environ

 vocabularies PRE_TOPC, NORMSP_1, RLVECT_1, FUNCT_1, ARYTM, ARYTM_1, ARYTM_3,
      RELAT_1, ABSVALUE, ORDINAL2, RLSUB_1, SEQ_1, SEQ_2, SERIES_1, SUPINF_2,
      PROB_1, RSSPACE, RSSPACE3, POWER, LP_SPACE, LOPBAN_1, REALSET1, ALGSTR_0;
 notations TARSKI, XBOOLE_0, ZFMISC_1, SUBSET_1, MCART_1, RELAT_1, FUNCT_1,
      REALSET1, PARTFUN1, FUNCT_2, PRE_TOPC, DOMAIN_1, STRUCT_0, ALGSTR_0,
      XCMPLX_0, XXREAL_0, XREAL_0, ORDINAL1, NUMBERS, REAL_1, NAT_1, RLVECT_1,
      COMPLEX1, RLSUB_1, NORMSP_1, VALUED_1, SEQ_1, SEQ_2, SEQM_3, SERIES_1,
      POWER, RSSPACE, RSSPACE3, LOPBAN_1;
 constructors PARTFUN1, BINOP_1, XXREAL_0, REAL_1, NAT_1, COMPLEX1, SEQ_2,
      SEQM_3, PREPOWER, SERIES_1, REALSET1, RLSUB_1, RSSPACE3, LOPBAN_1, SEQ_1,
      VALUED_1;
 registrations XBOOLE_0, SUBSET_1, ORDINAL1, RELSET_1, NUMBERS, XXREAL_0,
      XREAL_0, MEMBERED, SEQ_1, REALSET1, STRUCT_0, RLVECT_1, LOPBAN_1,
      VALUED_0, RSSPACE, VALUED_1, FUNCT_2;
 requirements SUBSET, REAL, BOOLE, NUMERALS, ARITHM;
 definitions TARSKI, REALSET1, BINOP_1, RLVECT_1, RLSUB_1, STRUCT_0, ALGSTR_0,
      VALUED_1;
 theorems XBOOLE_0, RELAT_1, TARSKI, ABSVALUE, ZFMISC_1, REAL_1, SEQ_1, SEQM_3,
      SERIES_1, COMSEQ_3, FUNCT_1, NAT_1, SEQ_2, FUNCT_2, RLVECT_1, RLSUB_1,
      NORMSP_1, XREAL_0, RSSPACE2, XCMPLX_1, SEQ_4, REAL_2, POWER, RSSPACE,
      RSSPACE3, LOPBAN_1, HOLDER_1, XREAL_1, COMPLEX1, XXREAL_0, ORDINAL1;
 schemes NAT_1, SEQ_1, FUNCT_2, XBOOLE_0;

begin :: The Real Norm Space of l^p Real Sequences

definition
  let x be Real_Sequence;
  let p be Real;
  func x rto_power p -> Real_Sequence means
  :Def1:
  for n be Element of NAT holds it.n = abs(x.n) to_power p;
  existence
  proof
    deffunc F(set)=( abs(x.$1) ) to_power p;
    ex q1 be Real_Sequence st
    for n be Element of NAT holds q1.n=F(n) from SEQ_1:sch 1;
    then consider q1 be Real_Sequence such that
A1: for n be Element of NAT holds q1.n= abs(x.n) to_power p;
    take IT=q1;
    thus thesis by A1;
  end;
  uniqueness
  proof
    let a1,a2 be Real_Sequence;
    assume that
A2: for n be Element of NAT holds a1.n = abs(x.n) to_power p and
A3: for n be Element of NAT holds a2.n = abs(x.n) to_power p;
    for s be set st s in NAT holds a1.s = a2.s
    proof
      let s be set such that
A4:   s in NAT;
      a1.s = abs(x.s) to_power p by A2,A4
        .= a2.s by A3,A4;
      hence thesis;
    end;
    hence thesis by SEQ_1:8;
  end;
end;

definition
  let p be Real;
  assume
A1: p >= 1;
  func the_set_of_RealSequences_l^p
  -> non empty Subset of Linear_Space_of_RealSequences means
  :Def2:
  for x being set holds x in it iff
  (x in the_set_of_RealSequences & seq_id(x) rto_power p is summable);
  existence
  proof
    defpred P[set] means seq_id($1) rto_power p is summable;
    consider IT being set such that
A2: for x being set holds x in IT
    iff x in the_set_of_RealSequences & P[x] from XBOOLE_0:sch 1;
A3: IT is non empty
    proof
      seq_id(Zeroseq) rto_power p is summable
      proof
        reconsider rseq=seq_id(Zeroseq) rto_power p as Real_Sequence;
        now
          let n be Element of NAT;
          thus rseq.n =abs((seq_id(Zeroseq)).n) to_power p by Def1
            .=abs(0) to_power p by RSSPACE:def 6
            .=0 to_power p by ABSVALUE:7
            .=0 by A1,POWER:def 2;
        end;
        then rseq is absolutely_summable by COMSEQ_3:3;
        hence thesis by SERIES_1:40;
      end;
      hence thesis by A2;
    end;
    IT is Subset of the_set_of_RealSequences
    proof
      for x be set st x in IT holds x in the_set_of_RealSequences by A2;
      hence thesis by TARSKI:def 3;
    end;
    hence thesis by A2,A3,RSSPACE:def 7;
  end;
  uniqueness
  proof
    let X1,X2 be non empty Subset of Linear_Space_of_RealSequences;
    assume that
A4: for x being set holds x in X1 iff
    (x in the_set_of_RealSequences & seq_id(x) rto_power p is summable) and
A5: for x being set holds x in X2 iff
    (x in the_set_of_RealSequences & seq_id(x) rto_power p is summable);
A6: X1 c= X2
    proof
      let x be set;
      assume x in X1;
      then x in the_set_of_RealSequences &
      (x in the_set_of_RealSequences & seq_id(x) rto_power p is summable)
      by A4;
      hence x in X2 by A5;
    end;
    X2 c= X1
    proof
      let x be set;
      assume x in X2;
      then x in the_set_of_RealSequences & (x in the_set_of_RealSequences
      & seq_id(x) rto_power p is summable) by A5;
      hence x in X1 by A4;
    end;
    hence thesis by A6,XBOOLE_0:def 10;
  end;
end;

reserve x1,x2,y1,a,b,c for Real;

Lm1: x1 >= 0 & y1 > 0 implies x1 to_power y1 >= 0
proof
  assume that
A1: x1 >= 0 and
A2: y1 > 0;
  x1>0 or x1=0 by A1;
  hence x1 to_power y1 >= 0 by A2,POWER:39,def 2;
end;

Lm2: y1>0 & x1>=0 & x2>=0 implies
(x1*x2) to_power y1 = (x1 to_power y1) * (x2 to_power y1)
proof
  assume
A1: y1>0 & x1>=0 & x2>=0;
  per cases by A1;
  suppose x1>0 & x2>0;
    hence (x1*x2) to_power y1=(x1 to_power y1) * (x2 to_power y1) by POWER:35;
  end;
  suppose
A2: x1>0 & x2=0;
    then x2 to_power y1 = 0 by A1,POWER:def 2;
    hence (x1*x2) to_power y1=(x1 to_power y1) * (x2 to_power y1) by A2;
  end;
  suppose
A3: x1=0 & x2>0;
    then x1 to_power y1 = 0 by A1,POWER:def 2;
    hence (x1*x2) to_power y1=(x1 to_power y1) * (x2 to_power y1) by A3;
  end;
  suppose
A4: x1=0 & x2=0;
    then x2 to_power y1 = 0 by A1,POWER:def 2;
    hence (x1*x2) to_power y1=(x1 to_power y1) * (x2 to_power y1) by A4;
  end;
end;

theorem Th1:
  a >= 0 & a < b & c > 0 implies a to_power c < b to_power c
proof
  a = 0 & c > 0 implies a to_power c = 0 by POWER:def 2;
  hence thesis by POWER:39,42;
end;

Lm3: for p be Real st 1 = p for a,b be Real_Sequence
for n be Element of NAT holds
(Partial_Sums((a + b) rto_power p).n) to_power (1/p) <=
(Partial_Sums(a rto_power p).n) to_power (1/p) +
(Partial_Sums(b rto_power p).n) to_power (1/p)
proof
  let p be Real such that
A1: p=1;
  let a,b be Real_Sequence;
  let n be Element of NAT;
A2: now
    let n be Element of NAT;
    thus ((a + b) rto_power p).n = abs((a + b).n) to_power p by Def1
      .=abs((a + b).n) by A1,POWER:30;thus
    (a rto_power p).n = abs(a .n) to_power p by Def1
      .=abs(a .n) by A1,POWER:30;thus
    (b rto_power p).n = abs(b .n) to_power p by Def1
      .=abs(b .n) by A1,POWER:30;
  end;
  then
A3: (a + b) rto_power p = abs(a + b) by SEQ_1:16;
A4: a rto_power p = abs(a) by A2,SEQ_1:16;
A5: b rto_power p = abs(b) by A2,SEQ_1:16;
A6: (Partial_Sums((a + b) rto_power p).n) to_power (1/p)
  =(Partial_Sums(abs(a + b)).n) by A1,A3,POWER:30;
A7: (Partial_Sums(a rto_power p).n) to_power (1/p)
  =(Partial_Sums(abs(a)).n) by A1,A4,POWER:30;
A8: (Partial_Sums(b rto_power p).n) to_power (1/p)
  =(Partial_Sums(abs(b)).n) by A1,A5,POWER:30;
A9: for n be Element of NAT holds abs((a + b).n) <= abs(b .n) + abs(a .n)
  proof
    let n be Element of NAT;
    abs((a + b).n)=abs(a.n + b.n) by SEQ_1:11;
    hence thesis by COMPLEX1:142;
  end;
  deffunc F(Element of NAT) =abs(a .($1)) + abs(b .($1));
  consider c be Real_Sequence such that
A10: for n be Element of NAT holds c.n= F(n) from SEQ_1:sch 1;
A11: now
    let n be Element of NAT;
A12: abs((a + b).n) <= abs(b .n) + abs(a .n) by A9;
    abs((a + b).n)=abs(a+b).n by SEQ_1:16;
    hence abs(a+b).n <= c.n by A10,A12;
  end;
A13: now
    let n be Element of NAT;
A14: abs(b.n)=abs (b).n by SEQ_1:16;
    abs(a.n)=abs (a).n by SEQ_1:16;
    hence c.n=abs (a).n + abs (b).n by A10,A14
      .=(abs a + abs b).n by SEQ_1:11;
  end;
A15: c = abs a + abs b
  proof
    for n be set st n in NAT holds c.n = (abs (a) + abs (b)).n by A13;
    hence c = (abs (a) + abs (b)) by SEQ_1:8;
  end;
A16: Partial_Sums(abs(a+b)).n<=Partial_Sums(c).n by A11,SERIES_1:17;
  Partial_Sums(abs (a) + abs (b)) =
  Partial_Sums(abs a) + Partial_Sums(abs(b)) by SERIES_1:8;
  hence (Partial_Sums((a + b) rto_power p).n) to_power (1/p)
  <=(Partial_Sums(a rto_power p).n) to_power (1/p)
  + (Partial_Sums(b rto_power p).n) to_power (1/p)
  by A6,A7,A8,A15,A16,SEQ_1:11;
end;

theorem Th2:
  for p be Real st 1 <= p for a,b be Real_Sequence
  for n be Element of NAT holds
  (Partial_Sums((a + b) rto_power p).n) to_power (1/p) <=
  (Partial_Sums(a rto_power p).n) to_power (1/p) +
  (Partial_Sums(b rto_power p).n) to_power (1/p)
proof
  let p be Real such that
A1: 1<=p;
  let a,b be Real_Sequence;
  set ap = a rto_power p;
  set bp = b rto_power p;
  set ab= ((a + b) rto_power p);
  let n be Element of NAT;
  now per cases by A1,REAL_1:def 5;
    case
A2:   p > 1;
      now
        let n be Element of NAT;
A3:     ((a + b) rto_power p).n =abs((a + b).n) to_power p by Def1
          .=abs(a.n+b.n) to_power p by SEQ_1:11;
        thus ap.n = abs(a .n) to_power p by Def1;
        thus bp.n = abs(b .n) to_power p by Def1;
        thus ab.n = abs(a.n+b.n) to_power p by A3;
      end;
      hence (Partial_Sums((a + b) rto_power p).n) to_power (1/p) <=
      (Partial_Sums(a rto_power p).n) to_power (1/p) +
      (Partial_Sums(b rto_power p).n) to_power (1/p) by A2,HOLDER_1:7;
    end;
    case p=1;
      hence (Partial_Sums((a + b) rto_power p).n) to_power (1/p) <=
      (Partial_Sums(a rto_power p).n) to_power (1/p) +
      (Partial_Sums(b rto_power p).n) to_power (1/p) by Lm3;
    end;
  end;
  hence thesis;
end;

Lm4: for a,b be Real_Sequence for p be Real st 1 = p &
((a rto_power p) is summable) & ((b rto_power p) is summable) holds
((a+b) rto_power p) is summable & (Sum((a + b) rto_power p)) to_power (1/p) <=
(Sum(a rto_power p)) to_power (1/p) + (Sum(b rto_power p)) to_power (1/p)
proof
  let a,b be Real_Sequence;
  let p be Real such that
A1: p=1 and
A2: a rto_power p is summable and
A3: b rto_power p is summable;
A4: now
    let n be Element of NAT;thus
    ((a + b) rto_power p).n = abs((a + b).n) to_power p by Def1
      .=abs((a + b).n) by A1,POWER:30;thus
    (a rto_power p).n = abs(a .n) to_power p by Def1
      .=abs(a .n) by A1,POWER:30;
    thus (b rto_power p).n = abs(b .n) to_power p by Def1
      .=abs(b .n) by A1,POWER:30;
  end;
  then
A5: (a + b) rto_power p = abs(a + b) by SEQ_1:16;
A6: a rto_power p = abs(a) by A4,SEQ_1:16;
A7: b rto_power p = abs(b) by A4,SEQ_1:16;
A8: (Sum((a) rto_power p)) to_power (1/p) =Sum(abs(a)) by A1,A6,POWER:30;
A9: (Sum((b) rto_power p)) to_power (1/p) =Sum(abs(b)) by A1,A7,POWER:30;
A10: abs(b) is summable by A3,A4,SEQ_1:16;
A11: a is absolutely_summable by A2,A6,SERIES_1:def 5;
A12: b is absolutely_summable by A3,A7,SERIES_1:def 5;
A13: a = seq_id (a) & b = seq_id (b) by RSSPACE:3;
  then reconsider a1=a as VECTOR of l1_Space by A11,RSSPACE3:8;
  reconsider b1=b as VECTOR of l1_Space by A12,A13,RSSPACE3:8;
A14: ||.a1+b1.|| <= ||.a1.|| + ||.b1.|| by RSSPACE3:9;
A15: ||.a1+b1.|| = (the norm of l1_Space).(a1+b1) by NORMSP_1:def 1
    .=Sum(abs(seq_id(a1+b1))) by RSSPACE3:def 2,def 3
    .=Sum(abs(seq_id(seq_id(a1)+seq_id(b1)))) by RSSPACE3:8
    .=Sum(abs(seq_id(a1)+seq_id(b1))) by RSSPACE:3;
A16: ||.a1.|| = (the norm of l1_Space).(a1) by NORMSP_1:def 1
    .=Sum(abs(seq_id(a1))) by RSSPACE3:def 2,def 3;
A17: ||.b1.|| = (the norm of l1_Space).(b1) by NORMSP_1:def 1
    .=Sum(abs(seq_id(b1))) by RSSPACE3:def 2,def 3;
A18: seq_id(a1)=a by RSSPACE:3;
A19: seq_id(b1)=b by RSSPACE:3;
A20: (abs(a) + abs(b) is summable) &
  Sum(abs(a) + abs(b))=Sum(abs(a))+Sum(abs(b)) by A2,A6,A10,SERIES_1:10;
  deffunc F(Element of NAT) =abs(a .($1)) + abs(b .($1));
  consider c be Real_Sequence such that
A21: for n be Element of NAT holds c.n= F(n) from SEQ_1:sch 1;
A22: now
    let n be Element of NAT;
A23: abs(a+b).n=abs((a+b).n) by SEQ_1:16;
    hence abs(a+b).n>= 0 by COMPLEX1:132;
    abs((a+b).n) =abs((a.n)+(b.n)) by SEQ_1:11;
    then
A24: abs(a+b).n <= abs(a.n)+abs(b.n) by A23,COMPLEX1:142; thus
    c.n=abs(a.n)+abs(b.n) by A21;
    abs(a.n)+abs(b.n) = abs(a).n+abs(b.n) by SEQ_1:16
      .=abs(a).n+abs(b).n by SEQ_1:16;
    hence c.n =abs(a).n+abs(b).n by A21;
    thus abs(a+b).n <= c.n by A21,A24;
  end;
  then c = abs(a) + abs(b) by SEQ_1:11;
  hence (a + b) rto_power p is summable by A5,A20,A22,SERIES_1:24;
  thus (Sum((a + b) rto_power p)) to_power (1/p)
  <=(Sum((a) rto_power p)) to_power (1/p) +
  (Sum((b) rto_power p)) to_power (1/p) by A1,A5,A8,A9,A14,A15,A16,A17
  ,A18,A19,POWER:30;
end;

theorem Th3:
  for a,b be Real_Sequence for p be Real st 1 <= p &
  (a rto_power p) is summable & (b rto_power p) is summable
  holds ((a+b) rto_power p) is summable &
  (Sum((a + b) rto_power p)) to_power (1/p) <=
  (Sum(a rto_power p)) to_power (1/p) + (Sum(b rto_power p)) to_power (1/p)
proof
  let a,b be Real_Sequence;
  let p be Real such that
A1: 1<=p and
A2: ((a rto_power p) is summable) and
A3: ((b rto_power p) is summable);
  set ap = a rto_power p;
  set bp = b rto_power p;
  set ab= ((a + b) rto_power p);
A4: now
    let n be Element of NAT;
A5: ((a + b) rto_power p).n =abs((a + b).n) to_power p by Def1
      .=abs(a.n+b.n) to_power p by SEQ_1:11;
    thus ap.n= abs(a .n) to_power p by Def1;
    thus bp.n= abs(b .n) to_power p by Def1;
    thus ab.n= abs(a.n+b.n) to_power p by A5;
  end;
  now per cases by A1,REAL_1:def 5;
    case p > 1;
      hence Sum(ab) to_power (1/p) <= Sum ap to_power (1/p)
      + Sum(bp) to_power (1/p) & ab is summable by A2,A3,A4,HOLDER_1:13;
    end;
    case p=1;
      hence Sum(ab) to_power (1/p) <= Sum(ap) to_power (1/p)
      + Sum(bp) to_power (1/p) & ab is summable by A2,A3,Lm4;
    end;
  end;
  hence thesis;
end;

theorem Th4:
  for p be Real st 1 <= p holds
  the_set_of_RealSequences_l^p is linearly-closed
proof
  let p be Real such that
A1: p >=1;
  set W = the_set_of_RealSequences_l^p;
A2: for v,u be VECTOR of Linear_Space_of_RealSequences st
  v in the_set_of_RealSequences_l^p & u in the_set_of_RealSequences_l^p
  holds v + u in the_set_of_RealSequences_l^p
  proof
    let v,u be VECTOR of Linear_Space_of_RealSequences such that
A3: v in W & u in W;
A4: seq_id(v +u) rto_power p is summable
    proof
A5:   seq_id(v) rto_power p is summable by A1,A3,Def2;
A6:   seq_id(u) rto_power p is summable by A1,A3,Def2;
A7:   1/p > 0 by A1,REAL_2:127;
      set p1=1/p;
      set vp=seq_id(v) rto_power p;
      set up=seq_id(u) rto_power p;
A8:   p * (1/p) = (p*1)/p by XCMPLX_1:75
        .= 1 by A1,XCMPLX_1:60;
A9:   now
        let n be Element of NAT; thus
A10:    vp.n=abs((seq_id(v)).n) to_power p by Def1; thus
A11:    up.n=abs((seq_id(u)).n) to_power p by Def1; thus
        0 <= abs((seq_id(v)).n) by COMPLEX1:132; thus
        0 < abs((seq_id(v)).n) or 0=abs((seq_id(v)).n) by COMPLEX1:132;
        hence 0 <= vp.n by A1,A10,POWER:39,def 2; thus
        0 <= abs((seq_id(u)).n) by COMPLEX1:132; thus
        0 < abs((seq_id(u)).n) or 0=abs((seq_id(u)).n) by COMPLEX1:132;
        hence 0 <= up.n by A1,A11,POWER:39,def 2;
      end;
      then
A12:  Partial_Sums(up) is non-decreasing by SERIES_1:19;
      Partial_Sums(up) is bounded_above by A6,A9,SERIES_1:20;
      then consider r1 be real number such that
A13:  for n be set st n in dom Partial_Sums(up)
      holds Partial_Sums(up).n<r1 by SEQ_2:def 1;
      reconsider r1 as Real by XREAL_0:def 1;
A14:  now
        let n be set such that
A15:    n in dom Partial_Sums(up);
        reconsider n1=n as Element of NAT by A15,SEQ_1:4;
A16:    Partial_Sums(up).0<=Partial_Sums(up).n1 by A12,SEQM_3:21;
        0<=up.0 by A9;
        then 0<=Partial_Sums(up).0 by SERIES_1:def 1;
        hence (Partial_Sums(up).n) to_power p1 < r1 to_power p1
        by A7,A13,A15,A16,Th1;
      end;
A17:  Partial_Sums(vp) is non-decreasing by A9,SERIES_1:19;
      Partial_Sums(vp) is bounded_above by A5,A9,SERIES_1:20;
      then consider r be real number such that
A18:  for n be set st n in dom Partial_Sums(vp)
      holds Partial_Sums(vp).n<r by SEQ_2:def 1;
      reconsider r as Real by XREAL_0:def 1;
      now
        let n be set such that
A19:    n in dom Partial_Sums(vp);
        reconsider n1=n as Element of NAT by A19,SEQ_1:4;
A20:    Partial_Sums(vp).0<=Partial_Sums(vp).n1 by A17,SEQM_3:21;
        0<=vp.0 by A9;
        then 0<=Partial_Sums(vp).0 by SERIES_1:def 1;
        hence (Partial_Sums(vp).n) to_power p1 < r to_power p1
        by A7,A18,A19,A20,Th1;
      end;
      then consider q be Real such that
A21:  for n be set st n in dom Partial_Sums(vp)
      holds (Partial_Sums(vp).n) to_power p1 <q;
      consider q1 be Real such that
A22:  for n be set st n in dom Partial_Sums(up)
      holds (Partial_Sums(up).n) to_power p1 <q1 by A14;
      set g = q + q1;
      v in the_set_of_RealSequences by A1,A3,Def2;
      then reconsider vq=v as Real_Sequence by RSSPACE:def 1;
      u in the_set_of_RealSequences by A1,A3,Def2;
      then reconsider uq=u as Real_Sequence by RSSPACE:def 1;
A23:  vp = vq rto_power p by RSSPACE:3;
A24:  up = uq rto_power p by RSSPACE:3;
      now
        let n be Element of NAT;
        NAT=dom Partial_Sums(up) by SEQ_1:4;
        then
A25:    (Partial_Sums(up).n) to_power p1 <q1 by A22;
        NAT=dom Partial_Sums(vp) by SEQ_1:4;
        then
A26:    (Partial_Sums(up).n) to_power (1/p) +
        (Partial_Sums(vp).n) to_power (1/p) < g by A21,A25,XREAL_1:10;
        (Partial_Sums((vq + uq) rto_power p).n) to_power (1/p) <=
        (Partial_Sums(up).n) to_power (1/p) +
        (Partial_Sums(vp).n) to_power (1/p) by A1,A23,A24,Th2;
        then
A27:    (Partial_Sums((vq + uq) rto_power p).n) to_power (1/p)
        < g by A26,XXREAL_0:2;
A28:    now
          assume (Partial_Sums((vq + uq) rto_power p).n) > 0;

hence (Partial_Sums((vq + uq) rto_power p).n) to_power (1/p) to_power p =

(Partial_Sums((vq + uq) rto_power p).n) to_power ((1/p)*p) by POWER:38
            .= (Partial_Sums((vq + uq) rto_power p).n) by A8,POWER:30;
        end;
A29:    now
          assume
A30:      (Partial_Sums((vq + uq) rto_power p).n) = 0;

hence (Partial_Sums((vq + uq) rto_power p).n) to_power (1/p) to_power p =
          0 to_power p by A7,POWER:def 2
            .= (Partial_Sums((vq + uq) rto_power p).n) by A1,A30,POWER:def 2;
        end; thus
A31:    now
          let n be Element of NAT;
A32:      ((vq + uq) rto_power p).n =abs((vq + uq).n) to_power p by Def1; thus
          0 < abs((vq + uq).n) or 0=abs((vq + uq).n) by COMPLEX1:132;
          hence 0 <= ((vq + uq) rto_power p).n by A1,A32,POWER:39,def 2;
        end;
        then
A33:    Partial_Sums((vq + uq) rto_power p) is non-decreasing by SERIES_1:19;
A34:    now
A35:      Partial_Sums((vq + uq) rto_power p).0
          <=Partial_Sums((vq + uq) rto_power p).n by A33,SEQM_3:21;
A36:      0<=((vq + uq) rto_power p).0 by A31;
          hence 0<=Partial_Sums((vq + uq) rto_power p).0 by SERIES_1:def 1;

thus 0<=Partial_Sums((vq + uq) rto_power p).n by A35,A36,SERIES_1:def 1;
        end;
        then (Partial_Sums((vq + uq) rto_power p).n) to_power (1/p)
        >=0 by A7,Lm1;
        hence (Partial_Sums((vq + uq) rto_power p).n) < g to_power p
        by A1,A27,A28,A29,A34,Th1;
      end;
      then
A37:  for n be Element of NAT holds (Partial_Sums((vq + uq) rto_power p)
      is bounded_above & 0 <= ((vq + uq) rto_power p).n ) by SEQ_2:def 3;
A38:  seq_id(v)=vq by RSSPACE:3;
A39:  seq_id(u)=uq by RSSPACE:3;
      seq_id(v)+seq_id(u) =seq_id(seq_id(v)+seq_id(u)) by RSSPACE:3
        .=seq_id(v+u) by RSSPACE:4,def 7;
      hence ((seq_id(v+u)) rto_power p) is summable by A37,A38,A39,SERIES_1:20;
    end;
    v + u =seq_id(v)+seq_id(u) by RSSPACE:4,def 7
      .=seq_id(seq_id(v)+seq_id(u)) by RSSPACE:3
      .=seq_id(v+u) by RSSPACE:4,def 7;
    then reconsider w = v + u as Real_Sequence;
    reconsider w as set;
    w in the_set_of_RealSequences by RSSPACE:def 1;
    hence v +u in W by A1,A4,Def2;
  end;
  for a be Real for v be VECTOR of Linear_Space_of_RealSequences
  st v in W holds a * v in W
  proof
    let a be Real;
    let v be VECTOR of Linear_Space_of_RealSequences such that
A40: v in W;
    seq_id(a*v) rto_power p is summable
    proof
      set vp = seq_id(v) rto_power p;
A41:  vp is summable by A1,A40,Def2;
      set p1=1/p;
      now
        let n be Element of NAT;
A42:    vp.n=abs((seq_id(v)).n) to_power p by Def1;thus
        0 <= abs((seq_id(v)).n) by COMPLEX1:132; thus
        0 < abs((seq_id(v)).n) or 0=abs((seq_id(v)).n) by COMPLEX1:132;
        hence 0 <= vp.n by A1,A42,POWER:39,def 2;
      end;
      then
A43:  Partial_Sums(vp) is bounded_above by A41,SERIES_1:20;
      set q1 = seq_id(a*v) rto_power p;
      reconsider a1=a as real number;
      v in the_set_of_RealSequences by A1,A40,Def2;
      then reconsider vq=v as Real_Sequence by RSSPACE:def 1;
      reconsider v1=v as VECTOR of
      RLSStruct(# the_set_of_RealSequences,Zeroseq,l_add,l_mult #)
      by A1,A40,Def2;
A44:  seq_id(a*v)= seq_id(a(#)seq_id(v)) by RSSPACE:5,def 7
        .=(a(#)seq_id(v)) by RSSPACE:3;
A45:  for n be Element of NAT holds Partial_Sums(seq_id(a*v) rto_power p).n
      = (abs(a) to_power p)* Partial_Sums(seq_id(v) rto_power p).n
      proof
A46:    now
          let n be Element of NAT;
A47:      abs(a)>=0 by COMPLEX1:132;
A48:      abs((seq_id(v)).n) >= 0 by COMPLEX1:132;
A49:      (a(#)seq_id(v)).n = a * (seq_id(v)).n by SEQ_1:13;
          ((a(#)seq_id(v)) rto_power p).n
          = abs((a(#)seq_id(v)).n) to_power p by Def1
            .=((abs(a)* abs((seq_id(v)).n))) to_power p by A49,COMPLEX1:151
            .=(abs(a) to_power p)
          * ((abs((seq_id(v)).n)) to_power p) by A1,A47,A48,Lm2;
          hence (seq_id(a*v) rto_power p).n = (abs(a) to_power p)
          * ((seq_id(v)) rto_power p).n by A44,Def1
            .= ((abs(a) to_power p)
          (#) ((seq_id(v)) rto_power p)).n by SEQ_1:13;
        end;
A50:    (seq_id(a*v) rto_power p)= ((abs(a) to_power p)
        (#) ((seq_id(v)) rto_power p))
        proof
          for n be set st n in NAT holds
          (seq_id(a*v) rto_power p).n= ((abs(a) to_power p)
          (#) ((seq_id(v)) rto_power p)).n by A46;
          hence (seq_id(a*v) rto_power p)= ((abs(a) to_power p)
          (#) ((seq_id(v)) rto_power p)) by SEQ_1:8;
        end;
A51:    Partial_Sums(((abs(a) to_power p) (#) ((seq_id(v)) rto_power p)))
        = ((abs(a) to_power p) (#)Partial_Sums( ((seq_id(v)) rto_power p)))
        by SERIES_1:12;
        let n be Element of NAT;
        thus Partial_Sums(seq_id(a*v) rto_power p).n =(abs(a) to_power p)
        * Partial_Sums ((seq_id(v)) rto_power p).n by A50,A51,SEQ_1:13;
      end;
      consider r be real number such that
A52:  for n be set st n in dom Partial_Sums(seq_id(v) rto_power p)
      holds Partial_Sums(vp).n<r by A43,SEQ_2:def 1;
A53:  (0<(abs(a) to_power p)) or 0=(abs(a) to_power p) by A1,Lm1,COMPLEX1:132;
A54:  now
        let n be set such that
A55:    n in dom Partial_Sums(seq_id(v) rto_power p);
        dom Partial_Sums(seq_id(v) rto_power p)= NAT by SEQ_1:3;
        hence n in dom Partial_Sums(seq_id(a*v) rto_power p) by A55,SEQ_1:3;
        thus ( ((abs(a) to_power p) * Partial_Sums(seq_id(v) rto_power p).n
        < (abs(a) to_power p) * r )) or ( ((abs(a) to_power p) *
        Partial_Sums(seq_id(v) rto_power p).n )
        = (abs(a) to_power p) * r ) by A52,A53,A55,XREAL_1:70;
      end;
A56:  for n be set st n in dom Partial_Sums(seq_id(a*v) rto_power p)
      holds Partial_Sums(seq_id(a*v) rto_power p).n
      <(abs(a) to_power p) * r or
      Partial_Sums(seq_id(a*v) rto_power p).n = (abs(a) to_power p) * r
      proof
        let n be set such that
A57:    n in dom Partial_Sums(seq_id(a*v) rto_power p);
        n in NAT by A57,SEQ_1:3;
        then n in dom Partial_Sums(seq_id(v) rto_power p) by SEQ_1:3;
        then
A58:    (abs(a) to_power p) * Partial_Sums(seq_id(v) rto_power p). n
        < (abs(a) to_power p) * r or ( ((abs(a) to_power p) *
        Partial_Sums(seq_id(v) rto_power p).n )
        = (abs(a) to_power p) * r ) by A54;
        reconsider n1=n as Element of NAT by A57,SEQ_1:3;
        Partial_Sums(seq_id(a*v) rto_power p).n1 <(abs(a) to_power p) * r or
        Partial_Sums(seq_id(a*v) rto_power p).n1
        =(abs(a) to_power p) * r by A45,A58;
        hence Partial_Sums(seq_id(a*v) rto_power p).n
        <(abs(a) to_power p) * r or Partial_Sums(seq_id(a*v) rto_power p).n
        =(abs(a) to_power p) * r;
      end;
A59:  ex r1 be real number st for n be set st n in
      dom Partial_Sums(seq_id(a*v) rto_power p) holds
      Partial_Sums(seq_id(a*v) rto_power p).n<r1
      proof
        take r1 = (abs(a) to_power p) * r + 1;
        reconsider r1 as real number;
        for n be set st n in dom Partial_Sums(seq_id(a*v) rto_power p)
        holds Partial_Sums(seq_id(a*v) rto_power p).n<r1
        proof
          let n be set such that
A60:      n in dom Partial_Sums(seq_id(a*v) rto_power p);
          reconsider n1=n as Element of NAT by A60,SEQ_1:3;
          (abs(a) to_power p) * r <(abs(a) to_power p) * r +1 by XREAL_1:31;
          hence thesis by A56,A60,XXREAL_0:2;
        end;
        hence thesis;
      end;
A61:  for n be Element of NAT holds (seq_id(a*v) rto_power p).n >= 0
      proof
        let n be Element of NAT;
A62:    (a(#)seq_id(v)).n = a * (seq_id(v)).n by SEQ_1:13;
        set b = (a(#)seq_id(v));
        (b rto_power p).n = abs(a * (seq_id(v)).n) to_power p by A62,Def1;
        hence (seq_id(a*v) rto_power p).n >= 0 by A1,A44,Lm1,COMPLEX1:132;
      end;
      Partial_Sums(seq_id(a*v) rto_power p) is bounded_above
      by A59,SEQ_2:def 1;
      hence (seq_id(a*v) rto_power p) is summable by A61,SERIES_1:20;
    end;
    hence a*v in W by A1,Def2,RSSPACE:def 7;
  end;
  hence thesis by A2,RLSUB_1:def 1;
end;

theorem Th5:
  for p be Real st 1 <= p holds RLSStruct (# the_set_of_RealSequences_l^p,
    Zero_(the_set_of_RealSequences_l^p,Linear_Space_of_RealSequences),
    Add_(the_set_of_RealSequences_l^p,Linear_Space_of_RealSequences),
    Mult_(the_set_of_RealSequences_l^p,Linear_Space_of_RealSequences) #)
  is Subspace of Linear_Space_of_RealSequences
proof
  let p be Real such that
A1: 1 <= p;
  the_set_of_RealSequences_l^p is linearly-closed by A1,Th4;
  hence thesis by RSSPACE:13;
end;

theorem
  for p be Real st 1 <= p holds RLSStruct (# the_set_of_RealSequences_l^p,
    Zero_(the_set_of_RealSequences_l^p,Linear_Space_of_RealSequences),
    Add_(the_set_of_RealSequences_l^p,Linear_Space_of_RealSequences),
    Mult_(the_set_of_RealSequences_l^p,Linear_Space_of_RealSequences) #)
  is Abelian add-associative right_zeroed right_complementable
  RealLinearSpace-like by Th5;

theorem
  for p be Real st 1 <= p holds RLSStruct (# the_set_of_RealSequences_l^p,
    Zero_(the_set_of_RealSequences_l^p,Linear_Space_of_RealSequences),
    Add_(the_set_of_RealSequences_l^p,Linear_Space_of_RealSequences),
    Mult_(the_set_of_RealSequences_l^p,Linear_Space_of_RealSequences) #)
  is RealLinearSpace by Th5;

Lm5: for p be Real holds
ex NORM be Function of the_set_of_RealSequences_l^p,REAL st
for x be set st x in the_set_of_RealSequences_l^p holds
NORM.x =( Sum(seq_id(x) rto_power p) ) to_power (1/p)
proof
  let p be Real;
  deffunc F(set) =( Sum(seq_id($1) rto_power p) ) to_power (1/p);
A1: for z be set st z in the_set_of_RealSequences_l^p holds F(z) in REAL;
  ex f being Function of the_set_of_RealSequences_l^p,REAL st
  for x being set st x in the_set_of_RealSequences_l^p holds
  f.x = F(x) from FUNCT_2:sch 2(A1);
  hence thesis;
end;

definition
  let p be Real;
  func l_norm^p -> Function of the_set_of_RealSequences_l^p, REAL means
  :Def3:
  for x be set st x in the_set_of_RealSequences_l^p holds
  it.x = ( Sum(seq_id(x) rto_power p) ) to_power (1/p);
  existence by Lm5;
  uniqueness
  proof
    let NORM1,NORM2 be Function of the_set_of_RealSequences_l^p, REAL such that
A1: (for x be set st x in the_set_of_RealSequences_l^p holds
    NORM1.x = ( Sum(seq_id(x) rto_power p) ) to_power (1/p) ) and
A2: (for x be set st x in the_set_of_RealSequences_l^p holds
    NORM2.x = ( Sum(seq_id(x) rto_power p) ) to_power (1/p));
A3: dom NORM1 = the_set_of_RealSequences_l^p &
    dom NORM2 = the_set_of_RealSequences_l^p by FUNCT_2:def 1;
    for z be set st z in the_set_of_RealSequences_l^p holds NORM1.z = NORM2.z
    proof
      let z be set such that
A4:   z in the_set_of_RealSequences_l^p;
      NORM1.z = ( Sum(seq_id(z) rto_power p) ) to_power (1/p) by A1,A4;
      hence thesis by A2,A4;
    end;
    hence thesis by A3,FUNCT_1:9;
  end;
end;

theorem Th8:
  for p be Real st 1 <= p holds NORMSTR (# the_set_of_RealSequences_l^p,
    Zero_(the_set_of_RealSequences_l^p,Linear_Space_of_RealSequences),
    Add_(the_set_of_RealSequences_l^p,Linear_Space_of_RealSequences),
    Mult_(the_set_of_RealSequences_l^p,Linear_Space_of_RealSequences),
    l_norm^p #) is RealLinearSpace
proof
  let p be Real such that
A1: 1 <= p;
  RLSStruct (# the_set_of_RealSequences_l^p,
    Zero_(the_set_of_RealSequences_l^p,Linear_Space_of_RealSequences),
    Add_(the_set_of_RealSequences_l^p,Linear_Space_of_RealSequences),
    Mult_(the_set_of_RealSequences_l^p,Linear_Space_of_RealSequences) #)
  is RealLinearSpace by A1,Th5;
  hence thesis by RSSPACE3:4;
end;

theorem Th9:
  for p be Real st p >= 1 holds NORMSTR (# the_set_of_RealSequences_l^p,
    Zero_(the_set_of_RealSequences_l^p,Linear_Space_of_RealSequences),
    Add_(the_set_of_RealSequences_l^p,Linear_Space_of_RealSequences),
    Mult_(the_set_of_RealSequences_l^p,Linear_Space_of_RealSequences),
    l_norm^p #) is Subspace of Linear_Space_of_RealSequences
proof
  let p be Real such that
A1: 1 <= p;
  set lSpacep = NORMSTR (# the_set_of_RealSequences_l^p,
    Zero_(the_set_of_RealSequences_l^p,Linear_Space_of_RealSequences),
    Add_(the_set_of_RealSequences_l^p,Linear_Space_of_RealSequences),
    Mult_(the_set_of_RealSequences_l^p,Linear_Space_of_RealSequences),
    l_norm^p #);
  reconsider lSpacep as RealLinearSpace by A1,Th8;
  set w1= the RLSStruct of lSpacep;
  set V =Linear_Space_of_RealSequences;
A2: w1 is Subspace of V by A1,Th5;
  then
A3: the carrier of w1 c= the carrier of V & 0.w1 = 0.V &
  the addF of w1 = (the addF of V)||the carrier of w1 &
  the Mult of w1 = (the Mult of V) | [:REAL, the carrier of w1:]
  by RLSUB_1:def 2;
  lSpacep is Subspace of V
  proof
    thus the carrier of lSpacep c= the carrier of V;
    thus 0.lSpacep = 0.V by A3;
    thus thesis by A2,RLSUB_1:def 2;
  end;
  hence thesis;
end;

begin :: The Banach Space of l^p Real Sequences

theorem Th10:
  for p be Real st 1 <=p holds for lp be non empty NORMSTR st lp
  = NORMSTR (# the_set_of_RealSequences_l^p,
    Zero_(the_set_of_RealSequences_l^p,Linear_Space_of_RealSequences),
    Add_(the_set_of_RealSequences_l^p,Linear_Space_of_RealSequences),
    Mult_(the_set_of_RealSequences_l^p,Linear_Space_of_RealSequences),
    l_norm^p #) holds the carrier of lp = the_set_of_RealSequences_l^p &
  ( for x be set holds x is VECTOR of lp
  iff x is Real_Sequence & seq_id(x) rto_power p is summable ) &
  0.lp = Zeroseq & ( for x be VECTOR of lp holds x =seq_id(x) ) &
  ( for x,y be VECTOR of lp holds x+y =seq_id(x)+seq_id(y) ) &
  ( for r be Real for x be VECTOR of lp holds r*x = r(#)seq_id(x) ) &
  ( for x be VECTOR of lp holds -x = -seq_id(x) & seq_id(-x) = -seq_id(x) ) &
  ( for x,y be VECTOR of lp holds x-y =seq_id(x)-seq_id(y) ) &
  ( for x be VECTOR of lp holds seq_id(x) rto_power p is summable ) &
  ( for x be VECTOR of
  lp holds ||.x.|| = ( Sum(seq_id(x) rto_power p) ) to_power (1/p) )
proof
  let p be Real such that
A1: 1<= p;
  let lp be non empty NORMSTR such that
A2: lp = NORMSTR (# the_set_of_RealSequences_l^p,
    Zero_(the_set_of_RealSequences_l^p,Linear_Space_of_RealSequences),
    Add_(the_set_of_RealSequences_l^p,Linear_Space_of_RealSequences),
    Mult_(the_set_of_RealSequences_l^p,Linear_Space_of_RealSequences),
    l_norm^p #);
A3: for x be set holds x is Element of lp
  iff x is Real_Sequence & seq_id(x) rto_power p is summable
  proof
    let x be set;
    x in the_set_of_RealSequences_l^p iff seq_id(x) rto_power p
    is summable & x in the_set_of_RealSequences by A1,Def2;
    hence thesis by A2,RSSPACE:def 1;
  end;
A4: for x be set holds x is VECTOR of lp implies x =seq_id(x)
  proof
    let x be set;
    x in the_set_of_RealSequences iff x is Real_Sequence by RSSPACE:def 1;
    hence thesis by A1,A2,Def2,RSSPACE:3;
  end;
A5: 0.lp = Zeroseq
  proof
    the_set_of_RealSequences_l^p is linearly-closed by A1,Th4;
    hence 0.lp = 0.Linear_Space_of_RealSequences by A2,RSSPACE:def 10
      .= Zeroseq by RSSPACE:def 7;
  end;
A6: for x,y be VECTOR of lp holds x+y =seq_id(x)+seq_id(y)
  proof
    let x,y be VECTOR of lp;
A7: lp is Subspace of Linear_Space_of_RealSequences by A1,A2,Th9;
    then reconsider x1=x as
    VECTOR of Linear_Space_of_RealSequences by RLSUB_1:18;
    reconsider y1=y as
    VECTOR of Linear_Space_of_RealSequences by A7,RLSUB_1:18;
    set L1=Linear_Space_of_RealSequences;
    set W = the_set_of_RealSequences_l^p;
A8: W is linearly-closed by A1,Th4;
    dom (the addF of L1)
    = [:the carrier of L1,the carrier of L1:] by FUNCT_2:def 1;
    then
A9: dom ((the addF of Linear_Space_of_RealSequences)||W)
    =[:W,W:] by RELAT_1:91;
    x+y= ((the addF of Linear_Space_of_RealSequences)||W).[x,y]
    by A2,A8,RSSPACE:def 8
      .=x1+y1 by A2,A9,FUNCT_1:70;
    hence thesis by RSSPACE:4,def 7;
  end;
A10: for r be Real for x be VECTOR of lp holds r*x =r(#)seq_id(x)
  proof
    let r be Real;
    let x be VECTOR of lp;
    lp is Subspace of Linear_Space_of_RealSequences by A1,A2,Th9;
    then reconsider x1=x as
    VECTOR of Linear_Space_of_RealSequences by RLSUB_1:18;
    set L1=Linear_Space_of_RealSequences;
    set W = the_set_of_RealSequences_l^p;
    dom (the Mult of L1) = [:REAL,the carrier of L1:] by FUNCT_2:def 1;
    then
A11: dom ((the Mult of Linear_Space_of_RealSequences) | [:REAL,W:])
    =[:REAL,W:] by RELAT_1:91,ZFMISC_1:119;
    W is linearly-closed by A1,Th4;
    then r*x =((the Mult of Linear_Space_of_RealSequences)|[:REAL,W:]).[r,x]
    by A2,RSSPACE:def 9
      .=r*x1 by A2,A11,FUNCT_1:70;
    hence thesis by RSSPACE:5,def 7;
  end;
A12: for x be VECTOR of lp holds (-x =-seq_id(x) & seq_id(-x)=-seq_id(x))
  proof
    let x be VECTOR of lp;
    lp is Subspace of Linear_Space_of_RealSequences by A1,A2,Th9;
    then -x = (-1)*x by RLVECT_1:29
      .= -seq_id(x) by A10;
    hence thesis by A4;
  end;
A13: for x,y be VECTOR of lp holds x-y =seq_id(x)-seq_id(y)
  proof
    let x,y be VECTOR of lp;
    thus x-y = seq_id(x)+seq_id(-y) by A6
      .= seq_id(x)-seq_id(y) by A12;
  end;
  for x be VECTOR of lp holds ||.x.|| =
  ( Sum(seq_id(x) rto_power p) ) to_power (1/p)
  proof
    let x be VECTOR of lp;
    thus ||.x.|| = (the norm of lp).x by NORMSP_1:def 1
      .= ( Sum(seq_id(x) rto_power p) ) to_power (1/p) by A2,Def3;
  end;
  hence thesis by A2,A3,A4,A5,A6,A10,A12,A13;
end;

theorem Th11:
  for p be Real st p>=1 holds for rseq be Real_Sequence
  st (for n be Element of NAT holds rseq.n=0) holds
  (rseq rto_power p is summable & ( Sum(rseq rto_power p) ) to_power (1/p)=0 )
proof
  let p be Real such that
A1: p>=1;
A2: 1/p > 0 by A1,REAL_2:127;
  let rseq be Real_Sequence such that
A3: for n be Element of NAT holds rseq.n=0;
A4: for n be Element of NAT holds (rseq rto_power p).n=0
  proof
    let n be Element of NAT;
    rseq.n=0 by A3;
    then abs((rseq).n) =0 by ABSVALUE:7;
    then abs((rseq).n) to_power p =0 by A1,POWER:def 2;
    hence thesis by Def1;
  end;
A5: for m be Element of NAT holds Partial_Sums (rseq rto_power p).m = 0
  proof
    let m be Element of NAT;
    defpred P[Element of NAT] means (rseq rto_power p).$1
    = (Partial_Sums(rseq rto_power p)).$1;
A6: P[0] by SERIES_1:def 1;
A7: for k be Element of NAT st P[k] holds P[k+1]
    proof
      let k be Element of NAT such that
A8:   (rseq rto_power p).k = (Partial_Sums (rseq rto_power p)).k;
      thus (rseq rto_power p).(k+1) = 0 + (rseq rto_power p).(k+1)
        .= (rseq rto_power p).k + (rseq rto_power p).(k+1) by A4
        .= (Partial_Sums ((rseq rto_power p))).(k+1) by A8,SERIES_1:def 1;
    end;
    for n be Element of NAT holds P[n] from NAT_1:sch 1(A6,A7);
    hence (Partial_Sums ((rseq rto_power p))).m = (rseq rto_power p).m
      .= 0 by A4;
  end;
  Sum(rseq rto_power p) =0 & (rseq rto_power p) is summable
  proof
A9: for e be real number st 0<e
    ex n be Element of NAT st for m be Element of NAT st n<=m holds
    abs((Partial_Sums (rseq rto_power p)).m-0)<e
    proof
      let e be real number such that
A10:  0<e;
      take 0;
      let m be Element of NAT such that 0<=m;
      abs((Partial_Sums (rseq rto_power p)).m-0) = abs(0-0) by A5
        .= 0 by ABSVALUE:def 1;
      hence abs((Partial_Sums (rseq rto_power p)).m-0)<e by A10;
    end;
    then
A11: Partial_Sums (rseq rto_power p) is convergent by SEQ_2:def 6;
    then lim (Partial_Sums (rseq rto_power p)) =0 by A9,SEQ_2:def 7;
    hence thesis by A11,SERIES_1:def 2,def 3;
  end;
  hence thesis by A2,POWER:def 2;
end;

theorem Th12:
  for p be Real st 1 <=p for rseq be Real_Sequence st
  (rseq rto_power p is summable
  & ( Sum(rseq rto_power p) ) to_power (1/p)=0 ) holds
  for n be natural number holds rseq.n = 0
proof
  let p be Real such that
A1: 1 <=p;
A2: 1/p > 0 by A1,REAL_2:127;
  let rseq being Real_Sequence such that
A3: rseq rto_power p is summable and
A4: Sum(rseq rto_power p) to_power (1/p)=0;
A5: for i be Element of NAT holds ((rseq) rto_power p).i >= 0
  proof
    let i be Element of NAT;
    ( (rseq) rto_power p).i =abs((rseq).i) to_power p by Def1;
    hence ((rseq) rto_power p).i >= 0 by A1,Lm1,COMPLEX1:132;
  end;
  then (Sum(rseq rto_power p) ) >= 0 by A3,SERIES_1:21;
  then ( (Sum(rseq rto_power p) ) to_power (1/p)) to_power p
  =(Sum(rseq rto_power p) ) to_power((1/p)*p) by A1,A2,HOLDER_1:2
    .=(Sum(rseq rto_power p) ) to_power(1) by A1,XCMPLX_1:107
    .=(Sum(rseq rto_power p) ) by POWER:30;
  then
A6: (Sum(rseq rto_power p) ) = 0 by A1,A4,POWER:def 2;
  now
    let n be natural number;
    reconsider n'=n as Element of NAT by ORDINAL1:def 13;
    (rseq rto_power p).n' =abs(rseq.n') to_power p by Def1;
    then
A7: abs(rseq.n) to_power p =0 by A3,A5,A6,RSSPACE:21;
A8: (abs(rseq.n) to_power p) to_power (1/p)
    =abs(rseq.n) to_power (p*(1/p)) by A1,A2,COMPLEX1:132,HOLDER_1:2
      .=abs(rseq.n) to_power (1) by A1,XCMPLX_1:107
      .=abs(rseq.n) by POWER:30;
    0 to_power (1/p) =0 by A2,POWER:def 2;
    hence rseq.n =0 by A7,A8,ABSVALUE:7;
  end;
  hence thesis;
end;

Lm6: for p be Real st 1 <=p for lp be non empty NORMSTR st lp
= NORMSTR (# the_set_of_RealSequences_l^p,
  Zero_(the_set_of_RealSequences_l^p,Linear_Space_of_RealSequences),
  Add_(the_set_of_RealSequences_l^p,Linear_Space_of_RealSequences),
  Mult_(the_set_of_RealSequences_l^p,Linear_Space_of_RealSequences),
  l_norm^p #) holds for x being Point of lp, a be Real holds
(seq_id(a *(x)) rto_power p )= ((abs(a) to_power p)(#)(seq_id(x) rto_power p))
proof
  let p be Real such that
A1: 1<= p;
  let lp be non empty NORMSTR such that
A2: lp = NORMSTR (# the_set_of_RealSequences_l^p,
    Zero_(the_set_of_RealSequences_l^p,Linear_Space_of_RealSequences),
    Add_(the_set_of_RealSequences_l^p,Linear_Space_of_RealSequences),
    Mult_(the_set_of_RealSequences_l^p,Linear_Space_of_RealSequences),
    l_norm^p #);
  let x be Point of lp;
  let a be Real;
  now
    let n1 be set such that
A3: n1 in NAT;
    reconsider n =n1 as Element of NAT by A3;
A4: abs(a) >=0 & abs((seq_id(x)).n) >=0 by COMPLEX1:132;
A5: (seq_id(a *(x)) rto_power p ).n =abs(((seq_id(a*x)).n)) to_power p by Def1
      .=abs(((seq_id(a(#)seq_id(x))).n)) to_power p by A1,A2,Th10
      .=abs(((a(#)seq_id(x)).n)) to_power p by RSSPACE:3
      .=abs(a*(seq_id(x)).n ) to_power p by SEQ_1:13
      .=(abs(a) * abs((seq_id(x)).n)) to_power p by COMPLEX1:151
      .=abs(a) to_power p * abs((seq_id(x)).n) to_power p by A1,A4,Lm2
      .=abs(a) to_power p*(seq_id(x) rto_power p).n by Def1
      .=((abs(a) to_power p)(#)(seq_id(x) rto_power p)).n by SEQ_1:13;
    reconsider n as set;
    thus (seq_id(a *(x)) rto_power p ).n1=
    ((abs(a) to_power p)(#)(seq_id(x) rto_power p)).n1 by A5;
  end;
  hence (seq_id(a *(x)) rto_power p )=
  ((abs(a) to_power p)(#)(seq_id(x) rto_power p)) by SEQ_1:8;
end;

Lm7: for p be Real st 1 <=p for lp be non empty NORMSTR st lp
= NORMSTR (# the_set_of_RealSequences_l^p,
  Zero_(the_set_of_RealSequences_l^p,Linear_Space_of_RealSequences),
  Add_(the_set_of_RealSequences_l^p,Linear_Space_of_RealSequences),
  Mult_(the_set_of_RealSequences_l^p,Linear_Space_of_RealSequences),
  l_norm^p #) holds for x being Point of lp, a be Real holds
( Sum(seq_id(a*x) rto_power p) )
=(abs(a) to_power p) * Sum(seq_id(x) rto_power p)
proof
  let p be Real such that
A1: 1<= p;
  let lp be non empty NORMSTR such that
A2: lp = NORMSTR (# the_set_of_RealSequences_l^p,
    Zero_(the_set_of_RealSequences_l^p,Linear_Space_of_RealSequences),
    Add_(the_set_of_RealSequences_l^p,Linear_Space_of_RealSequences),
    Mult_(the_set_of_RealSequences_l^p,Linear_Space_of_RealSequences),
    l_norm^p #);
  let x be Point of lp;
  let a be Real;
A3: (seq_id(x) rto_power p) is summable by A1,A2,Th10;
  thus ( Sum(seq_id(a*x) rto_power p) )
  = ( Sum((abs(a) to_power p)(#)(seq_id(x) rto_power p)) ) by A1,A2,Lm6
    .=(abs(a) to_power p) * Sum(seq_id(x) rto_power p) by A3,SERIES_1:13;
end;

Lm8: for p be Real st 1 <=p for lp be non empty NORMSTR st lp
= NORMSTR (# the_set_of_RealSequences_l^p,
  Zero_(the_set_of_RealSequences_l^p,Linear_Space_of_RealSequences),
  Add_(the_set_of_RealSequences_l^p,Linear_Space_of_RealSequences),
  Mult_(the_set_of_RealSequences_l^p,Linear_Space_of_RealSequences),
  l_norm^p #) holds for x being Point of lp, a be Real holds
( Sum(seq_id(a*x) rto_power p) ) to_power (1/p)
=(abs(a) )*(Sum(seq_id(x) rto_power p) to_power (1/p))
proof
  let p be Real such that
A1: 1<= p;
  let lp be non empty NORMSTR such that
A2: lp = NORMSTR (# the_set_of_RealSequences_l^p,
    Zero_(the_set_of_RealSequences_l^p,Linear_Space_of_RealSequences),
    Add_(the_set_of_RealSequences_l^p,Linear_Space_of_RealSequences),
    Mult_(the_set_of_RealSequences_l^p,Linear_Space_of_RealSequences),
    l_norm^p #);
A3: (1/p)>0 by A1,REAL_2:127;
  let x be Point of lp;
  let a be Real;
A4: (seq_id(x) rto_power p) is summable by A1,A2,Th10;
  now
    let n be Element of NAT;
    (seq_id(x) rto_power p).n =abs((seq_id(x)).n) to_power p by Def1;
    hence (seq_id(x) rto_power p).n >= 0 by A1,Lm1,COMPLEX1:132;
  end;
  then
A5: 0<=Sum(seq_id(x) rto_power p) by A4,SERIES_1:21;
A6: (abs(a) to_power p) >= 0 by A1,Lm1,COMPLEX1:132;
  thus ( Sum(seq_id(a*x) rto_power p) ) to_power (1/p)
  =((abs(a) to_power p) * Sum(seq_id(x) rto_power p) )
  to_power (1/p) by A1,A2,Lm7
    .= ((abs(a) to_power p) to_power (1/p)) *
  ( Sum(seq_id(x) rto_power p) to_power (1/p)) by A3,A5,A6,Lm2
    .= (abs(a) to_power (p*(1/p))) *
  ( Sum(seq_id(x) rto_power p) to_power (1/p))
  by A1,A3,COMPLEX1:132,HOLDER_1:2
    .= (abs(a) to_power 1) *
  ( Sum(seq_id(x) rto_power p) to_power (1/p)) by A1,XCMPLX_1:107
    .= abs(a)* ( Sum(seq_id(x) rto_power p) to_power (1/p)) by POWER:30;
end;

theorem Th13:
  for p be Real st 1 <= p for lp be non empty NORMSTR st lp
  = NORMSTR (# the_set_of_RealSequences_l^p,
    Zero_(the_set_of_RealSequences_l^p,Linear_Space_of_RealSequences),
    Add_(the_set_of_RealSequences_l^p,Linear_Space_of_RealSequences),
    Mult_(the_set_of_RealSequences_l^p,Linear_Space_of_RealSequences),
    l_norm^p #) holds for x, y being Point of lp, a be Real holds
  ( ||.x.|| = 0 iff x = 0.lp ) & 0 <= ||.x.|| &
  ||.x+y.|| <= ||.x.|| + ||.y.|| & ||.(a*x).|| = abs(a) * ||.x.||
proof
  let p be Real such that
A1: 1<= p;
  let lp be non empty NORMSTR such that
A2: lp = NORMSTR (# the_set_of_RealSequences_l^p,
    Zero_(the_set_of_RealSequences_l^p,Linear_Space_of_RealSequences),
    Add_(the_set_of_RealSequences_l^p,Linear_Space_of_RealSequences),
    Mult_(the_set_of_RealSequences_l^p,Linear_Space_of_RealSequences),
    l_norm^p #);
  let x, y be Point of lp;
  let a be Real;
A3: 1/p > 0 by A1,REAL_2:127;
A4: now
    assume
A5: ||.x.|| = 0;
A6: ||.x.|| = (the norm of lp). x by NORMSP_1:def 1
      .= ( Sum(seq_id(x) rto_power p) ) to_power (1/p) by A2,Def3;
    seq_id(x) rto_power p is summable by A1,A2,Th10;
    then
A7: for n be Element of NAT holds 0 = (seq_id(x)).n by A1,A5,A6,Th12;
    x in the_set_of_RealSequences by A1,A2,Def2;
    hence x = Zeroseq by A7,RSSPACE:def 6
      .=0.lp by A1,A2,Th10;
  end;
A8: now
    assume x=0.lp;
    then x=Zeroseq by A1,A2,Th10;
    then
A9: for n be Element of NAT holds (seq_id(x)).n=0 by RSSPACE:def 6;
    thus ||.x.|| = (the norm of lp). x by NORMSP_1:def 1
      .= ( Sum(seq_id(x) rto_power p) ) to_power (1/p) by A2,Def3
      .= 0 by A1,A9,Th11;
  end;
A10: for n be Element of NAT holds 0 <= (seq_id(x) rto_power p).n
  proof
    let n be Element of NAT;
    set xp=seq_id(x) rto_power p;
A11: xp.n=abs((seq_id(x)).n) to_power p by Def1;
    0 < abs((seq_id(x)).n) or 0=abs((seq_id(x)).n) by COMPLEX1:132;
    hence 0 <= xp.n by A1,A11,POWER:39,def 2;
  end;
  seq_id(x) rto_power p is summable by A1,A2,Def2;
  then
A12: 0<= ( Sum(seq_id(x) rto_power p) ) by A10,SERIES_1:21;
A13: ( Sum(seq_id(x) rto_power p) ) to_power (1/p) = (the norm of lp). x
  by A2,Def3
    .= ||.x.|| by NORMSP_1:def 1;
A14: now
A15: ||.x.|| = (the norm of lp). x by NORMSP_1:def 1
      .= ( Sum(seq_id(x) rto_power p) ) to_power (1/p) by A2,Def3;
A16: ||.y.|| = (the norm of lp). y by NORMSP_1:def 1
      .= ( Sum(seq_id(y) rto_power p) ) to_power (1/p) by A2,Def3;
    ((seq_id(x))+(seq_id(y))) =seq_id((seq_id(x))+(seq_id(y))) by RSSPACE:3
      .=seq_id(x+y) by A1,A2,Th10;
    then
A17: Sum((((seq_id(x))+(seq_id(y))) rto_power p)) to_power (1/p)
    = (the norm of lp).(x+y) by A2,Def3
      .= ||.x + y.|| by NORMSP_1:def 1;
A18: (seq_id(x) rto_power p) is summable by A1,A2,Th10;
    (seq_id(y) rto_power p) is summable by A1,A2,Th10;
    hence ||.x + y.|| <= ||.x.|| + ||.y.|| by A1,A15,A16,A17,A18,Th3;
  end;
A19: ||.x.|| = (the norm of lp). x by NORMSP_1:def 1
    .= ( Sum(seq_id(x) rto_power p) ) to_power (1/p) by A2,Def3;
  ||.(a*x).|| = (the norm of lp). (a*x) by NORMSP_1:def 1
    .= ( Sum(seq_id(a*x) rto_power p) ) to_power (1/p) by A2,Def3
    .=(abs(a))* ||.x.|| by A1,A2,A19,Lm8;
  hence thesis by A3,A4,A8,A12,A13,A14,Lm1;
end;

theorem Th14:
  for p be Real st p >= 1 for lp be non empty NORMSTR
  st lp = NORMSTR (# the_set_of_RealSequences_l^p,
    Zero_(the_set_of_RealSequences_l^p,Linear_Space_of_RealSequences),
    Add_(the_set_of_RealSequences_l^p,Linear_Space_of_RealSequences),
    Mult_(the_set_of_RealSequences_l^p,Linear_Space_of_RealSequences),
    l_norm^p #) holds lp is RealNormSpace-like
proof
  let p be Real such that
A1: p >=1;
  let lp be non empty NORMSTR such that
A2: lp = NORMSTR (# the_set_of_RealSequences_l^p,
    Zero_(the_set_of_RealSequences_l^p,Linear_Space_of_RealSequences),
    Add_(the_set_of_RealSequences_l^p,Linear_Space_of_RealSequences),
    Mult_(the_set_of_RealSequences_l^p,Linear_Space_of_RealSequences),
    l_norm^p #);
  for x, y being Point of lp, a be Real holds ( ||.x.|| = 0 iff x = 0.lp ) &
  0 <= ||.x.|| & ||.x+y.|| <= ||.x.|| + ||.y.|| &
  ||.(a*x).|| = abs(a) * ||.x.|| by A1,A2,Th13;
  hence thesis by NORMSP_1:def 2;
end;

theorem
  for p be Real st p >= 1 for lp be non empty NORMSTR st lp
  = NORMSTR (# the_set_of_RealSequences_l^p,
    Zero_(the_set_of_RealSequences_l^p,Linear_Space_of_RealSequences),
    Add_(the_set_of_RealSequences_l^p,Linear_Space_of_RealSequences),
    Mult_(the_set_of_RealSequences_l^p,Linear_Space_of_RealSequences),
    l_norm^p #) holds lp is RealNormSpace by Th9,Th14;

Lm9: for p be Real st 0 < p
for c be Real, seq be Real_Sequence st seq is convergent
for rseq be Real_Sequence st
( for i be Element of NAT holds rseq .i = (abs(seq.i -c)) to_power p ) holds
( rseq is convergent & lim rseq = (abs(lim seq-c)) to_power p )
proof
  let p be Real such that
A1: 0 <p;
  let c be Real;
  let seq be Real_Sequence such that
A2: seq is convergent;
  let rseq be Real_Sequence such that
A3: ( for i be Element of NAT holds rseq .i = (abs(seq.i -c)) to_power p );
  deffunc F(set) = abs(seq.$1-c);
  consider b be Real_Sequence such that
A4: for n be Element of NAT holds b.n=F(n) from SEQ_1:sch 1;
A5: b is convergent by A2,A4,RSSPACE3:1;
A6: lim b = abs(lim seq - c) by A2,A4,RSSPACE3:1;
A7: for n be Element of NAT holds 0 <=b.n
  proof
    let n be Element of NAT;
    b.n=abs(seq.n-c) by A4;
    hence thesis by COMPLEX1:132;
  end;
  for n be Element of NAT holds rseq.n=(b.n) to_power p
  proof
    let n be Element of NAT;
    rseq.n=(abs(seq.n -c)) to_power p by A3
      .=(b.n) to_power p by A4;
    hence thesis;
  end;
  hence thesis by A1,A5,A6,A7,HOLDER_1:10;
end;

Lm10: for p be Real st 0 < p
for c be Real, seq, seq1 be Real_Sequence st (seq is convergent
& seq1 is convergent) for rseq be Real_Sequence st
( for i be Element of NAT holds rseq .i = (abs(seq.i -c)) to_power p +seq1.i )
holds
( rseq is convergent & lim rseq = (abs(lim seq-c)) to_power p + lim seq1 )
proof
  let p be Real such that
A1: 0 < p;
  let c be Real;
  let seq,seq1 be Real_Sequence such that
A2: seq is convergent and
A3: seq1 is convergent;
  let rseq be Real_Sequence such that
A4: for i be Element of NAT holds rseq .i =( (abs(seq.i -c)) to_power p )
  + seq1.i;
  deffunc F(set) = abs(seq.$1-c) to_power p;
  consider b be Real_Sequence such that
A5: for n be Element of NAT holds b.n=F(n) from SEQ_1:sch 1;
A6: b is convergent by A1,A2,A5,Lm9;
A7: lim b = (abs(lim seq-c)) to_power p by A1,A2,A5,Lm9;
  now
    let n be Element of NAT;thus
    rseq .n = ( (abs(seq.n -c)) to_power p ) + seq1.n by A4
      .=b.n + seq1.n by A5;
  end;
  then
A8: rseq = b + seq1 by SEQ_1:11;
  hence rseq is convergent by A3,A6,SEQ_2:19;
  thus lim rseq = (abs(lim seq-c)) to_power p + lim seq1 by A3,A6,A7,A8,
  SEQ_2:20;
end;

Lm11: for a,b be Real_Sequence holds a=a+b-b
proof
  let a,b be Real_Sequence;
  now
    let n be Element of NAT;
    (a+(b+(-b))).n=a.n+(b+(-b)).n by SEQ_1:11
      .=a.n+(b.n+(-b).n) by SEQ_1:11
      .=a.n+(b.n+(-b.n)) by SEQ_1:14
      .=a.n;
    hence (a+b-b).n=a.n by SEQ_1:20;
  end;
  hence thesis by FUNCT_2:113;
end;

Lm12: for p be Real st p >= 1
for a,b be Real_Sequence st (a rto_power p is summable &
b rto_power p is summable) holds (a + b) rto_power p is summable
proof
  let p be Real such that
A1: p >= 1;
  let a,b be Real_Sequence such that
A2: a rto_power p is summable and
A3: b rto_power p is summable;
  reconsider a1=a, b1=b as set;
A4: a1 in the_set_of_RealSequences by RSSPACE:def 1;
A5: b1 in the_set_of_RealSequences by RSSPACE:def 1;
A6: seq_id(a1) = a by A4,RSSPACE:def 2;
A7: seq_id(b1) = b by A5,RSSPACE:def 2;
A8: a1 in the_set_of_RealSequences_l^p by A1,A2,A4,A6,Def2;
A9: b1 in the_set_of_RealSequences_l^p by A1,A3,A5,A7,Def2;
  reconsider a1 as VECTOR of Linear_Space_of_RealSequences by A8;
  reconsider b1 as VECTOR of Linear_Space_of_RealSequences by A9;
  the_set_of_RealSequences_l^p is linearly-closed by A1,Th4;
  then
A10: a1+b1 in the_set_of_RealSequences_l^p by A8,A9,RLSUB_1:def 1;
  seq_id(a1+b1)=seq_id(seq_id(a1)+seq_id(b1)) by RSSPACE:4,def 7
    .=a+b by A6,A7,RSSPACE:3;
  hence (a+b) rto_power p is summable by A1,A10,Def2;
end;

theorem Th16:
  for p be Real st 1 <=p for lp be RealNormSpace
  st lp = NORMSTR (# the_set_of_RealSequences_l^p,
    Zero_(the_set_of_RealSequences_l^p,Linear_Space_of_RealSequences),
    Add_(the_set_of_RealSequences_l^p,Linear_Space_of_RealSequences),
    Mult_(the_set_of_RealSequences_l^p,Linear_Space_of_RealSequences),
    l_norm^p #) holds
  for vseq be sequence of lp st vseq is Cauchy_sequence_by_Norm
  holds vseq is convergent
proof
  let p be Real such that
A1: 1<= p;
A2: 1/p > 0 by A1,REAL_2:127;
A3: p * (1/p) = (p*1)/p by XCMPLX_1:75
    .= 1 by A1,XCMPLX_1:60;
  let lp be RealNormSpace such that
A4: lp = NORMSTR (# the_set_of_RealSequences_l^p,
    Zero_(the_set_of_RealSequences_l^p,Linear_Space_of_RealSequences),
    Add_(the_set_of_RealSequences_l^p,Linear_Space_of_RealSequences),
    Mult_(the_set_of_RealSequences_l^p,Linear_Space_of_RealSequences),
    l_norm^p #);
  let vseq be sequence of lp such that
A5: vseq is Cauchy_sequence_by_Norm;
  defpred P[set,set] means ex i be Element of NAT st $1=i &
  ex rseqi be Real_Sequence st
  (for n be Element of NAT holds rseqi.n=(seq_id(vseq.n)).i) &
  rseqi is convergent & $2 = lim rseqi;
A6: for x be set st x in NAT ex y be set st y in REAL & P[x,y]
  proof
    let x be set such that
A7: x in NAT;
    reconsider i=x as Element of NAT by A7;
    deffunc F(Element of NAT) = (seq_id(vseq.$1)).i;
    consider rseqi be Real_Sequence such that
A8: for n be Element of NAT holds rseqi.n= F(n) from SEQ_1:sch 1;
A9: rseqi is convergent
    proof
      now
        let e1 be real number such that
A10:    e1 > 0;
        reconsider e=e1 as Real by XREAL_0:def 1;
        thus ex k be Element of NAT st
        for m be Element of NAT st k <= m holds abs(rseqi.m -rseqi.k) < e1
        proof
          consider k be Element of NAT such that
A11:      for n, m be Element of NAT st ( n >= k & m >= k ) holds
          ||.(vseq.n) - (vseq.m).|| < e by A5,A10,RSSPACE3:10;
          for m being Element of NAT st k <= m holds abs(rseqi.m-rseqi.k) < e
          proof
            let m be Element of NAT such that
A12:        k<=m;
A13:        ||.(vseq.m) - (vseq.k).||
            = (the norm of lp).((vseq.m)-(vseq.k)) by NORMSP_1:def 1
              .= ( Sum(seq_id((vseq.m)-(vseq.k)) rto_power p) )
            to_power (1/p) by A4,Def3;
            then ( Sum(seq_id((vseq.m)-(vseq.k)) rto_power p) ) to_power
            (1/p) < e by A11,A12;
            then
A14:        (( Sum(seq_id((vseq.m)-(vseq.k)) rto_power p) ) to_power
            (1/p)) to_power p < e to_power p by A1,A13,Th1,NORMSP_1:8;
A15:        (seq_id((vseq.m)-(vseq.k)) rto_power p) is summable by A1,A4,Th10;
A16:        now
              let i be Element of NAT;
              (seq_id((vseq.m)-(vseq.k)) rto_power p).i
              =abs((seq_id((vseq.m)-(vseq.k))).i) to_power p by Def1;

hence (seq_id((vseq.m)-(vseq.k)) rto_power p).i >= 0 by A1,Lm1,COMPLEX1:132;
            end;

then 0<=Sum(seq_id((vseq.m)-(vseq.k)) rto_power p) by A15,SERIES_1:21;
            then
A17:        (( Sum(seq_id((vseq.m)-(vseq.k)) rto_power p) ) to_power
            (1/p)) to_power p =( Sum(seq_id((vseq.m)-(vseq.k)) rto_power p) )
            to_power ((1/p)*p) by A1,A2,HOLDER_1:2
              .= ( Sum(seq_id((vseq.m)-(vseq.k)) rto_power p) ) by A3,POWER:30;
A18:        (e to_power p) to_power (1/p)
            = e to_power ((1/p) * p) by A10,POWER:38
              .= e to_power(1) by A1,XCMPLX_1:107
              .=e by POWER:30;
A19:        (seq_id((vseq.m)-(vseq.k)) rto_power p).i <=
            Sum(seq_id((vseq.m)-(vseq.k)) rto_power p) by A15,A16,RSSPACE2:4;
A20:        now
              let a,b,c be Real such that
A21:          a =0 & b>0 & c>0;
              a to_power b =0 by A21,POWER:def 2;
              hence (a to_power b) to_power c =0 by A21,POWER:def 2;
            end;
A22:        now
              let a,b,c be Real such that
A23:          a =0 & b>0 & c>0;
              b*c >0 by A23,REAL_2:122;
              hence a to_power (b *c) =0 by A23,POWER:def 2;
            end;
A24:        now
              let a,b,c be Real such that
A25:          a =0 & b>0 & c>0;
              thus (a to_power b) to_power c = 0 by A20,A25
                .= a to_power (b *c) by A22,A25;
            end;
A26:        for a,b,c be Real st a>=0 & b>0 & c>0 holds
            (a to_power b) to_power c = a to_power (b*c)
            proof
              let a,b,c be Real such that
A27:          a>=0 & b>0 & c>0;
              ((a >0) or (a=0)) & b>0 & c>0 by A27;

hence (a to_power b) to_power c = a to_power (b*c) by A24,POWER:38;
            end;
            (seq_id((vseq.m)-(vseq.k)) rto_power p).i
            =abs((seq_id((vseq.m)-(vseq.k))).i) to_power p by Def1;
            then
A28:        ((seq_id((vseq.m)-(vseq.k)) rto_power p).i) to_power (1/p)

=abs((seq_id((vseq.m)-(vseq.k))).i) to_power (1) by A1,A2,A3,A26,COMPLEX1: 132
              .=abs((seq_id((vseq.m)-(vseq.k))).i) by POWER:30;
A29:        (seq_id((vseq.m)-(vseq.k)) rto_power p).i <e to_power p
            by A14,A17,A19,XXREAL_0:2;
A30:        rseqi.m=(seq_id(vseq.m)).i & rseqi.k=(seq_id(vseq.k)).i by A8;
            reconsider vsem = (vseq.m), vsek = (vseq.k) as VECTOR of lp;
            (vsem)-(vsek) =(seq_id(vsem)) - (seq_id(vsek)) by A1,A4,Th10;
            then abs((seq_id((vseq.m)-(vseq.k))).i)
            =abs((seq_id(vseq.m)+-seq_id(vseq.k)).i) by RSSPACE:3
              .=abs((seq_id(vseq.m)).i+(-(seq_id(vseq.k))).i) by SEQ_1:11
              .=abs((seq_id(vseq.m)).i +-(seq_id(vseq.k)).i) by SEQ_1:14
              .=abs(rseqi.m -rseqi.k) by A30;
            hence abs(rseqi.m -rseqi.k) < e by A2,A16,A18,A28,A29,Th1;
          end;
          hence thesis;
        end;
      end;
      hence rseqi is convergent by SEQ_4:58;
    end;
    take y = lim rseqi;
    thus thesis by A8,A9;
  end;
  consider f be Function of NAT,REAL such that
A31: for x be set st x in NAT holds P[x,f.x] from FUNCT_2:sch 1(A6);
  reconsider tseq=f as Real_Sequence;
A32: now
    let i be Element of NAT;
    reconsider x=i as set;
    ex i0 be Element of NAT st x=i0 & ex rseqi be Real_Sequence st
    ( for n be Element of NAT holds rseqi.n=(seq_id(vseq.n)).i0 ) &
    rseqi is convergent & f.x=lim rseqi by A31;
    hence ex rseqi be Real_Sequence st
    ( for n be Element of NAT holds rseqi.n=(seq_id(vseq.n)).i ) &
    rseqi is convergent & tseq.i=lim rseqi;
  end;
A33: for e be Real st e >0
  ex k be Element of NAT st for n be Element of NAT st n >= k holds
  ((seq_id(tseq)-seq_id(vseq.n)) rto_power p ) is summable &
  Sum((seq_id(tseq)-seq_id(vseq.n)) rto_power p) < e
  proof
    let e2 be Real such that
A34: e2 >0;
    set e=e2/2;
A35: e >0 by A34,SEQ_2:3;
A36: e2 >e by A34,XREAL_1:218;
    set e1=e to_power (1/p);
    e1>0 by A35,POWER:39;
    then consider k be Element of NAT such that
A37: for n, m be Element of NAT st ( n >= k & m >= k ) holds
    ||.(vseq.n) - (vseq.m).|| < e1 by A5,RSSPACE3:10;
A38: for m,n be Element of NAT st ( n >= k & m >= k ) holds
    ((seq_id((vseq.m)-(vseq.n)) rto_power p) is summable &
    Sum( (seq_id((vseq.m)-(vseq.n)) rto_power p) ) < e &
    for i be Element of NAT holds 0 <= ((seq_id((vseq.m)-(vseq.n)))
    rto_power p).i)
    proof
      let m,n be Element of NAT such that
A39:  n >= k & m >= k;
A40:  for i be Element of NAT holds
      (seq_id((vseq.m)-(vseq.n)) rto_power p).i >= 0
      proof
        let i be Element of NAT;
        (seq_id((vseq.m)-(vseq.n)) rto_power p).i
        =abs((seq_id((vseq.m)-(vseq.n))).i) to_power p by Def1;
        hence (seq_id((vseq.m)-(vseq.n)) rto_power p).i >= 0 by A1,Lm1,COMPLEX1
        :132;
      end;
      ||.(vseq.m) - (vseq.n).|| < e1 by A37,A39;
      then (the norm of lp).((vseq.m)-(vseq.n))<e1 by NORMSP_1:def 1;
      then
A41:  (( Sum(seq_id((vseq.m)-(vseq.n)) rto_power p) )
      to_power (1/p)) < e1 by A4,Def3;
      (seq_id((vseq.m)-(vseq.n)) rto_power p) is summable by A1,A4,Th10;
      then
A42:  0<=Sum(seq_id((vseq.m)-(vseq.n)) rto_power p) by A40,SERIES_1: 21;
      then
A43:  (( Sum(seq_id((vseq.m)-(vseq.n)) rto_power p) ) to_power
      (1/p)) to_power p =( Sum(seq_id((vseq.m)-(vseq.n)) rto_power p) )
      to_power ((1/p)*p) by A1,A2,HOLDER_1:2
        .= ( Sum(seq_id((vseq.m)-(vseq.n)) rto_power p) ) by A3,POWER:30;
A44:  e1 to_power p = e to_power ((1/p) * p) by A35,POWER:38
        .= e to_power(1) by A1,XCMPLX_1:107
        .= e by POWER:30;
      (( Sum(seq_id((vseq.m)-(vseq.n)) rto_power p) ) to_power
      (1/p)) >=0 by A2,A42,Lm1;
      hence thesis by A1,A4,A40,A41,A43,A44,Th1,Th10;
    end;
A45: for n be Element of NAT for i be Element of NAT holds
    for rseq be Real_Sequence st ( for m be Element of NAT holds
    rseq.m = Partial_Sums ((seq_id((vseq.m)-(vseq.n))) rto_power p).i ) holds
    ( rseq is convergent & lim rseq =
    Partial_Sums ((seq_id(tseq)-seq_id(vseq.n)) rto_power p) .i )
    proof
      let n be Element of NAT;
A46:  for m,k be Element of NAT holds
      seq_id((vseq.m) - (vseq.k)) = seq_id(vseq.m)-seq_id(vseq.k)
      proof
        let m,k be Element of NAT;
        seq_id((vseq.m) - (vseq.k))
        = seq_id(seq_id((vseq.m))-seq_id((vseq.k))) by A1,A4,Th10;
        hence thesis by RSSPACE:3;
      end;
      defpred P[Element of NAT] means
      for rseq be Real_Sequence st for m be Element of NAT holds
      rseq.m= Partial_Sums ((seq_id((vseq.m)-(vseq.n))) rto_power p).$1 holds
      rseq is convergent & lim rseq = Partial_Sums
      ((seq_id(tseq)-seq_id(vseq.n)) rto_power p).$1;
A47:  P[0]
      proof
        now
          let rseq be Real_Sequence such that
A48:      for m be Element of NAT holds rseq.m= Partial_Sums
          ((seq_id((vseq.m)-(vseq.n))) rto_power p).0; thus
          rseq is convergent & lim rseq = Partial_Sums
          ((seq_id(tseq)-seq_id(vseq.n)) rto_power p).0
          proof
            consider rseq0 be Real_Sequence such that
A49:        ( for m be Element of NAT holds rseq0.m=(seq_id(vseq.m)).0 ) &
            rseq0 is convergent & tseq.0=lim rseq0 by A32;
A50:        for m being Element of NAT holds rseq.m =
            abs(rseq0.m -(seq_id(vseq.n)).0) to_power p
            proof
              let m be Element of NAT;
              rseq.m =Partial_Sums
              ((seq_id((vseq.m)-(vseq.n))) rto_power p).0 by A48
                .= ((seq_id((vseq.m)-(vseq.n))) rto_power p).0
              by SERIES_1:def 1
                .= ((seq_id(vseq.m)-seq_id(vseq.n)) rto_power p).0 by A46
                .=abs((seq_id(vseq.m)+-seq_id(vseq.n)).0) to_power p by Def1
                .=abs((seq_id(vseq.m)).0+(-seq_id(vseq.n)).0) to_power p
              by SEQ_1:11
                .=abs((seq_id(vseq.m)).0+-(seq_id(vseq.n)).0) to_power p
              by SEQ_1:14
                .=abs((seq_id(vseq.m)).0-(seq_id(vseq.n)).0) to_power p;
              hence thesis by A49;
            end;
            then lim rseq = abs(lim(rseq0) -(seq_id(vseq.n)).0) to_power p
            by A1,A49,Lm9
              .= abs(tseq.0+-(seq_id(vseq.n)).0) to_power p by A49
              .=abs(tseq.0+(-(seq_id(vseq.n))).0) to_power p by SEQ_1:14
              .=abs((tseq-(seq_id((vseq.n)))).0) to_power p by SEQ_1:11
              .=abs((seq_id(tseq)+-(seq_id(vseq.n))).0) to_power p by RSSPACE:3
              .=((seq_id(tseq)+-(seq_id(vseq.n))) rto_power p).0 by Def1
              .=Partial_Sums
            ((seq_id(tseq)-(seq_id(vseq.n))) rto_power p).0 by SERIES_1:def 1;
            hence thesis by A1,A49,A50,Lm9;
          end;
        end;
        hence thesis;
      end;
A51:  for i be Element of NAT st P[i] holds P[i+1]
      proof
        now
          let i be Element of NAT such that
A52:      for rseq be Real_Sequence st
          ( for m be Element of NAT holds rseq.m= Partial_Sums
          ((seq_id((vseq.m)-(vseq.n))) rto_power p).i ) holds
          ( rseq is convergent & lim rseq =Partial_Sums
          ((seq_id(tseq)-seq_id(vseq.n)) rto_power p).i);
          thus for rseq be Real_Sequence st
          ( for m be Element of NAT holds rseq.m = Partial_Sums
          ((seq_id((vseq.m)-(vseq.n))) rto_power p).(i+1) ) holds
          ( rseq is convergent & lim rseq =Partial_Sums
          ((seq_id(tseq)-seq_id(vseq.n)) rto_power p).(i+1))
          proof
            let rseq be Real_Sequence such that
A53:        ( for m be Element of NAT holds rseq.m = Partial_Sums
            ((seq_id((vseq.m)-(vseq.n))) rto_power p).(i+1) );
            deffunc F(Element of NAT) = Partial_Sums
            ((seq_id((vseq.$1)-(vseq.n))) rto_power p).i;
            consider rseqb be Real_Sequence such that
A54:        for m be Element of NAT holds rseqb.m = F(m) from SEQ_1:sch 1;
A55:        rseqb is convergent & lim rseqb = Partial_Sums
            ((seq_id(tseq)-seq_id(vseq.n)) rto_power p).i by A52,A54;
            consider rseq0 be Real_Sequence such that
A56:        ( for m be Element of NAT holds rseq0.m=(seq_id(vseq.m)).(i+1) ) &
            rseq0 is convergent & tseq.(i+1)=lim rseq0 by A32;
A57:        now
              let m be Element of NAT;
              thus rseq.m = Partial_Sums
              ((seq_id((vseq.m)-(vseq.n))) rto_power p).(i+1) by A53
                .=((seq_id((vseq.m)-(vseq.n))) rto_power p).(i+1)
              +Partial_Sums((seq_id((vseq.m)-(vseq.n)))
              rto_power p).i by SERIES_1:def 1
                .=((seq_id(vseq.m)-seq_id(vseq.n)) rto_power p).(i+1)
              +Partial_Sums((seq_id((vseq.m)-(vseq.n))) rto_power p).i by A46
                .=((seq_id(vseq.m)-seq_id(vseq.n)) rto_power p).(i+1)
              + rseqb.m by A54
                .= abs((seq_id(vseq.m)+-seq_id(vseq.n)).(i+1))
              to_power p + rseqb.m by Def1
                .= abs((seq_id(vseq.m)).(i+1)+(-seq_id(vseq.n)).(i+1))
              to_power p + rseqb.m by SEQ_1:11
                .= abs((seq_id(vseq.m)).(i+1)+-(seq_id(vseq.n)).(i+1))
              to_power p + rseqb.m by SEQ_1:14
                .= abs((seq_id(vseq.m)).(i+1)-(seq_id(vseq.n)).(i+1))
              to_power p + rseqb.m
                .= abs(rseq0.m-(seq_id(vseq.n)).(i+1))
              to_power p + rseqb.m by A56;
            end;
            then lim rseq = abs(lim rseq0-(seq_id(vseq.n)).(i+1))
            to_power p + lim rseqb by A1,A55,A56,Lm10
              .= abs(tseq.(i+1)+-(seq_id(vseq.n)).(i+1))
            to_power p + lim rseqb by A56
              .= abs(tseq.(i+1)+(-seq_id(vseq.n)).(i+1))
            to_power p + lim rseqb by SEQ_1:14
              .= (abs((tseq-(seq_id(vseq.n))).(i+1))
            to_power p) + lim rseqb by SEQ_1:11
              .= ((tseq-(seq_id(vseq.n)))
            rto_power p).(i+1) + Partial_Sums
            ((seq_id(tseq)-seq_id(vseq.n)) rto_power p).i by A55,Def1
              .= ((seq_id(tseq)-(seq_id(vseq.n)))
            rto_power p).(i+1) + Partial_Sums
            ((seq_id(tseq)-seq_id(vseq.n)) rto_power p).i by RSSPACE:3
              .=Partial_Sums ((seq_id(tseq)-seq_id(vseq.n)) rto_power p).(i+1)
            by SERIES_1:def 1;
            hence thesis by A1,A55,A56,A57,Lm10;
          end;
        end;
        hence thesis;
      end;
      for i be Element of NAT holds P[i] from NAT_1:sch 1(A47,A51);
      hence thesis;
    end;
    for n be Element of NAT st n >= k holds
    ((seq_id(tseq)-seq_id(vseq.n)) rto_power p ) is summable &
    Sum ((seq_id(tseq)-seq_id(vseq.n)) rto_power p ) < e2
    proof
      let n be Element of NAT such that
A58:  n >= k;
A59:  for i be Element of NAT st 0 <= i holds
      Partial_Sums ((seq_id(tseq)-seq_id(vseq.n)) rto_power p).i <=e
      proof
        let i be Element of NAT such that 0 <=i;
        deffunc F(Element of NAT)=
        Partial_Sums ((seq_id((vseq.$1)-(vseq.n))) rto_power p).i;
        consider rseq be Real_Sequence such that
A60:    for m be Element of NAT holds rseq.m = F(m) from SEQ_1:sch 1;
A61:    rseq is convergent by A45,A60;
A62:    lim rseq = Partial_Sums ((seq_id(tseq)-seq_id(vseq.n)) rto_power p) .i
        by A45,A60;
        for m be Element of NAT st m >= k holds rseq.m <= e
        proof
          let m be Element of NAT;
          assume m >= k;
          then
A63:      ((seq_id((vseq.m)-(vseq.n)) rto_power p) is summable &
          Sum( (seq_id((vseq.m)-(vseq.n)) rto_power p) ) < e &
          for i be Element of NAT holds
          0 <= ((seq_id((vseq.m)-(vseq.n))) rto_power p).i ) by A38,A58;
          then
A64:      Partial_Sums ((seq_id((vseq.m)-(vseq.n))) rto_power p) .i
          <=Sum( (seq_id((vseq.m)-(vseq.n)) rto_power p) ) by RSSPACE2:4;
          rseq.m = Partial_Sums ((seq_id((vseq.m)-(vseq.n))) rto_power p). i
          by A60;
          hence thesis by A63,A64,XXREAL_0:2;
        end;
        hence Partial_Sums
        ((seq_id(tseq)-seq_id(vseq.n)) rto_power p) .i <=e by A61,A62,
        RSSPACE2:6;
      end;
A65:  for i be Element of NAT holds
      0 <= ((seq_id(tseq)-seq_id(vseq.n)) rto_power p) .i
      proof
        let i be Element of NAT;
        ((seq_id(tseq)-seq_id(vseq.n)) rto_power p) .i
        =(abs((seq_id(tseq)-seq_id(vseq.n)).i)) to_power p by Def1;
        hence ((seq_id(tseq)-seq_id(vseq.n)) rto_power p) .i >= 0 by A1,Lm1,
        COMPLEX1:132;
      end;
A66:  Partial_Sums
      ((seq_id(tseq)-seq_id(vseq.n)) rto_power p) is bounded_above
      proof
        now
          take e2=e+1;
A67:      e2>e by XREAL_1:31;
          let i be Element of NAT;
          Partial_Sums
          ((seq_id(tseq)-seq_id(vseq.n)) rto_power p) .i <=e by A59,NAT_1:2;
          hence Partial_Sums
          ((seq_id(tseq)-seq_id(vseq.n)) rto_power p) .i <e2
          by A67,XXREAL_0:2;
        end;
        hence thesis by SEQ_2:def 3;
      end;
A68:  Sum ((seq_id(tseq)-seq_id(vseq.n)) rto_power p)
      = lim Partial_Sums((seq_id(tseq)-seq_id(vseq.n)) rto_power p)
      by SERIES_1:def 3;
      ((seq_id(tseq)-seq_id(vseq.n)) rto_power p) is summable
      by A65,A66,SERIES_1:20;
      then Partial_Sums((seq_id(tseq)-seq_id(vseq.n)) rto_power p)
      is convergent by SERIES_1:def 2;
      then lim Partial_Sums
      ((seq_id(tseq)-seq_id(vseq.n)) rto_power p) <= e by A59,RSSPACE2:6;
      hence thesis by A36,A65,A66,A68,SERIES_1:20,XXREAL_0:2;
    end;
    hence thesis;
  end;
  (seq_id(tseq)) rto_power p is summable
  proof
    consider m be Element of NAT such that
A69: for n be Element of NAT st n >= m holds
    ((seq_id(tseq)-seq_id(vseq.n)) rto_power p ) is summable &
    Sum((seq_id(tseq)-seq_id(vseq.n)) rto_power p) < 1 by A33;
A70: ((seq_id(tseq)-seq_id(vseq.m)) rto_power p ) is summable by A69;
A71: seq_id( (vseq.m) ) rto_power p is summable by A1,A4,Def2;
    set a=(seq_id(tseq) -seq_id(vseq.m));
    set b=(seq_id(vseq.m));
    set d=(seq_id(tseq));
    a +b =(seq_id(tseq)+seq_id(vseq.m))+(-seq_id(vseq.m)) by SEQ_1:20
      .=seq_id(tseq)+seq_id(vseq.m)-seq_id(vseq.m)
      .=d by Lm11;
    hence seq_id(tseq) rto_power p is summable by A1,A70,A71,Lm12;
  end;
  then reconsider tv=tseq as Point of lp by A1,A4,Th10;
  for e be Real st e > 0 ex m be Element of NAT st for n be Element of NAT st
  n >= m holds ||.(vseq.n) - tv.|| < e
  proof
    let e be Real such that
A72: e > 0;
    set e1=e to_power p;
    e1>0 by A72,POWER:39;
    then consider m be Element of NAT such that
A73: for n be Element of NAT st n >= m holds ((seq_id(tseq)-seq_id(vseq.n))
    rto_power p ) is summable &
    Sum((seq_id(tseq)-seq_id(vseq.n)) rto_power p) < e1 by A33;
    now
      let n be Element of NAT such that
A74:  n >= m;
A75:  for i be Element of NAT holds
      ((seq_id(tseq)-seq_id(vseq.n)) rto_power p).i >= 0
      proof
        let i be Element of NAT;
        ((seq_id(tseq)-seq_id(vseq.n)) rto_power p).i
        =abs((seq_id(tseq)-seq_id(vseq.n)).i) to_power p by Def1;
        hence ((seq_id(tseq)-seq_id(vseq.n)) rto_power p).i >= 0 by A1,Lm1,
        COMPLEX1:132;
      end;
      ((seq_id(tseq)-seq_id(vseq.n)) rto_power p ) is summable by A73,A74;
      then
A76:  Sum((seq_id(tseq)-seq_id(vseq.n)) rto_power p) >=0 by A75, SERIES_1:21;
A77:  Sum((seq_id(tseq)-seq_id(vseq.n)) rto_power p) < e1 by A73,A74;
A78:  e1 to_power(1/p) = e to_power (p * (1/p)) by A72,POWER:38
        .= e to_power 1 by A1,XCMPLX_1:107
        .= e by POWER:30;
      (Sum((seq_id(tv)-seq_id(vseq.n)) rto_power p)) to_power (1/p )
      =(Sum(seq_id(seq_id(tv)-seq_id(vseq.n)) rto_power p)) to_power (1/p )
      by RSSPACE:3
        .=(Sum(seq_id((tv)-(vseq.n)) rto_power p)) to_power (1/p )
      by A1,A4,Th10
        .=(the norm of lp).((tv)-(vseq.n)) by A4,Def3
        .= ||.(tv)+(-(vseq.n)).|| by NORMSP_1:def 1
        .=||.-(vseq.n-tv).|| by RLVECT_1:47
        .=||.vseq.n-tv.|| by NORMSP_1:6;
      hence ||.vseq.n-tv.|| <e by A2,A76,A77,A78,Th1;
    end;
    hence thesis;
  end;
  hence thesis by NORMSP_1:def 9;
end;

definition
  let p be Real such that
A1: 1 <= p;
  func l_Space^p -> RealBanachSpace equals
  NORMSTR (# the_set_of_RealSequences_l^p,
    Zero_(the_set_of_RealSequences_l^p,Linear_Space_of_RealSequences),
    Add_(the_set_of_RealSequences_l^p,Linear_Space_of_RealSequences),
    Mult_(the_set_of_RealSequences_l^p,Linear_Space_of_RealSequences),
    l_norm^p #);
  coherence
  proof
    set lp= NORMSTR (# the_set_of_RealSequences_l^p,
      Zero_(the_set_of_RealSequences_l^p,Linear_Space_of_RealSequences),
      Add_(the_set_of_RealSequences_l^p,Linear_Space_of_RealSequences),
      Mult_(the_set_of_RealSequences_l^p,Linear_Space_of_RealSequences),
      l_norm^p #);
    reconsider lp as RealNormSpace by A1,Th9,Th14;
    for vseq be sequence of lp st vseq is Cauchy_sequence_by_Norm
    holds vseq is convergent by A1,Th16;
    hence thesis by LOPBAN_1:def 16;
  end;
end;

