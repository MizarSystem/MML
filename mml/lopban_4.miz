:: The Exponential Function on {B}anach Algebra
::  by Yasunari Shidama
::
:: Received February 13, 2004
:: Copyright (c) 2004 Association of Mizar Users

environ

 vocabularies PRE_TOPC, NORMSP_1, RLVECT_1, FUNCT_1, ARYTM, ARYTM_1, ARYTM_3,
      RELAT_1, ABSVALUE, ORDINAL2, QC_LANG1, LATTICES, SEQ_1, PROB_1, SEQ_2,
      SEQM_3, SIN_COS, CAT_1, PREPOWER, SERIES_1, SQUARE_1, GROUP_1, RSSPACE3,
      LOPBAN_2, LOPBAN_3, SUPINF_2, LOPBAN_4, RELOC, ALGSTR_0;
 notations SUBSET_1, RELAT_1, FUNCT_1, FUNCT_2, PRE_TOPC, STRUCT_0, ALGSTR_0,
      XCMPLX_0, XXREAL_0, XREAL_0, ORDINAL1, NUMBERS, REAL_1, NAT_1, RLVECT_1,
      COMPLEX1, SQUARE_1, NORMSP_1, RSSPACE3, SEQ_1, SEQ_2, SEQM_3, NEWTON,
      SERIES_1, BINARITH, SIN_COS, BHSP_4, LOPBAN_2, LOPBAN_3;
 constructors ARYTM_0, REAL_1, SQUARE_1, NAT_1, SEQ_2, COMSEQ_3, BINARITH,
      SIN_COS, BHSP_4, RSSPACE3, LOPBAN_3, SEQ_1;
 registrations ORDINAL1, RELSET_1, XXREAL_0, XREAL_0, NAT_1, MEMBERED, SIN_COS,
      STRUCT_0, GROUP_1, LOPBAN_2, LOPBAN_3, XBOOLE_0, VALUED_0;
 requirements SUBSET, REAL, BOOLE, NUMERALS, ARITHM;
 definitions NORMSP_1, LOPBAN_3;
 theorems ABSVALUE, REAL_1, REAL_2, RLVECT_1, XCMPLX_0, XCMPLX_1, XREAL_0,
      SEQ_2, SEQM_3, COMSEQ_3, SIN_COS, SERIES_1, NAT_1, INT_1, NEWTON,
      BINARITH, FUNCT_2, NORMSP_1, SEQ_4, RSSPACE3, LOPBAN_3, XREAL_1,
      XXREAL_0, ORDINAL1, BHSP_4;
 schemes SEQ_1, NAT_1, SIN_COS, FUNCT_2, CLASSES1;

begin :: Basic Properties of Exponential Function on Banach Algebra

reserve X for Banach_Algebra,
  w,z,z1,z2 for Element of X,
  k,l,m,n,n1,n2 for Element of NAT,
  seq,seq1,seq2,s,s' for sequence of X,
  rseq for Real_Sequence;

definition
  let X be non empty multMagma;
  let x,y be Element of X;
  pred x,y are_commutative means
  :Def1:
  x * y = y * x;
  symmetry;
end;

Lm1: z* (z #N n) =z #N (n+1) & (z #N n) *z= z #N (n+1) &
z* (z #N n) =(z #N n) *z
proof
  defpred P[Element of NAT] means z* (z #N $1)=z #N ($1 +1);
A1: z * (z #N0 ) =z * 1.X by LOPBAN_3:def 13
    .=z by LOPBAN_3:43;
  z #N (0+1) =z GeoSeq.0 * z by LOPBAN_3:def 13
    .=1.X * z by LOPBAN_3:def 13
    .=z by LOPBAN_3:43;
  then
A2: P[0] by A1;
A3: for k be Element of NAT st P[k] holds P[k+1]
  proof
    let k be Element of NAT such that
A4: P[k];
    thus z* (z #N (k+1)) = z* (z GeoSeq.(k)*z) by LOPBAN_3:def 13
      .=(z * z #N k) *z by LOPBAN_3:43
      .=z #N ((k+1)+1) by A4,LOPBAN_3:def 13;
  end;
A5: for n be Element of NAT holds P[n] from NAT_1:sch 1(A2,A3);
  now
    let n;
    thus z * z #N n =z #N (n+1) by A5;
    thus (z #N n) *z =z #N (n+1) by LOPBAN_3:def 13;
    hence z * (z #Nn) =(z #N n) * z by A5;
  end;
  hence thesis;
end;

Lm2: for z,w st z,w are_commutative holds w* (z #N n) = (z #N n)*w &
z* (w #N n) = (w #N n)*z
proof
  let z,w such that
A1: z,w are_commutative;
  defpred P[Element of NAT] means w* (z #N $1) =(z #N $1)*w &
  z* (w #N $1) = (w #N $1)*z;
A2: (z #N0 ) = 1.X by LOPBAN_3:def 13;
A3: (w #N0 ) = 1.X by LOPBAN_3:def 13;
A4: w*(z #N0 )=w by A2,LOPBAN_3:43
    .=(z #N0 ) *w by A2,LOPBAN_3:43;
  z*(w #N0 )=z by A3,LOPBAN_3:43
    .=(w #N0 ) *z by A3,LOPBAN_3:43;
  then
A5: P[0] by A4;
A6: for k be Element of NAT st P[k] holds P[k+1]
  proof
    let k be Element of NAT such that
A7: P[k];
A8: w*(z #N (k+1) )=w*( (z #N k) *z) by Lm1
      .=(w*(z #N k)) *z by LOPBAN_3:43
      .=(z #N k)*(w *z) by A7,LOPBAN_3:43
      .=(z #N k)*(z *w) by A1,Def1
      .=((z #N k))*z *w by LOPBAN_3:43
      .=(z #N (k+1) ) *w by Lm1;
    z*(w #N (k+1) )=z*( (w #N k) *w) by Lm1
      .=(z*(w #N k)) *w by LOPBAN_3:43
      .=(w #N k)*(z *w) by A7,LOPBAN_3:43
      .=(w #N k)*(w *z) by A1,Def1
      .=(w #N k)*w *z by LOPBAN_3:43
      .=(w #N (k+1) ) *z by Lm1;
    hence P[k+1] by A8;
  end;
  for n be Element of NAT holds P[n] from NAT_1:sch 1(A5,A6);
  hence thesis;
end;

theorem Th1:
  seq1 is convergent & seq2 is convergent & lim(seq1-seq2)=0.X
  implies lim seq1 = lim seq2
proof
  assume that
A1: seq1 is convergent and
A2: seq2 is convergent and
A3: lim(seq1-seq2)=0.X;
  lim(seq1)-lim(seq2) =0.X by A1,A2,A3,NORMSP_1:43;
  then lim(seq1)-lim(seq2) + lim(seq2) = lim(seq2) by LOPBAN_3:43;
  then lim(seq1)-(lim(seq2) - lim(seq2)) = lim(seq2) by LOPBAN_3:43;
  then lim(seq1)-0.X = lim(seq2) by RLVECT_1:28;
  hence lim(seq1) = lim(seq2) by RLVECT_1:26;
end;

theorem Th2:
  for z st for n being Element of NAT holds s.n = z holds lim s = z
proof
  let z;
  assume
A1: for n being Element of NAT holds s.n = z;
A2: now
    let p be Real such that
A3: 0<p;
    take k = 0;
    let n such that k<=n;
    s.n = z by A1;
    hence ||.s.n - z.|| < p by A3,NORMSP_1:10;
  end;
  then s is convergent by NORMSP_1:def 9;
  hence thesis by A2,NORMSP_1:def 11;
end;

theorem Th3:
  s is convergent & s' is convergent implies s * s' is convergent
proof
  assume that
A1: s is convergent and
A2: s' is convergent;
  consider g1 be Point of X such that
A3: for p being Real st 0<p ex n st for m st n<=m holds ||.s.m-g1.||<p
  by A1,NORMSP_1:def 9;
  consider g2 be Point of X such that
A4: for p being Real st 0<p ex n st for m st n<=m holds ||.s'.m-g2.||<p
  by A2,NORMSP_1:def 9;
  take g=g1*g2;
  ||.s.|| is bounded by A1,NORMSP_1:39,SEQ_2:27;
  then ||.s.|| is bounded_above by SEQ_2:def 5;
  then consider R be real number such that
A5: for n holds ||.s.||.n < R by SEQ_2:def 3;
  ||. s.1 .|| = ||. s .||.1 by NORMSP_1:def 10;
  then 0<= ||.s.||.1 by NORMSP_1:8;
  then
A6: 0 < R by A5;
A7: now
    let n;
    ||.s.n.||= ||.s.||.n by NORMSP_1:def 10;
    hence ||.s.n.|| < R by A5;
  end;
  reconsider R as Real by XREAL_0:def 1;
A8: 0<=||.g2.|| by NORMSP_1:8;
A9: 0+0<||.g2.||+R by A6,NORMSP_1:8,XREAL_1:10;
  let p be Real;
  assume 0<p;
  then
A10: 0<p/(||.g2.||+R) by A9,XREAL_1:141;
  then consider n1 such that
A11: for m st n1<=m holds ||.s.m-g1.||<p/(||.g2.||+R) by A3;
  consider n2 such that
A12: for m st n2<=m holds ||.s'.m-g2.||<p/(||.g2.||+R) by A4,A10;
  take n=n1+n2;
  let m such that
A13: n<=m;
A14: 0<=||.s.m.|| by NORMSP_1:8;
A15: 0<=||.s'.m-g2.|| by NORMSP_1:8;
  n2<=n by NAT_1:12;
  then n2<=m by A13,XXREAL_0:2;
  then
A16: ||.s'.m-g2.||<p/(||.g2.||+R) by A12;
  n1<=n1+n2 by NAT_1:12;
  then n1<=m by A13,XXREAL_0:2;
  then
A17: ||.s.m-g1.||<=p/(||.g2.||+R) by A11;
  ||.((s*s').m)-g.|| =||.s.m*s'.m-g1*g2.|| by LOPBAN_3:def 11
    .=||.(s.m*s'.m-s.m*g2)+(s.m*g2-g1*g2).|| by LOPBAN_3:43
    .=||.s.m*(s'.m-g2)+(s.m*g2-g1*g2).|| by LOPBAN_3:43
    .=||.s.m*(s'.m-g2)+(s.m-g1)*g2.|| by LOPBAN_3:43;
  then
A18: ||.((s*s').m)-g.||<=
  ||.s.m*(s'.m-g2).||+||.(s.m-g1)*g2.|| by NORMSP_1:def 2;
  ||.s.m.||<R by A7;
  then
A19: ||.s.m.||*||.s'.m-g2.||<R*(p/(||.g2.||+R)) by A14,A15,A16,XREAL_1:98;
  ||.s.m*(s'.m-g2).|| <= ||.s.m.||*||.s'.m-g2.|| by LOPBAN_3:43;
  then
A20: ||.s.m*(s'.m-g2).||<R*(p/(||.g2.||+R)) by A19,XXREAL_0:2;
A21: ||.(s.m-g1)*g2.||<=||.g2.||*||.s.m-g1.|| by LOPBAN_3:43;
  ||.g2.||*||.s.m-g1.|| <=||.g2.||*(p/(||.g2.||+R)) by A8,A17,XREAL_1:66;
  then
A22: ||.(s.m-g1)*g2.||<=||.g2.||*(p/(||.g2.||+R)) by A21,XXREAL_0:2;
  R*(p/(||.g2.||+R))+||.g2.||*(p/(||.g2.||+R)) =(p/(||.g2.||+R))*(||.g2.||+R)
    .=p by A9,XCMPLX_1:88;
  then ||.s.m*(s'.m-g2).||+||.(s.m-g1)*g2.||<p by A20,A22,XREAL_1:10;
  hence ||.((s*s').m)-g.||<p by A18,XXREAL_0:2;
end;

theorem Th4:
  s is convergent implies z * s is convergent
proof
  assume that
A1: s is convergent;
  consider g1 be Point of X such that
A2: for p being Real st 0<p ex n st for m st n<=m holds ||.s.m-g1.||<p
  by A1,NORMSP_1:def 9;
  take g=z*g1;
A3: 0<=||.z.|| by NORMSP_1:8;
A4: 0+0< ||.z.||+1 by NORMSP_1:8,XREAL_1:10;
  let p be Real;
  assume 0<p;
  then
A5: 0<p/(||.z.||+1) by A4,XREAL_1:141;
  then consider n such that
A6: for m st n<=m holds ||.s.m-g1.||<p/(||.z.||+1) by A2;
  take n;
  let m such that
A7: n<=m;
A8: ||.s.m-g1.||< p/(||.z.||+1) by A6,A7;
A9: ||.((z*s).m)-g.|| =||.z*s.m-z*g1.|| by LOPBAN_3:def 9
    .=||.z*(s.m-g1).|| by LOPBAN_3:43;
A10: ||.z*(s.m-g1).|| <= ||.z.||*||.s.m-g1.|| by LOPBAN_3:43;
  0<=||.s.m-g1.|| by NORMSP_1:8;
  then ||.z.||*||.s.m-g1.||<= ||.z.||*(p/(||.z.||+1)) by A3,A8,XREAL_1:68;
  then
A11: ||.z*(s.m-g1).||<=||.z.||*(p/(||.z.||+1)) by A10,XXREAL_0:2;
  0+ ||.z.|| < ||.z.||+1 by XREAL_1:10;
  then
A12: ||.z.||*(p/(||.z.||+1)) < ( ||.z.||+1) *(p/(||.z.||+1))
  by A3,A5,XREAL_1:99;
  ( ||.z.||+1) *(p/(||.z.||+1)) =p by A4,XCMPLX_1:88;
  hence ||.((z*s).m)-g.|| < p by A9,A11,A12,XXREAL_0:2;
end;

theorem Th5:
  s is convergent implies s*z is convergent
proof
  assume that
A1: s is convergent;
  consider g1 be Point of X such that
A2: for p being Real st 0<p ex n st for m st n<=m holds ||.s.m-g1.||<p
  by A1,NORMSP_1:def 9;
  take g=g1*z;
A3: 0<=||.z.|| by NORMSP_1:8;
A4: 0+0< ||.z.||+1 by NORMSP_1:8,XREAL_1:10;
  let p be Real;
  assume 0<p;
  then
A5: 0<p/(||.z.||+1) by A4,XREAL_1:141;
  then consider n such that
A6: for m st n<=m holds ||.s.m-g1.||<p/(||.z.||+1) by A2;
  take n;
  let m such that
A7: n<=m;
A8: ||.s.m-g1.||< p/(||.z.||+1) by A6,A7;
A9: ||.((s*z).m)-g.|| =||.s.m*z-g1*z.|| by LOPBAN_3:def 10
    .=||.(s.m-g1)*z.|| by LOPBAN_3:43;
A10: ||.(s.m-g1)*z.|| <=||.s.m-g1.||* ||.z.|| by LOPBAN_3:43;
  0<=||.s.m-g1.|| by NORMSP_1:8;
  then ||.s.m-g1.||* ||.z.||<=(p/(||.z.||+1))* ||.z.|| by A3,A8,XREAL_1:68;
  then
A11: ||.(s.m-g1)*z.||<=(p/(||.z.||+1))*||.z.|| by A10,XXREAL_0:2;
  0+ ||.z.|| < ||.z.||+1 by XREAL_1:10;
  then
A12: (p/(||.z.||+1))*||.z.||< (p/(||.z.||+1)) * ( ||.z.||+1)
  by A3,A5,XREAL_1:99;
  (p/(||.z.||+1))* ( ||.z.||+1) =p by A4,XCMPLX_1:88;
  hence ||.((s*z).m)-g.|| < p by A9,A11,A12,XXREAL_0:2;
end;

theorem Th6:
  s is convergent implies lim (z * s) =z* lim(s)
proof
  assume
A1: s is convergent;
  then
A2: z*s is convergent by Th4;
  set g1=lim(s);
  set g=z*g1;
A3: 0<=||.z.|| by NORMSP_1:8;
A4: 0+0< ||.z.||+1 by NORMSP_1:8,XREAL_1:10;
  now
    let p be Real;
    assume 0<p;
    then
A5: 0<p/(||.z.||+1) by A4,XREAL_1:141;
    then consider n such that
A6: for m st n<=m holds ||.s.m-g1.||<p/(||.z.||+1) by A1,NORMSP_1:def 11;
    take n;
    let m such that
A7: n<=m;
A8: ||.s.m-g1.||< p/(||.z.||+1) by A6,A7;
A9: ||.((z*s).m)-g.|| =||.z*s.m-z*g1.|| by LOPBAN_3:def 9
      .=||.z*(s.m-g1).|| by LOPBAN_3:43;
A10: ||.z*(s.m-g1).|| <= ||.z.||*||.s.m-g1.|| by LOPBAN_3:43;
    0<=||.s.m-g1.|| by NORMSP_1:8;
    then ||.z.||*||.s.m-g1.||<= ||.z.||*(p/(||.z.||+1)) by A3,A8,XREAL_1:68;
    then
A11: ||.z*(s.m-g1).||<=||.z.||*(p/(||.z.||+1)) by A10,XXREAL_0:2;
    0+ ||.z.|| < ||.z.||+1 by XREAL_1:10;
    then
A12: ||.z.||*(p/(||.z.||+1)) < ( ||.z.||+1) *(p/(||.z.||+1))
    by A3,A5,XREAL_1:99;
    ( ||.z.||+1) *(p/(||.z.||+1)) =p by A4,XCMPLX_1:88;
    hence ||.((z*s).m)-g.|| < p by A9,A11,A12,XXREAL_0:2;
  end;
  hence thesis by A2,NORMSP_1:def 11;
end;

theorem Th7:
  s is convergent implies lim (s*z) = lim(s)*z
proof
  assume
A1: s is convergent;
  then
A2: s*z is convergent by Th5;
  set g1=lim(s);
  set g=g1*z;
A3: 0<=||.z.|| by NORMSP_1:8;
A4: 0+0< ||.z.||+1 by NORMSP_1:8,XREAL_1:10;
  now
    let p be Real;
    assume 0<p;
    then
A5: 0<p/(||.z.||+1) by A4,XREAL_1:141;
    then consider n such that
A6: for m st n<=m holds ||.s.m-g1.||<p/(||.z.||+1) by A1,NORMSP_1:def 11;
    take n;
    let m such that
A7: n<=m;
A8: ||.s.m-g1.||< p/(||.z.||+1) by A6,A7;
A9: ||.((s*z).m)-g.|| =||.s.m*z-g1*z.|| by LOPBAN_3:def 10
      .=||.(s.m-g1)*z.|| by LOPBAN_3:43;
A10: ||.(s.m-g1)*z.|| <=||.s.m-g1.||* ||.z.|| by LOPBAN_3:43;
    0<=||.s.m-g1.|| by NORMSP_1:8;
    then ||.s.m-g1.||* ||.z.||<=(p/(||.z.||+1))* ||.z.|| by A3,A8,XREAL_1:68;
    then
A11: ||.(s.m-g1)*z.||<=(p/(||.z.||+1))*||.z.|| by A10,XXREAL_0:2;
    0+ ||.z.|| < ||.z.||+1 by XREAL_1:10;
    then
A12: (p/(||.z.||+1))*||.z.||< (p/(||.z.||+1)) * ( ||.z.||+1)
    by A3,A5,XREAL_1:99;
    (p/(||.z.||+1))* ( ||.z.||+1) =p by A4,XCMPLX_1:88;
    hence ||.((s*z).m)-g.|| < p by A9,A11,A12,XXREAL_0:2;
  end;
  hence thesis by A2,NORMSP_1:def 11;
end;

theorem Th8:
  s is convergent & s' is convergent implies lim(s*s')=(lim s)*(lim s')
proof
  assume that
A1: s is convergent and
A2: s' is convergent;
A3: s*s' is convergent by A1,A2,Th3;
  set g1=lim s;
  set g2=lim s';
  set g=g1*g2;
  ||.s.|| is bounded by A1,NORMSP_1:39,SEQ_2:27;
  then ||.s.|| is bounded_above by SEQ_2:def 5;
  then consider R be real number such that
A4: for n holds ||.s.||.n < R by SEQ_2:def 3;
  ||. s.1 .|| = ||. s .||.1 by NORMSP_1:def 10;
  then 0<= ||.s.||.1 by NORMSP_1:8;
  then
A5: 0 < R by A4;
A6: now
    let n;
    ||.s.n.||= ||.s.||.n by NORMSP_1:def 10;
    hence ||.s.n.|| < R by A4;
  end;
  reconsider R as Real by XREAL_0:def 1;
A7: 0<=||.g2.|| by NORMSP_1:8;
A8: 0+0<||.g2.||+R by A5,NORMSP_1:8,XREAL_1:10;
  now
    let p be Real;
    assume 0<p;
    then
A9: 0<p/(||.g2.||+R) by A8,XREAL_1:141;
    then consider n1 such that
A10: for m st n1<=m holds ||.s.m-g1.||<p/(||.g2.||+R) by A1,NORMSP_1:def 11;
    consider n2 such that
A11: for m st n2<=m holds ||.s'.m-g2.||<p/(||.g2.||+R)
    by A2,A9,NORMSP_1:def 11;
    take n=n1+n2;
    let m such that
A12: n<=m;
A13: 0<=||.s.m.|| by NORMSP_1:8;
A14: 0<=||.s'.m-g2.|| by NORMSP_1:8;
    n2<=n by NAT_1:12;
    then n2<=m by A12,XXREAL_0:2;
    then
A15: ||.s'.m-g2.||<p/(||.g2.||+R) by A11;
    n1<=n1+n2 by NAT_1:12;
    then n1<=m by A12,XXREAL_0:2;
    then
A16: ||.s.m-g1.||<=p/(||.g2.||+R) by A10;
    ||.((s*s').m)-g.|| =||.s.m*s'.m-g1*g2.|| by LOPBAN_3:def 11
      .=||.(s.m*s'.m-s.m*g2)+(s.m*g2-g1*g2).|| by LOPBAN_3:43
      .=||.s.m*(s'.m-g2)+(s.m*g2-g1*g2).|| by LOPBAN_3:43
      .=||.s.m*(s'.m-g2)+(s.m-g1)*g2.|| by LOPBAN_3:43;
    then
A17: ||.((s*s').m)-g.||<=
    ||.s.m*(s'.m-g2).||+||.(s.m-g1)*g2.|| by NORMSP_1:def 2;
    ||.s.m.||<R by A6;
    then
A18: ||.s.m.||*||.s'.m-g2.||<R*(p/(||.g2.||+R)) by A13,A14,A15,XREAL_1:98;
    ||.s.m*(s'.m-g2).|| <= ||.s.m.||*||.s'.m-g2.|| by LOPBAN_3:43;
    then
A19: ||.s.m*(s'.m-g2).||<R*(p/(||.g2.||+R)) by A18,XXREAL_0:2;
A20: ||.(s.m-g1)*g2.||<=||.g2.||*||.s.m-g1.|| by LOPBAN_3:43;
    ||.g2.||*||.s.m-g1.|| <=||.g2.||*(p/(||.g2.||+R)) by A7,A16,XREAL_1:66;
    then
A21: ||.(s.m-g1)*g2.||<=||.g2.||*(p/(||.g2.||+R)) by A20,XXREAL_0:2;
    R*(p/(||.g2.||+R))+||.g2.||*(p/(||.g2.||+R))
    =(p/(||.g2.||+R))*(||.g2.||+R)
      .=p by A8,XCMPLX_1:88;
    then ||.s.m*(s'.m-g2).||+||.(s.m-g1)*g2.||<p by A19,A21,XREAL_1:10;
    hence ||.((s*s').m)-g.||<p by A17,XXREAL_0:2;
  end;
  hence thesis by A3,NORMSP_1:def 11;
end;

theorem Th9:
  Partial_Sums(z * seq) = z * Partial_Sums(seq) &
  Partial_Sums(seq *z ) = Partial_Sums(seq) *z
proof
A1: Partial_Sums(z * seq) = z * Partial_Sums(seq)
  proof
    defpred P[Element of NAT] means
    Partial_Sums(z *seq).$1= (z * Partial_Sums(seq)).$1;
A2: P[0]
    proof
      thus Partial_Sums(z*seq).0 =(z * seq).0 by BHSP_4:def 1
        .=z * seq.0 by LOPBAN_3:def 9
        .=z * Partial_Sums(seq).0 by BHSP_4:def 1
        .=(z * Partial_Sums(seq)).0 by LOPBAN_3:def 9;
    end;
A3: now
      let n;
      assume
A4:   P[n];
      thus P[n+1]
      proof
        thus Partial_Sums(z * seq).(n+1)
        =Partial_Sums(z * seq).n + (z * seq).(n+1) by BHSP_4:def 1
          .=(z * Partial_Sums(seq).n )+ (z * seq).(n+1) by A4,LOPBAN_3:def 9
          .=(z * Partial_Sums(seq).n )+ (z * seq.(n+1)) by LOPBAN_3:def 9
          .= z * ( Partial_Sums(seq).n + seq.(n+1)) by LOPBAN_3:43
          .= z * ( Partial_Sums(seq).(n+1)) by BHSP_4:def 1
          .= (z * Partial_Sums(seq)).(n+1) by LOPBAN_3:def 9;
      end;
    end;
    for n holds P[n] from NAT_1:sch 1(A2,A3);
    hence thesis by FUNCT_2:113;
  end;
  Partial_Sums(seq *z ) = Partial_Sums(seq) *z
  proof
    defpred P[Element of NAT] means
    Partial_Sums(seq*z).$1= (Partial_Sums(seq)*z).$1;
A5: P[0]
    proof
      thus Partial_Sums(seq*z).0 =(seq*z).0 by BHSP_4:def 1
        .= seq.0*z by LOPBAN_3:def 10
        .=Partial_Sums(seq).0 *z by BHSP_4:def 1
        .=(Partial_Sums(seq)*z).0 by LOPBAN_3:def 10;
    end;
A6: now
      let n;
      assume
A7:   P[n];
      thus P[n+1]
      proof
        thus Partial_Sums( seq*z).(n+1)
        =Partial_Sums( seq*z).n + (seq*z).(n+1) by BHSP_4:def 1
          .=(Partial_Sums(seq).n *z )+ (seq*z).(n+1) by A7,LOPBAN_3:def 10
          .=(Partial_Sums(seq).n*z)+ (seq.(n+1)*z) by LOPBAN_3:def 10
          .= ( Partial_Sums(seq).n + seq.(n+1))*z by LOPBAN_3:43
          .= ( Partial_Sums(seq).(n+1))*z by BHSP_4:def 1
          .= (Partial_Sums(seq)*z ).(n+1) by LOPBAN_3:def 10;
      end;
    end;
    for n holds P[n] from NAT_1:sch 1(A5,A6);
    hence thesis by FUNCT_2:113;
  end;
  hence thesis by A1;
end;

theorem Th10:
  ||.Partial_Sums(seq).k.|| <= Partial_Sums(||.seq.||).k
proof
  defpred P[Element of NAT] means ||. Partial_Sums(seq).$1 .||
  <= Partial_Sums(||.seq.||).$1;
  Partial_Sums(||.seq.||).0 = (||.seq.||).0 by SERIES_1:def 1
    .= ||. seq.0 .|| by NORMSP_1:def 10;
  then
A1: P[0] by BHSP_4:def 1;
A2: now
    let k such that
A3: P[k];
A4: ||. Partial_Sums(seq).(k+1) .||
    =||. Partial_Sums(seq).k + (seq).(k+1) .|| by BHSP_4:def 1;
A5: ||. Partial_Sums(seq).k + (seq).(k+1) .||
    <= ||. Partial_Sums(seq).k.|| + ||. (seq).(k+1) .|| by NORMSP_1:def 2;
    ||. Partial_Sums(seq).k.|| + ||.(seq).(k+1).||
    <= Partial_Sums(||.seq.|| ).k + ||.(seq).(k+1).|| by A3,XREAL_1:8;
    then ||. Partial_Sums(seq).(k+1) .|| <=
    Partial_Sums(||.seq.||).k + ||.seq.(k+1).|| by A4,A5,XXREAL_0:2;
    then ||. Partial_Sums(seq).(k+1) .||
    <= Partial_Sums(||.seq.||).k+||.seq.||.(k+1) by NORMSP_1:def 10;
    hence P[k+1] by SERIES_1:def 1;
  end;
  for k holds P[k] from NAT_1:sch 1(A1,A2);
  hence thesis;
end;

theorem Th11:
  (for n st n <= m holds seq1.n = seq2.n) implies
  Partial_Sums(seq1).m =Partial_Sums(seq2).m
proof
  assume
A1: for n st n <= m holds seq1.n = seq2.n;
  defpred P[Element of NAT] means $1 <= m implies
  Partial_Sums(seq1).$1=Partial_Sums(seq2).$1;
A2: P[0]
  proof
    assume 0 <= m;
    thus Partial_Sums(seq1).0=seq1.0 by BHSP_4:def 1
      .=seq2.0 by A1
      .=Partial_Sums(seq2).0 by BHSP_4:def 1;
  end;
A3: for k be Element of NAT st P[k] holds P[k+1]
  proof
    let k be Element of NAT such that
A4: P[k];
    assume
A5: k+1 <= m;
    k < k+1 by XREAL_1:31;
    hence Partial_Sums(seq1).(k+1)
    =Partial_Sums(seq2).k+seq1.(k+1) by A4,A5,BHSP_4:def 1,XXREAL_0:2
      .=Partial_Sums(seq2).k+seq2.(k+1) by A1,A5
      .=Partial_Sums(seq2).(k+1) by BHSP_4:def 1;
  end;
  for k holds P[k] from NAT_1:sch 1(A2,A3);
  hence Partial_Sums(seq1).m=Partial_Sums(seq2).m;
end;

theorem Th12:
  ((for n holds ||. seq.n .|| <= rseq.n) & rseq is convergent & lim(rseq)=0)
  implies seq is convergent & lim(seq)=0.X
proof
  assume that
A1: (for n holds ||. seq.n .|| <= rseq.n) and
A2: rseq is convergent and
A3: lim(rseq)=0;
  now
    let p be real number such that
A4: 0<p;
    consider n such that
A5: for m st n<=m holds abs(rseq.m-0)<p by A2,A3,A4,SEQ_2:def 7;
    now
      let m such that
A6:   n<=m;
A7:   abs(rseq.m-0)<p by A5,A6;
A8:   ||. seq.m-0.X .|| = ||. seq.m .|| by RLVECT_1:26;
A9:   ||. seq.m .|| <= rseq.m by A1;
      rseq.m <= abs(rseq.m) by ABSVALUE:11;
      then ||. seq.m - 0.X .|| <= abs(rseq.m) by A8,A9,XXREAL_0:2;
      hence ||. seq.m - 0.X .|| < p by A7,XXREAL_0:2;
    end;
    hence ex n st for m st n<=m holds ||. seq.m - (0.X) .|| < p;
  end;
  then
A10: for p be Real st 0<p ex n st for m st n<=m holds ||. seq.m - 0.X .|| < p;
  hence seq is convergent by NORMSP_1:def 9;
  hence thesis by A10,NORMSP_1:def 11;
end;

definition
  let X;
  let z be Element of X;
  func z ExpSeq -> sequence of X means
  :Def2:
  for n holds it.n = 1/(n! )*(z #N n);
  existence
  proof
    deffunc U(Element of NAT) = 1/(($1)!)*(z #N $1);
    thus ex s being sequence of X st
    for n holds s.n = U(n) from FUNCT_2:sch 4;
  end;
  uniqueness
  proof
    let S1, S2 be sequence of X;
    assume that
A1: ( for n be Element of NAT holds S1.n = 1/(n!)*(z #N n) ) and
A2: ( for n be Element of NAT holds S2.n = 1/(n!)*(z #N n) );
    for n be Element of NAT holds S1.n = S2.n
    proof
      let n be Element of NAT;
      S1.n = 1/(n! )*(z #N n) by A1;
      hence thesis by A2;
    end;
    hence thesis by FUNCT_2:113;
  end;
end;

scheme ExNormSpaceCASE {RNS()->non empty Banach_Algebra,
  F(Element of NAT,Element of NAT)-> Point of RNS() }: for k holds
  ex seq be sequence of RNS() st for n holds ((n <= k implies seq.n=F(k,n)) &
  (n > k implies seq.n=0.RNS()))
proof
  let k;
  defpred P[set,set] means ex n st (n=$1 & (n <= k implies $2=F(k,n )) &
  (n > k implies $2=0.RNS()));
A1: now
    let x be set;
    assume x in NAT;
    then consider n such that
A2: n=x;
    reconsider chk = CHK(n,k ) as Element of REAL by XREAL_0:def 1;
A3: now
      assume n <= k;
      hence chk * F (k,n) =1 * F(k,n) by SIN_COS:def 2
        .=F(k,n) by RLVECT_1:def 9;
    end;
A4: now
      assume n > k;
      hence chk * F (k,n) =0 * F(k,n) by SIN_COS:def 2
        .=0.RNS() by RLVECT_1:23;
    end;
    reconsider y=chk * F (k,n) as set;
    take y;
    thus P[x,y] by A2,A3,A4;
  end;
  consider f be Function such that
A6: dom f =NAT and
A7: for x be set st x in NAT holds P[x,f.x] from CLASSES1:sch 1(A1);
  now
    let x be set;
    assume x in NAT;
    then ex n st (n=x & (n <= k implies f.x=F(k,n)) &
    (n > k implies f.x=0.RNS())) by A7;
    hence f.x in the carrier of RNS();
  end;
  then reconsider f as sequence of RNS() by A6,FUNCT_2:5;
  take seq=f;
  let n;
  ex l be Element of NAT st l=n &
  (l <= k implies seq.n=F(k,l)) & (l > k implies seq.n=0.RNS()) by A7;
  hence ((n <= k implies seq.n=F(k,n)) & (n > k implies seq.n=0.RNS()));
end;

theorem Th13:
  (for k st 0 < k holds ((k-'1)! ) * k = k!) &
  for m,k st k <= m holds ((m-'k)! ) * (m+1-k) = (m+1-'k)!
proof
A1: now
    let k;
    assume 0 < k;
    then 0+1 <= k by INT_1:20;
    then k-'1+1=k-1+1 by BINARITH:50
      .=k;
    hence k! =(k-'1)! *k by NEWTON:21;
  end;
  now
    let m,k such that
A2: k <= m;
    m <= m+1 by XREAL_1:31;
    then m+1-'k=m+1-k by A2,BINARITH:50,XXREAL_0:2
      .=m-k+1
      .=m-'k+1 by A2,BINARITH:50;
    hence (m+1-'k)!=((m-'k)! ) *( (m-'k)+1) by NEWTON:21
      .=((m-'k)! ) *(m-k+1) by A2,BINARITH:50
      .=((m-'k)! ) *(m+1-k);
  end;
  hence thesis by A1;
end;

definition
  let n be Element of NAT;
  func Coef(n) -> Real_Sequence means
  :Def3:
  for k be Element of NAT holds
  (k <= n implies it.k = n! /( (k! ) * (( n -' k)!) ) )
  &(k > n implies it.k=0);
  existence
  proof
    deffunc U(Element of NAT,Element of NAT) = $1! /( ($2! ) * (($1 -' $2)! ));
    for n holds ex seq be Real_Sequence st for k holds
    (k <= n implies seq.k = U(n,k)) &
    (k > n implies seq.k=0 ) from SIN_COS:sch 2;
    hence ex seq be Real_Sequence st for k holds
    (k <= n implies seq.k = n! /( (k! ) * ((n-' k)! ))) &
    (k > n implies seq.k=0);
  end;
  uniqueness
  proof
    let seq1,seq2 be Real_Sequence;
    assume that
A1: for k holds (k <= n implies seq1.k = n! /( (k! ) * ((n -' k)! ))) &
    (k > n implies seq1.k=0) and
A2: for k holds (k <= n implies seq2.k = n! /( (k! ) * ((n -' k)! ))) &
    (k > n implies seq2.k=0);
    now
      let k;
      per cases;
      suppose
A3:     k <= n;
        hence seq1.k = (n!) /( (k! ) * ((n -' k)!) ) by A1
          .= seq2.k by A2,A3;
      end;
      suppose
A4:     k > n;
        hence seq1.k = 0 by A1
          .= seq2.k by A2,A4;
      end;
    end;
    hence seq1=seq2 by FUNCT_2:113;
  end;
end;

definition
  let n be Element of NAT;
  func Coef_e(n) -> Real_Sequence means
  :Def4:
  for k be Element of NAT holds
  (k <= n implies it.k = 1/((k! ) * ((n -' k)! ))) & (k > n implies it.k=0);
  existence
  proof
    deffunc U(Element of NAT,Element of NAT) = 1/(($2! ) * (($1-'$2)! ));
    for n holds ex seq be Real_Sequence st for k holds
    (k <= n implies seq.k = U(n,k)) &
    (k > n implies seq.k=0) from SIN_COS:sch 2;
    hence ex seq be Real_Sequence st for k holds
    (k <= n implies seq.k = 1/((k! ) * ((n -' k)! ))) &
    (k > n implies seq.k=0);
  end;
  uniqueness
  proof
    let seq1,seq2 be Real_Sequence;
    assume that
A1: for k holds (k <= n implies seq1.k = 1/((k! ) * ((n -' k)! ))) &
    (k > n implies seq1.k=0) and
A2: for k holds (k <= n implies seq2.k = 1/((k! ) * ((n -' k)! ))) &
    (k > n implies seq2.k=0);
    now
      let k;
      per cases;
      suppose
A3:     k <= n;
        hence seq1.k =1/(k! * ((n -' k)!) ) by A1
          .= seq2.k by A2,A3;
      end;
      suppose
A4:     k > n;
        hence seq1.k = 0 by A1
          .= seq2.k by A2,A4;
      end;
    end;
    hence seq1=seq2 by FUNCT_2:113;
  end;
end;

definition
  let X be non empty ZeroStr, seq be sequence of X;
  func Shift seq -> sequence of X means
  :Def5:
  it.0 = 0.X & for k be Element of NAT holds it.(k+1) = seq.k;
  existence
  proof
    deffunc U(Nat,set) = seq.$1;
    consider f being Function of NAT,the carrier of X such that
A1: f.0 = 0.X & for n being Nat holds f.(n+1)=U(n,f.n)
    from NAT_1:sch 12;
    take f;
    thus thesis by A1;
  end;
  uniqueness
  proof
    let seq1,seq2 be sequence of X;
    assume that
A2: seq1.0=0.X & for n holds seq1.(n+1)=seq.n and
A3: seq2.0=0.X & for n holds seq2.(n+1)=seq.n;
    defpred X[Element of NAT] means seq1.$1 = seq2.$1;
A4: X[0] by A2,A3;
A5: for k be Element of NAT st X[k] holds X[k+1]
    proof
      let k be Element of NAT;
      assume seq1.k =seq2.k;
      thus seq1.(k+1) = seq.k by A2
        .= seq2.(k+1) by A3;
    end;
    for n holds X[n] from NAT_1:sch 1(A4,A5);
    hence seq1 = seq2 by FUNCT_2:113;
  end;
end;

definition
  let n;
  let X;
  let z,w be Element of X;
  func Expan(n,z,w) -> sequence of X means
  :Def6:
  for k be Element of NAT holds ( k <= n implies
  it.k=((Coef(n)).k) * (z #N k) * (w #N (n-' k)) ) & (n < k implies it.k=0.X);
  existence
  proof
    deffunc U(Element of NAT,Element of NAT)
    = ((Coef($1)).$2) * (z #N $2) * (w #N ($1 -' $2));
    for n holds ex seq st for k holds (k <= n implies seq.k = U(n,k)) &
    (k > n implies seq.k=0.X) from ExNormSpaceCASE;
    hence ex seq st for k holds
    (k <= n implies seq.k =((Coef(n)).k) * (z #N k) * (w #N (n-' k))) &
    (k > n implies seq.k=0.X);
  end;
  uniqueness
  proof
    let seq1,seq2;
    assume that
A1: for k holds
    (k <= n implies seq1.k =((Coef(n)).k) * (z #N k) * (w #N (n-' k)))&
    (k > n implies seq1.k=0.X) and
A2: for k holds
    (k <= n implies seq2.k = ((Coef(n)).k) * (z #N k) * (w #N (n-' k)) )&
    (k > n implies seq2.k=0.X);
    now
      let k;
      per cases;
      suppose
A3:     k <= n;
        hence seq1.k =((Coef(n)).k) * (z #N k) * (w #N (n-' k)) by A1
          .= seq2.k by A2,A3;
      end;
      suppose
A4:     k > n;
        hence seq1.k = 0.X by A1
          .= seq2.k by A2,A4;
      end;
    end;
    hence seq1=seq2 by FUNCT_2:113;
  end;
end;

definition
  let n;
  let X;
  let z,w be Element of X;
  func Expan_e(n,z,w) -> sequence of X means
  :Def7:
  for k be Element of NAT holds ( k <= n implies
  it.k=((Coef_e(n)).k) * (z #N k) * (w #N (n-' k)) ) &
  (n < k implies it.k=0.X );
  existence
  proof
    deffunc U(Element of NAT,Element of NAT)
    = ((Coef_e($1)).$2) * (z #N $2) * (w #N ($1-'$2));
    for n holds ex seq st for k holds (k <= n implies seq.k = U(n,k)) &
    (k > n implies seq.k=0.X ) from ExNormSpaceCASE;
    hence ex seq st for k holds
    (k <= n implies seq.k =((Coef_e(n)).k) * (z #N k) * (w #N (n-'k)) ) &
    (k > n implies seq.k=0.X );
  end;
  uniqueness
  proof
    let seq1,seq2;
    assume that
A1: for k holds
    (k <= n implies seq1.k =((Coef_e(n)).k) * (z #N k) * (w #N (n-' k)) ) &
    (k > n implies seq1.k=0.X ) and
A2: for k holds
    (k <= n implies seq2.k = ((Coef_e(n)).k) * (z #N k) * (w #N (n-' k)) ) &
    (k > n implies seq2.k=0.X );
    now
      let k;
      per cases;
      suppose
A3:     k <= n;
        hence seq1.k =((Coef_e(n)).k) * (z #N k) * (w #N (n-' k)) by A1
          .= seq2.k by A2,A3;
      end;
      suppose
A4:     k > n;
        hence seq1.k = 0.X by A1
          .= seq2.k by A2,A4;
      end;
    end;
    hence seq1=seq2 by FUNCT_2:113;
  end;
end;

definition
  let n;
  let X;
  let z,w be Element of X;
  func Alfa(n,z,w) -> sequence of X means
  :Def8:
  for k be Element of NAT holds
  ( k <= n implies it.k= (z ExpSeq).k * Partial_Sums(w ExpSeq).(n-'k) ) &
  ( n < k implies it.k=0.X);
  existence
  proof
    deffunc U(Element of NAT,Element of NAT) =
    (z ExpSeq).$2 * Partial_Sums(w ExpSeq).($1 -' $2);
    for n holds ex seq st for k holds (k <= n implies seq.k = U(n,k)) &
    (k > n implies seq.k=0.X ) from ExNormSpaceCASE;
    hence ex seq st for k holds
    (k <= n implies seq.k =(z ExpSeq).k * Partial_Sums(w ExpSeq).(n-'k) ) &
    (k > n implies seq.k=0.X );
  end;
  uniqueness
  proof
    let seq1,seq2;
    assume that
A1: for k holds
    (k <= n implies seq1.k = (z ExpSeq).k * Partial_Sums(w ExpSeq).(n-'k) ) &
    (k > n implies seq1.k=0.X ) and
A2: for k holds
    (k <= n implies seq2.k = (z ExpSeq).k * Partial_Sums(w ExpSeq).(n-'k) )
    & (k > n implies seq2.k=0.X );
    now
      let k;
      per cases;
      suppose
A3:     k <= n;
        hence seq1.k = (z ExpSeq).k * Partial_Sums(w ExpSeq).(n-'k) by A1
          .= seq2.k by A2,A3;
      end;
      suppose
A4:     k > n;
        hence seq1.k = 0.X by A1
          .= seq2.k by A2,A4;
      end;
    end;
    hence seq1=seq2 by FUNCT_2:113;
  end;
end;

definition
  let X;
  let z, w be Element of X;
  let n be Element of NAT;
  func Conj(n,z,w) -> sequence of X means
  :Def9:
  for k be Element of NAT holds
  ( k <= n implies it.k= (z ExpSeq).k * (Partial_Sums(w ExpSeq).n
  -Partial_Sums(w ExpSeq).(n-'k))) & (n < k implies it.k=0.X);
  existence
  proof
    deffunc U(Element of NAT,Element of NAT)
    = (z ExpSeq).$2 * (Partial_Sums(w ExpSeq).$1
    -Partial_Sums(w ExpSeq).($1-'$2));
    for n holds ex seq st for k holds (k <= n implies seq.k = U(n,k) ) &
    (k > n implies seq.k=0.X) from ExNormSpaceCASE;
    hence ex seq st for k holds
    (k <= n implies seq.k =(z ExpSeq).k * (Partial_Sums(w ExpSeq).n
    -Partial_Sums(w ExpSeq).(n-'k)) ) & (k > n implies seq.k=0.X);
  end;
  uniqueness
  proof
    let seq1,seq2;
    assume that
A1: for k holds
    (k <= n implies seq1.k =(z ExpSeq).k * (Partial_Sums(w ExpSeq).n
    -Partial_Sums(w ExpSeq).(n-'k)) ) & (k > n implies seq1.k=0.X) and
A2: for k holds
    (k <= n implies seq2.k = (z ExpSeq).k * (Partial_Sums(w ExpSeq).n
    -Partial_Sums(w ExpSeq).(n-'k)) )& (k > n implies seq2.k=0.X);
    now
      let k;
      per cases;
      suppose
A3:     k <= n;
        hence seq1.k =(z ExpSeq).k * (Partial_Sums(w ExpSeq).n
        -Partial_Sums(w ExpSeq).(n-'k)) by A1
          .= seq2.k by A2,A3;
      end;
      suppose
A4:     k > n;
        hence seq1.k = 0.X by A1
          .= seq2.k by A2,A4;
      end;
    end;
    hence seq1=seq2 by FUNCT_2:113;
  end;
end;

theorem Th14:
  z ExpSeq.(n+1) = (1/(n+1) * z) * (z ExpSeq.n) & z ExpSeq.0=1.X &
  ||.(z ExpSeq).n.|| <= (||.z.|| ExpSeq ).n
proof
A1: now
    let n be Element of NAT;
    thus (z ExpSeq).(n+1)=1/((n+1) !)*z #N (n+1) by Def2
      .=1/((n+1)!)*((z GeoSeq).n * z) by LOPBAN_3:def 13
      .=1/(n! * (n+1))*(z #N n * z) by NEWTON:21
      .=((1*1)/((n!) * (n+1)))*(z* z #N n ) by Lm1
      .=((1/(n!)) * (1/(n+1)) )*(z* z #N n ) by XCMPLX_1:77
      .=( (1/(n+1))*z)*((1/(n!)) * z #N n ) by LOPBAN_3:43
      .=((1 /(n+1)) *z)*(z ExpSeq.n) by Def2;
  end;
A2: (z ExpSeq).0=1/(0!) * z #N 0 by Def2
    .=1/1 *1.X by LOPBAN_3:def 13,NEWTON:18
    .=1.X by RLVECT_1:def 9;
  defpred X[Element of NAT] means
  ||. ((z ExpSeq)).$1 .|| <=( ||.z.|| ExpSeq ).$1;
  ( ||.z.|| ExpSeq ).0 = ((||.z.||) |^ 0) / (0!) by SIN_COS:def 9
    .= 1/(0!) by NEWTON:9
    .= 1/((Prod_real_n).0) by SIN_COS:def 7
    .= 1/1 by SIN_COS:def 5
    .= 1;
  then
A3: X[0] by A2,LOPBAN_3:43;
A4: for n be Element of NAT st X[n] holds X[n+1]
  proof
    let n such that
A5: X[n];
A6: ||. ((z ExpSeq)).(n+1) .|| =||. (1/(n+1) *z)* (z ExpSeq.n ) .|| by A1;
A7: ||. (1/(n+1) *z)* (z ExpSeq.n ) .||
    <= ||. (1/(n+1) *z) .|| * ||. (z ExpSeq.n ) .|| by LOPBAN_3:43;
A8: ||. (1/(n+1) *z) .|| =abs(1/(n+1)) * ||.z.|| by NORMSP_1:def 2
      .= 1/(n+1) * ||.z.|| by ABSVALUE:def 1;
    0<= ||. (1/(n+1) *z) .|| by NORMSP_1:8;
    then
A9: ||. (1/(n+1) *z) .|| * ||. (z ExpSeq.n ) .|| <=
    ||. (1/(n+1) *z) .|| * (||.z.|| ExpSeq ).n by A5,XREAL_1:66;
    1/(n+1) * ||.z.|| * (||.z.|| ExpSeq ).n
    = 1/(n+1) * ( (||.z.|| ExpSeq ).n * ||.z.|| )
      .= 1/(n+1) * ( ((||.z.||)|^n)/(n!) *||.z.|| ) by SIN_COS:def 9
      .=1/(n+1) * ( ((||.z.||)|^n)*||.z.|| /(n!) ) by XCMPLX_1:75
      .=1/(n+1) * ( (||.z.||)|^(n+1) /(n!) ) by NEWTON:11
      .= ((||.z.||)|^ (n+1)) /((n)!*(n+1)) by XCMPLX_1:104
      .= ((||.z.||)|^ (n+1)) /((n+1)!) by SIN_COS:2
      .=( ||.z.|| ExpSeq ).(n+1) by SIN_COS:def 9;
    hence X[n+1] by A6,A7,A8,A9,XXREAL_0:2;
  end;
  for n holds X[n] from NAT_1:sch 1(A3,A4);
  hence thesis by A1,A2;
end;

theorem Th15:
  for X being non empty ZeroStr, seq being sequence of X holds
  0 < k implies (Shift(seq)).k=seq.(k -' 1)
proof
  let X be non empty ZeroStr, seq be sequence of X;
  assume
A1: 0 < k;
  then
A2: 0+1 <= k by INT_1:20;
  consider m being Nat such that
A3: m+1=k by A1,NAT_1:6;
A4: m=k-1 by A3;
  m in NAT by ORDINAL1:def 13;
  hence (Shift(seq)).k=seq.m by A3,Def5
    .=seq.(k -' 1) by A2,A4,BINARITH:50;
end;

theorem Th16:
  Partial_Sums(seq).k=Partial_Sums(Shift(seq)).k+seq.k
proof
  defpred X[Element of NAT] means
  Partial_Sums(seq).$1=Partial_Sums(Shift(seq)).$1+seq.$1;
  Partial_Sums(seq).0=seq.0 by BHSP_4:def 1
    .= 0.X + seq.0 by RLVECT_1:10
    .=(Shift(seq)).0 + seq.0 by Def5
    .=Partial_Sums(Shift(seq)).0+seq.0 by BHSP_4:def 1;
  then
A1: X[0];
A2: for k st X[k] holds X[k+1]
  proof
    let k such that
A3: Partial_Sums(seq).k=Partial_Sums(Shift(seq)).k+seq.k;

thus Partial_Sums(seq).(k+1) = (Partial_Sums(Shift(seq)).k+seq.k) + seq.(k+1)
    by A3,BHSP_4:def 1
      .=(Partial_Sums(Shift(seq)).k+(Shift(seq)).(k+1)) + seq.(k+1) by Def5
      .=Partial_Sums(Shift(seq)).(k+1)+seq.(k+1) by BHSP_4:def 1;
  end;
  for k holds X[k] from NAT_1:sch 1(A1,A2);
  hence thesis;
end;

theorem Th17:
  for z,w st z,w are_commutative holds
  (z+w) #N n = Partial_Sums(Expan(n,z,w)).n
proof
  let z,w such that
A1: z,w are_commutative;
A2: 0-'0=0-0 by BINARITH:def 3
    .=0;
  defpred X[Element of NAT] means (z+w) #N $1 = Partial_Sums(Expan($1,z,w)).$1;
  Partial_Sums(Expan(0,z,w)).0 = Expan(0,z,w).0 by BHSP_4:def 1
    .= (Coef(0)).0 * (z #N 0) * (w #N 0) by A2,Def6
    .= 1/(1 * 1) * z #N 0 * w #N 0 by A2,Def3,NEWTON:18
    .= (z GeoSeq).0 * w #N 0 by RLVECT_1:def 9
    .= 1.X * (w GeoSeq).0 by LOPBAN_3:def 13
    .= 1.X * 1.X by LOPBAN_3:def 13
    .= 1.X by LOPBAN_3:43;
  then
A3: X[0] by LOPBAN_3:def 13;
A4: for n st X[n] holds X[n+1]
  proof
    let n such that
A5: (z+w) #N n = Partial_Sums(Expan(n,z,w)).n;
A6: (z+w) #N (n+1) =((z+w) GeoSeq ).n * (z+w) by LOPBAN_3:def 13
      .=(Partial_Sums(Expan(n,z,w))*(z+w)) .n by A5,LOPBAN_3:def 10
      .=(Partial_Sums(Expan(n,z,w)*(z+w))).n by Th9;
    Expan(n,z,w)*(z+w) =( Expan(n,z,w)*z)+(Expan(n,z,w)*w)
    proof
      now
        let k be Element of NAT;
        thus ( Expan(n,z,w)*(z+w) ).k= Expan(n,z,w).k *(z+w)
        by LOPBAN_3:def 10
          .= Expan(n,z,w).k * z + Expan(n,z,w).k *w by LOPBAN_3:43
          .=( Expan(n,z,w)*z).k+ Expan(n,z,w).k *w by LOPBAN_3:def 10
          .=(Expan(n,z,w)*z).k+(Expan(n,z,w)*w).k by LOPBAN_3:def 10
          .=( (Expan(n,z,w)*z)+(Expan(n,z,w)*w)).k by NORMSP_1:def 5;
      end;
      hence thesis by FUNCT_2:113;
    end;
    then
A7: (z+w) #N (n+1) =( Partial_Sums( (Expan(n,z,w)*z))
    +Partial_Sums(( (Expan(n,z,w)*w)))).n by A6,LOPBAN_3:20
      .= Partial_Sums((Expan(n,z,w)*z)).n
    +Partial_Sums((Expan(n,z,w)*w)).n by NORMSP_1:def 5;
A8: Partial_Sums(( Expan(n,z,w)*z)).n =Partial_Sums((Expan(n,z,w)*z)).(n+1)
    proof
A9:   Partial_Sums((Expan(n,z,w)*z)).(n+1)
      =Partial_Sums((Expan(n,z,w)*z)).n+(Expan(n,z,w)*z).(n+1) by BHSP_4:def 1
        .=Partial_Sums((Expan(n,z,w)*z)).n
      + Expan(n,z,w).(n+1) *z by LOPBAN_3:def 10;
      n < n+1 & n+1 is Element of NAT by XREAL_1:31;
      hence Partial_Sums(( Expan(n,z,w)*z)).(n+1)
      =Partial_Sums((Expan(n,z,w)*z)).n +0.X *z by A9,Def6
        .=Partial_Sums((Expan(n,z,w)*z)).n +0.X by LOPBAN_3:43
        .=Partial_Sums((Expan(n,z,w)*z)).n by LOPBAN_3:43;
    end;
A10: Partial_Sums(( Expan(n,z,w)*w )).n
    =Partial_Sums(( Expan(n,z,w)*w )).(n+1)
    proof
A11:  Partial_Sums((Expan(n,z,w)*w)).(n+1)
      =Partial_Sums((Expan(n,z,w)*w)).n+(Expan(n,z,w)*w).(n+1) by BHSP_4:def 1
        .=Partial_Sums((Expan(n,z,w)*w)).n
      + Expan(n,z,w).(n+1) *w by LOPBAN_3:def 10;
      n < n+1 & n+1 is Element of NAT by XREAL_1:31;
      hence Partial_Sums(( Expan(n,z,w)*w)).(n+1)
      =Partial_Sums((Expan(n,z,w)*w)).n +0.X *w by A11,Def6
        .=Partial_Sums((Expan(n,z,w)*w)).n +0.X by LOPBAN_3:43
        .=Partial_Sums((Expan(n,z,w)*w)).n by LOPBAN_3:43;
    end;
A12: Partial_Sums(( Expan(n,z,w)*z)).(n+1)
    =Partial_Sums(Shift(( Expan(n,z,w)*z))).(n+1)
    proof
A13:  Partial_Sums(( Expan(n,z,w)*z)).(n+1)
      =Partial_Sums(Shift(( Expan(n,z,w)*z))).(n+1)
      +( Expan(n,z,w)*z).(n+1) by Th16;
      0 +n < n+1 by XREAL_1:31;
      then
A14:  Expan(n,z,w).(n+1)=0.X by Def6;
      thus Partial_Sums(( Expan(n,z,w)*z)).(n+1)
      =Partial_Sums(Shift(( Expan(n,z,w)*z))).(n+1)
      + Expan(n,z,w).(n+1)*z by A13,LOPBAN_3:def 10
        .=Partial_Sums(Shift(( Expan(n,z,w)*z))).(n+1) +0.X by A14,LOPBAN_3:43
        .= Partial_Sums(Shift((Expan(n,z,w)*z))).(n+1) by LOPBAN_3:43;
    end;
A15: ( Expan(n,z,w)*w)+Shift(( Expan(n,z,w)*z)) =Expan(n+1,z,w)
    proof
      now
        let k be Element of NAT;
A16:    now
          assume
A17:      n+1 < k;
A18:      n < k & 1 <= k & 1 <k & 0 <k & n <k-1 & n < k-'1
          proof
A19:        0+1 <= n+1 by XREAL_1:8;
A20:        n+1-1 < k -1 by A17,XREAL_1:11;
            then n+0 < k-1+1 by XREAL_1:10;
            hence thesis by A17,A19,A20,BINARITH:50,XXREAL_0:2;
          end;
          (( Expan(n,z,w)*w)+Shift(( Expan(n,z,w)*z))).k
          =(Expan(n,z,w)*w).k + (Shift((Expan(n,z,w)*z))).k by NORMSP_1:def 5

.=(Expan(n,z,w).k*w) + (Shift(( Expan(n,z,w)*z))).k by LOPBAN_3:def 10
            .=(Expan(n,z,w).k*w) + ((Expan(n,z,w)*z)).(k -' 1) by A18,Th15
            .=(Expan(n,z,w).k*w) + ((Expan(n,z,w).(k -' 1)*z))
          by LOPBAN_3:def 10
            .=( 0.X*w )+ ((Expan(n,z,w).(k -' 1))*z) by A18,Def6
            .= 0.X+ ((Expan(n,z,w).(k -' 1))*z) by LOPBAN_3:43
            .=0.X + ( 0.X*z) by A18,Def6
            .=0.X + 0.X by LOPBAN_3:43
            .=0.X by LOPBAN_3:43;
          hence (( Expan(n,z,w)*w)+Shift((Expan(n,z,w)*z))).k
          =Expan(n+1,z,w).k by A17,Def6;
        end;
        now
          assume
A21:      k <= (n+1);
A22:      now
            assume
A23:        k=n+1;
            thus (( Expan(n,z,w)*w)
            +Shift((Expan(n,z,w)*z))).k=Expan(n+1,z,w).k
            proof
A24:          n < n+1 by XREAL_1:31;
A25:          n-'n= n-n by BINARITH:50
                .= 0;
A26:          n+1-'(n+1)= n+1-(n+1) by BINARITH:50
                .= 0;
A27:          n! <>0 & (n+1)! <>0 by NEWTON:23;
A28:          (Coef(n)).(n) = n! /((n! ) * (0! )) by A25,Def3
                .= 1 by A27,NEWTON:18,XCMPLX_1:60;
A29:          (Coef(n+1)).(n+1) = (n+1)! /(((n+1)! ) * (0! )) by A26,Def3
                .= 1 by A27,NEWTON:18,XCMPLX_1:60;
              thus (( Expan(n,z,w)*w)+Shift((Expan(n,z,w)*z))).k =
              (Expan(n,z,w)*w).(n+1)+(Shift((Expan(n,z,w)*z ))).(n+1)
              by A23,NORMSP_1:def 5
                .=( Expan(n,z,w).(n+1) *w) + (Shift((Expan(n,z,w)*z))).(n+1)
              by LOPBAN_3:def 10
                .=( 0.X*w ) + (Shift(( Expan(n,z,w)*z))).(n+1) by A24,Def6
                .=( 0.X ) + (Shift(( Expan(n,z,w)*z))).(n+1) by LOPBAN_3:43
                .= (Shift((Expan(n,z,w)*z ))).(n+1) by LOPBAN_3:43
                .= (( Expan(n,z,w)*z)).(n) by Def5
                .= (Expan(n,z,w)).n *z by LOPBAN_3:def 10
                .=((Coef(n)).n * (z #N n) * (w #N (n-' n))) *z by Def6
                .=(Coef(n)).n * (z #N n) * ((w #N (n-' n)) *z) by LOPBAN_3:43
                .=(Coef(n)).n * (z #N n) * ( z*(w #N (n-' n))) by A1,Lm2
                .=(Coef(n)).n * (z #N n) * z*(w #N (n-' n)) by LOPBAN_3:43
                .=(Coef(n)).n *( (z #N n) * z)*(w #N (n-' n)) by LOPBAN_3:43
                .= ((Coef(n+1)).(n+1) * (z #N (n+1)) * (w #N (n-' n)))
              by A28,A29,Lm1
                .= Expan(n+1,z,w).k by A23,A25,A26,Def6;
            end;
          end;
          now
            assume
A30:        k < n+1;
A31:        now
              assume
A32:          k=0;
              thus (( Expan(n,z,w)*w)+Shift(( Expan(n,z,w)*z))).k
              =Expan(n+1,z,w).k
              proof
A33:            n-'0 =n-0 by BINARITH:50;
A34:            n+1-'0 =n+1-0 by BINARITH:50;
A35:            n! <>0 & (n+1)! <>0 by NEWTON:23;
A36:            (Coef(n)).0 = n! /((0! ) * (n! )) by A33,Def3
                  .= 1 by A35,NEWTON:18,XCMPLX_1:60;
A37:            (Coef(n+1)).0 = (n+1)! /((0! ) * ((n+1)! )) by A34,Def3
                  .= 1 by A35,NEWTON:18,XCMPLX_1:60; thus
                (( Expan(n,z,w)*w)+Shift(( Expan(n,z,w)*z))).k =
                ( Expan(n,z,w)*w).0+(Shift((Expan(n,z,w)*z))).0
                by A32,NORMSP_1:def 5
                  .=(Expan(n,z,w).0 *w) + (Shift(( Expan(n,z,w)*z))).0
                by LOPBAN_3:def 10
                  .=( Expan(n,z,w).0 *w ) + 0.X by Def5
                  .=( Expan(n,z,w).0 *w) by LOPBAN_3:43
                  .= ((Coef(n)).0 * (z #N 0) * (w #N (n-' 0)))*w by Def6
                  .= (Coef(n)).0 *(z #N 0) *((w #N (n-' 0))*w) by LOPBAN_3:43
                  .= (Coef(n+1)).0 *(z #N 0)* (w #N ((n+1)-'0))
                by A33,A34,A36,A37,Lm1
                  .= Expan(n+1,z,w).k by A32,Def6;
              end;
            end;
            now
              assume
A38:          k<>0;
              then
A39:          0<k;
              then
A40:          0+1 <= k by INT_1:20;
A41:          k+1-1 <= n+1-1 by A30,INT_1:20;
              k < k+1 by XREAL_1:31;
              then k-1 <= k+1-1 by XREAL_1:11;
              then k-1 <= n by A41,XXREAL_0:2;
              then
A42:          k-'1 <= n by A40,BINARITH:50;
              thus (( Expan(n,z,w)*w)+Shift((Expan(n,z,w)*z))).k
              =Expan(n+1,z,w).k
              proof
A43:            (( Expan(n,z,w)*w )+Shift(( Expan(n,z,w)*z))).k
                =( Expan(n,z,w)*w).k+(Shift((Expan(n,z,w)*z))).k
                by NORMSP_1:def 5
                  .=(Expan(n,z,w).k)*w + (Shift(( Expan(n,z,w)*z))).k
                by LOPBAN_3:def 10
                  .=(Expan(n,z,w).k)*w + (Expan(n,z,w)*z).( k-'1) by A39,Th15
                  .=(Expan(n,z,w).k)*w + ( Expan(n,z,w).(k-'1))*z
                by LOPBAN_3:def 10
                  .=( (Coef(n)).k * (z #N k) * (w #N (n-' k)) ) *w
                + ( Expan(n,z,w).(k-'1))*z by A41,Def6
                  .=(((Coef(n)).k * (z #N k) * (w #N (n-' k)))) *w
                + ( ((Coef(n)).(k -' 1) * (z #N (k-'1))
                * (w #N (n-' (k -' 1)))))*z by A42,Def6
                  .=((Coef(n)).k * ((z #N k)) * ((w #N (n-' k))*w))
                + ( ((Coef(n)).(k -' 1)) * (z #N (k -' 1))
                * (w #N (n-' (k-'1)))) *z by LOPBAN_3:43
                  .=((Coef(n)).k * ((z #N k)) * ((w #N ((n-' k)+1))))
                + ( ((Coef(n)).(k -' 1)) * (z #N (k -' 1))
                * (w #N (n-' (k-'1)))) *z by Lm1
                  .=((Coef(n)).k * ((z #N k)) * ((w #N ((n-' k)+1))))
                + ((Coef(n)).(k -' 1)) * (z #N (k -' 1))
                *((w #N (n-' (k-'1))) *z) by LOPBAN_3:43
                  .=((Coef(n)).k * ((z #N k)) * ((w #N ((n-' k)+1))))
                + ((Coef(n)).(k -' 1)) * (z #N (k -' 1))
                *(z*(w #N (n-' (k-'1)))) by A1,Lm2
                  .=((Coef(n)).k * ((z #N k)) * ((w #N ((n-' k)+1))))
                + ((Coef(n)).(k -' 1)) * (z #N (k -' 1))
                *z*(w #N (n-' (k-'1))) by LOPBAN_3:43
                  .=((Coef(n)).k * ((z #N k)) * ((w #N ((n-' k)+1))))

+ ((Coef(n)).(k -' 1)) *((z #N (k -' 1))*z) *(w #N (n-' (k-'1)))
                by LOPBAN_3:43
                  .=((Coef(n)).k * ((z #N k)) * ((w #N ((n-' k)+1))))

+ ((Coef(n)).(k -' 1)) *(z #N ((k -' 1)+1)) *(w #N (n-' (k-'1))) by Lm1;
A44:            w #N ((n-' k)+1) = w #N (n+1-'k)
                proof
                  (n-'k)+1=n-k+1 by A41,BINARITH:50
                    .=n+1-k
                    .=(n+1-'k) by A30,BINARITH:50;
                  hence w #N ((n-' k)+1) = w #N (n+1-'k);
                end;
A45:            w #N (n-' (k-'1)) =w #N (n+1-'k)
                proof
                  (n-'(k-'1))=n-(k-'1) by A42,BINARITH:50
                    .=n-(k-1) by A40,BINARITH:50
                    .=n+1-k
                    .=(n+1-'k) by A30,BINARITH:50;
                  hence w #N (n-' (k-'1))=w #N (n+1-'k);
                end;
                z #N ((k -' 1)+1)= z #N k
                proof
                  (k-'1)+1 =k-1+1 by A40,BINARITH:50
                    .=k;
                  hence z #N ((k -' 1)+1)= z #N k;
                end;
                then
A46:            ((Expan(n,z,w)*w)+Shift((Expan(n,z,w)*z))) .k
                =(Coef(n)).k * ((z #N k) * (w #N (n+1-'k)))
                + (Coef(n)).((k -' 1)) *(z #N k) *(w #N (n+1-'k))
                by A43,A44,A45,LOPBAN_3:43
                  .=(Coef(n)).k * ((z #N k) * (w #N (n+1-'k)))
                + (Coef(n)).((k -' 1)) *((z #N k) *(w #N (n+1-'k)))
                by LOPBAN_3:43
                  .= ((Coef(n)).k +(Coef(n)).(k -' 1) )
                * ((z #N k) * (w #N ((n+1) -' k) )) by LOPBAN_3:43;
A47:            (Coef(n)).k +(Coef(n)).(k -' 1) =n! /( (k! ) * ((n -' k)! ) )
                +(Coef(n)).(k-'1) by A41,Def3
                  .=n! /( (k! ) * ((n -' k)! ) )
                +n! /(((k-'1)! ) * (((n-'(k-'1)))! )) by A42,Def3;
A48:            ( (k! ) * ((n -' k)! ) ) * (n+1 - k)
                =(k! ) * (((n -' k)! ) * (n+1 - k));
A49:            (n-'(k-'1)) =n-(k-'1) by A42,BINARITH:50
                  .=n-(k-1) by A40,BINARITH:50
                  .=n+1-k
                  .=n+1-'k by A30,BINARITH:50;
A50:            (((k-'1)! ) * (((n-'(k-'1)))! )) * k
                =k * ((k-'1)! ) * (((n-'(k-'1)))! )
                  .=(k! ) * ((n+1-'k)! ) by A39,A49,Th13;
                (k! ) <> 0 & (n-'k)! <>0 & (k-'1)! <>0
                & ((n-'(k-'1)))! <>0 & ((n+1-'k))! <>0 & (n+1-k) <>0 & k <>0
                by A30,A38,NEWTON:23;
                then
A51:            n! /( (k! ) * ((n-'k)!) )
                =(n! * (n+1-k)) /(( (k! ) * ((n-'k)! ) ) * (n+1-k))
                by XCMPLX_1:92
                  .=(n! * (n+1-k))/((k! ) * ((n+1-'k)! ))
                by A41,A48,Th13;
                n! /(((k-'1)! ) * (((n-'(k-'1)))! ))
                =(n! * k)/((k! ) * ((n+1-'k)! )) by A38,A50,XCMPLX_1:92;
                then (Coef(n)).k +(Coef(n)).(k-'1) =((n! * (n+1-k))+(n! * k))
                / ((k! ) * ((n+1-'k)! )) by A47,A51,XCMPLX_1:63
                  .=( n! * (n+1-k+k)) / ((k! ) * ((n+1-'k)! ))
                  .=((n+1)! ) / ((k! ) * ((n+1-'k)! )) by NEWTON:21
                  .=(Coef(n+1)).k by A30,Def3;
                hence ((Expan(n,z,w)*w)+Shift((Expan(n,z,w)*z))).k
                =(Coef(n+1)).k * (z #N k) * (w #N (n+1-'k) )
                by A46,LOPBAN_3:43
                  .=Expan(n+1,z,w).k by A30,Def6;
              end;
            end;
            hence ((Expan(n,z,w)*w)+Shift((Expan(n,z,w)*z))).k
            =Expan(n+1,z,w).k by A31;
          end;
          hence ((Expan(n,z,w)*w)+Shift((Expan(n,z,w)*z))).k
          =Expan(n+1,z,w).k by A21,A22,REAL_1:def 5;
        end;
        hence ((Expan(n,z,w)*w)+Shift((Expan(n,z,w)*z))).k
        =Expan(n+1,z,w).k by A16;
      end;
      hence thesis by FUNCT_2:113;
    end;
    thus (z+w) #N (n+1) =(Partial_Sums(( Expan(n,z,w)*w)) +
    Partial_Sums(Shift(( Expan(n,z,w)*z)))).(n+1)
    by A7,A8,A10,A12,NORMSP_1:def 5
      .=Partial_Sums(Expan(n+1,z,w)).(n+1) by A15,LOPBAN_3:20;
  end;
  for n holds X[n] from NAT_1:sch 1(A3,A4);
  hence thesis;
end;

theorem Th18:
  Expan_e(n,z,w)=(1/(n!)) * Expan(n,z,w)
proof
  now
    let k be Element of NAT;
A1: now
      assume
A2:   n <k;
      hence Expan_e(n,z,w).k=0.X by Def7
        .=(1/(n!)) * 0.X by LOPBAN_3:43
        .=(1/(n!)) * Expan(n,z,w).k by A2,Def6
        .=((1/(n!)) * Expan(n,z,w)).k by NORMSP_1:def 8;
    end;
    now
      assume
A3:   k <= n;
A4:   n! <> 0 by NEWTON:23; thus
A5:   Expan_e(n,z,w).k = (Coef_e(n)).k * (z #N k) * (w #N (n -' k)) by A3,Def7
        .= 1/( (k!) * ( (n -' k)!) ) * (z #N k) * (w #N (n -' k)) by A3,Def4;
      1/((k! ) * ((n-'k)! ))
      =(((n! ) * 1 )/(n! )) /((k! ) * ((n-'k)!)) by A4,XCMPLX_1:60
        .= (1 /(n! )) * (n! ) /((k! ) * ((n-'k)!)) by XCMPLX_1:75;
      hence Expan_e(n,z,w).k = (1/(n! )) * (n! ) /((k! ) * ((n -' k)! ))
      * ((z #N k) * (w #N (n -' k))) by A5,LOPBAN_3:43
        .= (1/(n! )) * ( (n! ) /((k! ) * ((n -' k)! )) )
      * ((z #N k) * (w #N (n -' k))) by XCMPLX_1:75
        .= (1/(n! )) * (( (n! ) /((k! ) * ((n -' k)! )) )
      * ((z #N k) * (w #N (n -' k)))) by LOPBAN_3:43
        .= (1/(n! )) * ((n! ) /((k! ) * ((n -' k)! ))
      * (z #N k) * (w #N (n -' k))) by LOPBAN_3:43
        .= (1/(n! )) * ((Coef(n)).k * ((z #N k)) * (w #N (n -' k))) by A3,Def3
        .= (1/(n!)) * Expan(n,z,w).k by A3,Def6
        .= ( (1/(n!)) * Expan(n,z,w) ).k by NORMSP_1:def 8;
    end;
    hence Expan_e(n,z,w).k = ( (1/(n! )) * Expan(n,z,w) ).k by A1;
  end;
  hence Expan_e(n,z,w)=((1/(n! )) * Expan(n,z,w)) by FUNCT_2:113;
end;

theorem Th19:
  for z,w st z,w are_commutative holds
  1/ (n! ) *((z+w) #N n) = Partial_Sums(Expan_e(n,z,w)).n
proof
  let z,w such that
A1: z,w are_commutative;
  thus 1/(n!)*((z+w) #N n)= 1/(n! )*(Partial_Sums(Expan(n,z,w)).n) by A1,Th17
    .= ((1/(n! )) * (Partial_Sums(Expan(n,z,w)))).n by NORMSP_1:def 8
    .= Partial_Sums( (1/(n! )) * Expan(n,z,w)).n by LOPBAN_3:24
    .= Partial_Sums(Expan_e(n,z,w)).n by Th18;
end;

theorem Th20:
  0.X ExpSeq is norm_summable & Sum(0.X ExpSeq)=1.X
proof
  defpred X[set] means Partial_Sums( ||. 0.X ExpSeq.||).$1=1;
  Partial_Sums(||.(0.X ExpSeq).||).0 =||. (0.X ExpSeq) .||.0 by SERIES_1:def 1
    .=||. (0.X ExpSeq).0 .|| by NORMSP_1:def 10
    .=||. 1.X .|| by Th14
    .=1 by LOPBAN_3:43;
  then
A1: X[0];
A2: for n st X[n] holds X[n+1]
  proof
    let n such that
A3: Partial_Sums(||.0.X ExpSeq .||).n=1;
    thus Partial_Sums(||.0.X ExpSeq .||).(n+1)
    =1 + ||.0.X ExpSeq .||.(n+1) by A3,SERIES_1:def 1
      .=1 + ||.(0.X ExpSeq ).(n+1).|| by NORMSP_1:def 10
      .=1 + ||.(1/(n+1)*0.X)*(0.X ExpSeq .n) .|| by Th14
      .=1 + ||.(0.X)*(0.X ExpSeq .n) .|| by LOPBAN_3:43
      .=1 + ||.0.X.|| by LOPBAN_3:43
      .=1 + 0 by LOPBAN_3:43
      .=1;
  end;
A4: 0.X ExpSeq is norm_summable
  proof
    for n holds X[n] from NAT_1:sch 1(A1,A2);
    then Partial_Sums(||.0.X ExpSeq .||) is constant by SEQM_3:def 6;
    then Partial_Sums(||.0.X ExpSeq .||) is convergent by SEQ_4:39;
    hence ||.0.X ExpSeq .|| is summable by SERIES_1:def 2;
  end;
  defpred X[set] means Partial_Sums(0.X ExpSeq ).$1=1.X;
  Partial_Sums(0.X ExpSeq ).0 =(0.X ExpSeq ).0 by BHSP_4:def 1
    .=1.X by Th14;
  then
A5: X[0];
A6: for n st X[n] holds X[n+1]
  proof
    let n such that
A7: Partial_Sums(0.X ExpSeq ).n=1.X;
    thus Partial_Sums(0.X ExpSeq ).(n+1)
    =1.X + (0.X ExpSeq ).(n+1) by A7,BHSP_4:def 1
      .=1.X + (1/(n+1) *0.X)*(0.X ExpSeq .n) by Th14
      .=1.X + (0.X)*(0.X ExpSeq .n) by LOPBAN_3:43
      .=1.X + 0.X by LOPBAN_3:43
      .=1.X by LOPBAN_3:43;
  end;
  for n holds X[n] from NAT_1:sch 1(A5,A6);
  hence thesis by A4,Th2;
end;

registration
  let X;
  let z be Element of X;
  cluster z ExpSeq -> norm_summable;
  coherence
  proof
A1: ex m be Element of NAT st for n be Element of NAT st m<=n
    holds ||.(z ExpSeq).n.|| <= (||.z.|| ExpSeq ).n
    proof
      take 0; thus
      for n be Element of NAT st 0<=n
      holds ||.(z ExpSeq).n.|| <= (||.z.|| ExpSeq ).n by Th14;
    end;
    ||.z.|| ExpSeq is summable by SIN_COS:49;
    hence z ExpSeq is norm_summable by A1,LOPBAN_3:32;
  end;
end;

theorem Th21:
  (z ExpSeq).0 = 1.X & Expan(0,z,w).0 = 1.X
proof
  thus (z ExpSeq).0 = 1/(0!)*(z #N 0) by Def2
    .= 1/1 *1.X
  by LOPBAN_3:def 13,NEWTON:18
    .= 1.X by LOPBAN_3:43;
A1: 0-'0=0 by BINARITH:51;
  hence Expan(0,z,w).0 = (Coef(0)).0 * (z #N 0) * (w #N 0) by Def6
    .= 1/(1 * 1) * z #N 0 * w #N 0 by A1,Def3,NEWTON:18
    .= (z GeoSeq).0 * w #N 0 by LOPBAN_3:43
    .= 1.X * (w GeoSeq).0 by LOPBAN_3:def 13
    .= 1.X * 1.X by LOPBAN_3:def 13
    .= 1.X by LOPBAN_3:43;
end;

theorem Th22:
  l <= k implies (Alfa(k+1,z,w)).l = (Alfa(k,z,w)).l + Expan_e(k+1,z,w).l
proof
  assume
A1: l <= k;
A2: k < k+1 by XREAL_1:31;
  then
A3: l <= k+1 by A1,XXREAL_0:2;
  (k+1-'l)=k+1-l by A1,A2,BINARITH:50,XXREAL_0:2;
  then
A4: (k+1-'l)=k-l+1
    .=(k-'l)+1 by A1,BINARITH:50;
  then
A5: (Alfa(k+1,z,w)).l
  =((z ExpSeq).l )* (Partial_Sums(w ExpSeq).((k -' l)+1)) by A3,Def8
    .=(z ExpSeq).l * (Partial_Sums(w ExpSeq).((k -' l))
  +(w ExpSeq).(((k+1)-'l))) by A4,BHSP_4:def 1
    .=((z ExpSeq).l * (Partial_Sums(w ExpSeq).((k -' l)))
  +((z ExpSeq).l * (w ExpSeq).(( (k+1) -' l)))) by LOPBAN_3:43
    .=(Alfa(k,z,w)).l+((z ExpSeq).l * (w ExpSeq).(( (k+1) -' l))) by A1,Def8;
  (z ExpSeq).l * (w ExpSeq).(((k+1)-' l))
  =1/(l! )*(z #N l) * (w ExpSeq).(((k+1)-' l)) by Def2
    .=1/(l! )*(z #N l) * (1/(((k+1)-'l ) !)*(w #N (((k+1)-'l)))) by Def2
    .=(1/(l! )* (1/(((k+1)-'l ) !))*((z #N l) *(w #N (((k+1)-'l)))))
  by LOPBAN_3:43
    .=(1/ ((l! )* (((k+1)-'l ) !))*((z #N l) *(w #N (((k+1)-'l)))))
  by XCMPLX_1:103
    .= ((Coef_e(k+1)).l) * ((z #N l) * (w #N (((k+1)-'l)))) by A3,Def4
    .= ((Coef_e(k+1)).l) * (z #N l) * (w #N (((k+1)-'l))) by LOPBAN_3:43
    .=Expan_e(k+1,z,w).l by A3,Def7;
  hence (Alfa(k+1,z,w)).l = (Alfa(k,z,w)).l + Expan_e(k+1,z,w).l by A5;
end;

theorem Th23:
  Partial_Sums((Alfa(k+1,z,w))).k = (Partial_Sums(( Alfa(k,z,w)))).k
  + (Partial_Sums(( Expan_e(k+1,z,w) ))).k
proof
  now
    let l be Element of NAT;
    assume l <= k;
    hence (Alfa(k+1,z,w)).l = (Alfa(k,z,w)).l + Expan_e(k+1,z,w).l by Th22
      .= ( (Alfa(k,z,w)) + Expan_e(k+1,z,w)).l by NORMSP_1:def 5;
  end;
  hence Partial_Sums((Alfa(k+1,z,w))).k
  =Partial_Sums(((Alfa(k,z,w)) + Expan_e(k+1,z,w))).k by Th11
    .=(Partial_Sums(( Alfa(k,z,w)))
  +Partial_Sums(( Expan_e(k+1,z,w )))).k by LOPBAN_3:20
    .= (Partial_Sums(( Alfa(k,z,w)))).k
  + (Partial_Sums(( Expan_e(k+1,z,w) ))).k by NORMSP_1:def 5;
end;

theorem Th24:
  (z ExpSeq).k=(Expan_e(k,z,w)).k
proof
A1: 0 = k -k;
  then
A2: k-'k=0 by BINARITH:50;
A3: (k-'k)! =1 by A1,BINARITH:50,NEWTON:18;
  thus (Expan_e(k,z,w)).(k)=((Coef_e(k)).k) * (z #N k) * (w #N 0) by A2,Def7
    .=( (Coef_e(k)).k) * (z #N k) * 1.X by LOPBAN_3:44
    .=( (Coef_e(k)).k) * (z #N k) by LOPBAN_3:43
    .=(1/((k!) * 1)) * (z #N k) by A3,Def4
    .=(z ExpSeq).k by Def2;
end;

theorem Th25:
  for z,w st z,w are_commutative holds
  Partial_Sums((z+w) ExpSeq).n = Partial_Sums(Alfa(n,z,w)).n
proof
  let z,w such that
A1: z,w are_commutative;
A2: Partial_Sums((z+w) ExpSeq).0 =((z+w) ExpSeq).0 by BHSP_4:def 1
    .=1.X by Th21;
  defpred X[Element of NAT] means
  Partial_Sums((z+w) ExpSeq).$1=Partial_Sums(Alfa($1,z,w)).$1;
A3: 0-'0=0 by BINARITH:51;
  Partial_Sums(Alfa(0,z,w)).0 = Alfa(0,z,w).0 by BHSP_4:def 1
    .= (z ExpSeq).0 * Partial_Sums(w ExpSeq).0 by A3,Def8
    .= (z ExpSeq).0 * (w ExpSeq).0 by BHSP_4:def 1
    .=1.X * (w ExpSeq).0 by Th21
    .=1.X * 1.X by Th21
    .= 1.X by LOPBAN_3:43;
  then
A4: X[0] by A2;
A5: for k st X[k] holds X[k+1]
  proof
    let k such that
A6: Partial_Sums((z+w) ExpSeq).k=Partial_Sums(Alfa(k,z,w)).k; thus
    Partial_Sums((z+w) ExpSeq).(k+1)=Partial_Sums(Alfa(k+1,z,w)).(k+1)
    proof
A7:   Partial_Sums((Alfa(k+1,z,w))).(k+1)
      =Partial_Sums((Alfa(k+1,z,w))).k+(Alfa(k+1,z,w)).(k+1) by BHSP_4:def 1
        .=((Partial_Sums(( Alfa(k,z,w) ))).k
      + (Partial_Sums(( Expan_e(k+1,z,w) ))).k )
      + (Alfa(k+1,z,w)).(k+1) by Th23
        .= Partial_Sums((z+w) ExpSeq).k
      + ((Partial_Sums(( Expan_e(k+1,z,w) ))).k
      + (Alfa(k+1,z,w)).(k+1)) by A6,LOPBAN_3:43;
      k+1-'(k+1)=0 by BINARITH:51;
      then (Alfa(k+1,z,w)).(k+1)
      =(z ExpSeq).(k+1) * Partial_Sums(w ExpSeq).0 by Def8
        .=(z ExpSeq).(k+1) * ((w ExpSeq).0) by BHSP_4:def 1
        .=(z ExpSeq).(k+1) * 1.X by Th21
        .=(z ExpSeq).(k+1) by LOPBAN_3:43
        .=(Expan_e(k+1,z,w)).(k+1) by Th24;
      then (Partial_Sums(( Expan_e(k+1,z,w) ))).k + (Alfa(k+1,z,w)).(k+1)
      =(Partial_Sums(( Expan_e(k+1,z,w) ))).(k+1) by BHSP_4:def 1
        .=1/((k+1)!)* (z+w) #N (k+1) by A1,Th19;
      hence Partial_Sums((Alfa(k+1,z,w))).(k+1) =Partial_Sums((z+w) ExpSeq).k
      +(z+w) ExpSeq.(k+1) by A7,Def2
        .=Partial_Sums((z+w) ExpSeq).(k+1) by BHSP_4:def 1;
    end;
  end;
  for n holds X[n] from NAT_1:sch 1(A4,A5);
  hence thesis;
end;

theorem Th26:
  for z,w st z,w are_commutative holds
  Partial_Sums(z ExpSeq).k * Partial_Sums(w ExpSeq).k
  -Partial_Sums((z+w) ExpSeq).k = Partial_Sums(Conj(k,z,w)).k
proof
  let z,w such that
A1: z,w are_commutative;
A2: (Partial_Sums(z ExpSeq).k) * (Partial_Sums(w ExpSeq).k)
  -Partial_Sums((z+w) ExpSeq).k
  =Partial_Sums(z ExpSeq).k * Partial_Sums(w ExpSeq).k
  -Partial_Sums(Alfa(k,z,w)).k by A1,Th25
    .=( Partial_Sums(z ExpSeq)* (Partial_Sums(w ExpSeq).k) ).k
  -Partial_Sums(Alfa(k,z,w)).k by LOPBAN_3:def 10
    .=(Partial_Sums((z ExpSeq)*(Partial_Sums(w ExpSeq).k))) .k
  -Partial_Sums(Alfa(k,z,w)).k by Th9
    .=(Partial_Sums( (z ExpSeq)*(Partial_Sums(w ExpSeq).k) )
  -Partial_Sums(Alfa(k,z,w))).k by NORMSP_1:def 6
    .=Partial_Sums((( (z ExpSeq)*(Partial_Sums(w ExpSeq).k)))
  -(Alfa(k,z,w))).k by LOPBAN_3:21;
  for l be Element of NAT st l <= k holds
  ( (z ExpSeq)*(Partial_Sums(w ExpSeq).k) - (Alfa(k,z,w))).l =Conj(k,z,w).l
  proof
    let l be Element of NAT such that
A3: l <= k;
    thus ( (z ExpSeq)*( Partial_Sums(w ExpSeq).k) - (Alfa(k,z,w)) ).l
    = ((z ExpSeq)*(Partial_Sums(w ExpSeq).k) ).l -(Alfa(k,z,w)).l
    by NORMSP_1:def 6
      .= ( (z ExpSeq).l )*( Partial_Sums(w ExpSeq).k)
    -Alfa(k,z,w).l by LOPBAN_3:def 10
      .=((z ExpSeq).l) * ( Partial_Sums(w ExpSeq).k)
    -((z ExpSeq).l) * ( Partial_Sums(w ExpSeq).(k-'l)) by A3,Def8
      .=((z ExpSeq).l) * ( Partial_Sums(w ExpSeq).k
    -Partial_Sums(w ExpSeq).(k-'l) ) by LOPBAN_3:43
      .=Conj(k,z,w).l by A3,Def9;
  end;
  hence (Partial_Sums(z ExpSeq).k) * (Partial_Sums(w ExpSeq).k)
  -Partial_Sums((z+w) ExpSeq).k =Partial_Sums((Conj(k,z,w))).k by A2,Th11;
end;

theorem Th27:
  0 <= (||. z .|| ExpSeq).n
proof
  defpred P[Element of NAT] means 0 <= ||.z.|| |^$1;
A1: (n!) >0 by NEWTON:23;
A2: P[0] by NEWTON:9;
A3: for k st P[k] holds P[k+1]
  proof
    let k such that
A4: P[k];
A5: ||.z.|| |^ (k+1) = ||.z.|| |^ k * ||.z.|| by NEWTON:11;
    0 <= ||.z.|| by NORMSP_1:8;
    hence 0<= ||.z.|| |^ (k+1) by A4,A5;
  end;
  for k holds P[k] from NAT_1:sch 1(A2,A3);
  then
A6: 0 <= ||.z.|| |^n;
A7: ||.z.|| |^n/(n!) = ||.z.|| |^n *((n!))" by XCMPLX_0:def 9;
  0 < ((n!))" by A1,XREAL_1:124;
  then 0<= ||.z.|| |^n *((n!))" by A6;
  hence thesis by A7,SIN_COS:def 9;
end;

theorem Th28:
  ||. Partial_Sums((z ExpSeq)).k .|| <= Partial_Sums(||.z.|| ExpSeq).k &
  Partial_Sums((||.z.|| ExpSeq)).k <= Sum(||.z.|| ExpSeq) &
  ||. Partial_Sums(( z ExpSeq)).k .|| <= Sum(||.z.|| ExpSeq)
proof
  defpred X[Element of NAT] means ||. Partial_Sums(( z ExpSeq)).$1 .||
  <= Partial_Sums((||.z.|| ExpSeq)).$1;
A1: ||. Partial_Sums(( z ExpSeq)).0 .||
  = ||. ((z ExpSeq)).0 .|| by BHSP_4:def 1
    .= ||. 1/ (0! )*(z #N 0).|| by Def2
    .= ||. 1 /1 *1.X.|| by LOPBAN_3:def 13,NEWTON:18
    .= ||. 1.X.|| by LOPBAN_3:43
    .= 1 by LOPBAN_3:43;
  Partial_Sums((||.z.|| ExpSeq)).0 = ((||.z.|| ExpSeq)).0 by SERIES_1:def 1
    .= ((||.z.|| ) |^ 0 ) / (0!) by SIN_COS:def 9
    .= 1 by NEWTON:9,18;
  then
A2: X[0] by A1;
A3: for k st X[k] holds X[k+1]
  proof
    let k such that
A4: ||. Partial_Sums(( z ExpSeq)).k .|| <= Partial_Sums((||.z.|| ExpSeq)).k;
A5: ||. Partial_Sums(( z ExpSeq)).(k+1) .|| =||. Partial_Sums(( z ExpSeq)).k
    + ((z ExpSeq)).(k+1) .|| by BHSP_4:def 1;
A6: ||. Partial_Sums(( z ExpSeq)).k + ((z ExpSeq)).(k+1) .||
    <= ||. Partial_Sums(( z ExpSeq)).k.|| + ||. ((z ExpSeq)).(k+1) .||
    by LOPBAN_3:43;
    ||. ((z ExpSeq)).(k+1) .|| <=(||.z.|| ExpSeq).(k+1) by Th14;
    then ||. Partial_Sums(( z ExpSeq)).k.|| + ||. ((z ExpSeq)).(k+1) .||
    <= ||. Partial_Sums(( z ExpSeq)).k.|| + (||.z.|| ExpSeq).(k+1)
    by XREAL_1:9;
    then
A7: ||. Partial_Sums(( z ExpSeq)).(k+1) .||
    <= ||. Partial_Sums(( z ExpSeq)).k.|| +
    (||.z.|| ExpSeq).(k+1) by A5,A6,XXREAL_0:2;
A8: ||. Partial_Sums(( z ExpSeq)).k.|| + (||.z.|| ExpSeq).(k+1)
    <= Partial_Sums((||.z.|| ExpSeq)).k + (||.z.|| ExpSeq).(k+1)
    by A4,XREAL_1:8;
    Partial_Sums((||.z.|| ExpSeq)).k + (||.z.|| ExpSeq).(k+1)
    =Partial_Sums((||.z.|| ExpSeq)).(k+1) by SERIES_1:def 1;
    hence ||. Partial_Sums(( z ExpSeq)).(k+1) .||
    <= Partial_Sums((||.z.|| ExpSeq)).(k+1) by A7,A8,XXREAL_0:2;
  end;
A9: for k holds X[k] from NAT_1:sch 1(A2,A3);
  hence ||. Partial_Sums(( z ExpSeq)).k .||
  <= Partial_Sums((||.z.|| ExpSeq)).k;
A10: for n holds 0 <= (||.z.|| ExpSeq).n by Th27;
  then
A11: Partial_Sums((||.z.|| ExpSeq )) is non-decreasing by SERIES_1:19;
  ||.z.|| ExpSeq is summable by SIN_COS:49;
  then
A12: Partial_Sums(||.z.|| ExpSeq) is bounded_above by A10,SERIES_1:20;
  then Partial_Sums((||.z.|| ExpSeq)).k
  <= lim(Partial_Sums((||.z.|| ExpSeq ))) by A11,SEQ_4:54;
  hence Partial_Sums((||.z.|| ExpSeq)).k
  <= Sum(||.z.|| ExpSeq) by SERIES_1:def 3;
A13: now
    let k;
    lim(Partial_Sums((||.z.|| ExpSeq)))=Sum(||.z.|| ExpSeq) by SERIES_1:def 3;
    hence Partial_Sums((||.z.|| ExpSeq)).k <= Sum(||.z.|| ExpSeq)
    by A11,A12,SEQ_4:54;
  end;
A14: ||. Partial_Sums(( z ExpSeq)).k .||
  <= Partial_Sums((||.z.|| ExpSeq)).k by A9;
  Partial_Sums((||.z.|| ExpSeq)).k <= Sum(||.z.|| ExpSeq) by A13;
  hence ||. Partial_Sums(( z ExpSeq)).k .|| <= Sum(||.z.|| ExpSeq)
  by A14,XXREAL_0:2;
end;

theorem Th29:
  1 <= Sum(||.z.|| ExpSeq)
proof
  ||. Partial_Sums(z ExpSeq).0 .|| =||. (z ExpSeq).0 .|| by BHSP_4:def 1
    .=||. 1.X.|| by Th14
    .=1 by LOPBAN_3:43;
  hence 1 <= Sum(||.z.|| ExpSeq) by Th28;
end;

theorem Th30:
  abs((Partial_Sums(||.z.|| ExpSeq)).n) = Partial_Sums(||.z.|| ExpSeq).n &
  (n <= m implies
  abs((Partial_Sums(||.z.|| ExpSeq).m-Partial_Sums(||.z.|| ExpSeq).n))
  = Partial_Sums(||.z.|| ExpSeq).m-Partial_Sums(||.z.|| ExpSeq).n)
proof
  for n holds 0 <= (||. z .|| ExpSeq).n by Th27;
  hence thesis by COMSEQ_3:9;
end;

theorem Th31:
  abs(Partial_Sums(||.Conj(k,z,w).||).n)=Partial_Sums(||.Conj(k,z,w).||).n
proof
A1: now
    let n;
    ||.Conj(k,z,w).||.n=||.(Conj(k,z,w)).n.|| by NORMSP_1:def 10;
    hence 0 <= ||.Conj(k,z,w).||.n by NORMSP_1:8;
  end;
  then Partial_Sums(||.Conj(k,z,w).||) is non-decreasing by SERIES_1:19;
  then
A2: Partial_Sums(||.Conj(k,z,w).||).0
  <= Partial_Sums(||.Conj(k,z,w).||).n by SEQM_3:12;
A3: Partial_Sums(||.Conj(k,z,w).||).0=(||.Conj(k,z,w).||).0 by SERIES_1:def 1;
  0 <= (||.Conj(k,z,w).||).0 by A1;
  hence thesis by A2,A3,ABSVALUE:def 1;
end;

theorem Th32:
  for p being real number st p>0 ex n st for k st n <= k
  holds abs(Partial_Sums(||.Conj(k,z,w).||).k) < p
proof
  let p be real number such that
A1: p>0;
  reconsider pp = p as Real by XREAL_0:def 1;
A2: 1 <= Sum(||.z.|| ExpSeq) by Th29;
  then 0 * Sum(||.z.|| ExpSeq) < 4 * Sum(||.z.|| ExpSeq) by XREAL_1:70;
  then
A3: 0/(4 * Sum(||.z.|| ExpSeq)) < p/(4 * Sum(||.z.|| ExpSeq)) by A1,REAL_1:73;
A4: 1 <= Sum(||.w.|| ExpSeq) by Th29;
  then 0 * Sum(||.w.|| ExpSeq) < 4 * Sum(||.w.|| ExpSeq) by XREAL_1:70;
  then
A5: 0/(4 * Sum(||.w.|| ExpSeq)) < p/(4 * Sum(||.w.|| ExpSeq)) by A1,REAL_1:73;
  set p1=min((pp/(4 * Sum(||.z.|| ExpSeq))),(pp/(4 * Sum(||.w.|| ExpSeq))));
A6: p1 > 0 by A3,A5,XXREAL_0:15;
A7: p1>0 & p1 <= p/(4 * Sum(||.z.|| ExpSeq))
  & p1 <= p/(4 * Sum(||.w.|| ExpSeq)) by A3,A5,XXREAL_0:15,17;
  ( ||.z.|| ExpSeq ) is summable by SIN_COS:49;
  then Partial_Sums(( ||.z.|| ExpSeq )) is convergent by SERIES_1:def 2;
  then consider n1 such that
A8: for k,l be Element of NAT st n1 <= k & n1 <= l holds
  abs(Partial_Sums(( ||.z.|| ExpSeq )).k - Partial_Sums(( ||.z.|| ExpSeq )).l)
  < p1 by A6,COMSEQ_3:4;
  Partial_Sums(( w ExpSeq )) is convergent by LOPBAN_3:def 2;
  then for s be Real st 0<s
  ex n be Element of NAT st for m be Element of NAT st n<=m holds
  ||.Partial_Sums(( w ExpSeq )).m -Partial_Sums(( w ExpSeq )).n.||<s
  by LOPBAN_3:4;
  then Partial_Sums(( w ExpSeq )) is Cauchy_sequence_by_Norm by LOPBAN_3:5;
  then consider n2 such that
A9: for k,l be Element of NAT st n2 <= k & n2 <= l holds
  ||.Partial_Sums(( w ExpSeq )).k - Partial_Sums(( w ExpSeq )).l.||
  < p1 by A6,RSSPACE3:10;
  set n3=n1+n2;
  take n4 = n3+n3;
A10: now
    let n;
    let k;
    now
      let l be Element of NAT such that
A11:  l <= k;
A12:  ||.(z ExpSeq).l * (Partial_Sums(w ExpSeq).k
      -Partial_Sums(w ExpSeq).(k-'l)) .||
      <=||.(z ExpSeq).l.|| * ||.(Partial_Sums(w ExpSeq).k
      -Partial_Sums(w ExpSeq).(k-'l)).|| by LOPBAN_3:43;
A13:  0 <=||.(Partial_Sums(w ExpSeq).k -Partial_Sums(w ExpSeq).(k-'l)).||
      by NORMSP_1:8;
      ||.(z ExpSeq).l.|| <= (||.z.|| ExpSeq).l by Th14;
      then
A14:  ||.(z ExpSeq).l.|| * ||.(Partial_Sums(w ExpSeq).k
      -Partial_Sums(w ExpSeq).(k-'l)).||
      <=(||.z.|| ExpSeq).l * ||.(Partial_Sums(w ExpSeq).k
      -Partial_Sums(w ExpSeq).(k-'l)).|| by A13,XREAL_1:66;
      ||.Conj(k,z,w).||.l =||.( Conj(k,z,w).l) .|| by NORMSP_1:def 10
        .=||.(z ExpSeq).l * (Partial_Sums(w ExpSeq).k
      -Partial_Sums(w ExpSeq).(k-'l)) .|| by A11,Def9;
      hence ||.Conj(k,z,w).||.l
      <=(||.z.|| ExpSeq).l * ||.(Partial_Sums(w ExpSeq).k
      -Partial_Sums(w ExpSeq).(k-'l)).|| by A12,A14,XXREAL_0:2;
    end;
    hence for l be Element of NAT st l <= k holds
    ||.Conj(k,z,w).||.l <=(||.z.|| ExpSeq).l * ||.(Partial_Sums(w ExpSeq).k
    -Partial_Sums(w ExpSeq).(k-'l)).||;
  end;
A15: now
    let k;
    now
      let l be Element of NAT;
      assume l <= k;
      then
A16:  ||.Conj(k,z,w).||.l <= (||.z.|| ExpSeq).l * ||.Partial_Sums(w ExpSeq).k
      -Partial_Sums(w ExpSeq).(k-'l).|| by A10;
A17:  ||.Partial_Sums(w ExpSeq).k -Partial_Sums(w ExpSeq).(k-'l).||
      <= ||.Partial_Sums(w ExpSeq).k .|| + ||.Partial_Sums(w ExpSeq).(k-'l).||
      by NORMSP_1:7;
      ||.Partial_Sums(w ExpSeq).k .|| <= Sum(||.w.|| ExpSeq) by Th28;
      then
A18:  ||.Partial_Sums(w ExpSeq).k .|| + ||.Partial_Sums(w ExpSeq).(k -'l).||
      <= Sum(||.w.|| ExpSeq) + ||.Partial_Sums(w ExpSeq).(k-'l).||
      by XREAL_1:8;
      ||.Partial_Sums(w ExpSeq).(k-'l).|| <= Sum(||.w.|| ExpSeq) by Th28;
      then Sum(||.w.|| ExpSeq) + ||.Partial_Sums(w ExpSeq).(k-'l).||
      <= Sum(||.w.|| ExpSeq)+ Sum(||.w.|| ExpSeq) by XREAL_1:8;
      then ||.Partial_Sums(w ExpSeq).k .||
      + ||.Partial_Sums(w ExpSeq).(k-'l).||
      <= 2 * Sum(||.w.|| ExpSeq) by A18,XXREAL_0:2;
      then
A19:  ||.Partial_Sums(w ExpSeq).k -Partial_Sums(w ExpSeq).(k-'l).||
      <= 2 * Sum(||.w.|| ExpSeq) by A17,XXREAL_0:2;
      0 <= (||.z.|| ExpSeq).l by Th27;
      then (||.z.|| ExpSeq).l * ||.Partial_Sums(w ExpSeq).k
      -Partial_Sums(w ExpSeq).(k-'l).||
      <= (||.z.|| ExpSeq).l * (2 * Sum(||.w.|| ExpSeq)) by A19,XREAL_1:66;
      hence ||.Conj(k,z,w).||.l <= (||.z.|| ExpSeq).l
      * (2 * Sum(||.w.|| ExpSeq)) by A16,XXREAL_0:2;
    end;
    hence for l be Element of NAT st l <= k holds
    ||.Conj(k,z,w).||.l <= (||.z.|| ExpSeq).l * (2 * Sum(||.w.|| ExpSeq));
  end;
  now
    let k such that
A20: n4 <= k;
A21: 0+n3 <= n3+n3 by XREAL_1:8;
    then
A22: n3 <= k by A20,XXREAL_0:2;
A23: n1+0 <= n1+n2 by XREAL_1:8;
    then
A24: n1 <= k by A22,XXREAL_0:2;
    now
      let l be Element of NAT;
      assume
A25:  l <= n3;
      then
A26:  l <= k by A22,XXREAL_0:2;
A27:  k-'l=k-l by A22,A25,BINARITH:50,XXREAL_0:2;
A28:  0+n2 <= n1+n2 by XREAL_1:8;
A29:  n4-l <= k-l by A20,XREAL_1:11;
      n3+n3-n3 <= n3+n3-l by A25,REAL_2:106;
      then n3 <= k-l by A29,XXREAL_0:2;
      then
A30:  n2 <= k-'l by A27,A28,XXREAL_0:2;
      0+n3 <= n3+n3 by XREAL_1:8;
      then n2 <= n4 by A28,XXREAL_0:2;
      then n2 <= k by A20,XXREAL_0:2;
      then
A31:  ||.Partial_Sums(( w ExpSeq )).k - Partial_Sums(( w ExpSeq )).( k-'l).||
      < p1 by A9,A30;
      0 <= (||.z.|| ExpSeq).l by Th27;
      then
A32:  (||.z.|| ExpSeq).l * ||.Partial_Sums(( w ExpSeq )).k
      - Partial_Sums(( w ExpSeq )).(k-'l).||
      <= (||.z.|| ExpSeq).l * p1 by A31,XREAL_1:66;
      ||.Conj(k,z,w).||.l <=(||.z.|| ExpSeq).l * ||.(Partial_Sums(w ExpSeq).k
      -Partial_Sums(w ExpSeq).(k-'l)).|| by A10,A26;
      hence ||.Conj(k,z,w).||.l <= p1 * (||.z.|| ExpSeq).l by A32,XXREAL_0:2;
    end;
    then
A33: Partial_Sums(||.Conj(k,z,w).||).n3
    <= Partial_Sums(||.z.|| ExpSeq).n3 * p1 by COMSEQ_3:7;
    Partial_Sums(||.z.|| ExpSeq).n3 <= Sum(||.z.|| ExpSeq) by Th28;
    then Partial_Sums(||.z.|| ExpSeq).n3 * p1
    <= Sum(||.z.|| ExpSeq) * p1 by A6,XREAL_1:66;
    then
A34: Partial_Sums(||.Conj(k,z,w).||).n3
    <= Sum(||.z.|| ExpSeq) * p1 by A33,XXREAL_0:2;
A35: Sum(||.z.|| ExpSeq) * p1
    <= Sum(||.z.|| ExpSeq) * (p/(4 * Sum(||.z.|| ExpSeq)))
    by A2,A7,XREAL_1:66;
A36: 0 <> Sum(||.z.|| ExpSeq) & 4 <>0 by Th29;
    Sum(||.z.|| ExpSeq) * (p/(4 * Sum(||.z.|| ExpSeq)))
    =Sum(||.z.|| ExpSeq) * (p * (4 * Sum(||.z.|| ExpSeq))") by XCMPLX_0:def 9
      .=(Sum(||.z.|| ExpSeq) * p) * (4 * Sum(||.z.|| ExpSeq))"
      .=(Sum(||.z.|| ExpSeq) * p)/(4 * Sum(||.z.|| ExpSeq)) by XCMPLX_0:def 9
      .=p/4 by A36,XCMPLX_1:92;
    then
A37: Partial_Sums(||.Conj(k,z,w).||).n3 <= p/4 by A34,A35,XXREAL_0:2;
    0 < p/4 & 0 < p/2 by A1,SEQ_2:3;
    then 0+p/4 < p/4 + p/4 by XREAL_1:8;
    then
A38: Partial_Sums(||.Conj(k,z,w).||).n3 < p/2 by A37,XXREAL_0:2;
    k-'n3=k-n3 by A20,A21,BINARITH:50,XXREAL_0:2;
    then
A39: k=(k-'n3)+n3;
    for l be Element of NAT st l <= k holds
    ||.Conj(k,z,w).||.l <= (2 * Sum(||.w.|| ExpSeq)) * (||.z.|| ExpSeq).l
    by A15;
    then
A40: Partial_Sums(||.Conj(k,z,w).||).(k) -Partial_Sums(||.Conj(k,z,w) .||).n3
    <= (Partial_Sums(||.z.|| ExpSeq).(k) -Partial_Sums(||.z.|| ExpSeq).n3)
    *(2 * Sum(||.w.|| ExpSeq)) by A22,A39,COMSEQ_3:8;
    abs((Partial_Sums(||.z.|| ExpSeq).k-Partial_Sums(||.z.|| ExpSeq).n3 ) )
    <= p1 by A8,A23,A24;
    then
A41: Partial_Sums(||.z.|| ExpSeq).k-Partial_Sums(||.z.|| ExpSeq).n3
    <= p1 by A22,Th30;
A42: 0 * Sum(||.w.|| ExpSeq) < 2 * Sum(||.w.|| ExpSeq) by A4,XREAL_1:70;
    then (Partial_Sums(||.z.|| ExpSeq).k -Partial_Sums(||.z.|| ExpSeq).n3)
    * (2 * Sum(||.w.|| ExpSeq))
    <= p1 * (2 * Sum(||.w.|| ExpSeq)) by A41,XREAL_1:66;
    then
A43: Partial_Sums(||.Conj(k,z,w).||).k-Partial_Sums(||.Conj(k,z,w).||) .n3
    <= p1 * (2 * Sum(||.w.|| ExpSeq)) by A40,XXREAL_0:2;
A44: (2 * Sum(||.w.|| ExpSeq)) * p1
    <= (2 * Sum(||.w.|| ExpSeq)) * (p/(4 * Sum(||.w.|| ExpSeq)))
    by A7,A42,XREAL_1:66;
A45: 0 <> Sum(||.w.|| ExpSeq) & 4 <>0 by Th29;
    (2 * Sum(||.w.|| ExpSeq) ) * (p/(4 * Sum(||.w.|| ExpSeq)))
    =(2 * Sum(||.w.|| ExpSeq) ) * (p * (4 * Sum
    (||.w.|| ExpSeq))") by XCMPLX_0:def 9
      .=((2 * Sum(||.w.|| ExpSeq) ) * p ) * (4 * Sum (||.w.|| ExpSeq))"
      .=((2 * p ) * Sum(||.w.|| ExpSeq) ) /(4 * Sum(||.w.|| ExpSeq))
    by XCMPLX_0:def 9
      .= (2 * p )/4 by A45,XCMPLX_1:92
      .= p/2;
    then Partial_Sums(||.Conj(k,z,w).||).k -Partial_Sums(||.Conj(k,z,w).||).n3
    <= p/2 by A43,A44,XXREAL_0:2;
    then (Partial_Sums(||.Conj(k,z,w).||).k
    -Partial_Sums(||.Conj(k,z,w).||).n3)
    +Partial_Sums(||.Conj(k,z,w).||).n3 < (p/2)+(p/2) by A38,XREAL_1:10;
    hence abs(Partial_Sums(||.Conj(k,z,w).||).k) < p by Th31;
  end;
  hence for k st n4 <= k holds abs(Partial_Sums(||.Conj(k,z,w).||).k) < p;
end;

theorem Th33:
  for seq st for k holds seq.k=Partial_Sums((Conj(k,z,w))).k
  holds seq is convergent & lim(seq)=0.X
proof
  let seq such that
A1: for k holds seq.k=Partial_Sums((Conj(k,z,w))).k;
A2: now
    let k;
    ||.seq.k.||=||.Partial_Sums((Conj(k,z,w))).k.|| by A1;
    hence ||.seq.k.|| <= Partial_Sums(||.Conj(k,z,w).||).k by Th10;
  end;
  deffunc U(Element of NAT) = Partial_Sums(||.Conj($1,z,w).||).$1;
  ex rseq be Real_Sequence st for k holds rseq.k = U(k) from SEQ_1:sch 1;
  then consider rseq be Real_Sequence such that
A3: for k holds rseq.k=Partial_Sums(||.Conj(k,z,w).||).k;
A4: now
    let k;
    ||.seq.k.|| <= Partial_Sums(||.Conj(k,z,w).||).k by A2;
    hence ||.seq.k.|| <= rseq.k by A3;
  end;
  rseq is convergent & lim(rseq) =0
  proof
A5: now
      let p be real number;
      assume p>0;
      then consider n such that
A6:   for k st n <= k
      holds abs(Partial_Sums(||.Conj(k,z,w).||).k) < p by Th32;
      take n;
      now
        let k such that
A7:     n <= k;
        abs(rseq.k-0)=abs(Partial_Sums(||.Conj(k,z,w).||).k) by A3;
        hence abs(rseq.k-0) < p by A6,A7;
      end;
      hence for k st n <= k holds abs(rseq.k-0) < p;
    end;
    hence rseq is convergent by SEQ_2:def 6;
    hence lim(rseq)=0 by A5,SEQ_2:def 7;
  end;
  hence seq is convergent & lim(seq)=0.X by A4,Th12;
end;

Lm3: for z,w st z,w are_commutative holds
Sum(z ExpSeq) * Sum(w ExpSeq) = Sum((z+w) ExpSeq)
proof
  let z,w such that
A1: z,w are_commutative;
  deffunc U(Element of NAT) = Partial_Sums(Conj($1,z,w)).$1;
  ex seq st for k holds seq.k= U(k) from FUNCT_2:sch 4;
  then consider seq be sequence of X such that
A2: for k holds seq.k=Partial_Sums(Conj(k,z,w)).k;
  now
    let k be Element of NAT;
    thus seq.k=Partial_Sums(Conj(k,z,w)).k by A2
      .=Partial_Sums(z ExpSeq).k * Partial_Sums(w ExpSeq).k
    -Partial_Sums((z+w) ExpSeq).k by A1,Th26
      .=(Partial_Sums(z ExpSeq) * Partial_Sums(w ExpSeq)).k
    -Partial_Sums((z+w) ExpSeq).k by LOPBAN_3:def 11
      .=(Partial_Sums(z ExpSeq) * Partial_Sums(w ExpSeq)
    -Partial_Sums((z+w) ExpSeq) ).k by NORMSP_1:def 6;
  end;
  then
A3: seq=Partial_Sums(z ExpSeq) * Partial_Sums(w ExpSeq)
  -Partial_Sums((z+w) ExpSeq) by FUNCT_2:113;
A4: Partial_Sums(z ExpSeq) is convergent by LOPBAN_3:def 2;
A5: Partial_Sums(w ExpSeq) is convergent by LOPBAN_3:def 2;
A6: Partial_Sums((z+w) ExpSeq) is convergent by LOPBAN_3:def 2;
A7: Partial_Sums(z ExpSeq) * Partial_Sums(w ExpSeq) is convergent &
  lim(Partial_Sums(z ExpSeq) * Partial_Sums(w ExpSeq))
  =lim(Partial_Sums(z ExpSeq)) * lim(Partial_Sums(w ExpSeq)) by A4,A5,Th3,Th8;
  seq is convergent & lim(seq)=0.X by A2,Th33;
  hence Sum((z+w) ExpSeq) =Sum(z ExpSeq) * Sum(w ExpSeq) by A3,A6,A7,Th1;
end;

definition
  let X be Banach_Algebra;
  func exp_ X -> Function of the carrier of X, the carrier of X means
  :Def10:
  for z being Element of X holds it.z=Sum(z ExpSeq);
  existence
  proof
    deffunc U(Element of X ) = Sum($1 ExpSeq);
    consider f being Function of the carrier of X, the carrier of X such that
A1: for z be Element of X holds f.z = U(z) from FUNCT_2:sch 4;

::  take f;
    thus thesis by A1;
  end;
  uniqueness
  proof
    let f1,f2 be Function of the carrier of X, the carrier of X;
    assume that
A2: for z be Element of X holds f1.z=Sum(z ExpSeq) and
A3: for z be Element of X holds f2.z=Sum(z ExpSeq);
    for z be Element of X holds f1.z = f2.z
    proof
      let z be Element of X;
      thus f1.z=Sum(z ExpSeq) by A2
        .=f2.z by A3;
    end;
    hence f1=f2 by FUNCT_2:113;
  end;
end;

definition
  let X,z;
  func exp z -> Element of X equals

  (exp_ X).z;
  correctness;
end;

theorem
  for z holds exp(z)=Sum(z ExpSeq) by Def10;

theorem Th35:
  for z1,z2 st z1,z2 are_commutative holds exp(z1+z2)=exp(z1) *exp(z2)
  &exp(z2+z1)=exp(z2) *exp(z1) &exp(z1+z2)=exp(z2+z1)
  &exp(z1),exp(z2) are_commutative
proof
  let z1,z2 such that
A1: z1,z2 are_commutative;
A2: exp(z1+z2)=Sum((z1+z2) ExpSeq) by Def10
    .=Sum(z1 ExpSeq)*Sum(z2 ExpSeq) by A1,Lm3
    .=exp(z1)*Sum(z2 ExpSeq) by Def10
    .=exp(z1) *exp(z2) by Def10;
  exp(z2+z1)=Sum((z2+z1) ExpSeq) by Def10
    .=Sum(z2 ExpSeq)*Sum(z1 ExpSeq) by A1,Lm3
    .=exp(z2)*Sum(z1 ExpSeq) by Def10
    .=exp(z2) *exp(z1) by Def10;
  hence thesis by A2,Def1;
end;

theorem
  for z1,z2 st z1,z2 are_commutative holds z1* exp(z2)=exp(z2)*z1
proof
  let z1,z2 such that
A1: z1,z2 are_commutative;
A2: Partial_Sums( z2 ExpSeq) is convergent by LOPBAN_3:def 2;
A3: z1*(z2 ExpSeq) = (z2 ExpSeq) *z1
  proof
    now
      let n be Element of NAT;
      thus (z1*(z2 ExpSeq)).n =z1*(z2 ExpSeq).n by LOPBAN_3:def 9
        .=z1*(1/(n! )*(z2 #N n)) by Def2
        .=(1/(n! ))*(z1*(z2 #N n))
      by LOPBAN_3:43
        .=(1/(n! ))*((z2 #N n)*z1) by A1,Lm2
        .=(1/(n! )*(z2 #N n))*z1 by LOPBAN_3:43
        .=((z2 ExpSeq).n)*z1 by Def2
        .=((z2 ExpSeq)*z1).n by LOPBAN_3:def 10;
    end;
    hence thesis by FUNCT_2:113;
  end;
  thus z1*exp(z2) =z1*Sum(z2 ExpSeq) by Def10
    .=lim(z1*Partial_Sums(z2 ExpSeq)) by A2,Th6
    .=lim(Partial_Sums(z1*(z2 ExpSeq))) by Th9
    .=lim(Partial_Sums(z2 ExpSeq)*z1) by A3,Th9
    .=Sum(z2 ExpSeq) *z1 by A2,Th7
    .=exp(z2) *z1 by Def10;
end;

theorem Th37:
  exp(0.X) = 1.X
proof
  exp(0.X) =Sum( 0.X ExpSeq) by Def10
    .=1.X by Th20;
  hence thesis;
end;

theorem Th38:
  exp(z)*exp(-z)= 1.X & exp(-z)*exp(z)= 1.X
proof
  z *(-z) =z *((-1)*z) by LOPBAN_3:43
    .=(-1)*(z*z) by LOPBAN_3:43
    .=(-1)*z*z by LOPBAN_3:43
    .=(-z)*z by LOPBAN_3:43;
  then
A1: z,(-z) are_commutative by Def1;
  hence exp(z)*exp(-z) =exp(z+(-z)) by Th35
    .=exp(0.X) by RLVECT_1:16
    .=1.X by Th37;
  thus exp(-z)*exp(z) =exp((-z)+z) by A1,Th35
    .=exp(0.X) by RLVECT_1:16
    .=1.X by Th37;
end;

theorem
  exp(z) is invertible & (exp(z))" = exp(-z) &
  exp(-z) is invertible & (exp(-z))" = exp(z)
proof
A1: exp(z)*exp(-z)= 1.X & exp(-z)*exp(z)= 1.X by Th38;
  hence exp(z) is invertible by LOPBAN_3:def 8;
  hence (exp(z))" = exp(-z) by A1,LOPBAN_3:def 12;
  thus exp(-z) is invertible by A1,LOPBAN_3:def 8;
  hence (exp(-z))" = exp(z) by A1,LOPBAN_3:def 12;
end;

theorem Th40:
  for z for s,t be Real holds s*z,t*z are_commutative
proof
  let z;
  let s, t be Real;
  (s*z) *(t*z) =(s*t)*(z*z) by LOPBAN_3:43
    .=(t*z)*(s*z) by LOPBAN_3:43;
  hence s*z,t*z are_commutative by Def1;
end;

theorem
  for z for s,t be Real holds exp(s*z)*exp(t*z) = exp((s+t)*z) &
  exp(t*z)*exp(s*z) = exp((t+s)*z) & exp((s+t)*z) = exp((t+s)*z) &
  exp(s*z),exp(t*z) are_commutative
proof
  let z;
  let s, t be Real;
A1: s*z,t*z are_commutative by Th40;
  hence
A2: exp(s*z)*exp(t*z) = exp(s*z+t*z) by Th35
    .= exp((s+t)*z) by LOPBAN_3:43;
  thus
A3: exp(t*z)*exp(s*z) = exp(t*z+s*z) by A1,Th35
    .= exp((t+s)*z) by LOPBAN_3:43;
  thus exp((s+t)*z) = exp((t+s)*z);
  thus exp(s*z),exp(t*z) are_commutative by A2,A3,Def1;
end;

