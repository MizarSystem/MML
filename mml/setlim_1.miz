:: Limit of Sequence of Subsets
::  by Bo Zhang , Hiroshi Yamazaki and Yatsuka Nakamura
::
:: Received March 15, 2005
:: Copyright (c) 2005 Association of Mizar Users

environ

 vocabularies RELAT_1, SEQ_2, FUNCT_1, ORDINAL2, BOOLE, SUBSET_1, PROB_2,
      SETLIM_1, SETFAM_1, TARSKI, SEQM_3, PROB_1, YELLOW_6, ARYTM;
 notations NUMBERS, XXREAL_0, NAT_1, RELAT_1, FUNCT_1, TARSKI, XBOOLE_0,
      YELLOW_6, ZFMISC_1, SUBSET_1, RELSET_1, SETFAM_1, PROB_1, FUNCT_2,
      KURATO_2;
 constructors SETFAM_1, XXREAL_0, NAT_1, PROB_1, YELLOW_6, KURATO_2,
      XREAL_0;
 registrations XBOOLE_0, SUBSET_1, ORDINAL1, RELSET_1, XREAL_0, FUNCT_2,
      RELAT_1;
 requirements NUMERALS, BOOLE, SUBSET;
 definitions TARSKI, SUBSET_1;
 theorems FUNCT_1, FUNCT_2, PROB_1, NAT_1, TARSKI, XBOOLE_0, XBOOLE_1,
      XCMPLX_1, SETFAM_1, ZFMISC_1, CARD_3, KURATO_2, YELLOW_6,
      PROB_2, XREAL_1, ORDINAL1;
 schemes NAT_1, FUNCT_1;

begin

 reserve n,m,k,k1,k2,i,j for Element of NAT;
 reserve x,y,z,X,Y,Z for set;
 reserve A for Subset of X;
 reserve B,A1,A2,A3 for SetSequence of X;
 reserve Si for SigmaField of X;
 reserve S,S1,S2,S3 for SetSequence of Si;

LM1: i <= j implies i = j or i + 1 <= j
proof
 assume i<=j;
 then i + 1 <= j + 1 by XREAL_1:8;
 hence thesis by XCMPLX_1:2,NAT_1:8;
end;

theorem Th5:
  for f be Function of NAT,Y holds f.(n + m) in {f.k : n <= k}
proof
  n <= n + m by NAT_1:11;
  hence thesis;
end;

theorem Th6:
  for f being Function of NAT,Y holds
    {f.k1: n <= k1} = {f.k2 : n+1 <=k2} \/ {f.n}
proof
    let f be Function of NAT,Y;
    set Z1 = {f.k1:n <= k1};
    set Z2 = {f.k2:(n+1) <= k2};
A00: {f.k1: n <= k1} c= {f.k2 : n+1 <= k2} \/ {f.n}
   proof
    let x;
    assume x in Z1;
    then consider z such that
     B0: x=z & z in Z1;
    consider k such that
     B1: z = f.k & n <= k by B0;
     z = f.k & n+1 <= k or z = f.k & n = k by B1,LM1;
     then z in Z2 or z in {f.n} by TARSKI:def 1;
    hence x in (Z2 \/ {f.n}) by B0, XBOOLE_0:def 2;
   end;
   Z2 \/ {f.n} c= Z1
    proof
     let x; assume
         C0:x in Z2 \/ {f.n};
         now per cases by C0,XBOOLE_0:def 2;
          case x in Z2;
           then consider z such that
           CA2: x = z & z in Z2;
           consider k11 being Element of NAT such that
           CA3: z=f.k11 & n+1 <= k11 by CA2;
           n <= k11 by CA3,NAT_1:13;
          hence x in Z1 by CA2,CA3;
          end;
          case x in {f.n};
           then x = f.n by TARSKI:def 1;
           hence x in Z1;
          end;
         end;
        hence thesis;
    end;
 hence thesis by A00,XBOOLE_0:def 10;
end;

theorem Th7:
  for f be Function of NAT,Y holds
    (for k1 holds x in f.(n+k1)) iff
    (for Z st Z in {f.k2 : n <= k2} holds x in Z)
proof
 let f be Function of NAT,Y;
 set Z = {f.k2 : n <= k2};
A00: now assume
     B0: for k1 holds x in f.(n+k1);
     now let Z1 be set;
      assume Z1 in Z;
      then consider k1 being Element of NAT such that
      B1: Z1=f.k1 & n <= k1;
      ex m be Nat st k1 = n + m by B1,NAT_1:10;
      then consider k2 being Nat such that
      B2: Z1=f.(n + k2) by B1;
      k2 in NAT by ORDINAL1:def 13;
      hence x in Z1 by B0,B2;
     end;
     hence for Z1 being set st Z1 in {f.k2 : n <= k2} holds x in Z1;
    end;
   (for Z1 being set st Z1 in {f.k2 : n <= k2} holds x in Z1)
      implies for k1 holds x in f.(n+k1) by Th5;
 hence thesis by A00;
 end;

theorem Th8:
  for Y being non empty set for f being Function of NAT,Y holds
    x in rng f iff ex n st x = f.n
proof
let Y be non empty set;
let f be Function of NAT,Y;
A0: dom f = NAT by FUNCT_2:def 1;
  thus x in rng f implies ex n st x = f.n
   proof assume x in rng f;
    then consider y such that
    B: y in dom f & x = f.y by FUNCT_1:def 5;
    reconsider m=y as Element of NAT by B;
    take m;
   thus thesis by B;
   end;
  given n such that
  A2: x = f.n;
 thus thesis by A0,A2,FUNCT_1:def 5;
end;

theorem Th10:
  for Y be non empty set for f being Function of NAT,Y holds
    rng f = {f.k : 0 <= k}
proof
  let Y be non empty set;
  let f be Function of NAT,Y;
B: dom f = NAT by FUNCT_2:def 1;
 set Z = {f.k : 0 <= k};
A00: Z c= rng f
   proof let x;
    assume x in Z;
    then consider n1 being Element of NAT such that
     AA0: x=f.n1 & 0 <= n1;
    thus x in rng f by AA0,FUNCT_2:6;
   end;
  rng f c= Z
   proof let y;
    assume y in rng f;
    then consider n be set such that
    AB: n in NAT & y = f.n by B,FUNCT_1:def 5;
    reconsider n as Element of NAT by AB;
    0 <= n by NAT_1:2;
    hence y in Z by AB;
   end;
 hence thesis by A00,XBOOLE_0:def 10;
end;

theorem Th11:
  for Y being non empty set for f being Function of NAT,Y holds
    rng (f ^\ k) = {f.n: k <= n}
  proof
  let Y be non empty set;
  let f be Function of NAT,Y;
   reconsider f1 = f ^\ k as Function of NAT,Y;
   rng f1 = {f.m: k <= m}
    proof
    C1: dom f1 = NAT by FUNCT_2:def 1;
    set Z = {f.m : k <= m};
    C00: Z c= rng f1
     proof let x;
      assume x in Z;
      then consider k1 being Element of NAT such that
      CC0: x = f.k1 & k <= k1;
      consider k2 being Nat such that
      CC1: k1 = k + k2 by CC0,NAT_1:10;
AA:   k2 in NAT by ORDINAL1:def 13; then
      x = f1.k2 by CC0,CC1,NAT_1:def 3;
      hence x in rng f1 by FUNCT_2:6,AA;
     end;
   rng f1 c= Z
    proof let y;
    assume y in rng f1;
    then consider m1 be set such that
    DD1: m1 in NAT & y = f1.m1 by C1,FUNCT_1:def 5;
    reconsider m1 as Element of NAT by DD1;
    y = f.(k+m1) by DD1,NAT_1:def 3;
    hence y in Z by Th5;
   end;
  hence thesis by C00,XBOOLE_0:def 10;
 end;
 hence thesis;
 end;

theorem Th15:
  x in meet rng B iff for n holds x in B.n
 proof
 B: dom B = NAT by FUNCT_2:def 1;
A00: now let x; assume
      AA0: x in meet rng B;
       now let k;
        B.k in rng B by FUNCT_2:6;
        hence x in B.k by AA0,SETFAM_1:def 1;
       end;
      hence for n holds x in B.n;
     end;
   now let x;
      assume AA0: for n holds x in B.n;
       now let Y;
        assume Y in rng B;
        then consider n be set such that
        AA2: n in NAT & Y = B.n by B,FUNCT_1:def 5;
        reconsider n as Element of NAT by AA2;
        thus x in Y by AA0,AA2;
       end;
     hence x in meet rng B by SETFAM_1:def 1;
    end;
   hence thesis by A00;
 end;

theorem Th16:
  Intersection B = meet rng B
 proof
  A00: Intersection B c= meet rng B
  proof let x;
   assume x in Intersection B;
   then for n holds x in B.n by PROB_1:29;
   hence x in meet rng B by Th15;
  end;
  now let x;
   assume x in meet rng B;
     then for n holds x in B.n by Th15;
     hence x in Intersection B by PROB_1:29;
   end;
  then meet rng B c= Intersection B by TARSKI:def 3;
 hence thesis by A00,XBOOLE_0:def 10;
end;

theorem
  Intersection B c= Union B
proof
 meet rng B c= union rng B by SETFAM_1:3;
 then Intersection B c= union rng B by Th16;
 hence thesis by CARD_3:def 4;
end;

theorem Th185:
  (for n holds B.n = A) implies Union B = A
proof assume
 A0: for n holds B.n = A;
 now let x;
  assume x in rng B;then
  ex n st x = B.n by Th8;
  hence x = A by A0;
 end; then
 rng B = {A} by ZFMISC_1:41;
 then union rng B = A by ZFMISC_1:31;
 hence thesis by CARD_3:def 4;
end;

theorem Th186:
  (for n holds B.n = A) implies Intersection B = A
proof assume
 A0: for n holds B.n = A;
 now let x; assume x in rng B;then
  consider n such that
  B1: x = B.n by Th8;
  thus x = A by B1,A0;
 end; then
 rng B = {A} by ZFMISC_1:41;
 then meet rng B = A by SETFAM_1:11;
 hence thesis by Th16;
end;

theorem
  B is constant implies Union B = Intersection B
proof assume B is constant;then
   consider A being Subset of X such that
B: for n holds B.n = A by KURATO_2:def 8;
    Union B = A & Intersection B = A by B,Th185,Th186;
 hence thesis;
end;

Th188:
  B is constant & the_value_of B = A implies
    for n holds B.n = A & Union B = A & Intersection B = A
proof
   assume that
B: B is constant and
A2:the_value_of B = A;
   consider x being set such that
A3: x in dom B & A = B.x by B,A2,YELLOW_6:def 1;
A4: dom B = NAT by FUNCT_2:def 1;
   reconsider x as Element of NAT by A3;
   for n holds B.n = A by A3,A4,B,FUNCT_1:def 16;
   hence thesis by Th185,Th186;
end;

theorem Th190:
  B is constant & the_value_of B = A implies
    for n holds union {B.k : n <= k} = A
proof assume
 A0: B is constant & the_value_of B = A;
 let n;
 set Y = {B.k : n <= k};
 A2: Y <> {} by Th5;
 now let x; assume x in Y;then
  consider k such that
  B1: x = B.k & n <= k;
  thus x = A by A0,B1,Th188;
 end; then
 Y = {A} by A2,ZFMISC_1:41;
 hence thesis by ZFMISC_1:31;
end;

theorem Th191:
  B is constant & the_value_of B = A implies
    for n holds meet {B.k : n <= k} = A
proof assume
 A0: B is constant & the_value_of B = A;
 let n;
 set Y = {B.k : n <= k};
 A2: Y <> {} by Th5;
 now let x; assume x in Y;then
  consider k such that
  B1: x = B.k & n <= k;
  thus x = A by B1,A0,Th188;
 end; then
 Y = {A} by A2,ZFMISC_1:41;
 hence thesis by SETFAM_1:11;
end;

theorem Th17:
  for X, B
  for f being Function st dom f = NAT &
    for n holds f.n = meet {B.k: n <= k}
  holds f is SetSequence of X
 proof
  let X, B;
  let f be Function such that
B: dom f = NAT and
A2: for n holds f.n = meet {B.k: n <= k};
    rng f c= bool X
    proof let z;
      assume z in rng f; then
      consider x such that
A3:   x in dom f & z = f.x by FUNCT_1:def 5;
      reconsider n = x as Element of NAT by B,A3;
      set Y = {B.k: n <= k};
      set y = meet Y;
A4:   z = y by A2,A3;
      y is Subset of X
      proof
A2:     now assume Y<>{}; then
          consider Z1 being set such that
A3:       Z1 in Y by XBOOLE_0:def 1;
          consider k1 being Element of NAT such that
A4:       Z1 = B.k1 & n <= k1 by A3;
          now let x;
            assume x in y; then
            x in Z1 by A3,SETFAM_1:def 1;
            hence x in X by A4;
          end;
          hence y is Subset of X by TARSKI:def 3;
        end;
        now assume Y = {}; then
          y = {} by SETFAM_1:def 1;
          hence y is Subset of X by XBOOLE_1:2;
        end;
        hence thesis by A2;
      end;
      hence thesis by A4;
    end;
  hence thesis by B,FUNCT_2:4;
 end;

theorem Th18:
  for X being set, B being SetSequence of X
  for f being Function st
      dom f = NAT &
      for n holds f.n = union {B.k: n <= k}
  holds f is Function of NAT,bool X
 proof
  let X be set, B be SetSequence of X;
  let f be Function such that
B: dom f = NAT and
A2: for n holds f.n = union {B.k: n <= k};
    rng f c= bool X
    proof let z;
      assume z in rng f; then
      consider x such that
A3:   x in dom f & z = f.x by FUNCT_1:def 5;
      reconsider n = x as Element of NAT by B,A3;
      set Y = {B.k: n <= k};
      set y = union Y;
A4:   z = y by A2,A3;
      y is Subset of X
      proof
        now let z;
          assume z in y;
          then ex Z st z in Z & Z in Y by TARSKI:def 4;
          then consider Z1 be set such that
AA2:      Z1 in Y & z in Z1;
          consider k1 being Element of NAT such that
AA3:      Z1 = B.k1 & n <= k1 by AA2;
          thus z in X by AA2,AA3;
        end;
        hence thesis by TARSKI:def 3;
      end;
      hence thesis by A4;
    end;
    hence thesis by B,FUNCT_2:4;
  end;

definition let X,B;
  attr B is monotone means
:def1:  B is non-descending or B is non-ascending;
end;

definition
  let B be Function;
  func inferior_setsequence B -> Function means
:def2: dom it = NAT & for n holds it.n = meet {B.k : n <= k};
 existence
 proof
   deffunc F(Nat) = meet {B.k : $1 <= k};
   thus ex f being Function st dom f = NAT & for n being Element of NAT
     holds f.n = F(n) from FUNCT_1:sch 4;
 end;
 uniqueness
 proof let BSeq,CSeq be Function such that
  B: dom BSeq = NAT & for n holds BSeq.n = meet {B.k : n <= k} and
  A2: dom CSeq = NAT & for m holds CSeq.m = meet {B.k : m <= k};
  for y st y in NAT holds BSeq.y = CSeq.y
  proof
   let y;
   assume y in NAT;
   then reconsider y as Element of NAT;
   set Y = {B.k: y <= k};
   BSeq.y = meet Y by B;
  hence thesis by A2;
  end;
 hence thesis by B,A2,FUNCT_1:9;
 end;
end;

definition
 let X be set, B be SetSequence of X;
 redefine func inferior_setsequence B -> SetSequence of X;
 coherence
 proof
   dom inferior_setsequence B = NAT &
   for n be Element of NAT holds
     (inferior_setsequence B).n = meet {B.k : n <= k} by def2;
   hence thesis by Th17;
 end;
end;

definition
  let B be Function;
  func superior_setsequence B -> Function means
:def3: dom it = NAT & for n holds it.n = union {B.k : n <= k};
 existence
 proof
   deffunc F(Nat) = union {B.k : $1 <= k};
   thus ex f being Function st dom f = NAT &
     for n be Element of NAT holds f.n = F(n) from FUNCT_1:sch 4;
 end;
 uniqueness
 proof let BSeq,CSeq be Function such that
  B: dom BSeq = NAT & for n holds BSeq.n = union {B.k : n <= k} and
  A2: dom CSeq = NAT & for m holds CSeq.m = union {B.k : m <= k};
  for y st y in NAT holds BSeq.y = CSeq.y
  proof
   let y;
   assume y in NAT;
   then reconsider y as Element of NAT;
   set Y = {B.k: y <= k};
   BSeq.y = union Y by B;
  hence thesis by A2;
  end;
 hence thesis by B,A2,FUNCT_1:9;
 end;
end;

definition
 let X be set, B be SetSequence of X;
 redefine func superior_setsequence B -> SetSequence of X;
 coherence
 proof
   dom superior_setsequence B = NAT &
   for n holds (superior_setsequence B).n = union {B.k : n <= k} by def3;
   hence thesis by Th18;
 end;
end;

theorem Th19:
  (inferior_setsequence B).0 = Intersection B
proof
  (inferior_setsequence B).0 = meet {B.k : k >= 0} by def2
                       .= meet rng B by Th10
                       .= Intersection B by Th16;
 hence thesis;
end;

theorem Th20:
  (superior_setsequence B).0 = Union B
proof
  (superior_setsequence B).0 = union {B.k : 0 <= k} by def3
                      .= union rng B by Th10
                      .= Union B by CARD_3:def 4;
 hence thesis;
end;

theorem Th21:
  x in (inferior_setsequence B).n iff for k holds x in B.(n+k)
proof
 A0: (inferior_setsequence B).n = meet {B.k : n <= k} by def2;
 set Y = {B.k : n <= k};
 B: Y <> {} by Th5;
A00: now assume
     B1: x in (inferior_setsequence B).n;
       now let k;
        B.(n + k) in Y by Th5;
        hence x in B.(n + k) by A0,B1,SETFAM_1:def 1;
       end;
      hence for k holds x in B.(n+k);
     end;
  now assume
     for k holds x in B.(n+k);
     then for Z st Z in Y holds x in Z by Th7;
     hence x in (inferior_setsequence B).n by A0,B,SETFAM_1:def 1;
    end;
  hence thesis by A00;
end;

theorem Th22:
  x in (superior_setsequence B).n iff ex k st x in B.(n + k)
proof
 A0: (superior_setsequence B).n = union {B.k : n <= k} by def3;
 set Y = {B.k : n <= k};
 thus x in (superior_setsequence B).n implies ex k st x in B.(n + k)
 proof
   assume x in (superior_setsequence B).n;
   then consider Y1 being set such that
   AB: x in Y1 & Y1 in Y by A0,TARSKI:def 4;
   consider k11 being Element of NAT such that
   AA2: Y1 = B.k11 & n <= k11 by AB;
   ex k be Nat st k11 = n + k by AA2,NAT_1:10;
   then consider k22 being Nat such that
   AA3: Y1=B.(n + k22) by AA2;
   k22 in NAT by ORDINAL1:def 13;
   hence thesis by AB,AA3;
  end;
  now assume ex k st x in B.(n + k);
   then consider k1 being Element of NAT such that
   C0: x in B.(n + k1);
   B.(n + k1) in Y by Th5;
   hence x in (superior_setsequence B).n by A0,C0,TARSKI:def 4;
  end;
 hence thesis;
end;

theorem Th23:
  (inferior_setsequence B).n = (inferior_setsequence B).(n+1) /\ B.n
proof
 now let n;
 A0: (inferior_setsequence B).n = meet {B.k1 : n <= k1} by def2;
 B: (inferior_setsequence B).(n+1) = meet {B.k2 : n+1 <= k2} by def2;
 AB0:{B.k1 : n <= k1} <> {} by Th5;
 AB1:{B.k2 : n+1 <= k2} <> {} by Th5;
 {B.k1: n <= k1} = {B.k2 : n+1 <=k2} \/ {B.n} by Th6; then
 A2: (inferior_setsequence B).(n)
  c= (inferior_setsequence B).(n+1) by A0,B,AB1,SETFAM_1:7,XBOOLE_1:7;
A3: now let x;assume
      AA0: x in (inferior_setsequence B).n;
      B.n in {B.k1 : n <= k1};
      hence x in (inferior_setsequence B).(n+1) & x in B.n
        by A0,AA0,A2,SETFAM_1:def 1;
     end;
A4: now let x;
      assume BB0: x in (inferior_setsequence B).(n+1) & x in B.n;
      for Z st Z in {B.k2 : n <= k2} holds x in Z
      proof let Z;
        assume Z in {B.k1 : n <= k1};
        then consider Z1 being set such that
        CC0: Z=Z1 & Z1 in {B.k1 : n <= k1};
        consider k11 being Element of NAT such that
        CC1: Z1=B.k11 & n <= k11 by CC0;
          now per cases by CC1,LM1;
           case Z1=B.k11 & n = k11;
            hence x in Z1 by BB0;
           end;
           case Z1=B.k11 & n+1 <= k11;
            then Z1 in {B.k2 : n+1 <= k2};
            hence x in Z1 by B,BB0,SETFAM_1:def 1;
           end;
          end;
         hence x in Z by CC0;
      end;
     then x in meet {B.k2 : n <= k2} by AB0,SETFAM_1:def 1;
     hence x in (inferior_setsequence B).n by def2;
    end;
  thus (inferior_setsequence B).n
    = (inferior_setsequence B).(n+1) /\ B.n by A3,A4,XBOOLE_0:def 3;
 end;
hence thesis;
end;

theorem Th24:
  (superior_setsequence B).n = (superior_setsequence B).(n+1) \/ B.n
proof
 now let n;
 {B.k1: n <= k1} = {B.k2 : n+1 <=k2} \/ {B.n} by Th6;then
 union {B.k2 : n+1 <= k2} c= union {B.k1 : n <= k1}
   by ZFMISC_1:95,XBOOLE_1:7;then
 (superior_setsequence B).(n+1)
   c= union {B.k1 : n <= k1} by def3;then
A2:(superior_setsequence B).(n+1)
   c= (superior_setsequence B).n by def3;
A3: now let x;
      assume x in (superior_setsequence B).n;
      then x in union {B.k1 : n <= k1} by def3;
      then consider Y1 being set such that
      AB: x in Y1 & Y1 in {B.k1 : n <= k1} by TARSKI:def 4;
      consider k11 being Element of NAT such that
      AA2: Y1=B.k11 & n <= k11 by AB;
        now per cases by AA2,LM1;
          case Y1=B.k11 & n = k11;
           hence x in B.n by AB;
          end;
          case Y1=B.k11 & n+1 <= k11;
            then Y1 in {B.k2 : n+1 <= k2};
           hence x in union {B.k2 : n+1 <= k2} by AB,TARSKI:def 4;
          end;
          end;
       hence x in B.n or x in (superior_setsequence B).(n+1) by def3;
    end;
A4: now let x;
      assume BB0: x in (superior_setsequence B).(n+1) or x in B.n;
      thus x in (superior_setsequence B).n
      proof
       now per cases by BB0;
          case x in (superior_setsequence B).(n+1);
           hence x in (superior_setsequence B).n by A2;
          end;
          case CA2: x in B.n;
           B.n in {B.k1 : n <= k1};
           then x in union {B.k1 : n <= k1} by CA2,TARSKI:def 4;
          hence x in (superior_setsequence B).n by def3;
          end;
          end;
       hence thesis;
      end;
    end;
  x in (superior_setsequence B).n iff
  x in B.n or x in (superior_setsequence B).(n+1) by A3,A4;
 hence (superior_setsequence B).n = (superior_setsequence B).(n+1) \/ B.n
      by XBOOLE_0:def 2;
 end;
hence thesis;
end;

theorem Th25:
  inferior_setsequence B is non-descending
proof
  now let n be Element of NAT;
    (inferior_setsequence B).n
     = (inferior_setsequence B).(n+1) /\ B.n by Th23;
   hence (inferior_setsequence B).n
    c= (inferior_setsequence B).(n+1) by XBOOLE_1:17;
  end;
 hence thesis by PROB_2:15;
end;

theorem Th26:
  superior_setsequence B is non-ascending
proof
  now let n be Element of NAT;
  (superior_setsequence B).n
    = (superior_setsequence B).(n+1) \/ B.n by Th24;
   hence (superior_setsequence B).(n+1)
     c= (superior_setsequence B).n by XBOOLE_1:7;
  end;
 hence thesis by PROB_2:14;
end;

theorem
  inferior_setsequence B is monotone &
    superior_setsequence B is monotone
proof
 thus inferior_setsequence B is monotone
  proof
   inferior_setsequence B is non-descending by Th25;
   hence thesis by def1;
  end;
  superior_setsequence B is non-ascending by Th26;
 hence thesis by def1;
end;

registration
  let X be set, A be SetSequence of X;
  cluster inferior_setsequence A -> non-descending SetSequence of X;
  coherence by Th25;
end;

registration
  let X be set, A be SetSequence of X;
  cluster superior_setsequence A -> non-ascending SetSequence of X;
  coherence by Th26;
end;

theorem
  Intersection B c= (inferior_setsequence B).n
proof
  0 <= n & inferior_setsequence B is non-descending by NAT_1:2; then
  (inferior_setsequence B).0 c= (inferior_setsequence B).n
    by PROB_1:def 7;
  hence thesis by Th19;
end;

theorem
  (superior_setsequence B).n c= Union B
proof
 0 <= n & superior_setsequence B is non-ascending by NAT_1:2; then
 (superior_setsequence B).n c= (superior_setsequence B).0
   by PROB_1:def 6;
 hence thesis by Th20;
end;

theorem Th98:
  for B,n holds {B.k: n <= k} is Subset-Family of X
proof
 let B,n;
 set Y1 = {B.k: n <= k};
 Y1 c= bool X
 proof
 let x;
  assume x in Y1; then
  consider k such that
  B2: x = B.k & n <= k;
  thus x in bool X by B2;
 end;
hence thesis;
end;

theorem
  Union B = (Intersection Complement B)`
proof
  (Intersection Complement B)`
  = (Union Complement Complement B)`` by PROB_1:def 5
 .= Union B;
 hence thesis;
end;

theorem Th101:
  (inferior_setsequence B).n = ((superior_setsequence Complement B).n)`
proof
  set Y1 = {B.k1: n <= k1};
  set Y2 = {(Complement B).k2 : n <= k2};
  set Y3 = {(B.k)`: n <= k};
 A0: Y1 <> {} & Y2 <> {} by Th5;
 B: Y2 = Y3
  proof
   B01: Y2 c= Y3
    proof let x;
     assume x in Y2;then
     consider k such that
     B1: x = (Complement B).k & n <= k;
     x = (B.k)` & n <= k by B1,PROB_1:def 4;
     hence thesis;
    end;
  Y3 c= Y2
    proof let y;
     assume y in Y3; then
     consider k such that
     B2: y = (B.k)` & n <= k;
     y = (Complement B).k & n <= k by B2,PROB_1:def 4;
     hence thesis;
    end;
   hence thesis by B01,XBOOLE_0:def 10;
  end;
 reconsider Y1 as Subset-Family of X by Th98;
 Y3 = COMPLEMENT Y1
 proof
  C01: Y3 c= COMPLEMENT Y1
   proof let x;
     assume x in Y3; then
     consider k such that
     C1: x = (B.k)` & n <= k;
     reconsider z = B.k as Subset of X;
     (z`)` in Y1 by C1;
     hence thesis by C1,SETFAM_1:def 8;
    end;
 COMPLEMENT Y1 c= Y3
   proof let y; assume
     C3: y in COMPLEMENT Y1;then
     reconsider y as Subset of X;
     y` in Y1 by C3,SETFAM_1:def 8;then
     consider k such that
     C4: y` = B.k & n <= k;
     y = (B.k)` & n <= k by C4;
     hence thesis;
    end;
   hence thesis by C01,XBOOLE_0:def 10;
 end;
 then (superior_setsequence(Complement B)).n
            = union COMPLEMENT Y1 by B,def3
           .= [#] X \ meet Y1 by A0,SETFAM_1:48
           .= (meet Y1)`;
 hence thesis by def2;
end;

theorem
  (superior_setsequence B).n = ((inferior_setsequence Complement B).n)`
proof
  reconsider Y = (inferior_setsequence(Complement B)).n as Subset of X;
  Y = ((superior_setsequence(Complement Complement B)).n)` by Th101
   .= ((superior_setsequence B).n)`;
  hence thesis;
end;

theorem Th103:
Complement (inferior_setsequence B) = (superior_setsequence Complement B)
proof
 reconsider A2 = inferior_setsequence B as SetSequence of X;
 reconsider A3 = superior_setsequence Complement B as SetSequence of X;
 now let n;
  (A2.n)` = ((A3.n)`)` by Th101;
  hence (Complement A2).n = A3.n by PROB_1:def 4;
 end;
 hence thesis by FUNCT_2:113;
 end;

theorem
Complement superior_setsequence B = inferior_setsequence Complement B
proof
 reconsider A2 = inferior_setsequence Complement B as SetSequence of X;
 Complement A2 = superior_setsequence Complement Complement B by Th103
              .= superior_setsequence B;
 hence thesis;
end;

theorem
  (for n holds A3.n = A1.n \/ A2.n) implies for n holds
    (inferior_setsequence A1).n \/ (inferior_setsequence(A2)).n
      c= (inferior_setsequence(A3)).n
proof assume
B: for n holds A3.n = A1.n \/ A2.n;
  set X1 = inferior_setsequence A1, X2 = inferior_setsequence A2,
      X3 = inferior_setsequence A3;
  let n;
   now let x; assume
    B1: x in X1.n \/ X2.n;
    per cases by B1,XBOOLE_0:def 2;
     suppose BB0: x in X1.n;
       now let k;
        C1: x in A1.(n+k) by BB0,Th21;
        A3.(n+k) = A1.(n+k) \/ A2.(n+k) by B; hence
        x in A3.(n+k) by C1,XBOOLE_0:def 2;
       end;hence x in X3.n by Th21;
     end;
     suppose BC0: x in X2.n;
      now let k;
        D1: x in A2.(n+k) by BC0,Th21;
        A3.(n+k) = A1.(n+k) \/ A2.(n+k) by B;
        hence x in A3.(n+k) by D1,XBOOLE_0:def 2;
       end;hence x in X3.n by Th21;
     end;
 end;
 hence thesis by TARSKI:def 3;
end;

theorem
  (for n holds A3.n = A1.n /\ A2.n) implies for n holds
    (inferior_setsequence A3).n
      = (inferior_setsequence A1).n /\ (inferior_setsequence A2).n
proof assume
B: for n holds A3.n = A1.n /\ A2.n; set B = A1;
  reconsider X1 = inferior_setsequence B as SetSequence of X;
  reconsider X2 = inferior_setsequence A2 as SetSequence of X;
  reconsider X3 = inferior_setsequence A3 as SetSequence of X;
  let n;
A2: X3.n c= X1.n /\ X2.n
  proof
   let x; assume
    B1: x in X3.n;
     now let k;
      x in A3.(n+k) by B1,Th21;then
      x in (B.(n+k) /\ A2.(n+k)) by B;hence
      x in B.(n+k) & x in A2.(n+k) by XBOOLE_0:def 3;
     end;
    then x in X1.n & x in X2.n by Th21;
    hence x in X1.n /\ X2.n by XBOOLE_0:def 3;
  end;
 X1.n /\ X2.n c= X3.n
  proof
   let x;assume x in (X1.n /\ X2.n);then
   C1: x in X1.n & x in X2.n by XBOOLE_0:def 3;
    now let k;
     x in B.(n+k) & x in A2.(n+k) by C1,Th21; then
     x in B.(n+k) /\ A2.(n+k) by XBOOLE_0:def 3;
     hence x in A3.(n+k) by B;
    end;
   hence x in X3.n by Th21;
 end;
 hence thesis by A2,XBOOLE_0:def 10;
end;

theorem
  (for n holds A3.n = A1.n \/ A2.n) implies for n holds
    (superior_setsequence(A3)).n
     = (superior_setsequence(A1)).n \/ (superior_setsequence(A2)).n
 proof assume
B: for n holds A3.n = A1.n \/ A2.n; set B = A1;
  reconsider X1 = superior_setsequence B as SetSequence of X;
  reconsider X2 = superior_setsequence A2 as SetSequence of X;
  reconsider X3 = superior_setsequence A3 as SetSequence of X;
  let n;
A2: X3.n c= X1.n \/ X2.n
  proof
   let x;
    assume x in X3.n;then
    consider k such that
    B1: x in A3.(n+k) by Th22;
    B2: x in (B.(n+k) \/ A2.(n+k)) by B,B1;
     x in X1.n or x in X2.n
    proof
      now per cases by B2,XBOOLE_0:def 2;
      case x in B.(n+k);
       hence x in X1.n by Th22;
      end;
      case x in A2.(n+k);
       hence x in X2.n by Th22;
      end;
      end;
     hence thesis;
    end;
   hence x in X1.n \/ X2.n by XBOOLE_0:def 2;
  end;
 X1.n \/ X2.n c= X3.n
  proof
   let x; assume
    B1: x in (X1.n \/ X2.n);
    B2: now per cases by B1,XBOOLE_0:def 2;
     case x in X1.n;then
      consider k such that
       C1: x in B.(n+k) by Th22;
       A3.(n+k) = B.(n+k) \/ A2.(n+k) by B; then
        x in A3.(n+k) by C1,XBOOLE_0:def 2;
      hence x in X3.n by Th22;
     end;
     case x in X2.n;then
      consider k such that
       D1: x in A2.(n+k) by Th22;
       A3.(n+k) = B.(n+k) \/ A2.(n+k) by B; then
        x in A3.(n+k) by D1,XBOOLE_0:def 2;
      hence x in X3.n by Th22;
     end;
     end;
    thus x in X3.n by B2;
  end;
hence thesis by A2,XBOOLE_0:def 10;
end;

theorem
  (for n holds A3.n = A1.n /\ A2.n) implies for n holds
    (superior_setsequence A3).n
      c= (superior_setsequence A1).n /\ (superior_setsequence A2).n
 proof assume
B: for n holds A3.n = A1.n /\ A2.n; set B = A1;
  reconsider X1 = superior_setsequence B as SetSequence of X;
  reconsider X2 = superior_setsequence A2 as SetSequence of X;
  reconsider X3 = superior_setsequence A3 as SetSequence of X;
  let n;
  X3.n c= X1.n /\ X2.n
  proof
   let x;
    assume x in X3.n;then
    consider k such that
    B1: x in A3.(n+k) by Th22;
    A3.(n+k) = B.(n+k) /\ A2.(n+k) by B;then
    x in B.(n+k) & x in A2.(n+k) by B1,XBOOLE_0:def 3;then
    x in X1.n & x in X2.n by Th22;
    hence x in X1.n /\ X2.n by XBOOLE_0:def 3;
   end;
 hence thesis;
 end;

theorem Th125:
  B is constant & the_value_of B = A implies
    for n holds (inferior_setsequence B).n = A
proof assume
 B: B is constant & the_value_of B = A;
 let n;
 (inferior_setsequence(B)).n = meet {B.k : n <= k} by def2;
 hence thesis by B,Th191;
end;

theorem Th126:
  B is constant & the_value_of B = A implies
    for n holds (superior_setsequence B).n = A
proof assume
 B: B is constant & the_value_of B = A;
 let n;
 (superior_setsequence(B)).n = union {B.k : n <= k} by def3;
 hence thesis by B,Th190;
end;

theorem Th29:
  B is non-descending implies B.n c= (superior_setsequence(B)).(n+1)
proof
  assume B is non-descending;then
  A01: B.n c= B.(n+1) by PROB_2:15;
  B.n c= union {B.k : n+1 <= k}
  proof let x; assume
   B0: x in B.n;
   B.(n+1) in {B.k : n+1 <= k};
   hence x in union {B.k : n+1 <= k} by B0,A01,TARSKI:def 4;
  end;
 hence thesis by def3;
end;

theorem Th30:
  B is non-descending implies
    (superior_setsequence B).n = (superior_setsequence B).(n+1)
proof
  assume B is non-descending;
  then (superior_setsequence B).(n+1) \/ B.n
    = (superior_setsequence B).(n+1) by XBOOLE_1:12,Th29;
 hence thesis by Th24;
end;

theorem Th31:
  B is non-descending implies (superior_setsequence B).n = Union B
proof
 assume A00: B is non-descending;
 defpred P[Nat] means (superior_setsequence B).$1 = Union B;
 for n holds (superior_setsequence B).n = Union B
  proof
   A01: P[0] by Th20;
   A02: for k st P[k] holds P[k+1] by A00,Th30;
   thus for k holds P[k] from NAT_1:sch 1(A01,A02);
  end;
 hence thesis;
end;

theorem Th32:
B is non-descending implies Intersection superior_setsequence B = Union B
proof
 assume A00: B is non-descending;
  Intersection superior_setsequence B = Union B
   proof
    now let x;assume
     B0: x in Intersection superior_setsequence B;
     now let n;
      (superior_setsequence B).n = Union B by A00,Th31;
      hence x in Union B by B0,PROB_1:29;
     end;
    hence x in Union B;
    end;
    then BB0: Intersection superior_setsequence(B)
     c= Union B by TARSKI:def 3;
    now let y;
     assume C0: y in Union B;
     for n holds y in (superior_setsequence(B)).n by C0,A00,Th31;
     hence y in Intersection superior_setsequence(B) by PROB_1:29;
    end;
    then Union B c= Intersection superior_setsequence(B) by TARSKI:def 3;
    hence thesis by BB0,XBOOLE_0:def 10;
   end;
 hence thesis;
end;

theorem Th33:
  B is non-descending implies B.n c= (inferior_setsequence B).(n+1)
proof
  A00: (inferior_setsequence B).(n+1) = meet {B.k : n+1 <= k} by def2;
  set Y = {B.k : n+1 <= k};
  AA0: Y <> {} by Th5;
  assume A01: B is non-descending;
  let x;
   assume B00: x in B.n;
    now let y;
     assume y in Y;
     then consider k1 being Element of NAT such that
      C00: y=B.k1 & n+1 <= k1;
     n <= k1 by C00,NAT_1:13;
     then B.n c= B.k1 by A01,PROB_1:def 7;
     hence x in y by B00,C00;
    end;
   hence thesis by A00,AA0,SETFAM_1:def 1;
end;

theorem Th34:
  B is non-descending implies (inferior_setsequence B).n = B.n
proof
  assume B is non-descending;
  then (inferior_setsequence B).(n+1) /\ B.n = B.n by XBOOLE_1:28,Th33;
 hence thesis by Th23;
end;

theorem Th35:
  B is non-descending implies inferior_setsequence B = B
proof
 assume B is non-descending;
 then (inferior_setsequence B).n = B.n by Th34;
 hence inferior_setsequence B = B by FUNCT_2:113;
end;

theorem Th36:
  B is non-ascending implies (superior_setsequence B).(n+1) c= B.n
proof
  assume A01: B is non-ascending;
   let x;
    assume x in (superior_setsequence(B)).(n+1);
    then consider k such that
    B0: x in B.(n +1+k) by Th22;
    n+1 <= n+1+k by NAT_1:11;
    then n <= n+1+k by NAT_1:13;
    then B.(n +1+k) c= B.n by A01,PROB_1:def 6;
   hence x in B.n by B0;
end;

theorem Th37:
  B is non-ascending implies (superior_setsequence(B)).n = B.n
proof
  assume B is non-ascending;
  then (superior_setsequence(B)).(n+1) \/ B.n = B.n by XBOOLE_1:12,Th36;
 hence thesis by Th24;
end;

theorem Th38:
  B is non-ascending implies superior_setsequence(B) = B
proof
 assume B is non-ascending;
 then (superior_setsequence(B)).n = B.n by Th37;
 hence superior_setsequence(B) = B by FUNCT_2:113;
end;

theorem Th39:
  B is non-ascending implies (inferior_setsequence(B)).(n+1) c= B.n
proof
  A00: (inferior_setsequence(B)).(n+1) = meet {B.k : n+1 <= k} by def2;
  set Y = {B.k : n+1 <= k};
  AA0:B.(n+1) in Y;
  assume B is non-ascending;
  then A02: B.(n+1) c= B.n by PROB_2:14;
   now let x;
    assume x in meet Y;
    then x in B.(n+1) by AA0,SETFAM_1:def 1;
    hence x in B.n by A02;
   end;
 hence thesis by A00,TARSKI:def 3;
end;

theorem Th40:
  B is non-ascending implies
   (inferior_setsequence(B)).n = (inferior_setsequence(B)).(n+1)
proof
  assume B is non-ascending; then
   (inferior_setsequence(B)).(n+1) /\ B.n
    = (inferior_setsequence(B)).(n+1) by XBOOLE_1:28,Th39;
 hence thesis by Th23;
end;

theorem Th41:
B is non-ascending implies (inferior_setsequence(B)).n = Intersection B
proof
 assume A00: B is non-ascending;
 defpred P[Nat] means (inferior_setsequence(B)).$1 = Intersection B;
 for n holds (inferior_setsequence(B)).n = Intersection B
  proof
   A01: P[0] by Th19;
   A02: for k st P[k] holds P[k+1] by A00,Th40;
   thus for k holds P[k] from NAT_1:sch 1(A01,A02);
  end;
 hence thesis;
end;

theorem Th42:
B is non-ascending implies Union inferior_setsequence(B) = Intersection B
proof
 assume A00: B is non-ascending;
  Union inferior_setsequence(B) = Intersection B
  proof
   now let x;
    assume x in Union inferior_setsequence(B);
    then consider k such that
    B0: x in (inferior_setsequence(B)).k by PROB_1:25;
   thus x in Intersection B by A00,B0,Th41;
   end;
   then BB0: Union inferior_setsequence(B) c= Intersection B by TARSKI:def 3;
   now let y;
    assume y in Intersection B;
    then y in (inferior_setsequence(B)).0 by Th19;
    hence y in Union inferior_setsequence(B) by PROB_1:25;
   end;
   then Intersection B c= Union inferior_setsequence(B) by TARSKI:def 3;
   hence thesis by BB0,XBOOLE_0:def 10;
  end;
 hence thesis;
end;

definition
  let X be set, B be SetSequence of X;
  redefine func lim_inf B equals
 Union inferior_setsequence B;
  compatibility
  proof
    let F be Subset of X;
    hereby assume B: F = lim_inf B;
      for x being set holds
        x in F iff x in Union inferior_setsequence B
      proof
        let x be set;
        hereby assume x in F; then
          consider n being Element of NAT such that
A2:       for k being Element of NAT holds x in B.(n+k) by B,KURATO_2:7;
          x in (inferior_setsequence B).n by A2,Th21;
          hence x in Union inferior_setsequence B by PROB_1:25;
        end;
        assume x in Union inferior_setsequence B; then
        consider n being Element of NAT such that
B1:     x in (inferior_setsequence B).n by PROB_1:25;
        for k being Element of NAT holds x in B.(n + k) by Th21,B1;
        hence thesis by B,KURATO_2:7;
      end;
      hence F = Union inferior_setsequence B by TARSKI:2;
    end;
    assume B: F = Union inferior_setsequence B;
    for x being set holds x in F iff x in lim_inf B
    proof
      let x be set;
      hereby assume x in F; then
        consider n being Element of NAT such that
B1:     x in (inferior_setsequence B).n by B,PROB_1:25;
        for k being Element of NAT holds x in B.(n + k) by Th21,B1;
        hence x in lim_inf B by KURATO_2:7;
      end;
      assume x in lim_inf B; then
      consider n being Element of NAT such that
A2:   for k being Element of NAT holds x in B.(n+k) by KURATO_2:7;
      x in (inferior_setsequence B).n by A2,Th21;
      hence x in F by B,PROB_1:25;
    end;
    hence F = lim_inf B by TARSKI:2;
  end;
end;

definition
  let X be set, B be SetSequence of X;
  redefine func lim_sup B equals
 Intersection superior_setsequence B;
  compatibility
  proof
    let F be Subset of X;
    hereby assume B: F = lim_sup B;
      for x being set holds
        x in F iff x in Intersection superior_setsequence B
      proof
        let x be set;
        hereby assume x in F; then
C00:      for n holds ex k st x in B.(n+k) by B,KURATO_2:8;
          for m holds x in (superior_setsequence B).m
          proof
            let m;
            ex k st x in B.(m+k) by C00;
            hence thesis by Th22;
          end;
          hence x in Intersection superior_setsequence B by PROB_1:29;
        end;
        assume B01: x in Intersection superior_setsequence B;
        now let m;
          x in (superior_setsequence B).m by B01,PROB_1:29;
          hence ex k st x in B.(m + k) by Th22;
        end;
        hence thesis by B,KURATO_2:8;
      end;
      hence F = Intersection superior_setsequence B by TARSKI:2;
    end;
    assume B: F = Intersection superior_setsequence B;
    for x being set holds x in F iff x in lim_sup B
    proof
      let x be set;
      hereby assume A0: x in F;
        now let m;
          x in (superior_setsequence B).m by A0,B,PROB_1:29;
          hence ex k st x in B.(m + k) by Th22;
        end;
        hence x in lim_sup B by KURATO_2:8;
      end;
      assume x in lim_sup B; then
C00:  for n holds ex k st x in B.(n+k) by KURATO_2:8;
      for m holds x in (superior_setsequence B).m
      proof
        let m;
        ex k st x in B.(m+k) by C00;
        hence thesis by Th22;
      end;
      hence x in F by B,PROB_1:29;
    end;
    hence F = lim_sup B by TARSKI:2;
  end;
end;

notation
  let X be set, B be SetSequence of X;
  synonym lim B for lim_sup B;
end;

theorem
  Intersection B c= lim_inf B
proof
  let x;
  assume x in Intersection B;
  then for k being Element of NAT holds x in B.(0+k) by PROB_1:29;
  hence thesis by KURATO_2:7;
end;

theorem
  lim_inf B = lim inferior_setsequence(B) by Th32;

theorem
  lim_sup B = lim superior_setsequence(B) by Th38;

theorem
  lim_sup B = (lim_inf Complement B)`
proof
  lim_inf Complement B = (lim_sup Complement Complement B)` by KURATO_2:12
                      .= (lim_sup B)`;
  hence thesis;
end;

theorem Th215:
  B is constant & the_value_of B = A implies
    B is convergent & lim B = A & lim_inf B = A & lim_sup B = A
proof assume
 A0: B is constant & the_value_of B = A;then
 B: for n holds (inferior_setsequence(B)).n = A by Th125;
 A2: for n holds (superior_setsequence(B)).n = A by A0,Th126;
 A3: lim_inf B = A by B,Th185;
     lim_sup B = A by A2,Th186;
  hence thesis by A3,KURATO_2:def 7;
end;

theorem Th48:
  B is non-descending implies lim_sup B = Union B by Th32;

theorem Th49:
  B is non-descending implies lim_inf B = Union B by Th35;

theorem Th51:
  B is non-ascending implies lim_sup B = Intersection B by Th38;

theorem Th52:
  B is non-ascending implies lim_inf B = Intersection B by Th42;

theorem Th50:
  B is non-descending implies B is convergent & lim B = Union B
proof
  assume A0: B is non-descending;
  then lim_sup B = Union B & lim_inf B = Union B by Th32,Th35;
  hence B is convergent by KURATO_2:def 7;
  thus lim B = Union B by A0,Th32;
end;

theorem Th53:
  B is non-ascending implies B is convergent & lim B = Intersection B
proof
  assume A0: B is non-ascending;
   then lim_sup B = Intersection B & lim_inf B = Intersection B
     by Th38,Th42;
   hence B is convergent by KURATO_2:def 7;
   thus lim B = Intersection B by A0,Th38;
end;

theorem
  B is monotone implies B is convergent
proof assume
  A0: B is monotone;
  per cases by A0,def1;
   suppose B is non-ascending;
   hence B is convergent by Th53;
   end;
   suppose B is non-descending;
   hence B is convergent by Th50;
  end;
end;

definition
 let X be set,
     Si be SigmaField of X,
     S be SetSequence of Si;
 redefine attr S is constant means
  ex A being Element of Si st for n holds S.n = A;
 compatibility
  proof
B:dom S = NAT by FUNCT_2:def 1;
  hereby assume
A2:   S is constant;
    consider n0 be Element of NAT;
    reconsider B = S.n0 as Element of Si by PROB_1:def 9;
    take B;
    let n;
    thus S.n = B by B,A2,FUNCT_1:def 16;
   end;
   given B being Element of Si such that
A3:  for n holds S.n=B;
   for n1, n2 being set st n1 in dom S
    & n2 in dom S holds S.n1 = S.n2
   proof let n1,n2 be set; assume
A4:  n1 in dom S & n2 in dom S;
   then S.n1 = B by A3
            .= S.n2 by A3,A4;
   hence thesis;
  end;
  hence thesis by FUNCT_1:def 16;
 end;
end;

definition
  let X be set,
      Si be SigmaField of X,
      S be SetSequence of Si;
 redefine func inferior_setsequence S -> SetSequence of Si;
 coherence
  proof
   inferior_setsequence S is SetSequence of Si
    proof
     now let n;
      reconsider DSeq = S ^\ n as SetSequence of X;
      for m being Element of NAT holds DSeq.m in Si
       proof
         let m be Element of NAT;
          DSeq.m = S.(m+n) by NAT_1:def 3;
          hence thesis by PROB_1:def 9;
       end;
      then B4: Intersection DSeq in Si by PROB_1:def 8;
      Intersection DSeq = meet rng DSeq by Th16;
      then Intersection DSeq = meet {S.k: n <= k} by Th11;
      hence (inferior_setsequence S).n in Si by B4,def2;
     end;
  hence thesis by PROB_1:def 9;
  end;
 hence thesis;
 end;
end;

definition
  let X be set,
      Si be SigmaField of X,
      S be SetSequence of Si;
  redefine func superior_setsequence S -> SetSequence of Si;
  coherence
  proof
    superior_setsequence S is SetSequence of Si
    proof
      now let n;
      reconsider DSeq = S ^\ n as SetSequence of X;
      for m being Element of NAT holds DSeq.m in Si
      proof
        let m be Element of NAT;
        DSeq.m = S.(m+n) by NAT_1:def 3;
        hence thesis by PROB_1:def 9;
      end;
      then DSeq is SetSequence of Si by PROB_1:def 9;
      then B4: Union DSeq in Si by PROB_1:46;
      Union DSeq = union rng DSeq by CARD_3:def 4;
      then Union DSeq =union {S.k: n <= k} by Th11;
      hence (superior_setsequence(S)).n in Si by B4,def3;
    end;
    hence thesis by PROB_1:def 9;
  end;
  hence thesis;
end;
end;

theorem Th55:
  x in lim_sup S iff for n holds ex k st x in S.(n+k)
proof
  x in Intersection superior_setsequence B iff
     for n holds ex k st x in B.(n+k)
   proof
     lim_sup B = Intersection superior_setsequence B;
     hence thesis by KURATO_2:8;
   end;
   hence thesis;
end;

theorem Th56:
  x in lim_inf S iff ex n st for k holds x in S.(n+k)
proof
  x in Union inferior_setsequence(B) iff
       ex n st for k holds x in B.(n+k)
  proof
    lim_inf B = Union inferior_setsequence(B);
    hence thesis by KURATO_2:7;
  end;
  hence thesis;
end;

theorem
  Intersection S c= lim_inf S
proof
 let x;
 assume x in Intersection S;
 then for k being Element of NAT holds x in S.(0+k) by PROB_1:29;
 hence thesis by Th56;
end;

theorem
  lim_sup S c= Union S
proof
  let x;
  assume x in lim_sup S;
  then consider k being Element of NAT such that
B: x in S.(0+k) by Th55;
  thus thesis by B,PROB_1:25;
end;

theorem
  lim_inf S c= lim_sup S
proof
  Union inferior_setsequence B c= Intersection superior_setsequence B
  proof
   B0: lim_inf B = Union inferior_setsequence(B);
   lim_sup B = Intersection superior_setsequence(B);
  hence thesis by B0,KURATO_2:9;
  end;
  hence thesis;
end;

definition
  let X be set,
      Si be SigmaField of X,
      S be SetSequence of Si;
  func @Complement S -> SetSequence of Si equals
    Complement S;
  coherence
proof
 now let n;
  S.n in Si by PROB_1:def 9;then
  A0: S.n is Event of Si by PROB_1:def 10;
  (Complement S).n = (S.n)` by PROB_1:def 4;
  then (Complement S).n is Event of Si by A0,PROB_1:50;
   hence (Complement S).n in Si by PROB_1:def 10;
   end; hence thesis by PROB_1:def 9;
  end;
end;

theorem Th205:
  lim_inf S = (lim_sup @Complement S)`
proof
 Union inferior_setsequence(B)
   = (Intersection superior_setsequence(Complement B))`
   proof
    B1: lim_inf B = Union inferior_setsequence(B);
    (lim_sup Complement B)`
      = (Intersection superior_setsequence(Complement B))`;
    hence thesis by B1,KURATO_2:12;
  end;
 hence thesis;
end;

theorem
  lim_sup S = (lim_inf @Complement S)`
proof
  lim_inf @Complement S = (lim_sup @Complement @Complement S)` by Th205
                       .= (lim_sup S)`;
  hence thesis;
end;

theorem
  (for n holds S3.n = S1.n \/ S2.n) implies
    lim_inf S1 \/ lim_inf S2 c= lim_inf S3
proof assume
A0: (for n holds S3.n = S1.n \/ S2.n);
 (for n holds A3.n = B.n \/ A2.n) implies
 Union inferior_setsequence(B) \/ Union inferior_setsequence(A2)
 c= Union inferior_setsequence(A3)
 proof assume
  B0: (for n holds A3.n = B.n \/ A2.n);
  B1: lim_inf B = Union inferior_setsequence(B);
  B2: lim_inf A2 = Union inferior_setsequence(A2);
  lim_inf A3 = Union inferior_setsequence(A3);
  hence thesis by B0,B1,B2,KURATO_2:15;
 end;
hence thesis by A0;
end;

theorem
  (for n holds S3.n = S1.n /\ S2.n) implies
    lim_inf S3 = lim_inf S1 /\ lim_inf S2
proof assume
A0: (for n holds S3.n = S1.n /\ S2.n);
 (for n holds A3.n = B.n /\ A2.n) implies
 Union inferior_setsequence(B) /\ Union inferior_setsequence(A2)
 = Union inferior_setsequence(A3)
 proof assume
  B0: (for n holds A3.n = B.n /\ A2.n);
  B1: lim_inf B = Union inferior_setsequence(B);
  B2: lim_inf A2 = Union inferior_setsequence(A2);
 lim_inf A3 = Union inferior_setsequence(A3);
  hence thesis by B0,B1,B2,KURATO_2:13;
 end;
hence thesis by A0;
end;

theorem
  (for n holds S3.n = S1.n \/ S2.n) implies
    lim_sup S3 = lim_sup S1 \/ lim_sup S2
proof assume
A0: (for n holds S3.n = S1.n \/ S2.n);
 (for n holds A3.n = B.n \/ A2.n) implies
 Intersection superior_setsequence(B) \/ Intersection superior_setsequence(A2)
 = Intersection superior_setsequence(A3)
 proof assume
  B0: (for n holds A3.n = B.n \/ A2.n);
  B1: lim_sup B = Intersection superior_setsequence(B);
  B2: lim_sup A2 = Intersection superior_setsequence(A2);
 lim_sup A3 = Intersection superior_setsequence(A3);
  hence thesis by B0,B1,B2,KURATO_2:14;
 end;
hence thesis by A0;
end;

theorem
  (for n holds S3.n = S1.n /\ S2.n) implies
    lim_sup S3 c= lim_sup S1 /\ lim_sup S2
proof assume
A0: (for n holds S3.n = S1.n /\ S2.n);
 (for n holds A3.n = B.n /\ A2.n) implies
 Intersection superior_setsequence(A3) c=
 Intersection superior_setsequence(B) /\ Intersection superior_setsequence(A2)
 proof assume
  B0: (for n holds A3.n = B.n /\ A2.n);
  B1: lim_sup B = Intersection superior_setsequence(B);
  B2: lim_sup A2 = Intersection superior_setsequence(A2);
  lim_sup A3 = Intersection superior_setsequence(A3);
  hence thesis by B0,B1,B2,KURATO_2:16;
 end;
hence thesis by A0;
end;

theorem
  S is constant & the_value_of S = A implies
    S is convergent & lim S = A &
    lim_inf S = A & lim_sup S = A
proof assume
A0: S is constant & the_value_of S = A;
  B is constant & the_value_of B = A implies
  Union inferior_setsequence(B) = A &
   Intersection superior_setsequence(B) = A
  proof assume
   B0: B is constant & the_value_of B = A;
   B1: lim_inf B = Union inferior_setsequence(B);
   lim_sup B = Intersection superior_setsequence(B);
   hence thesis by B0,B1,Th215;
  end;then
  lim_inf S = A & lim_sup S = A by A0;
 hence thesis by KURATO_2:def 7;
end;

theorem Th61:
  S is non-descending implies lim_sup S = Union S
proof
A00: B is non-descending implies Intersection superior_setsequence(B)
   = Union B
 proof
   lim_sup B = Intersection superior_setsequence(B);
  hence thesis by Th48;
 end;
 thus thesis by A00;
end;

theorem Th62:
  S is non-descending implies lim_inf S = Union S
proof
A00: B is non-descending implies Union inferior_setsequence(B) = Union B
 proof
   lim_inf B = Union inferior_setsequence(B);
  hence thesis by Th49;
 end;
 thus thesis by A00;
end;

theorem Th63:
  S is non-descending implies S is convergent & lim S = Union S
proof
  assume A0: S is non-descending;then
  lim_sup S = Union S & lim_inf S = Union S by Th61,Th62;
  hence S is convergent by KURATO_2:def 7;
  thus lim S = Union S by A0,Th61;
end;

theorem Th64:
  S is non-ascending implies lim_sup S = Intersection S
proof
A00: B is non-ascending implies Intersection superior_setsequence(B)
 = Intersection B
 proof
   lim_sup B = Intersection superior_setsequence(B);
  hence thesis by Th51;
 end;
 thus thesis by A00;
end;

theorem Th65:
  S is non-ascending implies lim_inf S = Intersection S
proof
A00: B is non-ascending implies Union inferior_setsequence(B)
  = Intersection B
 proof
   lim_inf B = Union inferior_setsequence(B);
  hence thesis by Th52;
 end;
 thus thesis by A00;
end;

theorem Th66:
  S is non-ascending implies S is convergent &
    lim S = Intersection S
proof
  assume S is non-ascending;then
  A0: lim_sup S = Intersection S & lim_inf S = Intersection S
       by Th64,Th65;
  hence S is convergent by KURATO_2:def 7;
  thus lim S = Intersection S by A0;
end;

theorem
  S is monotone implies S is convergent
proof
  assume AB: S is monotone;
  per cases by AB,def1;
   suppose S is non-ascending;
   hence S is convergent by Th66;
   end;
   suppose S is non-descending;
   hence S is convergent by Th63;
  end;
end;
