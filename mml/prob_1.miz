:: $\sigma$-Fields and Probability
::  by Andrzej N\c{e}dzusiak
::
:: Received October 16, 1989
:: Copyright (c) 1990 Association of Mizar Users

environ

 vocabularies FUNCT_1, ARYTM, SEQ_1, ARYTM_1, SEQ_2, ORDINAL2, ABSVALUE,
      SETFAM_1, SUBSET_1, FINSUB_1, BOOLE, RELAT_1, FUNCOP_1, TARSKI, PROB_1,
      RCOMP_1, SUPINF_1, DYNKIN, REALSET1;
 notations TARSKI, XBOOLE_0, ZFMISC_1, SUBSET_1, FINSUB_1, RELAT_1, FUNCT_1,
      REAL_1, FUNCT_2, FUNCOP_1, FUNCT_7, ORDINAL1, CARD_3, NUMBERS, VALUED_0,
      XREAL_0, COMPLEX1, NAT_1, SEQ_1, SEQ_2, SETFAM_1, XXREAL_0, XXREAL_1;
 constructors SETFAM_1, FINSUB_1, XXREAL_1, COMPLEX1, REAL_1, SEQ_2, CARD_3,
      MEMBERED, SEQ_1, FUNCT_7;
 registrations XBOOLE_0, SUBSET_1, FUNCT_1, ORDINAL1, NUMBERS, XXREAL_0,
      XREAL_0, MEMBERED, XXREAL_1, RELAT_1, VALUED_0;
 requirements REAL, NUMERALS, BOOLE, SUBSET, ARITHM;
 definitions FINSUB_1, TARSKI, SUBSET_1, MEMBERED, CARD_3, FUNCT_2, VALUED_0;
 theorems TARSKI, ZFMISC_1, FUNCT_1, FUNCT_2, ABSVALUE, SEQ_2, SETFAM_1,
      SUBSET_1, RELAT_1, RELSET_1, FINSUB_1, FUNCOP_1, XBOOLE_0, XBOOLE_1,
      XREAL_1, XXREAL_0, XXREAL_1, FUNCT_7, NAT_1, ORDINAL1;
 schemes FUNCT_2, PARTFUN1;

begin

reserve Omega for non empty set;
reserve X, Y, Z, p,x,y,z for set;
reserve D, E for Subset of Omega;
reserve f for Function;
reserve m,n for Element of NAT;
reserve r,r1 for real number;
reserve seq for Real_Sequence;

canceled 2;

theorem Th3:
  for r,seq st (ex n st for m st n <= m holds seq.m = r) holds
  seq is convergent & lim seq = r
proof
  let r,seq such that
A1: ex n st for m st n <= m holds seq.m = r;
A2: for r1 st 0 < r1 ex n st for m st n <= m holds abs(seq.m-r)<r1
  proof
    let r1 such that
A3: 0 < r1;
    consider n such that
A4: for m st n <= m holds seq.m = r by A1;
    take n;
    let m;
    assume n <= m;
    then seq.m = r by A4;
    hence thesis by A3,ABSVALUE:7;
  end;
  then seq is convergent by SEQ_2:def 6;
  hence thesis by A2,SEQ_2:def 7;
end;

:: DEFINITION AND BASIC PROPERTIES OF              ::
:: a field of subsets of given nonempty set Omega. ::

definition
  let X be set;
  let IT be Subset-Family of X;
  attr IT is compl-closed means
  :Def1:
  for A being Subset of X st A in IT holds A` in IT;
end;

registration
  let X be set;
  cluster non empty compl-closed cap-closed Subset-Family of X;
  existence
  proof
    reconsider S = bool X as Subset-Family of X by ZFMISC_1:def 1;
    take S;
    thus S is non empty;
    thus S is compl-closed
    proof
      let A be Subset of X;
      thus thesis;
    end;
    thus S is cap-closed
    proof
      let A, B be set;
      assume A in S & B in S;
      then A /\ B c= X by XBOOLE_1:108;
      hence thesis;
    end;
  end;
end;

definition
  let X be set;
  mode Field_Subset of X is non empty compl-closed cap-closed
    Subset-Family of X;
end;

reserve F for Field_Subset of X;

theorem Th4:
  for A,B being Subset of X holds {A,B} is Subset-Family of X
proof
  let A,B be Subset of X;
  set C = {A,B};
  C c= bool X
  proof
    let x be set;
    assume x in C;
    then x = A or x = B by TARSKI:def 2;
    hence thesis;
  end;
  hence thesis;
end;

canceled;

theorem Th6:
  ex A being Subset of X st A in F
proof consider A being Element of F;
  A in F & F c= bool X;
  hence thesis;
end;

canceled 2;

theorem Th9:
  for A, B being set st A in F & B in F holds A \/ B in F
proof
  let A, B be set;
  assume that
A1: A in F and
A2: B in F;
  reconsider A1 = A, B1 = B as Subset of X by A1,A2;
A3: A1` in F by A1,Def1;
  B1` in F by A2,Def1;
  then A1` /\ B1` in F by A3,FINSUB_1:def 2;
  then (A1 \/ B1)` in F by XBOOLE_1:53;
  then (A1 \/ B1)`` in F by Def1;
  hence thesis;
end;

theorem Th10:
  {} in F
proof
  consider A being Subset of X such that
A1: A in F by Th6;
A2: A` in F by A1,Def1;
  A misses A` by XBOOLE_1:79;
  then A /\ A` = {} by XBOOLE_0:def 7;
  hence thesis by A1,A2,FINSUB_1:def 2;
end;

theorem Th11:
  X in F
proof
  consider A being Subset of X such that
A1: A in F by Th6;
A2: A` in F by A1,Def1;
  A \/ A` = [#] X by SUBSET_1:25
    .= X;
  hence thesis by A1,A2,Th9;
end;

theorem Th12:
  for A,B being Subset of X holds A in F & B in F implies A \ B in F
proof
  let A,B be Subset of X;
  assume
A1: A in F;
  assume B in F;
  then B` in F by Def1;
  then A /\ B` in F by A1,FINSUB_1:def 2;
  hence thesis by SUBSET_1:32;
end;

theorem
  for A, B being set holds (A in F & B in F implies (A \ B) \/ B in F)
proof
  let A, B be set;
  assume
A1: A in F & B in F;
  A \/ B = (A \ B) \/ B by XBOOLE_1:39;
  hence thesis by A1,Th9;
end;

theorem
  { {}, X } is Field_Subset of X
proof
A1: {} c= X by XBOOLE_1:2;
  X in bool X by ZFMISC_1:def 1;
  then reconsider EX = { {}, X } as Subset-Family of X by A1,Th4;
A2: now
    let A,B be set;
    assume
A3: A in EX & B in EX;
A4: (A = {} or B = {}) implies A /\ B = {};
    (A = X & B = X) implies A /\ B = X;
    hence A /\ B in EX by A3,A4,TARSKI:def 2;
  end;
  now
    let A be Subset of X;
    assume
A5: A in EX;
A6: A = {} implies A` = X;
    A = X implies A` = {} X by XBOOLE_1:37;
    hence A` in EX by A5,A6,TARSKI:def 2;
  end;
  hence thesis by A2,Def1,FINSUB_1:def 2;
end;

theorem
  bool X is Field_Subset of X
proof
  reconsider K = bool X as Subset-Family of X by ZFMISC_1:def 1;
A1: K is compl-closed
  proof
    let A be Subset of X;
    assume A in K;
    thus thesis;
  end;
  K is cap-closed
  proof
    let A,B be set;
    assume A in K & B in K;
    then A /\ B c= X by XBOOLE_1:108;
    hence thesis;
  end;
  hence thesis by A1;
end;

theorem
  { {} , X } c= F & F c= bool X
proof
A1: {} in F by Th10;
  X in F by Th11;
  then x in { {} , X } implies x in F by A1,TARSKI:def 2;
  hence thesis by TARSKI:def 3;
end;

canceled;

theorem
  (for p st p in [:NAT,{X}:] ex x,y st [x,y]=p) &
  (for x,y,z st [x,y] in [:NAT,{X}:] & [x,z] in [:NAT,{X}:] holds y=z)
proof
  for x,y,z st [x,y] in [:NAT,{X}:] & [x,z] in [:NAT,{X}:] holds y=z
  proof
    let x,y,z;
    assume [x,y] in [:NAT,{X}:] & [x,z] in [:NAT,{X}:];
    then y in {X} & z in {X} by ZFMISC_1:106;
    then y = X & z = X by TARSKI:def 1;
    hence thesis;
  end;
  hence thesis by RELAT_1:def 1;
end;

definition
  let X be set;
  mode SetSequence of X is Function of NAT, bool X;
end;

reserve ASeq,BSeq for SetSequence of Omega;
reserve A1 for SetSequence of X;

Lm1: dom A1 = NAT & for n holds A1.n in bool X by FUNCT_2:def 1;

canceled 4;

definition
  let X,A1,n;
  redefine func A1.n -> Subset of X;
  coherence by Lm1;
end;

theorem Th23:
  union rng A1 is Subset of X
proof
  for Y st Y in rng A1 holds Y c= X
  proof
    let Y;
    assume Y in rng A1;
    then consider y such that
A1: y in dom A1 & Y = A1.y by FUNCT_1:def 5;
    reconsider y as Element of NAT by A1,FUNCT_2:def 1;
    Y = A1.y by A1;
    hence thesis;
  end;
  hence thesis by ZFMISC_1:94;
end;

definition
  let X be set, A1 be SetSequence of X;
  redefine func Union A1 -> Subset of X;
  coherence by Th23;
end;

canceled;

theorem Th25:
  x in Union A1 iff ex n st x in A1.n
proof
  set DX = union rng A1;
A1: for x holds x in DX iff ex n st x in A1.n
  proof
    let x;
    thus x in DX implies ex n st x in A1.n
    proof
      assume x in DX;
      then consider Y such that
A2:   x in Y & Y in rng A1 by TARSKI:def 4;
      consider p such that
A3:   p in dom A1 & Y = A1.p by A2,FUNCT_1:def 5;
      p in NAT by A3,FUNCT_2:def 1;
      hence thesis by A2,A3;
    end;
    thus (ex n st x in A1.n) implies x in DX
    proof
      given n such that
A4:   x in A1.n;
      n in NAT;
      then n in dom A1 by FUNCT_2:def 1;
      then A1.n in rng A1 by FUNCT_1:def 5;
      hence thesis by A4,TARSKI:def 4;
    end;
  end;
  thus thesis by A1;
end;

theorem Th26:
  ex B1 being SetSequence of X st for n holds B1.n = (A1.n)`
proof
  deffunc F(Element of NAT) = (A1.$1)`;
  ex f being Function of NAT,bool X st
  for x being Element of NAT holds f.x = F(x) from FUNCT_2:sch 4;
  then consider f being Function of NAT,bool X such that
A1: for x being Element of NAT holds f.x = (A1.x)`;
  take f;
  thus thesis by A1;
end;

definition
  let X be set, A1 be SetSequence of X;
  canceled 2;
  func Complement A1 -> SetSequence of X means
  :Def4:
  for n holds it.n = (A1.n)`;
  existence by Th26;
  uniqueness
  proof
    let BSeq,CSeq be SetSequence of X such that
A1: for n holds BSeq.n = (A1.n)` and
A2: for m holds CSeq.m = (A1.m)`;
A3: for x st x in NAT holds BSeq.x = CSeq.x
    proof
      let x;
      assume x in NAT;
      then reconsider x as Element of NAT;
      BSeq.x = (A1.x)` by A1
        .= CSeq.x by A2;
      hence thesis;
    end;
    NAT = dom BSeq & NAT = dom CSeq by FUNCT_2:def 1;
    hence thesis by A3,FUNCT_1:9;
  end;
  involutiveness
  proof
    let IT,A1 be SetSequence of X;
    assume
A4: for n holds IT.n = (A1.n)`;
    let n;
    thus A1.n = (A1.n)``
      .= (IT.n)` by A4;
  end;
end;

definition
  let X be set, A1 be SetSequence of X;
  func Intersection A1 -> Subset of X equals

  (Union Complement A1)`;
  correctness;
end;

canceled 2;

theorem Th29:
  x in Intersection A1 iff for n holds x in A1.n
proof
A1: for n holds X \ (Complement A1).n = A1.n
  proof
    let n;
    X \ (Complement A1).n = ((A1.n)`)` by Def4
      .= A1.n;
    hence thesis;
  end;
A2: x in X & not x in Union Complement A1 iff
  x in X & for n holds not x in (Complement A1).n by Th25;
  (for n holds (x in X & not x in (Complement A1).n)) iff
  for n holds x in A1.n
  proof thus
    (for n holds (x in X & not x in (Complement A1).n)) implies
    for n holds x in A1.n
    proof
      assume
A3:   (for n holds (x in X & not x in (Complement A1).n));
      let n;
      x in X & not x in (Complement A1).n by A3;
      then x in X \ (Complement A1).n by XBOOLE_0:def 5;
      hence thesis by A1;
    end;
    assume
A4: for n holds x in A1.n;
    let n;
    x in A1.n by A4;
    then x in X \ (Complement A1).n by A1;
    hence thesis by XBOOLE_0:def 5;
  end;
  hence thesis by A2,XBOOLE_0:def 5;
end;

Lmx1:
  for A, B being Subset of X holds
   Complement (A followed_by B) = A` followed_by B`
proof
 let A,B be Subset of X;
 let n be Element of NAT;
 per cases by NAT_1:3;
 suppose
S: n=0;
 thus (Complement (A followed_by B)).n
     = ((A followed_by B).n)` by Def4
    .= A` by S,FUNCT_7:121
    .= (A` followed_by B`).n by S,FUNCT_7:121;
 end;
 suppose
S: n>0;
 thus (Complement (A followed_by B)).n
     = ((A followed_by B).n)` by Def4
    .= B` by S,FUNCT_7:122
    .= (A` followed_by B`).n by S,FUNCT_7:122;
 end;
end;

theorem Th30:
  for A, B being Subset of X holds
   Intersection(A followed_by B) = A /\ B
proof
  let A, B be Subset of X;
   set A1 = A followed_by B;
   Complement A1=  A` followed_by B` by Lmx1;
   then rng Complement A1 = {A`,B`} by FUNCT_7:128;
   then Union Complement A1 = A` \/ B` by ZFMISC_1:93;
   then (Union Complement A1)` = A`` /\ B`` by XBOOLE_1:53;
  hence thesis;
end;

definition
  let f be Function;
  attr f is non-ascending means
  :Def6:
  for n,m st n <= m holds f.m c= f.n;
  attr f is non-descending means

  for n,m st n <= m holds f.n c= f.m;
end;

definition
  let X be set, F be Subset-Family of X;
  attr F is sigma-multiplicative means
  :Def8:
  for A1 being SetSequence of X st rng A1 c= F
  holds Intersection A1 in F;
end;

registration
  let X be set;
  cluster compl-closed sigma-multiplicative non empty Subset-Family of X;
  existence
  proof
    reconsider F = bool X as non empty Subset-Family of X by ZFMISC_1:def 1;
    take F;
    thus (for A being Subset of X st A in F holds A` in F) &
    for A1 being SetSequence of X st rng A1 c= F
    holds Intersection A1 in F;
    thus F is non empty;
  end;
end;

definition
  let X be set;
  mode SigmaField of X
    is compl-closed sigma-multiplicative non empty Subset-Family of X;
end;

canceled;

theorem
  for S being non empty set holds S is SigmaField of X iff (S c= bool X) &
  (for A1 being SetSequence of X st
  rng A1 c= S holds Intersection A1 in S) &
  (for A being Subset of X st A in S holds A` in S) by Def1,Def8;

canceled 2;

theorem Th35:
  Y is SigmaField of X implies Y is Field_Subset of X
proof
  assume
A1: Y is SigmaField of X;
  Y is cap-closed
  proof
    let A,B be set;
    assume
A2: A in Y & B in Y;
    then reconsider A' = A, B' = B as Subset of X by A1;
    set A1 = A' followed_by B';
A5: Intersection A1 = A /\ B by Th30;
    rng A1 = {A',B'} by FUNCT_7:128;
    then rng A1 c= Y by A2,ZFMISC_1:38;
    hence A /\ B in Y by A1,A5,Def8;
  end;
  hence thesis by A1;
end;

registration
  let X be set;
  cluster -> cap-closed compl-closed SigmaField of X;
  coherence by Th35;
end;

reserve Sigma for SigmaField of Omega;
reserve Si for SigmaField of X;

canceled 2;

theorem
  ex A being Subset of X st A in Si
proof consider A being Element of Si;
  A in Si & Si c= bool X;
  hence thesis;
end;

canceled 2;

theorem
  for A,B being Subset of X st A in Si & B in Si holds A \/ B in Si by Th9;

theorem
  {} in Si by Th10;

theorem
  X in Si by Th11;

theorem
  for A,B being Subset of X st A in Si & B in Si holds A \ B in Si by Th12;

:: sequences of elements of given sigma-field (subsets of given nonempty set
:: Omega) Sigma are introduced; also notion of Event from this sigma-field is
:: introduced; then some previous theorems are reformulated in language of
:: these notions.

definition
  let X be set, Si be SigmaField of X;
  mode SetSequence of Si -> SetSequence of X means
    :Def9:
    rng it c= Si;
  existence
  proof
    set A1 = NAT --> X;
    X in bool X by ZFMISC_1:def 1;
    then reconsider A1 as SetSequence of X by FUNCOP_1:57;
    take A1;
X:   X in Si by Th11;
     rng A1 = {X} by FUNCOP_1:14;
    hence rng A1 c= Si by X,ZFMISC_1:37;
  end;
end;

canceled;

theorem Th46:
  for ASeq being SetSequence of Si holds Union ASeq in Si
proof
A2: rng A1 c= Si implies (for n being Nat holds (Complement A1).n in Si)
  proof
    assume
A3: rng A1 c= Si;
      let n be Nat;
X:     n in NAT by ORDINAL1:def 13;
      A1.n in rng A1 by NAT_1:52;
      then (A1.n)` in Si by Def1,A3;
      hence thesis by Def4,X;
  end;
A4: rng A1 c= Si implies Union Complement Complement A1 in Si
  proof
    assume rng A1 c= Si;
    then for n being Nat holds (Complement A1).n in Si by A2;
    then rng Complement A1 c= Si by NAT_1:53;
    then Intersection Complement A1 in Si by Def8;
    then (Union Complement Complement A1)`` in Si by Def1;
    hence thesis;
  end;
A5: for A1 st rng A1 c= Si holds Union A1 in Si
  proof
    let A1;
    assume rng A1 c= Si;
    then Union Complement Complement A1 in Si by A4;
    hence thesis;
  end;
    let ASeq be SetSequence of Si;
     rng ASeq c= Si by Def9;
    hence thesis by A5;
end;

notation
  let X be set, F be SigmaField of X;
  synonym Event of F for Element of F;
end;

definition
  let X be set, F be SigmaField of X;
  redefine mode Event of F -> Subset of X;
  coherence
  proof let E be Event of F;
    E in F;
   hence E is Subset of X;
  end;
end;

canceled;

theorem
  x in Si implies x is Event of Si;

theorem
  for A,B being Event of Si holds A /\ B is Event of Si
                  by FINSUB_1:def 2;

theorem
  for A being Event of Si holds A` is Event of Si
                  by Def1;

theorem
  for A,B being Event of Si holds A \/ B is Event of Si
                  by Th9;

theorem
  {} is Event of Si by Th10;

theorem
  X is Event of Si by Th11;

theorem
  for A,B being Event of Si holds A \ B is Event of Si by Th12;

registration
  let X,Si;
  cluster empty Event of Si;
  existence
  proof {} is Event of Si by Th10;
    hence thesis;
  end;
end;

definition
  let X,Si;
canceled;
  func [#] Si -> Event of Si equals

  X;
  coherence by Th11;
end;

definition
  let X,Si;
  let A,B be Event of Si;
  redefine func A /\ B -> Event of Si;
  coherence by FINSUB_1:def 2;
  func A \/ B -> Event of Si;
  coherence by Th9;
  func A \ B -> Event of Si;
  coherence by Th12;
end;

canceled 2;

theorem
  ASeq is SetSequence of Sigma iff for n holds ASeq.n is Event of Sigma
proof
 thus ASeq is SetSequence of Sigma implies for n holds ASeq.n is Event of Sigma
  proof
    assume
A2: rng ASeq c= Sigma;
    for n holds ASeq.n is Event of Sigma
    proof
      let n;
      ASeq.n in rng ASeq by NAT_1:52;
      hence thesis by A2;
    end;
    hence thesis;
  end;
    assume
A3: for n holds ASeq.n is Event of Sigma;
    for n be Nat holds ASeq.n in Sigma
    proof
      let n be Nat;
       n in NAT by ORDINAL1:def 13;
      then ASeq.n is Event of Sigma by A3;
      hence thesis;
    end;
    then rng ASeq c= Sigma by NAT_1:53;
    hence thesis by Def9;
end;

theorem
  ASeq is SetSequence of Sigma implies Union ASeq is Event of Sigma
   by Th46;

:: DEFINITION OF sigma-ADDITIVE PROBABILITY

reserve A, B for Event of Sigma,
  ASeq for SetSequence of Sigma;

theorem Th59:
  ex f st (dom f = Sigma & for D st D in Sigma holds
  (p in D implies f.D = 1) & (not p in D implies f.D = 0))
proof
  defpred C[set] means p in $1;
  deffunc F(set) = 1;
  deffunc G(set) = 0;
  ex f being Function st dom f = Sigma & for x being set st x in Sigma holds
  (C[x] implies f.x=F(x)) & (not C[x] implies f.x=G(x)) from PARTFUN1:sch 1;
  then consider f being Function such that
A1: dom f = Sigma & for x being set st x in Sigma holds
  (C[x] implies f.x = 1) & (not C[x] implies f.x = 0);
  take f;
  thus dom f = Sigma by A1;
  let D;
  assume
A2: D in Sigma;
  hence p in D implies f.D = 1 by A1;
  assume not p in D;
  hence thesis by A1,A2;
end;

reserve P for Function of Sigma,REAL;

theorem Th60:
  ex P st (for D st D in Sigma holds
  (p in D implies P.D = 1) & (not p in D implies P.D = 0))
proof
  consider f such that
A1: dom f = Sigma & for D st D in Sigma holds
  (p in D implies f.D = 1) & (not p in D implies f.D = 0) by Th59;
  rng f c= REAL
  proof
    let y;
    assume y in rng f;
    then consider x such that
A2: x in dom f & y = f.x by FUNCT_1:def 5;
    reconsider x as Subset of Omega by A1,A2;
A3: p in x implies y = 1 by A1,A2;
    not p in x implies y = 0 by A1,A2;
    hence thesis by A3;
  end;
  then reconsider f as Function of Sigma,REAL by A1,FUNCT_2:def 1,RELSET_1:11;
  take f;
  thus thesis by A1;
end;

canceled;

theorem Th62:
  P * ASeq is Real_Sequence
proof
  rng ASeq c= Sigma by Def9;
  then rng ASeq c= dom P by FUNCT_2:def 1;
  then
A1: dom (P * ASeq) = dom ASeq by RELAT_1:46
       .= NAT by FUNCT_2:def 1;
  rng (P * ASeq) c= REAL
  proof
    rng (P * ASeq) c= rng P & rng P c= REAL by RELAT_1:45,RELSET_1:12;
    hence thesis by XBOOLE_1:1;
  end;
  hence thesis by A1,FUNCT_2:def 1,RELSET_1:11;
end;

definition
  let Omega,Sigma,ASeq,P;
  redefine func P * ASeq -> Real_Sequence;
  coherence by Th62;
end;

definition
  let Omega,Sigma;
  canceled;
  mode Probability of Sigma -> Function of Sigma,REAL means
    :Def13:
    (for A holds 0 <= it.A) & (it.Omega = 1) &
    (for A,B st A misses B holds it.(A \/ B) = it.A + it.B) &
    (for ASeq st ASeq is non-ascending holds
    (it * ASeq is convergent & lim (it * ASeq) = it.Intersection ASeq));
  existence
  proof
    consider p being Element of Omega;
    consider P such that
A1: for D st D in Sigma holds
    (p in D implies P.D = 1) & (not p in D implies P.D = 0) by Th60;
    take P;
A3: for A holds 0 <= P.A by A1;
A4: P.Omega = 1
    proof
      Omega c= Omega;
      then reconsider O = Omega as Subset of Omega;
      O in Sigma by Th11;
      hence thesis by A1;
    end;
A5: for A,B st A misses B holds P.(A \/ B) = P.A + P.B
    proof
      let A,B such that
A6:   A misses B;
A7:   (p in A & not p in B) implies (P.A = 1 & P.B = 0) by A1;
A8:   (p in A & not p in B) implies p in A \/ B by XBOOLE_0:def 3;
A9:   (not p in A & p in B) implies (P.A = 0 & P.B = 1) by A1;
A10:  (not p in A & p in B) implies p in A \/ B by XBOOLE_0:def 3;
A11:  (not p in A & not p in B) implies P.A = 0 & P.B = 0 by A1;
      (not p in A & not p in B) implies not p in (A \/ B) by XBOOLE_0:def 3;
      hence thesis by A1,A6,A7,A8,A9,A10,A11,XBOOLE_0:3;
    end;
    for ASeq st ASeq is non-ascending holds
    P * ASeq is convergent & lim (P * ASeq) = P.Intersection ASeq
    proof
      let ASeq;
      assume
A12:  ASeq is non-ascending;
A13:  for n holds (P * ASeq).n = P.(ASeq.n)
      proof
        let n;
        dom (P * ASeq) = NAT by FUNCT_2:def 1;
        hence thesis by FUNCT_1:22;
      end;
A14:  (for n holds p in ASeq.n) implies for n holds (P * ASeq).n = 1
      proof
        assume
A15:    for n holds p in ASeq.n;
        for n holds (P * ASeq).n = 1
        proof
          let n;
X:        rng ASeq c= Sigma by Def9;
B16:      ASeq.n in rng ASeq by NAT_1:52;
          p in ASeq.n by A15;
          then P.(ASeq.n) = 1 by A1,B16,X;
          hence thesis by A13;
        end;
        hence thesis;
      end;
A17:  not (for n holds p in ASeq.n) implies
      ex m st (for n st m <= n holds (P * ASeq).n = 0)
      proof
        assume not (for n holds p in ASeq.n);
        then consider m such that
A18:    not p in ASeq.m;
        take m;
        for n st m <= n holds (P * ASeq).n = 0
        proof
          let n;
          assume m <= n;
          then ASeq.n c= ASeq.m by A12,Def6;
          then
A19:      not p in ASeq.n by A18;
X:        rng ASeq c= Sigma by Def9;
          ASeq.n in rng ASeq by NAT_1:52;
          then P.(ASeq.n) = 0 by A1,A19,X;
          hence thesis by A13;
        end;
        hence thesis;
      end;
A20:  (for n holds (P * ASeq).n = 1) implies
      P * ASeq is convergent & lim (P * ASeq) = 1
      proof reconsider r = 1 as Real;
        assume
A21:    for n holds (P * ASeq).n = 1;
        ex m st for n st m <= n holds (P * ASeq).n = r
        proof
          take 0; thus thesis by A21;
        end;
        hence thesis by Th3;
      end;
A22:  (ex m st (for n st m <= n holds (P * ASeq).n = 0)) implies
      P * ASeq is convergent & lim (P * ASeq) = 0 by Th3;
A23:  (for n holds p in ASeq.n) implies
      P * ASeq is convergent & lim (P * ASeq) = P.Intersection ASeq
      proof
        assume
A24:    for n holds p in ASeq.n;
        then
A25:    p in Intersection ASeq by Th29;
        rng ASeq c= Sigma by Def9;
        then Intersection ASeq in Sigma by Def8;
        hence thesis by A1,A14,A20,A24,A25;
      end;
      not (for n holds p in ASeq.n) implies
      P * ASeq is convergent & lim (P * ASeq) = P.Intersection ASeq
      proof
        assume
A26:    not (for n holds p in ASeq.n);
        then
A27:    not p in Intersection ASeq by Th29;
        rng ASeq c= Sigma by Def9;
        then Intersection ASeq in Sigma by Def8;
        hence thesis by A1,A17,A22,A26,A27;
      end;
      hence thesis by A23;
    end;
    hence thesis by A3,A4,A5;
  end;
end;

reserve P for Probability of Sigma;

registration
  let Omega,Sigma;
 cluster -> zeroed Probability of Sigma;
 coherence
proof let P be Probability of Sigma;
A1: {} misses ([#] Sigma) by XBOOLE_1:65;
A2: {} \/ ([#] Sigma) = [#] Sigma;
  reconsider E = {} as Event of Sigma by Th10;
  1 = P.([#] Sigma) by Def13;
  then 1 = P.E + 1 by A1,A2,Def13;
  hence P.{} = 0;
end;
end;

canceled 3;

theorem
  P.([#] Sigma) = 1 by Def13;

theorem Th67:
  P.(([#] Sigma) \ A) + P.A = 1
proof
A1: (([#] Sigma) \ A) misses A by XBOOLE_1:79;
  (([#] Sigma) \ A) \/ A = A` \/ A
    .= [#] Omega by SUBSET_1:25
    .= Omega;
  then P.(([#] Sigma) \ A) + P.A = P.Omega by A1,Def13
    .= 1 by Def13;
  hence thesis;
end;

theorem
  P.(([#] Sigma) \ A) = 1 - P.A
proof
  P.(([#] Sigma) \ A) + P.A = 1 by Th67;
  hence thesis;
end;

theorem Th69:
  A c= B implies P.(B \ A) = P.B - P.A
proof
  assume
A1: A c= B;
  A misses (B \ A) by XBOOLE_1:79;
  then P.A + P.(B \ A) = P.(A \/ (B \ A)) by Def13
    .= P.B by A1,XBOOLE_1:45;
  hence thesis;
end;

theorem Th70:
  A c= B implies P.A <= P.B
proof
  assume A c= B;
  then P.(B \ A) = P.B - P.A by Th69;
  then 0 <= P.B - P.A by Def13;
  then 0 + P.A <= P.B by XREAL_1:21;
  hence thesis;
end;

theorem
  P.A <= 1
proof
  P.([#] Sigma) = 1 by Def13;
  hence thesis by Th70;
end;

theorem Th72:
  P.(A \/ B) = P.A + P.(B \ A)
proof
A1: A misses (B \ A) by XBOOLE_1:79;
  P.(A \/ B) = P.(A \/ (B \ A)) by XBOOLE_1:39
    .= P.A + P.(B \ A) by A1,Def13;
  hence thesis;
end;

theorem Th73:
  P.(A \/ B) = P.A + P.(B \ (A /\ B))
proof
  thus P.(A \/ B) = P.A + P.(B \ A) by Th72
    .= P.A + P.(B \ (A /\ B)) by XBOOLE_1:47;
end;

theorem Th74:
  P.(A \/ B) = P.A + P.B - P.(A /\ B)
proof
  P.(A \/ B) = P.A + P.(B \ (A /\ B)) by Th73
    .= P.A + (P.B - P.(A /\ B)) by Th69,XBOOLE_1:17;
  hence thesis;
end;

theorem
  P.(A \/ B) <= P.A + P.B
proof
A1: 0 <= P.(A /\ B) by Def13;
  P.(A \/ B) = P.A + P.B - P.(A /\ B) by Th74;
  hence thesis by A1,XREAL_1:45;
end;

::  definition of sigma-field generated by families
::  of subsets of given set and family of Borel Sets

reserve D for Subset of REAL;
reserve S for Subset-Family of Omega;

theorem Th76:
  bool Omega is SigmaField of Omega
proof
  set Y = bool Omega;
  (Y c= bool Omega) &
  (for BSeq st rng BSeq c= Y holds Intersection BSeq in Y) &
  (for E st E in Y holds E` in Y);
  hence thesis by Def1,Def8;
end;

Lm2: for X being Subset-Family of Omega ex Y being SigmaField of Omega
st X c= Y & for Z st (X c= Z & Z is SigmaField of Omega) holds Y c= Z
proof
  let X be Subset-Family of Omega;
  set V = { S : X c= S & S is SigmaField of Omega};
  set Y = meet V;
A1: bool Omega in V
  proof
    bool Omega c= bool Omega;
    then reconsider X1 = bool Omega as Subset-Family of Omega;
    X1 is SigmaField of Omega by Th76;
    hence thesis;
  end;
A2: now
    let Z;
    assume Z in V;
    then ex S st Z = S & X c= S & S is SigmaField of Omega;
    hence {} in Z by Th10;
  end;
A3: for BSeq st rng BSeq c= Y holds Intersection BSeq in Y
  proof
    let BSeq such that
A4:  rng BSeq c= Y;
    now
      let Z;
      assume
A5:   Z in V;
      then
A6:   ex S st Z = S & X c= S & S is SigmaField of Omega;
      now
        let n be Nat;
        BSeq.n in rng BSeq by NAT_1:52;
        hence BSeq.n in Z by A5,SETFAM_1:def 1,A4;
      end;
      then rng BSeq c= Z by NAT_1:53;
      hence Intersection BSeq in Z by A6,Def8;
    end;
    hence thesis by A1,SETFAM_1:def 1;
  end;
  for E st E in Y holds E` in Y
  proof
    let E such that
A7: E in Y;
    now
      let Z;
      assume
A8:   Z in V;
      then
A9:   E in Z by A7,SETFAM_1:def 1;
      ex S st Z = S & X c= S & S is SigmaField of Omega by A8;
      hence E` in Z by A9,Def1;
    end;
    hence thesis by A1,SETFAM_1:def 1;
  end;
  then reconsider Y as SigmaField of Omega
  by A1,A2,A3,Def1,Def8,SETFAM_1:4,def 1;
  take Y;
A10: now
    let Z;
    assume Z in V;
    then ex S st Z = S & X c= S & S is SigmaField of Omega;
    hence X c= Z;
  end;
  for Z st (X c= Z & Z is SigmaField of Omega) holds Y c= Z
  proof
    let Z;
    assume
A11: X c= Z & Z is SigmaField of Omega;
    then reconsider Z as Subset-Family of Omega;
    Z in V by A11;
    hence thesis by SETFAM_1:4;
  end;
  hence thesis by A1,A10,SETFAM_1:6;
end;

definition
  let Omega;
  let X be Subset-Family of Omega;
  func sigma(X) -> SigmaField of Omega means

  X c= it &
  for Z st (X c= Z & Z is SigmaField of Omega) holds it c= Z;
  existence by Lm2;
  uniqueness
  proof
    let R1,R2 be SigmaField of Omega such that
A1: X c= R1 & for Z st X c= Z & Z is SigmaField of Omega holds R1 c= Z and
A2: X c= R2 & for Z st X c= Z & Z is SigmaField of Omega holds R2 c= Z;
A3: R1 c= R2 by A1,A2;
    R2 c= R1 by A1,A2;
    hence thesis by A3,XBOOLE_0:def 10;
  end;
end;

definition
  let r be ext-real number;
  func halfline r -> Subset of REAL equals

  ].-infty,r.[;
  coherence
  proof
   ].-infty,r.[ c= REAL
   proof let x be real number;
   assume x in ].-infty,r.[;
    then -infty < x & x < r by XXREAL_1:4;
   hence thesis by XXREAL_0:48;
   end;
   hence thesis;
  end;
end;

definition
  func Family_of_halflines -> Subset-Family of REAL equals
  {D: ex r st D = halfline(r)};
  coherence
  proof {D: ex r st D = halfline(r)} is Subset-Family of REAL
    proof now
        let p;
        assume p in {D: ex r st D = halfline(r)};
        then ex D st p = D & ex r st D = halfline(r);
        hence p in bool REAL;
      end;
      hence thesis by TARSKI:def 3;
    end;
    hence thesis;
  end;
end;

definition
  func Borel_Sets -> SigmaField of REAL equals

  sigma(Family_of_halflines);
  correctness;
end;

theorem
  for A, B being Subset of X holds
   Complement (A followed_by B) = A` followed_by B` by Lmx1;
