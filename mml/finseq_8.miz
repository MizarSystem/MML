:: Concatenation of Finite Sequences Reducing Overlapping Part and an
:: Argument of Separators of Sequential Files
::  by Hirofumi Fukura and Yatsuka Nakamura
::
:: Received March 18, 2004
:: Copyright (c) 2004 Association of Mizar Users

environ

 vocabularies FINSEQ_8, ARYTM_1, RELAT_1, FINSEQ_1, FUNCT_1, FINSEQ_5, BOOLE,
      RFINSEQ, JORDAN3, SQUARE_1, ARYTM;
 notations TARSKI, XBOOLE_0, SUBSET_1, NUMBERS, XCMPLX_0, XXREAL_0, NAT_1,
      BINARITH, RELAT_1, RFINSEQ, FINSEQ_1, FUNCT_1, JORDAN3, FINSEQ_5;
 constructors SQUARE_1, NAT_1, RFINSEQ, BINARITH, FINSEQ_5, JORDAN3, VALUED_1,
      PARTFUN1, SEQ_1;
 registrations RELSET_1, XXREAL_0, XREAL_0, NAT_1, FINSEQ_1, ORDINAL1,
      XBOOLE_0, VALUED_1, FUNCT_2;
 requirements NUMERALS, REAL, BOOLE, SUBSET, ARITHM;
 definitions FINSEQ_1, VALUED_1;
 theorems REAL_1, REAL_2, NAT_1, NAT_2, JORDAN3, FINSEQ_1, FINSEQ_3, FINSEQ_5,
      FINSEQ_6, BINARITH, SQUARE_1, RFINSEQ, RELAT_1, XREAL_1, XBOOLE_1,
      XXREAL_0, ORDINAL1;
 schemes NAT_1;

begin

definition
  let D be set,f,g be FinSequence of D;
  redefine func f^g -> FinSequence of D;
  correctness
  proof
    rng (f^g) c= rng f \/ rng g by FINSEQ_1:44;
    hence thesis;
  end;
end;

theorem
  for D being non empty set, f,g being FinSequence of D st len f>=1 holds
  mid(f^g,1,len f)=f
proof
  let D be non empty set,f,g be FinSequence of D;
  assume
A1: len f>=1;
  then len f-1>=0 by XREAL_1:50;
  then len f -1=len f-'1 by BINARITH:def 3;
  then
A2: len f-'1+1=len f;
  1-1=0;
  then
A3: 1-'1=0 by BINARITH:def 3;
  (f^g)|len f=f by FINSEQ_5:26;
  then ((f^g)/^0)|len f=f by FINSEQ_5:31;
  hence mid(f^g,1,len f)=f by A1,A2,A3,JORDAN3:def 1;
end;

theorem Th2:
  for D being set,f being FinSequence of D,i being Element of NAT
  st i>=len f holds f/^i=<*>D
proof
  let D be set,f be FinSequence of D,i be Element of NAT;
  assume
A1: i>=len f;
  per cases by A1,REAL_1:def 5;
  suppose i>len f;
    hence f/^i=<*>D by RFINSEQ:def 2;
  end;
  suppose
A2: i=len f;
    then len (f/^i)=len f -i by RFINSEQ:def 2
      .=0 by A2;
    hence f/^i=<*>D by FINSEQ_1:32;
  end;
end;

theorem
  for D being non empty set,k1,k2 being Element of NAT holds
  mid(<*>D,k1,k2)=<*>D
proof
  let D be non empty set,k1,k2 be Element of NAT;
  per cases;
  suppose k1<=k2;
    hence mid(<*>D,k1,k2)=((<*>D)/^(k1-'1))|(k2-'k1+1) by JORDAN3:def 1
      .= (<*>D)|(k2-'k1+1) by FINSEQ_6:86
      .=<*>D by FINSEQ_5:81;
  end;
  suppose k1>k2;
    hence mid(<*>D,k1,k2)=Rev (((<*>D)/^(k2-'1))|(k1-'k2+1)) by JORDAN3:def 1
      .= Rev((<*>D)|(k1-'k2+1)) by FINSEQ_6:86
      .= Rev(<*>D) by FINSEQ_5:81
      .=<*>D by FINSEQ_5:82;
  end;
end;

definition
  let D be set,f be FinSequence of D,k1,k2 be Nat;
  func smid(f,k1,k2) -> FinSequence of D equals

  (f/^(k1-'1))|(k2+1-'k1);
  correctness;
end;

theorem Th4:
  for D being non empty set,
  f being FinSequence of D,k1,k2 being Element of NAT st k1<=k2 holds
  smid(f,k1,k2)=mid(f,k1,k2)
proof
  let D be non empty set,f be FinSequence of D,k1,k2 be Element of NAT;
  assume
A1: k1<=k2;
  then k2-'k1+1=k2-k1+1 by BINARITH:50
    .=k2+1-k1
    .=k2+1-'k1 by A1,BINARITH:50,NAT_1:12;
  hence smid(f,k1,k2)=mid(f,k1,k2) by A1,JORDAN3:def 1;
end;

theorem Th5:
  for D being non empty set,
  f being FinSequence of D,k2 being Element of NAT holds smid(f,1,k2)=f|k2
proof
  let D be non empty set,f be FinSequence of D,k2 be Element of NAT;
  thus smid(f,1,k2) = (f/^0)|(k2+1-'1) by NAT_2:10
    .= f|(k2+1-'1) by FINSEQ_5:31
    .=f|k2 by BINARITH:39;
end;

theorem Th6:
  for D being non empty set,
  f being FinSequence of D,k2 being Element of NAT st len f<=k2 holds
  smid(f,1,k2)=f
proof
  let D be non empty set,f be FinSequence of D,k2 be Element of NAT;
  assume
A1: len f<=k2;
  thus smid(f,1,k2)=f|k2 by Th5
    .=f by A1,FINSEQ_1:79;
end;

theorem Th7:
  for D being set,
  f being FinSequence of D,k1,k2 being Element of NAT st k1>k2 holds
  smid(f,k1,k2)={}
proof
  let D be set,f be FinSequence of D,k1,k2 be Element of NAT;
  assume
A1: k1>k2;
  reconsider g=(f/^(k1-'1)) as FinSequence of D;
  k2+1<=k1 by A1,NAT_1:13;
  then smid(f,k1,k2)=g|0 by NAT_2:10;
  hence smid(f,k1,k2)={};
end;

theorem
  for D being set, f being FinSequence of D,k2 being Element of NAT holds
  smid(f,0,k2)=smid(f,1,k2+1)
proof
  let D be set, f be FinSequence of D,k2 be Element of NAT;
  thus smid(f,0,k2)=(f/^0)|(k2+1-'0) by NAT_2:10
    .= f|(k2+1-'0) by FINSEQ_5:31
    .= f|(k2+1) by BINARITH:58
    .= f|(k2+1+1-'1) by BINARITH:39
    .= (f/^0)|(k2+1+1-'1) by FINSEQ_5:31
    .= smid(f,1,k2+1) by NAT_2:10;
end;

theorem Th9:
  for D being non empty set, f,g being FinSequence of D holds
  smid(f^g,len f+1,len f+len g)=g
proof
  let D be non empty set,f,g be FinSequence of D;
  len g+len f+1-'(len f+1) =len g+(len f+1)-'(len f+1)
    .= len g by BINARITH:39;
  then g|(len g+len f+1-'(len f+1))=g by FINSEQ_1:79;
  then ((f^g)/^(len f))|(len f+len g+1-'(len f+1))=g by FINSEQ_5:40;
  hence smid(f^g,len f+1,len f+len g)=g by BINARITH:39;
end;

:: Overlapping Part

definition
  let D be non empty set,f,g be FinSequence of D;
  func ovlpart(f,g) -> FinSequence of D means
  :Def2:
  len it <=len g &
  it=smid(g,1,len it) & it=smid(f,len f-'len it+1,len f)
  & for j being Nat st j<=len g & smid(g,1,j)=smid(f,len f-'j+1,len f)
  holds j<=len it;
  existence
  proof
    defpred P[Nat] means $1 <=len g & smid(g,1,$1)=smid(f,len f-'$1+1,len f);
A1: smid(g,1,0)={} by Th7;
    len f-'0+1=len f-0+1 by BINARITH:50
      .=len f+1;
    then smid(f,len f-'0+1,len f)={} by Th7,XREAL_1:31;
    then
A2: ex m being Nat st P[m] by A1;
A3: for n being Nat st P[n] holds n<=len g;
    consider k being Nat such that
A4: P[k] & for n being Nat st P[n] holds n <= k from NAT_1:sch 6(A3,A2);
    reconsider k as Element of NAT by ORDINAL1:def 13;
    set b = smid(g,1,k);
    now per cases;
      case
A5:     k>0;
        then
A6:     0+1<=k by NAT_1:13;
        then
A7:     b=mid(g,1,k) by Th4;
        now per cases;
          case len g>0;
            then 0+1<=len g by NAT_1:13;
            hence len b=k-'1+1 by A4,A6,A7,JORDAN3:27
              .=k-1+1 by A6,BINARITH:50
              .=k;
          end;
          case len g<=0;
            hence contradiction by A4,A5;
          end;
        end;
        hence len b=k;
      end;
      case
A8:     k<=0;
        then
A9:     k=0;
        b={} by A8,Th7;
        hence len b=k by A9,FINSEQ_1:25;
      end;
    end;
    hence thesis by A4;
  end;
  uniqueness
  proof
    let a,b be FinSequence of D;
    assume
A10: (len a<=len g & a=smid(g,1,len a) & a=smid(f,len f-'len a+1,len f)
    & for j being Nat st j<=len g & smid(g,1,j)=smid(f,len f-'j+1,len f)
    holds j<=len a)&
    (len b<=len g & b=smid(g,1,len b) & b=smid(f,len f-'len b+1,len f)
    & for j being Nat st j<=len g & smid(g,1,j)=smid(f,len f-'j+1,len f)
    holds j<=len b);
    then
A11: len a<=len b;
    len b<=len a by A10;
    hence a=b by A10,A11,XXREAL_0:1;
  end;
end;

theorem Th10:
  for D being non empty set,f,g being FinSequence of D
  holds len ovlpart(f,g)<=len f
proof
  let D be non empty set,f,g be FinSequence of D;
  now
    assume
A1: len ovlpart(f,g)>len f;
    then len f - len ovlpart(f,g)<0 by REAL_2:105;
    then len f -' len ovlpart(f,g)=0 by BINARITH:def 3;
    then smid(f,len f-'len ovlpart(f,g)+1,len f) =f by Th6;
    hence contradiction by A1,Def2;
  end;
  hence len ovlpart(f,g)<=len f;
end;

::Concatination Reducing Overlapping Part

definition
  let D be non empty set,f,g be FinSequence of D;
  func ovlcon(f,g) -> FinSequence of D equals

  f^(g/^(len ovlpart(f,g)));
  correctness;
end;

theorem Th11:
  for D being non empty set,f,g being FinSequence of D
  holds ovlcon(f,g)=(f|(len f-'len ovlpart(f,g)))^g
proof
  let D be non empty set,f,g be FinSequence of D;
A1: len f-'len ovlpart(f,g)=len f-len ovlpart(f,g) by Th10,BINARITH:50;
  len f+1<=len f+1+len ovlpart(f,g) by NAT_1:12;
  then len f+1-len ovlpart(f,g)<= len f+1+len ovlpart(f,g)-len ovlpart(f,g)
  by XREAL_1:11;
  then
A2: len f+1-'(len f-'len ovlpart(f,g)+1) =len f +1-(len f-'len ovlpart(f
  ,g)+1) by A1,BINARITH:50
    .= len ovlpart(f,g) by A1;
  len f-'len ovlpart(f,g)<=len f by BINARITH:52;
  then
A3: len (f/^(len f-'len ovlpart(f,g)))
  =len f-(len f-'len ovlpart(f,g)) by RFINSEQ:def 2
    .=0+len ovlpart(f,g) by A1;
A4: ovlpart(f,g)=smid(f,len f-'len ovlpart(f,g)+1,len f) by Def2
    .=(f/^(len f-'len ovlpart(f,g)))|(len ovlpart(f,g)) by A2,BINARITH:39
    .=(f/^(len f-'len ovlpart(f,g))) by A3,FINSEQ_1:79;
  ovlpart(f,g)=smid(g,1,len ovlpart(f,g)) by Def2
    .=(g/^(0+1-'1))|(len ovlpart(f,g)) by BINARITH:39
    .=(g/^(0))|(len ovlpart(f,g)) by BINARITH:39
    .= g|(len ovlpart(f,g)) by FINSEQ_5:31;
  hence ovlcon(f,g)= (f|(len f-'len ovlpart(f,g)))^
  (g|(len ovlpart(f,g)))^(g/^(len ovlpart(f,g))) by A4, RFINSEQ:21
    .= (f|(len f-'len ovlpart(f,g)))^
  ((g|(len ovlpart(f,g)))^(g/^(len ovlpart(f,g)))) by FINSEQ_1:45
    .=(f|(len f-'len ovlpart(f,g)))^g by RFINSEQ:21;
end;

::Overlapping Left Difference

definition
  let D be non empty set,f,g be FinSequence of D;
  func ovlldiff(f,g) -> FinSequence of D equals

  (f|(len f-'len ovlpart(f,g)));
  coherence;
end;

::Overlapping Right Difference

definition
  let D be non empty set,f,g be FinSequence of D;
  func ovlrdiff(f,g) -> FinSequence of D equals

  (g/^(len ovlpart(f,g)));
  coherence;
end;

theorem
  for D being non empty set,f,g being FinSequence of D holds ovlcon(f,g)
  =ovlldiff(f,g)^ovlpart(f,g)^ovlrdiff(f,g) & ovlcon(f,g)
  =ovlldiff(f,g)^(ovlpart(f,g)^ovlrdiff(f,g))
proof
  let D be non empty set,f,g be FinSequence of D;
  ovlpart(f,g)^(g/^(len ovlpart(f,g)))
  = smid(g,1,len ovlpart(f,g))^(g/^(len ovlpart(f,g))) by Def2
    .= g|(len ovlpart(f,g))^(g/^(len ovlpart(f,g))) by Th5
    .= g by RFINSEQ:21;
  hence ovlcon(f,g)
  =(f|(len f-'len ovlpart(f,g)))^(ovlpart(f,g)^(g/^(len ovlpart(f,g))))
  by Th11
    .=ovlldiff(f,g)^ovlpart(f,g)^ovlrdiff(f,g) by FINSEQ_1:45;
  hence thesis by FINSEQ_1:45;
end;

theorem
  for D being non empty set,f being FinSequence of D
  holds ovlcon(f,f)=f & ovlpart(f,f)=f & ovlldiff(f,f)={} & ovlrdiff(f,f)={}
proof
  let D be non empty set,f be FinSequence of D;
A1: ovlpart(f,f)=smid(f,1,len ovlpart(f,f)) &
  ovlpart(f,f)=smid(f,len f-'len ovlpart(f,f)+1,len f) by Def2;
  len f-'len f+1=len f-len f+1 by BINARITH:50
    .=0+1;
  then smid(f,1,len f)=smid(f,len f-'len f+1,len f);
  then
A2: len f<=len ovlpart(f,f) by Def2;
  then
A3: ovlcon(f,f)=f^(<*>D) by Th2
    .=f by FINSEQ_1:47;
A4: ovlldiff(f,f)= f|(len f-'len f) by A1,A2,Th6
    .= f|(0) by BINARITH:51
    .= {};
  ovlrdiff(f,f)= <*>D by A2,Th2
    .= {};
  hence ovlcon(f,f)=f & ovlpart(f,f)=f
  & ovlldiff(f,f)={} & ovlrdiff(f,f)={} by A1,A2,A3,A4,Th6;
end;

theorem
  for D being non empty set,f,g being FinSequence of D
  holds ovlpart(f^g,g)=g & ovlpart(f,f^g)=f
proof
  let D be non empty set,f,g be FinSequence of D;
A1: len ovlpart(f^g,g)<=len g by Def2;
A2: smid(g,1,len g)=g|(len g) by Th5
    .=g by FINSEQ_1:79;
  len (f^g)-'len g+1 =len f + len g -'len g+1 by FINSEQ_1:35
    .=len f +1 by BINARITH:39;
  then smid(f^g,len (f^g)-'len g+1,len (f^g))
  = smid(f^g,len f+1,len f + len g) by FINSEQ_1:35
    .= g by Th9;
  then len g<=len ovlpart(f^g,g) by A2,Def2;
  then
A3: len g= len ovlpart(f^g,g) by A1,XXREAL_0:1;
A4: ovlpart(f^g,g)=smid(g,1,len ovlpart(f^g,g)) by Def2
    .=g|(len g) by A3,Th5
    .=g by FINSEQ_1:79;
A5: len ovlpart(f,f^g)<=len f by Th10;
  len f-'len f+1=0+1 by BINARITH:51
    .=1;
  then
A6: smid(f,len f-'len f+1,len f) = (f/^(0+1-'1))|(len (f)) by BINARITH: 39
    .= (f/^(0))|(len (f)) by BINARITH:39
    .= f|(len (f)) by FINSEQ_5:31
    .= f by FINSEQ_1:79;
  len f<=len f+len g by NAT_1:12;
  then
A7: len f<=len (f^g) by FINSEQ_1:35;
  smid(f^g,1,len f) = (f^g)|len f by Th5
    .= f by FINSEQ_5:26;
  then len f<=len ovlpart(f,f^g) by A6,A7,Def2;
  then
A8: len f= len ovlpart(f,f^g) by A5,XXREAL_0:1;
  ovlpart(f,f^g)=smid(f^g,1,len ovlpart(f,f^g)) by Def2
    .=(f^g)|(len f) by A8,Th5
    .=f by FINSEQ_5:26;
  hence ovlpart(f^g,g)=g & ovlpart(f,f^g)=f by A4;
end;

theorem Th15:
  for D being non empty set,f,g being FinSequence of D
  holds len ovlcon(f,g)=len f+len g -len ovlpart(f,g) &
  len ovlcon(f,g)=len f+len g -'len ovlpart(f,g) &
  len ovlcon(f,g)=len f+(len g -'len ovlpart(f,g))
proof
  let D be non empty set,f,g be FinSequence of D;
A1: len ovlpart(f,g) <= len g by Def2;
A2: len ovlcon(f,g)=len f +len (g/^(len ovlpart(f,g))) by FINSEQ_1:35
    .=len f+(len g-'len ovlpart(f,g)) by JORDAN3:19
    .=len f+(len g -len ovlpart(f,g)) by A1,BINARITH:50;
  hence
A3: len ovlcon(f,g)=len f+len g -len ovlpart(f,g);
A4: len ovlpart(f,g)<=len g by Def2;
  hence len ovlcon(f,g)
  =len f+len g -'len ovlpart(f,g) by A3,BINARITH:50,NAT_1:12;
  thus len ovlcon(f,g)=len f+(len g -'len ovlpart(f,g)) by A2,A4,BINARITH:50;
end;

theorem Th16:
  for D being non empty set,f,g being FinSequence of D holds
  len ovlpart(f,g)<=len f & len ovlpart(f,g)<=len g
proof
  let D be non empty set,f,g be FinSequence of D;
  now
    assume
A1: len ovlpart(f,g)>len f;
    set m= len ovlpart(f,g);
    ovlpart(f,g)=smid(f,len f-'len ovlpart(f,g) +1,len f) by Def2
      .=smid(f,0+1,len f) by A1,NAT_2:10
      .=f by Th6;
    hence contradiction by A1;
  end;
  hence len ovlpart(f,g)<=len f & len ovlpart(f,g)<=len g by Def2;
end;

definition
  let D be non empty set,CR be FinSequence of D;
  pred CR separates_uniquely means
  :Def6:
  for f being FinSequence of D,i,j being Element of NAT
  st 1<=i & i<j & j+len CR-'1<=len f &
  smid(f,i,i+len CR-'1)=smid(f,j,j+len CR-'1) & smid(f,i,i+len CR-'1)=CR
  holds j-'i>=len CR;
end;

theorem
  for D being non empty set,CR being FinSequence of D holds
  CR separates_uniquely iff len ovlpart(CR/^1,CR) =0
proof
  let D be non empty set,CR be FinSequence of D;
  set p= ovlpart(CR/^1,CR);
A1: now
    assume
A2: CR separates_uniquely;
    set f=(CR|1) ^ ovlcon(CR/^1,CR);
A3: len ovlpart(CR/^1,CR)<=len (CR/^1) by Th16;
A4: f=(CR|1) ^ (CR/^1) ^ (CR/^(len ovlpart(CR/^1,CR))) by FINSEQ_1:45
      .= CR ^ (CR/^(len ovlpart(CR/^1,CR))) by RFINSEQ:21;
A5: f=(CR|1)^(((CR/^1)|(len (CR/^1)-'len ovlpart(CR/^1,CR)))^CR) by Th11
      .=(CR|1)^((CR/^1)|(len (CR/^1)-'len ovlpart(CR/^1,CR)))^CR
    by FINSEQ_1:45;
A6: len ((CR|1)^((CR/^1)|(len (CR/^1)-'len ovlpart(CR/^1,CR))))
    =len (CR|1)+len ((CR/^1)|(len (CR/^1)-'len ovlpart(CR/^1,CR)))
    by FINSEQ_1:35

.=len (CR|1) +(len (CR/^1)-'len ovlpart(CR/^1,CR)) by BINARITH:52,FINSEQ_1: 80
      .=len (CR|1) +(len (CR/^1)-len ovlpart(CR/^1,CR)) by A3,BINARITH:50
      .=len (CR|1)+len (CR/^1)- len ovlpart(CR/^1,CR)
      .=len ((CR|1)^(CR/^1))- len ovlpart(CR/^1,CR) by FINSEQ_1:35
      .=len CR - len ovlpart(CR/^1,CR) by RFINSEQ:21;
    len ovlpart(CR/^1,CR)<=len CR by Th16;
    then
A7: len CR - len ovlpart(CR/^1,CR)=len CR -' len ovlpart(CR/^1,CR)
    by BINARITH:50;
A8: len CR +1-'1=len CR by BINARITH:39;
A9: len ovlpart(CR/^1,CR)<=len CR by Def2;
A10: len f= len (CR|1) +len ovlcon(CR/^1,CR) by FINSEQ_1:35
      .= len (CR|1) +(len (CR/^1)+len CR - len ovlpart(CR/^1,CR)) by Th15
      .= len (CR|1) +len (CR/^1)+(len CR - len ovlpart(CR/^1,CR))
      .= len ((CR|1)^(CR/^1))+(len CR - len ovlpart(CR/^1,CR)) by FINSEQ_1:35
      .= len CR + (len CR - len ovlpart(CR/^1,CR)) by RFINSEQ:21;
    set i=1;
    set j=len CR +1-'len ovlpart(CR/^1,CR);
A11: len CR<len CR +1 by XREAL_1:31;
A12: len ovlpart(CR/^1,CR)<=len CR by Def2;
    then
A13: j=1+len CR -len ovlpart(CR/^1,CR) by A11,BINARITH:50,XXREAL_0:2
      .=1+(len CR -len ovlpart(CR/^1,CR))
      .=1+(len CR -'len ovlpart(CR/^1,CR)) by A12,BINARITH:50;
    then
A14: 1<=j by NAT_1:12;
A15: smid(f,1,1+len CR-'1)=(f/^(0+1-'1))|(len CR+1-'1) by BINARITH:39
      .=(f/^0)|len CR by A8,BINARITH:39
      .=f|len CR by FINSEQ_5:31
      .=CR by A4,FINSEQ_5:26;
    j+len CR-'1+1 =j+len CR-1+1 by A14,BINARITH:50,NAT_1:12
      .=j+len CR;
    then
A16: j+len CR-'1+1-'j =j+len CR -j by BINARITH:50,NAT_1:12
      .=len CR;
    1<= 1+(len CR -'len ovlpart(CR/^1,CR)) by NAT_1:12;
    then 1<= 1+(len CR -len ovlpart(CR/^1,CR)) by A9,BINARITH:50;
    then 1<= 1+len CR -len ovlpart(CR/^1,CR);
    then 1<=len CR +1-'len ovlpart(CR/^1,CR) by A9,BINARITH:50,NAT_1:12;
    then len CR +1-'len ovlpart(CR/^1,CR)-'1
    =len CR +1-'len ovlpart(CR/^1,CR)-1 by BINARITH:50;
    then len CR +1-'len ovlpart(CR/^1,CR)-'1
    =len CR+1-len ovlpart(CR/^1,CR) -1 by A9,BINARITH:50,NAT_1: 12
      .=len CR +1 -1-len ovlpart(CR/^1,CR)
      .=len CR -'len ovlpart(CR/^1,CR) by A12,BINARITH:50;
    then
A17: smid(f,j,j+len CR-'1) =CR|len CR by A5,A6,A7,A16,FINSEQ_5:40
      .=smid(f,1,1+len CR-'1) by A15,FINSEQ_1:79;
    len ovlpart(CR/^1,CR) <= len (CR/^1) by Th10;
    then len ovlpart(CR/^1,CR) <= len CR -'1 by JORDAN3:19;
    then
A18: len CR+1-len ovlpart(CR/^1,CR) >= 1+len CR -(len CR -'1) by REAL_2:106;
    now per cases;
      case len CR >=1;
        then 1+len CR -(len CR -'1)=1+len CR -(len CR -1) by BINARITH:50
          .=1+1;
        then 1< len CR +1-len ovlpart(CR/^1,CR) by A18,XXREAL_0:2;
        then
A19:    1<j by A11,A12,BINARITH:50,XXREAL_0:2;
        (len CR -'len ovlpart(CR/^1,CR))+len CR+1 -'1
        <= len CR + (len CR -' len ovlpart(CR/^1,CR)) by BINARITH:39;
        then 1+(len CR -'len ovlpart(CR/^1,CR))+len CR -'1
        <= len CR + (len CR - len ovlpart(CR/^1,CR)) by A12,BINARITH:50;
        then
A20:    j-'1 >=len CR by A2,A10,A13,A15,A17,A19,Def6;
A21:    j-'1=1+(len CR -'len ovlpart(CR/^1,CR))-1 by A13,BINARITH:50,NAT_1:12
          .= (len CR -'len ovlpart(CR/^1,CR));
A22:    len CR -'len ovlpart(CR/^1,CR)<=len CR by BINARITH:52;
        len CR -'len ovlpart(CR/^1,CR)=len CR -len ovlpart(CR/^1,CR)
        by A12,BINARITH:50;
        then len CR -len ovlpart(CR/^1,CR)=len CR by A20,A21,A22,XXREAL_0:1;
        hence len ovlpart(CR/^1,CR) =0;
      end;
      case len CR<1;
        then len CR<0+1;
        then
A23:    len CR<=0 by NAT_1:13;
        len ovlpart(CR/^1,CR)<= len CR by Def2;
        hence len ovlpart(CR/^1,CR) =0 by A23;
      end;
    end;
    hence len ovlpart(CR/^1,CR) =0;
  end;
  now
    assume
A24: len ovlpart(CR/^1,CR) =0;
    for f being FinSequence of D,i,j being Element of NAT
    st 1<=i & i<j & j+len CR-'1<=len f &
    smid(f,i,i+len CR-'1)=smid(f,j,j+len CR-'1) & smid(f,i,i+len CR-'1)=CR
    holds j-'i>=len CR
    proof
      let f be FinSequence of D,i,j be Element of NAT;
      assume
A25:  1<=i & i<j & j+len CR-'1<=len f &
      smid(f,i,i+len CR-'1)=smid(f,j,j+len CR-'1)& smid(f,i,i+len CR-'1)=CR;
      then
A26:  j-i>0 by XREAL_1:52;
      then
A27:  j-'i=j-i by BINARITH:def 3;
A28:  i+(j-'i)=j-i+i by A26,BINARITH:def 3
        .=j;
      now per cases;
        case len CR<=0;
          hence j-'i>=len CR;
        end;
        case
A29:      len CR>0;
          then
A30:      0+1<=len CR by NAT_1:13;
          then
A31:      len CR -'1=len CR-1 by BINARITH:50;
A32:      i+len CR-'1=i+len CR-1 by A30,BINARITH:50,NAT_1:12;
A33:      i<=i+(len CR -'1) by NAT_1:12;
          then
A34:      1<=i+len CR -'1 by A25,A31,A32,XXREAL_0:2;
          set k=j-'i;
A35:      0+1<=k by A26,A27,NAT_1:13;
          then
A36:      k-1=k-'1 by BINARITH:50;
A37:      i+(k-'1)=i+(k-1) by A35,BINARITH:50
            .=i+(j-i-1) by A26,
          BINARITH:def 3
            .=j-1;
          i+1<=j by A25,NAT_1:13;
          then
A38:      i+1-1<=j-1 by XREAL_1:11;
          then
A39:      j-'1=j-1 by BINARITH:def 3;
          j-i>0 by A25,XREAL_1:52;
          then j-'i>0 by BINARITH:def 3;
          then
A40:      j-'i>=0+1 by NAT_1:13;
A41:      j-'1<=j-'1+len CR by NAT_1:12;
          j<=j+len CR by NAT_1:12;
          then
A42:      i<j+len CR by A25,XXREAL_0:2;
          j-'1+len CR=j-1+len CR by A38,BINARITH:def 3
            .=j+len CR-1
            .=j+len CR-'1 by A25,A42,BINARITH:50,XXREAL_0:2;
          then
A43:      i+(k-'1)<=len f by A25,A37,A39,A41,XXREAL_0:2;
          now
            assume
A44:        j-'i<len CR;
            then k-1<len CR-1 by XREAL_1:11;
            then k-'1<len CR-1 by A40,BINARITH:50;
            then k-'1<len CR -'1 by A30,BINARITH:50;
            then
A45:        k-'1+1<=len CR -'1 by NAT_1:13;
A46:        k-k<len CR -k by A44,XREAL_1:11;
            then 0<len CR -'k by BINARITH:def 3;
            then
A47:        0+1<=len CR -'k by NAT_1:13;
A48:        len CR -'k=len CR -k by A46,BINARITH:def 3;
            1<len CR by A35,A44,XXREAL_0:2;
            then 1+1<=len CR by NAT_1:13;
            then
A49:        1+1-1<=len CR -1 by XREAL_1:11;
A50:        len CR-'1=len CR-1 by A35,A44,BINARITH:50,XXREAL_0:2;
            then
A51:        len CR -'k<= len CR -'1 by A35,A48,REAL_2:106;
            i<=i+(k-'1) by NAT_1:12;
            then
A52:        i<=len f by A43,XXREAL_0:2;
            j+len CR-'1=j+len CR-1 by A25,A42,BINARITH:50,XXREAL_0:2
              .=j+(len CR-1)
              .=j+(len CR-'1) by A30,BINARITH:50;
            then j<=j+len CR -'1 by NAT_1:12;
            then
A53:        j<=len f by A25,XXREAL_0:2;
            i+1<=j by A25,NAT_1:13;
            then i+1+len CR<=j+len CR by XREAL_1:9;
            then
A54:        i+1+len CR-1<=j+len CR-1 by XREAL_1:11;
A55:        1<j by A25,XXREAL_0:2;
A56:        j<j+len CR by A29,XREAL_1:31;
            then
A57:        1<j+len CR by A55,XXREAL_0:2;
A58:        j+len CR-'1=j+len CR-1 by A55,A56,BINARITH:50,XXREAL_0:2;
            then
A59:        i+1-1+len CR <=len f by A25,A54,XXREAL_0:2;
            i+len CR<=i+len CR+1 by NAT_1:12;
            then i+len CR -'1<=i+len CR by A32,XREAL_1:22;
            then
A60:        i+len CR-'1<=len f by A59,XXREAL_0:2;
            0< j+len CR -1 by A57,XREAL_1:52;
            then
A61:        0+1<= j+len CR-'1 by A58,NAT_1:13;
            j+1<=j+len CR by A56,NAT_1:13;
            then
A62:        j+1-1<=j+len CR-1 by XREAL_1:11;
A63:        len CR <=len CR +k by NAT_1:12;
            then
A64:        len CR -k<=len CR by XREAL_1:22;
A65:        len CR -'k<=len CR by A48,A63,XREAL_1:22;
A66:        len smid(CR,1,(len CR) -'k)
            = len mid(CR,1,(len CR) -'k) by A47,Th4;
A67:        len mid(CR,1,(len CR) -'k)
            = (len CR) -'k -'1+1 by A30,A47,A48,A64,JORDAN3:27
              .= (len CR) -'k -1+1 by A47,BINARITH:50
              .= (len CR) -'k;
A68:        len (CR/^1) -'(len CR-'k)+1
            =len CR-'1-'(len CR -'k)+1 by JORDAN3:19
              .=len CR-'1-(len CR-'k)+1 by A51,BINARITH:50
              .=len CR-1-(len CR-k)+1 by A35,A44,A48,BINARITH:50,XXREAL_0:2
              .=k;
A69:        len (CR/^1)=len CR -'1 by JORDAN3:19;
            then
A70:        smid(CR/^1,len (CR/^1) -'(len CR-'k)+1,len (CR/^1) )
            = mid(CR/^1,k,len CR -'1) by A36,A45,A68,Th4;
A71:        len mid(CR/^1,k,len CR -'1)=len CR-'1-'k+1
            by A35,A36,A45,A49,A50,A69,JORDAN3:27
              .=len CR-'1-k+1 by A36,A45,BINARITH:50
              .=len CR -1-k+1 by A35,A44,BINARITH:50,XXREAL_0:2
              .=len CR -'k by A46,BINARITH:def 3;
            for jj being Nat st 1<=jj & jj<=len CR -'k holds
            smid(CR,1,(len CR) -'k).jj
            =smid(CR/^1,len (CR/^1) -'(len CR-'k)+1,len (CR/^1)).jj
            proof
              let jj be Nat;
              assume
A72:          1<=jj & jj<=len CR-'k;
              then
A73:          jj+k<=len CR -'k+k by XREAL_1:9;
              then
A74:          jj+k-1<=len CR -1 by A48,XREAL_1:11;
              reconsider j1=jj as Element of NAT by ORDINAL1:def 13;
A75:          len mid(f,i,i+len CR-'1)=i+len CR-'1-'i+1
              by A25,A31,A32,A33,A34,A52,A60,JORDAN3:27
                .=i+len CR -1-i+1 by A31,A32,A33,BINARITH:50
                .=len CR;
              len CR-'k<=len CR by BINARITH:52;
              then
A76:          jj <= len CR by A72,XXREAL_0:2;
A77:          1<=jj+(k-'1) by A72,NAT_1:12;
A78:          jj+(k-'1)=jj+(k-1) by A35,BINARITH:50
                .=jj+k-1
                .=jj+k-'1 by A72,BINARITH:50,NAT_1:12;
A79:          1<=jj+k by A72,NAT_1:12;
              jj+k-'1<=len CR -1 by A72,A74,BINARITH:50,NAT_1:12;
              then jj+k-'1<=len CR -'1 by A30,BINARITH:50;
              then jj+k-'1 in Seg len (CR/^1) by A69,A77,A78;
              then
A80:          jj+k-'1 in dom (CR/^1) by FINSEQ_1:def 3;
A81:          smid(f,j,j+len CR-'1) =mid(f,j,j+len CR-'1) by A58,A62,Th4; thus
              smid(CR/^1,len (CR/^1) -'(len CR-'k)+1,len (CR/^1)).jj

=(CR/^1).(j1+k-'1) by A35,A36,A45,A49,A50,A69,A70,A71,A72,JORDAN3:27

.= smid(f,i,i+len CR-'1).(jj+k-'1+1) by A25,A30,A80,RFINSEQ:def 2
                .= mid(f,i,i+len CR-'1).(jj+k-'1+1) by A31,A32,A33,Th4
                .= mid(f,i,i+len CR-'1).(jj+k-1+1) by A72,BINARITH:50,NAT_1:12
                .=f.(i+(j1+k)-'1)
              by A25,A31,A32,A33,A34,A48,A52,A60,A73,A75,A79,JORDAN3:27
                .=f.(i+k+j1-'1)
                .=CR.jj by A25,A28,A53,A55,A58,A61,A62,A72,A76,A81,JORDAN3:27
                .=CR.(j1+1-'1) by BINARITH:39
                .= mid(CR,1,(len CR) -'k).j1
              by A30,A47,A48,A64,A67,A72,JORDAN3:27
                .= smid(CR,1,(len CR) -'k).jj by A47,Th4;
            end;
            then smid(CR,1,(len CR)-'k)
            =smid(CR/^1,len (CR/^1) -'(len CR-'k)+1,len (CR/^1))
            by A66,A67,A70,A71,FINSEQ_1:18;
            then (len CR)-'k<=len p by A65,Def2;
            hence contradiction by A24,A46,BINARITH:def 3;
          end;
          hence j-'i>=len CR;
        end;
      end;
      hence j-'i>=len CR;
    end;
    hence CR separates_uniquely by Def6;
  end;
  hence CR separates_uniquely iff len ovlpart(CR/^1,CR) =0 by A1;
end;

definition
  let D be non empty set,f,g be FinSequence of D,n be Element of NAT;
  pred g is_substring_of f,n means
  :Def7:
  len g>0 implies
  ex i being Element of NAT st n<=i & i<=len f & mid(f,i,(i-'1)+len g)=g;
  correctness;
end;

theorem
  for D being non empty set,f,g being FinSequence of D,
  n,m being Element of NAT
  st m>=n & g is_substring_of f,m holds g is_substring_of f,n
proof
  let D be non empty set,f,g be FinSequence of D,n,m be Element of NAT;
  assume
A1: m>=n & g is_substring_of f,m;
  now per cases;
    case len g>0;
      then consider i being Element of NAT such that
A2:   m<=i & i<=len f & mid(f,i,(i-'1)+len g)=g by A1,Def7;
      n<=i by A1,A2,XXREAL_0:2;
      hence g is_substring_of f,n by A2,Def7;
    end;
    case len g<=0;
      hence g is_substring_of f,n by Def7;
    end;
  end;
  hence g is_substring_of f,n;
end;

theorem Th19:
  for D being non empty set,f being FinSequence of D
  st 1<= len f holds f is_substring_of f,1
proof
  let D be non empty set,f be FinSequence of D;
  assume
A1: 1<= len f;
  1-'1+len f =0+len f by NAT_2:10
    .=len f;
  then 1<=1 & 1<=len f & mid(f,1,(1-'1)+len f)=f by A1,JORDAN3:29;
  hence f is_substring_of f,1 by Def7;
end;

theorem Th20:
  for D being non empty set,f,g being FinSequence of D
  st g is_substring_of f,0 holds g is_substring_of f,1
proof
  let D be non empty set,f,g be FinSequence of D;
  assume
A1: g is_substring_of f,0;
  now per cases;
    case
A2:   len g>0;
      then consider i being Element of NAT such that
A3:   0<=i & i<=len f & mid(f,i,(i-'1)+len g)=g by A1,Def7;
A4:   len g>=0+1 by A2,NAT_1:13;
      now per cases;
        case
A5:       i=0;
          0-1<0;
          then
A6:       i-'1=0 by A5,BINARITH:def 3;
          then
A7:       (f/^(0-'1))|(len g-'0+1)=g by A3,A5,JORDAN3:def 1;
          len g -'0=len g -0 by BINARITH:def 3
            .=len g;
          then
A8:       f|(len g+1)=g by A5,A6,A7,FINSEQ_5:31;
          now per cases;
            case len g+1>=len f;
              then f=g by A8,FINSEQ_1:79;
              hence g is_substring_of f,1 by A4,Th19;
            end;
            case
A9:           len g+1<len f;
              dom ( f|Seg(len g +1))=dom f /\ Seg(len g+1) by RELAT_1:90
                .= Seg(len f) /\ Seg(len g+1) by FINSEQ_1:def 3
                .=Seg (len g+1) by A9,FINSEQ_1:9;
              then len g=len g+1 by A8,FINSEQ_1:def 3;
              hence contradiction;
            end;
          end;
          hence g is_substring_of f,1;
        end;
        case i<>0;
          then i>0;
          then i>=0+1 by NAT_1:13;
          hence g is_substring_of f,1 by A3,Def7;
        end;
      end;
      hence g is_substring_of f,1;
    end;
    case len g<=0;
      hence g is_substring_of f,1 by Def7;
    end;
  end;
  hence g is_substring_of f,1;
end;

notation
  let D be non empty set,g,f be FinSequence of D;
  synonym g is_preposition_of f for g c= f;
end;

definition
  let D be non empty set,g,f be FinSequence of D;
  redefine pred g c= f means
  :Def8:
  len g>0 implies 1<=len f & mid(f,1,len g)=g;
  compatibility
  proof
    thus g c= f implies (len g>0 implies 1<=len f & mid(f,1,len g)=g)
    proof
      assume that
A1:   g c= f and
A2:   len g>0;
A3:   0+1 <= len g by A2,NAT_1:13;
      len g <= len f by A1,FINSEQ_1:84;
      hence 1<=len f by A3,XXREAL_0:2;
      thus mid(f,1,len g) = (f/^(1-'1))|(len g-'1+1) by A3,JORDAN3:def 1
        .= (f/^(1-'1))|len g by A3,BINARITH:53
        .= (f/^0)|len g by BINARITH:51
        .= f|len g by FINSEQ_5:31
        .= g by A1,FINSEQ_3:122;
    end;
    assume
A4: len g>0 implies 1<=len f & mid(f,1,len g)=g;
    per cases by A4;
    suppose len g <= 0;
      then len g = 0;
      then g = {} by FINSEQ_1:25;
      hence g c= f by XBOOLE_1:2;
    end;
    suppose that
A5:   len g > 0 and
A6:   mid(f,1,len g)=g;
      0+1 <= len g by A5,NAT_1:13;
      then g = f|len g by A6,JORDAN3:25;
      hence g c= f by RELAT_1:88;
    end;
  end;
end;

theorem
  for D being non empty set,f,g
  being FinSequence of D st len g>0 & g is_preposition_of f holds g.1=f.1
proof
  let D be non empty set,f,g be FinSequence of D;
  assume
A1: len g>0 & g is_preposition_of f;
  then
A2: 1<=len f & mid(f,1,len g)=g by Def8;
A3: len g <=len f by A1,FINSEQ_1:84;
  0+1<=len g by A1,NAT_1:13;
  hence g.1=f.1 by A2,A3,JORDAN3:32;
end;

definition
  let D be non empty set,f,g be FinSequence of D;
  pred g is_postposition_of f means
  :Def9:
  Rev g is_preposition_of Rev f;
  correctness;
end;

theorem Th22:
  for D being non empty set,f,g being FinSequence of D
  st len g=0 holds g is_postposition_of f
proof
  let D be non empty set,f,g be FinSequence of D;
  assume
A1: len g=0;
  len (Rev g)=len g by FINSEQ_5:def 3;
  then Rev g is_preposition_of Rev f by A1,Def8;
  hence g is_postposition_of f by Def9;
end;

theorem Th23:
  for D being non empty set,f,g being FinSequence of D
  st g is_postposition_of f holds len g <=len f
proof
  let D be non empty set,f,g be FinSequence of D;
  assume g is_postposition_of f;
  then
A1: Rev g is_preposition_of Rev f by Def9;
A2: len (Rev g)=len g by FINSEQ_5:def 3;
  len (Rev f)=len f by FINSEQ_5:def 3;
  hence len g <=len f by A1,A2,FINSEQ_1:84;
end;

theorem
  for D being non empty set,f,g being FinSequence of D
  st g is_postposition_of f holds
  len g>0 implies len g<=len f & mid(f,(len f+1) -' len g,len f)=g
proof
  let D be non empty set,f,g be FinSequence of D;
  assume
A1: g is_postposition_of f;
  then
A2: Rev g is_preposition_of Rev f by Def9;
  then
A3: len (Rev g)>0 implies 1<=len (Rev f) & mid(Rev f,1,len (Rev g))=Rev g
  by Def8;
A4: len (Rev g)=len g by FINSEQ_5:def 3;
A5: len (Rev f)=len f by FINSEQ_5:def 3;
  now
    assume
A6: len g>0;
    then
A7: 1<=len f & mid(Rev f,1,len g)=Rev g by A2,A4,A5,Def8;
A8: len f -1>=0 by A3,A5,A6,FINSEQ_5:def 3,XREAL_1:50;
A9: len g<=len f by A1,Th23;
A10: len f - len g>=0 by A1,Th23,XREAL_1:50;
    len f<len f+1 by XREAL_1:31;
    then len g<len f+1 by A9,XXREAL_0:2;
    then
A11: len f+1-len g>0 by XREAL_1:52;
A12: 0+1<=len g by A6,NAT_1:13;
A13: g=Rev Rev g by FINSEQ_6:29
      .=mid(Rev (Rev f),len f-'len g+1,len f-'1+1)
    by A5,A7,A9,A12,JORDAN3:22
      .=mid(f,len f -'len g +1,len f-'1+1) by FINSEQ_6:29;
A14: len f -'len g+1=len f-len g+1 by A10,BINARITH:def 3
      .=(len f+1)-'len g by A11,BINARITH:def 3;
    len f-'1+1=len f-1+1 by A8,BINARITH:def 3
      .=len f;
    hence len g<=len f & mid(f,(len f+1) -' len g,len f)=g by A1,A13,A14,Th23;
  end;
  hence len g>0 implies len g<=len f & mid(f,(len f+1) -' len g,len f)=g;
end;

theorem
  for D being non empty set,f,g being FinSequence of D
  st (len g>0 implies len g<=len f & mid(f,(len f+1) -' len g,len f)=g)
  holds g is_postposition_of f
proof
  let D be non empty set,f,g be FinSequence of D;
  assume
A1: (len g>0 implies len g<=len f & mid(f,(len f+1) -' len g,len f)=g);
A2: len (Rev f)=len f by FINSEQ_5:def 3;
  now per cases;
    case
A3:   len g>0;
      then
A4:   0+1<=len g by NAT_1:13;
      then
A5:   len g-1>=0 by XREAL_1:50;
      len f<len f+1 by XREAL_1:31;
      then len g<len f+1 by A1,XXREAL_0:2;
      then
A6:   len f+1-len g>0 by XREAL_1:52;
      then (len f+1)-'len g =len f+1-len g by BINARITH:def 3;
      then
A7:   0+1<= (len f+1)-'len g by A6,NAT_1:13;
A8:   (len f+1)-' len g=len f-(len g-1) by A6,BINARITH:def 3;
      len f+0<=len f+(len g-1) by A5,XREAL_1:9;
      then
A9:   len f-(len g -1)<=len f by XREAL_1:22;
A10:  1<=len f & len f<=len f by A1,A4,XXREAL_0:2;
A11:  len f-'len f+1=len f-len f+1 by BINARITH:def 3
        .=1;
      len f<len f+1 by XREAL_1:31;
      then len g<=len f+1 by A1,XXREAL_0:2;
      then len f+1-len g>=0 by XREAL_1:50;
      then
A12:  len f -((len f+1)-'len g)=len f-(len f+1-len g) by BINARITH: def 3
        .=len g -1;
      then
A13:  len f-'((len f+1)-'len g)+1
      =len f -((len f+1)-'len g)+1 by A5,BINARITH:def 3;
      Rev g =mid((Rev f),len f-'len f+1,len f-'((len f+1)-'len g)+1)
      by A1,A3,A7,A8,A9,A10,JORDAN3:22
        .=mid(Rev f,1,len (Rev g)) by A11,A12,A13,FINSEQ_5:def 3;
      then 1<=len (Rev f) & mid(Rev f,1,len (Rev g))= Rev g
      by A1,A2,A4,XXREAL_0:2;
      then Rev g is_preposition_of Rev f by Def8;
      hence g is_postposition_of f by Def9;
    end;
    case len g<=0;
      then len g=0;
      hence g is_postposition_of f by Th22;
    end;
  end;
  hence g is_postposition_of f;
end;

theorem
  for D being non empty set,f,g being FinSequence of D
  st 1<=len f & g is_preposition_of f holds g is_substring_of f,1
proof
  let D be non empty set,f,g be FinSequence of D;
  assume
A1: 1<=len f & g is_preposition_of f;
  now per cases;
    case
A2:   len g>0;
      mid(f,1,(1-'1)+len g)=mid(f,1,0+len g) by NAT_2:10
        .= g by A1,A2,Def8;
      hence g is_substring_of f,1 by A1,Def7;
    end;
    case len g<=0;
      hence g is_substring_of f,1 by Def7;
    end;
  end;
  hence g is_substring_of f,1;
end;

theorem Th27:
  for D being non empty set,f,g being FinSequence of D, n being Element of NAT

st not g is_substring_of f,n holds for i being Element of NAT st n <= i & 0 < i
  holds mid(f,i,(i-'1)+len g) <> g
proof
  let D be non empty set,f,g be FinSequence of D,n be Element of NAT;
  assume
A1: not g is_substring_of f,n;
  now
    let i be Element of NAT;
    assume
A2: n <= i & 0 < i;
    now per cases;
      case i<=len f;
        hence mid(f,i,(i-'1)+len g) <> g by A1,A2,Def7;
      end;
      case
A3:     i>len f;
        now per cases;
          case
A4:         i<=(i-'1)+len g;
            then
A5:         mid(f,i,(i-'1)+len g)=(f/^(i-'1))|((i-'1)+len g-'i +1)
            by JORDAN3:def 1;
A6:         now per cases;
              case
A7:             i-'1<= len f;
                i>=len f +1 by A3,NAT_1:13;
                then
A8:             i-1>= len f +1-1 by XREAL_1:11;
                0+1<=i by A2,NAT_1:13;
                then 0<=i-1 by XREAL_1:50;
                then i-'1=i-1 by BINARITH:def 3;
                then
A9:             i-'1=len f by A7,A8,XXREAL_0:1;
                len (f/^(i-'1))=len f -(i-'1) by A7,RFINSEQ:def 2;
                hence len (f/^(i-'1)) =0 by A9;
              end;
              case i-'1>len f;
                then f/^(i-'1)=<*>D by RFINSEQ:def 2;
                hence len (f/^(i-'1)) =0 by FINSEQ_1:25;
              end;
            end;
            then f/^(i-'1)=<*>D by FINSEQ_1:25;
            then
A10:        (f/^(i-'1))|((i-'1)+len g-'i+1)=<*>D by A6, FINSEQ_1:79;
            now
              assume
A11:          mid(f,i,(i-'1)+len g)=g;
              0+1<=i by A2,NAT_1:13;
              then
A12:          0<=i-1 by XREAL_1:50;
              i<i+1 by XREAL_1:31;
              then i-1<i+1-1 by XREAL_1:11;
              hence contradiction by A4,A5,A6,A10,A11,A12,BINARITH:def 3;
            end;
            hence mid(f,i,(i-'1)+len g)<>g;
          end;
          case
A13:        i>(i-'1)+len g;
            now
              assume len g>0;
              then len g >=0+1 by NAT_1:13;
              then
A14:          (i-'1)+len g>=(i-'1)+1 by XREAL_1:9;
              0+1<=i by A2,NAT_1:13;
              then 0<=i-1 by XREAL_1:50;
              then i-'1=i-1 by BINARITH:def 3;
              hence contradiction by A13,A14;
            end;
            hence contradiction by A1,Def7;
          end;
        end;
        hence mid(f,i,(i-'1)+len g)<>g;
      end;
    end;
    hence mid(f,i,(i-'1)+len g) <> g;
  end;
  hence thesis;
end;

definition
  let D be non empty set,f,g be FinSequence of D,n be Element of NAT;
  func instr(n,f,g) -> Element of NAT means
  :Def10:
  (it <> 0 implies n <= it & g is_preposition_of f/^(it-'1) &
  for j being Element of NAT st j >= n & j > 0
  & (g is_preposition_of f/^(j-'1)) holds j >= it)
  & (it=0 implies not(g is_substring_of f,n));
  existence
  proof
A1: 1-'1=1-1 by BINARITH:def 3;
    now per cases;
      case
A2:     g is_substring_of f,n;
        now per cases;
          case
A3:         len g>0;
            then consider i2 being Element of NAT such that
A4:         n<=i2 & i2 <=len f & mid(f,i2,(i2-'1)+len g)=g by A2,Def7;
A5:         0+1<=len g by A3,NAT_1:13;
            now per cases;
              case
A6:             n>0;
                defpred P[Nat] means n <= $1 &
                $1 <=len f & mid(f,$1,($1-'1)+len g)=g;
A7:             ex i being Nat st P[i] by A4;
                ex k being Nat st P[k] & for m being Nat st P[m]
                holds m >= k from NAT_1:sch 5(A7);
                then consider k0 being Nat such that
A8:             n <= k0 & k0<=len f & mid(f,k0,(k0-'1)+len g)=g &
                for m being Nat st n <= m & m<=len f & mid(f,m,(m-'1)+len g)=g
                holds m >= k0;
                reconsider k0 as Element of NAT by ORDINAL1:def 13;
                0+1<=k0 by A6,A8,NAT_1:13;
                then k0-1>=0 by XREAL_1:50;
                then
A9:             k0-'1=k0-1 by BINARITH:def 3;
                k0<k0+1 by XREAL_1:31;
                then k0-1<k0+1-1 by XREAL_1:11;
                then k0-'1<len f by A8,A9,XXREAL_0:2;
                then
A10:            len (f/^(k0-'1))=len f -(k0-'1) by RFINSEQ :def 2;
                len f -k0>=0 by A8,XREAL_1:50;
                then
A11:            len f -k0 +1 >=0+1 by XREAL_1:9;
A12:            1-'1=1-1 by BINARITH:def 3;
A13:            0+1<=len g by A3,NAT_1:13;
                then
A14:            k0-'1+1<=k0-'1 + len g by XREAL_1:9;
A15:            len g-1>=0 by A13,XREAL_1:50;
                then -1+len g +k0-k0>=0;
                then
A16:            ((k0-'1)+len g)-'k0+1 =len g-1+1 by A9, BINARITH:def 3
                  .=len g-'1+ 1 by A15,BINARITH:def 3;
                mid(f/^(k0-'1),1,len g)=((f/^(k0-'1))/^(1-'1))|(len g-'1+1)
                by A5,JORDAN3:def 1
                  .=(f/^(k0-'1))|(((k0-'1)+len g)-'k0+1) by A12,A16,FINSEQ_5:31
                  .=mid(f,k0,(k0-'1)+len g) by A9,A14,JORDAN3:def 1;
                then
A17:            g is_preposition_of f/^(k0-'1) by A8,A9, A10,A11,Def8;
                for j being Element of NAT st j >= n & j > 0 &
                (g is_preposition_of f/^(j-'1)) holds j >= k0
                proof
                  let j be Element of NAT;
                  assume
A18:              j >= n & j > 0 & (g is_preposition_of f/^(j-'1));
                  then
A19:              1<=len (f/^(j-'1)) & mid(f/^(j-'1),1, len g)=g by A3,Def8;
                  now per cases;
                    case
A20:                  j<=len f;
                      0+1<=j by A18,NAT_1:13;
                      then j-1>=0 by XREAL_1:50;
                      then
A21:                  j-'1=j-1 by BINARITH:def 3;
                      -1+len g +j-j>=0 by A15;
                      then
A22:                  ((j-'1)+len g)-'j+1 =len g-1+1 by A21,BINARITH:def 3
                        .=len g-'1+1 by A15,BINARITH:def 3;
A23:                  j-'1+1<=j-'1 + len g by A13,XREAL_1:9;
                      mid(f/^(j-'1),1,len g)=((f/^(j-'1))/^(1-'1))|(len g-'1+1
                      ) by A5,JORDAN3:def 1

.=(f/^(j-'1))|(((j-'1)+len g)-'j+1) by A12,A22,FINSEQ_5:31
                        .=mid(f,j,(j-'1)+len g) by A21,A23,JORDAN3:def 1;
                      hence j>=k0 by A8,A18,A19,A20;
                    end;
                    case j>len f;
                      hence j>=k0 by A8,XXREAL_0:2;
                    end;
                  end;
                  hence thesis;
                end;
                hence ex k being Element of NAT st (k <>0
                implies n<=k & g is_preposition_of f/^(k-'1) &
                for j being Element of NAT st j >= n & j > 0 &
                (g is_preposition_of f/^(j-'1)) holds j >= k)
                & (k=0 implies not(g is_substring_of f,n)) by A6,A8,A17;
              end;
              case
A24:            n=0;
                then
A25:            g is_substring_of f,1 by A2,Th20;
                reconsider n2=1 as Element of NAT;
                consider i2 being Element of NAT such that
A26:            n2<=i2 & i2 <=len f & mid(f,i2,(i2-'1)+len g)=g by A3,A25,Def7;
                defpred P[Nat] means n2 <= $1 &
                $1 <=len f & mid(f,$1,($1-'1)+len g)=g;
A27:            ex i being Nat st P[i] by A26;
                ex k being Nat st P[k] & for m being Nat st P[m]
                holds m >= k from NAT_1:sch 5(A27);
                then consider k0 being Nat such that
A28:            n2 <= k0 & k0<=len f & mid(f,k0,(k0-'1)+len g)=g &
                for m being Nat
                st n2 <= m & m<=len f & mid(f,m,(m-'1)+len g)=g holds m >= k0;
                reconsider k0 as Element of NAT by ORDINAL1:def 13;
                k0-1>=0 by A28,XREAL_1:50;
                then
A29:            k0-'1=k0-1 by BINARITH:def 3;
                k0<k0+1 by XREAL_1:31;
                then k0-1<k0+1-1 by XREAL_1:11;
                then k0-'1<len f by A28,A29,XXREAL_0:2;
                then
A30:            len (f/^(k0-'1))=len f -(k0-'1) by RFINSEQ :def 2;
                len f -k0>=0 by A28,XREAL_1:50;
                then
A31:            len f -k0 +1 >=0+1 by XREAL_1:9;
A32:            0+1<=len g by A3,NAT_1:13;
                then
A33:            k0-'1+1<=k0-'1 + len g by XREAL_1:9;
A34:            len g-1>=0 by A32,XREAL_1:50;
                then -1+len g +k0-k0>=0;
                then
A35:            ((k0-'1)+len g)-'k0+1 =len g-1+1 by A29, BINARITH:def 3
                  .=len g-'1 +1 by A34,BINARITH:def 3;
                mid(f/^(k0-'1),1,len g)=((f/^(k0-'1))/^(1-'1))|(len g-'1+1)
                by A5,JORDAN3:def 1
                  .=(f/^(k0-'1))|(((k0-'1)+len g)-'k0+1) by A1,A35,FINSEQ_5:31
                  .=mid(f,k0,(k0-'1)+len g) by A29,A33,JORDAN3:def 1;
                then
A36:            g is_preposition_of f/^(k0-'1) by A28,A29, A30,A31,Def8;
A37:            for j being Element of NAT st j >= n2 & j > 0 &
                (g is_preposition_of f/^(j-'1)) holds j >= k0
                proof
                  let j be Element of NAT;
                  assume
A38:              j >= n2 & j > 0 & (g is_preposition_of f/^(j-'1));
                  then
A39:              1<=len (f/^(j-'1)) & mid(f/^(j-'1),1, len g)=g by A3,Def8;
                  now per cases;
                    case
A40:                  j<=len f;
                      j-1>=0 by A38,XREAL_1:50;
                      then
A41:                  j-'1=j-1 by BINARITH:def 3;
                      -1+len g +j-j>=0 by A34;
                      then
A42:                  ((j-'1)+len g)-'j+1 =len g-1+1 by A41,BINARITH:def 3
                        .=len g-'1+1 by A34,BINARITH:def 3;
A43:                  j-'1+1<=j-'1 + len g by A32,XREAL_1:9;
                      mid(f/^(j-'1),1,len g)=((f/^(j-'1))/^(1-'1))|(len g-'1+1
                      ) by A5,JORDAN3:def 1

.=(f/^(j-'1))|(((j-'1)+len g)-'j+1) by A1,A42,FINSEQ_5:31
                        .=mid(f,j,(j-'1)+len g) by A41,A43,JORDAN3:def 1;
                      hence j>=k0 by A28,A38,A39,A40;
                    end;
                    case j>len f;
                      hence j>=k0 by A28,XXREAL_0:2;
                    end;
                  end;
                  hence thesis;
                end;
                for j being Element of NAT st j >= n & j > 0 &
                (g is_preposition_of f/^(j-'1)) holds j >= k0
                proof
                  let j be Element of NAT;
                  assume
A44:              j >= n & j > 0 & (g is_preposition_of f/^(j-'1));
                  then j>=0+n2 by NAT_1:13;
                  hence j >= k0 by A37,A44;
                end;
                hence ex k being Element of NAT st (k <>0
                implies n<=k & g is_preposition_of f/^(k-'1) &
                for j being Element of NAT st j >= n & j > 0 &
                (g is_preposition_of f/^(j-'1)) holds j >= k)
                & (k=0 implies not(g is_substring_of f,n)) by A24,A28,A36;
              end;
            end;
            hence ex k being Element of NAT st (k <>0
            implies n<=k & g is_preposition_of f/^(k-'1) &
            for j being Element of NAT st j >= n & j > 0 &
            (g is_preposition_of f/^(j-'1)) holds j >= k)
            & (k=0 implies not(g is_substring_of f,n));
          end;
          case
A45:        len g<=0;
            reconsider nn=max(n,1) as Element of NAT by XXREAL_0:16;
A46:        nn>=n by XXREAL_0:25;
A47:        nn>=0+1 by XXREAL_0:25;
A48:        g is_preposition_of f/^(nn-'1) by A45,Def8;
            for j being Element of NAT st j >= n & j > 0 &
            (g is_preposition_of f/^(j-'1)) holds j >= nn
            proof
              let j be Element of NAT;
              assume
A49:          j >= n & j > 0 & (g is_preposition_of f/^(j-'1));
              then j>=0+1 by NAT_1:13;
              hence j >= nn by A49,SQUARE_1:50;
            end;
            hence ex k being Element of NAT st (k <>0
            implies n<=k & g is_preposition_of f/^(k-'1) &
            for j being Element of NAT st j >= n & j > 0 &
            (g is_preposition_of f/^(j-'1)) holds j >= k)
            & (k=0 implies not(g is_substring_of f,n)) by A46,A47,A48;
          end;
        end;
        hence ex k being Element of NAT st (k <>0
        implies n<=k & g is_preposition_of f/^(k-'1) &
        for j being Element of NAT st j >= n & j > 0 &
        (g is_preposition_of f/^(j-'1)) holds j >= k)
        & (k=0 implies not(g is_substring_of f,n));
      end;
      case not(g is_substring_of f,n);
        hence ex k being Element of NAT st
        (k <> 0 implies n<=k & g is_preposition_of f/^(k-'1) &
        for j being Element of NAT
        st j >= n & j>0 & (g is_preposition_of f/^(j-'1)) holds j >= k)
        & (k = 0 implies not(g is_substring_of f,n));
      end;
    end;
    hence ex k being Element of NAT st
    (k <> 0 implies n <= k & g is_preposition_of f/^(k-'1) &
    for j being Element of NAT
    st j >= n & j > 0 & (g is_preposition_of f/^(j-'1)) holds j >= k)
    & ( k= 0 implies not(g is_substring_of f,n));
  end;
  uniqueness
  proof
A50: 1-'1=1-1 by BINARITH:def 3;
    thus for k1,k2 being Element of NAT st
    ((k1 <> 0 implies n <= k1 & g is_preposition_of f/^(k1-'1) &
    for j being Element of NAT
    st j >= n & j > 0 & (g is_preposition_of f/^(j-'1)) holds j>=k1)
    & (k1 = 0 implies not(g is_substring_of f,n)))
    & ((k2 <> 0 implies n <= k2 & g is_preposition_of f/^(k2-'1) &
    for j being Element of NAT
    st j >= n & j > 0 & (g is_preposition_of f/^(j-'1)) holds j >= k2)
    & (k2 = 0 implies not(g is_substring_of f,n))) holds k1 = k2
    proof
      let k1,k2 be Element of NAT;
      assume
A51:  ((k1 <> 0 implies n <= k1 & g is_preposition_of f/^(k1-'1) &
      for j being Element of NAT
      st j >= n & j > 0 & (g is_preposition_of f/^(j-'1)) holds j >= k1)
      & (k1 = 0 implies not(g is_substring_of f,n)))
      & ((k2 <> 0 implies n <= k2 & g is_preposition_of f/^(k2-'1) &
      for j being Element of NAT
      st j >= n & j > 0 & (g is_preposition_of f/^(j-'1)) holds j >= k2)
      & (k2 = 0 implies not(g is_substring_of f,n)));
      now per cases;
        case len g>0;
          then
A52:      0+1<=len g by NAT_1:13;
          then
A53:      len g-1>=0 by XREAL_1:50;
          now per cases;
            case
A54:          k1 <> 0 & k2 <> 0;
              then
A55:          k2 >= k1 by A51;
              k1 >= k2 by A51,A54;
              hence k1 = k2 by A55,XXREAL_0:1;
            end;
            case
A56:          k1 <> 0 & k2 = 0;
              then
A57:          len g>0 by A51,Def7;
              for i being Element of NAT st n <= i & 0 < i holds
              not g is_preposition_of f/^(i-'1)
              proof
                let i be Element of NAT;
                assume
A58:            n <= i & 0 < i;
                then 0+1<=i by NAT_1:13;
                then i-1>=0 by XREAL_1:50;
                then
A59:            i-'1=i-1 by BINARITH:def 3;
                -1+len g +i-i>=0 by A53;
                then
A60:            ((i-'1)+len g)-'i+1 =len g-1+1 by A59, BINARITH:def 3
                  .=len g-'1+1 by A53,BINARITH:def 3;
A61:            i-'1+1<=i-'1 + len g by A52,XREAL_1:9;
                mid(f/^(i-'1),1,len g)=((f/^(i-'1))/^(1-'1))|(len g-'1+1)
                by A52,JORDAN3:def 1
                  .=(f/^(i-'1))|(((i-'1)+len g)-'i+1) by A50,A60,FINSEQ_5:31
                  .=mid(f,i,(i-'1)+len g) by A59,A61,JORDAN3:def 1;

then not(1<=len (f/^(i-'1)) & mid(f/^(i-'1),1,len g)=g) by A51,A56, A58,Th27;
                hence not g is_preposition_of f/^(i-'1) by A57,Def8;
              end;
              hence contradiction by A51,A56;
            end;
            case
A62:          k1 = 0 & k2 <> 0;
              then
A63:          len g>0 by A51,Def7;
              for i being Element of NAT st n <= i & 0 < i holds
              not g is_preposition_of f/^(i-'1)
              proof
                let i be Element of NAT;
                assume
A64:            n <= i & 0 < i;
                then 0+1<=i by NAT_1:13;
                then i-1>=0 by XREAL_1:50;
                then
A65:            i-'1=i-1 by BINARITH:def 3;
                -1+len g +i-i>=0 by A53;
                then
A66:            ((i-'1)+len g)-'i+1 =len g-1+1 by A65, BINARITH:def 3
                  .=len g-'1+1 by A53,BINARITH:def 3;
A67:            i-'1+1<=i-'1 + len g by A52,XREAL_1:9;
                mid(f/^(i-'1),1,len g)=((f/^(i-'1))/^(1-'1))|(len g-'1+1)
                by A52,JORDAN3:def 1
                  .=(f/^(i-'1))|(((i-'1)+len g)-'i+1) by A50,A66,FINSEQ_5:31
                  .=mid(f,i,(i-'1)+len g) by A65,A67,JORDAN3:def 1;

then not(1<=len (f/^(i-'1)) & mid(f/^(i-'1),1,len g)=g) by A51,A62, A64,Th27;
                hence not g is_preposition_of f/^(i-'1) by A63,Def8;
              end;
              hence contradiction by A51,A62;
            end;
            case k1 = 0 & k2 = 0;
              hence k1 = k2;
            end;
          end;
          hence k1 = k2;
        end;
        case
A68:      len g<=0;
          now per cases;
            case
A69:          k1 <> 0 & k2 <> 0;
              then
A70:          k2 >= k1 by A51;
              k1 >= k2 by A51,A69;
              hence k1 = k2 by A70,XXREAL_0:1;
            end;
            case k1 <> 0 & k2 = 0;
              hence contradiction by A51,A68,Def7;
            end;
            case k1=0 & k2 <>0;
              hence contradiction by A51,A68,Def7;
            end;
            case k1=0 & k2=0;
              hence contradiction by A51,A68,Def7;
            end;
          end;
          hence k1 = k2;
        end;
      end;
      hence k1 = k2;
    end;
  end;
end;

definition
  let D be non empty set,f,CR be FinSequence of D;
  func addcr(f,CR) -> FinSequence of D equals

  ovlcon(f,CR);
  correctness;
end;

definition
  let D be non empty set, r,CR be FinSequence of D;
  pred r is_terminated_by CR means
  :Def12:
  (len CR >0 implies len r>=len CR & instr(1,r,CR) = len r + 1 -'len CR);
  correctness;
end;

theorem
  for D being non empty set,f being FinSequence of D holds
  f is_terminated_by f
proof
  let D be non empty set,f be FinSequence of D;
A1: len f + 1 -'len f=len f+1-len f by BINARITH:def 3;
  1-'1=0+1-'1
    .=0 by BINARITH:39;
  then
A2: f/^(1-'1)=f by FINSEQ_5:31;
  for j being Element of NAT st j >= 1 & j > 0
  & (f is_preposition_of f/^(j-'1)) holds j >= 1;
  then instr(1,f,f) = len f + 1 -'len f by A1,A2,Def10;
  hence f is_terminated_by f by Def12;
end;

