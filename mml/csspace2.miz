:: Hilbert Space of Complex Sequences
::  by Noboru Endou
::
:: Received February 24, 2004
:: Copyright (c) 2004 Association of Mizar Users

environ

 vocabularies PRE_TOPC, NORMSP_1, RLVECT_1, FUNCT_1, ARYTM_1, ARYTM_3, RELAT_1,
      ABSVALUE, ORDINAL2, SQUARE_1, SEQ_1, SEQ_2, SERIES_1, PROB_2, BHSP_1,
      BHSP_3, SUPINF_2, RSSPACE, COMSEQ_1, COMPLEX1, CSSPACE, CFUNCT_1,
      XCMPLX_0, FUNCOP_1, REALSET1, NAT_1;
 notations TARSKI, SUBSET_1, ZFMISC_1, NUMBERS, STRUCT_0, XCMPLX_0, XXREAL_0,
      COMPLEX1, REAL_1, NAT_1, RELAT_1, DOMAIN_1, PARTFUN1, FUNCT_1, FUNCT_2,
      BINOP_1, FUNCOP_1, REALSET1, PRE_TOPC, RLVECT_1, SQUARE_1, SEQ_1, SEQ_2,
      SERIES_1, COMSEQ_1, CFUNCT_1, COMSEQ_2, COMSEQ_3, CLVECT_1, CLVECT_2,
      CSSPACE;
 constructors PARTFUN1, BINOP_1, FUNCOP_1, REAL_1, SQUARE_1, NAT_1, SEQ_2,
      COMSEQ_1, COMSEQ_2, SERIES_1, COMSEQ_3, REALSET1, CLVECT_2;
 registrations XBOOLE_0, SUBSET_1, ORDINAL1, RELSET_1, FUNCT_2, NUMBERS,
      XCMPLX_0, XXREAL_0, MEMBERED, COMPLEX1, COMSEQ_1, COMSEQ_2, COMSEQ_3,
      REALSET1, STRUCT_0, CSSPACE;
 requirements SUBSET, REAL, BOOLE, NUMERALS, ARITHM;
 definitions SQUARE_1, REALSET1, BINOP_1, RLVECT_1, STRUCT_0;
 theorems RELAT_1, SQUARE_1, ABSVALUE, ZFMISC_1, SEQ_1, SEQ_2, SEQM_3,
      SERIES_1, INT_1, FUNCT_1, NAT_1, FUNCT_2, RLVECT_1, SEQ_4, RSSPACE,
      XCMPLX_1, CSSPACE, CLVECT_1, COMSEQ_1, COMSEQ_2, COMSEQ_3, COMPLEX1,
      CLVECT_2, REAL_2, RSSPACE2, FUNCOP_1, XREAL_1, XXREAL_0;
 schemes NAT_1, SEQ_1, FUNCT_2, COMSEQ_1;

begin :: Hilbert space of complex sequences

Lm1:
for seq be Complex_Sequence holds seq = (seq*')*'
proof
   let seq be Complex_Sequence;
    for x be set st x in NAT holds seq.x = (seq*')*'.x
   proof
     let x be set;
     assume x in NAT;
     then reconsider x as Element of NAT;
      (seq*')*'.x = (seq*'.x)*' by COMSEQ_2:def 2
       .= ((seq.x)*')*' by COMSEQ_2:def 2
       .= Re((seq.x)*')-(Im ((seq.x)*'))*<i> by COMPLEX1:def 15
       .= Re((seq.x)*')+(-Im ((seq.x)*'))*<i>
       .= Re(seq.x)+(-Im ((seq.x)*'))*<i> by COMPLEX1:112
       .= Re(seq.x)+(-((-Im(seq.x))))*<i> by COMPLEX1:112
       .= Re(seq.x)+(Im(seq.x))*<i>;
     hence thesis by COMPLEX1:29;
   end;
   hence thesis by FUNCT_2:18;
end;

Lm2:
for seq be Complex_Sequence holds
 Partial_Sums (seq*') = (Partial_Sums seq)*'
proof
   let seq be Complex_Sequence;
   defpred P[Element of NAT] means
    Partial_Sums(seq*').$1 = (Partial_Sums seq)*'.$1;

A1:P[0]
   proof
      Partial_Sums(seq*').0 = seq*'.0 by COMSEQ_3:def 7
     .= (seq.0)*' by COMSEQ_2:def 2
     .= ((Partial_Sums seq).0)*' by COMSEQ_3:def 7;
     hence (Partial_Sums (seq*')).0 = (Partial_Sums seq)*'.0
       by COMSEQ_2:def 2;
   end;
A2:now let n be Element of NAT;
     assume
A3:  P[n];
     thus P[n+1]
     proof
        Partial_Sums(seq*').(n+1)
        = Partial_Sums(seq*').n + seq*'.(n+1) by COMSEQ_3:def 7
       .= (Partial_Sums seq)*'.n + (seq.(n+1))*' by A3,COMSEQ_2:def 2
       .= ((Partial_Sums seq).n)*' + (seq.(n+1))*' by COMSEQ_2:def 2
       .= ((Partial_Sums seq).n + seq.(n+1))*' by COMPLEX1:118
       .= ((Partial_Sums seq).(n+1))*' by COMSEQ_3:def 7;
       hence thesis by COMSEQ_2:def 2;
     end;
   end;
    for n be Element of NAT holds P[n] from NAT_1:sch 1(A1,A2);
   hence thesis by COMSEQ_1:6;
end;

Lm3: for a,b be Real holds 0 <= a^2 + b^2
proof
   let a,b be Real;
    0<=a^2 & 0<=b^2 by XREAL_1:65; then 0 +0 <=a^2 + b^2 by XREAL_1:9;
   hence thesis;
end;

Lm4:
for z1, z2 be Complex st
 (Re z1)*(Im z2) = (Re z2)*(Im z1) & (Re z1)*(Re z2)+(Im z1)*(Im z2) >= 0 holds
  |.z1 + z2.| = |.z1.| + |.z2.|
proof
   let z1, z2 be Complex;
   assume that
A1:(Re z1)*(Im z2) = (Re z2)*(Im z1) and
A2:(Re z1)*(Re z2) + (Im z1)*(Im z2) >= 0;
A3:(Re z1)*(Im z2) - (Re z2)*(Im z1) = 0 by A1;
   set r1 = Re z1, r2 = Re z2, i1 = Im z1, i2 = Im z2;
A4:0 <= r1^2+i1^2 & 0 <= r2^2+i2^2 by Lm3;
then A5:(sqrt (r1^2+i1^2))^2 = r1^2+i1^2 &
    (sqrt (r2^2+i2^2))^2 = r2^2+i2^2 by SQUARE_1:def 4;
A6:(Re(z1 + z2))^2 = (r1+ r2)^2 by COMPLEX1:19
      .= r1^2 + 2*r1*r2 + r2^2;
    (Im(z1 + z2))^2 = (i1 + i2)^2 by COMPLEX1:19
      .= i1^2 + 2*i1*i2 + i2^2;
then A7:(Re(z1+z2))^2+(Im(z1+z2))^2
    = r1^2 + i1^2 + (2*r1*r2 + 2*i1*i2) + (r2^2 + i2^2) by A6;
   (r1^2+i1^2)*(r2^2+i2^2)-(r1*r2+i1*i2)^2
    = (r1*i2-i1*r2)^2;
   then r1*r2+i1*i2 = abs(r1*r2+i1*i2) &
   sqrt (r1*r2+i1*i2)^2 = sqrt ((r1^2+i1^2)*(r2^2+i2^2))
     by A2,A3,ABSVALUE:def 1,XCMPLX_1:15;
then A8:r1*r2+i1*i2 = sqrt (r1*r2+i1*i2)^2 &
   sqrt (r1*r2+i1*i2)^2 = sqrt (r1^2+i1^2)*sqrt (r2^2+i2^2)
     by A4,COMPLEX1:158,SQUARE_1:97;
   (2*r1*r2 + 2*i1*i2) = 2*sqrt (r1^2+i1^2)*sqrt (r2^2+i2^2)
     by A8;
   then 0 <= (Re(z1 + z2))^2 + (Im(z1 + z2))^2 &
    0 <= sqrt (r1^2+i1^2) &
     0 <= sqrt (r2^2+i2^2) &
      (Re(z1 + z2))^2 + (Im(z1 + z2))^2
       = (sqrt (r1^2+i1^2) + sqrt (r2^2+i2^2))^2
        by A4,A5,A7,Lm3,SQUARE_1:def 4;
   then 0 + 0 <= sqrt (r1^2+i1^2) + sqrt (r2^2+i2^2) &
    sqrt ((Re(z1 + z2))^2 + (Im(z1 + z2))^2) =
     sqrt ((sqrt (r1^2+i1^2) + sqrt (r2^2+i2^2))^2)
      by XREAL_1:9;
   then sqrt ((Re(z1 + z2))^2 + (Im(z1 + z2))^2) =
    (sqrt (r1^2+i1^2) + sqrt (r2^2+i2^2)) by SQUARE_1:89;
   then sqrt ((Re(z1 + z2))^2 + (Im(z1 + z2))^2) = sqrt (r1^2+i1^2) + |.z2.|
    by COMPLEX1:def 16;
   then sqrt ((Re(z1 + z2))^2+(Im(z1 + z2))^2) = |.z1.|+|.z2.| by
COMPLEX1:def 16;
   hence thesis by COMPLEX1:def 16;
end;

Lm5:
for seq be Complex_Sequence, n be Element of NAT st
 (for i be Element of NAT holds (Re seq).i >= 0 & (Im seq).i = 0) holds
   (|.Partial_Sums seq.|).n = (Partial_Sums |.seq.|).n
proof
   let seq be Complex_Sequence;
   let n be Element of NAT;
   assume
A1:for i be Element of NAT holds (Re seq).i >= 0 & (Im seq).i = 0;
   defpred P[Element of NAT] means
   (|.Partial_Sums seq.|).$1 = (Partial_Sums |.seq.|).$1;

A2:P[0]
   proof
      (|.Partial_Sums seq.|).0 = |.((Partial_Sums seq).0).| by COMSEQ_1:def 14
      .= |.(seq.0).| by COMSEQ_3:def 7
     .= (|.seq.|).0 by COMSEQ_1:def 14;
     hence thesis by SERIES_1:def 1;
   end;
A3:now let m be Element of NAT;
     assume
A4:  P[m];
     thus P[m+1]
     proof
A5:    for i be Element of NAT holds (Partial_Sums Re seq).i >= 0
       proof
         let i be Element of NAT;
         defpred Q1[Element of NAT] means (Partial_Sums Re seq).$1 >= 0;
A6:      Q1[0]
         proof
            (Partial_Sums Re seq).0 = (Re seq).0 by SERIES_1:def 1;
           hence thesis by A1;
         end;
A7:      now let k be Element of NAT;
           assume
A8:        Q1[k];
           thus Q1[k+1]
           proof
A9:          (Partial_Sums Re seq).(k+1)
              = (Partial_Sums Re seq).k + (Re seq).(k+1) by SERIES_1:def 1;
              (Partial_Sums Re seq).k >= 0 & (Re seq).(k+1) >= 0
               by A1,A8;
             then (Partial_Sums Re seq).(k+1) >= 0 + 0 by A9,XREAL_1:9;
             hence thesis;
           end;
         end;
          for i be Element of NAT holds Q1[i] from NAT_1:sch 1(A6,A7);
         hence thesis;
       end;
A10:    for i be Element of NAT holds (Partial_Sums Im seq).i = 0
       proof
         let i be Element of NAT;
         defpred Q2[Element of NAT] means (Partial_Sums Im seq).$1 = 0;
A11:      Q2[0]
         proof
            (Partial_Sums Im seq).0 = (Im seq).0 by SERIES_1:def 1;
           hence thesis by A1;
         end;
A12:      now let k be Element of NAT;
           assume
A13:        Q2[k];
           thus Q2[k+1]
           proof
              (Partial_Sums Im seq).(k+1)
              = (Partial_Sums Im seq).k + (Im seq).(k+1) by SERIES_1:def 1;
             hence thesis by A1,A13;
           end;
         end;
          for i be Element of NAT holds Q2[i] from NAT_1:sch 1(A11,A12);
         hence thesis;
       end;
A14:    (|.Partial_Sums seq.|).(m+1)
        = |.(Partial_Sums seq).(m+1).| by COMSEQ_1:def 14
       .= |.Partial_Sums seq.m + seq.(m+1).| by COMSEQ_3:def 7;

        (Partial_Sums Re seq).m >= 0 & (Partial_Sums Im seq).m = 0
         by A5,A10;
       then (Re (Partial_Sums seq)).m >= 0 & (Im (Partial_Sums seq)).m = 0
         by COMSEQ_3:26;
then A15:    Re(Partial_Sums seq.m) >= 0 & Im(Partial_Sums seq.m) = 0
         by COMSEQ_3:def 3,def 4;
        (Re seq).(m+1) >= 0 & (Im seq).(m+1) = 0 by A1;
then A16:    Re(seq.(m+1)) >=0 & Im(seq.(m+1)) = 0 by COMSEQ_3:def 3,
def 4;
       set z1 = Partial_Sums seq.m;
       set z2 = seq.(m+1);
A17:    (Re z1)*(Im z2) = (Re z2)*(Im z1) by A15,A16;
        (Re z1)*(Re z2)+(Im z1)*(Im z2) >= 0 by A15,A16,REAL_2:121;
       then (|.Partial_Sums seq.|).(m+1)
        = |.(Partial_Sums seq.m).| + |.(seq.(m+1)).| by A14,A17,Lm4
       .= (|.Partial_Sums seq.|).m + |.(seq.(m+1)).| by COMSEQ_1:def 14
       .= (Partial_Sums |.seq.|).m + (|.seq.|).(m+1) by A4,COMSEQ_1:def 14;
       hence thesis by SERIES_1:def 1;
     end;
   end;
    for m be Element of NAT holds P[m] from NAT_1:sch 1(A2,A3);
   hence thesis;
end;

Lm6:
for seq be Complex_Sequence st seq is summable holds
 Sum (seq*') = (Sum seq)*'
proof
   let seq be Complex_Sequence;
   assume seq is summable;
then A1:Partial_Sums seq is convergent by COMSEQ_3:def 10;
    Sum(seq*')
    = lim Partial_Sums (seq*') by COMSEQ_3:def 8
   .= lim ((Partial_Sums seq)*') by Lm2
   .= (lim Partial_Sums seq)*' by A1,COMSEQ_2:12;
   hence thesis by COMSEQ_3:def 8;
end;

Lm7:
for seq be Complex_Sequence st seq is absolutely_summable holds
  |. Sum seq .| <= Sum |.seq.|
proof
   let seq be Complex_Sequence;
   assume
A1:seq is absolutely_summable;
then A2:seq is summable by COMSEQ_3:64;
then A3:Partial_Sums seq is convergent by COMSEQ_3:def 10;
   reconsider Pseq = Partial_Sums seq as convergent Complex_Sequence
     by A2,COMSEQ_3:def 10;
A4:|.Pseq.| is convergent & |.Pseq.| = |.Partial_Sums seq.|;
A5:|. Sum seq .| = |. lim Partial_Sums seq .| by COMSEQ_3:def 8
    .= lim |.Partial_Sums seq.| by A3,COMSEQ_2:11;

    |.seq.| is summable by A1,COMSEQ_3:def 11;
then A6:Partial_Sums |.seq.| is convergent by SERIES_1:def 2;
    for k be Element of NAT
     holds (|.Partial_Sums seq.|).k <= (Partial_Sums |.seq.|).k
   proof
     let k be Element of NAT;
      |.Partial_Sums seq .k .| <= Partial_Sums(|.seq.|).k by COMSEQ_3:30;
     hence thesis by COMSEQ_1:def 14;
   end;
   then lim |.Partial_Sums(seq).| <= lim Partial_Sums(|.seq.|) by A4,A6,
SEQ_2:32;
   hence thesis by A5,SERIES_1:def 3;
end;

Lm8:
for seq be Complex_Sequence st seq is summable &
 (for n be Element of NAT holds (Re seq).n >= 0 & (Im seq).n = 0) holds
  |. Sum seq .| = Sum |.seq.|
proof
   let seq be Complex_Sequence;
   assume that
A1:seq is summable and
A2:for n be Element of NAT holds (Re seq).n >= 0 & (Im seq).n = 0;
    for x be set st x in NAT holds
   (|.Partial_Sums seq.|).x = (Partial_Sums |.seq.|).x by A2,Lm5;
   then |.Partial_Sums seq.| = Partial_Sums |.seq.| by SEQ_1:8;
then A3:lim |.Partial_Sums seq.| = Sum |.seq.| by SERIES_1:def 3;
    Partial_Sums seq is convergent by A1,COMSEQ_3:def 10;
   then |.lim Partial_Sums seq.| = Sum |.seq.| by A3,COMSEQ_2:11;
   hence thesis by COMSEQ_3:def 8;
end;

Lm9:
for seq be Complex_Sequence, n be Element of NAT holds
 (Re (seq(#)seq*')).n >= 0 & (Im (seq(#)seq*')).n = 0
proof
   let seq be Complex_Sequence;
   let n be Element of NAT;
   reconsider z1 = seq.n as Element of COMPLEX;
A1:(Re(seq(#)seq*')).n = Re((seq(#)seq*').n) by COMSEQ_3:def 3
   .= Re (seq.n * seq*'.n) by COMSEQ_1:def 5
   .= Re (seq.n * (seq.n)*') by COMSEQ_2:def 2
   .= (Re z1)^2 + (Im z1)^2 by COMPLEX1:126;
    0 <= (Re z1)^2 & 0 <= (Im z1)^2 by XREAL_1:65;
   then (Re(seq(#)seq*')).n >= 0+0 by A1,XREAL_1:9;
   hence (Re (seq(#)seq*')).n >= 0;

    (Im (seq(#)seq*')).n = Im((seq(#)seq*').n) by COMSEQ_3:def 4
   .= Im (seq.n * seq*'.n) by COMSEQ_1:def 5
   .= Im (seq.n * (seq.n)*') by COMSEQ_2:def 2;
   hence thesis by COMPLEX1:126;
end;

Lm10:
for x be set holds x is Element of Complex_l2_Space
  iff x is Complex_Sequence & |.seq_id(x).|(#)|.seq_id(x).| is summable
proof
    for x be set holds x is Element of Complex_l2_Space
     iff x is Complex_Sequence & |.seq_id(x).|(#)|.seq_id(x).| is summable
   proof
     let x be set;
      x in the_set_of_ComplexSequences iff x is Complex_Sequence
       by CSSPACE:def 1;
     hence thesis by CSSPACE:def 11,def 20;
   end;
   hence thesis;
end;

Lm11:
0.Complex_l2_Space = CZeroseq
proof
   set W = the_set_of_l2ComplexSequences;
   thus 0.Complex_l2_Space = 0.Linear_Space_of_ComplexSequences by  CSSPACE:def
20,14,def 10
       .= CZeroseq by CSSPACE:def 7;
end;

Lm12:
for u be VECTOR of Complex_l2_Space holds u =seq_id(u)
proof
   let u be VECTOR of Complex_l2_Space;
    u is VECTOR of Linear_Space_of_ComplexSequences
     by CLVECT_1:30,CSSPACE:15,def 20;
   hence thesis by CSSPACE:17;
end;

Lm13:
for u,v be VECTOR of Complex_l2_Space holds u+v =seq_id(u)+seq_id(v)
proof
   let u,v be VECTOR of Complex_l2_Space;
   reconsider u1=u,v1=v as VECTOR of Linear_Space_of_ComplexSequences
     by CLVECT_1:30,CSSPACE:15,def 20;
   set L1 = Linear_Space_of_ComplexSequences;
   set W = the_set_of_l2ComplexSequences;
A1:[:W,W:] c= [:the carrier of L1,the carrier of L1:] by ZFMISC_1:119;
    dom (the add of L1)
     = [:the carrier of L1,the carrier of L1:] by FUNCT_2:def 1;
then A2:dom ((the add of Linear_Space_of_ComplexSequences)||W)
     =[:W,W:] by A1,RELAT_1:91;
    u+v =((the add of Linear_Space_of_ComplexSequences)||W).[u,v]
     by CSSPACE:14,def 8,def 20
      .=u1+v1 by A2,CSSPACE:def 20,FUNCT_1:70;
   hence thesis by CSSPACE:17;
end;

Lm14:
for r be Complex for u be VECTOR of Complex_l2_Space
  holds r*u =r(#)seq_id(u)
proof
   let r be Complex;
   let u be VECTOR of Complex_l2_Space;
   reconsider u1=u as VECTOR of Linear_Space_of_ComplexSequences
     by CLVECT_1:30,CSSPACE:15,def 20;
   set L1=Linear_Space_of_ComplexSequences;
   set W = the_set_of_l2ComplexSequences;
A1:[:COMPLEX,W:] c= [:COMPLEX,the carrier of L1:] by ZFMISC_1:119;
    dom (the Mult of L1) = [:COMPLEX,the carrier of L1:] by FUNCT_2:def 1;
then A2:dom ((the Mult of Linear_Space_of_ComplexSequences) | [:COMPLEX,W:])
       =[:COMPLEX,W:] by A1,RELAT_1:91;
    r*u =(the Mult of Complex_l2_Space).[r,u] by CLVECT_1:def 1
      .=((the Mult of Linear_Space_of_ComplexSequences)|[:COMPLEX,W:]).[r,u]
        by CSSPACE:14,def 9,def 20
      .=(the Mult of Linear_Space_of_ComplexSequences).[r,u]
        by A2,CSSPACE:def 20,FUNCT_1:70
      .=r*u1 by CLVECT_1:def 1;
   hence thesis by CSSPACE:17;
end;

Lm15:
for u be VECTOR of Complex_l2_Space holds
  -u =-seq_id(u) & seq_id(-u)=-seq_id(u)
proof
   let u be VECTOR of Complex_l2_Space;
    -u = (-1r)*u by CLVECT_1:4
     .= (-1r)(#)seq_id(u) by Lm14
     .= -seq_id(u) by COMSEQ_1:14;
   hence thesis by Lm12;
end;

Lm16:
for u,v be VECTOR of Complex_l2_Space holds u-v =seq_id(u)-seq_id(v)
proof
   let u,v be VECTOR of Complex_l2_Space;
   thus u-v = seq_id(u)+seq_id(-v) by Lm13
           .= seq_id(u)+(-seq_id(v)) by Lm15
           .= seq_id(u)-seq_id(v) by COMSEQ_1:def 10;
end;

Lm17:
for v,w be VECTOR of Complex_l2_Space holds
   |.seq_id(v).|(#)|.seq_id(w).| is summable
proof
     let u,v be VECTOR of Complex_l2_Space;
A1: |.(seq_id(v)).|(#)|.(seq_id(v)).| is summable by CSSPACE:def 11,
def 20;
A2: |.(seq_id(u)).|(#)|.(seq_id(u)).| is summable by CSSPACE:def 11,
def 20;
     set p = |.(seq_id(v)).|(#)|.(seq_id(v)).|;
     set q = |.(seq_id(u)).|(#)|.(seq_id(u)).|;
     set r = abs(|.(seq_id(u)).|(#)|.(seq_id(v)).|);
A3: p+q is summable by A1,A2,SERIES_1:10;
A4: for n be Element of NAT holds 0<=(2(#)r).n
     proof
       let n be Element of NAT;
       set rr=|.(seq_id(u)).|(#)|.(seq_id(v)).|;
A5:   (2(#)r).n = 2*r.n by SEQ_1:13
                .= 2*abs(rr.n) by SEQ_1:16;
       reconsider tt=abs(rr.n) as Real;
        0 <= 2 & 0 <= tt by COMPLEX1:132;
       hence thesis by A5,XREAL_1:129;
     end;
      for n be Element of NAT holds (2(#)r).n <=(p+q).n
     proof
       let n be Element of NAT;
       set s = seq_id v, t = seq_id u;
       reconsider sn=|.(s.n).|,tn=|.(t.n).| as Real;
       reconsider ss=abs sn,tt=abs tn as Real;
A6:   (2(#)r).n =2*r.n by SEQ_1:13
           .=2*abs( (|.seq_id(u).|(#)|.seq_id(v).|).n ) by SEQ_1:16
           .=2*(abs( (|.seq_id(u).|).n * (|.seq_id(v).|).n )) by SEQ_1:12
           .=2*(abs( (|.seq_id(u).|).n ) * abs( (|.seq_id(v).|).n ))
                by COMPLEX1:151
           .=2*(abs( (|.((seq_id(u)).n).|) ) * abs( (|.seq_id(v).|).n ))
                by COMSEQ_1:def 14
           .= 2*(ss*tt) by COMSEQ_1:def 14
           .= 2*abs(sn)*abs(tn);
        (p+q).n = p.n +q.n by SEQ_1:11
              .= ((|.s.|).n*(|.s.|).n) + q.n by SEQ_1:12
              .= ((|.s.|).n*(|.s.|).n) + ((|.t.|).n*(|.t.|).n) by SEQ_1:12
              .= (|.(s.n).|*(|.s.|).n) + ((|.t.|).n*(|.t.|).n)
                 by COMSEQ_1:def 14
              .= sn^2 + ((|.t.|).n*(|.t.|).n) by COMSEQ_1:def 14
              .= sn^2 + (|.(t.n).|*(|.t.|).n) by COMSEQ_1:def 14
              .=(abs(sn))^2 + (abs(tn))^2 by COMSEQ_1:def 14;
then A7:   (p+q).n - (2(#)r).n
         = (abs(sn)-abs(tn))^2 by A6;
        0 <= (abs(sn)-abs(tn))^2 by XREAL_1:65;
       then 0 + (2(#)r).n <= (p+q).n - (2(#)r).n + (2(#)r).n by A7,XREAL_1:9;
       hence thesis;
     end;
then A8: 2(#)r is summable by A3,A4,SERIES_1:24;
     set q0 = 1/2;
      q0(#)(2(#)r)=(q0*2)(#)r by SEQ_1:31 .=r by SEQ_1:35;
     then r is summable by A8,SERIES_1:13;
     then |.seq_id(u).|(#)|.seq_id(v).| is absolutely_summable by
SERIES_1:def 5;
     hence thesis by SERIES_1:40;
end;

Lm18:
 for v,w be VECTOR of Complex_l2_Space holds
   v.|.w = Sum(seq_id(v)(#)(seq_id(w))*')
proof
   let v,w be VECTOR of Complex_l2_Space;
   thus v.|.w = (the scalar of Complex_l2_Space).(v,w) by CSSPACE:def 12
             .= Sum(seq_id(v)(#)(seq_id(w))*') by CSSPACE:def 19,
def 20;
end;

Lm19:
for seq being Complex_Sequence holds
 |.seq.| = |.seq*'.|
proof
   let seq be Complex_Sequence;
   reconsider rseq1 = |.seq.| as Real_Sequence;
   reconsider rseq2 = |.seq*'.| as Real_Sequence;

for n being Element of NAT holds (|.seq.|).n = (|.seq*'.|).n
   proof
     let n be Element of NAT;
      (|.seq*'.|).n = |.((seq*').n).| by COMSEQ_1:def 14
                  .= |.(seq.n)*'.| by COMSEQ_2:def 2
                  .= |.(seq.n).| by COMPLEX1:139;
     hence thesis by COMSEQ_1:def 14;
   end;
   then for n be set st n in NAT holds rseq1.n = rseq2.n;
   hence thesis by SEQ_1:8;
end;

Lm20:
for x be set holds x is Element of Complex_l2_Space
 iff x is Complex_Sequence & seq_id(x)(#)(seq_id(x))*' is absolutely_summable
proof
A1:for x be set holds (x is Element of Complex_l2_Space) implies
    (x is Complex_Sequence & seq_id(x)(#)(seq_id(x))*' is absolutely_summable)
   proof
     let x be set;
     assume
A2:  x is Element of Complex_l2_Space;
     then x in the_set_of_ComplexSequences by CSSPACE:def 11,def 20;
     hence x is Complex_Sequence by CSSPACE:def 1;
      seq_id(x)(#)(seq_id(x))*' is absolutely_summable
     proof
A3:    |.seq_id(x).| = |.(seq_id(x))*'.| by Lm19;
        |.seq_id(x).|(#)|.seq_id(x).| is summable by A2,Lm17;
       then |.seq_id(x)(#)(seq_id(x))*'.| is summable by A3,COMSEQ_1:49;
       hence thesis by COMSEQ_3:def 11;
     end;
     hence thesis;
   end;
    for x be set holds
    (x is Complex_Sequence & seq_id(x)(#)(seq_id(x))*' is absolutely_summable)
     implies (x is Element of Complex_l2_Space)
   proof
     let x be set;
     assume that
A4:  x is Complex_Sequence and
A5:  seq_id(x)(#)(seq_id(x))*' is absolutely_summable;
A6:  x in the_set_of_ComplexSequences by A4,CSSPACE:def 1;
      |.seq_id(x)(#)(seq_id(x))*'.| is summable by A5,COMSEQ_3:def 11;
     then |.seq_id(x).|(#)|.(seq_id(x))*'.| is summable by COMSEQ_1:49;
     then |.seq_id(x).|(#)|.(seq_id(x)).| is summable by Lm19;
     hence thesis by A6,CSSPACE:def 11,def 20;
   end;
   hence thesis by A1;
end;

theorem
 ( the carrier of Complex_l2_Space = the_set_of_l2ComplexSequences) &
(for x be set holds x is Element of Complex_l2_Space
  iff x is Complex_Sequence & |.seq_id(x).|(#)|.seq_id(x).| is summable) &
(for x be set holds x is Element of Complex_l2_Space
  iff x is Complex_Sequence &
     seq_id(x)(#)(seq_id(x))*' is absolutely_summable ) &
0.Complex_l2_Space = CZeroseq &
(for u be VECTOR of Complex_l2_Space holds u =seq_id(u)) &
(for u,v be VECTOR of Complex_l2_Space holds u+v =seq_id(u)+seq_id(v)) &
(for r be Complex for u be VECTOR of Complex_l2_Space
  holds r*u =r(#)seq_id(u)) &
(for u be VECTOR of Complex_l2_Space holds
  -u =-seq_id(u) & seq_id(-u)=-seq_id(u)) &
(for u,v be VECTOR of Complex_l2_Space holds u-v =seq_id(u)-seq_id(v)) &
 for v,w be VECTOR of Complex_l2_Space holds
   |.seq_id(v).|(#)|.seq_id(w).| is summable &
 for v,w be VECTOR of Complex_l2_Space holds
   v.|.w = Sum(seq_id(v)(#)(seq_id(w))*')
 by Lm10,Lm11,Lm12,Lm13,Lm14,Lm15,Lm16,Lm17,Lm18,Lm20,CSSPACE:def 20;

theorem Th2:
for x,y,z being Point of Complex_l2_Space for a be Complex holds
  ( x.|.x = 0 iff x = 0.Complex_l2_Space ) &
    Re(x.|.x) >= 0 & Im(x.|.x) = 0 &
    x.|.y = (y.|.x)*' &
    (x+y).|.z = x.|.z + y.|.z &
    (a*x).|.y = a*(x.|.y)
proof
   let x, y, z be Point of Complex_l2_Space;
   let a be Complex;
A1:now assume
A2:  x .|. x = 0;
A3:  x .|. x = (the scalar of Complex_l2_Space).(x,x) by CSSPACE:def 12
            .= Sum(seq_id(x)(#)(seq_id(x))*') by CSSPACE:def 19,def 20;

      seq_id(x)(#)(seq_id(x))*' is absolutely_summable by Lm20;
then A4:  seq_id(x)(#)(seq_id(x))*' is summable by COMSEQ_3:64;
     then Sum(Re(seq_id(x)(#)(seq_id(x))*'))+
       (Sum(Im(seq_id(x)(#)(seq_id(x))*')))*<i> = 0 by A2,A3,COMSEQ_3:54;
then A5:  Sum(Re(seq_id(x)(#)(seq_id(x))*')) = 0 &
     Sum(Im(seq_id(x)(#)(seq_id(x))*')) = 0 by COMPLEX1:28,12;
     set seq = seq_id(x);
     set rseq = Re(seq(#)seq*');
     set iseq = Im(seq(#)seq*');

A6:  for n be Element of NAT holds
       rseq.n = (Re(seq.n))^2 + (Im(seq.n))^2
     proof
       let n be Element of NAT;
        rseq.n = ( Re seq (#) Re (seq*') -Im seq (#) Im (seq*') ).n
                  by COMSEQ_3:21
             .= ( Re seq (#) Re (seq*') + -Im seq (#) Im (seq*') ).n
                  by SEQ_1:15
             .= ( Re seq (#) Re (seq*') ).n + ( -Im seq (#) Im (seq*') ).n
                  by SEQ_1:11
             .= ( Re seq (#) Re (seq*') ).n + -( (Im seq (#) Im (seq*'))).n
                  by SEQ_1:14
             .= ( Re seq (#) Re (seq*') ).n - ( (Im seq (#) Im (seq*'))).n
             .= (Re seq).n * (Re (seq*')).n - ((Im seq (#) Im (seq*'))).n
                  by SEQ_1:12
             .= (Re seq).n * (Re (seq*')).n - ((Im seq).n * (Im (seq*')).n)
                  by SEQ_1:12
             .= Re (seq.n) * (Re (seq*')).n - ((Im seq).n * (Im (seq*')).n)
                  by COMSEQ_3:def 3
             .= Re (seq.n) * Re (seq*'.n) - ((Im seq).n * (Im (seq*')).n)
                  by COMSEQ_3:def 3
             .= Re (seq.n) * Re (seq*'.n) - (Im(seq.n) * (Im (seq*')).n)
                  by COMSEQ_3:def 4
             .= Re (seq.n) * Re (seq*'.n) - (Im(seq.n) * Im (seq*'.n))
                  by COMSEQ_3:def 4
             .= Re (seq.n) * Re ((seq.n)*') - (Im(seq.n) * Im (seq*'.n))
                  by COMSEQ_2:def 2
             .= Re (seq.n) * Re ((seq.n)*') - (Im(seq.n) * Im((seq.n)*'))
                  by COMSEQ_2:def 2
             .= Re (seq.n) * Re (seq.n) - (Im(seq.n) * Im((seq.n)*'))
                  by COMPLEX1:112
             .= Re(seq.n) * Re(seq.n) - (Im(seq.n) * -Im(seq.n))
                  by COMPLEX1:112
             .= (Re(seq.n))^2 + Im(seq.n) * Im(seq.n);
       hence thesis;
     end;

A7:  (for n be Element of NAT holds 0 <= rseq.n) & rseq is summable
     proof
        for n be Element of NAT holds 0 <= rseq.n
       proof
         let n be Element of NAT;
A8:      rseq.n = (Re(seq.n))^2 + (Im(seq.n))^2 by A6;
          (Re(seq.n))^2 >= 0 & (Im(seq.n))^2 >= 0 by XREAL_1:65;
         then rseq.n >= 0 + 0 by A8,XREAL_1:9;
         hence thesis;
       end;
       hence thesis by A4,COMSEQ_3:54;
     end;

A9:  for n be Element of NAT holds (seq_id(x)).n = 0
     proof
       let n be Element of NAT;
        rseq.n = (Re(seq.n))^2 + (Im(seq.n))^2 by A6;
       then (Re(seq.n))^2 + (Im(seq.n))^2 = 0 by A5,A7,RSSPACE:21;
       hence thesis by COMPLEX1:13;
     end;
      x is Element of the_set_of_ComplexSequences by CSSPACE:def 11,
def 20;
     hence x=0.Complex_l2_Space by A9,Lm11,CSSPACE:def 6;

   end;
A10:now assume
A11:  x=0.Complex_l2_Space;
A12:  for n be Element of NAT holds (seq_id(x)(#)(seq_id(x))*').n=0
     proof
       let n be Element of NAT;
       thus (seq_id(x)(#)(seq_id(x))*').n
               = (seq_id(x)).n * ((seq_id(x))*').n by COMSEQ_1:def 5
              .=0c * ((seq_id(x))*').n by A11,Lm11,CSSPACE:def 6

              .= 0;
     end;
     thus x.|.x = (the scalar of Complex_l2_Space).(x,x) by CSSPACE:def 12
               .= Sum(seq_id(x)(#)(seq_id(x))*') by CSSPACE:def 19,
def 20
               .=0 by A12,CSSPACE:88;
   end;

   set seqx = seq_id(x);

    seqx(#)seqx*' is absolutely_summable by Lm20;
then A13:seqx(#)seqx*' is summable by COMSEQ_3:64;

A14:Re(x.|.x) >= 0 & Im(x.|.x) = 0
   proof
A15:  x .|. x = (the scalar of Complex_l2_Space).(x,x) by CSSPACE:def 12
            .= Sum(seqx(#)seqx*') by CSSPACE:def 19,def 20;
      Sum(seqx(#)seqx*')
    = Sum(Re(seqx(#)seqx*'))+Sum(Im(seqx(#)seqx*'))*<i> by A13,COMSEQ_3:54;
then A16:  Re(x.|.x) = Sum(Re(seqx(#)seqx*')) &
     Im(x.|.x) = Sum(Im(seqx(#)seqx*')) by A15,COMPLEX1:28;
A17:  Re(seqx(#)seqx*') is summable & Im(seqx(#)seqx*') is summable
       by A13,COMSEQ_3:54;
      for n being Element of NAT holds 0 <= (Re(seqx(#)seqx*')).n
     proof
       let n be Element of NAT;
A18:    (Re(seqx(#)seqx*')).n = Re((seqx(#)seqx*').n) by COMSEQ_3:def 3
         .= Re( seqx.n * seqx*'.n ) by COMSEQ_1:def 5
         .= Re( seqx.n * (seqx.n)*') by COMSEQ_2:def 2
         .= (Re(seqx.n))^2 + (Im(seqx.n))^2 by COMPLEX1:126;
        (Re(seqx.n))^2 >= 0 & (Im(seqx.n))^2 >= 0 by XREAL_1:65;
       then (Re(seqx(#)seqx*')).n >= 0 + 0 by A18,XREAL_1:9;
       hence thesis;
     end;
     hence Re(x.|.x) >= 0 by A16,A17,SERIES_1:21;

      for n being Element of NAT holds (Im(seqx(#)seqx*')).n = 0
     proof
       let n be Element of NAT;
        (Im(seqx(#)seqx*')).n = Im((seqx(#)seqx*').n) by COMSEQ_3:def 4
         .= Im( seqx.n * seqx*'.n ) by COMSEQ_1:def 5
         .= Im( seqx.n * (seqx.n)*') by COMSEQ_2:def 2;
       hence thesis by COMPLEX1:126;
     end;
     hence thesis by A16,RSSPACE:20;
   end;

   set seqy = seq_id(y);
   set seqz = seq_id(z);

    |.seqx.|(#)|.seqy.| is summable by Lm17;

   then |.seqx*'.|(#)|.seqy.| is summable by Lm19;
   then |.seqx*'(#)seqy.| is summable by COMSEQ_1:49;
   then seqx*'(#)seqy is absolutely_summable by COMSEQ_3:def 11;
then A19:seqx*'(#)seqy is summable by COMSEQ_3:64;

A20:x .|. y = (the scalar of Complex_l2_Space).(x,y) by CSSPACE:def 12
           .= Sum(seqx(#)seqy*') by CSSPACE:def 19,def 20
           .= Sum((seqx*')*'(#)seqy*') by Lm1
           .= Sum( (seqx*'(#)seqy)*' ) by COMSEQ_2:5
           .= (Sum (seqx*'(#)seqy) )*' by A19,Lm6
           .= ((the scalar of Complex_l2_Space).(y,x))*'
                by CSSPACE:def 19,def 20
           .=(y .|. x)*' by CSSPACE:def 12;

    |.seqx.|(#)|.seqz.| is summable by Lm17;
   then |.seqx.|(#)|.seqz*'.| is summable by Lm19;
   then |.seqx(#)seqz*'.| is summable by COMSEQ_1:49;
   then seqx(#)seqz*' is absolutely_summable by COMSEQ_3:def 11;
then A21:seqx(#)seqz*' is summable by COMSEQ_3:64;

    |.seqy.|(#)|.seqz.| is summable by Lm17;

   then |.seqy.|(#)|.seqz*'.| is summable by Lm19;
   then |.seqy(#)seqz*'.| is summable by COMSEQ_1:49;
   then seqy(#)seqz*' is absolutely_summable by COMSEQ_3:def 11;
then A22:seqy(#)seqz*' is summable by COMSEQ_3:64;

A23:(x+y).|.z =(the scalar of Complex_l2_Space).(x+y,z) by CSSPACE:def 12
       .= Sum(seq_id(x+y)(#)seqz*') by CSSPACE:def 19,def 20
       .= Sum(seq_id(seqx+seqy)(#)seqz*') by Lm13
       .= Sum((seqx+seqy)(#)seqz*') by CSSPACE:3
       .= Sum(seqx(#)seqz*'+seqy(#)seqz*') by COMSEQ_1:13
       .= Sum(seqx(#)seqz*')+Sum(seqy(#)seqz*') by A21,A22,COMSEQ_3:55
       .=(the scalar of Complex_l2_Space).(x,z)+Sum(seqy(#)seqz*')
                        by CSSPACE:def 19,def 20
       .=(the scalar of Complex_l2_Space).(x,z)
            +(the scalar of Complex_l2_Space).(y,z) by CSSPACE:def 19,
def 20
       .= x.|.z +(the scalar of Complex_l2_Space).(y,z) by CSSPACE:def 12
       .= x.|.z + y.|.z by CSSPACE:def 12;

    |.seqx.|(#)|.seqy.| is summable by Lm17;
   then |.seqx.|(#)|.seqy*'.| is summable by Lm19;
   then |.seqx(#)seqy*'.| is summable by COMSEQ_1:49;
   then seqx(#)seqy*' is absolutely_summable by COMSEQ_3:def 11;
then A24:seqx(#)seqy*' is summable by COMSEQ_3:64;
    (a*x).|.y = (the scalar of Complex_l2_Space).(a*x,y) by CSSPACE:def 12
      .=Sum(seq_id(a*x)(#)seqy*') by CSSPACE:def 19,def 20
      .=Sum(seq_id(a(#)seqx)(#)seqy*') by Lm14
      .=Sum(a(#)seqx(#)seqy*') by CSSPACE:3
      .=Sum(a(#)(seqx(#)seqy*')) by COMSEQ_1:15
      .=a*Sum(seqx(#)seqy*') by A24,COMSEQ_3:57
      .=a*(the scalar of Complex_l2_Space).(x,y) by CSSPACE:def 19,
def 20
      .=a*(x.|.y) by CSSPACE:def 12;
   hence thesis by A1,A10,A14,A20,A23;
end;

registration
  cluster Complex_l2_Space -> ComplexUnitarySpace-like;
  coherence by Th2,CSSPACE:def 13;
end;

Lm21:
for x,y be Complex holds 2*|.x*y.| <= |.x.|^2 + |.y.|^2
proof
   let x,y be Complex;
   set a = |.x.|;
   set b = |.y.|;
A1:a*a = |.x.|^2 & b*b = |.y.|^2 & a*b = |.x*y.|
     by COMPLEX1:151;
    (a - b)^2 = a*a - (a*b + a*b) + b*b;
   then a*a + b*b - (a*b + a*b) >= 0 by XREAL_1:65;
   hence thesis by A1,REAL_2:105;
end;

Lm22:
for x,y be Complex holds
 |.x+y.|*|.x+y.| <= 2*|.x.|*|.x.| + 2*|.y.|*|.y.| &
 |.x.|*|.x.| <= 2*|.x-y.|*|.x-y.| + 2*|.y.|*|.y.|
proof
A1:now
     let x,y be Complex;
A2:  |.x+y.|*|.x+y.| =|.(x+y)*(x+y).| by COMPLEX1:151
      .= |.x*x + x*y + x*y + y*y.|;
A3:  |.x*x.| = |.x.|*|.x.| & |.x.|^2 = |.x.|*|.x.| &
     |.y*y.| = |.y.|*|.y.| & |.y.|^2 = |.y.|*|.y.|
       by COMPLEX1:151;
A4:  |.x*x + x*y + x*y + y*y.| <= |.x*x + x*y + x*y.| + |.y*y.| &
     |.x*x + x*y + x*y.| <= |.x*x + x*y.| + |.x*y.| &
     |.x*x + x*y.| <= |.x*x.| + |.x*y.| by COMPLEX1:142;
then A5:  |.x*x + x*y + x*y + y*y.| - |.y*y.| <= |.x*x + x*y + x*y.| &
     |.x*x + x*y + x*y.| - |.x*y.| <= |.x*x + x*y.| by XREAL_1:22;
     then |.x*x + x*y + x*y.| - |.x*y.| <= |.x*x.| + |.x*y.| by A4,XXREAL_0:2;
     then |.x*x + x*y + x*y.| <= |.x*x.| + |.x*y.| + |.x*y.| by XREAL_1:22;
     then |.x+y.|*|.x+y.| - |.y*y.| <= |.x*x.| + 2*|.x*y.|
       by A2,A5,XXREAL_0:2;
then A6:  |.x+y.|*|.x+y.| - |.y*y.| - |.x*x.| <= 2*|.x*y.| by XREAL_1:22;
      2*|.x*y.| <= |.x.|^2 + |.y.|^2 by Lm21;
     then |.x+y.|*|.x+y.| - |.y*y.| - |.x*x.| <= |.x.|^2 + |.y.|^2
       by A6,XXREAL_0:2;
     then |.x+y.|*|.x+y.|- |.y.|*|.y.| <= |.x.|*|.x.| + |.y.|*|.y.| + |.x.|*|.
x.|
       by A3,XREAL_1:22;
     then |.x+y.|*|.x+y.| <= 2*(|.x.|*|.x.|) + |.y.|*|.y.| + |.y.|*|.y.|
       by XREAL_1:22;
     hence |.x+y.|*|.x+y.| <=2*|.x.|*|.x.|+2*|.y.|*|.y.|;
   end;
      now
     let x,y be Complex;
        |.(x-y)+y.|=|.x.|;
     hence |.x.|*|.x.| <= 2*|.x-y.|*|.x-y.|+2*|.y.|*|.y.| by A1;
   end;
   hence thesis by A1;
end;

Lm23:
for c be Complex, seq be Complex_Sequence st seq is convergent
for rseq be Real_Sequence st
  (for m be Element of NAT holds rseq .m = |.seq.m-c.|*|.seq.m-c.|)
holds (rseq is convergent & lim rseq = |.lim seq-c.|*|.lim seq-c.| )
proof
   let c be Complex;
   let seq be Complex_Sequence such that
A1:seq is convergent;
   let rseq be Real_Sequence such that
A2:for i be Element of NAT holds rseq .i = |.seq.i-c.|*|.seq.i-c.|;
    reconsider cseq = NAT --> c as Complex_Sequence by FUNCOP_1:57;
A3:for n be Element of NAT holds cseq.n=c by FUNCOP_1:13;
    now let i be Element of NAT;
     thus rseq.i=|.seq.i-c.|*|.seq.i-c.| by A2
        .=|.seq.i-(cseq.i).|*|.seq.i-c.| by A3
        .=|.seq.i-(cseq.i).|*|.seq.i-(cseq.i).| by A3
        .=|.seq.i+(-cseq).i.|*|.seq.i+-(cseq.i).| by COMSEQ_1:def 9
        .=|.seq.i+(-cseq).i.|*|.seq.i+(-cseq).i.| by COMSEQ_1:def 9
        .=|.( seq+(-cseq)).i.|*|.seq.i+(-cseq).i.| by COMSEQ_1:def 4
        .=|.(seq+(-cseq)).i.|*|.(seq+(-cseq)).i.| by COMSEQ_1:def 4
        .=|. ( seq -cseq ).i.|*|.( seq + (-cseq) ).i.| by COMSEQ_1:def 10
        .=|.( seq -cseq ).i.|*|.(seq -cseq).i.| by COMSEQ_1:def 10
        .=(|.seq -cseq.| .i)*|.(seq -cseq).i.| by COMSEQ_1:def 14
        .=(|.seq -cseq.| .i)*(|.seq -cseq.| .i) by COMSEQ_1:def 14
        .=(|.seq -cseq.|(#)|.seq -cseq.|) .i by SEQ_1:12;
   end;
then A4:for x be set st x in NAT holds
     rseq.x =(|.seq -cseq.|(#)|.seq -cseq.|) .x;
A5:cseq is convergent by A3,COMSEQ_2:9;
   then reconsider seq1 = seq -cseq as convergent Complex_Sequence
     by A1,COMSEQ_2:25;
A6:|.seq1.| is convergent;

A7:|.seq1.|(#)|.seq1.| is convergent by SEQ_2:28;
      lim (|.seq -cseq.|(#)|.seq -cseq.|)
     = (lim |.seq -cseq.|)*(lim |.seq -cseq.|) by A6,SEQ_2:29
    .= |.lim seq - lim cseq.|*(lim |.seq -cseq.|) by A1,A5,COMSEQ_2:27
    .= |.lim seq - lim cseq.|*|.lim seq - lim cseq.| by A1,A5,COMSEQ_2:27
    .= |.lim seq - c.|*|.lim seq - lim cseq.| by A3,COMSEQ_2:10
    .= |.lim seq - c.|*|.lim seq - c.| by A3,COMSEQ_2:10;
   hence thesis by A4,A7,SEQ_1:8;
end;

Lm24:
for c be Complex, seq1 be Real_Sequence, seq be Complex_Sequence st
 seq is convergent & seq1 is convergent
  for rseq be Real_Sequence st
  (for i be Element of NAT holds rseq.i = |.seq.i-c.|*|.seq.i-c.|+seq1.i) holds
   (rseq is convergent & lim rseq = |.lim seq-c.|*|.lim seq-c.|+lim seq1 )
proof
   let c be Complex;
   let seq1 be Real_Sequence;
   let seq be Complex_Sequence;
   assume that
A1:seq is convergent and
A2:seq1 is convergent;
   let rseq be Real_Sequence such that
A3:for i be Element of NAT holds rseq .i = |.seq.i-c.|*|.seq.i-c.|+seq1.i;
    reconsider cseq = NAT --> c as Complex_Sequence by FUNCOP_1:57;
A4:for n be Element of NAT holds cseq.n=c by FUNCOP_1:13;
    now let i be Element of NAT;
     thus rseq.i=|.seq.i-c.|*|.seq.i-c.| +seq1.i by A3
            .=|.seq.i-cseq.i.|*|.seq.i-c.| +seq1.i by A4
            .=|.seq.i-cseq.i.|*|.seq.i-cseq.i.| +seq1.i by A4
            .=|.seq.i+(-cseq).i.|*|.seq.i+-(cseq.i).| +seq1.i by COMSEQ_1:def 9
            .=|.seq.i+(-cseq).i.|*|.seq.i+(-cseq).i.| +seq1.i by COMSEQ_1:def 9
            .=|.(seq+(-cseq)).i.|*|.seq.i+(-cseq).i.| +seq1.i by COMSEQ_1:def 4
            .=|.(seq+(-cseq)).i.|*|.(seq+(-cseq)).i.| +seq1.i by COMSEQ_1:def 4
            .=|.(seq-cseq).i.|*|.(seq+(-cseq)).i.| +seq1.i by COMSEQ_1:def 10
            .=|.(seq-cseq).i.|*|.(seq-cseq).i.| +seq1.i by COMSEQ_1:def 10
            .=(|.seq-cseq.|).i * |.(seq-cseq).i.| +seq1.i by COMSEQ_1:def 14
            .=(|.seq-cseq.|).i * (|.seq-cseq.|).i +seq1.i by COMSEQ_1:def 14
            .=(|.seq-cseq.|(#)|.seq-cseq.|).i +seq1.i by SEQ_1:12
            .=(|.seq -cseq.|(#)|.seq -cseq.|+seq1).i by SEQ_1:11;
     end;
   then for x be set st x in NAT holds
    rseq.x =(|.seq-cseq.|(#)|.seq-cseq.|+seq1).x;
then A5:rseq = |.seq -cseq.|(#)|.seq-cseq.|+seq1 by SEQ_1:8;
A6:cseq is convergent by A4,COMSEQ_2:9;
   then reconsider s = seq-cseq as convergent Complex_Sequence by A1,
COMSEQ_2:25;
A7:|.s.| is convergent;
then A8:|.seq-cseq.|(#)|.seq-cseq.| is convergent by SEQ_2:28;
    lim (|.seq-cseq.|(#)|.seq-cseq.|)
    = (lim (|.seq-cseq.|))*(lim (|.seq-cseq.|)) by A7,SEQ_2:29
   .= (|.(lim seq)-(lim cseq).|)*(lim (|.seq-cseq.|)) by A1,A6,COMSEQ_2:27
   .= (|.(lim seq)-(lim cseq).|)*(|.(lim seq)-(lim cseq).|)
      by A1,A6,COMSEQ_2:27
   .= (|.(lim seq)-c.|)*(|.(lim seq)-(lim cseq).|) by A4,COMSEQ_2:10
   .= (|.(lim seq)-c.|)*(|.(lim seq)-c.|) by A4,COMSEQ_2:10;
   hence thesis by A2,A5,A8,SEQ_2:19,20;
end;

theorem
 for vseq be sequence of Complex_l2_Space st vseq is Cauchy holds
   vseq is convergent
proof
   let vseq be sequence of Complex_l2_Space such that
A1:vseq is Cauchy;
   defpred P[set,set] means
     ex i be Element of NAT st $1=i &
      ex seqi be Complex_Sequence st
       (for n be Element of NAT holds seqi.n=(seq_id(vseq.n)).i) &
       seqi is convergent &
       $2=lim seqi;

A2:for x be set st x in NAT ex y be set st
    y in COMPLEX & P[x,y]
   proof
     let x be set such that
A3:  x in NAT;
     reconsider i=x as Element of NAT by A3;
     deffunc F(set)=(seq_id(vseq.$1)).i;
     consider seqi be Complex_Sequence such that
A4:  for n be Element of NAT holds seqi.n=F(n) from COMSEQ_1:sch 1;
A5:  seqi is convergent
     proof
        now
         let e be Real such that
A6:      e > 0;
         thus ex k be Element of NAT st for m be Element of NAT st
           k<=m holds |.(seqi.m -seqi.k).| < e
         proof
           consider k be Element of NAT such that
A7:         for n, m be Element of NAT st ( n >= k & m >= k ) holds
             ||.(vseq.n) - (vseq.m).|| < e by A1,A6,CLVECT_2:58;
            now
             let m be Element of NAT such that
A8:          k<=m;

             set vm = vseq.m;
             set vk = vseq.k;
             set seqmk = seq_id(vm-vk);
              ||.vm - vk.|| < e by A7,A8;
then A9:          sqrt |.(vm-vk).|.(vm-vk).| < e by CSSPACE:def 15;
             reconsider e1=e as Real;
              |.seqmk.|(#)|.seqmk.| is summable by CSSPACE:def 11,
def 20;
then A10:         |.seqmk.|(#)|.seqmk*'.| is summable by Lm19;
A11:         for i be Element of NAT holds
              0 <= (|.seqmk.|(#)|.seqmk*'.|).i
             proof
               let i be Element of NAT;
                (|.seqmk.| (#) |.seqmk*'.|).i
                  =(|.seqmk.|).i * (|.seqmk*'.|).i by SEQ_1:12
                 .=(|.seqmk.|).i * (|.seqmk.|).i by Lm19;
               hence thesis by XREAL_1:65;
             end;
then A12:         0 <= Sum(|.seqmk.|(#)|.seqmk*'.|) by A10,SERIES_1:21;
then A13:         0 <= sqrt Sum(|.seqmk.|(#)|.seqmk*'.|) by SQUARE_1:def 4;
              seqmk(#)seqmk*' is absolutely_summable by Lm20;
then A14:         seqmk(#)seqmk*' is summable by COMSEQ_3:64;
              (for j be Element of NAT holds
              (Re(seqmk(#)seqmk*')).j >= 0 &(Im(seqmk(#)seqmk*')).j = 0)
               by Lm9;
             then |.Sum(seqmk(#)seqmk*').|
               = Sum |.seqmk(#)seqmk*'.| by A14,Lm8
              .= Sum(|.seqmk.|(#)|.seqmk*'.|) by COMSEQ_1:49;
             then sqrt Sum(|.seqmk.|(#)|.seqmk*'.|) < e by A9,Lm18;
             then (sqrt Sum(|.seqmk.|(#)|.seqmk*'.|) )^2 < e1^2
                by A13,SQUARE_1:78;
             then (sqrt Sum(|.seqmk.|(#)|.seqmk*'.|) )^2 < e*e;
then A15:         Sum(|.seqmk.|(#)|.seqmk*'.|) < e*e by A12,SQUARE_1:def 4;
A16:         |.(seqi.m-seqi.k).|*|.(seqi.m-seqi.k).|
               = (|.seqmk.|(#)|.seqmk*'.|).i
             proof
                seq_id((vseq.m) - (vseq.k))
                 =seq_id(seq_id((vseq.m))-seq_id((vseq.k))) by Lm16
                .= seq_id((vseq.m))-seq_id((vseq.k)) by CSSPACE:3
                .= seq_id(vseq.m)+-seq_id(vseq.k) by COMSEQ_1:def 10;
               then seqmk.i
                 =(seq_id(vseq.m)).i+(-seq_id(vseq.k)).i by COMSEQ_1:def 4
                .=(seq_id(vseq.m)).i+(-(seq_id(vseq.k)).i) by COMSEQ_1:def 9
                .=(seq_id(vseq.m)).i-(seq_id(vseq.k)).i
                .=seqi.m -(seq_id(vseq.k)).i by A4
                .=seqi.m-seqi.k by A4;
               then |.(seqi.m-seqi.k).|*|.(seqi.m-seqi.k).|
                 = (|.seqmk.|).i*|.(seqmk.i).| by COMSEQ_1:def 14
                .= (|.seqmk.|).i*(|.seqmk.|).i by COMSEQ_1:def 14;
               then (|.seqmk.|).i*(|.seqmk*'.|).i
                 =|.(seqi.m-seqi.k).|*|.(seqi.m-seqi.k).| by Lm19;
               hence thesis by SEQ_1:12;
             end;
A17:         (|.seqmk.|(#)|.seqmk*'.|).i <= Sum(|.seqmk.|(#)|.seqmk*'.|)
               by A10,A11,RSSPACE2:4;
A18:         0 <= |.(seqi.m-seqi.k).| by COMPLEX1:132;
then A19:         0 <= |.(seqi.m-seqi.k).|*|.(seqi.m-seqi.k).| by XREAL_1:129;
A20:         |.(seqi.m-seqi.k).|*|.(seqi.m-seqi.k).|
               < e*e by A15,A16,A17,XXREAL_0:2;
A21:         sqrt (|.(seqi.m-seqi.k).|*|.(seqi.m-seqi.k).|)
               =sqrt ((|.(seqi.m-seqi.k).|)^2)
              .=|.(seqi.m-seqi.k).| by A18,SQUARE_1:89;
              sqrt (e*e)=sqrt (e1^2)
              .=e by A6,SQUARE_1:89;
             hence |.(seqi.m-seqi.k).| < e by A19,A20,A21,SQUARE_1:95;
           end;
           hence thesis;
         end;
       end;
       hence thesis by COMSEQ_3:46;
     end;
     take lim seqi;
     thus thesis by A4,A5;
   end;

   consider f be Function of NAT,COMPLEX such that
A22:for x be set st x in NAT holds P[x,f.x] from FUNCT_2:sch 1(A2);
   reconsider tseq=f as Complex_Sequence;
A23:
   now let i be Element of NAT;
     reconsider x=i as set;
      ex i0 be Element of NAT st
      x=i0 &
      ex seqi be Complex_Sequence st
       ( for n be Element of NAT holds seqi.n=(seq_id(vseq.n)).i0 ) &
       seqi is convergent & f.x=lim seqi by A22;
     hence ex seqi be Complex_Sequence st
       ( for n be Element of NAT holds seqi.n=(seq_id(vseq.n)).i ) &
       seqi is convergent & tseq.i=lim seqi;
   end;
   set seqt = seq_id(tseq);
A24:
   for e be Real st e >0
    ex k be Element of NAT st
     for n be Element of NAT st n >= k holds
     ( |.seqt-seq_id(vseq.n).|(#)|.seqt-seq_id(vseq.n).| is summable &
     |.Sum((seqt-seq_id(vseq.n))(#)(seqt-seq_id(vseq.n))*').| < e*e )
   proof
     let e1 be Real such that
A25: e1 >0;
     set e=e1/2;
A26: e > 0 by A25,SEQ_2:3;
      e < e1 by A25,XREAL_1:218;
then A27: e*e < e1*e1 by A26,XREAL_1:99;
     consider k be Element of NAT such that
A28:  for n, m be Element of NAT st ( n >= k & m >= k ) holds
       ||.(vseq.n) - (vseq.m).|| < e by A1,A26,CLVECT_2:58;
A29: for m,n be Element of NAT st ( n >= k & m >= k ) holds
      |.seq_id(vseq.n-vseq.m).|(#)|.seq_id(vseq.n-vseq.m).| is summable &
      Sum( |.seq_id(vseq.n-vseq.m).|(#)|.seq_id(vseq.n-vseq.m).|) < e*e &
      for i be Element of NAT holds
       0 <= (|.seq_id(vseq.n-vseq.m).|(#)|.seq_id(vseq.n-vseq.m).|).i
     proof
       let m,n be Element of NAT such that
A30:   n >= k & m >= k;
        ||.(vseq.n) - (vseq.m).|| < e by A28,A30;
then A31:   sqrt |.((vseq.n-vseq.m).|.(vseq.n-vseq.m)).| < e by CSSPACE:def 15;
A32:   |.seq_id(vseq.n-vseq.m).|(#)|.seq_id(vseq.n-vseq.m).| is summable
          by CSSPACE:def 11,def 20;
A33:   for i be Element of NAT holds
         0 <= (|.seq_id(vseq.n-vseq.m).|(#)|.seq_id(vseq.n-vseq.m).|).i
       proof
         let i be Element of NAT;
          (|.seq_id(vseq.n-vseq.m).|(#)|.seq_id(vseq.n-vseq.m).|).i
          =(|.seq_id(vseq.n-vseq.m)(#)seq_id(vseq.n-vseq.m).|).i
             by COMSEQ_1:49
         .=|.(seq_id(vseq.n-vseq.m)(#)seq_id(vseq.n-vseq.m)).i .|
             by COMSEQ_1:def 14;
         hence thesis by COMPLEX1:132;
       end;
       then 0<= Sum (|.seq_id(vseq.n-vseq.m).|
               (#)|.seq_id(vseq.n-vseq.m).|) by A32,SERIES_1:21;
then A34:   0<= Sum |.seq_id(vseq.n-vseq.m)
               (#)seq_id(vseq.n-vseq.m).| by COMSEQ_1:49;
then A35:   0 <= sqrt ( Sum|.seq_id(vseq.n-vseq.m)
               (#)seq_id(vseq.n-vseq.m).| ) by SQUARE_1:def 4;

        seq_id(vseq.n-vseq.m)(#)(seq_id(vseq.n-vseq.m))*'
        is absolutely_summable by Lm20;
then A36:    seq_id(vseq.n-vseq.m)(#)(seq_id(vseq.n-vseq.m))*'
        is summable by COMSEQ_3:64;
        (for j be Element of NAT holds
        (Re(seq_id(vseq.n-vseq.m)(#)(seq_id(vseq.n-vseq.m))*')).j >= 0 &
        (Im(seq_id(vseq.n-vseq.m)(#)(seq_id(vseq.n-vseq.m))*')).j = 0)
         by Lm9;
       then |.Sum(seq_id(vseq.n-vseq.m)
          (#)(seq_id(vseq.n-vseq.m))*').|
         = Sum |.seq_id(vseq.n-vseq.m)
               (#)(seq_id(vseq.n-vseq.m))*'.| by A36,Lm8
        .= Sum(|.seq_id(vseq.n-vseq.m).|
               (#)|.(seq_id(vseq.n-vseq.m))*'.|) by COMSEQ_1:49
        .= Sum(|.seq_id(vseq.n-vseq.m).|
               (#)|.seq_id(vseq.n-vseq.m).|) by Lm19
        .= Sum(|.seq_id(vseq.n-vseq.m)
               (#)seq_id(vseq.n-vseq.m).|) by COMSEQ_1:49;
       then sqrt ( Sum|.seq_id(vseq.n-vseq.m)
               (#)seq_id(vseq.n-vseq.m).| ) < e by A31,Lm18;
       then (sqrt ( Sum|.seq_id(vseq.n-vseq.m)
              (#)seq_id(vseq.n-vseq.m).| ) )^2 < e^2
          by A35,SQUARE_1:78;
       then (sqrt Sum|.seq_id(vseq.n-vseq.m)(#)seq_id(vseq.n-vseq.m).|)^2 < e*
e;
       then Sum|.seq_id(vseq.n-vseq.m)(#)seq_id(vseq.n-vseq.m).| < e*e
         by A34,SQUARE_1:def 4;
       hence thesis by A33,COMSEQ_1:49,CSSPACE:def 11,def 20;
     end;
A37: for n,i be Element of NAT holds
      for rseq be Real_Sequence st
      ( for m be Element of NAT
      holds rseq.m=Partial_Sums(|.seq_id(vseq.m-vseq.n).|
          (#)|.seq_id(vseq.m-vseq.n).|).i ) holds
      (rseq is convergent
        & lim rseq =Partial_Sums(|.seqt-seq_id(vseq.n).|
                   (#)|.(seqt-seq_id(vseq.n)).|).i )
     proof
       let n be Element of NAT;
A38:   for m,k be Element of NAT holds
        seq_id((vseq.m)-(vseq.k))=seq_id(vseq.m)-seq_id(vseq.k)
       proof
         let m,k be Element of NAT;
         thus seq_id((vseq.m) - (vseq.k))
                  =seq_id(seq_id((vseq.m))-seq_id((vseq.k))) by Lm16
                .= seq_id((vseq.m))-seq_id((vseq.k)) by CSSPACE:3;
       end;
       defpred P[Element of NAT] means
        for rseq be Real_Sequence st
       (for m be Element of NAT
       holds rseq.m=Partial_Sums(|.seq_id(vseq.m-vseq.n).|
                       (#)|.seq_id(vseq.m-vseq.n).|).$1 ) holds
       (rseq is convergent
        & lim rseq =Partial_Sums(|.seqt-seq_id(vseq.n).|
                   (#)|.seqt-seq_id(vseq.n).|).$1);

A39:   P[0]
       proof
          now
           let rseq be Real_Sequence such that
A40:       ( for m be Element of NAT
holds rseq.m=Partial_Sums(|.seq_id(vseq.m-vseq.n).|
                 (#)|.seq_id(vseq.m-vseq.n).|).0 );
           thus rseq is convergent &
            lim rseq =Partial_Sums(|.seqt-seq_id(vseq.n).|
               (#)|.seqt-seq_id(vseq.n).| ).0
           proof
             consider rseq0 be Complex_Sequence such that
A41:          ( for m be Element of NAT holds rseq0.m=(seq_id(vseq.m)).0 )
               & rseq0 is convergent & tseq.0=lim rseq0 by A23;

A42:         now
               let m be Element of NAT;
               thus
                rseq.m=Partial_Sums(|.seq_id(vseq.m-vseq.n).|
                         (#)|.seq_id(vseq.m-vseq.n).|).0 by A40
                .=(|.seq_id(vseq.m-vseq.n).|
                    (#)|.seq_id(vseq.m-vseq.n).|).0 by SERIES_1:def 1
                .=(|.seq_id(vseq.m)-seq_id(vseq.n).|
                    (#)|.seq_id(vseq.m-vseq.n).|).0 by A38
                .=(|.seq_id(vseq.m)-seq_id(vseq.n).|
                    (#)|.seq_id(vseq.m)-seq_id(vseq.n).|).0 by A38
                .=(|.seq_id(vseq.m)-seq_id(vseq.n).|).0 *
                    (|.seq_id(vseq.m)-seq_id(vseq.n).| ).0 by SEQ_1:12
                .=(|.seq_id(vseq.m)+-seq_id(vseq.n).|).0 *
                    (|.seq_id(vseq.m)-seq_id(vseq.n).| ).0 by COMSEQ_1:def 10
                .=(|.seq_id(vseq.m)+-seq_id(vseq.n).|).0 *
                    (|.seq_id(vseq.m)+-seq_id(vseq.n).|).0 by COMSEQ_1:def 10
                .=|.(seq_id(vseq.m)+(-seq_id(vseq.n))).0 .| *
                    (|.seq_id(vseq.m)+-seq_id(vseq.n).|).0 by COMSEQ_1:def 14
                .=|.(seq_id(vseq.m)+(-seq_id(vseq.n))).0 .| *
                    |.(seq_id(vseq.m)+(-seq_id(vseq.n))).0 .|
                    by COMSEQ_1:def 14
                .=|.(seq_id(vseq.m)).0+(-seq_id(vseq.n)).0 .| *
                    |.(seq_id(vseq.m)+(-seq_id(vseq.n))).0 .|
                    by COMSEQ_1:def 4
                .=|.(seq_id(vseq.m)).0+(-seq_id(vseq.n)).0 .| *
                    |.(seq_id(vseq.m)).0+(-seq_id(vseq.n)).0 .|
                    by COMSEQ_1:def 4
                .=|.(seq_id(vseq.m)).0+-(seq_id(vseq.n)).0 .| *
                    |.(seq_id(vseq.m)).0+(-seq_id(vseq.n)).0 .|
                    by COMSEQ_1:def 9
                .=|.(seq_id(vseq.m)).0+-(seq_id(vseq.n)).0 .| *
                    |.(seq_id(vseq.m)).0+-(seq_id(vseq.n)).0 .|
                    by COMSEQ_1:def 9
                .=|.rseq0.m-(seq_id(vseq.n)).0 .| *
                    |.(seq_id(vseq.m)).0-(seq_id(vseq.n)).0 .| by A41
                .=|.rseq0.m-(seq_id(vseq.n)).0 .| *
                    |.rseq0.m-(seq_id(vseq.n)).0 .| by A41;
             end;
             then lim rseq = |.tseq.0-(seq_id(vseq.n)).0 .| *
                         |.tseq.0-(seq_id(vseq.n)).0 .| by A41,Lm23
              .= |.tseq.0+(-seq_id(vseq.n)).0 .| *
                   |.tseq.0+-(seq_id(vseq.n)).0 .| by COMSEQ_1:def 9
              .= |.tseq.0+(-seq_id(vseq.n)).0 .| *
                   |.tseq.0+(-seq_id(vseq.n)).0 .| by COMSEQ_1:def 9
              .= |.(tseq+(-seq_id(vseq.n))).0 .| *
                   |.tseq.0+(-seq_id(vseq.n)).0 .| by COMSEQ_1:def 4
              .= |.(tseq+(-seq_id(vseq.n))).0 .| *
                   |.(tseq+(-seq_id(vseq.n))).0 .| by COMSEQ_1:def 4
              .= |.(tseq-seq_id(vseq.n)).0 .| *
                   |.(tseq+(-seq_id(vseq.n))).0 .| by COMSEQ_1:def 10
              .= |.(tseq-seq_id(vseq.n)).0 .| *
                   |.(tseq-seq_id(vseq.n)).0 .| by COMSEQ_1:def 10
              .= (|.tseq-seq_id(vseq.n).|).0 *
                   |.(tseq-seq_id(vseq.n)).0 .| by COMSEQ_1:def 14
              .= (|.tseq-seq_id(vseq.n).|).0 *
                   (|.tseq-seq_id(vseq.n).|).0 by COMSEQ_1:def 14
              .= (|.tseq-seq_id(vseq.n).|
                   (#)|.tseq-seq_id(vseq.n).|).0 by SEQ_1:12
              .=Partial_Sums (|.tseq-seq_id(vseq.n).|
                   (#)|.tseq-seq_id(vseq.n).|).0 by SERIES_1:def 1
              .=Partial_Sums(|.seq_id(tseq)-seq_id(vseq.n).|
                   (#)|.tseq-seq_id(vseq.n).|).0 by CSSPACE:3
              .=Partial_Sums(|.seqt-seq_id(vseq.n).|
                          (#)|.seqt-seq_id(vseq.n).|).0 by CSSPACE:3;
             hence thesis by A41,A42,Lm23;
           end;
         end;
         hence thesis;
       end;
A43:   for i be Element of NAT st P[i] holds P[i+1]
       proof
          now
           let i be Element of NAT such that
A44:       for rseq be Real_Sequence st
            ( for m be Element of NAT holds
               rseq.m=Partial_Sums(|.seq_id(vseq.m-vseq.n).|
                       (#)|.seq_id(vseq.m-vseq.n).|).i ) holds
              (rseq is convergent
                & lim rseq =Partial_Sums(|.seqt-seq_id(vseq.n).|
                   (#)|.seqt-seq_id(vseq.n).|).i );
           thus for rseq be Real_Sequence st
              ( for m be Element of NAT holds
                rseq.m=Partial_Sums(|.seq_id(vseq.m-vseq.n).|
                 (#)|.seq_id(vseq.m-vseq.n).|).(i+1) ) holds
                (rseq is convergent
                & lim rseq =Partial_Sums(|.seqt-seq_id(vseq.n).|
                   (#)|.seqt-seq_id(vseq.n).| ).(i+1) )
           proof
             let rseq be Real_Sequence such that
A45:         for m be Element of NAT holds
              rseq.m=Partial_Sums(|.seq_id(vseq.m-vseq.n).|
                 (#)|.seq_id(vseq.m-vseq.n).|).(i+1);
             deffunc F(Element of NAT)=Partial_Sums(|.seq_id(vseq.$1-vseq.n).|
                       (#)|.seq_id(vseq.$1-vseq.n).|).i;
             consider rseqb be Real_Sequence such that
A46:           for m be Element of NAT holds rseqb.m = F(m) from SEQ_1:sch 1;
A47:         rseqb is convergent &
               lim rseqb =Partial_Sums(|.seqt-seq_id(vseq.n).|
                  (#)|.seqt-seq_id(vseq.n).| ).i by A44,A46;
             consider seq0 be Complex_Sequence such that
A48:          ( for m be Element of NAT holds seq0.m=(seq_id(vseq.m)).(i+1) ) &
               seq0 is convergent & tseq.(i+1)=lim seq0 by A23;
A49:         now let m be Element of NAT;
               thus
                rseq.m
                = Partial_Sums(|.seq_id(vseq.m-vseq.n).|
                    (#)|.seq_id(vseq.m-vseq.n).|).(i+1) by A45
               .= (|.seq_id(vseq.m-vseq.n).|
                    (#)|.seq_id(vseq.m-vseq.n).|).(i+1)
                + Partial_Sums(|.seq_id(vseq.m-vseq.n).|
                    (#)|.seq_id(vseq.m-vseq.n).|).i by SERIES_1:def 1
               .= ( |.seq_id(vseq.m)-seq_id(vseq.n).|
                    (#)|.seq_id(vseq.m-vseq.n).|).(i+1)
                + Partial_Sums(|.seq_id(vseq.m-vseq.n).|
                    (#)|.seq_id(vseq.m-vseq.n).|).i by A38
               .= ( |.seq_id(vseq.m)-seq_id(vseq.n).|
                    (#)|.seq_id(vseq.m-vseq.n).|).(i+1) + rseqb.m by A46
               .= ( |.seq_id(vseq.m)-seq_id(vseq.n).|
                    (#)|.seq_id(vseq.m)-seq_id(vseq.n).|).(i+1)+rseqb.m by A38
               .= ( |.seq_id(vseq.m)-seq_id(vseq.n).| ).(i+1) *
                  ( |.seq_id(vseq.m)-seq_id(vseq.n).| ).(i+1)
                  +rseqb.m by SEQ_1:12
               .= ( |.seq_id(vseq.m)+-seq_id(vseq.n).| ).(i+1) *
                  ( |.seq_id(vseq.m)-seq_id(vseq.n).| ).(i+1)
                  +rseqb.m by COMSEQ_1:def 10
               .= ( |.seq_id(vseq.m)+-seq_id(vseq.n).| ).(i+1) *
                  ( |.seq_id(vseq.m)+-seq_id(vseq.n).| ).(i+1)
                  +rseqb.m by COMSEQ_1:def 10
               .= |.(seq_id(vseq.m)+-seq_id(vseq.n)).(i+1).| *
                  ( |.seq_id(vseq.m)+-seq_id(vseq.n).| ).(i+1)
                  +rseqb.m by COMSEQ_1:def 14
               .= |.(seq_id(vseq.m)+-seq_id(vseq.n)).(i+1).| *
                  |.(seq_id(vseq.m)+-seq_id(vseq.n)).(i+1).|
                  +rseqb.m by COMSEQ_1:def 14
               .= |.(seq_id(vseq.m)).(i+1)+(-seq_id(vseq.n)).(i+1).| *
                  |.(seq_id(vseq.m)+-seq_id(vseq.n)).(i+1).|
                  +rseqb.m by COMSEQ_1:def 4
               .= |.(seq_id(vseq.m)).(i+1)+(-seq_id(vseq.n)).(i+1).| *
                  |.(seq_id(vseq.m)).(i+1)+(-seq_id(vseq.n)).(i+1).|
                  +rseqb.m by COMSEQ_1:def 4
               .= |.(seq_id(vseq.m)).(i+1)+-(seq_id(vseq.n)).(i+1).| *
                  |.(seq_id(vseq.m)).(i+1)+(-seq_id(vseq.n)).(i+1).|
                  +rseqb.m by COMSEQ_1:def 9
               .= |.(seq_id(vseq.m)).(i+1)-(seq_id(vseq.n)).(i+1).| *
                  |.(seq_id(vseq.m)).(i+1)+-(seq_id(vseq.n)).(i+1).|
                  +rseqb.m by COMSEQ_1:def 9
               .= |.seq0.m-(seq_id(vseq.n)).(i+1).| *
                  |.(seq_id(vseq.m)).(i+1)-(seq_id(vseq.n)).(i+1).|
                  +rseqb.m by A48
               .= |.seq0.m-(seq_id(vseq.n)).(i+1).| *
                  |.seq0.m-(seq_id(vseq.n)).(i+1).|
                  +rseqb.m by A48;
             end;
             then lim rseq = |. lim seq0-(seq_id(vseq.n)).(i+1) .| *
                        |. lim seq0-(seq_id(vseq.n)).(i+1) .| + lim rseqb
                     by A47,A48,Lm24
             .= |. tseq.(i+1)+(-seq_id(vseq.n)).(i+1) .| *
                |. tseq.(i+1)+-(seq_id(vseq.n)).(i+1) .|
                      + lim rseqb by A48,COMSEQ_1:def 9
             .= |. tseq.(i+1)+(-seq_id(vseq.n)).(i+1) .| *
                |. tseq.(i+1)+(-seq_id(vseq.n)).(i+1) .|
                      + lim rseqb by COMSEQ_1:def 9
             .= |.(tseq+(-seq_id(vseq.n))).(i+1).| *
                |. tseq.(i+1)+(-seq_id(vseq.n)).(i+1) .|
                      + lim rseqb by COMSEQ_1:def 4
             .= |.(tseq+(-seq_id(vseq.n))).(i+1).| *
                |.(tseq+(-seq_id(vseq.n))).(i+1).|
                      + lim rseqb by COMSEQ_1:def 4
             .= (|.tseq+(-seq_id(vseq.n)).|).(i+1) *
                |.(tseq+(-seq_id(vseq.n))).(i+1).|
                      + lim rseqb by COMSEQ_1:def 14
             .= (|.tseq+(-seq_id(vseq.n)).|).(i+1) *
                (|.tseq+(-seq_id(vseq.n)).|).(i+1)
                      + lim rseqb by COMSEQ_1:def 14
             .= (|.tseq-seq_id(vseq.n).|).(i+1) *
                (|.tseq+(-seq_id(vseq.n)).|).(i+1)
                      + lim rseqb by COMSEQ_1:def 10
             .= (|.tseq-seq_id(vseq.n).|).(i+1) *
                (|.tseq-seq_id(vseq.n).|).(i+1)
                      + lim rseqb by COMSEQ_1:def 10
             .= ( |.tseq-seq_id(vseq.n).|(#)|.tseq-seq_id(vseq.n).|).(i+1)
                + lim rseqb by SEQ_1:12
             .= ( |.tseq-seq_id(vseq.n).|(#)|.tseq-seq_id(vseq.n).|).(i+1)
                + Partial_Sums(|.seqt-seq_id(vseq.n).|
                      (#)|.seqt-seq_id(vseq.n).| ).i by A44,A46
             .= ( |.tseq-seq_id(vseq.n).|(#)|.seqt-seq_id(vseq.n).| ).(i+1)
                + Partial_Sums(|.seqt-seq_id(vseq.n).|
                      (#)|.seqt-seq_id(vseq.n).| ).i by CSSPACE:3
             .= ( |.seqt-seq_id(vseq.n).|(#)|.seqt-seq_id(vseq.n).| ).(i+1)
                + Partial_Sums(|.seqt-seq_id(vseq.n).|
                      (#)|.seqt-seq_id(vseq.n).|).i by CSSPACE:3
             .= Partial_Sums(|.seqt-seq_id(vseq.n).|
                      (#)|.seqt-seq_id(vseq.n).|).(i+1)
                     by SERIES_1:def 1;
             hence thesis by A47,A48,A49,Lm24;
           end;
         end;
         hence thesis;
       end;
        for i be Element of NAT holds P[i] from NAT_1:sch 1(A39,A43);
       hence thesis;
     end;
      for n be Element of NAT st n >= k holds
        ( |.seqt-seq_id(vseq.n).|(#)|.seqt-seq_id(vseq.n).| is summable &
          |.Sum((seqt-seq_id(vseq.n))(#)(seqt-seq_id(vseq.n))*').| < e1*e1 )
     proof
       let n be Element of NAT such that
A50:   n >= k;
A51:   for i be Element of NAT st 0 <= i holds
       Partial_Sums(|.seqt-seq_id(vseq.n).|
                       (#)|.seqt-seq_id(vseq.n).| ).i <=e*e
       proof
         let i be Element of NAT such that 0 <=i;
         deffunc F(Element of NAT)
          = Partial_Sums(|.(seq_id(vseq.$1 - vseq.n)).|
                       (#)|.(seq_id(vseq.$1 - vseq.n)).|).i;
         consider rseq be Real_Sequence such that
A52:     for m be Element of NAT holds rseq.m=F(m) from SEQ_1:sch 1;
A53:     rseq is convergent by A37,A52;
A54:     lim rseq = Partial_Sums(|.seqt-seq_id(vseq.n).|
                   (#)|.seqt-seq_id(vseq.n).| ).i by A37,A52;
          for m be Element of NAT st m >= k holds rseq.m <= e*e
         proof
           let m be Element of NAT such that
A55:       m >= k;
A56:       rseq.m=Partial_Sums(|.seq_id(vseq.m-vseq.n).|
                       (#)|.seq_id(vseq.m-vseq.n).|).i by A52;
A57:       |.seq_id(vseq.m-vseq.n).|(#)|.seq_id(vseq.m-vseq.n).| is summable &
            Sum(|.seq_id(vseq.m-vseq.n).|(#)|.seq_id(vseq.m-vseq.n).|) < e*e &
            for i be Element of NAT holds
             0 <= (|.seq_id(vseq.m-vseq.n).|(#)|.seq_id(vseq.m-vseq.n).| ).i
              by A29,A50,A55;
           then Partial_Sums(|.seq_id(vseq.m-vseq.n).|
                        (#)|.seq_id(vseq.m-vseq.n).|).i
             <=Sum(|.seq_id(vseq.m-vseq.n).|(#)|.seq_id(vseq.m-vseq.n).|)
               by RSSPACE2:4;
           hence thesis by A56,A57,XXREAL_0:2;
         end;
         hence Partial_Sums(|.seqt-seq_id(vseq.n).|
              (#)|.seqt-seq_id(vseq.n).|).i <=e*e by A53,A54,RSSPACE2:6;
       end;
A58:   for i be Element of NAT holds
        0 <= ( |.seqt-seq_id(vseq.n).|(#)|.seqt-seq_id(vseq.n).|) .i
       proof
         let i be Element of NAT;
          (|.seqt-seq_id(vseq.n).|(#)|.seqt-seq_id(vseq.n).|).i
            =(|.seqt-seq_id(vseq.n).|).i
              *(|.seqt-seq_id(vseq.n).|).i by SEQ_1:12;
         hence thesis by XREAL_1:65;
       end;
A59:   Partial_Sums(|.seqt-seq_id(vseq.n).|
          (#)|.seqt-seq_id(vseq.n).| ) is bounded_above
       proof
          now let i be Element of NAT;
            0 <= i by NAT_1:2;
           then Partial_Sums(|.seqt-seq_id(vseq.n).|
              (#)|.seqt-seq_id(vseq.n).| ).i <=e*e by A51;
           hence Partial_Sums(|.seqt-seq_id(vseq.n).|
            (#)|.seqt-seq_id(vseq.n).| ).i < e1*e1 by A27,XXREAL_0:2;
         end;
         hence thesis by SEQ_2:def 3;
       end;
then A60:    |.seqt-seq_id(vseq.n).|(#)|.seqt-seq_id(vseq.n).| is summable
          by A58,SERIES_1:20;
then A61:   Partial_Sums( |.seqt-seq_id(vseq.n).|
                (#)|.seqt-seq_id(vseq.n).| ) is convergent
          by SERIES_1:def 2;
A62:   Sum(|.seqt-seq_id(vseq.n).|(#)|.seqt-seq_id(vseq.n).|)
         = lim Partial_Sums( |.seqt-seq_id(vseq.n).|
                       (#)|.seqt-seq_id(vseq.n).| ) by SERIES_1:def 3;
        lim Partial_Sums(|.seqt-seq_id(vseq.n).|(#)|.seqt-seq_id(vseq.n).|)
         <=e*e by A51,A61,RSSPACE2:6;
then A63:    Sum(|.seqt-seq_id(vseq.n).|(#)|.seqt-seq_id(vseq.n).|) < e1*e1
         by A27,A62,XXREAL_0:2;
        |.seqt-seq_id(vseq.n).| = |.(seqt-seq_id(vseq.n))*'.| by Lm19;
then A64:    Sum(|.(seqt-seq_id(vseq.n))(#)(seqt-seq_id(vseq.n))*'.|) < e1*e1
         by A63,COMSEQ_1:49;

        |.seqt-seq_id(vseq.n).|(#)|.(seqt-seq_id(vseq.n))*'.| is summable
         by A60,Lm19;
       then |.(seqt-seq_id(vseq.n))(#)(seqt-seq_id(vseq.n))*'.| is summable
         by COMSEQ_1:49;
       then (seqt-seq_id(vseq.n))(#)(seqt-seq_id(vseq.n))*' is
absolutely_summable
         by COMSEQ_3:def 11;
       then |.Sum((seqt-seq_id(vseq.n))(#)(seqt-seq_id(vseq.n))*').|
        <= Sum(|.(seqt-seq_id(vseq.n))(#)(seqt-seq_id(vseq.n))*'.|) by Lm7;
       hence thesis by A58,A59,A64,XXREAL_0:2,SERIES_1:20;
     end;
     hence thesis;
   end;

A65:
   |.seq_id(tseq).|(#)|.seq_id(tseq).| is summable
   proof
A66: for i be Element of NAT holds 0 <= (|.seq_id(tseq).|(#)|.seq_id(tseq).|).i
     proof
       let i be Element of NAT;
        (|.seq_id(tseq).|(#)|.seq_id(tseq).|).i
         =(|.seq_id(tseq).|).i * (|.seq_id(tseq).|).i by SEQ_1:12;
       hence thesis by XREAL_1:65;
     end;
     consider m be Element of NAT such that
A67: for n be Element of NAT st n >= m holds
      ( |.seqt-seq_id(vseq.n).|(#)|.seqt-seq_id(vseq.n).|
       is summable &
        |.Sum((seq_id(tseq)-seq_id(vseq.n))
        (#)(seq_id(tseq)-seq_id(vseq.n))*').| < 1*1 ) by A24;

A68: |.seqt-seq_id(vseq.m).|(#)|.seqt-seq_id(vseq.m).| is summable by A67;
A69: |.seq_id(vseq.m).|(#)|.seq_id(vseq.m).| is summable
        by CSSPACE:def 11,def 20;
     set a=|.seqt-seq_id(vseq.m).|(#)|.seqt-seq_id(vseq.m).|;
     set b=|.seq_id(vseq.m).|(#)|.seq_id(vseq.m).|;
     set d=|.seqt.|(#)|.seqt.|;
A70: 2(#)a is summable by A68,SERIES_1:13;
      2(#)b is summable by A69,SERIES_1:13;
then A71: 2(#)a + 2(#)b is summable by A70,SERIES_1:10;
      for i be Element of NAT holds d.i <= (2(#)a + 2(#)b).i
     proof
       let i be Element of NAT;
A72:   d.i=(|.seqt.|).i * (|.seqt.|).i by SEQ_1:12
         .=|.((seqt).i).| * (|.seqt.|).i by COMSEQ_1:def 14
         .=|.((seqt).i).| * |.((seqt).i).| by COMSEQ_1:def 14;
A73:   (2(#)a + 2(#)b).i = (2(#)a).i + (2(#)b).i by SEQ_1:11
                      .=2*(a.i)+ (2(#)b).i by SEQ_1:13
                      .=2*(a.i)+ 2*(b.i) by SEQ_1:13;
        (|.seqt-seq_id(vseq.m).|).i
          = (|.seqt+-seq_id(vseq.m).|).i by COMSEQ_1:def 10
         .= |.((seqt+-seq_id(vseq.m)).i).| by COMSEQ_1:def 14
         .= |.((seqt).i+(-seq_id(vseq.m)).i).| by COMSEQ_1:def 4
         .= |.((seqt).i+(-(seq_id(vseq.m)).i)).| by COMSEQ_1:def 9
         .= |.((seqt).i-(seq_id(vseq.m)).i).|;
then A74:   a.i = |.((seqt).i-(seq_id(vseq.m)).i).|
         *|.((seq_id(tseq)).i-(seq_id(vseq.m)).i).| by SEQ_1:12;

       set x=(seqt).i;
       set y=(seq_id(vseq.m)).i;

A75:   2*(a.i)=2*|.(x-y).|*|.(x-y).| by A74;
        2*(b.i)=2*( (|.seq_id(vseq.m).|).i*(|.seq_id(vseq.m).|).i ) by SEQ_1:12
             .=2*(|.y.|*(|.seq_id(vseq.m).|).i) by COMSEQ_1:def 14
             .=2*(|.y.|*|.y.|) by COMSEQ_1:def 14
             .=2*|.y.|*|.y.|;
       hence thesis by A72,A73,A75,Lm22;
     end;

     hence d is summable by A66,A71,SERIES_1:24;
   end;
    tseq in the_set_of_ComplexSequences by CSSPACE:def 1;
   then reconsider tv=tseq as Point of Complex_l2_Space
     by A65,CSSPACE:def 11,def 20;

    for e be Real st
    e > 0 ex m be Element of NAT st
     for n be Element of NAT st n >= m holds ||.(vseq.n) - tv.|| < e
   proof
   let e be Real such that
A76: e > 0;

     consider m be Element of NAT such that
A77: for n be Element of NAT st n >= m holds
      ( |.seqt-seq_id(vseq.n).|(#)|.seqt-seq_id(vseq.n).| is summable &
        |.Sum((seqt-(seq_id(vseq.n)))(#)(seqt-(seq_id(vseq.n)))*').| < e*e )
         by A24,A76;
      now
       let n be Element of NAT such that
A78:   n >= m;
       set seqvn = seq_id(vseq.n);
A79:   |.Sum((seqt-seqvn)(#)(seqt-seqvn)*').| < e*e by A77,A78;
        tseq in the_set_of_ComplexSequences by CSSPACE:def 1;
       then reconsider u=tseq as VECTOR of Complex_l2_Space
         by A65,CSSPACE:def 11,def 20;
       reconsider v=vseq.n as VECTOR of Complex_l2_Space;
        seq_id(u-v) = u-v by Lm12;
       then seq_id(u-v)=seqt-seqvn by Lm16;
then A80:   |.((u-v).|.(u-v)).| < e*e by A79,Lm18;
        0 <= Re ((u-v).|.(u-v)) by CSSPACE:def 13;
       then 0 <= |.((u-v).|.(u-v)).| by CSSPACE:36;
       then sqrt |.((u-v).|.(u-v)).| < sqrt (e*e) by A80,SQUARE_1:95;
then A81:   sqrt |.((u-v).|.(u-v)).| < sqrt (e^2);
        ||.(vseq.n) - tv.|| =||.-(tv-(vseq.n)).|| by RLVECT_1:47
                          .=||.tv-(vseq.n).|| by CSSPACE:49
                          .=sqrt |.((u-v).|.(u-v)).| by CSSPACE:def 15;
       hence ||.(vseq.n) - tv.|| < e by A76,A81,SQUARE_1:89;
     end;
     hence thesis;
   end;
   hence thesis by CLVECT_2:9;
end;
then Lm25: Complex_l2_Space is complete by CLVECT_2:def 12;

registration
  cluster Complex_l2_Space -> Hilbert; :: complete;
  coherence by Lm25,CLVECT_2:def 13;
end;

begin  :: Some corollaries of complex sequences

theorem
 for z1, z2 be Complex st
 (Re z1)*(Im z2) = (Re z2)*(Im z1) & (Re z1)*(Re z2)+(Im z1)*(Im z2) >= 0 holds
  |.z1 + z2.| = |.z1.| + |.z2.| by Lm4;

theorem
 for x,y be Complex holds 2*|.x*y.| <= |.x.|^2 + |.y.|^2 by Lm21;

theorem
 for x,y be Complex holds
  |.x+y.|*|.x+y.| <= 2*|.x.|*|.x.| + 2*|.y.|*|.y.| &
  |.x.|*|.x.| <= 2*|.x-y.|*|.x-y.| + 2*|.y.|*|.y.| by Lm22;

theorem
 for seq be Complex_Sequence holds seq = (seq*')*' by Lm1;

theorem
 for seq be Complex_Sequence holds Partial_Sums (seq*') = (Partial_Sums seq)*'
 by Lm2;

theorem
 for seq be Complex_Sequence, n be Element of NAT st
 (for i be Element of NAT holds (Re seq).i >= 0 & (Im seq).i = 0) holds
   (|.Partial_Sums seq.|).n = (Partial_Sums |.seq.|).n by Lm5;

theorem
 for seq be Complex_Sequence st seq is summable holds
 Sum (seq*') = (Sum seq)*' by Lm6;

theorem
 for seq be Complex_Sequence st seq is absolutely_summable holds
  |. Sum seq .| <= Sum |.seq.| by Lm7;

theorem
 for seq be Complex_Sequence st seq is summable &
 (for n be Element of NAT holds (Re seq).n >= 0 & (Im seq).n = 0) holds
  |. Sum seq .| = Sum |.seq.| by Lm8;

theorem
 for seq be Complex_Sequence, n be Element of NAT holds
 (Re (seq(#)seq*')).n >= 0 & (Im (seq(#)seq*')).n = 0 by Lm9;

theorem
 for seq be Complex_Sequence st
 ( seq is absolutely_summable & Sum |.seq.|=0 ) holds
    for n be Element of NAT holds seq.n =0c
proof
   let seq be Complex_Sequence such that
A1:seq is absolutely_summable and
A2:Sum |.seq.|=0;

A3:Partial_Sums |.seq.| is bounded_above by A1,COMSEQ_3:62;
A4:for n be Element of NAT holds (Partial_Sums |.seq.|).n <= Sum |.seq.|
   proof
     let n be Element of NAT;
      (Partial_Sums(|.seq.|)).n <= lim Partial_Sums |.seq.| by A3,SEQ_4:54;
     hence (Partial_Sums(|.seq.|)).n <=Sum |.seq.| by SERIES_1:def 3;
   end;
A5:now assume
      ex n be Element of NAT st (|.seq.|).n <> 0;
     then consider n1 be Element of NAT such that
A6:  (|.seq.|).n1 <> 0;
A7:  for n be Element of NAT holds 0 <= Partial_Sums(|.seq.|).n
     proof
       let n be Element of NAT;
A8:    n=n+0;
A9:   Partial_Sums(|.seq.|).0 = (|.seq.|).0 by SERIES_1:def 1;
        (|.seq.|).0 = |.(seq.0).| by COMSEQ_1:def 14;
       then 0 <=(|.seq.|).0 by COMPLEX1:132;
       hence 0 <=Partial_Sums(|.seq.|).n by A8,A9,SEQM_3:11;
     end;
      Partial_Sums(|.seq.|).n1 >0
     proof
        now per cases;
         case
          n1=0;
         then Partial_Sums(|.seq.|).(n1) <> 0 by A6,SERIES_1:def 1;
         hence Partial_Sums(|.seq.|).(n1) > 0 by A7;
         end;
         case
A10:     n1<>0;
          0 <= n1 by NAT_1:2;
then A11:     0 + 1 <= n1 by A10,INT_1:20;
         set nn=n1-1;
A12:     nn is Element of NAT by A11,INT_1:18;
A13:     nn+1 =n1;
          (|.seq.|).n1 = |.(seq.n1).| by COMSEQ_1:def 14;
then A14:     0 <= (|.seq.|).n1 by COMPLEX1:132;
          0 <= Partial_Sums(|.seq.|).nn by A7,A12;
         then (|.seq.|).(n1)+0 <= (|.seq.|).(n1)+Partial_Sums(|.seq.|).nn
           by XREAL_1:9;
         hence Partial_Sums(|.seq.|).n1 > 0 by A6,A12,A13,A14,SERIES_1:def 1;
         end;
       end;
       hence Partial_Sums(|.seq.|).n1 > 0;
     end;
     hence contradiction by A2,A4;
   end;
    for n be Element of NAT holds seq.n =0c
   proof
     let n be Element of NAT;
      0 = (|.seq.|).n by A5
      .= |.(seq.n).| by COMSEQ_1:def 14;
     hence thesis by COMPLEX1:131;
   end;
   hence thesis;
end;

theorem
 for seq being Complex_Sequence holds
 |.seq.| = |.seq*'.| by Lm19;

theorem
 for c be Complex, seq be Complex_Sequence st seq is convergent
for rseq be Real_Sequence st
  (for m be Element of NAT holds rseq .m = |.seq.m-c.|*|.seq.m-c.|)
holds (rseq is convergent & lim rseq = |.lim seq-c.|*|.lim seq-c.| )
 by Lm23;

theorem
 for c be Complex, seq1 be Real_Sequence, seq be Complex_Sequence st
 seq is convergent & seq1 is convergent
  for rseq be Real_Sequence st
  (for i be Element of NAT holds rseq.i = |.seq.i-c.|*|.seq.i-c.|+seq1.i) holds
   (rseq is convergent & lim rseq = |.lim seq-c.|*|.lim seq-c.|+lim seq1 )
    by Lm24;

theorem
 for c be Complex, seq be Complex_Sequence st seq is convergent
for rseq be Real_Sequence st
  (for m be Element of NAT holds rseq .m = |.seq.m-c.|*|.seq.m-c.|)
holds (rseq is convergent & lim rseq = |.lim seq-c.|*|.lim seq-c.| ) by Lm23;

theorem
 for c be Complex, seq1 be Real_Sequence, seq be Complex_Sequence st
 seq is convergent & seq1 is convergent
  for rseq be Real_Sequence st
  (for i be Element of NAT holds rseq.i = |.seq.i-c.|*|.seq.i-c.|+seq1.i) holds
   (rseq is convergent & lim rseq = |.lim seq-c.|*|.lim seq-c.|+lim seq1 )
    by Lm24;
