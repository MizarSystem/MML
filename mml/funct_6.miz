:: Cartesian Product of Functions
::  by Grzegorz Bancerek
::
:: Received September 30, 1991
:: Copyright (c) 1991 Association of Mizar Users

environ

 vocabularies FUNCT_1, SUBSET_1, NUMBERS, FUNCT_2, XBOOLE_0, CARD_3, FINSEQ_1,
      RELAT_1, FINSEQ_2, FUNCOP_1, TARSKI, ZFMISC_1, FUNCT_5, PARTFUN1,
      SETFAM_1, FINSEQ_4, MCART_1, FUNCT_6;
 notations TARSKI, XBOOLE_0, ENUMSET1, ZFMISC_1, SUBSET_1, NUMBERS, RELAT_1,
      FUNCT_1, MCART_1, FINSEQ_1, SETFAM_1, FUNCT_2, BINOP_1, PARTFUN1,
      FUNCT_3, WELLORD2, FUNCOP_1, FINSEQ_2, FUNCT_4, FUNCT_5, CARD_3;
 constructors ENUMSET1, SETFAM_1, PARTFUN1, WELLORD2, BINOP_1, FUNCT_3,
      FUNCOP_1, FUNCT_4, FUNCT_5, FINSEQ_2, CARD_3, RELSET_1;
 registrations XBOOLE_0, RELAT_1, FUNCT_1, FUNCT_2, FUNCOP_1, FINSEQ_1,
      ORDINAL1, RELSET_1;
 requirements NUMERALS, BOOLE, SUBSET;
 definitions TARSKI, FUNCT_1, WELLORD2, XBOOLE_0, BINOP_1, FUNCOP_1;
 theorems TARSKI, ENUMSET1, ZFMISC_1, FINSEQ_2, MCART_1, FUNCT_1, FINSEQ_1,
      SETFAM_1, FUNCT_2, FUNCT_3, FUNCOP_1, CARD_1, CARD_3, FINSEQ_3, FUNCT_4,
      FUNCT_5, PARTFUN1, WELLORD2, RELAT_1, XBOOLE_0, XBOOLE_1;
 schemes FUNCT_1, PARTFUN1, CARD_3, CLASSES1, XBOOLE_0;

begin

reserve x,y,y1,y2,z,a,b,X,Y,Z,V1,V2 for set,
  f,g,h,h',f1,f2 for Function,
  i
  for Element of NAT,
  P for Permutation of X,
  D,D1,D2,D3 for non empty set,
  d1
  for Element of D1,
  d2 for Element of D2,
  d3 for Element of D3;

theorem Th1:
  x in product <*X*> iff ex y st y in X & x = <*y*>
proof
A1: dom <*X*> = Seg 1 by FINSEQ_1:def 8;
A2: <*X*>.1 = X by FINSEQ_1:def 8;
A3: 1 in Seg 1 by FINSEQ_1:4,TARSKI:def 1;
  thus x in product <*X*> implies ex y st y in X & x = <*y*>
  proof
    assume
    x in product <*X*>;
    then consider f such that
A4: x = f and
A5: dom f = dom <*X*> and
A6: for x st x in dom <*X*> holds f.x in <*X*>.x by CARD_3:def 5;
    reconsider f as FinSequence by A1,A5,FINSEQ_1:def 2;
    take f.1;
    thus thesis by A1,A3,A2,A4,A5,A6,FINSEQ_1:def 8;
  end;
  given y such that
A7: y in X and
A8: x = <*y*>;
A9: now
    let a;
    assume
    a in Seg 1;
    then a = 1 by FINSEQ_1:4,TARSKI:def 1;
    hence <*y*>.a in <*X*>.a by A2,A7,FINSEQ_1:def 8;
  end;
  dom <*y*> = Seg 1 by FINSEQ_1:def 8;
  hence thesis by A1,A8,A9,CARD_3:def 5;
end;

theorem Th2:
  z in product <*X,Y*> iff ex x,y st x in X & y in Y & z = <*x,y*>
proof
A1: <*X,Y*>.1 = X & <*X,Y*>.2 = Y by FINSEQ_1:61;
  len <*X,Y*> = 2 by FINSEQ_1:61;
  then
A2: dom <*X,Y*> = Seg 2 by FINSEQ_1:def 3;
A3: 1 in Seg 2 & 2 in Seg 2 by FINSEQ_1:4,TARSKI:def 2;
  thus z in product <*X,Y*> implies ex x,y st x in X & y in Y & z = <*x,y*>
  proof
    assume
    z in product <*X,Y*>;
    then consider f such that
A4: z = f and
A5: dom f = dom <*X,Y*> and
A6: for x st x in dom <*X,Y*> holds f.x in <*X,Y*>.x by CARD_3:def
    5;
    reconsider f as FinSequence by A2,A5,FINSEQ_1:def 2;
    take f.1, f.2;
    len f = 2 by A2,A5,FINSEQ_1:def 3;
    hence thesis by A2,A3,A1,A4,A6,FINSEQ_1:61;
  end;
  given x,y such that
A7: x in X & y in Y and
A8: z = <*x,y*>;
A9: now
    let a;
    assume
    a in Seg 2;
    then a = 1 or a = 2 by FINSEQ_1:4,TARSKI:def 2;
    hence <*x,y*>.a in <*X,Y*>.a by A1,A7,FINSEQ_1:61;
  end;
  len <*x,y*> = 2 by FINSEQ_1:61;
  then dom <*x,y*> = Seg 2 by FINSEQ_1:def 3;
  hence thesis by A2,A8,A9,CARD_3:def 5;
end;

theorem Th3:
  a in product <*X,Y,Z*> iff ex x,y,z st x in X & y in Y & z in Z &
  a = <*x,y,z*>
proof
A1: 3 in Seg 3 by ENUMSET1:def 1,FINSEQ_3:1;
A2: <*X,Y,Z*>.1 = X & <*X,Y,Z*>.2 = Y by FINSEQ_1:62;
A3: <*X,Y,Z*>.3 = Z by FINSEQ_1:62;
  len <*X,Y,Z*> = 3 by FINSEQ_1:62;
  then
A4: dom <*X,Y,Z*> = Seg 3 by FINSEQ_1:def 3;
A5: 1 in Seg 3 & 2 in Seg 3 by ENUMSET1:def 1,FINSEQ_3:1;
  thus a in product <*X,Y,Z*> implies ex x,y,z st x in X & y in Y & z in Z & a
  = <*x,y,z*>
  proof
    assume
    a in product <*X,Y,Z*>;
    then consider f such that
A6: a = f and
A7: dom f = dom <*X,Y,Z*> and
A8: for x st x in dom <*X,Y,Z*> holds f.x in <*X,Y,Z*>.x by CARD_3
    :def 5;
    reconsider f as FinSequence by A4,A7,FINSEQ_1:def 2;
    take f.1, f.2, f.3;
    len f = 3 by A4,A7,FINSEQ_1:def 3;
    hence thesis by A4,A5,A1,A2,A3,A6,A8,FINSEQ_1:62;
  end;
  given x,y,z such that
A9: x in X & y in Y & z in Z and
A10: a = <*x,y,z*>;
A11: now
    let a;
    assume
    a in Seg 3;
    then a = 1 or a = 2 or a = 3 by ENUMSET1:def 1,FINSEQ_3:1;
    hence <*x,y,z*>.a in <*X,Y,Z*>.a by A2,A3,A9,FINSEQ_1:62;
  end;
  len <*x,y,z*> = 3 by FINSEQ_1:62;
  then dom <*x,y,z*> = Seg 3 by FINSEQ_1:def 3;
  hence thesis by A4,A10,A11,CARD_3:def 5;
end;

theorem
  product <*D*> = 1-tuples_on D
proof
  <*D*> = 1 |-> D by FINSEQ_2:73
    .= Seg 1 --> D by FINSEQ_2:def 2;
  then product <*D*> = Funcs(Seg 1,D) by CARD_3:20;
  hence thesis by FINSEQ_2:111;
end;

theorem Th5:
  product <*D1,D2*> = { <*d1,d2*>: not contradiction }
proof
  thus product <*D1,D2*> c= { <*d1,d2*>: not contradiction }
  proof
    let a;
    assume
    a in product <*D1,D2*>;
    then ex x,y st x in D1 & y in D2 & a = <*x,y*> by Th2;
    hence thesis;
  end;
  let a;
  assume
  a in { <*d1,d2*>: not contradiction };
  then ex d1,d2 st a = <*d1,d2*>;
  hence thesis by Th2;
end;

theorem
  product <*D,D*> = 2-tuples_on D
proof
  thus product <*D,D*> = {<*d1,d2*> where d1 is Element of D, d2 is Element of
D: not contradiction} by Th5
    .= 2-tuples_on D by FINSEQ_2:119;
end;

theorem Th7:
  product <*D1,D2,D3*> = { <*d1,d2,d3*>: not contradiction }
proof
  thus product <*D1,D2,D3*> c= { <*d1,d2,d3*>: not contradiction }
  proof
    let a;
    assume
    a in product <*D1,D2,D3*>;
    then ex x,y,z st x in D1 & y in D2 & z in D3 & a = <*x,y,z*> by Th3;
    hence thesis;
  end;
  let a;
  assume
  a in { <*d1,d2,d3*>: not contradiction };
  then ex d1,d2,d3 st a = <*d1,d2,d3*>;
  hence thesis by Th3;
end;

theorem
  product <*D,D,D*> = 3-tuples_on D
proof
  thus product <*D,D,D*> = {<*d1,d2,d3*> where d1 is Element of D, d2 is
  Element of D, d3 is Element of D: not contradiction} by Th7
    .= 3-tuples_on D by FINSEQ_2:122;
end;

theorem
  product (i |-> D) = i-tuples_on D
proof
  thus product (i |-> D) = product (Seg i --> D) by FINSEQ_2:def 2
    .= Funcs(Seg i,D) by CARD_3:20
    .= i-tuples_on D by FINSEQ_2:111;
end;

theorem Th10:
  product f c= Funcs(dom f, Union f)
proof
  let x;
  assume
  x in product f;
  then consider g such that
A1: x = g and
A2: dom g = dom f and
A3: for x st x in dom f holds g.x in f.x by CARD_3:def 5;
  rng g c= Union f
  proof
    let y;
A4: Union f = union rng f by CARD_3:def 4;
    assume
    y in rng g;
    then consider z such that
A5: z in dom g & y = g.z by FUNCT_1:def 5;
    y in f.z & f.z in rng f by A2,A3,A5,FUNCT_1:def 5;
    hence thesis by A4,TARSKI:def 4;
  end;
  hence thesis by A1,A2,FUNCT_2:def 2;
end;

begin

theorem Th11:
  x in dom ~f implies ex y,z st x = [y,z]
proof
  assume
A1: x in dom ~f;
  ex X,Y st dom ~f c= [:X,Y:] by FUNCT_4:45;
  hence thesis by A1,RELAT_1:def 1;
end;

theorem Th12:
  ~([:X,Y:] --> z) = [:Y,X:] --> z
proof
A1: dom ([:X,Y:] --> z) = [:X,Y:] by FUNCOP_1:19;
  then
A2: dom ~([:X,Y:] --> z) = [:Y,X:] by FUNCT_4:47;
A3: now
    let x;
    assume
A4: x in [:Y,X:];
    then consider y1,y2 such that
A5: x = [y2,y1] and
A6: [y1,y2] in [:X,Y:] by A1,A2,FUNCT_4:def 2;
A7: ([:X,Y:] --> z).(y1,y2) = z by A6,FUNCOP_1:13;
    ([:Y,X:] --> z).(y2,y1) = z by A4,A5,FUNCOP_1:13;
    then (~([:X,Y:] --> z)).(y2,y1) = ([:Y,X:] --> z).(y2,y1) by A1,A6,A7,
    FUNCT_4:def 2;
    hence (~([:X,Y:] --> z)).x = ([:Y,X:] --> z).x by A5;
  end;
  dom ([:Y,X:] --> z) = [:Y,X:] by FUNCOP_1:19;
  hence thesis by A2,A3,FUNCT_1:9;
end;

theorem Th13:
  curry f = curry' ~f & uncurry f = ~uncurry' f
proof
A1: dom curry ~~f = proj1 dom ~~f by FUNCT_5:def 3;
A2: dom curry f = proj1 dom f by FUNCT_5:def 3;
A3: dom curry ~~f = dom curry f
  proof
    thus dom curry ~~f c= dom curry f
    proof
      let x;
      assume
      x in dom curry ~~f;
      then consider y such that
A4:   [x,y] in dom ~~f by A1,RELAT_1:def 4;
      [y,x] in dom ~f by A4,FUNCT_4:43;
      then [x,y] in dom f by FUNCT_4:43;
      hence thesis by A2,RELAT_1:def 4;
    end;
    let x;
    assume
    x in dom curry f;
    then consider y such that
A5: [x,y] in dom f by A2,RELAT_1:def 4;
    [y,x] in dom ~f by A5,FUNCT_4:43;
    then [x,y] in dom ~~f by FUNCT_4:43;
    hence thesis by A1,RELAT_1:def 4;
  end;
A6: curry' ~f = curry ~~f by FUNCT_5:def 5;
  now
    let x;
    assume
A7: x in dom curry f;
    then reconsider g = (curry f).x, h = (curry' ~f).x as Function by A6,A3,
    FUNCT_5:37;
A8: dom g = proj2 (dom f /\ [:{x},proj2 dom f:]) by A7,FUNCT_5:38;
A9: dom h = proj1 (dom ~f /\ [:proj1 dom ~f,{x}:]) by A6,A3,A7,FUNCT_5:
    41;
A10: dom g = dom h
    proof
      thus dom g c= dom h
      proof
        let a;
        assume
        a in dom g;
        then consider b such that
A11:    [b,a] in dom f /\ [:{x},proj2 dom f:] by A8,RELAT_1:def
        5;
        [b,a] in [:{x},proj2 dom f:] by A11,XBOOLE_0:def 4;
        then
A12:    [a,b] in [:proj2 dom f,{x}:] by ZFMISC_1:107;
        [b,a] in dom f by A11,XBOOLE_0:def 4;
        then
A13:    [a,b] in dom ~f by FUNCT_4:43;
        proj2 dom f = proj1 dom ~f by FUNCT_5:20;
        then [a,b] in dom ~f /\ [:proj1 dom ~f,{x}:] by A13,A12,
        XBOOLE_0:
        def 4;
        hence thesis by A9,RELAT_1:def 4;
      end;
      let a;
      assume
      a in dom h;
      then consider b such that
A14:  [a,b] in dom ~f /\ [:proj1 dom ~f,{x}:] by A9,RELAT_1:def
      4;
      [a,b] in [:proj1 dom ~f,{x}:] by A14,XBOOLE_0:def 4;
      then
A15:  [b,a] in [:{x},proj1 dom ~f:] by ZFMISC_1:107;
      [a,b] in dom ~f by A14,XBOOLE_0:def 4;
      then
A16:  [b,a] in dom f by FUNCT_4:43;
      proj2 dom f = proj1 dom ~f by FUNCT_5:20;
      then [b,a] in dom f /\ [:{x},proj2 dom f:] by A16,A15,
      XBOOLE_0:def 4;
      hence thesis by A8,RELAT_1:def 5;
    end;
    now
      let a;
      assume
A17:  a in dom g;
      then
A18:  [x,a] in dom f & g.a = f.(x,a) by A7,FUNCT_5:38;
      h.a = (~f).(a,x) by A6,A3,A7,A10,A17,FUNCT_5:41;
      hence g.a = h.a by A18,FUNCT_4:def 2;
    end;
    hence (curry f).x = (curry' ~f).x by A10,FUNCT_1:9;
  end;
  hence curry f = curry' ~f by A6,A3,FUNCT_1:9;
A19: dom uncurry f = dom ~~uncurry f
  proof
    thus dom uncurry f c= dom ~~uncurry f
    proof
      let a;
      assume
A20:  a in dom uncurry f;
      then consider x,g,y such that
A21:  a = [x,y] and
      x in dom f and
      g = f.x and
      y in dom g by FUNCT_5:def 4;
      [y,x] in dom ~uncurry f by A20,A21,FUNCT_4:43;
      hence thesis by A21,FUNCT_4:43;
    end;
    let a;
    assume
    a in dom ~~uncurry f;
    then ex x,y st a = [y,x] & [x,y] in dom ~uncurry f by FUNCT_4:def 2;
    hence thesis by FUNCT_4:43;
  end;
A22: now
    let a;
    assume
    a in dom ~~uncurry f;
    then consider x,y such that
A23: a = [y,x] and
A24: [x,y] in dom ~uncurry f by FUNCT_4:def 2;
    (~uncurry f).(x,y) = (uncurry f).(y,x) & (~uncurry f).(x,y) = (~~
    uncurry f). (y,x) by A24,FUNCT_4:44,def 2;
    hence (uncurry f).a = (~~uncurry f).a by A23;
  end;
  uncurry' f = ~uncurry f by FUNCT_5:def 6;
  hence thesis by A19,A22,FUNCT_1:9;
end;

theorem
  [:X,Y:] <> {} implies curry ([:X,Y:] --> z) = X --> (Y --> z) & curry'
  ([:X,Y:] --> z) = Y --> (X --> z)
proof
  assume
A1: [:X,Y:] <> {};
A2: dom ([:X,Y:] --> z) = [:X,Y:] by FUNCOP_1:19;
A3: dom (X --> z) = X by FUNCOP_1:19;
A4: now
    let x;
    assume
A5: x in Y;
    then consider f such that
A6: (curry' ([:X,Y:] --> z)).x = f & dom f = X and
    rng f c= rng ([:X,Y:] --> z) and
A7: for y st y in X holds f.y = ([:X,Y:] --> z).(y,x) by A1,A2,
    FUNCT_5:39;
A8: now
      let y;
      assume
A9:   y in X;
      then
A10:  f.y = ([:X,Y:] --> z).(y,x) by A7;
      (X --> z).y = z & [y,x] in [:X,Y:] by A5,A9,FUNCOP_1:13,ZFMISC_1:
      106;
      hence f.y = (X --> z).y by A10,FUNCOP_1:13;
    end;
    (Y --> (X --> z)).x = X --> z by A5,FUNCOP_1:13;
    hence (curry' ([:X,Y:] --> z)).x = (Y --> (X --> z)).x by A3,A6,A8,
    FUNCT_1:9;
  end;
A11: dom (Y --> z) = Y by FUNCOP_1:19;
A12: now
    let x;
    assume
A13: x in X;
    then consider f such that
A14: (curry ([:X,Y:] --> z)).x = f & dom f = Y and
    rng f c= rng ([:X,Y:] --> z) and
A15: for y st y in Y holds f.y = ([:X,Y:] --> z).(x,y) by A1,A2,
    FUNCT_5:36;
A16: now
      let y;
      assume
A17:  y in Y;
      then
A18:  f.y = ([:X,Y:] --> z).(x,y) by A15;
      (Y --> z).y = z & [x,y] in [:X,Y:] by A13,A17,FUNCOP_1:13,ZFMISC_1:
      106;
      hence f.y = (Y --> z).y by A18,FUNCOP_1:13;
    end;
    (X --> (Y --> z)).x = Y --> z by A13,FUNCOP_1:13;
    hence (curry ([:X,Y:] --> z)).x = (X --> (Y --> z)).x by A11,A14,A16,
    FUNCT_1:9;
  end;
  dom (X --> (Y --> z)) = X & dom curry ([:X,Y:] --> z) = X by A1,A2,
  FUNCOP_1:19,FUNCT_5:31;
  hence curry ([:X,Y:] --> z) = X --> (Y --> z) by A12,FUNCT_1:9;
  dom (Y --> (X --> z)) = Y & dom curry' ([:X,Y:] --> z) = Y by A1,A2,
  FUNCOP_1:19,FUNCT_5:31;
  hence thesis by A4,FUNCT_1:9;
end;

theorem
  uncurry (X --> (Y --> z)) = [:X,Y:] --> z & uncurry' (X --> (Y --> z))
  = [:Y,X:] --> z
proof
A1: dom (X --> (Y --> z)) = X by FUNCOP_1:19;
A2: dom (Y --> z) = Y by FUNCOP_1:19;
  rng (Y --> z) c= {z} by FUNCOP_1:19;
  then (Y --> z) in Funcs (Y,{z}) by A2,FUNCT_2:def 2;
  then rng (X --> (Y --> z)) c= {Y --> z} & {(Y --> z)} c= Funcs (Y,{z}) by
  FUNCOP_1:19,ZFMISC_1:37;
  then rng (X --> (Y --> z)) c= Funcs (Y,{z}) by XBOOLE_1:1;
  then
A3: dom uncurry (X --> (Y --> z)) = [:X,Y:] by A1,FUNCT_5:33;
A4: now
    let x;
    assume
A5: x in [:X,Y:];
    then consider y1,g,y2 such that
A6: x = [y1,y2] and
A7: y1 in X & g = (X --> (Y --> z)).y1 and
A8: y2 in dom g by A1,A3,FUNCT_5:def 4;
A9: g = Y --> z by A7,FUNCOP_1:13;
    then (Y --> z).y2 = z by A2,A8,FUNCOP_1:13;
    then z = (uncurry (X --> (Y --> z))).(y1,y2) by A1,A7,A8,A9,
    FUNCT_5:45;
    hence (uncurry (X --> (Y --> z))).x = ([:X,Y:] --> z).x by A5,A6,
    FUNCOP_1:13;
  end;
  dom ([:X,Y:] --> z) = [:X,Y:] by FUNCOP_1:19;
  hence uncurry (X --> (Y --> z)) = [:X,Y:] --> z by A3,A4,FUNCT_1:9;
  then ~uncurry (X --> (Y --> z)) = [:Y,X:] --> z by Th12;
  hence thesis by FUNCT_5:def 6;
end;

theorem Th16:
  x in dom f & g = f.x implies rng g c= rng uncurry f & rng g c=
  rng uncurry' f
proof
  assume
A1: x in dom f & g = f.x;
  thus rng g c= rng uncurry f
  proof
    let y;
    assume
    y in rng g;
    then ex z st z in dom g & y = g.z by FUNCT_1:def 5;
    hence thesis by A1,FUNCT_5:45;
  end;
  let y;
  assume
  y in rng g;
  then ex z st z in dom g & y = g.z by FUNCT_1:def 5;
  hence thesis by A1,FUNCT_5:46;
end;

theorem Th17:
  dom uncurry (X --> f) = [:X,dom f:] & rng uncurry (X --> f) c=
rng f & dom uncurry' (X --> f) = [:dom f,X:] & rng uncurry' (X --> f) c= rng f
proof
  f in Funcs(dom f, rng f) by FUNCT_2:def 2;
  then rng (X --> f) c= {f} & {f} c= Funcs(dom f, rng f) by FUNCOP_1:19 ,
  ZFMISC_1:37;
  then dom (X --> f) = X & rng (X --> f) c= Funcs(dom f, rng f) by
  FUNCOP_1:
  19 ,XBOOLE_1:1;
  hence thesis by FUNCT_5:33,48;
end;

theorem
  X <> {} implies rng uncurry (X --> f) = rng f & rng uncurry' (X --> f)
  = rng f
proof
  consider x being Element of X;
  assume
A1: X <> {};
  then dom (X --> f) = X & (X --> f).x = f by FUNCOP_1:13,19;
  hence rng uncurry (X --> f) c= rng f & rng f c= rng uncurry (X --> f) & rng
  uncurry' (X --> f) c= rng f & rng f c= rng uncurry' (X --> f) by A1,Th16,
  Th17;
end;

theorem Th19:
  [:X,Y:] <> {} & f in Funcs([:X,Y:],Z) implies curry f in Funcs(X
  ,Funcs(Y,Z)) & curry' f in Funcs(Y,Funcs(X,Z))
proof
  assume
A1: [:X,Y:] <> {};
  assume
  f in Funcs([:X,Y:],Z);
  then
A2: ex g st f = g & dom g = [:X,Y:] & rng g c= Z by FUNCT_2:def 2;
  then rng curry f c= Funcs(Y,rng f) & Funcs(Y,rng f) c= Funcs(Y,Z) by
  FUNCT_5:42,63;
  then
A3: rng curry f c= Funcs(Y,Z) by XBOOLE_1:1;
  rng curry' f c= Funcs(X,rng f) & Funcs(X,rng f) c= Funcs(X,Z) by A2,
  FUNCT_5:42,63;
  then
A4: rng curry' f c= Funcs(X,Z) by XBOOLE_1:1;
  dom curry f = X & dom curry' f = Y by A1,A2,FUNCT_5:31;
  hence thesis by A3,A4,FUNCT_2:def 2;
end;

theorem Th20:
  f in Funcs(X,Funcs(Y,Z)) implies uncurry f in Funcs([:X,Y:],Z) &
  uncurry' f in Funcs([:Y,X:],Z)
proof
  assume
  f in Funcs(X,Funcs(Y,Z));
  then
A1: ex g st f = g & dom g = X & rng g c= Funcs(Y,Z) by FUNCT_2:def 2;
  then
A2: dom uncurry f = [:X,Y:] & dom uncurry' f = [:Y,X:] by FUNCT_5:33;
  rng uncurry f c= Z & rng uncurry' f c= Z by A1,FUNCT_5:48;
  hence thesis by A2,FUNCT_2:def 2;
end;

theorem
  (curry f in Funcs(X,Funcs(Y,Z)) or curry' f in Funcs(Y,Funcs(X,Z))) &
  dom f c= [:V1,V2:] implies f in Funcs([:X,Y:],Z)
proof
  assume
  curry f in Funcs(X,Funcs(Y,Z)) or curry' f in Funcs(Y,Funcs(X,Z));
  then
A1: uncurry curry f in Funcs([:X,Y:],Z) or uncurry' curry' f in Funcs([:X,Y
  :],Z) by Th20;
  assume
  dom f c= [:V1,V2:];
  hence thesis by A1,FUNCT_5:57;
end;

theorem
  (uncurry f in Funcs([:X,Y:],Z) or uncurry' f in Funcs([:Y,X:],Z)) &
  rng f c= PFuncs(V1,V2) & dom f = X implies f in Funcs(X,Funcs(Y,Z))
proof
  assume that
A1: uncurry f in Funcs([:X,Y:],Z) or uncurry' f in Funcs([:Y,X:],Z) and
A2: rng f c= PFuncs(V1,V2) and
A3: dom f = X;
A4: uncurry' f = ~uncurry f by FUNCT_5:def 6;
A5: (ex g st uncurry f = g & dom g = [:X,Y:] & rng g c= Z) or ex g st
  uncurry' f = g & dom g = [:Y,X:] & rng g c= Z by A1,FUNCT_2:def 2;
  then
A6: dom uncurry' f = [:Y,X:] by A4,FUNCT_4:47;
  rng f c= Funcs(Y,Z)
  proof
    let y;
    assume
A7: y in rng f;
    then consider x such that
A8: x in dom f and
A9: y = f.x by FUNCT_1:def 5;
    ex g st y = g & dom g c= V1 & rng g c= V2 by A2,A7,PARTFUN1:def 5;
    then reconsider h = y as Function;
A10: dom h = Y
    proof
      thus dom h c= Y
      proof
        let z;
        assume
        z in dom h;
        then [z,x] in dom uncurry' f by A8,A9,FUNCT_5:46;
        hence thesis by A6,ZFMISC_1:106;
      end;
      let z;
      assume
      z in Y;
      then [z,x] in [:Y,X:] by A3,A8,ZFMISC_1:106;
      then [x,z] in dom uncurry f by A4,A6,FUNCT_4:43;
      then consider y1,f1,y2 such that
A11:  [x,z] = [y1,y2] and
      y1 in dom f and
A12:  f1 = f.y1 & y2 in dom f1 by FUNCT_5:def 4;
      x = y1 by A11,ZFMISC_1:33;
      hence thesis by A9,A11,A12,ZFMISC_1:33;
    end;
    rng h c= Z
    proof
      let z;
      assume
      z in rng h;
      then ex y1 st y1 in dom h & z = h.y1 by FUNCT_1:def 5;
      then z in rng uncurry f & z in rng uncurry' f by A8,A9,
      FUNCT_5:45,
      46;
      hence thesis by A5;
    end;
    hence thesis by A10,FUNCT_2:def 2;
  end;
  hence thesis by A3,FUNCT_2:def 2;
end;

theorem
  f in PFuncs([:X,Y:],Z) implies curry f in PFuncs(X,PFuncs(Y,Z)) &
  curry' f in PFuncs(Y,PFuncs(X,Z))
proof
  assume
  f in PFuncs([:X,Y:],Z);
  then
A1: ex g st f = g & dom g c= [:X,Y:] & rng g c= Z by PARTFUN1:def 5;
  then proj1 [:X,Y:] c= X & proj1 dom f c= proj1 [:X,Y:] by FUNCT_5:5,12;
  then proj1 dom f c= X by XBOOLE_1:1;
  then
A2: PFuncs(proj1 dom f,rng f) c= PFuncs(X,Z) by A1,PARTFUN1:128;
  proj2 [:X,Y:] c= Y & proj2 dom f c= proj2 [:X,Y:] by A1,FUNCT_5:5,12;
  then proj2 dom f c= Y by XBOOLE_1:1;
  then
  rng curry f c= PFuncs(proj2 dom f,rng f) & PFuncs(proj2 dom f,rng f) c=
  PFuncs(Y,Z) by A1,FUNCT_5:43,PARTFUN1:128;
  then
A3: rng curry f c= PFuncs(Y,Z) by XBOOLE_1:1;
  rng curry' f c= PFuncs(proj1 dom f,rng f) by FUNCT_5:43;
  then
A4: rng curry' f c= PFuncs(X,Z) by A2,XBOOLE_1:1;
  dom curry f c= X & dom curry' f c= Y by A1,FUNCT_5:32;
  hence thesis by A3,A4,PARTFUN1:def 5;
end;

theorem Th24:
  f in PFuncs(X,PFuncs(Y,Z)) implies uncurry f in PFuncs([:X,Y:],Z
  ) & uncurry' f in PFuncs([:Y,X:],Z)
proof
  assume
  f in PFuncs(X,PFuncs(Y,Z));
  then
A1: ex g st f = g & dom g c= X & rng g c= PFuncs(Y,Z) by
  PARTFUN1:def 5;
  then dom uncurry f c= [:dom f,Y:] & [:dom f,Y:] c= [:X,Y:] by
  FUNCT_5:44 ,
  ZFMISC_1:119;
  then
A2: dom uncurry f c= [:X,Y:] by XBOOLE_1:1;
  dom uncurry' f c= [:Y,dom f:] & [:Y,dom f:] c= [:Y,X:] by A1,FUNCT_5:44
  ,ZFMISC_1:119;
  then
A3: dom uncurry' f c= [:Y,X:] by XBOOLE_1:1;
  rng uncurry f c= Z & rng uncurry' f c= Z by A1,FUNCT_5:47;
  hence thesis by A2,A3,PARTFUN1:def 5;
end;

theorem
  (curry f in PFuncs(X,PFuncs(Y,Z)) or curry' f in PFuncs(Y,PFuncs(X,Z))
  ) & dom f c= [:V1,V2:] implies f in PFuncs([:X,Y:],Z)
proof
  assume
  curry f in PFuncs(X,PFuncs(Y,Z)) or curry' f in PFuncs(Y,PFuncs(X,Z)
  );
  then
A1: uncurry curry f in PFuncs([:X,Y:],Z) or uncurry' curry' f in PFuncs([:X,
  Y:],Z) by Th24;
  assume
  dom f c= [:V1,V2:];
  hence thesis by A1,FUNCT_5:57;
end;

theorem
  (uncurry f in PFuncs([:X,Y:],Z) or uncurry' f in PFuncs([:Y,X:],Z)) &
  rng f c= PFuncs(V1,V2) & dom f c= X implies f in PFuncs(X,PFuncs(Y,Z))
proof
  assume that
A1: uncurry f in PFuncs([:X,Y:],Z) or uncurry' f in PFuncs([:Y,X:],Z) and
A2: rng f c= PFuncs(V1,V2) and
A3: dom f c= X;
A4: (ex g st uncurry f = g & dom g c= [:X,Y:] & rng g c= Z) or ex g st
  uncurry' f = g & dom g c= [:Y,X:] & rng g c= Z by A1,PARTFUN1:def 5;
  uncurry' f = ~uncurry f by FUNCT_5:def 6;
  then
A5: dom uncurry' f c= [:Y,X:] by A4,FUNCT_4:46;
  rng f c= PFuncs(Y,Z)
  proof
    let y;
    assume
A6: y in rng f;
    then consider x such that
A7: x in dom f & y = f.x by FUNCT_1:def 5;
    ex g st y = g & dom g c= V1 & rng g c= V2 by A2,A6,PARTFUN1:def 5;
    then reconsider h = y as Function;
A8: rng h c= Z
    proof
      let z;
      assume
      z in rng h;
      then ex y1 st y1 in dom h & z = h.y1 by FUNCT_1:def 5;
      then z in rng uncurry f & z in rng uncurry' f by A7,
      FUNCT_5:45,46;
      hence thesis by A4;
    end;
    dom h c= Y
    proof
      let z;
      assume
      z in dom h;
      then [z,x] in dom uncurry' f by A7,FUNCT_5:46;
      hence thesis by A5,ZFMISC_1:106;
    end;
    hence thesis by A8,PARTFUN1:def 5;
  end;
  hence thesis by A3,PARTFUN1:def 5;
end;

begin

definition
  let X be set;
  func SubFuncs X means
  :Def1:
  x in it iff x in X & x is Function;
  existence
  proof
    defpred P[set] means $1 is Function;
    ex Y being set st for x being set holds x in Y iff x in X & P[x] from
    XBOOLE_0:sch 1;
    hence thesis;
  end;
  uniqueness
  proof
    defpred P[set] means $1 in X & $1 is Function;
    let X1,X2 be set such that
A1: for x being set holds x in X1 iff P[x] and
A2: for x being set holds x in X2 iff P[x];
    thus X1 = X2 from XBOOLE_0:sch 2(A1,A2);
  end;
end;

theorem Th27:
  SubFuncs X c= X
proof
  let x;
  thus thesis by Def1;
end;

theorem Th28:
  x in f"SubFuncs rng f iff x in dom f & f.x is Function
proof
  f.x in rng f & f.x is Function iff f.x in SubFuncs rng f by Def1;
  hence thesis by FUNCT_1:def 5,def 13;
end;

Lm1: (for x st x in X holds x is Function) implies SubFuncs X = X
proof
  assume
  x in X implies x is Function;
  then x in X iff x in X & x is Function;
  hence thesis by Def1;
end;

theorem Th29:
  SubFuncs {} = {} & SubFuncs {f} = {f} & SubFuncs {f,g} = {f,g} &
  SubFuncs {f,g,h} = {f,g,h}
proof
  thus SubFuncs {} = {} by Th27,XBOOLE_1:3;
  for x st x in {f} holds x is Function;
  hence SubFuncs {f} = {f} by Lm1;
  for x st x in {f,g} holds x is Function;
  hence SubFuncs {f,g} = {f,g} by Lm1;
  for x st x in {f,g,h} holds x is Function by ENUMSET1:def 1;
  hence thesis by Lm1;
end;

theorem
  Y c= SubFuncs X implies SubFuncs Y = Y
proof
  assume
  Y c= SubFuncs X;
  then for x st x in Y holds x is Function by Def1;
  hence thesis by Lm1;
end;

definition
  let f be Function;
  func doms f -> Function means
  : Def2:
  dom it = f"SubFuncs rng f & for x st x
  in f"SubFuncs rng f holds it.x = proj1 (f.x);
  existence
  proof
    deffunc F(set) = proj1 (f.$1);
    ex F be Function st dom F = f"SubFuncs rng f & for x st x in f"
    SubFuncs rng f holds F.x = F(x) from FUNCT_1:sch 3;
    hence thesis;
  end;
  uniqueness
  proof
    let f1,f2 be Function such that
A1: dom f1 = f"SubFuncs rng f and
A2: for x st x in f"SubFuncs rng f holds f1.x = proj1 (f.x) and
A3: dom f2 = f"SubFuncs rng f and
A4: for x st x in f"SubFuncs rng f holds f2.x = proj1 (f.x);
    now
      let x;
      assume
A5:   x in f"SubFuncs rng f;
      then f1.x = proj1 (f.x) by A2;
      hence f1.x = f2.x by A4,A5;
    end;
    hence thesis by A1,A3,FUNCT_1:9;
  end;
  func rngs f -> Function means
  : Def3:
  dom it = f"SubFuncs rng f & for x st x
  in f"SubFuncs rng f holds it.x = proj2 (f.x);
  existence
  proof
    deffunc F(set) = proj2 (f.$1);
    ex F be Function st dom F = f"SubFuncs rng f & for x st x in f"
    SubFuncs rng f holds F.x = F(x) from FUNCT_1:sch 3;
    hence thesis;
  end;
  uniqueness
  proof
    let f1,f2 be Function such that
A6: dom f1 = f"SubFuncs rng f and
A7: for x st x in f"SubFuncs rng f holds f1.x = proj2 (f.x) and
A8: dom f2 = f"SubFuncs rng f and
A9: for x st x in f"SubFuncs rng f holds f2.x = proj2 (f.x);
    now
      let x;
      assume
A10:  x in f"SubFuncs rng f;
      then f1.x = proj2 (f.x) by A7;
      hence f1.x = f2.x by A9,A10;
    end;
    hence thesis by A6,A8,FUNCT_1:9;
  end;
  func meet f equals
  meet rng f;
  correctness;
end;

theorem Th31:
  x in dom f & g = f.x implies x in dom doms f & (doms f).x = dom
  g & x in dom rngs f & (rngs f).x = rng g
proof
  assume that
A1: x in dom f and
A2: g = f.x;
  g in rng f by A1,A2,FUNCT_1:def 5;
  then g in SubFuncs rng f by Def1;
  then x in f"SubFuncs rng f by A1,A2,FUNCT_1:def 13;
  hence thesis by A2,Def2,Def3;
end;

theorem
  doms {} = {} & rngs {} = {}
proof
  dom doms {} = {}"SubFuncs {} & dom rngs {} = {}"SubFuncs {} by Def2,Def3
  , RELAT_1:60;
  hence thesis by RELAT_1:172;
end;

theorem Th33:
  doms <*f*> = <*dom f*> & rngs <*f*> = <*rng f*>
proof
A1: rng <*f*> = {f} & <*f*>"rng <*f*> = dom <*f*> by FINSEQ_1:55,RELAT_1:169;
A2: dom doms <*f*> = <*f*>"SubFuncs rng <*f*> & dom <*dom f*> = Seg 1 by
  Def2, FINSEQ_1:55;
A3: <*f*>.1 = f by FINSEQ_1:57;
A4: dom <*f*> = Seg 1 & SubFuncs {f} = {f} by Th29,FINSEQ_1:55;
A5: <*rng f*>.1 = rng f by FINSEQ_1:57;
A6: now
    let x;
    assume
A7: x in {1};
    then x = 1 by TARSKI:def 1;
    hence (rngs <*f*>).x = <*rng f*>.x by A1,A3,A5,A4,A7,Def3,FINSEQ_1:4;
  end;
A8: <*dom f*>.1 = dom f by FINSEQ_1:57;
  now
    let x;
    assume
A9: x in {1};
    then x = 1 by TARSKI:def 1;
    hence (doms <*f*>).x = <*dom f*>.x by A1,A3,A8,A4,A9,Def2,FINSEQ_1:4;
  end;
  hence doms <*f*> = <*dom f*> by A1,A2,A4,FINSEQ_1:4,FUNCT_1:9;
  dom rngs <*f*> = <*f*>"SubFuncs rng <*f*> & dom <*rng f*> = Seg 1 by
  Def3, FINSEQ_1:55;
  hence thesis by A1,A4,A6,FINSEQ_1:4,FUNCT_1:9;
end;

theorem Th34:
  doms <*f,g*> = <*dom f, dom g*> & rngs <*f,g*> = <*rng f, rng g
  *>
proof
A1: rng <*f,g*> = {f,g} & <*f,g*>"rng <*f,g*> = dom <*f,g*> by FINSEQ_2:147
  ,RELAT_1:169;
A2: dom doms <*f,g*> = <*f,g*>"SubFuncs rng <*f,g*> & dom <*dom f, dom g*> =
  Seg 2 by Def2,FINSEQ_3:29;
A3: <*f,g*>.1 = f & <*f,g*>.2 = g by FINSEQ_1:61;
A4: dom <*f,g*> = Seg 2 & SubFuncs {f,g} = {f,g} by Th29,FINSEQ_3:29;
A5: <*rng f, rng g*>.1 = rng f & <*rng f, rng g*>.2 = rng g by FINSEQ_1:61;
A6: now
    let x;
    assume
A7: x in {1,2};
    then x = 1 or x = 2 by TARSKI:def 2;
    hence (rngs <*f,g*>).x = <*rng f, rng g*>.x by A1,A3,A5,A4,A7,Def3,
    FINSEQ_1:4;
  end;
A8: <*dom f, dom g*>.1 = dom f & <*dom f, dom g*>.2 = dom g by FINSEQ_1:61;
  now
    let x;
    assume
A9: x in {1,2};
    then x = 1 or x = 2 by TARSKI:def 2;
    hence (doms <*f,g*>).x = <*dom f, dom g*>.x by A1,A3,A8,A4,A9,Def2,
    FINSEQ_1:4;
  end;
  hence doms <*f,g*> = <*dom f, dom g*> by A1,A2,A4,FINSEQ_1:4,FUNCT_1:9;
  dom rngs <*f,g*> = <*f,g*>"SubFuncs rng <*f,g*> & dom <*rng f, rng g*>
  = Seg 2 by Def3,FINSEQ_3:29;
  hence thesis by A1,A4,A6,FINSEQ_1:4,FUNCT_1:9;
end;

theorem
  doms <*f,g,h*> = <*dom f, dom g, dom h*> & rngs <*f,g,h*> = <*rng f,
  rng g, rng h*>
proof
A1: rng <*f,g,h*> = {f,g,h} & <*f,g,h*>"rng <*f,g,h*> = dom <*f,g,h*> by
  FINSEQ_2:148,RELAT_1:169;
A2: <*rng f, rng g, rng h*>.3 = rng h by FINSEQ_1:62;
A3: <*f,g,h*>.1 = f & <*f,g,h*>.2 = g by FINSEQ_1:62;
A4: <*f,g,h*>.3 = h by FINSEQ_1:62;
A5: dom <*f,g,h*> = Seg 3 & SubFuncs {f,g,h} = {f,g,h} by Th29,FINSEQ_3:30;
A6: <*rng f, rng g, rng h*>.1 = rng f & <*rng f, rng g, rng h*>.2 = rng g
  by FINSEQ_1:62;
A7: now
    let x;
    assume
A8: x in {1,2,3};
    then x = 1 or x = 2 or x = 3 by ENUMSET1:def 1;
    hence (rngs <*f,g,h*>).x = <*rng f, rng g, rng h*>.x by A1,A3,A4,A6,A2,
    A5,A8,Def3,FINSEQ_3:1;
  end;
A9: dom doms <*f,g,h*> = <*f,g,h*>"SubFuncs rng <*f,g,h*> & dom <*dom f, dom
  g, dom h*> = Seg 3 by Def2,FINSEQ_3:30;
A10: <*dom f, dom g, dom h*>.3 = dom h by FINSEQ_1:62;
A11: <*dom f, dom g, dom h*>.1 = dom f & <*dom f, dom g, dom h*>.2 = dom g
  by FINSEQ_1:62;
  now
    let x;
    assume
A12: x in {1,2,3};
    then x = 1 or x = 2 or x = 3 by ENUMSET1:def 1;
    hence (doms <*f,g,h*>).x = <*dom f, dom g, dom h*>.x by A1,A3,A4,A11,A10,
    A5,A12,Def2,FINSEQ_3:1;
  end;
  hence doms <*f,g,h*> = <*dom f, dom g, dom h*> by A1,A9,A5,FINSEQ_3:1 ,
  FUNCT_1:9;
  dom rngs <*f,g,h*> = <*f,g,h*>"SubFuncs rng <*f,g,h*> & dom <*rng f,
  rng g, rng h*> = Seg 3 by Def3,FINSEQ_3:30;
  hence thesis by A1,A5,A7,FINSEQ_3:1,FUNCT_1:9;
end;

theorem Th36:
  doms (X --> f) = X --> dom f & rngs (X --> f) = X --> rng f
proof
A1: dom (X --> dom f) = X & dom doms (X --> f) = (X --> f)"SubFuncs rng (X
  --> f ) by Def2,FUNCOP_1:19;
A2: rng (X --> f) c= {f} by FUNCOP_1:19;
A3: SubFuncs rng (X --> f) = rng (X --> f)
  proof
    thus SubFuncs rng (X --> f) c= rng (X --> f) by Th27;
    let x;
    assume
    x in rng (X --> f);
    hence thesis by A2,Def1;
  end;
A4: dom (X --> f) = X & (X --> f)"rng (X --> f) = dom (X --> f) by FUNCOP_1:
  19 ,RELAT_1:169;
  now
    let x;
    assume
A5: x in X;
    then (X --> f).x = f & (X --> dom f).x = dom f by FUNCOP_1:13;
    hence (doms (X --> f)).x = (X --> dom f).x by A4,A3,A5,Def2;
  end;
  hence doms (X --> f) = X --> dom f by A1,A4,A3,FUNCT_1:9;
A6: now
    let x;
    assume
A7: x in X;
    then (X --> f).x = f & (X --> rng f).x = rng f by FUNCOP_1:13;
    hence (rngs (X --> f)).x = (X --> rng f).x by A4,A3,A7,Def3;
  end;
  dom (X --> rng f) = X & dom rngs (X --> f) = (X --> f)"SubFuncs rng (X
  --> f ) by Def3,FUNCOP_1:19;
  hence thesis by A4,A3,A6,FUNCT_1:9;
end;

theorem Th37:
  f <> {} implies (x in meet f iff for y st y in dom f holds x in
  f.y)
proof
  assume
A1: f <> {};
  thus x in meet f implies for y st y in dom f holds x in f.y
  proof
    assume
A2: x in meet f;
    let y;
    assume
    y in dom f;
    then f.y in rng f by FUNCT_1:def 5;
    then meet f c= f.y by SETFAM_1:4;
    hence thesis by A2;
  end;
  assume
A3: for y st y in dom f holds x in f.y;
  now
    let z;
    assume
    z in rng f;
    then ex y st y in dom f & z = f.y by FUNCT_1:def 5;
    hence x in z by A3;
  end;
  hence thesis by A1,SETFAM_1:def 1;
end;

canceled;

theorem Th39:
  Union <*X*> = X & meet <*X*> = X
proof
  thus Union <*X*> = union rng <*X*> by CARD_3:def 4
    .= union {X} by FINSEQ_1:55
    .= X by ZFMISC_1:31;
  thus meet <*X*> = meet {X} by FINSEQ_1:55
    .= X by SETFAM_1:11;
end;

theorem Th40:
  Union <*X,Y*> = X \/ Y & meet <*X,Y*> = X /\ Y
proof
  thus Union <*X,Y*> = union rng <*X,Y*> by CARD_3:def 4
    .= union {X,Y} by FINSEQ_2:147
    .= X \/ Y by ZFMISC_1:93;
  thus meet <*X,Y*> = meet {X,Y} by FINSEQ_2:147
    .= X /\ Y by SETFAM_1:12;
end;

theorem
  Union <*X,Y,Z*> = X \/ Y \/ Z & meet <*X,Y,Z*> = X /\ Y /\ Z
proof
A1: union ({X,Y} \/ {Z}) = union {X,Y} \/ union {Z} & union {X,Y} = X \/ Y
  by ZFMISC_1:93,96;
A2: union {Z} = Z by ZFMISC_1:31;
A3: {X,Y} \/ {Z} = {X,Y,Z} by ENUMSET1:43;
  thus Union <*X,Y,Z*> = union rng <*X,Y,Z*> by CARD_3:def 4
    .= X \/ Y \/ Z by A1,A2,A3,FINSEQ_2:148;
A4: meet {Z} = Z by SETFAM_1:11;
  meet ({X,Y} \/ {Z}) = meet {X,Y} /\ meet {Z} & meet {X,Y} = X /\ Y by
  SETFAM_1:10,12;
  hence thesis by A4,A3,FINSEQ_2:148;
end;

theorem
  Union ({} --> Y) = {} & meet ({} --> Y) = {}
proof
  union rng ({} --> Y) = {} by ZFMISC_1:2;
  hence thesis by CARD_3:def 4,SETFAM_1:def 1;
end;

theorem Th43:
  X <> {} implies Union (X --> Y) = Y & meet (X --> Y) = Y
proof
  assume
  X <> {};
  then
A1: rng (X --> Y) = {Y} by FUNCOP_1:14;
  then union rng (X --> Y) = Y by ZFMISC_1:31;
  hence thesis by A1,CARD_3:def 4,SETFAM_1:11;
end;

definition
  let f be Function, x, y be set;
  func f..(x,y) -> set equals
  (uncurry f).(x,y);
  correctness;
end;

canceled;

theorem
  x in dom f implies <*f*>..(1,x) = f.x & <*f,g*>..(1,x) = f.x & <*f,g,h
  *>..(1,x) = f.x
proof
A1: <*f,g,h*>.1 = f & 1 in Seg 1 by FINSEQ_1:4,62,TARSKI:def 1;
A2: dom <*f*> = Seg 1 & dom <*f,g*> = Seg 2 by FINSEQ_1:def 8,FINSEQ_3:29;
A3: 1 in Seg 2 & 1 in Seg 3 by ENUMSET1:def 1,FINSEQ_1:4,FINSEQ_3:1 ,TARSKI:
  def 2;
A4: dom <*f,g,h*> = Seg 3 by FINSEQ_3:30;
  <*f*>.1 = f & <*f,g*>.1 = f by FINSEQ_1:61,def 8;
  hence thesis by A1,A3,A2,A4,FUNCT_5:45;
end;

theorem
  x in dom g implies <*f,g*>..(2,x) = g.x & <*f,g,h*>..(2,x) = g.x
proof
A1: 2 in Seg 2 & 2 in Seg 3 by ENUMSET1:def 1,FINSEQ_1:4,FINSEQ_3:1 ,TARSKI:
  def 2;
A2: dom <*f,g*> = Seg 2 & dom <*f,g,h*> = Seg 3 by FINSEQ_3:29,30;
  <*f,g*>.2 = g & <*f,g,h*>.2 = g by FINSEQ_1:61,62;
  hence thesis by A1,A2,FUNCT_5:45;
end;

theorem
  x in dom h implies <*f,g,h*>..(3,x) = h.x
proof
A1: dom <*f,g,h*> = Seg 3 by FINSEQ_3:30;
  <*f,g,h*>.3 = h & 3 in Seg 3 by ENUMSET1:def 1,FINSEQ_1:62,FINSEQ_3:1;
  hence thesis by A1,FUNCT_5:45;
end;

theorem
  x in X & y in dom f implies (X --> f)..(x,y) = f.y
proof
A1: x in X implies (X --> f).x = f by FUNCOP_1:13;
  dom (X --> f) = X by FUNCOP_1:19;
  hence thesis by A1,FUNCT_5:45;
end;

begin

definition
  let f be Function;
  func <:f:> -> Function equals
  curry ((uncurry' f)|([:meet doms f, dom f:]
  qua set));
  correctness;
end;

theorem Th49:
  dom <:f:> = meet doms f & rng <:f:> c= product rngs f
proof
  set f' = (uncurry' f)|([:meet doms f, dom f:] qua set);
  dom ((uncurry' f)|([:meet doms f, dom f:] qua set)) c= [:meet doms f,
  dom f:] by RELAT_1:87;
  hence
A1: dom <:f:> c= meet doms f by FUNCT_5:32;
A2: dom doms f = f"SubFuncs rng f by Def2;
  thus meet doms f c= dom <:f:>
  proof
    consider y being Element of rng doms f;
    let x;
    assume
A3: x in meet doms f;
    then
A4: rng doms f <> {} by SETFAM_1:def 1;
    then
A5: x in y by A3,SETFAM_1:def 1;
    consider z such that
A6: z in dom doms f and
A7: y = (doms f).z by A4,FUNCT_1:def 5;
    f.z in SubFuncs rng f by A2,A6,FUNCT_1:def 13;
    then reconsider g = f.z as Function by Def1;
A8: z in dom f by A2,A6,FUNCT_1:def 13;
    then y = dom g by A7,Th31;
    then
A9: [x,z] in dom uncurry' f by A8,A5,FUNCT_5:46;
    [x,z] in [:meet doms f, dom f:] by A3,A8,ZFMISC_1:106;
    then [x,z] in dom (uncurry' f) /\ [:meet doms f, dom f:] by A9,
    XBOOLE_0:def 4;
    then [x,z] in dom ((uncurry' f)|([:meet doms f, dom f:] qua set)) by
    RELAT_1:90;
    then
x in proj1 dom ((uncurry' f)|([:meet doms f, dom f:] qua set)) by FUNCT_5:4;
    hence thesis by FUNCT_5:def 3;
  end;
A10: dom rngs f = f"SubFuncs rng f by Def3;
  thus rng <:f:> c= product rngs f
  proof
    let y;
A11: dom f' = dom (uncurry' f) /\ [:meet doms f, dom f:] by RELAT_1:90;
A12: uncurry' f = ~(uncurry f) by FUNCT_5:def 6;
    assume
    y in rng <:f:>;
    then consider x such that
A13: x in dom <:f:> and
A14: y = <:f:>.x by FUNCT_1:def 5;
    reconsider g = y as Function by A13,A14,FUNCT_5:37;
A15: dom g = proj2 (dom f' /\ [:{x},proj2 dom f':]) by A13,A14,FUNCT_5:38;
A16: dom g = dom rngs f
    proof
      thus dom g c= dom rngs f
      proof
        let z;
        assume
        z in dom g;
        then [x,z] in dom f' by A13,A14,FUNCT_5:38;
        then [x,z] in dom uncurry' f by A11,XBOOLE_0:def 4;
        then [z,x] in dom uncurry f by A12,FUNCT_4:43;
        then consider y1, h, y2 such that
A17:    [z,x] = [y1,y2] and
A18:    y1 in dom f and
A19:    h = f.y1 and
        y2 in dom h by FUNCT_5:def 4;
A20:    z = y1 by A17,ZFMISC_1:33;
        h in rng f by A18,A19,FUNCT_1:def 5;
        then f.z in SubFuncs rng f by A19,A20,Def1;
        hence thesis by A10,A18,A20,FUNCT_1:def 13;
      end;
      let z;
A21:  x in {x} by TARSKI:def 1;
      assume
A22:  z in dom rngs f;
      then f.z in SubFuncs rng f by A10,FUNCT_1:def 13;
      then reconsider h = f.z as Function by Def1;
A23:  z in dom f by A10,A22,FUNCT_1:def 13;
      then dom h = (doms f).z by Th31;
      then dom h in rng doms f by A2,A10,A22,FUNCT_1:def 5;
      then x in dom h by A1,A13,SETFAM_1:def 1;
      then [z,x] in dom uncurry f by A23,FUNCT_5:def 4;
      then
A24:  [x,z] in dom uncurry' f by A12,FUNCT_4:43;
      [x,z] in [:meet doms f, dom f:] by A1,A13,A23,ZFMISC_1:106;
      then
A25:  [x,z] in dom f' by A11,A24,XBOOLE_0:def 4;
      then z in proj2 dom f' by FUNCT_5:4;
      then [x,z] in [:{x},proj2 dom f':] by A21,ZFMISC_1:106;
      then [x,z] in dom f' /\ [:{x},proj2 dom f':] by A25,XBOOLE_0:def 4;
      hence thesis by A15,FUNCT_5:4;
    end;
    now
      let z;
      assume
A26:  z in dom rngs f;
      then f.z in SubFuncs rng f by A10,FUNCT_1:def 13;
      then reconsider h = f.z as Function by Def1;
A27:  z in dom f by A10,A26,FUNCT_1:def 13;
      then dom h = (doms f).z by Th31;
      then dom h in rng doms f by A2,A10,A26,FUNCT_1:def 5;
      then
A28:  x in dom h by A1,A13,SETFAM_1:def 1;
      then
A29:  h.x in rng h by FUNCT_1:def 5;
      g.z = f'.(x,z) & [x,z] in dom f' by A13,A14,A16,A26,FUNCT_5:38;
      then (uncurry' f).(x,z) = g.z by FUNCT_1:70;
      then g.z = h.x by A27,A28,FUNCT_5:46;
      hence g.z in (rngs f).z by A27,A29,Th31;
    end;
    hence thesis by A16,CARD_3:def 5;
  end;
end;

theorem Th50:
  x in dom <:f:> implies <:f:>.x is Function
proof
  assume
  x in dom <:f:>;
  then
A1: <:f:>.x in rng <:f:> by FUNCT_1:def 5;
  rng <:f:> c= product rngs f by Th49;
  then ex g st <:f:>.x = g & dom g = dom rngs f & for x st x in dom rngs f
  holds g.x in (rngs f).x by A1,CARD_3:def 5;
  hence thesis;
end;

theorem Th51:
  x in dom <:f:> & g = <:f:>.x implies dom g = f"SubFuncs rng f &
  for y st y in dom g holds [y,x] in dom uncurry f & g.y = (uncurry f).(y,x)
proof
A1: rng <:f:> c= product rngs f & dom rngs f = f"SubFuncs rng f by Def3,Th49;
  assume
A2: x in dom <:f:> & g = <:f:>.x;
  then g in rng <:f:> by FUNCT_1:def 5;
  hence dom g = f"SubFuncs rng f by A1,CARD_3:18;
  let y such that
A3: y in dom g;
A4: [x,y] in dom ((uncurry' f)|([:meet doms f, dom f:] qua set)) by A2,A3,
  FUNCT_5:38;
  then [x,y] in dom (uncurry' f) /\ [:meet doms f, dom f:] by RELAT_1:90;
  then
A5: [x,y] in dom uncurry' f by XBOOLE_0:def 4;
  g.y = ((uncurry' f)|([:meet doms f, dom f:] qua set)).(x,y) by A2,A3,
  FUNCT_5:38;
  then
A6: g.y = (uncurry' f).(x,y) by A4,FUNCT_1:70;
  ~(uncurry f) = uncurry' f by FUNCT_5:def 6;
  hence thesis by A6,A5,FUNCT_4:43,44;
end;

theorem Th52:
  x in dom <:f:> implies for g st g in rng f holds x in dom g
proof
  assume
A1: x in dom <:f:>;
  let g;
  assume
  g in rng f;
  then consider y such that
A2: y in dom f & g = f.y by FUNCT_1:def 5;
  y in dom doms f & (doms f).y = dom g by A2,Th31;
  then dom g in rng doms f by FUNCT_1:def 5;
  then
A3: meet rng doms f c= dom g by SETFAM_1:4;
  meet doms f = dom <:f:> by Th49;
  hence thesis by A1,A3;
end;

theorem
  g in rng f & (for g st g in rng f holds x in dom g) implies x in dom
  <:f :>
proof
  assume that
A1: g in rng f and
A2: for g st g in rng f holds x in dom g;
  ex y st y in dom f & g = f.y by A1,FUNCT_1:def 5;
  then
A3: doms f <> {} by Th31,RELAT_1:60;
A4: now
    let y;
    assume
    y in dom doms f;
    then
A5: y in f"SubFuncs rng f by Def2;
    then f.y in SubFuncs rng f by FUNCT_1:def 13;
    then reconsider g = f.y as Function by Def1;
A6: y in dom f by A5,FUNCT_1:def 13;
    then g in rng f by FUNCT_1:def 5;
    then x in dom g by A2;
    hence x in (doms f).y by A6,Th31;
  end;
  dom <:f:> = meet doms f by Th49;
  hence thesis by A3,A4,Th37;
end;

theorem Th54:
  x in dom f & g = f.x & y in dom <:f:> & h = <:f:>.y implies g.y
  = h.x
proof
  assume that
A1: x in dom f & g = f.x and
A2: y in dom <:f:> and
A3: h = <:f:>.y;
  dom h = f"SubFuncs rng f by A2,A3,Th51;
  then x in dom h by A1,Th28;
  then
A4: h.x = (uncurry f).(x,y) by A2,A3,Th51;
  g in rng f by A1,FUNCT_1:def 5;
  then y in dom g by A2,Th52;
  hence thesis by A1,A4,FUNCT_5:45;
end;

theorem
  x in dom f & f.x is Function & y in dom <:f:> implies f..(x,y) = <:f:>
  ..( y, x )
proof
  assume that
A1: x in dom f and
A2: f.x is Function and
A3: y in dom <:f:>;
  reconsider g = f.x, h = <:f:>.y as Function by A2,A3,Th50;
A4: dom h = f"SubFuncs rng f by A3,Th51;
A5: g in rng f by A1,FUNCT_1:def 5;
  then g in SubFuncs rng f by Def1;
  then
A6: x in dom h by A1,A4,FUNCT_1:def 13;
  y in dom g by A3,A5,Th52;
  hence f..(x,y) = g.y by A1,FUNCT_5:45
    .= h.x by A1,A3,Th54
    .= <:f:>..(y,x) by A3,A6,FUNCT_5:45;
end;

definition
  let f be Function;
  func Frege f -> Function means
  : Def7:
  dom it = product doms f & for g st g
  in product doms f ex h st it.g = h & dom h = f"SubFuncs rng f & for x st x in
  dom h holds h.x = (uncurry f).(x,g.x);
  existence
  proof
    defpred P[set,set] means ex g,h st $1 = g & $2 = h & dom h = f"SubFuncs
    rng f & for z st z in dom h holds h.z = (uncurry f).(z,g.z);
A1: for x st x in product doms f ex y st P[x,y]
    proof
      let x;
      assume
      x in product doms f;
      then consider g such that
A2:   x = g and
      dom g = dom doms f and
      for x st x in dom doms f holds g.x in (doms f).x by CARD_3:def 5;
      deffunc F(set) = (uncurry f).[$1,g.$1];
      consider h such that
A3:   dom h = f"SubFuncs rng f & for z st z in f"SubFuncs rng f holds
      h.z = F(z) from FUNCT_1:sch 3;
      reconsider y = h as set;
      take y, g, h;
      thus thesis by A2,A3;
    end;
    consider F being Function such that
A4: dom F = product doms f & for x st x in product doms f holds P[x,F.
    x] from CLASSES1:sch 1(A1);
    take F;
    thus dom F = product doms f by A4;
    let g;
    assume
    g in product doms f;
    then
    ex g1,h being Function st g = g1 & F.g = h & dom h = f"SubFuncs rng f
    & for z st z in dom h holds h.z = (uncurry f).(z,g1.z) by A4;
    hence thesis;
  end;
  uniqueness
  proof
    let f1,f2 be Function such that
A5: dom f1 = product doms f and
A6: for g st g in product doms f ex h st f1.g = h & dom h = f"SubFuncs
    rng f & for x st x in dom h holds h.x = (uncurry f).(x,g.x) and
A7: dom f2 = product doms f and
A8: for g st g in product doms f ex h st f2.g = h & dom h = f"
    SubFuncs rng f & for x st x in dom h holds h.x = (uncurry f).(x,g.x);
    now
      let x;
      assume
A9:   x in product doms f;
      then consider g such that
A10:  x = g and
      dom g = dom doms f and
      for x st x in dom doms f holds g.x in (doms f).x by CARD_3:def 5;
      consider h2 being Function such that
A11:  f2.g = h2 and
A12:  dom h2 = f"SubFuncs rng f and
A13:  for y st y in dom h2 holds h2.y = (uncurry f).(y,g.y) by A8,
      A9,A10;
      consider h1 being Function such that
A14:  f1.g = h1 and
A15:  dom h1 = f"SubFuncs rng f and
A16:  for y st y in dom h1 holds h1.y = (uncurry f).(y,g.y) by A6,A9
      ,A10;
      now
        let z;
        assume
A17:    z in f"SubFuncs rng f;
        then h1.z = (uncurry f).(z,g.z) by A15,A16;
        hence h1.z = h2.z by A12,A13,A17;
      end;
      hence f1.x = f2.x by A10,A14,A15,A11,A12,FUNCT_1:9;
    end;
    hence thesis by A5,A7,FUNCT_1:9;
  end;
end;

theorem
  g in product doms f & x in dom g implies (Frege f)..(g,x) = f..(x,g.x)
proof
  assume that
A1: g in product doms f and
A2: x in dom g;
A3: dom g = dom doms f by A1,CARD_3:18;
A4: dom doms f = f"SubFuncs rng f by Def2;
  consider h such that
A5: (Frege f).g = h and
A6: dom h = f"SubFuncs rng f and
A7: for x st x in dom h holds h.x = (uncurry f).(x,g.x) by A1,Def7;
  dom Frege f = product doms f by Def7;
  hence (Frege f)..(g,x) = h.x by A1,A2,A5,A6,A3,A4,FUNCT_5:45
    .= f..(x,g.x) by A2,A6,A7,A3,A4;
end;

Lm2: rng Frege f c= product rngs f
proof
  let x;
  assume
  x in rng Frege f;
  then consider y such that
A1: y in dom Frege f and
A2: x = (Frege f).y by FUNCT_1:def 5;
A3: dom Frege f = product doms f by Def7;
  then consider g such that
A4: y = g and
  dom g = dom doms f and

A5: for z st z in dom doms f holds g.z in (doms f).z by A1, CARD_3:
  def 5;

  consider h such that
A6: (Frege f).g = h and
A7: dom h = f"SubFuncs rng f and

A8: for z st z in dom h holds h.z = (uncurry f).(z,g.z) by A1,A3,A4,Def7;

A9: dom rngs f = f"SubFuncs rng f by Def3;
A10: dom doms f = f"SubFuncs rng f by Def2;
  now
    let z;
    assume
A11: z in dom rngs f;
    then f.z in SubFuncs rng f by A9,FUNCT_1:def 13;
    then reconsider t = f.z as Function by Def1;
A12: g.z in (doms f). z by A5,A9,A10,A11;
A13: z in dom f by A9,A11,FUNCT_1:def 13;
    then
A14: (rngs f).z = rng t by Th31;
A15: (doms f).z = dom t by A13,Th31;
    then
A16: t.(g.z) in rng t by A12,FUNCT_1:def 5;
    t.(g.z) = (uncurry f).(z,g.z) by A13,A12,A15,FUNCT_5:45;
    hence h.z in (rngs f).z by A7,A8,A9,A11,A14,A16;
  end;
  hence thesis by A2,A4,A6,A7,A9,CARD_3:def 5;
end;

theorem Th57:
  x in dom f & g = f.x & h in product doms f & h' = (Frege f).h
  implies h.x in dom g & h'.x = g.(h.x) & h' in product rngs f
proof
  assume that
A1: x in dom f & g = f.x and
A2: h in product doms f and
A3: h' = (Frege f).h;
A4: x in f"SubFuncs rng f by A1,Th28;
A5: dom doms f = f"SubFuncs rng f by Def2;
  ( ex f2 st h = f2 & dom f2 = dom doms f & for x st x in dom doms f holds
  f2.x in (doms f).x)& (doms f).x = dom g by A1,A2,Th31,CARD_3:def 5;
  hence
A6: h.x in dom g by A5,A4;
  ex f1 st (Frege f).h = f1 & dom f1 = f"SubFuncs rng f & for x st x in
  dom f1 holds f1.x = (uncurry f).(x,h.x) by A2,Def7;
  hence h'.x = (uncurry f).(x,h.x) by A3,A4
    .= g.(h.x) by A1,A6,FUNCT_5:45;
A7: rng Frege f c= product rngs f by Lm2;
  dom Frege f = product doms f by Def7;
  then h' in rng Frege f by A2,A3,FUNCT_1:def 5;
  hence thesis by A7;
end;

Lm3: product rngs f c= rng Frege f
proof
  let x;
  deffunc F(set) = (doms f).$1;
  assume
  x in product rngs f;
  then consider g such that
A1: x = g and
A2: dom g = dom rngs f and
A3: for y st y in dom rngs f holds g.y in (rngs f).y by CARD_3:def 5;
  defpred P[set,set] means ex f1 st f1 = f.$1 & f1.$2 = g.$1;
  consider h such that

A4: dom h = f"SubFuncs rng f & for x st x in f"SubFuncs rng f for y
  holds y in h.x iff y in F(x) & P[x,y] from CARD_3:sch 4;

A5: product doms f = dom Frege f by Def7;
A6: dom doms f = f"SubFuncs rng f by Def2;
A7: dom rngs f = f"SubFuncs rng f by Def3;
A8: now
    let X;
    assume
    X in rng h;
    then consider x such that
A9: x in dom h and
A10: X = h.x by FUNCT_1:def 5;
    f.x in SubFuncs rng f by A4,A9,FUNCT_1:def 13;
    then reconsider fx = f.x as Function by Def1;
A11: x in dom f by A4,A9,FUNCT_1:def 13;
    then
A12: (rngs f).x = rng fx by Th31;
    g.x in (rngs f).x by A3,A7,A4,A9;
    then
A13: ex y st y in dom fx & g.x = fx.y by A12,FUNCT_1:def 5;
    (doms f).x = dom fx by A11,Th31;
    hence X <> {} by A4,A9,A10,A13;
  end;
A14: now
    assume
    f"SubFuncs rng f <> {};
    then reconsider D = rng h as non empty set by A4,RELAT_1:65;
    consider Ch being Function such that
A15: dom Ch = D and
A16: for x st x in D holds Ch.x in x by A8,WELLORD2:28;
A17: dom (Ch*h) = dom h by A15,RELAT_1:46;
    now
      let y;
      assume
A18:  y in dom doms f;

      then (Ch*h).y = Ch.(h.y) & h.y in rng h by A6,A4,A17,FUNCT_1:22,def
      5;

      then (Ch*h).y in h.y by A16;
      hence (Ch*h).y in (doms f).y by A6,A4,A18;
    end;
    then
A19: Ch*h in product doms f by A6,A4,A17,CARD_3:def 5;
    then consider h1 being Function such that
A20: (Frege f).(Ch*h) = h1 and
A21: dom h1 = f"SubFuncs rng f and

A22: for x st x in dom h1 holds h1.x = (uncurry f).(x,(Ch*h).x) by
    Def7;

    now
      let z;
      assume
A23:  z in f"SubFuncs rng f;
      then
A24:  h1.z = (uncurry f).(z,(Ch*h).z) by A21,A22;

      (Ch*h).z = Ch.( h.z ) & h.z in rng h by A4,A17,A23,FUNCT_1:22,def 5;

      then
A25:  (Ch*h).z in h.z by A16;
      then consider f1 such that
A26:  f1 = f.z and
A27:  f1.((Ch*h).z) = g.z by A4,A23;
A28:  (Ch*h).z in (doms f).z by A4,A23,A25;
A29:  z in dom f by A23,FUNCT_1:def 13;
      then (doms f).z = dom f1 by A26,Th31;
      hence h1.z = g.z by A29,A24,A26,A27,A28,FUNCT_5:45;
    end;
    then x = h1 by A1,A2,A7,A21,FUNCT_1:9;
    hence thesis by A5,A19,A20,FUNCT_1:def 5;
  end;
  now
    assume
A30: f"SubFuncs rng f = {};
    then
A31: g = {} by A2,Def3;
    dom Frege f = {{}} by A6,A5,A30,CARD_3:19,RELAT_1:64;
    then
A32: {} in dom Frege f by TARSKI:def 1;
    then consider h such that
A33: (Frege f).{} = h and
A34: dom h = f"SubFuncs rng f and
    for x st x in dom h holds h.x = (uncurry f).(x,{} .x) by A5,Def7;
    h = {} by A30,A34;
    hence thesis by A1,A31,A32,A33,FUNCT_1:def 5;
  end;
  hence thesis by A14;
end;

theorem Th58:
  rng Frege f = product rngs f
proof
  thus rng Frege f c= product rngs f & product rngs f c= rng Frege f by Lm2,
  Lm3;
end;

theorem Th59:
  not {} in rng f implies (Frege f is one-to-one iff for g st g in
  rng f holds g is one-to-one)
proof
  consider h0 being Element of product doms f;
A1: dom doms f = f"SubFuncs rng f by Def2;
  assume
A2: not {} in rng f;
  now
    assume
    {} in rng doms f;
    then consider x such that
A3: x in dom doms f and
A4: {} = (doms f).x by FUNCT_1:def 5;
A5: x in f"SubFuncs rng f by A3,Def2;
    then f.x in SubFuncs rng f by FUNCT_1:def 13;
    then reconsider g = f.x as Function by Def1;
A6: x in dom f by A5,FUNCT_1:def 13;
    then
A7: g in rng f by FUNCT_1:def 5;
    {} = dom g by A4,A6,Th31;
    hence contradiction by A2,A7,RELAT_1:64;
  end;
  then product doms f <> {} by CARD_3:37;
  then consider h such that
  h0 = h and
  dom h = dom doms f and
A8: for x st x in dom doms f holds h.x in (doms f).x by CARD_3:def
  5;
A9: dom Frege f = product doms f by Def7;
  thus Frege f is one-to-one implies for g st g in rng f holds g is one-to-one
  proof
    deffunc G(set) = h.$1;
    assume
A10: for x,y st x in dom Frege f & y in dom Frege f & (Frege f).x = (
    Frege f).y holds x = y;
    let g;
    assume
    g in rng f;
    then consider z such that
A11: z in dom f & g = f.z by FUNCT_1:def 5;
    defpred P[set] means $1 = z;
    let x,y;
    deffunc F(set) = x;
    consider h1 being Function such that
A12: dom h1 = f"SubFuncs rng f & for a st a in f"SubFuncs rng f holds
(P[a] implies h1.a = F(a)) & (not P[a] implies h1.a = G(a)) from PARTFUN1:sch 1
    ;
    assume that
A13: x in dom g and
A14: y in dom g and
A15: g.x = g.y;
    now
      let a;
      assume
A16:  a in dom doms f;
      then
A17:  a <> z implies h1.a = h.a by A1,A12;
      a = z implies h1.a = x by A1,A12,A16;
      hence h1.a in (doms f).a by A8,A11,A13,A16,A17,Th31;
    end;
    then
A18: h1 in product doms f by A1,A12,CARD_3:def 5;
    then consider g1 being Function such that
A19: (Frege f).h1 = g1 and
A20: dom g1 = f"SubFuncs rng f and
A21: for x st x in dom g1 holds g1.x = (uncurry f).(x,h1.x) by
    Def7;
    defpred P[set] means $1 = z;
    deffunc G(set) = h.$1;
    deffunc F(set) = y;
    consider h2 being Function such that
A22: dom h2 = f"SubFuncs rng f & for a st a in f"SubFuncs rng f holds
(P[a] implies h2.a = F(a)) & (not P[a] implies h2.a = G(a)) from PARTFUN1:sch 1
    ;
    now
      let a;
      assume
A23:  a in dom doms f;
      then
A24:  a <> z implies h2.a = h.a by A1,A22;
      a = z implies h2.a = y by A1,A22,A23;
      hence h2.a in (doms f).a by A8,A11,A14,A23,A24,Th31;
    end;
    then
A25: h2 in product doms f by A1,A22,CARD_3:def 5;
    then consider g2 being Function such that
A26: (Frege f).h2 = g2 and
A27: dom g2 = f"SubFuncs rng f and
A28: for x st x in dom g2 holds g2.x = (uncurry f).(x,h2.x) by
    Def7;
    now
      let a;
      assume
A29:  a in f"SubFuncs rng f;
      then
A30:  g2.a = (uncurry f).(a,h2.a) by A27,A28;
A31:  g1.a = (uncurry f).(a,h1.a) by A20,A21,A29;
      per cases;
      suppose
A32:    a <> z;
        then h1.a = h.a by A12,A29;
        hence g1.a = g2.a by A22,A29,A30,A31,A32;
      end;
      suppose
A33:    a = z;
        then h1.a = x by A12,A29;
        then
A34:    g1.a = g.x by A11,A13,A31,A33,FUNCT_5:45;
        h2.a = y by A22,A29,A33;
        hence g1.a = g2.a by A11,A14,A15,A30,A33,A34,FUNCT_5:45;
      end;
    end;
    then g1 = g2 by A20,A27,FUNCT_1:9;
    then
A35: h1 = h2 by A9,A10,A18,A19,A25,A26;
    g in rng f by A11,FUNCT_1:def 5;
    then g in SubFuncs rng f by Def1;
    then
A36: z in f"SubFuncs rng f by A11,FUNCT_1:def 13;
    then h1.z = x by A12;
    hence thesis by A36,A22,A35;
  end;
  assume
A37: for g st g in rng f holds g is one-to-one;
  let x,y;
  assume that
A38: x in dom Frege f and
A39: y in dom Frege f and
A40: (Frege f).x = (Frege f).y;
  consider g2 being Function such that
A41: y = g2 and
A42: dom g2 = dom doms f and
A43: for x st x in dom doms f holds g2.x in (doms f).x by A9,A39,
  CARD_3:def 5;
  consider g1 being Function such that
A44: x = g1 and
A45: dom g1 = dom doms f and
A46: for x st x in dom doms f holds g1.x in (doms f).x by A9,A38,
  CARD_3:def 5;
  consider h2 being Function such that
A47: (Frege f).g2 = h2 and
A48: dom h2 = f"SubFuncs rng f & for x st x in dom h2 holds h2.x = (
  uncurry f).(x,g2.x) by A9,A39,A41,Def7;
  consider h1 being Function such that
A49: (Frege f).g1 = h1 and
A50: dom h1 = f"SubFuncs rng f & for x st x in dom h1 holds h1.x = (
  uncurry f).(x,g1.x) by A9,A38,A44,Def7;
  now
    let a;
    assume
A51: a in f"SubFuncs rng f;
    then f.a in SubFuncs rng f by FUNCT_1:def 13;
    then reconsider g = f.a as Function by Def1;
A52: a in dom f by A51,FUNCT_1:def 13;
    then
A53: dom g = (doms f).a by Th31;
    then
A54: g2.a in dom g by A1,A43,A51;
A55: g1.a in dom g by A1,A46,A51,A53;
    h2.a = (uncurry f).(a,g2.a) by A48,A51;
    then
A56: h2.a = g.(g2.a) by A52,A54,FUNCT_5:45;
    g in rng f by A52,FUNCT_1:def 5;
    then
A57: g is one-to-one by A37;
    h1.a = (uncurry f).(a,g1.a) by A50,A51;
    then h1.a = g.(g1.a) by A52,A55,FUNCT_5:45;
    hence g1.a = g2.a by A40,A44,A41,A49,A47,A55,A54,A56,A57,FUNCT_1:def 8;
  end;
  hence thesis by A1,A44,A45,A41,A42,FUNCT_1:9;
end;

begin

theorem
  <:{}:> = {} & Frege{} = {} .--> {}
proof
A1: dom doms {} = {}"SubFuncs {} by Def2,RELAT_1:60;
  then
A2: product doms {} = {{}} by CARD_3:19,RELAT_1:64,172;
A3: now
    let x;
    assume
A4: x in {{}};
    then
A5: x = {} by TARSKI:def 1;
    then
    ex h st (Frege{}).{} = h & dom h = {}"SubFuncs rng {} & for x st x in
    dom h holds h.x = (uncurry {}).(x,{} .x) by A2,A4,Def7;
    hence (Frege{}).x = {} by A5,RELAT_1:172;
  end;
A6: meet({} qua set) = {} by SETFAM_1:def 1;
  {}"SubFuncs {} = {} by RELAT_1:172;
  then rng doms {} = {} by A1,RELAT_1:60,64;
  then dom <:{}:> = {} by A6,Th49;
  hence <:{}:> = {};
  dom Frege{} = product doms {} by Def7;
  hence thesis by A2,A3,FUNCOP_1:17;
end;

theorem
  dom <:<*h*>:> = dom h & for x st x in dom h holds <:<*h*>:>.x = <*h.x
  *>
proof
A1: 1 in Seg 1 by FINSEQ_1:4,TARSKI:def 1;
A2: rng <:<*h*>:> c= product rngs <*h*> & rngs <*h*> = <*rng h*> by Th33,
  Th49;
  thus
A3: dom <:<*h*>:> = meet doms <*h*> by Th49
    .= meet <*dom h*> by Th33
    .= dom h by Th39;
  let x;
  assume
A4: x in dom h;
  then <:<*h*>:>.x in rng <:<*h*>:> by A3,FUNCT_1:def 5;
  then consider g such that
A5: <:<*h*>:>.x = g and
A6: dom g = dom <*rng h*> and
  for y st y in dom <*rng h*> holds g.y in <*rng h*>.y by A2, CARD_3:
  def 5;
A7: dom g = Seg 1 by A6,FINSEQ_1:55;
  dom <*h*> = Seg 1 & <*h*>.1 = h by FINSEQ_1:55,57;
  then
A8: (uncurry <*h*>).(1,x) = h.x by A4,A1,FUNCT_5:45;
  reconsider g as FinSequence by A7,FINSEQ_1:def 2;
A9: len g = 1 by A7,FINSEQ_1:def 3;
  g.1 = (uncurry <*h*>).(1,x) by A3,A4,A5,A7,A1,Th51;
  hence thesis by A5,A8,A9,FINSEQ_1:57;
end;

theorem Th62:
  dom <:<*f1,f2*>:> = dom f1 /\ dom f2 & for x st x in dom f1 /\
  dom f2 holds <:<*f1,f2*>:>.x = <*f1.x,f2.x*>
proof
A1: dom <*f1,f2*> = Seg 2 by FINSEQ_3:29;
A2: rng <:<*f1,f2*>:> c= product rngs <*f1,f2*> & rngs <*f1,f2*> = <*rng f1,
  rng f2*> by Th34,Th49;
  thus
A3: dom <:<*f1,f2*>:> = meet doms <*f1,f2*> by Th49
    .= meet <*dom f1, dom f2*> by Th34
    .= dom f1 /\ dom f2 by Th40;
  let x;
  assume
A4: x in dom f1 /\ dom f2;
  then <:<*f1,f2*>:>.x in rng <:<*f1,f2*>:> by A3,FUNCT_1:def 5;
  then consider g such that
A5: <:<*f1,f2*>:>.x = g and
A6: dom g = dom <*rng f1, rng f2*> and
  for y st y in dom <*rng f1, rng f2*> holds g.y in <*rng f1, rng f2*> .y
  by A2,CARD_3:def 5;
A7: dom g = Seg 2 by A6,FINSEQ_3:29;
A8: 1 in Seg 2 by FINSEQ_1:4,TARSKI:def 2;
  reconsider g as FinSequence by A7,FINSEQ_1:def 2;
A9: 2 in Seg 2 by FINSEQ_1:4,TARSKI:def 2;
  then
A10: g.2 = (uncurry <*f1,f2*>).(2,x) by A3,A4,A5,A7,Th51;
  <*f1,f2*>.2 = f2 & x in dom f2 by A4,FINSEQ_1:61,XBOOLE_0:def 4;
  then
A11: (uncurry <*f1,f2*>).(2,x) = f2.x by A1,A9,FUNCT_5:45;
A12: len g = 2 by A7,FINSEQ_1:def 3;
  <*f1,f2*>.1 = f1 & x in dom f1 by A4,FINSEQ_1:61,XBOOLE_0:def 4;
  then
A13: (uncurry <*f1,f2*>).(1,x) = f1.x by A1,A8,FUNCT_5:45;
  g.1 = (uncurry <*f1,f2*>).(1,x) by A3,A4,A5,A7,A8,Th51;
  hence thesis by A5,A13,A10,A11,A12,FINSEQ_1:61;
end;

theorem
  X <> {} implies dom <:X --> f:> = dom f & for x st x in dom f holds <:
  X --> f:>.x = X --> f.x
proof
  assume
A1: X <> {};
  thus
A2: dom <:X --> f:> = meet doms (X --> f) by Th49
    .= meet (X --> dom f) by Th36
    .= dom f by A1,Th43;
A3: rng <:X --> f:> c= product rngs (X --> f) & rngs (X --> f) = X --> rng f
  by Th36,Th49;
  let x;
  assume
A4: x in dom f;
  then <:X --> f:>.x in rng <:X --> f:> by A2,FUNCT_1:def 5;
  then consider g such that
A5: <:X --> f:>.x = g and
A6: dom g = dom (X --> rng f) and
  for y st y in dom (X --> rng f) holds g.y in (X --> rng f).y by A3,
  CARD_3:def 5;
A7: dom g = X by A6,FUNCOP_1:19;
A8: dom (X --> f) = X by FUNCOP_1:19;
A9: now
    let y;
    assume
A10: y in X;
    then g.y = (uncurry (X --> f)).(y,x) & (X --> f).y = f by A2,A4,A5,A7,
    Th51, FUNCOP_1:13;
    then g.y = f.x by A4,A8,A10,FUNCT_5:45;
    hence g.y = (X --> f.x).y by A10,FUNCOP_1:13;
  end;
  dom (X --> f.x) = X by FUNCOP_1:19;
  hence thesis by A5,A7,A9,FUNCT_1:9;
end;

theorem
  dom Frege<*h*> = product <*dom h*> & rng Frege<*h*> = product <*rng h
  *> & for x st x in dom h holds (Frege<*h*>).<*x*> = <*h.x*>
proof
A1: <*h*>.1 = h by FINSEQ_1:def 8;
A2: rngs <*h*> = <*rng h*> by Th33;
A3: doms <*h*> = <*dom h*> by Th33;
  hence
  dom Frege<*h*> = product <*dom h*> & rng Frege<*h*> = product <*rng h*>
  by A2,Def7,Th58;
  let x;
  assume
  x in dom h;
  then
A4: <*x*> in product doms <*h*> by A3,Th1;
  then consider f such that
A5: (Frege<*h*>).<*x*> = f and
  dom f = <*h*>"SubFuncs rng <*h*> and
  for y st y in dom f holds f.y = (uncurry <*h*>).(y,<*x*>.y) by Def7;
A6: dom <*h*> = Seg 1 & 1 in Seg 1 by FINSEQ_1:4,def 8,TARSKI:def 1;
  then dom <*rng h*> = Seg 1 & f in product rngs <*h*> by A1,A4,A5,Th57,
  FINSEQ_1:def 8;
  then
A7: dom f = Seg 1 by A2,CARD_3:18;
A8: <*x*>.1 = x by FINSEQ_1:def 8;
  reconsider f as FinSequence by A7,FINSEQ_1:def 2;
  f.1 = h.(<*x*>.1) by A6,A1,A4,A5,Th57;
  hence thesis by A5,A7,A8,FINSEQ_1:def 8;
end;

theorem Th65:
  dom Frege<*f1,f2*> = product <*dom f1, dom f2*> & rng Frege<*f1,
f2*> = product <*rng f1, rng f2*> & for x,y st x in dom f1 & y in dom f2 holds
  (Frege<*f1,f2*>).<*x,y*> = <*f1.x, f2.y*>
proof
A1: rngs <*f1,f2*> = <*rng f1, rng f2*> by Th34;
  len <*rng f1, rng f2*> = 2 by FINSEQ_1:61;
  then
A2: dom <*rng f1, rng f2*> = Seg 2 by FINSEQ_1:def 3;
  len <*f1,f2*> = 2 by FINSEQ_1:61;
  then
A3: dom <*f1,f2*> = Seg 2 by FINSEQ_1:def 3;
A4: doms <*f1,f2*> = <*dom f1, dom f2*> by Th34;
  hence dom Frege<*f1,f2*> = product <*dom f1, dom f2*> & rng Frege<*f1,f2*> =
  product <*rng f1, rng f2*> by A1,Def7,Th58;
  let x,y;
  assume
  x in dom f1 & y in dom f2;
  then
A5: <*x,y*> in product doms <*f1,f2*> by A4,Th2;
  then consider f such that
A6: (Frege<*f1,f2*>).<*x,y*> = f and
  dom f = <*f1,f2*>"SubFuncs rng <*f1,f2*> and
  for z st z in dom f holds f.z = (uncurry <*f1,f2*>).(z,<*x,y*>.z) by
  Def7;
A7: <*x,y*>.1 = x & <*x,y*>.2 = y by FINSEQ_1:61;
A8: 1 in Seg 2 & <*f1,f2*>.1 = f1 by FINSEQ_1:4,61,TARSKI:def 2;
  then f in product rngs <*f1,f2*> by A3,A5,A6,Th57;
  then
A9: dom f = Seg 2 by A1,A2,CARD_3:18;
  then reconsider f as FinSequence by FINSEQ_1:def 2;
  2 in Seg 2 & <*f1,f2*>.2 = f2 by FINSEQ_1:4,61,TARSKI:def 2;
  then
A10: f.2 = f2.(<*x,y*>.2) by A3,A5,A6,Th57;
A11: len f = 2 by A9,FINSEQ_1:def 3;
  f.1 = f1.(<*x,y*>.1) by A3,A8,A5,A6,Th57;
  hence thesis by A6,A10,A11,A7,FINSEQ_1:61;
end;

theorem
  dom Frege(X-->f) = Funcs(X,dom f) & rng Frege(X-->f) = Funcs(X,rng f)
  & for g st g in Funcs(X,dom f) holds (Frege(X-->f)).g = f*g
proof
A1: product (X --> dom f) = Funcs(X, dom f) by CARD_3:20;
A2: doms (X --> f) = X --> dom f by Th36;
  rngs (X --> f) = X --> rng f & product (X --> rng f) = Funcs(X, rng f)
  by Th36,CARD_3:20;
  hence dom Frege(X-->f) = Funcs(X,dom f) & rng Frege(X-->f) = Funcs(X,rng f)
  by A2,A1,Def7,Th58;
  let g;
  assume
A3: g in Funcs(X,dom f);
  then consider h such that
A4: (Frege(X-->f)).g = h and
A5: dom h = (X --> f)"SubFuncs rng (X --> f) and
A6: for x st x in dom h holds h.x = (uncurry (X --> f)).(x,g.x) by A2,A1
  ,Def7;
  dom (X --> dom f) = X by FUNCOP_1:19;
  then
A7: dom h = X by A2,A5,Def2;
A8: ex g' being Function st g = g' & dom g' = X & rng g' c= dom f by A3,
  FUNCT_2:def 2;
  then
A9: dom (f*g) = X by RELAT_1:46;
A10: dom (X --> f) = X by FUNCOP_1:19;
  now
    let x;
    assume
A11: x in X;
    then
A12: h.x = (uncurry (X --> f)).(x,g.x) & (X --> f).x = f by A6,A7,
    FUNCOP_1:13;
    g.x in rng g & (f*g).x = f.(g.x) by A8,A9,A11,FUNCT_1:22,def 5;
    hence (f*g).x = h.x by A8,A10,A11,A12,FUNCT_5:45;
  end;
  hence thesis by A4,A7,A9,FUNCT_1:9;
end;

theorem
  x in dom f1 & x in dom f2 implies for y1,y2 holds <:f1,f2:>.x = [y1,y2
  ] iff <:<*f1,f2*>:>.x = <*y1,y2*>
proof
A1: <*f1.x,f2.x*>.1 = f1.x & <*f1.x,f2.x*>.2 = f2.x by FINSEQ_1:61;
  assume
  x in dom f1 & x in dom f2;
  then
A2: x in dom f1 /\ dom f2 by XBOOLE_0:def 4;
  let y1,y2;
A3: <*y1,y2*>.1 = y1 & <*y1,y2*>.2 = y2 by FINSEQ_1:61;
  [f1.x,f2.x] = [y1,y2] iff f1.x = y1 & f2.x = y2 by ZFMISC_1:33;
  hence thesis by A2,A1,A3,Th62,FUNCT_3:68;
end;

theorem
  x in dom f1 & y in dom f2 implies for y1,y2 holds [:f1,f2:].(x,y) = [
  y1,y2] iff (Frege<*f1,f2*>).<*x,y*> = <*y1,y2*>
proof
  assume
A1: x in dom f1 & y in dom f2;
  let y1,y2;
A2: <*f1.x,f2.y*>.1 = f1.x & <*f1.x,f2.y*>.2 = f2.y by FINSEQ_1:61;
A3: <*y1,y2*>.1 = y1 & <*y1,y2*>.2 = y2 by FINSEQ_1:61;
  [f1.x,f2.y] = [y1,y2] iff f1.x = y1 & f2.y = y2 by ZFMISC_1:33;
  hence thesis by A1,A2,A3,Th65,FUNCT_3:def 9;
end;

theorem Th69:
  dom f = X & dom g = X & (for x st x in X holds f.x,g.x
  are_equipotent) implies product f,product g are_equipotent
proof
  assume that
A1: dom f = X and
A2: dom g = X and
A3: for x st x in X holds f.x,g.x are_equipotent;
  defpred P[set,set] means ex f1 st $2 = f1 & f1 is one-to-one & dom f1 = f.$1
  & rng f1 = g.$1;
A4: for x st x in X ex y st P[x,y]
  proof
    let x;
    assume
    x in X;
    then f.x,g.x are_equipotent by A3;
    then ex h st h is one-to-one & dom h = f.x & rng h = g.x by WELLORD2:
    def 4;
    hence thesis;
  end;
  consider h such that
A5: dom h = X & for x st x in X holds P[x,h.x] from CLASSES1:sch 1(A4);
A6: now
    let x;
    assume
A7: x in X;
    then
    ex f1 st h.x = f1 & f1 is one-to-one & dom f1 = f.x & rng f1 = g.x by
    A5;
    hence (rngs h).x = g.x by A5,A7,Th31;
  end;
  now
    let x;
    assume
    x in rng h;
    then consider a such that
A8: a in X & x = h.a by A5,FUNCT_1:def 5;
    ex f1 st x = f1 & f1 is one-to-one & dom f1 = f.a & rng f1 = g.a by
    A5,A8;
    hence x is Function;
  end;
  then SubFuncs rng h = rng h by Lm1;
  then
A9: h"SubFuncs rng h = X by A5,RELAT_1:169;
  then dom rngs h = X by Def3;
  then
A10: rngs h = g by A2,A6,FUNCT_1:9;
A11: now
    let x;
    assume
A12: x in X;
    then
    ex f1 st h.x = f1 & f1 is one-to-one & dom f1 = f.x & rng f1 = g.x by
    A5;
    hence (doms h).x = f.x by A5,A12,Th31;
  end;
  dom doms h = X by A9,Def2;
  then
A13: doms h = f by A1,A11,FUNCT_1:9;
  now
    per cases;
    suppose
      {} in rng h;
      then consider x such that
A14:  x in X and
A15:  {} = h.x by A5,FUNCT_1:def 5;
A16:  ex f1 st {} = f1 & f1 is one-to-one & dom f1 = f.x & rng f1 = g.x
      by A5,A14,A15;
      then {} in rng f by A1,A14,FUNCT_1:def 5,RELAT_1:60;
      then
A17:  product f = {} by CARD_3:37;
      {} in rng g by A2,A14,A16,FUNCT_1:def 5,RELAT_1:60;
      hence thesis by A17,CARD_3:37;
    end;
    suppose
A18:  not {} in rng h;
A19:  now
        let f1;
        assume
        f1 in rng h;
        then consider x such that
A20:    x in X and
A21:    f1 = h.x by A5,FUNCT_1:def 5;
        ex f1 st h.x = f1 & f1 is one-to-one & dom f1 = f.x & rng f1 = g.
        x by A5,A20;
        hence f1 is one-to-one by A21;
      end;
      thus thesis
      proof
        take Frege h;
        thus thesis by A13,A10,A18,A19,Def7,Th58,Th59;
      end;
    end;
  end;
  hence thesis;
end;

theorem Th70:
  dom f = dom h & dom g = rng h & h is one-to-one & (for x st x in
  dom h holds f.x, g.(h.x) are_equipotent) implies product f,product g
  are_equipotent
proof
  set X = dom f;
  assume that
A1: dom f = dom h and
A2: dom g = rng h and
A3: h is one-to-one and
A4: for x st x in dom h holds f.x,g.(h.x) are_equipotent;
A5: h*(h") = id dom g by A2,A3,FUNCT_1:61;
A6: dom (g*h) = dom f by A1,A2,RELAT_1:46;
  now
    let x;
    assume
A7: x in dom f;
    then f.x,g.(h.x) are_equipotent by A1,A4;
    hence f.x,(g*h).x are_equipotent by A6,A7,FUNCT_1:22;
  end;
  then
A8: product f,product (g*h) are_equipotent by A6,Th69;
  defpred P[set,set] means ex f1 st $1 = f1 & $2 = f1*(h");
A9: for x st x in product (g*h) ex y st P[x,y]
  proof
    let x;
    assume
    x in product (g*h);
    then ex f1 st x = f1 & dom f1 = dom (g*h) & for y st y in dom (g*h) holds
    f1.y in (g*h).y by CARD_3:def 5;
    then consider f1 such that
A10: x = f1;
    f1*(h") = f1*(h");
    hence thesis by A10;
  end;
  consider F being Function such that
A11: dom F = product (g*h) & for x st x in product (g*h) holds P[x,F.x]
  from CLASSES1:sch 1(A9);
A12: rng (h") = X by A1,A3,FUNCT_1:55;
A13: F is one-to-one
  proof
    let x,y;
    assume that
A14: x in dom F and
A15: y in dom F and
A16: F.x = F.y;
    consider g2 being Function such that
A17: y = g2 and
A18: F.y = g2*(h") by A11,A15;
A19: dom g2 = X by A6,A11,A15,A17,CARD_3:18;
    consider g1 being Function such that
A20: x = g1 and
A21: F.x = g1*(h") by A11,A14;
    dom g1 = X by A6,A11,A14,A20,CARD_3:18;
    hence thesis by A12,A16,A20,A21,A17,A18,A19,FUNCT_1:156;
  end;
A22: (g*h)*(h") = g*(h*(h")) & g*id dom g = g by RELAT_1:55,78;
A23: product g c= rng F
  proof
    let x;
    assume
    x in product g;
    then consider f1 such that
A24: x = f1 and
A25: dom f1 = dom g and
A26: for z st z in dom g holds f1.z in g.z by CARD_3:def 5;
A27: dom (f1*h) = X by A1,A2,A25,RELAT_1:46;
    now
      let z;
      assume
A28:  z in X;
      then
A29:  h.z in dom g by A1,A2,FUNCT_1:def 5;
A30:  (h").(h.z) = z by A1,A3,A28,FUNCT_1:56;
      (f1*h).z = f1.(h.z) by A27,A28,FUNCT_1:22;
      then (f1*h).z in ((g*h)*(h")).(h.z) by A5,A22,A26,A29;
      hence (f1*h).z in (g*h).z by A5,A22,A29,A30,FUNCT_1:22;
    end;
    then
A31: f1*h in product (g*h) by A6,A27,CARD_3:def 5;
    then ex f2 st f1*h = f2 & F.(f1*h) = f2*(h") by A11;
    then F.(f1*h) = f1*id dom g by A5,RELAT_1:55
      .= x by A24,A25,RELAT_1:77;
    hence thesis by A11,A31,FUNCT_1:def 5;
  end;
A32: dom (h") = rng h by A3,FUNCT_1:55;
  rng F c= product g
  proof
    let x;
    assume
    x in rng F;
    then consider y such that
A33: y in dom F and
A34: x = F.y by FUNCT_1:def 5;
    consider f1 such that
A35: y = f1 and
A36: dom f1 = X and
A37: for z st z in X holds f1.z in (g*h).z by A6,A11,A33,CARD_3:def 5;
A38: dom (f1*(h")) = dom g by A2,A12,A32,A36,RELAT_1:46;
A39: now
      let z;
      assume
A40:  z in dom g;
      then
A41:  (h").z in X by A2,A12,A32,FUNCT_1:def 5;
      g.z = (g*h).((h").z) & (f1*(h")).z = f1.((h").z) by A5,A22,A38,A40
      , FUNCT_1:22;
      hence (f1*(h")).z in g.z by A37,A41;
    end;
    ex f1 st y = f1 & F.y = f1*(h") by A11,A33;
    hence thesis by A34,A35,A38,A39,CARD_3:def 5;
  end;
  then rng F = product g by A23,XBOOLE_0:def 10;
  then product (g*h),product g are_equipotent by A11,A13,WELLORD2:def 4;
  hence thesis by A8,WELLORD2:22;
end;

theorem
  dom f = X implies product f,product (f*P) are_equipotent
proof
  assume
A1: dom f = X;
A2: rng P = X by FUNCT_2:def 3;
  dom P = X by FUNCT_2:67;
  then
A3: dom (f*P) = X by A1,A2,RELAT_1:46;
A4: rng (P") = X by FUNCT_2:def 3;
A5: dom (P") = X by FUNCT_2:67;
  now
    let x;
    assume
A6: x in dom (P");
    then P".x in X by A4,FUNCT_1:def 5;
    then (f*P).(P".x) = f.(P.(P".x)) by A3,FUNCT_1:22
      .= f.x by A5,A2,A6,FUNCT_1:57;
    hence f.x,(f*P).(P".x) are_equipotent;
  end;
  hence thesis by A1,A5,A4,A3,Th70;
end;

begin

definition
  let f,X;
  func Funcs(f,X) -> Function means
  :Def8:
  dom it = dom f & for x st x in dom
  f holds it.x = Funcs(f.x,X);
  existence
  proof
    deffunc F(set) = Funcs(f.$1,X);
    ex F be Function st dom F = dom f & for x st x in dom f holds F.x = F(
    x) from FUNCT_1:sch 3;
    hence thesis;
  end;
  uniqueness
  proof
    let f1,f2 such that
A1: dom f1 = dom f and
A2: for x st x in dom f holds f1.x = Funcs(f.x,X) and
A3: dom f2 = dom f and
A4: for x st x in dom f holds f2.x = Funcs(f.x,X);
    now
      let x;
      assume
A5:   x in dom f;
      then f1.x = Funcs(f.x,X) by A2;
      hence f1.x = f2.x by A4,A5;
    end;
    hence thesis by A1,A3,FUNCT_1:9;
  end;
end;

theorem
  not {} in rng f implies Funcs(f,{}) = dom f --> {}
proof
  assume
A1: not {} in rng f;
A2: now
    let x;
    assume
A3: x in dom f;
    then
A4: f.x <> {} by A1,FUNCT_1:def 5;
    thus (dom f --> {}).x = {} by A3,FUNCOP_1:13
      .= Funcs(f.x,{}) by A4;
  end;
  dom (dom f --> {}) = dom f by FUNCOP_1:19;
  hence thesis by A2,Def8;
end;

theorem
  Funcs({},X) = {}
proof
  dom Funcs({},X) = dom {} by Def8;
  hence thesis;
end;

theorem
  Funcs(<*X*>,Y) = <*Funcs(X,Y)*>
proof
A1: dom <*X*> = Seg 1 by FINSEQ_1:def 8;
A2: dom Funcs(<*X*>,Y) = dom <*X*> by Def8;
  then reconsider p = Funcs(<*X*>,Y) as FinSequence by A1,FINSEQ_1:def 2;
  <*X*>.1 = X & 1 in Seg 1 by FINSEQ_1:4,def 8,TARSKI:def 1;
  then p.1 = Funcs(X,Y) by A1,Def8;
  hence thesis by A2,A1,FINSEQ_1:def 8;
end;

theorem
  Funcs(<*X,Y*>,Z) = <*Funcs(X,Z), Funcs(Y,Z)*>
proof
A1: Seg len <*X,Y*> = dom <*X,Y*> by FINSEQ_1:def 3;
A2: dom Funcs(<*X,Y*>,Z) = dom <*X,Y*> by Def8;
  then reconsider p = Funcs(<*X,Y*>,Z) as FinSequence by A1,FINSEQ_1:def 2;
A3: len <*X,Y*> = 2 by FINSEQ_1:61;
  then
A4: len p = 2 by A2,A1,FINSEQ_1:def 3;
  <*X,Y*>.2 = Y & 2 in Seg 2 by FINSEQ_1:4,61,TARSKI:def 2;
  then
A5: p.2 = Funcs(Y,Z) by A3,A1,Def8;
  <*X,Y*>.1 = X & 1 in Seg 2 by FINSEQ_1:4,61,TARSKI:def 2;
  then p.1 = Funcs(X,Z) by A3,A1,Def8;
  hence thesis by A4,A5,FINSEQ_1:61;
end;

theorem
  Funcs(X --> Y, Z) = X --> Funcs(Y,Z)
proof
A1: X = dom (X --> Y) by FUNCOP_1:19;
A2: now
    let x;
    assume
A3: x in X;
    then Funcs(X --> Y, Z).x = Funcs((X --> Y).x,Z) by A1,Def8;
    hence Funcs(X --> Y, Z).x = Funcs(Y,Z) by A3,FUNCOP_1:13;
  end;
  dom Funcs(X --> Y, Z) = dom (X --> Y) by Def8;
  hence thesis by A1,A2,FUNCOP_1:17;
end;

Lm4: [x,y] in dom f & g = (curry f).x & z in dom g implies [x,z] in dom f
proof
  assume
  [x,y] in dom f;
  then x in proj1 dom f by RELAT_1:def 4;

  then
A1: ex g' being Function st (curry f).x = g' & dom g' = proj2 (dom f /\ [:{x
  },proj2 dom f:]) & for y st y in dom g' holds g'.y = f.(x,y) by FUNCT_5:def
  3;

  assume
  g = (curry f).x & z in dom g;
  then consider y such that
A2: [y,z] in dom f /\ [:{x}, proj2 dom f:] by A1,RELAT_1:def 5;
  [y,z] in [:{x}, proj2 dom f:] by A2,XBOOLE_0:def 4;
  then
A3: y in {x} by ZFMISC_1:106;
  [y,z] in dom f by A2,XBOOLE_0:def 4;
  hence thesis by A3,TARSKI:def 1;
end;

theorem
  Funcs(Union disjoin f,X),product Funcs(f,X) are_equipotent
proof
  defpred P[set,set] means ex g,h st $1 = g & $2 = h & dom h = dom f & for y
  st y in dom f holds (f.y = {} implies h.y = {}) & (f.y <> {} implies h.y = (
  curry' g).y);
A1: for x st x in Funcs(Union disjoin f, X) ex z st P[x,z]
  proof
    defpred P[set] means f.$1 = {};
    deffunc F(set) = {};
    let x;
    assume
    x in Funcs(Union disjoin f, X);
    then consider g such that
A2: x = g and
    dom g = Union disjoin f and
    rng g c= X by FUNCT_2:def 2;
    deffunc G(set) = (curry' g).$1;
    ex h st dom h = dom f & for y st y in dom f holds (P[y] implies h.y =
    F(y)) & (not P[y] implies h.y = G(y)) from PARTFUN1:sch 1;
    hence thesis by A2;
  end;
  consider F being Function such that
A3: dom F = Funcs(Union disjoin f, X) & for x st x in Funcs(Union
  disjoin f, X) holds P[x,F.x] from CLASSES1:sch 1(A1);
  take F;
  thus F is one-to-one
  proof
    let x,y;
    assume that
A4: x in dom F and
A5: y in dom F and
A6: F.x = F.y;
A7: ex f2 being Function st y = f2 & dom f2 = Union disjoin f & rng f2 c=
    X by A3,A5,FUNCT_2:def 2;
    consider g1,h1 being Function such that
A8: x = g1 and
A9: F.x = h1 and
    dom h1 = dom f and
A10: for y st y in dom f holds (f.y = {} implies h1.y = {}) & (f.y <>
    {} implies h1.y = (curry' g1).y) by A3,A4;
    consider g2,h2 being Function such that
A11: y = g2 and
A12: F.y = h2 and
    dom h2 = dom f and
A13: for y st y in dom f holds (f.y = {} implies h2.y = {}) & (f.y <>
    {} implies h2.y = (curry' g2).y) by A3,A5;
A14: ex f1 being Function st x = f1 & dom f1 = Union disjoin f & rng f1 c=
    X by A3,A4,FUNCT_2:def 2;
    now
      let z;
      assume
A15:  z in Union disjoin f;
      then
A16:  z = [z`1,z`2] by CARD_3:33;
A17:  z`2 in dom f & z`1 in f.(z`2) by A15,CARD_3:33;
      then
A18:  h2.z`2 = (curry' g2).z`2 by A13;
      then reconsider
      g'1 = h1.z`2, g'2 = h2.z`2 as Function by A6,A7,A9,A11,A12,
      A15,A16,FUNCT_5:28;
A19:  g2.(z`1,z`2) = g'2.z`1 by A7,A11,A15,A16,A18,FUNCT_5:29;
      h1.z`2 = (curry' g1).z`2 by A10,A17;
      then g1.(z`1,z`2) = g'1.z`1 by A14,A8,A15,A16,FUNCT_5:29;
      hence g1.z = g2.z by A6,A9,A12,A16,A19;
    end;
    hence thesis by A14,A7,A8,A11,FUNCT_1:9;
  end;
  thus dom F = Funcs(Union disjoin f, X) by A3;
  thus rng F c= product Funcs(f,X)
  proof
    let y;
    assume
    y in rng F;
    then consider x such that
A20: x in dom F and
A21: y = F.x by FUNCT_1:def 5;
    consider g,h such that
A22: x = g and
A23: F.x = h and
A24: dom h = dom f and
A25: for y st y in dom f holds (f.y = {} implies h.y = {}) & (f.y <>
    {} implies h.y = (curry' g).y) by A3,A20;
A26: ex f1 being Function st x = f1 & dom f1 = Union disjoin f & rng f1 c=
    X by A3,A20,FUNCT_2:def 2;
A27: now
      let z;
      assume
      z in dom Funcs(f,X);
      then
A28:  z in dom f by Def8;
      then
A29:  Funcs(f,X).z = Funcs(f.z,X) by Def8;
A30:  now
        consider a being Element of f.z;
        assume
A31:    f.z <> {};
        [a,z]`1 = a & [a,z]`2 = z by MCART_1:7;
        then
A32:    [a,z] in Union disjoin f by A28,A31,CARD_3:33;
        then reconsider k = (curry' g).z as Function by A22,A26,FUNCT_5:28;
A33:    z in dom curry' g by A22,A26,A32,FUNCT_5:28;
        then rng k c= rng g by FUNCT_5:41;
        then
A34:    rng k c= X by A22,A26,XBOOLE_1:1;
A35:    dom k = proj1 (dom g /\ [:proj1 dom g,{z}:]) by A33,FUNCT_5:41;
A36:    dom k = f.z
        proof
          thus dom k c= f.z
          proof
            let b be set;
            assume
            b in dom k;
            then consider c being set such that
A37:        [b,c] in dom g /\ [:proj1 dom g,{z}:] by A35,RELAT_1:
            def 4;
            [b,c] in [:proj1 dom g,{z}:] by A37,XBOOLE_0:def 4;
            then
A38:        c in {z} by ZFMISC_1:106;
A39:        [b,c]`1 = b & [b,c]`2 = c by MCART_1:7;
            [b,c] in dom g by A37,XBOOLE_0:def 4;
            then b in f.c by A22,A26,A39,CARD_3:33;
            hence thesis by A38,TARSKI:def 1;
          end;
          let b be set such that
A40:      b in f.z;
A41:      z in {z} by TARSKI:def 1;
          [b,z]`1 = b & [b,z]`2 = z by MCART_1:7;
          then
A42:      [b,z] in dom g by A22,A26,A28,A40,CARD_3:33;
          then b in proj1 dom g by RELAT_1:def 4;
          then [b,z] in [:proj1 dom g,{z}:] by A41,ZFMISC_1:106;
          then [b,z] in dom g /\ [:proj1 dom g,{z}:] by A42,
          XBOOLE_0:def 4;
          hence thesis by A35,RELAT_1:def 4;
        end;
        h.z = k by A25,A28,A31;
        hence h.z in Funcs(f,X).z by A29,A34,A36,FUNCT_2:def 2;
      end;
      now
        assume
        f.z = {};
        then h.z = {} & Funcs(f,X).z = {{}} by A25,A28,A29,FUNCT_5:64;
        hence h.z in Funcs(f,X).z by TARSKI:def 1;
      end;
      hence h.z in Funcs(f,X).z by A30;
    end;
    dom h = dom Funcs(f,X) by A24,Def8;
    hence thesis by A21,A23,A27,CARD_3:def 5;
  end;
  let x;
  assume
  x in product Funcs(f,X);
  then consider s being Function such that
A43: x = s and
A44: dom s = dom Funcs(f,X) and
A45: for z st z in dom Funcs(f,X) holds s.z in Funcs(f,X).z by
  CARD_3:def 5;
A46: dom s = dom f by A44,Def8;
A47: uncurry' s = ~uncurry s by FUNCT_5:def 6;
A48: dom uncurry' s = Union disjoin f
  proof
    thus dom uncurry' s c= Union disjoin f
    proof
      let z;
      assume
A49:  z in dom uncurry' s;
      then consider z1, z2 being set such that
A50:  z = [z1,z2] by A47,Th11;
A51:  z`1 = z1 & z`2 = z2 by A50,MCART_1:7;
      [z2,z1] in dom uncurry s by A47,A49,A50,FUNCT_4:43;
      then consider a being set, u being Function, b being set such that
A52:  [z2,z1] = [a,b] and
A53:  a in dom s and
A54:  u = s.a and
A55:  b in dom u by FUNCT_5:def 4;
A56:  [a,b]`1 = a & [z2,z1]`1 = z2 by MCART_1:7;
      u in Funcs(f,X).a & Funcs(f,X).a = Funcs(f.a,X) by A44,A45,A46,A53,
      A54,Def8;
      then
A57:  ex j being Function st u = j & dom j = f.z2 & rng j c= X by A52,
      A56,FUNCT_2:def 2;
      [a,b]`2 = b & [z2,z1]`2 = z1 by MCART_1:7;
      hence thesis by A46,A50,A52,A53,A55,A51,A56,A57,CARD_3:33;
    end;
    let z;
    assume
A58: z in Union disjoin f;
    then
A59: z`1 in f.z`2 & z = [z`1,z`2] by CARD_3:33;
A60: z`2 in dom f by A58,CARD_3:33;
    then
    s.z`2 in Funcs(f,X).z`2 & Funcs(f,X).z`2 = Funcs(f.z`2,X) by A44,A45,
    A46,Def8;
    then ex j being Function st s.z`2 = j & dom j = f.z`2 & rng j c= X by
    FUNCT_2:def 2;
    hence thesis by A46,A60,A59,FUNCT_5:46;
  end;
  rng uncurry' s c= X
  proof
    let d be set;
    assume
    d in rng uncurry' s;
    then consider z such that
A61: z in dom uncurry' s and
A62: d = (uncurry' s).z by FUNCT_1:def 5;
    consider z1, z2 being set such that
A63: z = [z1,z2] by A47,A61,Th11;
    [z2,z1] in dom uncurry s by A47,A61,A63,FUNCT_4:43;
    then consider a being set, u being Function, b being set such that
A64: [z2,z1] = [a,b] and
A65: a in dom s & u = s.a and
A66: b in dom u by FUNCT_5:def 4;
A67: [a,b]`1 = a & [z2,z1]`1 = z2 by MCART_1:7;
    u in Funcs(f,X).a & Funcs(f,X).a = Funcs(f.a,X) by A44,A45,A46,A65,
    Def8;
    then
A68: ex j being Function st u = j & dom j = f.z2 & rng j c= X by A64,
    A67,FUNCT_2:def 2;
A69: [a,b]`2 = b & [z2,z1]`2 = z1 by MCART_1:7;
    (uncurry' s).(b,a) = u.b by A65,A66,FUNCT_5:46;
    then d in rng u by A62,A63,A64,A66,A67,A69,FUNCT_1:def 5;
    hence thesis by A68;
  end;
  then
A70: uncurry' s in dom F by A3,A48,FUNCT_2:def 2;
  then consider g,h such that
A71: uncurry' s = g and
A72: F.uncurry' s = h and
A73: dom h = dom f and
A74: for y st y in dom f holds (f.y = {} implies h.y = {}) & (f.y <> {}
  implies h.y = (curry' g).y) by A3;
  now
    let z;
    assume
A75: z in dom f;
    then s.z in Funcs(f,X).z & Funcs(f,X).z = Funcs(f.z,X) by A44,A45,A46,
    Def8;
    then consider v being Function such that
A76: s.z = v and
A77: dom v = f.z and
    rng v c= X by FUNCT_2:def 2;
A78: now
      consider a being Element of f.z;
      assume
A79:  f.z <> {};
      then
A80:  [a,z] in dom uncurry' s by A46,A75,A76,A77,FUNCT_5:46;
      then reconsider j = (curry' uncurry' s).z as Function by FUNCT_5:28;
A81:  j = (curry ~uncurry' s).z by FUNCT_5:def 5;
A82:  ~uncurry' s = uncurry s by Th13;
      then
A83:  [z,a] in dom uncurry s by A80,FUNCT_4:43;
A84:  dom j = dom v
      proof
        thus dom j c= dom v
        proof
          let b be set;
          assume
          b in dom j;
          then [z,b] in dom uncurry s by A81,A82,A83,Lm4;
          then consider
          a1 being set, g1 being Function, a2 being set such that
A85:      [z,b] = [a1,a2] and
          a1 in dom s and
A86:      g1 = s.a1 & a2 in dom g1 by FUNCT_5:def 4;
          z = a1 by A85,ZFMISC_1:33;
          hence thesis by A76,A85,A86,ZFMISC_1:33;
        end;
        let b be set;
        assume
        b in dom v;
        then [z,b] in dom uncurry s by A46,A75,A76,FUNCT_5:45;
        hence thesis by A81,A82,FUNCT_5:27;
      end;
      now
        let b be set;
        assume
        b in f.z;
        then
A87:    [z,b] in dom uncurry s by A77,A81,A82,A83,A84,Lm4;
        then consider a1 being set, g1 being Function, a2 being set such that
A88:    [z,b] = [a1,a2] and
A89:    a1 in dom s & g1 = s.a1 & a2 in dom g1 by FUNCT_5:def 4;
A90:    j.b = (uncurry s).(z,b) by A81,A82,A87,FUNCT_5:27;
        z = a1 & b = a2 by A88,ZFMISC_1:33;
        hence j.b = v.b by A76,A89,A90,FUNCT_5:45;
      end;
      then v = j by A77,A84,FUNCT_1:9;
      hence s.z = h.z by A71,A74,A75,A76,A79;
    end;
    f.z = {} implies s.z = {} & h.z = {} by A74,A75,A76,A77;
    hence s.z = h.z by A78;
  end;
  then h = s by A46,A73,FUNCT_1:9;
  hence thesis by A43,A70,A72,FUNCT_1:def 5;
end;

definition
  let X,f;
  func Funcs(X,f) -> Function means
  : Def9:
  dom it = dom f & for x st x in dom
  f holds it.x = Funcs(X,f.x);
  existence
  proof
    deffunc F(set) = Funcs(X,f.$1);
    ex F be Function st dom F = dom f & for x st x in dom f holds F.x = F(
    x) from FUNCT_1:sch 3;
    hence thesis;
  end;
  uniqueness
  proof
    let f1,f2 such that
A1: dom f1 = dom f and
A2: for x st x in dom f holds f1.x = Funcs(X,f.x) and
A3: dom f2 = dom f and
A4: for x st x in dom f holds f2.x = Funcs(X,f.x);
    now
      let x;
      assume
A5:   x in dom f;
      then f1.x = Funcs(X,f.x) by A2;
      hence f1.x = f2.x by A4,A5;
    end;
    hence thesis by A1,A3,FUNCT_1:9;
  end;
end;

Lm5: f <> {} & X <> {} implies product Funcs(X,f),Funcs(X,product f)
are_equipotent

proof
  defpred P[set,set] means ex g st $1 = g & $2 = <:g:>;
  assume that
A1: f <> {} and
A2: X <> {};
A3: for x st x in product Funcs(X,f) ex y st P[x,y]
  proof
    let x;
    assume
    x in product Funcs(X,f);

    then
    ex g st x = g & dom g = dom Funcs(X,f) & for x st x in dom Funcs(X,f)
    holds g.x in Funcs(X,f).x by CARD_3:def 5;

    then reconsider g = x as Function;
    reconsider y = <:g:> as set;
    take y, g;
    thus thesis;
  end;
  consider F being Function such that

A4: dom F = product Funcs(X,f) & for x st x in product Funcs(X,f) holds
  P[x,F.x] from CLASSES1:sch 1(A3);

  take F;

A5: g in product Funcs(X,f) implies dom <:g:> = X & SubFuncs rng g = rng g &
  rng <:g:> c= product f

  proof
A6: g"rng g = dom g by RELAT_1:169;
A7: dom Funcs(X,f) = dom f by Def9;
    assume
A8: g in product Funcs(X,f);
    then
A9: dom g = dom Funcs(X,f) by CARD_3:18;
A10: now
      let a be set;
      assume
      a in rng g;
      then consider z such that
A11:  z in dom g and
A12:  a = g.z by FUNCT_1:def 5;

      g.z in Funcs(X,f).z & Funcs(X,f).z = Funcs(X,f.z) by A8,A9,A7,A11,
      Def9, CARD_3:18;

      hence a is Function by A12;
    end;
    then
A13: SubFuncs rng g = rng g by Lm1;
A14: now
      let z;
      assume
A15:  z in dom f;

      then g.z in Funcs(X,f).z & Funcs(X,f).z = Funcs(X,f.z) by A8,A7,
      Def9, CARD_3:18;

      then ex h st g.z = h & dom h = X & rng h c= f.z by FUNCT_2:def 2;
      hence (dom f --> X).z = proj1 (g.z) by A15,FUNCOP_1:13;
    end;
    dom (dom f --> X) = dom f by FUNCOP_1:19;
    then doms g = dom f --> X by A9,A7,A13,A6,A14,Def2;
    then meet doms g = X by A1,Th43;
    hence
A16: dom <:g:> = X & SubFuncs rng g = rng g by A10,Lm1,Th49;
    let y;
    assume
    y in rng <:g:>;
    then consider x such that
A17: x in dom <:g:> and
A18: y = <:g:>.x by FUNCT_1:def 5;
    reconsider h = y as Function by A17,A18,Th50;
A19: dom h = dom f by A9,A7,A13,A6,A17,A18,Th51;
    now
      let z;
      assume
A20:  z in dom f;
      then
A21:  (uncurry g).(z,x) = h.z by A17,A18,A19,Th51;

      g.z in Funcs(X,f).z & Funcs(X,f).z = Funcs(X,f.z) by A8,A7,A20,
      Def9, CARD_3:18;

      then consider j being Function such that
A22:  g.z = j and
A23:  dom j = X and
A24:  rng j c= f.z by FUNCT_2:def 2;
A25:  j.x in rng j by A16,A17,A23,FUNCT_1:def 5;
      (uncurry g).(z,x) = j.x by A9,A7,A16,A17,A20,A22,A23,FUNCT_5:45;
      hence h.z in f.z by A24,A21,A25;
    end;
    hence thesis by A19,CARD_3:def 5;
  end;
  thus F is one-to-one
  proof
    let x,y;
    assume that
A26: x in dom F and
A27: y in dom F and
A28: F.x = F.y and
A29: x <> y;
    consider gy being Function such that
A30: y = gy and
A31: F.y = <:gy:> by A4,A27;
    consider gx being Function such that
A32: x = gx and
A33: F.x = <:gx:> by A4,A26;
A34: dom gx = dom Funcs(X,f) by A4,A26,A32,CARD_3:18;
A35: dom Funcs(X,f) = dom f by Def9;
A36: dom gy = dom Funcs(X,f) by A4,A27,A30,CARD_3:18;
    now
      let z;
      assume
A37:  z in dom f;
      then
A38:  Funcs(X,f).z = Funcs(X,f.z) by Def9;
      gy.z in Funcs(X,f).z by A4,A27,A30,A35,A37,CARD_3:18;
      then consider hy being Function such that
A39:  gy.z = hy & dom hy = X and
      rng hy c= f.z by A38,FUNCT_2:def 2;
      gx.z in Funcs(X,f).z by A4,A26,A32,A35,A37,CARD_3:18;
      then consider hx being Function such that
A40:  gx.z = hx & dom hx = X and
      rng hx c= f.z by A38,FUNCT_2:def 2;
A41:  dom <:gx:> = X by A4,A5,A26,A32;

A42:  SubFuncs rng gx = rng gx & gx"rng gx = dom gx by A4,A5,A26,A32,
      RELAT_1:169;

      now
        let b be set;
        assume
A43:    b in X;
        then reconsider fx = <:gx:>.b as Function by A41,Th50;

A44:    (uncurry gx).(z,b) = hx.b & (uncurry gy).(z,b) = hy.b by A34,A36,
        A35,A37,A40,A39,A43,FUNCT_5:45;

A45:    dom fx = dom gx by A41,A42,A43,Th51;
        then fx.z = (uncurry gx).(z,b) by A34,A35,A37,A41,A43,Th51;
        hence hx.b = hy.b by A28,A33,A31,A34,A35,A37,A41,A43,A45,A44,Th51;
      end;
      hence gx.z = gy.z by A40,A39,FUNCT_1:9;
    end;
    hence thesis by A29,A32,A30,A34,A36,A35,FUNCT_1:9;
  end;
  thus dom F = product Funcs(X,f) by A4;
  thus rng F c= Funcs(X, product f)
  proof
    let y;
    assume
    y in rng F;
    then consider x such that
A46: x in dom F and
A47: y = F.x by FUNCT_1:def 5;
    consider g such that
A48: x = g and
A49: y = <:g:> by A4,A46,A47;
    dom <:g:> = X & rng <:g:> c= product f by A4,A5,A46,A48;
    hence thesis by A49,FUNCT_2:def 2;
  end;
  let y;
  assume
  y in Funcs(X, product f);
  then consider h such that
A50: y = h and
A51: dom h = X and
A52: rng h c= product f by FUNCT_2:def 2;
  set g = <:h:>;
A53: h"rng h = dom h by RELAT_1:169;
A54: now
    let z;
    assume
A55: z in X;
    then h.z in rng h by A51,FUNCT_1:def 5;

    then
A56: ex j being Function st h.z = j & dom j = dom f & for x st x in dom f
    holds j.x in f.x by A52,CARD_3:def 5;

    thus (X --> dom f).z = dom f by A55,FUNCOP_1:13
      .= (doms h).z by A51,A55,A56,Th31;
  end;
A57: meet doms h = dom g by Th49;
  now
    let z;
    assume
    z in rng h;

    then ex j being Function st z = j & dom j = dom f & for x st x in dom f
    holds j.x in f.x by A52,CARD_3:def 5;

    hence z is Function;
  end;
  then
A58: SubFuncs rng h = rng h by Lm1;

  dom doms h = h"SubFuncs rng h & dom (dom h --> dom f) = dom h by Def2,
  FUNCOP_1:19;

  then X --> dom f = doms h by A51,A58,A53,A54,FUNCT_1:9;
  then
A59: dom g = dom f by A2,A57,Th43;
A60: now
    let z;
    assume
A61: z in dom f;
    then reconsider i = g.z as Function by A59,Th50;
A62: dom i = X by A51,A58,A53,A59,A61,Th51;
    rng i c= f.z
    proof
      let x;
      assume
      x in rng i;
      then consider a being set such that
A63:  a in dom i and
A64:  x = i.a by FUNCT_1:def 5;
      h.a in rng h by A51,A62,A63,FUNCT_1:def 5;
      then consider j being Function such that
A65:  h.a = j & dom j = dom f and
A66:  for x st x in dom f holds j.x in f.x by A52,CARD_3:def 5;
      i.a = (uncurry h).(a,z) by A59,A61,A63,Th51
        .= j.z by A51,A61,A62,A63,A65,FUNCT_5:45;
      hence thesis by A61,A64,A66;
    end;
    then g.z in Funcs(X,f.z) by A62,FUNCT_2:def 2;
    hence g.z in Funcs(X,f).z by A61,Def9;
  end;
A67: meet doms g = dom <:g:> by Th49;
  product f c= Funcs(dom f, Union f) by Th10;
  then
A68: rng h c= Funcs(dom f, Union f) by A52,XBOOLE_1:1;
  then
A69: dom uncurry h = [:dom h, dom f:] by FUNCT_5:33;
  dom f = dom Funcs(X,f) by Def9;
  then
A70: g in product Funcs(X,f) by A59,A60,CARD_3:def 5;
  then
A71: ex g' being Function st g = g' & F.g = <:g':> by A4;
  dom uncurry' h = [:dom f, dom h:] by A68,FUNCT_5:33;

  then
A72: (uncurry' h)|([:meet doms h, dom h:] qua set) = uncurry' h by A57,A59
  ,RELAT_1:97;

A73: uncurry' h = ~uncurry h & curry ~uncurry h = curry' uncurry h by
  FUNCT_5:def 5,def 6;

  dom <:g:> = X by A5,A70;

  then
A74: (uncurry h)|([:meet doms g, dom g:] qua set) = uncurry h by A51,A59,
  A69,A67,RELAT_1:97;

  uncurry' curry' uncurry h = uncurry h by A69,FUNCT_5:56;
  then <:g:> = h by A1,A68,A72,A74,A73,FUNCT_5:55;
  hence thesis by A4,A50,A70,A71,FUNCT_1:def 5;
end;

theorem Th78:
  Funcs({},f) = dom f --> {{}}
proof
A1: now
    let x;
    assume
    x in dom f;
    hence Funcs({},f).x = Funcs({} qua set,f.x) by Def9
      .= {{}} by FUNCT_5:64;
  end;
  dom Funcs({},f) = dom f by Def9;
  hence thesis by A1,FUNCOP_1:17;
end;

theorem Th79:
  Funcs(X,{}) = {}
proof
  dom Funcs(X,{}) = dom {} by Def9;
  hence thesis;
end;

theorem
  Funcs(X,<*Y*>) = <*Funcs(X,Y)*>
proof
A1: dom <*Y*> = Seg 1 by FINSEQ_1:def 8;
A2: dom Funcs(X,<*Y*>) = dom <*Y*> by Def9;
  then reconsider p = Funcs(X,<*Y*>) as FinSequence by A1,FINSEQ_1:def 2;
  <*Y*>.1 = Y & 1 in Seg 1 by FINSEQ_1:4,def 8,TARSKI:def 1;
  then p.1 = Funcs(X,Y) by A1,Def9;
  hence thesis by A2,A1,FINSEQ_1:def 8;
end;

theorem
  Funcs(X,<*Y,Z*>) = <*Funcs(X,Y), Funcs(X,Z)*>
proof
A1: Seg len <*Y,Z*> = dom <*Y,Z*> by FINSEQ_1:def 3;
A2: dom Funcs(X,<*Y,Z*>) = dom <*Y,Z*> by Def9;
  then reconsider p = Funcs(X,<*Y,Z*>) as FinSequence by A1,FINSEQ_1:def 2;
A3: len <*Y,Z*> = 2 by FINSEQ_1:61;
  then
A4: len p = 2 by A2,A1,FINSEQ_1:def 3;
  <*Y,Z*>.2 = Z & 2 in Seg 2 by FINSEQ_1:4,61,TARSKI:def 2;
  then
A5: p.2 = Funcs(X,Z) by A3,A1,Def9;
  <*Y,Z*>.1 = Y & 1 in Seg 2 by FINSEQ_1:4,61,TARSKI:def 2;
  then p.1 = Funcs(X,Y) by A3,A1,Def9;
  hence thesis by A4,A5,FINSEQ_1:61;
end;

theorem
  Funcs(X, Y --> Z) = Y --> Funcs(X,Z)
proof
A1: Y = dom (Y --> Z) by FUNCOP_1:19;
A2: now
    let x;
    assume
A3: x in Y;
    then Funcs(X, Y --> Z).x = Funcs(X, (Y --> Z).x) by A1,Def9;
    hence Funcs(X, Y --> Z).x = Funcs(X,Z) by A3,FUNCOP_1:13;
  end;
  dom Funcs(X, Y --> Z) = dom (Y --> Z) by Def9;
  hence thesis by A1,A2,FUNCOP_1:17;
end;

theorem
  product Funcs(X,f),Funcs(X, product f) are_equipotent
proof
A1: Funcs(X, product {}) = {X --> {}} by CARD_3:19,FUNCT_5:66;
A2: product Funcs({},f) = product (dom f --> {{}}) by Th78
    .= Funcs(dom f, {{}}) by CARD_3:20
    .= {dom f --> {}} by FUNCT_5:66;
A3: Funcs({} qua set, product f) = {{}} & product Funcs(X,{}) = {{}} by Th79
  , CARD_3:19,FUNCT_5:64;
  X <> {} & f <> {} implies thesis by Lm5;
  hence thesis by A2,A3,A1,CARD_1:48;
end;

begin :: Addenda

:: from PRALG_2

definition
  let f be Function;
  canceled 2;
  func commute f -> Function-yielding Function equals
  curry' uncurry f;
  coherence
  proof
    set g = curry' uncurry f;
    for x st x in dom g holds g.x is Function by FUNCT_5:40;
    hence thesis by FUNCOP_1:def 6;
  end;
end;

theorem
  for f be Function, x be set st x in dom (commute f) holds (commute f).
  x is Function;

theorem Th85:
  for A,B,C be set, f be Function st A <> {} & B <> {} & f in
  Funcs(A,Funcs(B,C)) holds commute f in Funcs(B,Funcs(A,C))
proof
  let A,B,C be set, f be Function;
  assume
  A <> {} & B <> {} & f in Funcs(A,Funcs(B,C));
  then [:A,B:] <> {} & uncurry f in Funcs([:A,B:],C) by
  Th20,ZFMISC_1:113;
  hence thesis by Th19;
end;

theorem
  for A,B,C be set, f be Function st A <> {} & B <> {} & f in Funcs(A,
  Funcs(B,C)) for g,h be Function, x,y be set st x in A & y in B & f.x = g & (
  commute f).y = h holds h.x = g.y & dom h = A & dom g = B & rng h c= C & rng g
  c= C
proof
  let A,B,C be set, f be Function;
  assume that
A1: A <> {} & B <> {} and
A2: f in Funcs(A,Funcs(B,C));
  set uf = uncurry f;
  set cf = commute f;
  let g,h be Function, x,y be set;
  assume that
A3: x in A and
A4: y in B and
A5: f.x = g and
A6: (commute f).y = h;
  commute f in Funcs(B,Funcs(A,C)) by A1,A2,Th85;
  then
A7: ex g be Function st g = cf & dom g = B & rng g c= Funcs(A,C) by
  FUNCT_2:def 2;
  then cf.y in rng cf by A4,FUNCT_1:def 5;
  then
A8: ex t be Function st t = h & dom t = A & rng t c= C by A6,A7,
  FUNCT_2:def 2;
A9: ex g be Function st g = f & dom g = A & rng g c= Funcs(B,C) by A2,
  FUNCT_2:def 2;
  then f.x in rng f by A3,FUNCT_1:def 5;
  then
A10: ex t be Function st t = g & dom t = B & rng t c= C by A5,A9,
  FUNCT_2:def 2;
  then [x,y] in dom uf & uf.(x,y) = g.y by A3,A4,A5,A9,FUNCT_5:45;
  hence thesis by A6,A10,A8,FUNCT_5:29;
end;

theorem
  for A,B,C be set, f be Function st A <> {} & B <> {} & f in Funcs(A,
  Funcs(B,C)) holds commute commute f = f
proof
  let A,B,C be set, f be Function;
  assume that
A1: A <> {} & B <> {} and
A2: f in Funcs(A,Funcs(B,C));
A3: ex g be Function st g = f & dom g = A & rng g c= Funcs(B,C) by A2,
  FUNCT_2:def 2;
  set cf = commute f;
A4: commute f in Funcs(B,Funcs(A,C)) by A1,A2,Th85;
  then commute cf in Funcs(A,Funcs(B,C)) by A1,Th85;
  then
A5: ex h be Function st h = commute cf & dom h = A & rng h c= Funcs(B,C) by
  FUNCT_2:def 2;
A6: ex g be Function st g = cf & dom g = B & rng g c= Funcs(A,C) by A4,
  FUNCT_2:def 2;
  for x st x in A holds f.x = (commute cf).x
  proof
    set ccf = commute cf, uf = uncurry f, ucf = uncurry cf;
    let x;
    assume
A7: x in A;
    then f.x in rng f by A3,FUNCT_1:def 5;
    then consider g be Function such that
A8: g = f.x & dom g = B and
    rng g c= C by A3,FUNCT_2:def 2;
    ccf.x in rng ccf by A5,A7,FUNCT_1:def 5;
    then consider h be Function such that
A9: h = ccf.x and
A10: dom h = B and
    rng h c= C by A5,FUNCT_2:def 2;
A11: for y st y in B for h be Function st h = cf.y holds x in dom h & h.x
    = g.y
    proof
      let y;
      assume
      y in B;
      then
A12:  [x,y] in dom uf & uf.(x,y) = g.y by A3,A7,A8,FUNCT_5:45;
      let h be Function;
      assume
      h = cf.y;
      hence thesis by A12,FUNCT_5:29;
    end;
A13: for y st y in B holds [y,x] in dom ucf & ucf.(y,x) = g.y
    proof
      let y;
      reconsider h = cf.y as Function;
      assume
A14:  y in B;
      then x in dom h & h.x = g.y by A11;
      hence thesis by A6,A14,FUNCT_5:45;
    end;
    for y st y in B holds h.y = g.y
    proof
      let y;
      assume
      y in B;
      then [y,x] in dom ucf & ucf.(y,x) = g.y by A13;
      hence thesis by A9,FUNCT_5:29;
    end;
    hence thesis by A8,A9,A10,FUNCT_1:9;
  end;
  hence thesis by A3,A5,FUNCT_1:9;
end;

theorem
  commute {} = {} by FUNCT_5:49,50;

:: from EXTENS_1

theorem
  for f be Function-yielding Function holds dom doms f = dom f
proof
  let f be Function-yielding Function;
  thus dom doms f c= dom f
  proof
    let i be set;
    dom doms f = f"SubFuncs rng f by Def2;
    hence thesis by Th28;
  end;
  thus dom f c= dom doms f
  proof
    let i be set;
    assume
A1: i in dom f;
    f.i is Function & dom doms f = f"SubFuncs rng f by Def2;
    hence thesis by A1,Th28;
  end;
end;

theorem
  for f be Function-yielding Function holds dom rngs f = dom f
proof
  let f be Function-yielding Function;
  thus dom rngs f c= dom f
  proof
    let i be set;
    dom rngs f = f"SubFuncs rng f by Def3;
    hence thesis by Th28;
  end;
  thus dom f c= dom rngs f
  proof
    let i be set;
    assume
A1: i in dom f;
    f.i is Function & dom rngs f = f"SubFuncs rng f by Def3;
    hence thesis by A1,Th28;
  end;
end;

