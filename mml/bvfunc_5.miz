:: Propositional Calculus for Boolean Valued Functions, I
::  by Shunichi Kobayashi and Yatsuka Nakamura
::
:: Received March 13, 1999
:: Copyright (c) 1999 Association of Mizar Users

environ

 vocabularies FUNCT_2, MARGREL1, BVFUNC_1, ZF_LANG, FUNCT_1, RELAT_1;
 notations TARSKI, XBOOLE_0, SUBSET_1, MARGREL1, VALUAT_1, RELAT_1, FUNCT_1,
      FRAENKEL, BINARITH, BVFUNC_1;
 constructors BINARITH, BVFUNC_1;
 registrations MARGREL1, VALUAT_1, BINARITH, FRAENKEL;
 requirements SUBSET, BOOLE;
 theorems FUNCT_1, FUNCT_2, MARGREL1, BINARITH, BVFUNC_1, VALUAT_1;

begin

::Chap. 1  Propositional Calculus

reserve Y for non empty set;

theorem  for a,b being Element of Funcs(Y,BOOLEAN) holds
a=I_el(Y) & b=I_el(Y) iff (a '&' b)=I_el(Y)
proof
  let a,b be Element of Funcs(Y,BOOLEAN);
     now assume A1:a '&' b=I_el(Y);
    per cases;
    suppose a=I_el(Y) & b=I_el(Y);
    hence a=I_el(Y) & b=I_el(Y);
    end;
    suppose a=I_el(Y) & b<>I_el(Y);
    hence a=I_el(Y) & b=I_el(Y) by A1,BVFUNC_1:9;
    end;
    suppose a<>I_el(Y) & b=I_el(Y);
    hence a=I_el(Y) & b=I_el(Y) by A1,BVFUNC_1:9;
    end;
    suppose A2:a<>I_el(Y) & b<>I_el(Y);
         for x being Element of Y holds a.x=TRUE
      proof
        let x be Element of Y;
           (a '&' b).x=TRUE by A1,BVFUNC_1:def 14;
        then a.x '&' b.x=TRUE by VALUAT_1:def 6;
        hence thesis by MARGREL1:45;
      end;
    hence a=I_el(Y) & b=I_el(Y) by A2,BVFUNC_1:def 14;
  end;
  end;
  hence thesis by BVFUNC_1:9;
end;

theorem Th2:
 for b being Element of Funcs(Y,BOOLEAN) st
 (I_el(Y) 'imp' b)=I_el(Y) holds b=I_el(Y)
proof set a=I_el(Y);
  let b be Element of Funcs(Y,BOOLEAN);
  assume A1: a 'imp' b=I_el(Y);
     for x being Element of Y holds b.x=TRUE
  proof
    let x be Element of Y;
    A2:a.x=TRUE by BVFUNC_1:def 14;
       (a 'imp' b).x=TRUE by A1,BVFUNC_1:def 14;
    then ('not' a.x) 'or' b.x=TRUE by BVFUNC_1:def 11;
    then FALSE 'or' b.x=TRUE by A2,MARGREL1:41;
    hence thesis by BINARITH:7;
  end;
  hence b=I_el(Y) by BVFUNC_1:def 14;
end;

theorem  for a,b being Element of Funcs(Y,BOOLEAN) st
a=I_el(Y) holds (a 'or' b)=I_el(Y)
proof
  let a,b be Element of Funcs(Y,BOOLEAN);
  assume A1:a=I_el(Y);
     for x being Element of Y holds (a 'or' b).x=TRUE
  proof
    let x be Element of Y;
      a.x=TRUE by A1,BVFUNC_1:def 14;
    then (a 'or' b).x
     =TRUE 'or' b.x by BVFUNC_1:def 7
    .=TRUE by BINARITH:19;
    hence thesis;
  end;
  hence a 'or' b=I_el(Y) by BVFUNC_1:def 14;
end;

canceled;

theorem  for a,b being Element of Funcs(Y,BOOLEAN) st
b=I_el(Y) holds (a 'imp' b)=I_el(Y)
proof
  let a,b be Element of Funcs(Y,BOOLEAN);
  assume A1:b=I_el(Y);
     for x being Element of Y holds (a 'imp' b).x=TRUE
  proof
    let x be Element of Y;
      b.x=TRUE by A1,BVFUNC_1:def 14;
    then (a 'imp' b).x
     =('not' a.x) 'or' TRUE by BVFUNC_1:def 11
    .=TRUE by BINARITH:19;
    hence thesis;
  end;
  hence thesis by BVFUNC_1:def 14;
end;

theorem  for a,b being Element of Funcs(Y,BOOLEAN) st
('not' a)=I_el(Y) holds (a 'imp' b)=I_el(Y)
proof
  let a,b be Element of Funcs(Y,BOOLEAN);
  assume A1:'not' a=I_el(Y);
     for x being Element of Y holds (a 'imp' b).x=TRUE
  proof
    let x be Element of Y;
       ('not' a).x=TRUE by A1,BVFUNC_1:def 14;
    then 'not' a.x=TRUE by VALUAT_1:def 5;
    then (a 'imp' b).x
     =TRUE 'or' b.x by BVFUNC_1:def 11
    .=TRUE by BINARITH:19;
    hence thesis;
  end;
  hence thesis by BVFUNC_1:def 14;
end;

theorem  for a being Element of Funcs(Y,BOOLEAN) holds
'not' (a '&' 'not' a)=I_el(Y)
proof
  let a be Element of Funcs(Y,BOOLEAN);
  A1:for x being Element of Y holds
   (a '&' 'not' a).x = (O_el Y).x
  proof
    let x be Element of Y;
    A2:(a '&' 'not' a).x
     =a.x '&' ('not' a).x by VALUAT_1:def 6
    .=a.x '&' 'not' a.x by VALUAT_1:def 5;
A3:'not' FALSE=TRUE & 'not' TRUE=FALSE by MARGREL1:41;
    A4:(O_el Y).x=FALSE by BVFUNC_1:def 13;
       now per cases by MARGREL1:39;
      case a.x=TRUE;
      hence thesis by A2,A3,A4,MARGREL1:45;
      end;
      case a.x=FALSE;
      hence thesis by A2,A4,MARGREL1:45;
    end;
    end;
    hence thesis;
  end;
  consider k3 being Function such that
              A5: (a '&' 'not' a)=k3 & dom k3=Y & rng k3 c= BOOLEAN
                     by FUNCT_2:def 2;
  consider k4 being Function such that
    A6: O_el(Y)=k4 & dom k4=Y & rng k4 c= BOOLEAN
                     by FUNCT_2:def 2;
      Y=dom k3 & Y=dom k4 & (for u being set
            st u in Y holds k3.u=k4.u)by A1,A5,A6;
  then (a '&' 'not' a)=O_el(Y) by A5,A6,FUNCT_1:9;
  hence thesis by BVFUNC_1:5;
end;

theorem  :: Identity law
 for a being Element of Funcs(Y,BOOLEAN) holds a 'imp' a = I_el Y
proof
  let a be Element of Funcs(Y,BOOLEAN);
  A1:for x being Element of Y holds
   (a 'imp' a).x = (I_el Y).x
  proof
    let x be Element of Y;
    A2:(a 'imp' a).x
     = ('not' a.x) 'or' a.x by BVFUNC_1:def 11;
A3:'not' FALSE=TRUE & 'not' TRUE=FALSE by MARGREL1:41;
    A4:(I_el Y).x=TRUE by BVFUNC_1:def 14;
       now per cases by MARGREL1:39;
      case a.x=TRUE;
      hence thesis by A2,A4,BINARITH:19;
      end;
      case a.x=FALSE;
      hence thesis by A2,A3,A4,BINARITH:19;
    end;
    end;
    hence thesis;
  end;
  consider k3 being Function such that
              A5: (a 'imp' a)=k3 & dom k3=Y & rng k3 c= BOOLEAN
                     by FUNCT_2:def 2;
  consider k4 being Function such that
    A6: I_el(Y)=k4 & dom k4=Y & rng k4 c= BOOLEAN
                     by FUNCT_2:def 2;
     for u being set st u in Y holds k3.u=k4.u by A1,A5,A6;
  hence thesis by A5,A6,FUNCT_1:9;
end;

theorem  for a,b being Element of Funcs(Y,BOOLEAN) holds
(a 'imp' b)=I_el(Y) iff ('not' b 'imp' 'not' a)=I_el(Y)
proof
  let a,b be Element of Funcs(Y,BOOLEAN);
  A1:now assume A2:(a 'imp' b)=I_el(Y);
       for x being Element of Y holds ('not' b 'imp' 'not' a).x=TRUE
    proof
      let x be Element of Y;
         (a 'imp' b).x=TRUE by A2,BVFUNC_1:def 14;
      then A3:('not' a.x) 'or' b.x=TRUE by BVFUNC_1:def 11;
      A4: ('not' a.x)=TRUE or ('not' a.x)=FALSE by MARGREL1:39;
         now per cases by A3,A4,BINARITH:7;
        case A5:('not' a.x)=TRUE;
           ('not' b 'imp' 'not' a).x
         =('not' ('not' b).x) 'or' ('not' a).x by BVFUNC_1:def 11
        .=('not' ('not' b).x) 'or' TRUE by A5,VALUAT_1:def 5
        .=TRUE by BINARITH:19;
        hence thesis;
        end;
        case A6:b.x=TRUE;
          ('not' b).x='not' b.x by VALUAT_1:def 5;
        then ('not' b 'imp' 'not' a).x
         =('not' 'not' b.x) 'or' ('not' a).x by BVFUNC_1:def 11
        .=TRUE 'or' ('not' a).x by A6
        .=TRUE by BINARITH:19;
        hence thesis;
      end;
      end;
      hence thesis;
    end;
    hence 'not' b 'imp' 'not' a=I_el(Y) by BVFUNC_1:def 14;
  end;
     now assume A7:('not' b 'imp' 'not' a)=I_el(Y);
       for x being Element of Y holds (a 'imp' b).x=TRUE
    proof
      let x be Element of Y;
         ('not' b 'imp' 'not' a).x=TRUE by A7,BVFUNC_1:def 14;
      then ('not' ('not' b).x) 'or' ('not' a).x=TRUE by BVFUNC_1:def 11;
      then ('not' 'not' b.x) 'or' ('not' a).x=TRUE by VALUAT_1:def 5;
      then ('not' 'not' b.x) 'or' 'not' a.x=TRUE by VALUAT_1:def 5;
      then A8:b.x 'or' 'not' a.x=TRUE;
      A9: ('not' a.x)=TRUE or ('not' a.x)=FALSE by MARGREL1:39;
         now per cases by A8,A9,BINARITH:7;
        case ('not' a.x)=TRUE;
        then (a 'imp' b).x
         =TRUE 'or' b.x by BVFUNC_1:def 11
        .=TRUE by BINARITH:19;
        hence thesis;
        end;
        case b.x=TRUE;
        then (a 'imp' b).x
         =('not' a.x) 'or' TRUE by BVFUNC_1:def 11
        .=TRUE by BINARITH:19;
        hence thesis;
      end;
      end;
      hence thesis;
    end;
    hence a 'imp' b=I_el(Y) by BVFUNC_1:def 14;
  end;
  hence thesis by A1;
end;

theorem  for a,b,c being Element of Funcs(Y,BOOLEAN) st
(a 'imp' b)=I_el(Y) & (b 'imp' c)=I_el(Y) holds
(a 'imp' c)=I_el(Y)
proof
  let a,b,c be Element of Funcs(Y,BOOLEAN);
  assume A1:(a 'imp' b)=I_el(Y) & (b 'imp' c)=I_el(Y);
     for x being Element of Y holds (a 'imp' c).x=TRUE
  proof
    let x be Element of Y;
       (a 'imp' b).x=TRUE by A1,BVFUNC_1:def 14;
    then A2:('not' a.x) 'or' b.x=TRUE by BVFUNC_1:def 11;
    A3: ('not' a.x)=TRUE or ('not' a.x)=FALSE by MARGREL1:39;
       (b 'imp' c).x=TRUE by A1,BVFUNC_1:def 14;
    then A4:('not' b.x) 'or' c.x=TRUE by BVFUNC_1:def 11;
    A5: ('not' b.x)=TRUE or ('not' b.x)=FALSE by MARGREL1:39;
A6:(a 'imp' c).x=('not' a.x) 'or' c.x by BVFUNC_1:def 11;
       now per cases by A2,A3,A4,A5,BINARITH:7;
      case ('not' a.x)=TRUE & ('not' b.x)=TRUE;
      hence thesis by A6,BINARITH:19;
      end;
      case ('not' a.x)=TRUE & c.x=TRUE;
      hence thesis by A6,BINARITH:19;
      end;
      case A7:b.x=TRUE & ('not' b.x)=TRUE;
      then b.x=FALSE by MARGREL1:41;
      hence thesis by A7,MARGREL1:43;
      end;
      case b.x=TRUE & c.x=TRUE;
      hence thesis by A6,BINARITH:19;
    end;
    end;
    hence thesis;
  end;
  hence a 'imp' c = I_el(Y) by BVFUNC_1:def 14;
end;

theorem  for a,b being Element of Funcs(Y,BOOLEAN) st
(a 'imp' b)=I_el(Y) & (a 'imp' 'not' b)=I_el(Y) holds
'not' a=I_el(Y)
proof
  let a,b be Element of Funcs(Y,BOOLEAN);
  assume A1:(a 'imp' b)=I_el(Y) & (a 'imp' 'not' b)=I_el(Y);
     for x being Element of Y holds ('not' a).x=TRUE
  proof
    let x be Element of Y;
       (a 'imp' b).x=TRUE by A1,BVFUNC_1:def 14;
    then A2:('not' a.x) 'or' b.x=TRUE by BVFUNC_1:def 11;
    A3: ('not' a.x)=TRUE or ('not' a.x)=FALSE by MARGREL1:39;
       (a 'imp' 'not' b).x=TRUE by A1,BVFUNC_1:def 14;
    then A4:('not' a.x) 'or' ('not' b).x=TRUE by BVFUNC_1:def 11;
       now per cases by A2,A3,A4,BINARITH:7;
      case ('not' a.x)=TRUE & ('not' a.x)=TRUE;
      hence thesis by VALUAT_1:def 5;
      end;
      case ('not' a.x)=TRUE & ('not' b).x=TRUE;
      hence thesis by VALUAT_1:def 5;
      end;
      case b.x=TRUE & ('not' a.x)=TRUE;
      hence thesis by VALUAT_1:def 5;
      end;
      case A5:b.x=TRUE & ('not' b).x=TRUE;
      then 'not' b.x=TRUE by VALUAT_1:def 5;
      then b.x=FALSE by MARGREL1:41;
      hence thesis by A5,MARGREL1:43;
    end;
    end;
    hence thesis;
  end;
  hence 'not' a = I_el(Y) by BVFUNC_1:def 14;
end;

theorem  for a being Element of Funcs(Y,BOOLEAN) holds
('not' a 'imp' a) 'imp' a = I_el(Y)
proof
  let a be Element of Funcs(Y,BOOLEAN);
  A1:for x being Element of Y holds
   ('not' a 'imp' a 'imp' a).x = (I_el Y).x
  proof
    let x be Element of Y;
    A2:'not' ('not' ('not' a).x 'or' a.x)
     = 'not' ('not' 'not' a.x 'or' a.x) by VALUAT_1:def 5
    .= 'not' (a.x 'or' a.x)
    .= 'not' a.x by BINARITH:21;
    A3:('not' a 'imp' a 'imp' a).x
     =('not' ('not' a 'imp' a).x) 'or' a.x by BVFUNC_1:def 11
    .='not' a.x 'or' a.x by A2,BVFUNC_1:def 11;
    A4:(I_el Y).x=TRUE by BVFUNC_1:def 14;
       now per cases by MARGREL1:39;
      case a.x=TRUE;
      hence thesis by A3,A4,BINARITH:19;
      end;
      case a.x=FALSE;
      then ('not' a 'imp' a 'imp' a).x
       =TRUE 'or' FALSE by A3,MARGREL1:41
      .=TRUE by BINARITH:19;
      hence thesis by BVFUNC_1:def 14;
    end;
    end;
    hence thesis;
  end;
  consider k3 being Function such that
              A5: (('not' a 'imp' a) 'imp' a)=k3 & dom k3=Y & rng k3 c= BOOLEAN
                     by FUNCT_2:def 2;
  consider k4 being Function such that
    A6: I_el(Y)=k4 & dom k4=Y & rng k4 c= BOOLEAN
                     by FUNCT_2:def 2;
     Y=dom k3 & Y=dom k4 & (for u being set
            st u in Y holds k3.u=k4.u)by A1,A5,A6;
  hence (('not' a 'imp' a) 'imp' a)=I_el(Y) by A5,A6,FUNCT_1:9;
end;

theorem  for a,b,c being Element of Funcs(Y,BOOLEAN) holds
(a 'imp' b) 'imp' ('not' (b '&' c) 'imp' 'not' (a '&' c)) =I_el(Y)
proof
  let a,b,c be Element of Funcs(Y,BOOLEAN);
  A1:for x being Element of Y holds
   ((a 'imp' b) 'imp' ('not' (b '&' c) 'imp' 'not' (a '&' c))).x = (I_el Y).x
  proof
    let x be Element of Y;
A2:  ((a 'imp' b) 'imp' ('not' (b '&' c) 'imp' 'not' (a '&' c))).x
    = 'not' (a 'imp' b).x 'or' ('not' (b '&' c) 'imp' 'not' (a '&' c)).x
     by BVFUNC_1:def 11
   .= 'not' (a 'imp' b).x 'or' (('not' ('not' (b '&' c)).x) 'or' ('not'
(a '&' c)).x)
     by BVFUNC_1:def 11;
A3:'not' ('not' (b '&' c)).x
    ='not' 'not' (b '&' c).x by VALUAT_1:def 5
   .=(b '&' c).x
   .=b.x '&' c.x by VALUAT_1:def 6;
A4:('not' (a '&' c)).x
    =(('not' a) 'or' ('not' c)).x by BVFUNC_1:17
   .=('not' a).x 'or' ('not' c).x by BVFUNC_1:def 7
   .='not' a.x 'or' ('not' c).x by VALUAT_1:def 5
   .='not' a.x 'or' 'not' c.x by VALUAT_1:def 5;
A5:'not' (a 'imp' b).x
    ='not' (('not' a.x) 'or' b.x) by BVFUNC_1:def 11
   .=('not' 'not' a.x) '&' 'not' b.x by BINARITH:10
   .=a.x '&' 'not' b.x;
A6:('not' ('not' (b '&' c)).x) 'or' ('not' (a '&' c)).x
    =(('not' a.x 'or' 'not' c.x) 'or' b.x) '&'
     (('not' a.x 'or' 'not' c.x) 'or' c.x) by A3,A4,BINARITH:23
   .=(('not' a.x 'or' 'not' c.x) 'or' b.x) '&'
     ('not' a.x 'or' ('not' c.x 'or' c.x)) by BINARITH:20;
       now per cases by MARGREL1:39;
      case c.x=TRUE;
      hence ('not' c.x 'or' c.x)=TRUE by BINARITH:19;
      end;
      case c.x=FALSE;
      then 'not' c.x 'or' c.x
       =TRUE 'or' FALSE by MARGREL1:41
      .=TRUE by BINARITH:19;
      hence ('not' c.x 'or' c.x)=TRUE;
    end;
    end;
    then ('not' a.x 'or' ('not' c.x 'or' c.x))
     =TRUE by BINARITH:19;
    then (('not' a.x 'or' 'not' c.x) 'or' b.x) '&'
    ('not' a.x 'or' ('not' c.x 'or' c.x))
     = (('not' a.x 'or' 'not' c.x) 'or' b.x) by MARGREL1:50;
then A7:'not' (a 'imp' b).x 'or' (('not' ('not' (b '&' c)).x) 'or' ('not'
(a '&' c)).x)
     =((('not' a.x 'or' 'not' c.x) 'or' b.x) 'or' a.x) '&'
      ((('not' a.x 'or' 'not' c.x) 'or' b.x) 'or' 'not'
b.x) by A5,A6,BINARITH:23
    .=((('not' a.x 'or' 'not' c.x) 'or' b.x) 'or' a.x) '&'
      (('not' a.x 'or' 'not' c.x) 'or' (b.x 'or' 'not'
b.x)) by BINARITH:20
    .=((('not' c.x 'or' 'not' a.x) 'or' a.x) 'or' b.x) '&'
      (('not' a.x 'or' 'not' c.x) 'or' (b.x 'or' 'not'
b.x)) by BINARITH:20
    .=(('not' c.x 'or' ('not' a.x 'or' a.x)) 'or' b.x) '&'
      (('not' a.x 'or' 'not' c.x) 'or' (b.x 'or' 'not'
b.x)) by BINARITH:20;
    A8: now per cases by MARGREL1:39;
      case a.x=TRUE;
      hence ('not' a.x 'or' a.x)=TRUE by BINARITH:19;
      end;
      case a.x=FALSE;
      then 'not' a.x 'or' a.x
       =TRUE 'or' FALSE by MARGREL1:41
      .=TRUE by BINARITH:19;
      hence ('not' a.x 'or' a.x)=TRUE;
    end;
    end;
       now per cases by MARGREL1:39;
      case b.x=TRUE;
      hence ('not' b.x 'or' b.x)=TRUE by BINARITH:19;
      end;
      case b.x=FALSE;
      then 'not' b.x 'or' b.x
       =TRUE 'or' FALSE by MARGREL1:41
      .=TRUE by BINARITH:19;
      hence ('not' b.x 'or' b.x)=TRUE;
    end;
    end;
    then 'not' (a 'imp' b).x 'or' (('not' ('not' (b '&' c)).x)
      'or' ('not' (a '&' c)).x)
     =(TRUE 'or' b.x) '&'
      (('not' a.x 'or' 'not' c.x) 'or' TRUE) by A7,A8,BINARITH:19
    .=TRUE '&' (('not' a.x 'or' 'not' c.x) 'or' TRUE) by BINARITH:19
    .=TRUE '&' TRUE by BINARITH:19
    .=TRUE by MARGREL1:45;
    hence thesis by A2,BVFUNC_1:def 14;
  end;
  consider k3 being Function such that
    A9:((a 'imp' b) 'imp' ('not' (b '&' c) 'imp' 'not' (a '&' c)))
      =k3 & dom k3=Y & rng k3 c= BOOLEAN
                     by FUNCT_2:def 2;
  consider k4 being Function such that
    A10: I_el(Y)=k4 & dom k4=Y & rng k4 c= BOOLEAN
                     by FUNCT_2:def 2;
     for u being set st u in Y holds k3.u=k4.u by A1,A9,A10;
  hence thesis by A9,A10,FUNCT_1:9;
end;

theorem  for a,b,c being Element of Funcs(Y,BOOLEAN) holds
(a 'imp' b) 'imp' ((b 'imp' c) 'imp' (a 'imp' c))=I_el(Y)
proof
  let a,b,c be Element of Funcs(Y,BOOLEAN);
  A1:for x being Element of Y holds
   ((a 'imp' b) 'imp' ((b 'imp' c) 'imp' (a 'imp' c))).x = (I_el Y).x
  proof
    let x be Element of Y;
A2:((a 'imp' b) 'imp' ((b 'imp' c) 'imp' (a 'imp' c))).x
    =('not' (a 'imp' b).x) 'or' ((b 'imp' c) 'imp' (a 'imp' c)).x
     by BVFUNC_1:def 11
   .=('not' (a 'imp' b).x) 'or' ('not' (b 'imp' c).x 'or' (a 'imp' c).x)
     by BVFUNC_1:def 11;
A3:'not' (a 'imp' b).x
    ='not' ('not' a.x 'or' b.x) by BVFUNC_1:def 11
   .=('not' 'not' a.x '&' 'not' b.x) by BINARITH:10
   .=a.x '&' 'not' b.x;
A4:'not' (b 'imp' c).x
    ='not' ('not' b.x 'or' c.x) by BVFUNC_1:def 11
   .=('not' 'not' b.x '&' 'not' c.x) by BINARITH:10
   .=b.x '&' 'not' c.x;
A5:(a 'imp' c).x
    ='not' a.x 'or' c.x by BVFUNC_1:def 11;
    A6: now per cases by MARGREL1:39;
      case b.x=TRUE;
      hence ('not' b.x 'or' b.x)=TRUE by BINARITH:19;
      end;
      case b.x=FALSE;
      then 'not' b.x 'or' b.x
       =TRUE 'or' FALSE by MARGREL1:41
      .=TRUE by BINARITH:19;
      hence ('not' b.x 'or' b.x)=TRUE;
    end;
    end;
    A7: now per cases by MARGREL1:39;
      case a.x=TRUE;
      hence ('not' a.x 'or' a.x)=TRUE by BINARITH:19;
      end;
      case a.x=FALSE;
      then 'not' a.x 'or' a.x
       =TRUE 'or' FALSE by MARGREL1:41
      .=TRUE by BINARITH:19;
      hence ('not' a.x 'or' a.x)=TRUE;
    end;
    end;
    A8: now per cases by MARGREL1:39;
      case c.x=TRUE;
      hence ('not' c.x 'or' c.x)=TRUE by BINARITH:19;
      end;
      case c.x=FALSE;
      then 'not' c.x 'or' c.x
       =TRUE 'or' FALSE by MARGREL1:41
      .=TRUE by BINARITH:19;
      hence ('not' c.x 'or' c.x)=TRUE;
    end;
    end;
       ('not' (a 'imp' b).x) 'or' ('not' (b 'imp' c).x 'or' (a 'imp' c).x
)
    =(((b.x '&' 'not' c.x) 'or' ('not'
a.x 'or' c.x)) 'or' a.x) '&'
     (((b.x '&' 'not' c.x) 'or' ('not' a.x 'or'
     c.x)) 'or' 'not' b.x)
     by A3,A4,A5,BINARITH:23
   .=((b.x '&' 'not' c.x) 'or' ((c.x 'or' 'not'
a.x) 'or' a.x)) '&'
     (((b.x '&' 'not' c.x) 'or' ('not' a.x 'or' c.x))
     'or' 'not' b.x) by BINARITH:20
   .=((b.x '&' 'not' c.x) 'or' (c.x 'or' ('not'
a.x 'or' a.x))) '&'
     ((('not' a.x 'or' c.x) 'or' (b.x '&' 'not' c.x))
     'or' 'not' b.x) by BINARITH:20
   .=((b.x '&' 'not' c.x) 'or' (c.x 'or' ('not'
a.x 'or' a.x))) '&'
     (('not' a.x 'or' c.x) 'or' (('not' c.x '&' b.x)
     'or' 'not' b.x)) by BINARITH:20
   .=((b.x '&' 'not' c.x) 'or' (c.x 'or' ('not'
a.x 'or' a.x))) '&'
     (('not' a.x 'or' c.x) 'or'
      (('not' b.x 'or' 'not' c.x) '&' ('not' b.x 'or' b.x)))
     by BINARITH:23
   .=((b.x '&' 'not' c.x) 'or' TRUE) '&'
     (('not' a.x 'or' c.x) 'or'
      (('not' b.x 'or' 'not' c.x) '&' TRUE)) by A6,A7,BINARITH:19
   .=TRUE '&'
     (('not' a.x 'or' c.x) 'or'
      (('not' b.x 'or' 'not' c.x) '&' TRUE)) by BINARITH:19
   .=(('not' a.x 'or' c.x) 'or'
      (TRUE '&' ('not' b.x 'or' 'not' c.x))) by MARGREL1:50
   .=('not' a.x 'or' c.x) 'or' ('not' c.x 'or' 'not'
b.x) by MARGREL1:50
   .=(('not' a.x 'or' c.x) 'or' 'not' c.x) 'or' 'not'
b.x by BINARITH:20
   .=('not' a.x 'or' TRUE) 'or' 'not' b.x by A8,BINARITH:20
   .=TRUE 'or' 'not' b.x by BINARITH:19
   .=TRUE by BINARITH:19;
    hence thesis by A2,BVFUNC_1:def 14;
  end;
  consider k3 being Function such that
    A9:((a 'imp' b) 'imp' ((b 'imp' c) 'imp' (a 'imp' c)))
      =k3 & dom k3=Y & rng k3 c= BOOLEAN
                     by FUNCT_2:def 2;
  consider k4 being Function such that
    A10: I_el(Y)=k4 & dom k4=Y & rng k4 c= BOOLEAN
                     by FUNCT_2:def 2;
     for u being set st u in Y holds k3.u=k4.u by A1,A9,A10;
  hence thesis by A9,A10,FUNCT_1:9;
end;

theorem Th15:
for a,b,c being Element of Funcs(Y,BOOLEAN) st
(a 'imp' b)=I_el(Y) holds (b 'imp' c) 'imp' (a 'imp' c)=I_el(Y)
proof
  let a,b,c be Element of Funcs(Y,BOOLEAN);
  assume A1:a 'imp' b=I_el(Y);
     for x being Element of Y holds ((b 'imp' c) 'imp' (a 'imp' c)).x=TRUE
  proof
    let x be Element of Y;
       (a 'imp' b).x=TRUE by A1,BVFUNC_1:def 14;
    then A2:'not' a.x 'or' b.x=TRUE by BVFUNC_1:def 11;
    A3: 'not' a.x=TRUE or 'not' a.x=FALSE by MARGREL1:39;
A4:((b 'imp' c) 'imp' (a 'imp' c)).x
    =('not' (b 'imp' c).x) 'or' (a 'imp' c).x by BVFUNC_1:def 11
   .='not' ('not' b.x 'or' c.x) 'or' (a 'imp' c).x by BVFUNC_1:def 11
   .='not' ('not' b.x 'or' c.x) 'or' ('not'
a.x 'or' c.x) by BVFUNC_1:def 11
   .=('not' 'not' b.x '&' 'not' c.x) 'or' ('not'
a.x 'or' c.x) by BINARITH:10
   .=('not' a.x 'or' c.x) 'or' (b.x '&' 'not'
c.x);
    A5: now per cases by MARGREL1:39;
      case c.x=TRUE;
      hence ('not' c.x 'or' c.x)=TRUE by BINARITH:19;
      end;
      case c.x=FALSE;
      then 'not' c.x 'or' c.x
       =TRUE 'or' FALSE by MARGREL1:41
      .=TRUE by BINARITH:19;
      hence ('not' c.x 'or' c.x)=TRUE;
    end;
    end;
       now per cases by A2,A3,BINARITH:7;
      case 'not' a.x=TRUE;
      then ((b 'imp' c) 'imp' (a 'imp' c)).x
      =TRUE 'or' (b.x '&' 'not' c.x) by A4,BINARITH:19
      .=TRUE by BINARITH:19;
      hence thesis;
      end;
      case b.x=TRUE;
      then ((b 'imp' c) 'imp' (a 'imp' c)).x
      =('not' a.x 'or' c.x) 'or' 'not' c.x by A4,MARGREL1:50
     .='not' a.x 'or' TRUE by A5,BINARITH:20
     .=TRUE by BINARITH:19;
      hence thesis;
    end;
    end;
    hence thesis;
  end;
  hence thesis by BVFUNC_1:def 14;
end;

theorem Th16:
 for a,b being Element of Funcs(Y,BOOLEAN) holds
b 'imp' (a 'imp' b) =I_el(Y)
proof
  let a,b be Element of Funcs(Y,BOOLEAN);
  A1:for x being Element of Y holds
   (b 'imp' (a 'imp' b)).x = (I_el Y).x
  proof
    let x be Element of Y;
    A2: now per cases by MARGREL1:39;
      case b.x=TRUE;
      hence ('not' b.x 'or' b.x)=TRUE by BINARITH:19;
      end;
      case b.x=FALSE;
      then 'not' b.x 'or' b.x
       =TRUE 'or' FALSE by MARGREL1:41
      .=TRUE by BINARITH:19;
      hence ('not' b.x 'or' b.x)=TRUE;
    end;
    end;
       (b 'imp' (a 'imp' b)).x
    =('not' b.x) 'or' (a 'imp' b).x by BVFUNC_1:def 11
   .=('not' b.x) 'or' (b.x 'or' 'not' a.x) by BVFUNC_1:def 11
   .=TRUE 'or' 'not' a.x by A2,BINARITH:20
   .=TRUE by BINARITH:19;
    hence thesis by BVFUNC_1:def 14;
  end;
  consider k3 being Function such that
    A3:(b 'imp' (a 'imp' b))
      =k3 & dom k3=Y & rng k3 c= BOOLEAN
                     by FUNCT_2:def 2;
  consider k4 being Function such that
    A4: I_el(Y)=k4 & dom k4=Y & rng k4 c= BOOLEAN
                     by FUNCT_2:def 2;
     for u being set st u in Y holds k3.u=k4.u by A1,A3,A4;
  hence thesis by A3,A4,FUNCT_1:9;
end;

theorem  for a,b,c being Element of Funcs(Y,BOOLEAN) holds
((a 'imp' b) 'imp' c) 'imp' (b 'imp' c)=I_el(Y)
proof
  let a,b,c be Element of Funcs(Y,BOOLEAN);
   b 'imp' (a 'imp' b) =I_el(Y) by Th16;
  hence a 'imp' b 'imp' c 'imp' (b 'imp' c)=I_el Y by Th15;
end;

theorem  for a,b being Element of Funcs(Y,BOOLEAN) holds
b 'imp' ((b 'imp' a) 'imp' a)=I_el(Y)
proof
  let a,b be Element of Funcs(Y,BOOLEAN);
  A1:for x being Element of Y holds
   (b 'imp' ((b 'imp' a) 'imp' a)).x = (I_el Y).x
  proof
    let x be Element of Y;
    A2: now per cases by MARGREL1:39;
      case b.x=TRUE;
      hence ('not' b.x 'or' b.x)=TRUE by BINARITH:19;
      end;
      case b.x=FALSE;
      then 'not' b.x 'or' b.x
       =TRUE 'or' FALSE by MARGREL1:41
      .=TRUE by BINARITH:19;
      hence ('not' b.x 'or' b.x)=TRUE;
    end;
    end;
    A3: now per cases by MARGREL1:39;
      case a.x=TRUE;
      hence ('not' a.x 'or' a.x)=TRUE by BINARITH:19;
      end;
      case a.x=FALSE;
      then 'not' a.x 'or' a.x
       =TRUE 'or' FALSE by MARGREL1:41
      .=TRUE by BINARITH:19;
      hence ('not' a.x 'or' a.x)=TRUE;
    end;
    end;
       (b 'imp' ((b 'imp' a) 'imp' a)).x
    = 'not' b.x 'or' ((b 'imp' a) 'imp' a).x by BVFUNC_1:def 11
   .= 'not' b.x 'or' ('not' (b 'imp' a).x 'or' a.x) by BVFUNC_1:def 11
   .= 'not' b.x 'or' ('not' ('not' b.x 'or' a.x) 'or' a.x)
      by BVFUNC_1:def 11
   .= 'not' b.x 'or' (('not' 'not' b.x '&' 'not' a.x)
   'or' a.x) by BINARITH:10
   .= 'not' b.x 'or' (a.x 'or' (b.x '&' 'not'
a.x))
   .= 'not' b.x 'or' ((a.x 'or' b.x) '&' TRUE) by A3,BINARITH:23
   .= 'not' b.x 'or' (a.x 'or' b.x) by MARGREL1:50
   .= 'not' b.x 'or' b.x 'or' a.x by BINARITH:20
   .=TRUE by A2,BINARITH:19;
    hence thesis by BVFUNC_1:def 14;
  end;
  consider k3 being Function such that
    A4:(b 'imp' ((b 'imp' a) 'imp' a))
      =k3 & dom k3=Y & rng k3 c= BOOLEAN
                     by FUNCT_2:def 2;
  consider k4 being Function such that
    A5: I_el(Y)=k4 & dom k4=Y & rng k4 c= BOOLEAN
                     by FUNCT_2:def 2;
     for u being set st u in Y holds k3.u=k4.u by A1,A4,A5;
  hence thesis by A4,A5,FUNCT_1:9;
end;

theorem  :: Contraposition
   for a,b,c being Element of Funcs(Y,BOOLEAN) holds
(c 'imp' (b 'imp' a)) 'imp' (b 'imp' (c 'imp' a))=I_el(Y)
proof
  let a,b,c be Element of Funcs(Y,BOOLEAN);
  A1:for x being Element of Y holds
   ((c 'imp' (b 'imp' a)) 'imp' (b 'imp' (c 'imp' a))).x = (I_el Y).x
  proof
    let x be Element of Y;
    A2: now per cases by MARGREL1:39;
      case b.x=TRUE;
      hence ('not' b.x 'or' b.x)=TRUE by BINARITH:19;
      end;
      case b.x=FALSE;
      then 'not' b.x 'or' b.x
       =TRUE 'or' FALSE by MARGREL1:41
      .=TRUE by BINARITH:19;
      hence ('not' b.x 'or' b.x)=TRUE;
    end;
    end;
    A3: now per cases by MARGREL1:39;
      case a.x=TRUE;
      hence ('not' a.x 'or' a.x)=TRUE by BINARITH:19;
      end;
      case a.x=FALSE;
      then 'not' a.x 'or' a.x
       =TRUE 'or' FALSE by MARGREL1:41
      .=TRUE by BINARITH:19;
      hence ('not' a.x 'or' a.x)=TRUE;
    end;
    end;
    A4: now per cases by MARGREL1:39;
      case c.x=TRUE;
      hence ('not' c.x 'or' c.x)=TRUE by BINARITH:19;
      end;
      case c.x=FALSE;
      then 'not' c.x 'or' c.x
       =TRUE 'or' FALSE by MARGREL1:41
      .=TRUE by BINARITH:19;
      hence ('not' c.x 'or' c.x)=TRUE;
    end;
    end;
       ((c 'imp' (b 'imp' a)) 'imp' (b 'imp' (c 'imp' a))).x
    =('not' (c 'imp' (b 'imp' a)).x) 'or' (b 'imp' (c 'imp' a)).x
     by BVFUNC_1:def 11
   .=('not' ('not' c.x 'or' (b 'imp' a).x)) 'or'
   (b 'imp' (c 'imp' a)).x
     by BVFUNC_1:def 11
   .=('not' ('not' c.x 'or' ('not'
b.x 'or' a.x))) 'or' (b 'imp' (c 'imp' a)).x
     by BVFUNC_1:def 11
   .=('not' ('not' c.x 'or' ('not' b.x 'or' a.x))) 'or'
      ('not' b.x 'or' (c 'imp' a).x) by BVFUNC_1:def 11
   .=('not' ('not' c.x 'or' ('not' b.x 'or' a.x))) 'or'
      ('not' b.x 'or' ('not' c.x 'or' a.x)) by BVFUNC_1:def 11
   .=(('not' 'not' c.x '&' 'not' ('not' b.x 'or' a.x))) 'or'
      ('not' b.x 'or' ('not' c.x 'or' a.x)) by BINARITH:10
   .=((c.x '&' 'not' ('not' b.x 'or' a.x))) 'or'
      ('not' b.x 'or' ('not' c.x 'or' a.x))
   .=((c.x '&' ('not' 'not' b.x '&' 'not' a.x))) 'or'
      ('not' b.x 'or' ('not' c.x 'or' a.x)) by BINARITH:10
   .=('not' b.x 'or' ('not' c.x 'or' a.x)) 'or'
     ((c.x '&' (b.x '&' 'not' a.x)))
   .=(('not' c.x 'or' a.x) 'or' 'not' b.x) 'or'
     (b.x '&' (c.x '&' 'not' a.x)) by MARGREL1:52
   .=((('not' c.x 'or' a.x) 'or' 'not' b.x) 'or' b.x) '&'
     ((('not' c.x 'or' a.x) 'or' 'not' b.x) 'or' (c.x '&' 'not'
a.x))
     by BINARITH:23
   .=(('not' c.x 'or' a.x) 'or' TRUE) '&'
     ((('not' c.x 'or' a.x) 'or' 'not' b.x) 'or' (c.x '&' 'not'
a.x))
     by A2,BINARITH:20
   .=TRUE '&'
     ((('not' c.x 'or' a.x) 'or' 'not' b.x) 'or' (c.x '&' 'not'
a.x))
     by BINARITH:19
   .=((('not' c.x 'or' a.x) 'or' 'not' b.x) 'or' (c.x '&' 'not'
a.x))
     by MARGREL1:50
   .=(((a.x 'or' 'not' b.x) 'or' 'not' c.x) 'or' (c.x '&' 'not'
a.x)) by BINARITH:20
   .=((a.x 'or' 'not' b.x) 'or' ('not' c.x 'or' (c.x '&' 'not'
a.x)))
     by BINARITH:20
   .=((a.x 'or' 'not' b.x) 'or'
     (TRUE '&' ('not' c.x 'or' 'not' a.x))) by A4,BINARITH:23
   .=('not' b.x 'or' a.x) 'or'
     ('not' c.x 'or' 'not' a.x) by MARGREL1:50
   .=(('not' b.x 'or' a.x) 'or' 'not' a.x) 'or' 'not'
c.x by BINARITH:20
   .=('not' b.x 'or' TRUE) 'or' 'not' c.x by A3,BINARITH:20
   .=TRUE 'or' 'not' c.x by BINARITH:19
   .=TRUE by BINARITH:19;
    hence thesis by BVFUNC_1:def 14;
  end;
  consider k3 being Function such that
    A5:((c 'imp' (b 'imp' a)) 'imp' (b 'imp' (c 'imp' a)))
      =k3 & dom k3=Y & rng k3 c= BOOLEAN
                     by FUNCT_2:def 2;
  consider k4 being Function such that
    A6: I_el(Y)=k4 & dom k4=Y & rng k4 c= BOOLEAN
                     by FUNCT_2:def 2;
     for u being set st u in Y holds k3.u=k4.u by A1,A5,A6;
  hence thesis by A5,A6,FUNCT_1:9;
end;

theorem  for a,b,c being Element of Funcs(Y,BOOLEAN) holds
(b 'imp' c) 'imp' ((a 'imp' b) 'imp' (a 'imp' c))=I_el(Y)
proof
  let a,b,c be Element of Funcs(Y,BOOLEAN);
  A1:for x being Element of Y holds
   ((b 'imp' c) 'imp' ((a 'imp' b) 'imp' (a 'imp' c))).x = (I_el Y).x
  proof
    let x be Element of Y;
    A2: now per cases by MARGREL1:39;
      case a.x=TRUE;
      hence ('not' a.x 'or' a.x)=TRUE by BINARITH:19;
      end;
      case a.x=FALSE;
      then 'not' a.x 'or' a.x
       =TRUE 'or' FALSE by MARGREL1:41
      .=TRUE by BINARITH:19;
      hence ('not' a.x 'or' a.x)=TRUE;
    end;
    end;
    A3: now per cases by MARGREL1:39;
      case b.x=TRUE;
      hence ('not' b.x 'or' b.x)=TRUE by BINARITH:19;
      end;
      case b.x=FALSE;
      then 'not' b.x 'or' b.x
       =TRUE 'or' FALSE by MARGREL1:41
      .=TRUE by BINARITH:19;
      hence ('not' b.x 'or' b.x)=TRUE;
    end;
    end;
    A4: now per cases by MARGREL1:39;
      case c.x=TRUE;
      hence ('not' c.x 'or' c.x)=TRUE by BINARITH:19;
      end;
      case c.x=FALSE;
      then 'not' c.x 'or' c.x
       =TRUE 'or' FALSE by MARGREL1:41
      .=TRUE by BINARITH:19;
      hence ('not' c.x 'or' c.x)=TRUE;
    end;
    end;
      ((b 'imp' c) 'imp' ((a 'imp' b) 'imp' (a 'imp' c))).x
   ='not' (b 'imp' c).x 'or' ((a 'imp' b) 'imp' (a 'imp' c)).x
    by BVFUNC_1:def 11
  .='not' (b 'imp' c).x 'or' ('not' (a 'imp' b).x 'or' (a 'imp' c).x)
    by BVFUNC_1:def 11
  .='not' ('not' b.x 'or' c.x) 'or' ('not'
(a 'imp' b).x 'or' (a 'imp' c).x)
    by BVFUNC_1:def 11
  .='not' ('not' b.x 'or' c.x) 'or'
    ('not' ('not' a.x 'or' b.x) 'or' (a 'imp' c).x)
    by BVFUNC_1:def 11
  .='not' ('not' b.x 'or' c.x) 'or'
    ('not' ('not' a.x 'or' b.x) 'or' ('not' a.x 'or' c.x))
    by BVFUNC_1:def 11
  .=('not' 'not' b.x '&' 'not' c.x) 'or'
    ('not' ('not' a.x 'or' b.x) 'or' ('not' a.x 'or' c.x))
    by BINARITH:10
  .=('not' 'not' b.x '&' 'not' c.x) 'or'
    (('not' 'not' a.x '&' 'not' b.x) 'or' ('not' a.x 'or' c.x))
    by BINARITH:10
  .=(b.x '&' 'not' c.x) 'or'
    (('not' 'not' a.x '&' 'not' b.x) 'or' ('not' a.x 'or' c.x))
  .=((a.x '&' 'not' b.x) 'or' ('not' a.x 'or' c.x)) 'or'
    (b.x '&' 'not' c.x)
  .=(((a.x '&' 'not' b.x) 'or' ('not' a.x 'or' c.x)) 'or' 'not'
c.x) '&'
    (((a.x '&' 'not' b.x) 'or' ('not'
a.x 'or' c.x)) 'or' b.x)
    by BINARITH:23
  .=((a.x '&' 'not' b.x) 'or' (('not' a.x 'or' c.x) 'or' 'not'
c.x)) '&'
    (((a.x '&' 'not' b.x) 'or' ('not'
a.x 'or' c.x)) 'or' b.x)
    by BINARITH:20
  .=((a.x '&' 'not' b.x) 'or' ('not' a.x 'or' TRUE)) '&'
    (((a.x '&' 'not' b.x) 'or' ('not'
a.x 'or' c.x)) 'or' b.x)
    by A4,BINARITH:20
  .=((a.x '&' 'not' b.x) 'or' TRUE) '&'
    (((a.x '&' 'not' b.x) 'or' ('not'
a.x 'or' c.x)) 'or' b.x)
    by BINARITH:19
  .=TRUE '&'
    (((a.x '&' 'not' b.x) 'or' ('not'
a.x 'or' c.x)) 'or' b.x)
    by BINARITH:19
  .=(('not' b.x '&' a.x) 'or' ('not'
a.x 'or' c.x)) 'or' b.x by MARGREL1:50
  .=((('not' a.x 'or' c.x) 'or' 'not' b.x) '&'
     (('not' a.x 'or' c.x) 'or' a.x)) 'or' b.x
    by BINARITH:23
  .=((('not' a.x 'or' c.x) 'or' 'not' b.x) '&'
     (c.x 'or' ('not' a.x 'or' a.x))) 'or' b.x
    by BINARITH:20
  .=((('not' a.x 'or' c.x) 'or' 'not' b.x) '&'
     TRUE) 'or' b.x by A2,BINARITH:19
  .=(('not' a.x 'or' c.x) 'or' 'not' b.x) 'or' b.x
    by MARGREL1:50
  .=('not' a.x 'or' c.x) 'or' TRUE by A3,BINARITH:20
  .=TRUE by BINARITH:19;
   hence thesis by BVFUNC_1:def 14;
  end;
  consider k3 being Function such that
    A5:((b 'imp' c) 'imp' ((a 'imp' b) 'imp' (a 'imp' c)))
      =k3 & dom k3=Y & rng k3 c= BOOLEAN
                     by FUNCT_2:def 2;
  consider k4 being Function such that
    A6: I_el(Y)=k4 & dom k4=Y & rng k4 c= BOOLEAN
                     by FUNCT_2:def 2;
     for u being set st u in Y holds k3.u=k4.u by A1,A5,A6;
  hence thesis by A5,A6,FUNCT_1:9;
end;

theorem  :: A Hilbert axiom
   for a,b,c being Element of Funcs(Y,BOOLEAN) holds
(b 'imp' (b 'imp' c)) 'imp' (b 'imp' c)=I_el(Y)
proof
  let a,b,c be Element of Funcs(Y,BOOLEAN);
  A1:for x being Element of Y holds
   ((b 'imp' (b 'imp' c)) 'imp' (b 'imp' c)).x = (I_el Y).x
  proof
    let x be Element of Y;
    A2: now per cases by MARGREL1:39;
      case b.x=TRUE;
      hence ('not' b.x 'or' b.x)=TRUE by BINARITH:19;
      end;
      case b.x=FALSE;
      then 'not' b.x 'or' b.x
       =TRUE 'or' FALSE by MARGREL1:41
      .=TRUE by BINARITH:19;
      hence ('not' b.x 'or' b.x)=TRUE;
    end;
    end;
    A3: now per cases by MARGREL1:39;
      case c.x=TRUE;
      hence ('not' c.x 'or' c.x)=TRUE by BINARITH:19;
      end;
      case c.x=FALSE;
      then 'not' c.x 'or' c.x
       =TRUE 'or' FALSE by MARGREL1:41
      .=TRUE by BINARITH:19;
      hence ('not' c.x 'or' c.x)=TRUE;
    end;
    end;
       ((b 'imp' (b 'imp' c)) 'imp' (b 'imp' c)).x
    ='not' (b 'imp' (b 'imp' c)).x 'or' (b 'imp' c).x
     by BVFUNC_1:def 11
   .='not' ('not' b.x 'or' (b 'imp' c).x) 'or' (b 'imp' c).x
     by BVFUNC_1:def 11
   .='not' ('not' b.x 'or' ('not' b.x 'or' c.x)) 'or'
   (b 'imp' c).x by BVFUNC_1:def 11
   .='not' ('not' b.x 'or' ('not' b.x 'or' c.x)) 'or'
      ('not' b.x 'or' c.x)
     by BVFUNC_1:def 11
   .=('not' 'not' b.x '&' 'not' ('not' b.x 'or' c.x)) 'or'
      ('not' b.x 'or' c.x)
     by BINARITH:10
   .=('not' 'not' b.x '&' ('not' 'not' b.x '&' 'not' c.x)) 'or'
      ('not' b.x 'or' c.x)
     by BINARITH:10
   .=(b.x '&' ('not' 'not' b.x '&' 'not' c.x)) 'or'
      ('not' b.x 'or' c.x)
   .=(b.x '&' (b.x '&' 'not' c.x)) 'or'
      ('not' b.x 'or' c.x)
   .=((b.x '&' b.x) '&' 'not' c.x) 'or'
      ('not' b.x 'or' c.x)
     by MARGREL1:52
   .=('not' b.x 'or' c.x) 'or' (b.x '&' 'not' c.x)
   by BINARITH:16
   .=((c.x 'or' 'not' b.x) 'or' b.x) '&'
     (('not' b.x 'or' c.x) 'or' 'not' c.x) by BINARITH:23
   .=(c.x 'or' TRUE) '&'
     (('not' b.x 'or' c.x) 'or' 'not' c.x) by A2,BINARITH:20
   .=TRUE '&'
     (('not' b.x 'or' c.x) 'or' 'not' c.x)
     by BINARITH:19
   .=(('not' b.x 'or' c.x) 'or' 'not' c.x)
     by MARGREL1:50
   .='not' b.x 'or' TRUE by A3,BINARITH:20
   .=TRUE by BINARITH:19;
    hence thesis by BVFUNC_1:def 14;
  end;
  consider k3 being Function such that
    A4:((b 'imp' (b 'imp' c)) 'imp' (b 'imp' c))
      =k3 & dom k3=Y & rng k3 c= BOOLEAN
                     by FUNCT_2:def 2;
  consider k4 being Function such that
    A5: I_el(Y)=k4 & dom k4=Y & rng k4 c= BOOLEAN
                     by FUNCT_2:def 2;
     for u being set st u in Y holds k3.u=k4.u by A1,A4,A5;
  hence thesis by A4,A5,FUNCT_1:9;
end;

theorem Th22:  :: Frege's law
   for a,b,c being Element of Funcs(Y,BOOLEAN) holds
(a 'imp' (b 'imp' c)) 'imp' ((a 'imp' b) 'imp' (a 'imp' c))=I_el(Y)
proof
  let a,b,c be Element of Funcs(Y,BOOLEAN);
  A1:for x being Element of Y holds
   ((a 'imp' (b 'imp' c)) 'imp' ((a 'imp' b) 'imp' (a 'imp' c))).x
 = (I_el Y).x
  proof
    let x be Element of Y;
    A2: now per cases by MARGREL1:39;
      case a.x=TRUE;
      hence ('not' a.x 'or' a.x)=TRUE by BINARITH:19;
      end;
      case a.x=FALSE;
      then 'not' a.x 'or' a.x
       =TRUE 'or' FALSE by MARGREL1:41
      .=TRUE by BINARITH:19;
      hence ('not' a.x 'or' a.x)=TRUE;
    end;
    end;
    A3: now per cases by MARGREL1:39;
      case b.x=TRUE;
      hence ('not' b.x 'or' b.x)=TRUE by BINARITH:19;
      end;
      case b.x=FALSE;
      then 'not' b.x 'or' b.x
       =TRUE 'or' FALSE by MARGREL1:41
      .=TRUE by BINARITH:19;
      hence ('not' b.x 'or' b.x)=TRUE;
    end;
    end;
    A4: now per cases by MARGREL1:39;
      case c.x=TRUE;
      hence ('not' c.x 'or' c.x)=TRUE by BINARITH:19;
      end;
      case c.x=FALSE;
      then 'not' c.x 'or' c.x
       =TRUE 'or' FALSE by MARGREL1:41
      .=TRUE by BINARITH:19;
      hence ('not' c.x 'or' c.x)=TRUE;
    end;
    end;
       ((a 'imp' (b 'imp' c)) 'imp' ((a 'imp' b) 'imp' (a 'imp' c))).x
    ='not' (a 'imp' (b 'imp' c)).x 'or'
      ((a 'imp' b) 'imp' (a 'imp' c)).x by BVFUNC_1:def 11
   .='not' ('not' a.x 'or' (b 'imp' c).x) 'or'
      ((a 'imp' b) 'imp' (a 'imp' c)).x by BVFUNC_1:def 11
   .='not' ('not' a.x 'or' ('not' b.x 'or' c.x)) 'or'
      ((a 'imp' b) 'imp' (a 'imp' c)).x by BVFUNC_1:def 11
   .='not' ('not' a.x 'or' ('not' b.x 'or' c.x)) 'or'
      ('not' (a 'imp' b).x 'or' (a 'imp' c).x) by BVFUNC_1:def 11
   .='not' ('not' a.x 'or' ('not' b.x 'or' c.x)) 'or'
      ('not' ('not'
a.x 'or' b.x) 'or' (a 'imp' c).x) by BVFUNC_1:def 11
   .='not' ('not' a.x 'or' ('not' b.x 'or' c.x)) 'or'
      ('not' ('not' a.x 'or' b.x) 'or' ('not' a.x 'or' c.x))
     by BVFUNC_1:def 11
   .=('not' 'not' a.x '&' 'not' ('not' b.x 'or' c.x)) 'or'
      ('not' ('not' a.x 'or' b.x) 'or' ('not' a.x 'or' c.x))
     by BINARITH:10
   .=('not' 'not' a.x '&' ('not' 'not' b.x '&' 'not' c.x)) 'or'
      ('not' ('not' a.x 'or' b.x) 'or' ('not' a.x 'or' c.x))
     by BINARITH:10
   .=('not' 'not' a.x '&' ('not' 'not' b.x '&' 'not' c.x)) 'or'
      (('not' 'not' a.x '&' 'not' b.x) 'or'
      ('not' a.x 'or' c.x)) by BINARITH:10
    .=(a.x '&' ('not' 'not' b.x '&' 'not' c.x)) 'or'
      (('not' 'not' a.x '&' 'not' b.x) 'or' ('not' a.x
      'or' c.x))
   .=(a.x '&' (b.x '&' 'not' c.x)) 'or'
      (('not' 'not' a.x '&' 'not' b.x) 'or' ('not' a.x
      'or' c.x))
   .=(a.x '&' (b.x '&' 'not' c.x)) 'or'
      (('not' a.x 'or' c.x) 'or' (a.x '&' 'not'
b.x))
   .=(a.x '&' (b.x '&' 'not' c.x)) 'or'
      (((c.x 'or' 'not' a.x) 'or' a.x) '&'
       ((c.x 'or' 'not' a.x) 'or' 'not' b.x))
     by BINARITH:23
   .=(a.x '&' (b.x '&' 'not' c.x)) 'or'
      ((c.x 'or' TRUE) '&'
       ((c.x 'or' 'not' a.x) 'or' 'not' b.x))
     by A2,BINARITH:20
   .=(a.x '&' (b.x '&' 'not' c.x)) 'or'
      (TRUE '&'
       ((c.x 'or' 'not' a.x) 'or' 'not' b.x))
     by BINARITH:19
   .=((c.x 'or' 'not' a.x) 'or' 'not' b.x) 'or'
       (a.x '&' (b.x '&' 'not' c.x)) by MARGREL1:50
   .=(((c.x 'or' 'not' a.x) 'or' 'not' b.x) 'or' a.x) '&'
     (((c.x 'or' 'not' a.x) 'or' 'not' b.x) 'or' (b.x '&'
     'not' c.x)) by BINARITH:23
   .=(((c.x 'or' 'not' a.x) 'or' a.x) 'or' 'not' b.x) '&'
   (((c.x 'or' 'not' a.x) 'or' 'not' b.x) 'or' (b.x '&' 'not'
c.x)) by BINARITH:20
   .=((c.x 'or' TRUE) 'or' 'not' b.x) '&'
   (((c.x 'or' 'not' a.x) 'or' 'not' b.x) 'or' (b.x '&' 'not'
c.x)) by A2,BINARITH:20
   .=(TRUE 'or' 'not' b.x) '&'
   (((c.x 'or' 'not' a.x) 'or' 'not' b.x) 'or' (b.x '&' 'not'
c.x)) by BINARITH:19
   .=TRUE '&'
   (((c.x 'or' 'not' a.x) 'or' 'not' b.x) 'or' (b.x '&' 'not'
c.x)) by BINARITH:19
   .=(((c.x 'or' 'not' a.x) 'or' 'not' b.x) 'or'
   (b.x '&' 'not' c.x)) by MARGREL1:50
   .=(((c.x 'or' 'not' a.x) 'or' 'not' b.x) 'or' b.x) '&'
     (((c.x 'or' 'not' a.x) 'or' 'not' b.x) 'or' 'not' c.x)
     by BINARITH:23
   .=((c.x 'or' 'not' a.x) 'or' TRUE) '&'
     (((c.x 'or' 'not' a.x) 'or' 'not' b.x) 'or' 'not' c.x)
     by A3,BINARITH:20
   .=TRUE '&'
     (((c.x 'or' 'not' a.x) 'or' 'not' b.x) 'or' 'not' c.x)
     by BINARITH:19
   .=(('not' b.x 'or' (c.x 'or' 'not' a.x)) 'or' 'not'
c.x) by MARGREL1:50
   .=((('not' b.x 'or' 'not' a.x) 'or' c.x) 'or' 'not' c.x)
     by BINARITH:20
   .=(('not' b.x 'or' 'not' a.x) 'or' TRUE)
     by A4,BINARITH:20
   .=TRUE
     by BINARITH:19;
    hence thesis by BVFUNC_1:def 14;
  end;
  consider k3 being Function such that
    A5:((a 'imp' (b 'imp' c)) 'imp' ((a 'imp' b) 'imp' (a 'imp' c)))
      =k3 & dom k3=Y & rng k3 c= BOOLEAN
                     by FUNCT_2:def 2;
  consider k4 being Function such that
    A6: I_el(Y)=k4 & dom k4=Y & rng k4 c= BOOLEAN
                     by FUNCT_2:def 2;
     for u being set st u in Y holds k3.u=k4.u by A1,A5,A6;
  hence thesis by A5,A6,FUNCT_1:9;
end;

theorem  for a,b being Element of Funcs(Y,BOOLEAN) holds
a=I_el(Y) implies (a 'imp' b) 'imp' b=I_el(Y)
proof
  let a,b be Element of Funcs(Y,BOOLEAN);
  assume A1:a=I_el(Y);
     for x being Element of Y holds ((a 'imp' b) 'imp' b).x=TRUE
  proof
    let x be Element of Y;
    A2:a.x=TRUE by A1,BVFUNC_1:def 14;
    A3: now per cases by MARGREL1:39;
      case b.x=TRUE;
      hence ('not' b.x 'or' b.x)=TRUE by BINARITH:19;
      end;
      case b.x=FALSE;
      then 'not' b.x 'or' b.x
       =TRUE 'or' FALSE by MARGREL1:41
      .=TRUE by BINARITH:19;
      hence ('not' b.x 'or' b.x)=TRUE;
    end;
    end;
       ((a 'imp' b) 'imp' b).x
     ='not' (a 'imp' b).x 'or' b.x by BVFUNC_1:def 11
    .='not' ('not' a.x 'or' b.x) 'or' b.x by BVFUNC_1:def 11
    .=('not' 'not' a.x '&' 'not' b.x) 'or' b.x by BINARITH:10
    .=b.x 'or' (a.x '&' 'not' b.x)
    .=(b.x 'or' TRUE) '&' TRUE by A2,A3,BINARITH:23
    .=b.x 'or' TRUE by MARGREL1:50
    .=TRUE by BINARITH:19;
    hence thesis;
  end;
  hence thesis by BVFUNC_1:def 14;
end;

theorem  for a,b,c being Element of Funcs(Y,BOOLEAN) holds
c 'imp' (b 'imp' a)=I_el(Y) implies b 'imp' (c 'imp' a)=I_el(Y)
proof
  let a,b,c be Element of Funcs(Y,BOOLEAN);
  assume A1:c 'imp' (b 'imp' a)=I_el(Y);
     for x being Element of Y holds (b 'imp' (c 'imp' a)).x=TRUE
  proof
    let x be Element of Y;
       (c 'imp' (b 'imp' a)).x=TRUE by A1,BVFUNC_1:def 14;
    then 'not' c.x 'or' (b 'imp' a).x=TRUE by BVFUNC_1:def 11;
    then A2: 'not' c.x 'or' ('not' b.x 'or' a.x)=TRUE
    by BVFUNC_1:def 11;
       (b 'imp' (c 'imp' a)).x
    ='not' b.x 'or' (c 'imp' a).x by BVFUNC_1:def 11
   .='not' b.x 'or' ('not' c.x 'or' a.x) by BVFUNC_1:def 11
   .=TRUE by A2,BINARITH:20;
    hence thesis;
  end;
  hence thesis by BVFUNC_1:def 14;
end;

theorem  for a,b,c being Element of Funcs(Y,BOOLEAN) holds
c 'imp' (b 'imp' a)=I_el(Y) & b=I_el(Y) implies
c 'imp' a=I_el(Y)
proof
  let a,b,c be Element of Funcs(Y,BOOLEAN);
  assume A1:c 'imp' (b 'imp' a)=I_el(Y) & b=I_el(Y);
     for x being Element of Y holds (c 'imp' a).x=TRUE
  proof
    let x be Element of Y;
       (c 'imp' (b 'imp' a)).x=TRUE by A1,BVFUNC_1:def 14;
    then 'not' c.x 'or' (b 'imp' a).x=TRUE by BVFUNC_1:def 11;
    then A2:'not' c.x 'or' ('not' b.x 'or' a.x)=TRUE by
BVFUNC_1:def 11;
       b.x=TRUE by A1,BVFUNC_1:def 14;
    then 'not' c.x 'or' (FALSE 'or' a.x)=TRUE by A2,MARGREL1:41;
    then 'not' c.x 'or' a.x=TRUE by BINARITH:7;
    hence thesis by BVFUNC_1:def 11;
  end;
  hence thesis by BVFUNC_1:def 14;
end;

theorem Th26:
 for a being Element of Funcs(Y,BOOLEAN) holds
  I_el Y 'imp' (I_el Y 'imp' a)=I_el Y implies a=I_el Y
proof set b = I_el Y, c = I_el Y;
  let a be Element of Funcs(Y,BOOLEAN);
  assume  I_el Y 'imp' (I_el Y 'imp' a)=I_el(Y);
   then I_el Y 'imp' a=I_el(Y) by Th2;
  hence thesis by Th2;
end;

theorem  for b,c being Element of Funcs(Y,BOOLEAN) holds
b 'imp' (b 'imp' c)=I_el(Y) implies b 'imp' c = I_el(Y)
proof
  let b,c be Element of Funcs(Y,BOOLEAN);
  assume A1:b 'imp' (b 'imp' c)=I_el(Y);
     for x being Element of Y holds (b 'imp' c).x=TRUE
  proof
    let x be Element of Y;
       (b 'imp' (b 'imp' c)).x=TRUE by A1,BVFUNC_1:def 14;
    then 'not' b.x 'or' (b 'imp' c).x=TRUE by BVFUNC_1:def 11;
    then 'not' b.x 'or' ('not' b.x 'or' c.x)=TRUE
    by BVFUNC_1:def 11;
    then ('not' b.x 'or' 'not' b.x) 'or' c.x=TRUE by BINARITH:20;
    then A2:'not' b.x 'or' c.x=TRUE by BINARITH:21;
    A3: 'not' b.x=TRUE or 'not' b.x=FALSE by MARGREL1:39;
A4:(b 'imp' c).x='not' b.x 'or' c.x by BVFUNC_1:def 11;
       now per cases by A2,A3,BINARITH:7;
      case 'not' b.x=TRUE;
      hence thesis by A4,BINARITH:19;
      end;
      case c.x=TRUE;
      hence thesis by A4,BINARITH:19;
    end;
    end;
    hence thesis;
  end;
  hence thesis by BVFUNC_1:def 14;
end;

theorem  for a,b,c being Element of Funcs(Y,BOOLEAN) holds
(a 'imp' (b 'imp' c)) = I_el(Y) implies
(a 'imp' b) 'imp' (a 'imp' c) = I_el(Y)
proof
  let a,b,c be Element of Funcs(Y,BOOLEAN);
  assume A1:a 'imp' (b 'imp' c)=I_el(Y);
     for x being Element of Y holds ((a 'imp' b) 'imp' (a 'imp' c)).x=TRUE
  proof
    let x be Element of Y;
       (a 'imp' (b 'imp' c)).x=TRUE by A1,BVFUNC_1:def 14;
    then 'not' a.x 'or' (b 'imp' c).x=TRUE by BVFUNC_1:def 11;
then A2:'not' a.x 'or' ('not' b.x 'or' c.x)=TRUE by BVFUNC_1:def 11
;
    A3: now per cases by MARGREL1:39;
      case a.x=TRUE;
      hence ('not' a.x 'or' a.x)=TRUE by BINARITH:19;
      end;
      case a.x=FALSE;
      then 'not' a.x 'or' a.x
       =TRUE 'or' FALSE by MARGREL1:41
      .=TRUE by BINARITH:19;
      hence ('not' a.x 'or' a.x)=TRUE;
    end;
    end;
       ((a 'imp' b) 'imp' (a 'imp' c)).x
    ='not' (a 'imp' b).x 'or' (a 'imp' c).x by BVFUNC_1:def 11
   .='not' ('not' a.x 'or' b.x) 'or' (a 'imp' c).x by BVFUNC_1:def 11
   .='not' ('not' a.x 'or' b.x) 'or' ('not'
a.x 'or' c.x) by BVFUNC_1:def 11
   .=('not' 'not' a.x '&' 'not' b.x) 'or' ('not'
a.x 'or' c.x) by BINARITH:10
   .=('not' a.x 'or' c.x) 'or' (a.x '&' 'not' b.x)
   .=(('not' a.x 'or' c.x) 'or' a.x) '&'
     (('not' a.x 'or' c.x) 'or' 'not' b.x) by BINARITH:23
   .=TRUE '&' (('not' a.x 'or' c.x) 'or' a.x) by A2,BINARITH:20
   .=(c.x 'or' 'not' a.x) 'or' a.x by MARGREL1:50
   .=c.x 'or' TRUE by A3,BINARITH:20
   .=TRUE by BINARITH:19;
    hence thesis;
  end;
  hence thesis by BVFUNC_1:def 14;
end;

theorem  for a,b,c being Element of Funcs(Y,BOOLEAN) holds
(a 'imp' (b 'imp' c)) = I_el(Y) & a 'imp' b = I_el(Y) implies
a 'imp' c = I_el(Y)
proof
  let a,b,c be Element of Funcs(Y,BOOLEAN);
  assume  a 'imp' (b 'imp' c)=I_el(Y) & a 'imp' b = I_el(Y);
   then I_el Y 'imp' (I_el Y 'imp' (a 'imp' c))=I_el Y by Th22;
  hence a 'imp' c = I_el Y by Th26;
end;

theorem  for a,b,c being Element of Funcs(Y,BOOLEAN) holds
(a 'imp' (b 'imp' c)) = I_el(Y) & a 'imp' b = I_el(Y) & a = I_el(Y)
implies c = I_el(Y)
proof
  let a,b,c be Element of Funcs(Y,BOOLEAN);
  assume A1:(a 'imp' (b 'imp' c)) = I_el(Y) &
             a 'imp' b = I_el(Y) & a = I_el(Y);
     for x being Element of Y holds c.x=TRUE
  proof
    let x be Element of Y;
       (a 'imp' (b 'imp' c)).x=TRUE by A1,BVFUNC_1:def 14;
    then 'not' a.x 'or' (b 'imp' c).x=TRUE by BVFUNC_1:def 11;
    then A2:'not' a.x 'or' ('not' b.x 'or' c.x)=TRUE by
BVFUNC_1:def 11;
    A3:a.x=TRUE by A1,BVFUNC_1:def 14;
       (a 'imp' b).x=TRUE by A1,BVFUNC_1:def 14;
    then 'not' a.x 'or' b.x=TRUE by BVFUNC_1:def 11;
    then FALSE 'or' b.x=TRUE by A3,MARGREL1:41;
    then b.x=TRUE by BINARITH:7;
    then FALSE 'or' ('not' TRUE 'or' c.x)=TRUE by A2,A3,MARGREL1:41;
    then FALSE 'or' (FALSE 'or' c.x)=TRUE by MARGREL1:41;
    then (FALSE 'or' c.x)=TRUE by BINARITH:7;
    hence thesis by BINARITH:7;
  end;
  hence thesis by BVFUNC_1:def 14;
end;

theorem  for a,b,c,d being Element of Funcs(Y,BOOLEAN) holds
a 'imp' (b 'imp' c) = I_el(Y) & a 'imp' (c 'imp' d) = I_el(Y)
implies a 'imp' (b 'imp' d) = I_el(Y)
proof
  let a,b,c,d be Element of Funcs(Y,BOOLEAN);
  assume A1:a 'imp' (b 'imp' c) = I_el(Y) &
             a 'imp' (c 'imp' d) = I_el(Y);
     for x being Element of Y holds (a 'imp' (b 'imp' d)).x=TRUE
  proof
    let x be Element of Y;
       (a 'imp' (b 'imp' c)).x=TRUE by A1,BVFUNC_1:def 14;
    then 'not' a.x 'or' (b 'imp' c).x=TRUE by BVFUNC_1:def 11;
    then A2:'not' a.x 'or' ('not' b.x 'or' c.x)=TRUE by
BVFUNC_1:def 11;
    A3:'not' a.x=TRUE or 'not' a.x=FALSE by MARGREL1:39;
       (a 'imp' (c 'imp' d)).x=TRUE by A1,BVFUNC_1:def 14;
    then 'not' a.x 'or' (c 'imp' d).x=TRUE by BVFUNC_1:def 11;
    then A4: 'not' a.x 'or' ('not' c.x 'or' (d).x)=TRUE
    by BVFUNC_1:def 11;
A5:(a 'imp' (b 'imp' d)).x
    ='not' a.x 'or' (b 'imp' d).x by BVFUNC_1:def 11
   .='not' a.x 'or' ('not' b.x 'or' (d).x) by BVFUNC_1:def 11;
       now per cases by A2,A3,A4,BINARITH:7;
      case 'not' a.x=TRUE & 'not' a.x=TRUE;
      hence thesis by A5,BINARITH:19;
      end;
      case 'not' a.x=TRUE & ('not' c.x 'or' (d).x)=TRUE;
      hence thesis by A5,BINARITH:19;
      end;
      case ('not' b.x 'or' c.x)=TRUE & 'not' a.x=TRUE;
      hence thesis by A5,BINARITH:19;
      end;
      case A6:('not' b.x 'or' c.x)=TRUE & ('not'
c.x 'or' (d).x)=TRUE;
      A7: 'not' b.x=TRUE or 'not' b.x=FALSE by MARGREL1:39;
      A8: 'not' c.x=TRUE or 'not' c.x=FALSE by MARGREL1:39;
         now per cases by A6,A7,A8,BINARITH:7;
        case 'not' b.x=TRUE & 'not' c.x=TRUE;
        then (a 'imp' (b 'imp' d)).x
        ='not' a.x 'or' TRUE by A5,BINARITH:19
       .=TRUE by BINARITH:19;
        hence thesis;
        end;
        case 'not' b.x=TRUE & (d).x=TRUE;
        then (a 'imp' (b 'imp' d)).x
        ='not' a.x 'or' TRUE by A5,BINARITH:19
       .=TRUE by BINARITH:19;
        hence thesis;
        end;
        case A9:c.x=TRUE & 'not' c.x=TRUE;
        then c.x=FALSE by MARGREL1:41;
        hence thesis by A9,MARGREL1:43;
        end;
        case c.x=TRUE & (d).x=TRUE;
        then (a 'imp' (b 'imp' d)).x
        ='not' a.x 'or' TRUE by A5,BINARITH:19
       .=TRUE by BINARITH:19;
        hence thesis;
      end;
      end;
      hence thesis;
    end;
    end;
    hence thesis;
  end;
  hence thesis by BVFUNC_1:def 14;
end;

theorem  for a,b being Element of Funcs(Y,BOOLEAN) holds
('not' a 'imp' 'not' b) 'imp' (b 'imp' a) = I_el(Y)
proof
  let a,b be Element of Funcs(Y,BOOLEAN);
  A1:for x being Element of Y holds
   (('not' a 'imp' 'not' b) 'imp' (b 'imp' a)).x = (I_el Y).x
  proof
    let x be Element of Y;
    A2: now per cases by MARGREL1:39;
      case a.x=TRUE;
      hence ('not' a.x 'or' a.x)=TRUE by BINARITH:19;
      end;
      case a.x=FALSE;
      then 'not' a.x 'or' a.x
       =TRUE 'or' FALSE by MARGREL1:41
      .=TRUE by BINARITH:19;
      hence ('not' a.x 'or' a.x)=TRUE;
    end;
    end;
    A3: now per cases by MARGREL1:39;
      case b.x=TRUE;
      hence ('not' b.x 'or' b.x)=TRUE by BINARITH:19;
      end;
      case b.x=FALSE;
      then 'not' b.x 'or' b.x
       =TRUE 'or' FALSE by MARGREL1:41
      .=TRUE by BINARITH:19;
      hence ('not' b.x 'or' b.x)=TRUE;
    end;
    end;
       (('not' a 'imp' 'not' b) 'imp' (b 'imp' a)).x
    ='not' ('not' a 'imp' 'not' b).x 'or' (b 'imp' a).x by BVFUNC_1:def 11
   .='not' ('not' ('not' a).x 'or' ('not'
b).x) 'or' (b 'imp' a).x by BVFUNC_1:def 11
   .='not' ('not' ('not' a).x 'or' ('not' b).x) 'or' ('not'
b.x 'or' a.x)
    by BVFUNC_1:def 11
   .=('not' 'not' ('not' a).x '&' 'not' ('not' b).x) 'or' ('not'
b.x 'or' a.x)
    by BINARITH:10
   .=('not' b.x 'or' a.x) 'or' (('not' a).x '&' 'not' ('not'
b).x)
   .=(('not' b.x 'or' a.x) 'or' ('not' a).x) '&'
     (('not' b.x 'or' a.x) 'or' 'not' ('not' b).x)
    by BINARITH:23
   .=('not' b.x 'or' (a.x 'or' ('not' a).x)) '&'
     (('not' b.x 'or' a.x) 'or' 'not' ('not' b).x)
    by BINARITH:20
   .=('not' b.x 'or' TRUE) '&'
     (('not' b.x 'or' a.x) 'or' 'not' ('not' b).x)
    by A2,VALUAT_1:def 5
   .=TRUE '&' (('not' b.x 'or' a.x) 'or' 'not' ('not' b).x)
    by BINARITH:19
   .=((a.x 'or' 'not' b.x) 'or' 'not' ('not' b).x) by MARGREL1:50
   .=(a.x 'or' ('not' b.x 'or' 'not' ('not' b).x))
    by BINARITH:20
   .=(a.x 'or' ('not' b.x 'or' 'not' 'not' b.x))
    by VALUAT_1:def 5
   .=(a.x 'or' TRUE) by A3
   .=TRUE
    by BINARITH:19;
    hence thesis by BVFUNC_1:def 14;
  end;
  consider k3 being Function such that
    A4:(('not' a 'imp' 'not' b) 'imp' (b 'imp' a))
      =k3 & dom k3=Y & rng k3 c= BOOLEAN
                     by FUNCT_2:def 2;
  consider k4 being Function such that
    A5: I_el(Y)=k4 & dom k4=Y & rng k4 c= BOOLEAN
                     by FUNCT_2:def 2;
     for u being set st u in Y holds k3.u=k4.u by A1,A4,A5;
  hence thesis by A4,A5,FUNCT_1:9;
end;

theorem  for a,b being Element of Funcs(Y,BOOLEAN) holds
(a 'imp' b) 'imp' ('not' b 'imp' 'not' a)=I_el(Y)
proof
  let a,b be Element of Funcs(Y,BOOLEAN);
  A1:for x being Element of Y holds
   ((a 'imp' b) 'imp' ('not' b 'imp' 'not' a)).x = (I_el Y).x
  proof
    let x be Element of Y;
    A2: now per cases by MARGREL1:39;
      case a.x=TRUE;
      hence ('not' a.x 'or' a.x)=TRUE by BINARITH:19;
      end;
      case a.x=FALSE;
      then 'not' a.x 'or' a.x
       =TRUE 'or' FALSE by MARGREL1:41
      .=TRUE by BINARITH:19;
      hence ('not' a.x 'or' a.x)=TRUE;
    end;
    end;
    A3: now per cases by MARGREL1:39;
      case b.x=TRUE;
      hence ('not' b.x 'or' b.x)=TRUE by BINARITH:19;
      end;
      case b.x=FALSE;
      then 'not' b.x 'or' b.x
       =TRUE 'or' FALSE by MARGREL1:41
      .=TRUE by BINARITH:19;
      hence ('not' b.x 'or' b.x)=TRUE;
    end;
    end;
       ((a 'imp' b) 'imp' ('not' b 'imp' 'not' a)).x
    ='not' (a 'imp' b).x 'or' ('not' b 'imp' 'not' a).x by BVFUNC_1:def 11
   .='not' ('not' a.x 'or' b.x) 'or' ('not' b 'imp' 'not'
a).x by BVFUNC_1:def 11
   .='not' ('not' a.x 'or' b.x) 'or' ('not' ('not' b).x 'or' ('not'
a).x)
    by BVFUNC_1:def 11
   .=('not' 'not' a.x '&' 'not' b.x) 'or'
   ('not' ('not' b).x 'or' ('not' a).x) by BINARITH:10
   .=(a.x '&' 'not' b.x) 'or' ('not' ('not' b).x 'or' ('not' a).x)
   .=(a.x '&' 'not' b.x) 'or' ('not' 'not' b.x 'or' ('not' a).x)
    by VALUAT_1:def 5
   .=(a.x '&' 'not' b.x) 'or' (b.x 'or' ('not' a).x)
   .=(b.x 'or' 'not' a.x) 'or' (a.x '&' 'not'
b.x) by VALUAT_1:def 5
   .=((b.x 'or' 'not' a.x) 'or' a.x) '&'
     ((b.x 'or' 'not' a.x) 'or' 'not' b.x) by BINARITH:23
   .=(b.x 'or' TRUE) '&'
     ((b.x 'or' 'not' a.x) 'or' 'not' b.x) by A2,BINARITH:20
   .=TRUE '&'
     ((b.x 'or' 'not' a.x) 'or' 'not' b.x) by BINARITH:19
   .=(('not' a.x 'or' b.x) 'or' 'not' b.x) by MARGREL1:50
   .=('not' a.x 'or' TRUE)
    by A3,BINARITH:20
   .=TRUE by BINARITH:19;
    hence thesis by BVFUNC_1:def 14;
  end;
  consider k3 being Function such that
    A4:((a 'imp' b) 'imp' ('not' b 'imp' 'not' a))
      =k3 & dom k3=Y & rng k3 c= BOOLEAN
                     by FUNCT_2:def 2;
  consider k4 being Function such that
    A5: I_el(Y)=k4 & dom k4=Y & rng k4 c= BOOLEAN
                     by FUNCT_2:def 2;
     for u being set st u in Y holds k3.u=k4.u by A1,A4,A5;
  hence thesis by A4,A5,FUNCT_1:9;
end;

theorem  for a,b being Element of Funcs(Y,BOOLEAN) holds
(a 'imp' 'not' b) 'imp' (b 'imp' 'not' a)=I_el(Y)
proof
  let a,b be Element of Funcs(Y,BOOLEAN);
  A1:for x being Element of Y holds
   ((a 'imp' 'not' b) 'imp' (b 'imp' 'not' a)).x = (I_el Y).x
  proof
    let x be Element of Y;
    A2: now per cases by MARGREL1:39;
      case a.x=TRUE;
      hence ('not' a.x 'or' a.x)=TRUE by BINARITH:19;
      end;
      case a.x=FALSE;
      then 'not' a.x 'or' a.x
       =TRUE 'or' FALSE by MARGREL1:41
      .=TRUE by BINARITH:19;
      hence ('not' a.x 'or' a.x)=TRUE;
    end;
    end;
    A3: now per cases by MARGREL1:39;
      case b.x=TRUE;
      hence ('not' b.x 'or' b.x)=TRUE by BINARITH:19;
      end;
      case b.x=FALSE;
      then 'not' b.x 'or' b.x
       =TRUE 'or' FALSE by MARGREL1:41
      .=TRUE by BINARITH:19;
      hence ('not' b.x 'or' b.x)=TRUE;
    end;
    end;
       ((a 'imp' 'not' b) 'imp' (b 'imp' 'not' a)).x
    ='not' (a 'imp' 'not' b).x 'or' (b 'imp' 'not' a).x by BVFUNC_1:def 11
   .='not' ('not' a.x 'or' ('not' b).x) 'or' (b 'imp' 'not'
a).x by BVFUNC_1:def 11
   .='not' ('not' a.x 'or' ('not' b).x) 'or' ('not' b.x 'or' ('not'
a).x)
    by BVFUNC_1:def 11
   .=('not' 'not' a.x '&' 'not' ('not' b).x) 'or'
   ('not' b.x 'or' ('not' a).x) by BINARITH:10
   .=(a.x '&' 'not' ('not' b).x) 'or' ('not' b.x 'or' ('not' a).x)
   .=(a.x '&' 'not' 'not' b.x) 'or' ('not' b.x 'or' ('not' a).x)
    by VALUAT_1:def 5
   .=(a.x '&' b.x) 'or' ('not' b.x 'or' ('not' a).x)
   .=('not' b.x 'or' 'not'
a.x) 'or' (a.x '&' b.x) by VALUAT_1:def 5
   .=(('not' b.x 'or' 'not' a.x) 'or' a.x) '&'
     (('not' b.x 'or' 'not' a.x) 'or' b.x) by BINARITH:23
   .=('not' b.x 'or' TRUE) '&'
     (('not' b.x 'or' 'not' a.x) 'or' b.x) by A2,BINARITH:20
   .=TRUE '&'
     (('not' b.x 'or' 'not' a.x) 'or' b.x) by BINARITH:19
   .=(('not' a.x 'or' 'not' b.x) 'or' b.x) by MARGREL1:50
   .=('not' a.x 'or' TRUE)
    by A3,BINARITH:20
   .=TRUE by BINARITH:19;
    hence thesis by BVFUNC_1:def 14;
  end;
  consider k3 being Function such that
    A4:((a 'imp' 'not' b) 'imp' (b 'imp' 'not' a))
      =k3 & dom k3=Y & rng k3 c= BOOLEAN
                     by FUNCT_2:def 2;
  consider k4 being Function such that
    A5: I_el(Y)=k4 & dom k4=Y & rng k4 c= BOOLEAN
                     by FUNCT_2:def 2;
     for u being set st u in Y holds k3.u=k4.u by A1,A4,A5;
  hence thesis by A4,A5,FUNCT_1:9;
end;

theorem  for a,b being Element of Funcs(Y,BOOLEAN) holds
('not' a 'imp' b) 'imp' ('not' b 'imp' a)=I_el(Y)
proof
  let a,b be Element of Funcs(Y,BOOLEAN);
  A1:for x being Element of Y holds
   (('not' a 'imp' b) 'imp' ('not' b 'imp' a)).x = (I_el Y).x
  proof
    let x be Element of Y;
    A2: now per cases by MARGREL1:39;
      case a.x=TRUE;
      hence ('not' a.x 'or' a.x)=TRUE by BINARITH:19;
      end;
      case a.x=FALSE;
      then 'not' a.x 'or' a.x
       =TRUE 'or' FALSE by MARGREL1:41
      .=TRUE by BINARITH:19;
      hence ('not' a.x 'or' a.x)=TRUE;
    end;
    end;
    A3: now per cases by MARGREL1:39;
      case b.x=TRUE;
      hence ('not' b.x 'or' b.x)=TRUE by BINARITH:19;
      end;
      case b.x=FALSE;
      then 'not' b.x 'or' b.x
       =TRUE 'or' FALSE by MARGREL1:41
      .=TRUE by BINARITH:19;
      hence ('not' b.x 'or' b.x)=TRUE;
    end;
    end;
       (('not' a 'imp' b) 'imp' ('not' b 'imp' a)).x
    ='not' ('not' a 'imp' b).x 'or' ('not' b 'imp' a).x by BVFUNC_1:def 11
   .='not' ('not' ('not' a).x 'or' b.x) 'or' ('not'
b 'imp' a).x by BVFUNC_1:def 11
   .='not' ('not' ('not' a).x 'or' b.x) 'or' ('not' ('not'
b).x 'or' a.x)
    by BVFUNC_1:def 11
   .=('not' 'not' ('not' a).x '&' 'not' b.x) 'or' ('not' ('not'
b).x 'or' a.x)
    by BINARITH:10
   .=(('not' a).x '&' 'not' b.x) 'or' ('not' ('not' b).x 'or' a.x)
   .=('not' a.x '&' 'not' b.x) 'or' ('not' ('not' b).x 'or' a.x)
    by VALUAT_1:def 5
   .=('not' a.x '&' 'not' b.x) 'or' ('not' 'not' b.x 'or' a.x)
    by VALUAT_1:def 5
   .=(b.x 'or' a.x) 'or' ('not' a.x '&' 'not' b.x)
   .=((b.x 'or' a.x) 'or' 'not' a.x) '&'
     ((b.x 'or' a.x) 'or' 'not' b.x)
    by BINARITH:23
   .=(b.x 'or' TRUE) '&'
     ((b.x 'or' a.x) 'or' 'not' b.x)
    by A2,BINARITH:20
   .=TRUE '&'
     ((b.x 'or' a.x) 'or' 'not' b.x)
    by BINARITH:19
   .=((a.x 'or' b.x) 'or' 'not' b.x) by MARGREL1:50
   .=(a.x 'or' TRUE)
    by A3,BINARITH:20
   .=TRUE
    by BINARITH:19;
    hence thesis by BVFUNC_1:def 14;
  end;
  consider k3 being Function such that
    A4:(('not' a 'imp' b) 'imp' ('not' b 'imp' a))
      =k3 & dom k3=Y & rng k3 c= BOOLEAN
                     by FUNCT_2:def 2;
  consider k4 being Function such that
    A5: I_el(Y)=k4 & dom k4=Y & rng k4 c= BOOLEAN
                     by FUNCT_2:def 2;
     for u being set st u in Y holds k3.u=k4.u by A1,A4,A5;
  hence thesis by A4,A5,FUNCT_1:9;
end;

theorem  for a being Element of Funcs(Y,BOOLEAN) holds
(a 'imp' 'not' a) 'imp' 'not' a=I_el(Y)
proof
  let a be Element of Funcs(Y,BOOLEAN);
  A1:for x being Element of Y holds
   ((a 'imp' 'not' a) 'imp' 'not' a).x = (I_el Y).x
  proof
    let x be Element of Y;
    A2: now per cases by MARGREL1:39;
      case a.x=TRUE;
      hence ('not' a.x 'or' a.x)=TRUE by BINARITH:19;
      end;
      case a.x=FALSE;
      then 'not' a.x 'or' a.x
       =TRUE 'or' FALSE by MARGREL1:41
      .=TRUE by BINARITH:19;
      hence ('not' a.x 'or' a.x)=TRUE;
    end;
    end;
       ((a 'imp' 'not' a) 'imp' 'not' a).x
    ='not' (a 'imp' 'not' a).x 'or' ('not' a).x by BVFUNC_1:def 11
   .='not' ('not' a.x 'or' ('not' a).x) 'or' ('not' a).x
   by BVFUNC_1:def 11
   .=('not' 'not' a.x '&' 'not' ('not' a).x) 'or' ('not' a).x
    by BINARITH:10
   .=(a.x '&' 'not' ('not' a).x) 'or' ('not' a).x
   .=(a.x '&' 'not' 'not' a.x) 'or' ('not' a).x
    by VALUAT_1:def 5
   .=(a.x '&' a.x) 'or' ('not' a).x
   .=a.x 'or' ('not' a).x
    by BINARITH:16
   .=TRUE
    by A2,VALUAT_1:def 5;
    hence thesis by BVFUNC_1:def 14;
  end;
  consider k3 being Function such that
    A3:((a 'imp' 'not' a) 'imp' 'not' a)
      =k3 & dom k3=Y & rng k3 c= BOOLEAN
                     by FUNCT_2:def 2;
  consider k4 being Function such that
    A4: I_el(Y)=k4 & dom k4=Y & rng k4 c= BOOLEAN
                     by FUNCT_2:def 2;
     for u being set st u in Y holds k3.u=k4.u by A1,A3,A4;
  hence thesis by A3,A4,FUNCT_1:9;
end;

theorem  for a,b being Element of Funcs(Y,BOOLEAN) holds
'not' a 'imp' (a 'imp' b)=I_el(Y)
proof
  let a,b be Element of Funcs(Y,BOOLEAN);
  A1:for x being Element of Y holds
   ('not' a 'imp' (a 'imp' b)).x = (I_el Y).x
  proof
    let x be Element of Y;
    A2: now per cases by MARGREL1:39;
      case a.x=TRUE;
      hence ('not' a.x 'or' a.x)=TRUE by BINARITH:19;
      end;
      case a.x=FALSE;
      then 'not' a.x 'or' a.x
       =TRUE 'or' FALSE by MARGREL1:41
      .=TRUE by BINARITH:19;
      hence ('not' a.x 'or' a.x)=TRUE;
    end;
    end;
       ('not' a 'imp' (a 'imp' b)).x
    ='not' ('not' a).x 'or' (a 'imp' b).x by BVFUNC_1:def 11
   .='not' ('not' a).x 'or' ('not' a.x 'or' b.x) by BVFUNC_1:def 11
   .='not' 'not' a.x 'or' ('not' a.x 'or' b.x)
    by VALUAT_1:def 5
   .=a.x 'or' ('not' a.x 'or' b.x)
   .=TRUE 'or' b.x
    by A2,BINARITH:20
   .=TRUE by BINARITH:19;
    hence thesis by BVFUNC_1:def 14;
  end;
  consider k3 being Function such that
    A3:('not' a 'imp' (a 'imp' b))
      =k3 & dom k3=Y & rng k3 c= BOOLEAN
                     by FUNCT_2:def 2;
  consider k4 being Function such that
    A4: I_el(Y)=k4 & dom k4=Y & rng k4 c= BOOLEAN
                     by FUNCT_2:def 2;
     for u being set st u in Y holds k3.u=k4.u by A1,A3,A4;
  hence thesis by A3,A4,FUNCT_1:9;
end;

theorem   ::De'Morgan
   for a,b,c being Element of Funcs(Y,BOOLEAN) holds
  'not' (a '&' b '&' c)=('not' a) 'or' ('not' b) 'or' ('not' c)
proof
  let a,b,c be Element of Funcs(Y,BOOLEAN);
     'not' (a '&' b '&' c)
  ='not' (a '&' b) 'or' ('not' c) by BVFUNC_1:17
 .=('not' a) 'or' ('not' b) 'or' ('not' c) by BVFUNC_1:17;
  hence thesis;
end;

theorem   ::De'Morgan
   for a,b,c being Element of Funcs(Y,BOOLEAN) holds
  'not' (a 'or' b 'or' c)=('not' a) '&' ('not' b) '&' ('not' c)
proof
  let a,b,c be Element of Funcs(Y,BOOLEAN);
     'not' (a 'or' b 'or' c)
  ='not' (a 'or' b) '&' ('not' c) by BVFUNC_1:16
 .=('not' a) '&' ('not' b) '&' ('not' c) by BVFUNC_1:16;
  hence thesis;
end;

theorem   ::Distributive
   for a,b,c,d being Element of Funcs(Y,BOOLEAN) holds
 a 'or' (b '&' c '&' d) = (a 'or' b) '&' (a 'or' c) '&' (a 'or' d)
proof
  let a,b,c,d be Element of Funcs(Y,BOOLEAN);
     a 'or' (b '&' c '&' d)
  =(a 'or' (b '&' c)) '&' (a 'or' d) by BVFUNC_1:14
 .=((a 'or' b) '&' (a 'or' c)) '&' (a 'or' d) by BVFUNC_1:14;
  hence thesis;
end;

theorem   ::Distributive
   for a,b,c,d being Element of Funcs(Y,BOOLEAN) holds
 a '&' (b 'or' c 'or' d) = (a '&' b) 'or' (a '&' c) 'or' (a '&' d)
proof
  let a,b,c,d be Element of Funcs(Y,BOOLEAN);
     a '&' (b 'or' c 'or' d)
  =(a '&' (b 'or' c)) 'or' (a '&' d) by BVFUNC_1:15
 .=(a '&' b) 'or' (a '&' c) 'or' (a '&' d) by BVFUNC_1:15;
  hence thesis;
end;

