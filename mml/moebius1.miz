:: On the Properties of the {M}\"obius Function
::  by Magdalena Jastrz\c{e}bska and Adam Grabowski
:: 
:: Received March 21, 2006
:: Copyright (c) 2006 Association of Mizar Users

environ

 vocabularies GROUP_1, ARYTM_3, ORDINAL2, ARYTM, POLYNOM1, FILTER_0, FUNCT_1,
      FINSEQ_1, ALGSEQ_1, CARD_3, FINSET_1, ARYTM_1, BOOLE, SEQM_3, PBOOLE,
      NAT_1, RELAT_1, NAT_LAT, FUNCOP_1, CARD_1, SEQ_1, REALSET1, SQUARE_1,
      UPROOTS, NAT_3, MOEBIUS1, PYTHTRIP, MATRIX_2, RLVECT_1, AMI_1, COMPLEX1,
      XREAL_0;
 notations TARSKI, XBOOLE_0, SUBSET_1, FINSET_1, REALSET1, ORDINAL1, ORDINAL2,
      CARD_1, NUMBERS, XCMPLX_0, XREAL_0, XXREAL_0, REAL_1, NAT_1, INT_2,
      NEWTON, SETFAM_1, MEMBERED, RELAT_1, FUNCT_1, FUNCT_2, FINSEQ_1, SEQ_1,
      SEQM_3, FUNCT_4, NAT_LAT, PBOOLE, SQUARE_1, SEQ_2, RELSET_1, POLYNOM1,
      POLYNOM2, RVSUM_1, WSIERP_1, BINOP_2, PRE_CIRC, ZFMISC_1, NAT_3, MCART_1,
      DOMAIN_1, FINSEQ_2, FINSEQ_4, ABIAN, PYTHTRIP, BINOP_1, UPROOTS;
 constructors POLYNOM2, WSIERP_1, FINSOP_1, EULER_2, NAT_LAT, REAL_1, BINARITH,
      FINSEQOP, SEQ_2, DOMAIN_1, PRE_CIRC, FACIRC_1, SETWISEO, BINOP_1,
      BINOP_2, CARD_2, POWER, PREPOWER, NAT_3, NAT_1, INT_2, PYTHTRIP,
      MEMBERED, ABIAN, SQUARE_1, PEPIN, SETFAM_1, FIB_NUM2, FUNCT_1, FUNCT_4,
      UPROOTS, XXREAL_0, SETWOP_2, XCMPLX_0;
 registrations XREAL_0, NAT_1, INT_1, POLYNOM1, RELSET_1, CARD_5, MEMBERED,
      BINARITH, PRE_CIRC, SEQ_1, RELAT_1, TEX_2, FINSET_1, CIRCCMB3, XCMPLX_0,
      FUNCT_1, NEWTON, BINOP_2, PREPOWER, NAT_3, ARYTM_3, NAT_LAT, ABIAN,
      FIB_NUM2, SEQ_2, FINSEQ_1, FUNCT_2, BAGORDER, RVSUM_1, XXREAL_0;
 requirements NUMERALS, SUBSET, ARITHM, REAL, BOOLE;
 definitions TARSKI, XBOOLE_0;
 theorems XBOOLE_0, NAT_3, BAGORDER, NEWTON, INT_2, NAT_2, WSIERP_1, SQUARE_1,
      CARD_1, PEPIN, NAT_1, XCMPLX_1, XREAL_1, PYTHTRIP, HEYTING3, ORDINAL2,
      EULER_1, XREAL_0, PRE_CIRC, FINSEQ_1, XBOOLE_1, TARSKI, ZFMISC_1,
      PSCOMP_1, RVSUM_1, FINSET_1, NUMBERS, INT_1, FUNCT_1, PBOOLE, SEQ_1,
      POLYNOM1, UPROOTS, CARD_4, FUNCOP_1, REAL_1, RADIX_1, SEQM_3, CQC_THE1,
      CIRCCMB3, RELAT_1;
 schemes FUNCT_2, FUNCT_1, PRE_CIRC, SUBSET_1, NAT_1;

begin :: Preliminaries
  
ThPomocnik:
  for X, Y, Z, x being set st X misses Y holds
    x in X /\ Z implies not x in Y /\ Z
  proof
    let X,Y,Z,x be set;
    assume that
A1: X misses Y and
A2: x in X /\ Z;
    X /\ Z misses Y /\ Z by A1,XBOOLE_1:76;
    hence thesis by A2,XBOOLE_0:3;
  end;
  
scheme LambdaNATC{A() -> Element of NAT, B() -> set, F(set)->set}:
  ex f being Function of NAT, B() st
    f.0 = A() &
    for x being non zero Nat holds f.x = F(x)
  provided
AB: A() in B() and
AA: for x being non zero Nat holds F(x) in B()
  proof
    defpred C[set] means $1 = 0;
    deffunc G(set) = A();
A5: for x being set st x in NAT holds
      (C[x] implies G(x) in B()) & (not C[x] implies F(x) in B()) by AB,AA;
    ex f being Function of NAT,B() st
    for x being set st x in NAT holds
    (C[x] implies f.x = G(x)) & (not C[x] implies f.x = F(x))
      from FUNCT_2:sch 5(A5); then
    consider f being Function of NAT,B() such that
B1: for x being set st x in NAT holds
    (C[x] implies f.x = G(x)) & (not C[x] implies f.x = F(x));
    take f;
    thus f.0 = A() by B1;
    let x be non zero Nat;
    thus thesis by B1;
  end;

registration
  cluster non prime non zero Nat;
  existence by INT_2:46;
end;

theorem hmm:
  for n being non zero natural number holds
    n <> 1 implies n >= 2
  proof
    let n be non zero natural number;
    assume A0: n <> 1; 
    assume n < 2; then
    n < 1 + 1; then
    n <= 0 + 1 by NAT_1:38;
    hence contradiction by A0,NAT_1:26;
  end;  
  
theorem
  for k, n, i being natural number st 1 <= k holds
    i in Seg n iff k * i in Seg (k * n)
  proof
    let k, n, i be natural number;
    assume
B0: 1 <= k;
    hereby assume i in Seg n; then
A1:   1 <= i & i <= n by FINSEQ_1:3; then
A2:   1 * 1 <= k * i by B0,XREAL_1:68;
      k * i <= k * n by A1,NAT_1:20; 
      hence k * i in Seg (k * n) by FINSEQ_1:3,A2;
    end;
    assume
u2: k * i in Seg (k * n); then
    1 <= k * i & k * i <= k * n by FINSEQ_1:3; then
U1: i <= n by XREAL_1:70,B0; 
    i <> 0 by u2,FINSEQ_1:3;
    then 0 < i; then
    0 + 1 <= i by NAT_1:38;
    hence thesis by U1,FINSEQ_1:3;
  end;

theorem
  for m, n being Nat st m, n are_relative_prime holds
    m > 0 or n > 0
  proof
    let a, b be Nat;
    assume a,b are_relative_prime; then
    a is odd or b is odd by PYTHTRIP:10;    
    hence thesis by HEYTING3:1;
  end;

ThPrime:
  for n being natural number st n <> 1
    ex p being Prime st p divides n
  proof
    let n be natural number;
    assume
a1: n <> 1;
    per cases;
    suppose n is zero; then
      2 divides n by NAT_1:53;
      hence thesis by INT_2:44;
    end;
    suppose n is non zero; then
AA:   n >= 2 by a1,hmm;
      n is Nat by ORDINAL2:def 21; then
      consider p being Nat such that
A1:   p is prime & p divides n by AA,INT_2:48;
      thus thesis by A1;
    end;
  end;

theorem Dziwne:
  for n being non prime Nat st n <> 1
    ex p being Prime st p divides n & p <> n
  proof
    let n be non prime Nat;
    assume n <> 1; then
    consider p being Prime such that
G1: p divides n by ThPrime;
    thus thesis by G1;
  end;
  
theorem Dziwne2:
  for n being natural number st n <> 1
    ex p being Prime st p divides n
  proof
    let n be natural number;
    assume
A0: n <> 1;
    per cases;
    suppose n is Prime;
      hence thesis;
    end;
    suppose not n is Prime; then
      ex p being Prime st p divides n & p <> n by Dziwne,A0,ORDINAL2:def 21;
      hence thesis;
    end;
  end;

theorem ThPPL:
  for p being Prime, n being non zero natural number holds
    p divides n iff p |-count n > 0
  proof
    let p be Prime, n be non zero natural number;
A0: p <> 1 by INT_2:def 5;
    thus p divides n implies p |-count n > 0
    proof
      assume
bb0:  p divides n; then
b0:   p |^ 1 divides n by NEWTON:10;     
      per cases;
      suppose p|^2 divides n;
        p |-count n >= 1
        proof
          assume p |-count n < 1; then
          p |-count n = 0 by CQC_THE1:2; then
          not p |^(0+1) divides n by A0,NAT_3:def 7;
          hence contradiction by bb0,NEWTON:10;
        end;  
        hence thesis;
      end;
      suppose not p|^2 divides n; then
        not p|^(1+1) divides n;
        hence thesis by NAT_3:def 7,A0,b0;
      end; 
    end;  
    assume p |-count n > 0; then
    reconsider d = p |-count n as non zero natural number;
    p <> 1 & d <> 0 by INT_2:def 5; then
    p |^ d divides n by NAT_3:def 7; then
    p |^ (0+1) divides n by NAT_3:4;
    hence thesis by NEWTON:10;
  end;

theorem Th0:
  support ppf 1 = {}
  proof
    support pfexp 1 = {};
    hence thesis by NAT_3:def 9;
  end;

theorem Th1a:
  for p being Prime holds
    support ppf p = {p}
  proof
    let p be Prime;
    support pfexp p = {p} by NAT_3:43;
    hence thesis by NAT_3:def 9;
  end;

 reserve m, n for natural number;

theorem Jot1:
  for p being Prime st
    n <> 0 & m <= p |-count n holds p |^ m divides n
  proof
    let p be Prime;
A0: p > 1 by INT_2:def 5;
    assume
A1: n <> 0 & m <= p |-count n;
B2: p |^ (p |-count n) divides n by A0,A1,NAT_3:def 7;
B1: m is Nat by ORDINAL2:def 21;
    p |^ m divides p |^ (p |-count n) by B1,A1,RADIX_1:7;
    hence thesis by B2,NAT_1:51;
  end;

registration
  cluster odd -> non zero Nat;
  coherence
  proof
    let n be Nat;
    assume n is odd; then
    n >= 1 + 0 by HEYTING3:1;
    hence thesis;
  end;
end;

theorem hmm2:
  for a being Nat, p being Prime holds
    p |^ 2 divides a implies p divides a
  proof
    let a be Nat;
    let p be Prime;
    assume p |^ 2 divides a; then 
    consider t being Nat such that
W1: a = (p |^ 2) * t by NAT_1:def 3;
    a = (p * p) * t by WSIERP_1:2,W1
     .= p * (p * t);
    hence thesis by NAT_1:def 3;
  end;

theorem ThDivSq:
  for p being prime Nat,
      m, n being non zero Nat st
    m, n are_relative_prime & p |^ 2 divides (m * n) holds
     p |^ 2 divides m or p |^ 2 divides n
  proof
    let p be prime Nat,
        a, b be non zero Nat;
    assume
A1: a, b are_relative_prime & p |^ 2 divides (a * b);
    p divides p |^ 2 by NAT_3:3; then
H1: p divides a * b by A1,NAT_1:51;
    per cases by H1,NEWTON:98;
    suppose
J1:   p divides a;
J2:   not p divides b by J1,PYTHTRIP:def 2,A1;
J3:   p,b are_relative_prime
      proof
        assume not p, b are_relative_prime; then
        p hcf b <> 1 by INT_2:def 6; then
        consider k being Nat such that
j03:    p hcf b = k & k <> 1;
        k divides p & k divides b by NAT_1:def 5,j03;
        hence contradiction by j03,J2,INT_2:def 5;
      end;
      p * p,b are_relative_prime by J3,EULER_1:15; then
      p |^ 2,b are_relative_prime by WSIERP_1:2;
      hence thesis by EULER_1:14,A1;
    end;
    suppose K1: p divides b;
K2:   not p divides a by K1,PYTHTRIP:def 2,A1;
K3:   p, a are_relative_prime
      proof
        assume not p, a are_relative_prime; then
        p hcf a <> 1 by INT_2:def 6; then
        consider k being Nat such that
k03:    p hcf a = k & k <> 1;
        k divides p & k divides a by NAT_1:def 5,k03;
        hence contradiction by k03,K2,INT_2:def 5;
      end;
      p * p, a are_relative_prime by K3,EULER_1:15; then
      p |^2, a are_relative_prime by WSIERP_1:2; 
      hence thesis by EULER_1:14,A1;
    end;
  end;
  
theorem lemacik:
  for N being Rbag of NAT st support N = {n} holds
    Sum N = N.n
  proof
    let N be Rbag of NAT;
    assume
A0: support N = {n}; then
    {n} c= dom N by POLYNOM1:41; then
A2: n in dom N by ZFMISC_1:37;
    reconsider F = <*N.n*> as FinSequence of REAL;
A1: Sum F = N.n by RVSUM_1:103;
    F = N * <*n*> by BAGORDER:3,A2
     .= N * canFS(support N) by A0,UPROOTS:6;
    hence thesis by UPROOTS:def 3,A1;
  end;

registration
  cluster canFS {} -> empty;
  coherence
  proof
    len canFS {} = card {} by UPROOTS:def 1 .= {};
    hence thesis by FINSEQ_1:25;
  end;
end;

theorem
  for p being Prime st p divides n holds
    { d where d is Nat : d > 0 & d divides n & p divides d } =
      { p * d where d is Nat : d > 0 & d divides (n div p) }
  proof
    let p be Prime;
    assume
AA: p divides n;
    set A = { d where d is Nat : d > 0 & d divides n & p divides d };
    set B = { p * d where d is Nat : d > 0 & d divides (n div p) };
    thus A c= B
    proof
      let x be set;
      assume x in A; then
      consider d being Nat such that
A1:   d = x & d > 0 & d divides n & p divides d;
      consider d1 being Nat such that
A3:   d = p * d1 by A1,NAT_1:def 3;
      consider d2 being Nat such that
A5:   n = d * d2 by A1,NAT_1:def 3;     
      n = p * (d1 * d2) by A3,A5; then 
      p divides n by NAT_1:def 3; then
      p * (n div p) = p * (d1 * d2) by NAT_1:49,A3,A5; then
B2:   n div p = d1 * d2 by XCMPLX_1:5;
      d1 <> 0 by A3,A1; then
A4:   d1 > 0;
      d1 divides (n div p) by B2,NAT_1:def 3; 
      hence thesis by A1,A4,A3;
    end;
    let x be set;
    assume x in B; then
    consider d being Nat such that
A1: p * d = x & d > 0 & d divides (n div p);
    reconsider d1 = x as Nat by A1;
    d1 <> 0 by A1,XCMPLX_1:6; then
T1: d1 > 0;
    consider d2 being Nat such that
Y1: n div p = d * d2 by A1,NAT_1:def 3;
    (n div p) * p = d * d2 * p by Y1; then  
    n = d2 * (d * p) by AA,NAT_1:49; then
T2: d1 divides n by A1,NAT_1:def 3;
    p divides d1 by A1,NAT_1:def 3; 
    hence thesis by T1,T2;
  end;

theorem 4H3:
  for n being non zero natural number holds
    ex k being Nat st support ppf n c= Seg k
  proof
     let n be non zero natural number;
A49: support ppf n = support pfexp n by NAT_3:def 9;
     per cases;
     suppose support ppf n is empty;
       hence thesis by FINSEQ_1:4;
     end;
     suppose support ppf n is non empty;
       then reconsider S = support ppf n as finite non empty Subset of NAT
         by XBOOLE_1:1;
T1:    support ppf n c= Seg max S
       proof let x be set; assume
A50:     x in support ppf n; then
A51:     x is Prime by A49,NAT_3:34;
         reconsider m = x as natural number by A49,A50,NAT_3:34;
A52:     1 <= m by A51,INT_2:def 5;
         m <= max S by A50,PRE_CIRC:def 1;
         hence thesis by A52,FINSEQ_1:3;
       end;
       take max S;
       max S is Nat by ORDINAL2:def 21;
       hence thesis by T1;
     end;
  end;

theorem Pog1:
  for n being non zero Nat, p being Prime st
    not p in support ppf n holds
      p |-count n = 0
  proof
    let n be non zero Nat, p be Prime;
    assume
A1: not p in support ppf n;
    assume p |-count n <> 0; then
    (ppf n).p = p |^ (p |-count n) by NAT_3:56; 
    hence thesis by A1,POLYNOM1:def 7;
  end;  

theorem 4H2:
  for k being Nat, n being non zero Nat st
    support ppf n c= Seg (k+1) & not support ppf n c= Seg k holds
      k+1 is Prime
  proof
    let k be Nat, n be non zero Nat;
    assume
A1: support ppf n c= Seg (k+1) & not support ppf n c= Seg k;
    k+1 in support ppf n
    proof
      assume not k+1 in support ppf n; then
A2:   {k+1} misses support ppf n by ZFMISC_1:56;
      support ppf n \ {k+1} c= Seg (k+1) \ {k+1} by A1,XBOOLE_1:33; then
      support ppf n c= Seg (k+1) \ {k+1} by A2,XBOOLE_1:83; 
      hence thesis by A1,FINSEQ_1:12;
    end; then
    k+1 in support pfexp n by NAT_3:def 9;
    hence thesis by NAT_3:34;
  end;

theorem 4H1:
  for m, n being non zero natural number st
    (for p being Prime holds p |-count m <= p |-count n) holds
      support ppf m c= support ppf n
  proof
    let m, n be non zero natural number;
    assume
A1: for p being Prime holds p |-count m <= p |-count n;
    let x be set;
    assume
A2: x in support ppf m; then
    x in support pfexp m by NAT_3:def 9; then
    reconsider p = x as Prime by NAT_3:34;
    (ppf m).p <> 0 by A2,POLYNOM1:def 7; then
    p |-count m <> 0 by NAT_3:55; then
    p |-count m > 0; then
    p |-count n > 0 by A1; then
    (ppf n).p = p |^ (p |-count n) by NAT_3:56;   
    hence thesis by POLYNOM1:def 7;
  end;
  
theorem KW1:
  for k being Nat,
      n being non zero Nat st support ppf n c= Seg (k+1) holds
    ex m being non zero Nat, e being Nat st
      support ppf m c= Seg k & n = m * ((k+1) |^ e) &
        (for p being Prime holds
        (p in support ppf m implies p |-count m = p |-count n) &
        (not p in support ppf m implies p |-count m <= p |-count n))
  proof
    let k be Nat, n be non zero Nat;
    assume
A9: support ppf n c= Seg (k+1);
    per cases;
    suppose
T0:   support ppf n c= Seg k;
      take m = n;
      take e = 0;
      (k+1) |^ e = 1 by NEWTON:9;
      hence thesis by T0;
    end;
    suppose
A11:  not support ppf n c= Seg k;
A12:  now assume
A13:    not k+1 in support ppf n;
        support ppf n c= Seg k
        proof let x be set;
          assume
A14:      x in support ppf n;then
a15:      x in support pfexp n by NAT_3:def 9;then
A15:      x is Prime by NAT_3:34;
          reconsider m = x as natural number by a15,NAT_3:34;
A16:      1 <= m by INT_2:def 5,A15;
          m <= k+1 by A9,A14,FINSEQ_1:3;
          then m < k+1 by A13,A14,REAL_1:def 5;
          then m <= k by NAT_1:38;
          hence x in Seg k by A16,FINSEQ_1:3;
        end;
        hence contradiction by A11;
      end;
      reconsider r = k+1 as non zero Nat;
      set e = r |-count n;
      set s = r |^ e;
      k+1 in support pfexp n by NAT_3:def 9,A12; then
A17:  r is Prime by NAT_3:34;
A19:  r > 1 by A17,INT_2:def 5;then
      s divides n by NAT_3:def 7;
      then consider t being Nat such that
A20:  n = s * t by NAT_1:def 3;
      reconsider s, t as non zero Nat by A20,XCMPLX_1:6;
A21:  support ppf t = support pfexp t by NAT_3:def 9;
B22:  support ppf t c= Seg k
      proof let x be set; assume
A23:    x in support ppf t;then
A24:    x in support pfexp t by NAT_3:def 9; then
A25:    x is Prime by NAT_3:34;
        reconsider m = x as natural number by A24,NAT_3:34;
A26:    1 <= m by A25,INT_2:def 5;
        support pfexp t c= support pfexp n by A20,NAT_3:45; then
        support ppf t c= support ppf n by A21,NAT_3:def 9;
        then m in support ppf n by A23; then
A27:    m <= k+1 by A9,FINSEQ_1:3;
        set f = r |-count t;
        now assume
A28:      m = r;
          (pfexp t).r = f by A17,NAT_3:def 8;
          then f <> 0 by A24,A28,POLYNOM1:def 7;
          then f > 0; then f >= 0+1 by NAT_1:38;
          then consider g being Nat such that
A29:      f = 1 + g by NAT_1:28;
          r |^ f divides t by A19,NAT_3:def 7;
          then consider u being Nat such that
A30:      t = (r |^ f)*u by NAT_1:def 3;
          n = s * (((r |^ g)*r)*u) by A20,A29,A30,NEWTON:11
           .= s*r * ((r |^ g)*u)
           .= (r |^ (e+1)) * ((r |^ g) * u) by NEWTON:11; then
          r |^ (e+1) divides n by NAT_1:def 3;
          hence contradiction by A19,NAT_3:def 7;
        end; then
        m < r by A27,REAL_1:def 5; then
        m <= k by NAT_1:38;
        hence x in Seg k by A26,FINSEQ_1:3;
      end;
A32:  e <> 0
      proof
        assume e = 0; then
        n = 1 * t by NEWTON:9,A20;
        hence thesis by A11,B22;
      end;
      support ppf s = support pfexp s by NAT_3:def 9;then
B2:   support ppf s = {r} by A17,A32,NAT_3:42;
A37:  now assume support ppf s meets support ppf t;
        then consider x being set such that
A35:    x in support ppf s and
A36:    x in support ppf t by XBOOLE_0:3;
        x = r by B2,A35,TARSKI:def 1;
        then r <= k by B22,A36,FINSEQ_1:3;
        hence contradiction by NAT_1:38;
      end;
      take m = t;
      take e = (k + 1) |-count n;
      for p being Prime holds
      (p in support ppf m implies p |-count m = p |-count n) &
      (not p in support ppf m implies p |-count m <= p |-count n)
      proof
        let p be Prime;
        hereby assume
kk:       p in support ppf m;
t1:       not p in support ppf s by kk,XBOOLE_0:3,A37;
Z1:       p |-count n = p |-count (r |^ e) + p |-count t by NAT_3:28,A20;
          p |-count s = 0 by t1,Pog1;
          hence p |-count m = p |-count n by Z1;
        end;
        assume not p in support ppf m;
        hence p |-count m <= p |-count n by Pog1;
      end;
      hence thesis by B22,A20;
    end;
  end;

theorem Gut1:
  for m, n being non zero natural number st
    (for p being Prime holds p |-count m <= p |-count n) holds
       m divides n
  proof
    let m, n be non zero natural number;
    assume
A1: for p being Prime holds p |-count m <= p |-count n;
    defpred P[Nat] means
      for k, l being non zero Nat st
        support ppf k c= Seg $1 & support ppf l c= Seg $1 &
        (for p being Prime holds p |-count k <= p |-count l) holds
          k divides l;
D1: P[0]
    proof
      let k, l be non zero Nat;
      assume
A1:   support ppf k c= Seg 0 & support ppf l c= Seg 0 &
      (for p being Prime holds p |-count k <= p |-count l);    
      support ppf k = {} by XBOOLE_1:3, A1,FINSEQ_1:4; then
A2:   support pfexp k = {} by NAT_3:def 9;
      per cases;
      suppose k <> 1; then
        consider p being Prime such that
Z1:     p divides k by ThPrime;      
        thus thesis by A2,Z1,NAT_3:37;
      end;
      suppose k = 1;
        hence thesis by NAT_1:53;
      end;
    end;
D2: for k being Nat st P[k] holds P[k+1]
    proof
      let k be Nat;
      assume
B0:   P[k];
      let m, n be non zero Nat;
      assume that
A9:   support ppf m c= Seg (k + 1) & support ppf n c= Seg (k + 1) and
L1:   (for p being Prime holds p |-count m <= p |-count n);
      per cases;
      suppose
A11:    not support ppf n c= Seg k & support ppf m c= Seg k;
A12:    now assume
A13:      not k+1 in support ppf n;
          support ppf n c= Seg k
          proof let x be set; assume
A14:        x in support ppf n;then
a15:        x in support pfexp n by NAT_3:def 9; then
A15:        x is Prime by NAT_3:34; 
            reconsider m = x as natural number by a15,NAT_3:34;
A16:        1 <= m by A15,INT_2:def 5;
            m <= k+1 by A9,A14,FINSEQ_1:3;
            then m < k+1 by A13,A14,REAL_1:def 5;
            then m <= k by NAT_1:38;
            hence x in Seg k by A16,FINSEQ_1:3;
          end;
          hence contradiction by A11;
        end;
        reconsider r = k+1 as non zero Nat;
        set e = r |-count n;
        set s = r |^ e;
GI:     k+1 in support pfexp n by NAT_3:def 9,A12; then 
A17:    r is Prime by NAT_3:34;
A19:    r > 1 by A17,INT_2:def 5;then
        s divides n by NAT_3:def 7;
        then consider t being Nat such that
A20:    n = s * t by NAT_1:def 3;
XX:     t divides n by A20,NAT_1:def 3;
        reconsider s, t as non zero Nat by A20,XCMPLX_1:6;
A21:    support ppf t = support pfexp t by NAT_3:def 9;
B22:    support ppf t c= Seg k
        proof let x be set; assume
A23:      x in support ppf t;then
A24:      x in support pfexp t by NAT_3:def 9; then
A25:      x is Prime by NAT_3:34;
          reconsider m = x as natural number by A24,NAT_3:34;
A26:      1 <= m by A25,INT_2:def 5;
          support pfexp t c= support pfexp n by A20,NAT_3:45; then
          support ppf t c= support ppf n by A21,NAT_3:def 9;
          then m in support ppf n by A23; then
A27:      m <= k+1 by A9,FINSEQ_1:3;
          set f = r |-count t;
          now assume
A28:        m = r;
            (pfexp t).r = f by A17,NAT_3:def 8;
            then f <> 0 by A24,A28,POLYNOM1:def 7;
            then f > 0; then f >= 0+1 by NAT_1:38;
            then consider g being Nat such that
A29:        f = 1 + g by NAT_1:28;
            r |^ f divides t by A19,NAT_3:def 7;
            then consider u being Nat such that
A30:        t = (r |^ f)*u by NAT_1:def 3;
A31:        n = s * (((r |^ g)*r)*u) by A20,A29,A30,NEWTON:11
             .= s*r * ((r |^ g)*u)
             .= (r |^ (e+1)) * ((r |^ g) * u) by NEWTON:11;
            r |^ (e+1) divides n by A31,NAT_1:def 3;
            hence contradiction by A19,NAT_3:def 7;
          end; then
          m < r by A27,REAL_1:def 5; then
          m <= k by NAT_1:38;
          hence x in Seg k by A26,FINSEQ_1:3;
        end;
A32:    e <> 0
        proof
          assume e = 0; then       
          not r divides n by A19,NAT_3:27;           
          hence thesis by NAT_3:36,GI;
        end;      
Q1:     support ppf s = support pfexp s by NAT_3:def 9;then
B2:     support ppf s = {r} by A17,A32,NAT_3:42; 
A37:    now assume (support ppf s) meets (support ppf t);
          then consider x being set such that
A35:      x in support ppf s and
A36:      x in support ppf t by XBOOLE_0:3;
          x = r by B2,A35,TARSKI:def 1;
          then r <= k by B22,A36,FINSEQ_1:3;
          hence contradiction by NAT_1:38;
        end;
        support ppf n = support pfexp n &
        support ppf t = support pfexp t by NAT_3:def 9; then
I1:     support ppf n = support ppf s \/ support ppf t by Q1,A20,NAT_3:46;
F1:     for p being Prime holds p |-count m <= p |-count t
        proof
          let p be Prime;
Z1:       p |-count n = p |-count (r |^ e) + p |-count t by A20,NAT_3:28;
          per cases;
          suppose
Y1:       p in support ppf n;
          per cases by Y1,I1,XBOOLE_0:def 2;
          suppose p in support ppf s; then
YY:         p = k+1 by B2,TARSKI:def 1;
            per cases;
            suppose p in support ppf m; then            
              p <= k by FINSEQ_1:3,A11;
              hence thesis by YY,NAT_1:38;
            end;
            suppose not p in support ppf m;
              hence thesis by Pog1;
            end;
          end;
          suppose p in support ppf t; then
            not p in support ppf s by A37,XBOOLE_0:3; then
            p |-count s = 0 by Pog1;
            hence thesis by L1,Z1;
          end;
          end;
          suppose not p in support ppf n; then
            p |-count n = 0 by Pog1;           
            hence thesis by L1;
          end;
        end;
F2:     support ppf m c= Seg k & support ppf t c= Seg k &
        (for p being Prime holds p |-count m <= p |-count t) implies
          m divides t by B0;
        support ppf m c= support ppf t by F1,4H1;
        hence thesis by XX,NAT_1:51,F1,F2,XBOOLE_1:1,B22;
      end;
      suppose
FQ:     not support ppf n c= Seg k & not support ppf m c= Seg k;
        consider m1 being non zero Nat, e1 being Nat such that
W1:     support ppf m1 c= Seg k & m = m1 * ((k+1) |^ e1) &
        (for p being Prime holds
        (p in support ppf m1 implies p |-count m1 = p |-count m) &
        (not p in support ppf m1 implies p |-count m1 <= p |-count m))
          by KW1,A9;
        consider m2 being non zero Nat, e2 being Nat such that
W2:     support ppf m2 c= Seg k & n = m2 * ((k+1) |^ e2) &
        (for p being Prime holds
        (p in support ppf m2 implies p |-count m2 = p |-count n) &
        (not p in support ppf m2 implies p |-count m2 <= p |-count n))
          by KW1,A9;
PP:     k+1 is Prime by 4H2,A9,FQ;
        for p being Prime holds p |-count m1 <= p |-count m2
        proof
          let p be Prime;
          per cases;
          suppose
G1:         p in support ppf m1 & p in support ppf m2; then
G2:         p |-count m1 = p |-count m by W1;
            p |-count m2 = p |-count n by W2,G1;
            hence thesis by G2,L1;
          end;
          suppose not p in support ppf m1 & p in support ppf m2;
            hence thesis by Pog1;
          end;
          suppose
F1:         p in support ppf m1 & not p in support ppf m2; then
            p in support pfexp m1 by NAT_3:def 9; then
F2:         p divides m1 by NAT_3:36;
KK:         p > 1 by INT_2:def 5; then
            p |-count m1 <> 0 by F2,NAT_3:27; then
F3:         p |-count m1 > 0;
            m1 divides m by NAT_1:def 3,W1; then
            p |-count m1 <= p |-count m by NAT_3:30; then
K0:         p |-count n > 0 by L1,F3;
            p |-count m2 = 0 by F1,Pog1; then
K1:         not p divides m2 by KK,NAT_3:27;
            p divides n by K0,KK,NAT_3:27; then
            p divides (k+1) |^ e2 by K1,W2,NEWTON:98; then
LK:         p divides (k+1) by NAT_3:5;
LL:         p = k+1 by INT_2:def 5,LK,KK,PP;
            k < k + 1 by NAT_1:38;
            hence thesis by LL,FINSEQ_1:3,W1,F1;
          end;
          suppose not p in support ppf m1 & not p in support ppf m2;          
            hence thesis by Pog1;
          end;
        end; then
W3:     m1 divides m2 by W1,W2,B0;
        reconsider w = k+1 as Prime by 4H2,A9,FQ; 
W4:     w > 1 by INT_2:def 5; then
w1:     w |-count (w |^ e1) = e1 by NAT_3:25;
w2:     w |-count (w |^ e2) = e2 by W4,NAT_3:25;
w3:     not w divides m1
        proof
          assume w divides m1; then
          w in support pfexp m1 by NAT_3:37; then
          w in support ppf m1 by NAT_3:def 9; then
          w <= k by FINSEQ_1:3,W1;
          hence thesis by NAT_1:38;
        end;
WW1:    w |-count m = (w |-count m1) + e1 by w1,W1,NAT_3:28
          .= 0 + e1 by w3,NAT_3:27,W4
          .= e1;
w4:     not w divides m2
        proof
          assume w divides m2; then
          w in support pfexp m2 by NAT_3:37; then
          w in support ppf m2 by NAT_3:def 9; then         
          w <= k by FINSEQ_1:3,W2;
          hence thesis by NAT_1:38;
        end;
WW:     w |-count n = (w |-count m2) + e2 by w2,W2,NAT_3:28
          .= 0 + e2 by w4,NAT_3:27,W4
          .= e2;
        w |-count m <= w |-count n by L1; then       
        ((k+1) |^ e1) divides ((k+1) |^ e2) by RADIX_1:7,WW,WW1;
        hence thesis by W3,W1,W2,NAT_3:1;
      end;
      suppose
X1:     support ppf n c= Seg k;
        support ppf m c= support ppf n by 4H1,L1; then
        support ppf m c= Seg k by X1,XBOOLE_1:1;       
        hence thesis by B0,X1,L1;
      end;
    end;
D3: for k being Nat holds P[k] from NAT_1:sch 1(D1,D2);
    consider k being Nat such that
C1: support ppf n c= Seg k by 4H3;
ZZ: m is Nat & n is Nat by ORDINAL2:def 21;
    support ppf m c= support ppf n by A1,4H1; then
    support ppf m c= Seg k by C1,XBOOLE_1:1;
    hence thesis by A1,C1,D3,ZZ;
  end;

begin :: Squarefree Numbers

definition let x be natural number;
  attr x is square-containing means :Def1:
    ex p being Prime st p |^ 2 divides x;
end;

theorem ThSqCon:
  for n being natural number st
    ex p being non zero natural number st p <> 1 & p |^ 2 divides n holds
      n is square-containing
    proof
      let n be natural number;
      given p being non zero natural number such that
A1:   p <> 1 and
A2:   p |^ 2 divides n;
      consider r being Prime such that
A3:   r divides p by A1,ThPrime;
      p is Nat by ORDINAL2:def 21; then
      r |^ 2 divides p |^ 2 by A3,WSIERP_1:19; then
      r |^ 2 divides n by A2,NAT_1:51;
      hence n is square-containing by Def1;
    end;

notation let x be natural number;
  antonym x is square-free for x is square-containing;
end;

theorem Jot2:
  0 is square-containing
  proof
    consider p being Prime;
    p |^ 2 divides 0 by NAT_1:53;
    hence thesis by Def1;
  end;

theorem Th1:
  1 is square-free
  proof
    assume 1 is square-containing; then   
    consider n being Prime such that AA: n |^ 2 divides 1 by Def1;
    n * n divides 1 by WSIERP_1:2,AA; then
    n * n = 1 by WSIERP_1:20; then
    n = 1 or n = -1 by XCMPLX_1:183;
    hence contradiction by INT_2:def 5;
  end;  

theorem Th2:
  for p being Prime holds p is square-free
  proof
    let p be Prime;
    assume p is square-containing; then
    consider n being Prime such that
bb: n |^ 2 divides p by Def1;
G1: n divides n |^ 2 by NAT_3:3; then
h1: n divides p by bb,NAT_1:51;
    per cases by INT_2:def 5,h1;
    suppose n = 1;
      hence contradiction by INT_2:def 5;
    end;
    suppose n = p; then
      n = n |^ 2 by G1,NAT_1:52,bb; then
      n |^ 1 = n |^ 2 by NEWTON:10; then
      n <= 1 by PEPIN:31;
      hence contradiction by INT_2:def 5;
    end;
  end;

registration
  cluster prime -> square-free Element of NAT;
  coherence by Th2;
end;

definition
  func SCNAT -> Subset of NAT means :SCDef:
    for n being natural number holds
      n in it iff n is square-free;
  existence
  proof
    defpred P[natural number] means $1 is square-free;
    consider X being Subset of NAT such that
A1: for n being Nat holds n in X iff P[n] from SUBSET_1:sch 3;
    take X;
    let n be natural number;
A2: n is Nat by INT_1:16;
    thus n in X implies n is square-free by A1;
    assume n is square-free;
    hence thesis by A1,A2;
  end;
  uniqueness
  proof
    defpred P[natural number] means $1 is square-free;
    let X1, X2 be Subset of NAT;
    assume that
AA: for n being natural number holds
      n in X1 iff n is square-free and
AB: for n being natural number holds
      n in X2 iff n is square-free;
A1: for y being Element of NAT holds y in X1 iff P[y] by AA;
A2: for y being Element of NAT holds y in X2 iff P[y] by AB;
    for X1,X2 being Subset of NAT st
     (for y being Element of NAT holds y in X1 iff P[y]) &
     (for y being Element of NAT holds y in X2 iff P[y]) holds
     X1 = X2 from SUBSET_1:sch 2;
     hence thesis by A1,A2;
   end;
end;

registration
  cluster square-free (natural number);
  existence by Th1;
  cluster square-containing (natural number);
  existence
  proof
    take 4;
    2 |^ 2 = 2*2 by NEWTON:100 .= 4;
    hence thesis by INT_2:44,Def1;
  end;
end;

registration
  cluster square non trivial -> square-containing (natural number);
  coherence
  proof
    let n be natural number;
    assume
A0: n is square non trivial; then
    consider m being Nat such that
A1: n = m^2 by PYTHTRIP:def 3;
A2: m <> 1 by A0,A1,SQUARE_1:59,NAT_2:30;
A3: m <> 0 by A0,A1,SQUARE_1:60,NAT_2:30;
    n = m * m by A1,SQUARE_1:def 3; then  
    m |^ 2 divides n by WSIERP_1:2;    
    hence thesis by A2,A3,ThSqCon;
  end;
end;

theorem Zet0:
  n is square-free implies
    for p being Prime holds p |-count n <= 1
  proof
    assume
A0: n is square-free;
    given p being Prime such that
A1: p |-count n > 1;
    p |-count n >= 1+1 by A1,NAT_1:38; then
    p |^ 2 divides n by A0,Jot2,Jot1;
    hence thesis by A0,Def1;
  end;

theorem Jot3:
  m * n is square-free implies m is square-free
  proof
    assume A0: m * n is square-free; 
    assume m is square-containing; then
    consider p being Prime such that
A1: p |^ 2 divides m by Def1;
    p |^ 2 divides m * n by A1,NAT_1:56;
    hence thesis by A0,Def1;
  end;

theorem Jot4:
  m is square-free & n divides m implies n is square-free
  proof
    assume
A1: m is square-free & n divides m; then
    ex x being Nat st m = n * x by NAT_1:def 3;
    hence thesis by A1,Jot3;
  end;

theorem LemB:
  for p being Prime, m, d being natural number st
    m is square-free & p divides m & d divides (m div p) holds
      d divides m & not p divides d
  proof
    let p be Prime, m, d be natural number;
    assume
X0: m is square-free & p divides m;
    assume
X1: d divides (m div p);
    consider z being Nat such that
X2: m div p = d * z by X1,NAT_1:def 3;
t0: (m div p) * p = d * z * p by X2; then
    m = d * (z * p) by X0,NAT_1:49;
    hence d divides m by NAT_1:def 3;
    assume p divides d; then
    consider w being Nat such that
T3: d = p * w by NAT_1:def 3; 
    m = w * (p * p) * z by t0,X0,NAT_1:49,T3
     .= w * (p |^ 2) * z by WSIERP_1:2
     .= (p |^ 2) * (w * z); then
    p |^ 2 divides m by NAT_1:def 3;
    hence thesis by X0,Def1;
  end;

theorem LemA:
  for p being Prime, m, d being natural number st
    p divides m & d divides m & not p divides d holds
      d divides (m div p)
  proof
    let p be Prime, m,d be natural number;
    assume that
X0: p divides m and
X1: d divides m & not p divides d;
    consider z being Nat such that
X2: m = d * z by X1,NAT_1:def 3;
    d is Nat by ORDINAL2:def 21; then
    p divides z by X1,X0,X2,NEWTON:98; then
    consider u being Nat such that
X4: z = p * u by NAT_1:def 3;   
    m = d * u * p by X2,X4; then
    m div p = d * u by NAT_1:68;  
    hence thesis by NAT_1:def 3;
  end;

theorem 
  for p being Prime, m being natural number st
    m is square-free & p divides m holds
   { d where d is Nat : 0 < d & d divides m & not p divides d } =
     { d where d is Nat : 0 < d & d divides (m div p) }
  proof
    let p be Prime, m be natural number;
    assume
X0: m is square-free & p divides m;
    set A = { d where d is Nat : 0 < d & d divides m & not p divides d };
    set B = { d where d is Nat : 0 < d & d divides (m div p) };
    thus A c= B
    proof
      let x be set;
      assume x in A; then
      consider d being Nat such that
X1:   d = x & 0 < d & d divides m & not p divides d;
      d divides (m div p) by X0,LemA,X1; 
      hence thesis by X1;
    end;
    let x be set;
    assume x in B; then
    consider d being Nat such that
X1: d = x & 0 < d & d divides (m div p);
    d divides m & not p divides d by LemB,X0,X1; 
    hence thesis by X1;
  end;  

begin :: Moebius Function

definition let n be natural number;
  func Moebius n -> real number means :Def2:
    it = 0 if n is square-containing
    otherwise ex n' being non zero natural number st n' = n &
      it = (-1) |^ card support ppf n';
  consistency;
  existence
  proof
    thus n is square-containing implies
    ex r being real number st r=0;
    (n is square-free implies
    ex n' being non zero natural number st n' = n & ex r being real number
    st r = (-1) |^ card support ppf n')
    proof
      assume
B0:   n is square-free;
      n is non zero natural number
      proof
        assume
B1:     not n is non zero natural number;
        consider p being Prime;
        p|^2 divides n by B1,NAT_1:53;
        hence contradiction by B0,Def1;
      end; then
      reconsider n' = n as non zero natural number;
      ex r being real number st
      r = (-1) |^ card support ppf n';
      hence thesis;
    end;  
    hence thesis;
  end;
  uniqueness;
end;

theorem Th201:
  Moebius 1 = 1
  proof
    Moebius 1 = (-1) |^ card 0 by Th0,Def2,Th1
             .= 1 by NEWTON:9;
    hence thesis;
  end;

theorem
  Moebius 2 = -1
  proof
    2 is square-free by Th2,INT_2:44; then
    Moebius 2 = (-1) |^ card support ppf 2 by Def2
      .= (-1) |^ card {2} by Th1a,INT_2:44
      .= (-1) |^ 1 by CARD_1:79;
    hence thesis by NEWTON:10;
  end;

theorem
  Moebius 3 = -1
  proof
    3 is square-free by Th2,PEPIN:44; then
    Moebius 3 = (-1) |^ card support ppf 3 by Def2
      .= (-1) |^ card {3} by Th1a,PEPIN:44
      .= (-1) |^ 1 by CARD_1:79;
    hence thesis by NEWTON:10;
  end;  

theorem ThB:
  for n being natural number st n is square-free holds Moebius n <> 0
  proof
    let n be natural number;
    assume n is square-free; then
    consider n' being non zero natural number such that
A1: n' = n & Moebius n = (-1) |^ card support ppf n' by Def2;
    thus thesis by A1,CARD_4:51;
  end;

registration let n be square-free (natural number);
  cluster Moebius n -> non zero;
  coherence by ThB;
end;

theorem Th4:
  for p being Prime holds Moebius p = -1
  proof
    let p be Prime;
    Moebius p = (-1) |^ card support ppf p by Def2
             .= (-1) |^ card {p} by Th1a
             .= (-1) |^ 1 by CARD_1:79;
    hence thesis by NEWTON:10;
  end;

theorem Th5:
  for m, n being non zero Nat st
    m, n are_relative_prime holds
      Moebius (m * n) = Moebius m * Moebius n
  proof
    let a, b be non zero Nat;
    assume
A0: a, b are_relative_prime;
    per cases;
    suppose
A1:   a is square-free & b is square-free; then
xx:   Moebius a = (-1) |^ card support ppf a &
        Moebius b = (-1) |^ card support ppf b by Def2;
qs:   card support pfexp (a*b) =
        card support pfexp a + card support pfexp b by NAT_3:47,A0;
xz:   card support ppf (a*b) 
        = card support pfexp a + card support pfexp b by qs,NAT_3:def 9
       .= card support pfexp a + card support ppf b by NAT_3:def 9
       .= card support ppf a + card support ppf b by NAT_3:def 9;
R1:   a * b is square-free
      proof
        assume a * b is square-containing; then
        consider p being Prime such that
r1:     p |^ 2 divides (a * b) by Def1;
        p |^ 2 divides a or p |^ 2 divides b by A0,r1,ThDivSq;
        hence contradiction by A1,Def1;
      end;
      Moebius (a * b) = (-1) |^ (card support ppf a + card support ppf b)
        by xz,Def2,R1
        .= ((-1) |^ card support ppf a) * ((-1) |^card support ppf b)
          by NEWTON:13;
      hence thesis by xx;
    end;
    suppose B1: a is square-free & b is square-containing; then
B2:   Moebius a = (-1) |^ card support ppf a & Moebius b = 0 by Def2; 
      consider p being Prime such that
bb:   p |^ 2 divides b by Def1,B1;
      p |^ 2 divides a * b by NAT_1:56,bb; then
      a * b is square-containing by Def1; 
      hence thesis by B2,Def2;
    end;
    suppose C1: a is square-containing & b is square-free; then
C2:   Moebius b = (-1) |^ card support ppf b & Moebius a = 0 by Def2; 
      consider p being Prime such that
cc:   p |^2 divides a by Def1,C1;
      p |^ 2 divides a * b by NAT_1:56,cc; then
      a * b is square-containing by Def1; 
      hence thesis by C2,Def2;
    end;
    suppose
D1:   a is square-containing & b is square-containing; then
D2:   Moebius a = 0 & Moebius b = 0 by Def2;    
      consider p being Prime such that
dd:   p |^ 2 divides a by D1,Def1;
      p |^ 2 divides a * b by NAT_1:56,dd; then
      a * b is square-containing by Def1;
      hence thesis by D2,Def2;
    end;
  end;
  
theorem 
  for p being Prime, n being Nat st
    1 <= n & n * p is square-free holds
      Moebius (n * p) = - Moebius n
  proof
    let p be Prime, a be Nat;
    assume
A0: 1 <= a & a * p is square-free; then
A1: a <> 0;
    a, p are_relative_prime
    proof
      assume not a, p are_relative_prime; then
      consider q being prime Nat such that
B1:   q divides a & q divides p by PYTHTRIP:def 2;
      q = 1 or q = p by B1,INT_2:def 5; then        
      p * p divides a * p by PYTHTRIP:7,B1,INT_2:def 5; then
      p |^ 2 divides a * p by WSIERP_1:2;
      hence thesis by A0,Def1;
    end; then
    Moebius (a * p) = (Moebius a) * (Moebius p) by A1,Th5
                   .= (Moebius a) * (-1) by Th4;
    hence thesis;
  end;  

theorem
  for m, n being non zero Nat st not m, n are_relative_prime holds
    Moebius (m * n) = 0
  proof
    let m, n be non zero Nat;
    assume not m, n are_relative_prime; then
    consider p being prime Nat such that
A1: p divides m & p divides n by PYTHTRIP:def 2;
    p * p divides m * n by A1,NAT_3:1; then
    p |^ 2 divides m * n by WSIERP_1:2; then
    m * n is square-containing by Def1;
    hence thesis by Def2;
  end;

theorem Ble1:
  for n being natural number holds
    n in SCNAT iff Moebius n <> 0
  proof
    let n be natural number;
    hereby assume n in SCNAT; then
      n is square-free by SCDef;
      hence Moebius n <> 0 by ThB;
    end;
    assume Moebius n <> 0; then
    n is square-free by Def2;
    hence thesis by SCDef;
  end;

begin :: Natural Divisors

definition let n be natural number;
  func NatDivisors n -> Subset of NAT equals
    { k where k is Element of NAT : k <> 0 & k divides n };
  coherence
  proof
    { k where k is Element of NAT : k <> 0 & k divides n } c= NAT
    proof
      let x be set;
      assume x in { k where k is Element of NAT :
        k <> 0 & k divides n }; then
      ex k being Nat st k = x & k <> 0 & k divides n;
      hence x in NAT;
    end;
    hence thesis;
  end;
end;

theorem 
  for n, k being natural number holds
    k in NatDivisors n iff 0 < k & k divides n
  proof
    let n, k be natural number;
A0: k is Nat by ORDINAL2:def 21;
    hereby assume k in NatDivisors n;
      then consider l being Nat such that
A1:   l = k & l <> 0 & l divides n;
      thus 0 < k & k divides n by A1;
    end;
    assume 0 < k & k divides n; 
    hence thesis by A0;
  end;

theorem ThZaw:
  for n being non zero natural number holds
    NatDivisors n c= Seg n
  proof
    let n be non zero natural number;
    let x be set;
    assume x in NatDivisors n; then
    consider k being Nat such that
B1: x = k & k <> 0 & k divides n;
    1 <= k & k <= n by B1,NAT_1:39,54;
    hence x in Seg n by B1,FINSEQ_1:3;
  end;

registration let n be non zero natural number;
  cluster NatDivisors n -> finite with_non-empty_elements;
  coherence
  proof
    set P = NatDivisors n;
A1: not 0 in P
    proof
      assume 0 in P; then  
      consider k being Nat such that A0: k = 0 & k <> 0 & k divides n;         
      thus contradiction by A0;
    end; 
    P is finite
    proof
      P c= Seg n by ThZaw;
      hence thesis by FINSET_1:13;
    end;  
    hence thesis by A1,PSCOMP_1:def 1;
  end;  
end;

theorem Th101:
  NatDivisors 1 = {1}
  proof
    thus NatDivisors 1 c= {1}
    proof
      let x be set;
      assume x in NatDivisors 1; then
      consider k being Nat such that
B1:   x = k & k <> 0 & k divides 1;
      k = 1 by B1,WSIERP_1:20;
      hence x in {1} by B1, ZFMISC_1:37;
    end;
    let x be set;
    assume
B1: x in {1}; then
    reconsider m = x as Nat;
    m <> 0 & m divides 1 by B1,TARSKI:def 1;
    hence x in NatDivisors 1;
  end;

begin :: The Sum of the Moebius Function

definition let X be set;
  func SMoebius X -> ManySortedSet of NAT means :Def32:
    support it = X /\ SCNAT &
    for k being Nat st k in support it holds
      it.k = Moebius k;
    existence
    proof
      defpred P[set,set] means
      for k being Nat st $1 = k holds
      (k in X /\ NAT implies $2 = Moebius k) &
      (not k in X /\ NAT implies $2 = 0);
      deffunc F(Nat) = Moebius $1;
      deffunc G(Nat) = 0;
      defpred R[set] means $1 in X /\ SCNAT;
      ex f being ManySortedSet of NAT st
      for i being Element of NAT st i in NAT holds
        (R[i] implies f.i = F(i)) &
        (not R[i] implies f.i = G(i)) from PRE_CIRC:sch 2; then
      consider f being ManySortedSet of NAT such that
J1:   for i being Element of NAT st i in NAT holds
        (R[i] implies f.i = F(i)) &
        (not R[i] implies f.i = G(i));
A11: support f c= SCNAT
     proof
       let x be set;
       assume
C1:    x in support f; then
C2:    f.x <> 0 by POLYNOM1:def 7;
       dom f = NAT by PBOOLE:def 3; then
C3:    support f c= NAT by POLYNOM1:41;
       per cases;
       suppose R[x];
         hence thesis by XBOOLE_0:def 3;
       end;
       suppose not R[x];
         hence thesis by C2,J1,C3,C1;
       end;
     end;
A12: support f = X /\ SCNAT
     proof
       thus support f c= X /\ SCNAT
       proof let x be set;
       assume
A13:   x in support f; then
       x in SCNAT by A11;
       then reconsider i = x as Nat;
       assume not x in X /\ SCNAT;
       then f.i = 0 by J1;
       hence contradiction by A13,POLYNOM1:def 7;
     end;
     let x be set;
     assume
A14:   x in X /\ SCNAT; then
K2:    x in SCNAT by XBOOLE_0:def 3;
       then reconsider i = x as Nat;
K1:    f.i = Moebius i by A14,J1;
       Moebius i <> 0 by K2,Ble1;
       hence x in support f by K1,POLYNOM1:def 7;
     end;
     reconsider f as ManySortedSet of NAT;
     take f;
     thus support f = X /\ SCNAT by A12;
     let k be Nat;
     assume k in support f; 
     hence f.k = Moebius k by J1,A12;
  end;
  uniqueness
  proof
     let f, g be ManySortedSet of NAT such that
A4:  support f = X /\ SCNAT &
     for k being Nat st k in support f holds
       f.k = Moebius k and
A5:  support g = X /\ SCNAT &
     for k being Nat st k in support g holds
       g.k = Moebius k;
     for i being set st i in NAT holds f.i = g.i
     proof
       let i be set;
       assume i in NAT; then
       reconsider j = i as Nat;
       per cases;
       suppose
A6:      j in support f;
         hence f.i = Moebius j by A4
                 .= g.i by A5,A6,A4;
       end;
       suppose
F1:      not j in support f; 
         hence f.i = 0 by POLYNOM1:def 7
                  .= g.i by F1,A4,A5,POLYNOM1:def 7;
       end;
     end;
     hence thesis by PBOOLE:3;
   end;
end;

registration let X be set;
  cluster SMoebius X -> real-yielding;
  coherence
  proof
    rng SMoebius X c= REAL
    proof
      let y be set;
      assume y in rng SMoebius X;
      then consider i being set such that
A1:   i in dom SMoebius X & (SMoebius X).i = y by FUNCT_1:def 5;
      dom SMoebius X = NAT by PBOOLE:def 3; then
      reconsider i as natural number by ORDINAL2:def 21,A1;
      per cases;
      suppose
Z1:     i in support SMoebius X; then
        i in X /\ SCNAT by Def32; then
        i in SCNAT by XBOOLE_0:def 3; then
        y = Moebius i by A1,Z1,Def32;
        hence thesis by XREAL_0:def 1;
      end;
      suppose not i in support SMoebius X; then
        (SMoebius X).i = 0 by POLYNOM1:def 7;
        hence thesis by A1;
      end;
    end;
    hence thesis by SEQ_1:def 1;
  end;
 end; 

registration let X be finite set;
  cluster SMoebius X -> finite-support;
  coherence
  proof
    support SMoebius X = X /\ SCNAT by Def32;
    hence thesis by POLYNOM1:def 8;
  end;
end;

theorem
  Sum SMoebius NatDivisors 1 = 1
  proof
X0: 1 in {1} by TARSKI:def 1;
    reconsider M = ({1},1)-bag as Rbag of NAT;
X1: support M = {1} by UPROOTS:10; 
JJ: 1 in SCNAT by SCDef,Th1; then
    {1} c= SCNAT by ZFMISC_1:37; then
a00:{1} /\ SCNAT = {1} by XBOOLE_1:28;
    reconsider J = 1 as Nat;
    J in {1} by TARSKI:def 1; then
    J in {1} /\ SCNAT by JJ,XBOOLE_0:def 3; then
Z1: J in support SMoebius {1} by Def32;
A1: (SMoebius {1}).1 = 1 by Th201,Z1,Def32;   
    for x being set st x in NAT holds
      (SMoebius {1}).x = M.x
    proof
      let x be set;
      per cases;
      suppose F0: x in {1}; then
        x = 1 by TARSKI:def 1;
        hence thesis by A1,UPROOTS:9,F0;
      end;
      suppose F3: not x in {1}; then
F4:     not x in support SMoebius {1} by a00,Def32;
        M.x = 0 by UPROOTS:8,F3
           .= (SMoebius {1}).x by POLYNOM1:def 7,F4;
        hence thesis;
      end;
    end; then
    SMoebius {1} = M by PBOOLE:3; then
    Sum SMoebius NatDivisors 1 = M.1 by X1,lemacik,Th101
      .= 1 by UPROOTS:9,X0;
    hence thesis;
  end;
  
theorem 
  for X, Y being finite Subset of NAT st
      X misses Y holds
    support SMoebius X \/ support SMoebius Y =
      support (SMoebius X + SMoebius Y)
  proof
    let X,Y be finite Subset of NAT;
    assume
A0: X misses Y;
    thus support SMoebius X \/ support SMoebius Y c=
      support (SMoebius X + SMoebius Y)
    proof
      let x be set;
      assume K1:x in support SMoebius X \/ support SMoebius Y; 
L1:   support SMoebius X = X /\ SCNAT by Def32;
L2:   support SMoebius Y = Y /\ SCNAT by Def32;    
K4:   support SMoebius X misses support SMoebius Y by L1,L2,A0,XBOOLE_1:76;
      per cases by K1,XBOOLE_0:def 2;
      suppose
K2:     x in support SMoebius X; then
K3:     not x in support SMoebius Y by K4,XBOOLE_0:3;
        (SMoebius Y).x = 0 by K3,POLYNOM1:def 7; then
        (SMoebius X).x + (SMoebius Y).x <> 0 by K2,POLYNOM1:def 7; then 
        (SMoebius X + SMoebius Y).x <> 0 by POLYNOM1:def 5;
        hence thesis by POLYNOM1:def 7;
      end;
      suppose
K2:     x in support SMoebius Y; then
K3:     not x in support SMoebius X by K4,XBOOLE_0:3;   
        (SMoebius X).x = 0 by K3,POLYNOM1:def 7;then
        (SMoebius X).x + (SMoebius Y).x <> 0 by K2,POLYNOM1:def 7; then 
        (SMoebius X + SMoebius Y).x <> 0 by POLYNOM1:def 5; 
        hence thesis by POLYNOM1:def 7;
      end;
    end;
    thus thesis by POLYNOM1:91;
  end;

theorem 
  for X, Y being finite Subset of NAT st X misses Y holds
    SMoebius (X \/ Y) = SMoebius X + SMoebius Y
  proof
    let X,Y be finite Subset of NAT;
    assume
A0: X misses Y;
D1: support SMoebius (X \/ Y) = (X \/ Y) /\ SCNAT by Def32
       .= (X /\ SCNAT) \/ (Y /\ SCNAT) by XBOOLE_1:23;
    for x being set st x in NAT holds
      (SMoebius (X \/ Y)).x = (SMoebius X + SMoebius Y).x
    proof
      let x be set;
      per cases;
      suppose
V1:     x in support SMoebius (X \/ Y);
        per cases by V1,D1,XBOOLE_0:def 2; 
          suppose
D3:         x in X /\ SCNAT; then
D4:         not x in Y /\ SCNAT by ThPomocnik,A0;
            reconsider k = x as Nat by D3;                 
E3:         k in support SMoebius X & not (k in support SMoebius Y)
              by Def32,D3,D4;
            (SMoebius (X \/ Y)).x = Moebius k + 0 by Def32,V1
              .= Moebius k + SMoebius Y.k by E3,POLYNOM1:def 7
              .= SMoebius X.k + SMoebius Y.k by E3,Def32
              .= (SMoebius X + SMoebius Y).x by POLYNOM1:def 5;
            hence thesis;
          end;
          suppose
G1:         x in Y /\ SCNAT; then
G2:         not x in X /\ SCNAT by ThPomocnik,A0;
            consider k being Nat such that G3: k = x by G1;     
G5:         k in support SMoebius Y & not (k in support SMoebius X)
              by Def32,G1,G2,G3;
            (SMoebius (X \/ Y)).x = Moebius k + 0 by Def32,V1,G3
              .= Moebius k + SMoebius X.k by G5,POLYNOM1:def 7
              .= SMoebius Y.k + SMoebius X.k by Def32,G5
              .= (SMoebius X + SMoebius Y).x by POLYNOM1:def 5,G3;
            hence thesis;
          end;
      end;
      suppose H1: not x in support SMoebius (X \/ Y); then
        not (x in X /\ SCNAT) & not (x in Y /\ SCNAT) by D1,XBOOLE_0:def 2;
        then
H2:     not x in support SMoebius X & not x in support SMoebius Y by Def32;
        (SMoebius (X \/ Y)).x = 0 by POLYNOM1:def 7,H1
          .= SMoebius Y.x + 0 by H2,POLYNOM1:def 7
          .= SMoebius Y.x + SMoebius X.x by H2,POLYNOM1:def 7
          .= (SMoebius X + SMoebius Y).x by POLYNOM1:def 5;
        hence thesis;
      end;
    end;
    hence thesis by PBOOLE:3;
  end;

begin :: Prime Factors of a Number

definition let n be non zero natural number;
  func PFactors n -> ManySortedSet of SetPrimes means :DefPF:
  support it = support pfexp n &
  for p being natural number st p in support pfexp n holds
    it.p = p;
  existence
  proof
    defpred P[set,set] means
    for p being Prime st $1 = p holds
     (p in support pfexp n implies $2 = p) &
     (not p in support pfexp n implies $2 = 0);
A1: for x,y1,y2 being set st x in SetPrimes & P[x,y1] & P[x,y2] holds y1 = y2
    proof let x,y1,y2 be set such that
A2:   x in SetPrimes and
A3:   P[x,y1] and
A4:   P[x,y2];
      reconsider p = x as Prime by A2,NEWTON:def 6;
      (p in support pfexp n implies y1 = p) &
      (not p in support pfexp n implies y1 = 0) by A3;
      hence y1 = y2 by A4;
    end;
A5: for x being set st x in SetPrimes ex y being set st P[x,y]
    proof
      let x be set such that
A6:   x in SetPrimes;
      reconsider i = x as Prime by A6,NEWTON:def 6;
      per cases;
      suppose
A7:     i in support pfexp n;
        take i;
        let p be Prime; assume p = x;
        hence thesis by A7;
      end;
      suppose
A8:     not i in support pfexp n;
        take 0;
        let p be Prime; assume p = x;
        hence thesis by A8;
      end;
    end;
    consider f being Function such that
A9: dom f = SetPrimes and
A10:for x being set st x in SetPrimes holds P[x,f.x]
      from FUNCT_1:sch 2(A1, A5);
A11:support f c= SetPrimes by A9,POLYNOM1:41;
A12:now let x be set;
      hereby assume
A13:    x in support f;
        then x in SetPrimes by A11;
        then reconsider i = x as Prime by NEWTON:def 6;
        assume not x in support pfexp n;
        then f.i = 0 by A10,A11,A13;
        hence contradiction by A13,POLYNOM1:def 7;
      end;
      assume
A14:  x in support pfexp n;
      then x in SetPrimes;
      then reconsider i = x as Prime by NEWTON:def 6;
      f.i = i by A10,A14;
      hence x in support f by POLYNOM1:def 7;
    end;
    reconsider f as ManySortedSet of SetPrimes by A9,PBOOLE:def 3;
    take f;
    thus support f = support pfexp n by A12,TARSKI:2;
    let p be natural number;
    assume
A15:p in support pfexp n; then p is Prime by NAT_3:34;
    hence f.p = p by A10,A15;
  end;
  uniqueness
  proof
     let it1, it2 be ManySortedSet of SetPrimes such that
A16: support it1 = support pfexp n and
A17: for p being natural number st p in support pfexp n holds
       it1.p = p and
A18: support it2 = support pfexp n and
A19: for p being natural number st p in support pfexp n holds
       it2.p = p;
     now let i be set such that
A20:   i in SetPrimes;
       reconsider p = i as Prime by A20,NEWTON:def 6;
       per cases;
       suppose A21: p in support pfexp n;
         hence it1.i = p by A17 .= it2.i by A19,A21;
       end;
       suppose A22: not p in support pfexp n;
         hence it1.i = 0 by A16,POLYNOM1:def 7
          .= it2.i by A18,A22,POLYNOM1:def 7;
      end;
    end;
    hence it1 = it2 by PBOOLE:3;
  end;
end;

registration let n be non zero natural number;
  cluster PFactors n -> finite-support natural-yielding;
  coherence
  proof
A1: support PFactors n = support pfexp n by DefPF; 
    rng PFactors n c= NAT
    proof
      let x be set;
      assume x in rng PFactors n; then
      consider y being set such that
A2:   y in dom PFactors n & (PFactors n).y = x by FUNCT_1:def 5;
a4:   y in SetPrimes by A2,PBOOLE:def 3; then
A4:   y is natural number by ORDINAL2:def 21;
      per cases;
      suppose y in support pfexp n; then
        x = y by A4,A2,DefPF;
        hence thesis by a4;
      end;
      suppose not y in support pfexp n; then
A3:     not y in support PFactors n by DefPF;
        x = 0 by POLYNOM1:def 7,A3,A2;
        hence thesis;
      end;
    end;
    hence thesis by POLYNOM1:def 8,SEQM_3:def 8,A1;
  end;
end;

theorem Th39:
  PFactors 1 = EmptyBag SetPrimes
  proof
    set f = PFactors 1; set g = NAT --> 0;
    for z being set st z in dom f holds f.z = 0
    proof let z be set; assume z in dom f; then
      z in SetPrimes by PBOOLE:def 3;
      then reconsider z as Nat;
      support pfexp 1 = {}; then
      not z in support f by DefPF;
      hence thesis by POLYNOM1:def 7;
    end; then
A2: f = (dom f) --> 0 by FUNCOP_1:17;
    dom f = SetPrimes by PBOOLE:def 3;
    hence thesis by A2,POLYNOM1:def 15;
  end;

theorem Zet1:
  for p being Prime holds
    (PFactors p) * <*p*> = <*p*>
  proof
    let p be Prime;
    set f = <*p*>, g = PFactors p;
A1: dom f = {1} by FINSEQ_1:4,55;
A2: dom (g * f) = {1}
    proof
      thus dom (g * f) c= {1}
      proof
        let x be set;
        assume x in dom (g * f); then
        x in dom f & f.x in dom g by FUNCT_1:21; 
        hence thesis by FINSEQ_1:4,55;
      end;
      let x be set;
      assume rt: x in {1}; then
Z0:   x = 1 by TARSKI:def 1; 
Z1:   x in dom f by rt,FINSEQ_1:4,55;
      f.x = p by FINSEQ_1:def 8,Z0; then 
      f.x in SetPrimes by NEWTON:def 6; then
      f.x in dom g by PBOOLE:def 3;
      hence thesis by Z1,FUNCT_1:21;
    end;
    for x being set st x in dom (g * f) holds (g * f).x = f.x
    proof
      let x be set;
      assume
A4:   x in dom (g * f); then
A5:   x = 1 by TARSKI:def 1,A2;
      (pfexp p).p <> 0 by NAT_3:38; then
A6:   p in support pfexp p by POLYNOM1:def 7;
      (g * f).1 = g.(f.1) by A4,A5,FUNCT_1:22
               .= g.p by FINSEQ_1:def 8
               .= p by DefPF,A6
               .= f.1 by FINSEQ_1:def 8;
      hence thesis by A5;
    end; 
    hence thesis by A1,A2,FUNCT_1:9;
  end;

theorem Zet2:
  for p being Prime, n being non zero natural number holds
    (PFactors (p|^n)) * <* p *> = <* p *>
  proof
    let p be Prime, n be non zero natural number;
    set s = p |^ n;
    set f = <*p*>, g = PFactors s;
A1: dom f = {1} by FINSEQ_1:4,FINSEQ_1:55;
A2: dom (g * f) = {1}
    proof
      thus dom (g * f) c= {1}
      proof
        let x be set;
        assume x in dom (g * f); 
        hence thesis by A1,FUNCT_1:21;     
      end;
      let x be set;
      assume z0:x in {1}; then
Z0:   x = 1 by TARSKI:def 1;
Z1:   x in dom f by z0,FINSEQ_1:4,55;
      f.x = p by FINSEQ_1:def 8,Z0;then
      f.x in SetPrimes by NEWTON:def 6; then
      f.x in dom g by PBOOLE:def 3;
      hence thesis by Z1,FUNCT_1:21;
    end; then
A3: dom (g * f) = dom f by FINSEQ_1:4,FINSEQ_1:55;
    for x being set st x in dom (g * f) holds
      (g * f).x = f.x
    proof
      let x be set;
      assume
A4:   x in dom (g * f); then    
A5:   x = 1 by TARSKI:def 1,A2;    
      (pfexp p).p <> 0 by NAT_3:38; then
      p in support pfexp p by POLYNOM1:def 7; then
A6:   p in support pfexp s by NAT_3:48;
      (g * f).1 = g.(f.1) by A4,A5,FUNCT_1:22
               .= g.p by FINSEQ_1:def 8
               .= p by DefPF,A6
               .= f.1 by FINSEQ_1:def 8;
      hence thesis by A5;
    end;
    hence thesis by A3,FUNCT_1:9;
  end;

theorem Th55:
  for p being Prime, n being non zero natural number holds
    p |-count n = 0 implies (PFactors n).p = 0
proof
  let p be Prime, n be non zero natural number;
  assume p |-count n = 0; then
  (pfexp n).p = 0 by NAT_3:def 8;
  then not p in support pfexp n by POLYNOM1:def 7;
  then not p in support PFactors n by DefPF;
  hence (PFactors n).p = 0 by POLYNOM1:def 7;
end;

theorem ATh56:
  for n being non zero natural number, p being Prime st
    p |-count n <> 0 holds (PFactors n).p = p
  proof
    let n be non zero natural number, p be Prime;
    assume p |-count n <> 0;
    then (pfexp n).p <> 0 by NAT_3:def 8;
    then p in support pfexp n by POLYNOM1:def 7;
    hence (PFactors n).p = p by DefPF;
  end;
  
theorem NAT358:
  for m, n being non zero Nat st m, n are_relative_prime
    holds PFactors (m * n) = PFactors m + PFactors n
  proof
    let a, b be non zero Nat;
    assume
A1: a, b are_relative_prime;
    reconsider an = a, bn = b as non zero natural number;
    now let i be set such that
A2:   i in SetPrimes;
      reconsider p = i as Prime by A2,NEWTON:def 6;
A3:   p |-count (an*bn) = (p |-count a) + (p |-count b) by NAT_3:28;
A4:   p > 1 by INT_2:def 5;
A5:   a hcf b = 1 by A1,INT_2:def 6;
      per cases;
      suppose A6: p |-count (a*b) = 0;
        then A7: (p |-count a) = 0 & (p |-count b) = 0 by A3,NAT_1:23;
        thus (PFactors (a*b)).i = 0 by A6,Th55
          .= 0 + (PFactors b).i by A7,Th55
          .= (PFactors a).i + (PFactors b).i by A7,Th55
          .= (PFactors a + PFactors b).i by POLYNOM1:def 5;
      end;
      suppose
A8:     p |-count (a*b) <> 0;
        thus (PFactors (a*b)).i = (PFactors a + PFactors b).i
        proof
          per cases by A3,A8;
          suppose
A9:       (p |-count a) <> 0;
A10:      now assume (p |-count b) <> 0;
            then consider kb being Nat such that
A11:        (p |-count b) = kb+1 by NAT_1:22;
            p |^ (p |-count b) divides b by A4,NAT_3:def 7;
            then p*(p|^kb) divides b by A11,NEWTON:11;
            then consider lb being Nat such that
A12:        b = p*(p|^kb)*lb by NAT_1:def 3;
            b = p*((p|^kb)*lb) by A12; then
A13:        p divides b by NAT_1:def 3;
            consider ka being Nat such that
A14:        (p |-count a) = ka+1 by A9,NAT_1:22;
            p |^ (p |-count a) divides a by A4,NAT_3:def 7;
            then p*(p|^ka) divides a by A14,NEWTON:11;
            then consider la being Nat such that
A15:        a = p*(p|^ka)*la by NAT_1:def 3;
            a = p*((p|^ka)*la) by A15;
            then p divides a by NAT_1:def 3;
            then p divides 1 by A5,A13,NAT_1:def 5;
            hence contradiction by A4,NAT_1:54;
          end;
          thus (PFactors (a*b)).i = p by A8,ATh56
             .= (PFactors a).p + 0 by A9,ATh56
             .= (PFactors a).p + (PFactors b).p by A10,Th55
             .= (PFactors a + PFactors b).i by POLYNOM1:def 5;
        end;
        suppose
A16:      (p |-count b) <> 0;
A17:      now assume
A18:        (p |-count a) <> 0;
            consider kb being Nat such that
A19:        (p |-count b) = kb+1 by A16,NAT_1:22;
            p |^ (p |-count b) divides b by A4,NAT_3:def 7;
            then p*(p|^kb) divides b by A19,NEWTON:11;
            then consider lb being Nat such that
A20:        b = p*(p|^kb)*lb by NAT_1:def 3;
            b = p*((p|^kb)*lb) by A20; then
A21:        p divides b by NAT_1:def 3;
            consider ka being Nat such that
A22:        (p |-count a) = ka+1 by A18,NAT_1:22;
            p |^ (p |-count a) divides a by A4,NAT_3:def 7;
            then p*(p|^ka) divides a by A22,NEWTON:11;
            then consider la being Nat such that
A23:        a = p*(p|^ka)*la by NAT_1:def 3;
            a = p*((p|^ka)*la) by A23;
            then p divides a by NAT_1:def 3;
            then p divides 1 by A5,A21,NAT_1:def 5;
            hence contradiction by A4,NAT_1:54;
          end;
          thus (PFactors (a*b)).i = p by A8,ATh56
              .= 0+(PFactors b).p by A16,ATh56
              .= (PFactors a).p + (PFactors b).p by A17,Th55
              .= (PFactors a + PFactors b).i by POLYNOM1:def 5;
        end;
      end;
    end;
  end;
  hence thesis by PBOOLE:3;
end;

theorem
  for n being non zero Nat, A being finite Subset of NAT st
    A = { k where k is Element of NAT :
          0 < k & k divides n & k is square-containing } holds
      SMoebius A = EmptyBag NAT
  proof
    let n be non zero Nat, A be finite Subset of NAT;
    assume
A1: A = { k where k is Element of NAT :
       0 < k & k divides n & k is square-containing };
K1: A misses SCNAT
    proof
      assume A meets SCNAT; then
      consider x being set such that
H1:   x in A & x in SCNAT by XBOOLE_0:3;
      ex k being Element of NAT st
      k = x & 0 < k & k divides n & k is square-containing by A1,H1;
      hence thesis by H1,SCDef;
    end;
    for x being set st x in NAT holds
      (SMoebius A).x = (EmptyBag NAT).x
    proof
      let x be set;
      assume x in NAT; then
      reconsider k = x as Nat;
      support SMoebius A = A /\ SCNAT by Def32
          .= {} by K1,XBOOLE_0:def 7; then
      (SMoebius A).k = 0 by POLYNOM1:def 7;
      hence thesis by POLYNOM1:56;
    end;
    hence thesis by PBOOLE:3;
  end;

begin :: The Radical of a Number
  
definition let n be non zero natural number;
  func Radical n -> Nat equals
    Product PFactors n;
  coherence;
end;

theorem Th127:
  for n being non zero natural number holds
    Radical n > 0
  proof
    let n be non zero natural number;
AB: n >= 1 by NAT_1:39;
    per cases by AB,REAL_1:def 5; 
    suppose n > 1;
      assume Radical n <= 0; then
      Product PFactors n = 0; then
      consider f being FinSequence of COMPLEX such that
A1:   Product f = 0 &
      f = (PFactors n) * canFS(support PFactors n) by NAT_3:def 5;
AA:   not ex k being Nat st k in dom f & f.k = 0
      proof
        given k being Nat such that
G1:     k in dom f & f.k = 0;
        k in dom canFS support PFactors n by A1,G1,FUNCT_1:21; then
G7:     (canFS support PFactors n).k in rng canFS support PFactors n
          by FUNCT_1:12; then
G5:     (canFS support PFactors n).k in support PFactors n;
        (canFS support PFactors n).k in SetPrimes by G5; then
        reconsider p = (canFS support PFactors n).k as Prime
          by NEWTON:def 6;
        p in support PFactors n by G7; then
G4:     p in support pfexp n by DefPF;
        f.k = (PFactors n).p by A1,G1,FUNCT_1:22
           .= p by DefPF,G4;
        hence thesis by G1;
      end;
T1:   rng PFactors n c= NAT by SEQM_3:def 8;
      rng f c= rng PFactors n by A1,RELAT_1:45; then
      rng f c= NAT by T1,XBOOLE_1:1; then
      rng f c= REAL by XBOOLE_1:1; then
      reconsider g = f as FinSequence of REAL by FINSEQ_1:def 4;
      not ex k being Nat st k in dom g & g.k = 0 by AA;
      hence contradiction by A1,RVSUM_1:133;
    end;
    suppose n = 1;
      hence thesis by NAT_3:20,Th39;
    end;
  end;
  
registration let n be non zero natural number;
  cluster Radical n -> non zero;
  coherence by Th127;
end;

theorem
  for p being Prime holds
    p = Radical p
  proof
    let p be Prime;
A0: support PFactors p = support pfexp p by DefPF
      .= {p} by NAT_3:43;     
    reconsider f = <*p*> as FinSequence of NAT;
A3: Product f = p by RVSUM_1:125;
A4: f = (PFactors p) * <*p*> by Zet1
     .= (PFactors p) * canFS({p}) by UPROOTS:6;
    rng f c= COMPLEX by XBOOLE_1:1,NUMBERS:20; then
    f is FinSequence of COMPLEX by FINSEQ_1:def 4;
    hence thesis by A3,NAT_3:def 5,A0,A4;
  end;

theorem ThPPP1:
  for p being Prime, n being non zero Nat holds
    Radical (p |^ n) = p
  proof
    let p be Prime, n be non zero Nat;
    reconsider f = <*p*> as FinSequence of NAT;
A3: Product f = p by RVSUM_1:125;
    set s = p |^ n;
A0: support PFactors s = support pfexp s by DefPF
      .= support pfexp p by NAT_3:48
      .= {p} by NAT_3:43;
A4: f = (PFactors s) * <*p*> by Zet2
     .= (PFactors s) * canFS({p}) by UPROOTS:6;
    rng f c= COMPLEX by XBOOLE_1:1,NUMBERS:20; then
    f is FinSequence of COMPLEX by FINSEQ_1:def 4;
    hence thesis by A3,NAT_3:def 5,A0,A4;
  end;

theorem RadDivides:
  for n being non zero natural number holds
    Radical n divides n
  proof
    let n be non zero natural number;
    defpred P[natural number] means
    for n being non zero natural number st
      support PFactors n c= Seg $1 holds Radical n divides n;
A1: P[0]
    proof
      let n be non zero natural number;
      assume
A2:   support PFactors n c= Seg 0;
      {} c= support PFactors n by XBOOLE_1:2;then
      support PFactors n = {} by A2,FINSEQ_1:4,XBOOLE_0:def 10;then
A4:   PFactors n = EmptyBag SetPrimes by BAGORDER:20;    
      Radical n = 1 by A4,NAT_3:20; 
      hence thesis by NAT_1:53;
    end;
A7: for k being natural number st P[k] holds P[k+1]
    proof
      let k be natural number;
      assume
A8:   P[k];
      let n be non zero natural number such that
A9:   support PFactors n c= Seg (k+1);
A10:  support pfexp n = support PFactors n by DefPF;
      per cases;
      suppose
A11:    not support PFactors n c= Seg k;
A12:    now assume
A13:      not k+1 in support PFactors n;
          support PFactors n c= Seg k
          proof let x be set; assume
A14:        x in support PFactors n;
            then A15: x is Prime by A10,NAT_3:34;
            reconsider m = x as natural number by A10,A14,NAT_3:34;
A16:        1 <= m by A15,INT_2:def 5;
            m <= k+1 by A9,A14,FINSEQ_1:3;
            then m < k+1 by A13,A14,REAL_1:def 5;
            then m <= k by NAT_1:38;
            hence x in Seg k by A16,FINSEQ_1:3;
          end;
          hence contradiction by A11;
        end;
        set p = k+1; set e = p |-count n;
        set s = p |^ e;
A17:    p is Prime by A10,A12,NAT_3:34; then
A18:    (pfexp n).p = e by NAT_3:def 8;
A19:    p > 1 by A17,INT_2:def 5;
        then s divides n by NAT_3:def 7;
        then consider t being Nat such that
A20:    n = s * t by NAT_1:def 3;
        reconsider s, t as non zero natural number by A20, XCMPLX_1:6;
A22:    support PFactors t c= Seg k
        proof let x be set; assume
A23:      x in support PFactors t; then
A24:      x in support pfexp t by DefPF; then
A25:      x is Prime by NAT_3:34;
          reconsider m = x as natural number by A24,NAT_3:34;
A26:      1 <= m by A25,INT_2:def 5;
          support pfexp t c= support pfexp n by A20,NAT_3:45; then
          support PFactors t c= support PFactors n by A10,DefPF;
          then m in support PFactors n by A23; then
A27:      m <= k+1 by A9,FINSEQ_1:3;
          set f = p |-count t;
          now assume
A28:        m = p;
            (pfexp t).p = f by A17,NAT_3:def 8;
            then f <> 0 by A24,A28,POLYNOM1:def 7;
            then f > 0; then f >= 0+1 by NAT_1:38;
            then consider g being Nat such that
A29:        f = 1 + g by NAT_1:28;
            p |^ f divides t by A19,NAT_3:def 7;
            then consider u being Nat such that
A30:        t = (p |^ f)*u by NAT_1:def 3;
A31:        n = s * (((p |^ g)*p)*u) by A20,A29,A30,NEWTON:11
             .= s*p * ((p |^ g)*u)
             .= (p |^ (e+1))*((p |^ g)*u) by NEWTON:11;
            (p |^ g)*u is Nat by ORDINAL2:def 21;
            then p |^ (e+1) divides n by A31,NAT_1:def 3;
            hence contradiction by A19,NAT_3:def 7;
          end;
          then m < p by A27,REAL_1:def 5; then m <= k by NAT_1:38;
          hence x in Seg k by A26,FINSEQ_1:3;
        end;
A32:    e <> 0 by A10,A12,A18,POLYNOM1:def 7;
B1:     support ppf s = support pfexp s by NAT_3:def 9;then
B2:     support ppf s = {p} by A17,A32,NAT_3:42; then
A33:    support PFactors s = {p} by B1,DefPF;
A37:    now assume (support ppf s) meets (support ppf t);
          then consider x being set such that
A35:      x in support ppf s and
a35:      x in support ppf t by XBOOLE_0:3;
          x in support pfexp t by a35,NAT_3:def 9; then
B36:      x in support PFactors t by DefPF;
          x = p by B2,A35,TARSKI:def 1;
          then p <= k by A22,B36,FINSEQ_1:3;
          hence contradiction by NAT_1:38;
        end;
        reconsider s1 = s, t1 = t as non zero Nat by ORDINAL2:def 21;
ZZ:     s1,t1 are_relative_prime
        proof assume not s1,t1 are_relative_prime; then
A38:      s1 hcf t1 <> 1 by INT_2:def 6;
          set u = s1 hcf t1;
A39:      u divides s1 by NAT_1:def 5;
          u <> 0 by INT_2:5; then 0 < u;
          then 0+1 <= u by NAT_1:38; then
          u > 1 by A38,REAL_1:def 5;
          then u >= 1+1 by NAT_1:38;
          then consider r being Nat such that
A40:      r is prime and
A41:      r divides u by INT_2:48;
          r divides s1 by A39,A41,NAT_1:51;
          then r divides p by A40,NAT_3:5; then
A42:      r = 1 or r = p by A17,INT_2:def 5;
          u divides t1 by NAT_1:def 5;
          then p divides t1 by A40,A41,A42,INT_2:def 5,NAT_1:51;
          then p in support pfexp t by A17,NAT_3:37;
          then p in support PFactors t by DefPF;
          then k+1 <= k by A22,FINSEQ_1:3;
          hence contradiction by NAT_1:38;
        end;  
        consider f being FinSequence of COMPLEX such that
A44:    Product PFactors s = Product f and
A45:    f = (PFactors s)*canFS(support PFactors s) by NAT_3:def 5;
A46:    dom PFactors s = SetPrimes by PBOOLE:def 3;       
DD:     p in support pfexp s by B1,B2,TARSKI:def 1;
        f = (PFactors s)*<*p*> by A33,A45,UPROOTS:6
         .= <* (PFactors s).p *> by A12,A46,CIRCCMB3:36;then
A47:    Product PFactors s = (PFactors s).p by A44,RVSUM_1:125
         .= p by DD,DefPF;
        support ppf t = support pfexp t by NAT_3:def 9;then
V1:     support ppf s = support PFactors s &
          support ppf t = support PFactors t by B1,DefPF;
V3:     Radical s divides s & Radical t divides t by A47,A32,NAT_3:3,A8,A22; 
        Radical n = Product (PFactors s+PFactors t) by ZZ,NAT358,A20
         .= Radical s * Radical t by V1,A37,NAT_3:19;       
        hence Radical n divides n by A20,V3,NAT_3:1;
      end;
      suppose support PFactors n c= Seg k;
        hence Radical n divides n by A8;
      end;
    end;
A48:for k being natural number holds P[k] from NAT_1:sch 2(A1,A7);
    consider mS being Nat such that
J1: support ppf n c= Seg mS by 4H3;
    support ppf n = support pfexp n by NAT_3:def 9
                 .= support PFactors n by DefPF;
    hence thesis by A48,J1;
  end;

theorem BlaBla:
  for p being Prime, n being non zero natural number holds
    p divides n iff p divides Radical n
  proof
    let p be Prime,
        n be non zero natural number;
    thus p divides n implies p divides Radical n
    proof  
      assume that
F1:   p divides n and
F2:   not p divides Radical n;
H0:   p in support pfexp n by F1,NAT_3:37; then
H1:   (PFactors n).p = p by DefPF;
H2:   p in support PFactors n by H0,DefPF;
pp:   support PFactors n c= dom PFactors n by POLYNOM1:41;
      consider f being FinSequence of COMPLEX such that
Z1:   Product PFactors n = Product f &
      f = (PFactors n) * canFS support PFactors n by NAT_3:def 5;
      p in rng canFS support PFactors n by H2,UPROOTS:5; then
      consider y being set such that
h4:   y in dom canFS support PFactors n &
      p = (canFS support PFactors n).y by FUNCT_1:def 5;
H5:   y in dom f by Z1,h4,FUNCT_1:21,pp,H2;
X1:   rng PFactors n c= NAT by SEQM_3:def 8;
      rng f c= rng PFactors n by Z1,RELAT_1:45; then
      rng f c= NAT by X1,XBOOLE_1:1; then
      reconsider f as FinSequence of NAT by FINSEQ_1:def 4;
      f.y = p by H1,Z1,h4,H5,FUNCT_1:22; then 
      p in rng f by H5,FUNCT_1:12;
      hence contradiction by F2,Z1,NAT_3:7;
    end;
    assume
Z1: p divides Radical n;
    Radical n divides n by RadDivides;
    hence thesis by Z1,NAT_1:51;
  end;
  
theorem Jot5:
  for k being non zero natural number st
    k is square-free holds Radical k = k
  proof
    let k be non zero natural number;
    assume
KL: k is square-free;
    for i being set st i in SetPrimes holds
      (PFactors k).i = (ppf k).i
    proof
      let i be set;
      assume i in SetPrimes; then
      reconsider p = i as Prime by NEWTON:def 6;
      per cases;
      suppose
M1:     p in support pfexp k;
M2:     p |-count k <= 1 by Zet0,KL;
K2:     p <> 1 by INT_2:def 5;
        p |-count k <> 0
        proof
          assume p |-count k = 0; then
          not p divides k by K2,NAT_3:27;
          hence thesis by M1,NAT_3:36;
        end; then
        p |-count k >= 1 by NAT_1:39; then
        p |-count k = 1 by M2,XREAL_1:1; then
        (ppf k).p = p |^ 1 by M1,NAT_3:def 9 .= p by NEWTON:10;
        hence thesis by DefPF,M1;
      end;
      suppose
A0:     not p in support pfexp k; then
        not p in support PFactors k by DefPF; then
A1:     (PFactors k).p = 0 by POLYNOM1:def 7;
        not p in support ppf k by A0,NAT_3:def 9;
        hence thesis by A1,POLYNOM1:def 7;
      end;
    end; then
    PFactors k = ppf k by PBOOLE:3;
    hence thesis by NAT_3:61;
  end;
  
theorem Th125:
  for n being non zero natural number holds
    Radical n <= n
  proof
    let n be non zero natural number;
    Radical n divides n by RadDivides;
    hence thesis by NAT_1:54;
  end;  

theorem CountRad:
  for p being Prime, n being non zero natural number holds
    p |-count Radical n <= p |-count n
  proof
    let p be Prime, n be non zero natural number;
    Radical n divides n by RadDivides;
    hence thesis by NAT_3:30;
  end;

theorem 
  for n being non zero natural number holds
    Radical n = 1 iff n = 1
  proof
    let n be non zero natural number;
    thus Radical n = 1 implies n = 1
    proof
      assume
A2:   Radical n = 1;
      assume n <> 1; then     
      consider p being Prime such that
A3:   p divides n by Dziwne2;
A4:   1 < p by INT_2:def 5;
F3:   p in support pfexp n by A3,NAT_3:37; then
F2:   (PFactors n).p = p by DefPF;
      consider f being FinSequence of COMPLEX such that
B1:   Product PFactors n = Product f &
      f = (PFactors n) * canFS (support PFactors n) by NAT_3:def 5;
C1:   rng f c= rng PFactors n by B1,RELAT_1:45;
      rng PFactors n c= NAT by SEQM_3:def 8; then
      rng f c= NAT by C1,XBOOLE_1:1; then
      reconsider f as FinSequence of NAT by FINSEQ_1:def 4;
G1:   support PFactors n c= dom PFactors n by POLYNOM1:41;
FF:   p in support PFactors n by F3,DefPF; then
      p in rng canFS support PFactors n by UPROOTS:5; then
      consider y being set such that
B3:   y in dom canFS support PFactors n &
      p = (canFS support PFactors n).y by FUNCT_1:def 5;     
B5:   y in dom f by B1,FUNCT_1:21,FF,G1,B3;
B6:   f.y = p by F2,B3,FUNCT_1:23,B1;
      p in rng f by B5,B6,FUNCT_1:12; then
      p divides Product f by NAT_3:7; 
      hence thesis by A2,A4,NAT_1:54,B1;
    end;
    thus thesis by NAT_3:20,Th39;
  end;

theorem Ups:
  for p being Prime, n being non zero natural number holds
    p |-count Radical n <= 1
  proof
    let p be Prime, n be non zero natural number;
    defpred P[natural number] means
    for n being non zero natural number st
      support PFactors n c= Seg $1 holds
        for p being Prime holds p |-count Radical n <= 1;
A1: P[0]
    proof
      let n be non zero natural number;
      assume
A2:   support PFactors n c= Seg 0;
      {} c= support PFactors n by XBOOLE_1:2;then
      support PFactors n = {} by A2,FINSEQ_1:4,XBOOLE_0:def 10;then
A4:   PFactors n = EmptyBag SetPrimes by BAGORDER:20;
      let p be Prime;
      not p divides Radical n
      proof
        assume p divides Radical n; then
        p divides 1 & 1 divides p by A4,NAT_3:20,NAT_1:53; then
        p = 1 by NAT_1:52;
        hence thesis by INT_2:def 5;
      end;   
      hence thesis by ThPPL;
    end;
A7: for k being natural number st P[k] holds P[k+1]
    proof
      let k be natural number;
      assume
A8:   P[k];
      let n be non zero natural number such that
A9:   support PFactors n c= Seg (k+1);
A10:  support pfexp n = support PFactors n by DefPF;
      per cases;
      suppose
A11:    not support PFactors n c= Seg k;
A12:    now assume
A13:      not k+1 in support PFactors n;
          support PFactors n c= Seg k
          proof let x be set; assume
A14:        x in support PFactors n; then
A15:        x is Prime by A10,NAT_3:34;
            reconsider m = x as natural number by A10,A14,NAT_3:34;
A16:        1 <= m by A15,INT_2:def 5;
            m <= k+1 by A9,A14,FINSEQ_1:3;
            then m < k+1 by A13,A14,REAL_1:def 5;
            then m <= k by NAT_1:38;
            hence x in Seg k by A16,FINSEQ_1:3;
          end;
          hence contradiction by A11;
        end;
        reconsider r = k+1 as non zero Nat by ORDINAL2:def 21;
        set e = r |-count n;
        set s = r |^ e;
A17:    r is Prime by A10,A12,NAT_3:34; then
A18:    (pfexp n).r = e by NAT_3:def 8;
A19:    r > 1 by A17,INT_2:def 5;
        then s divides n by NAT_3:def 7;
        then consider t being Nat such that
A20:    n = s * t by NAT_1:def 3;
        reconsider s, t as non zero natural number by A20,XCMPLX_1:6;
        let p be Prime;
B22:    support PFactors t c= Seg k
        proof let x be set; assume
A23:      x in support PFactors t; then
A24:      x in support pfexp t by DefPF; then
A25:      x is Prime by NAT_3:34;
          reconsider m = x as natural number by A24,NAT_3:34;
A26:      1 <= m by A25,INT_2:def 5;
          support pfexp t c= support pfexp n by A20,NAT_3:45; then
          support PFactors t c= support PFactors n by A10,DefPF;
          then m in support PFactors n by A23; then
A27:      m <= k+1 by A9,FINSEQ_1:3;
          set f = r |-count t;
          now assume
A28:        m = r;
            (pfexp t).r = f by A17,NAT_3:def 8;
            then f <> 0 by A24,A28,POLYNOM1:def 7;
            then f > 0; then f >= 0+1 by NAT_1:38;
            then consider g being Nat such that
A29:        f = 1 + g by NAT_1:28;
            r |^ f divides t by A19,NAT_3:def 7;
            then consider u being Nat such that
A30:        t = (r |^ f)*u by NAT_1:def 3;
A31:        n = s * (((r |^ g)*r)*u) by A20,A29,A30,NEWTON:11
             .= s*r * ((r |^ g)*u)
             .= (r |^ (e+1))*((r |^ g)*u) by NEWTON:11;
            r |^ (e+1) divides n by A31,NAT_1:def 3;
            hence contradiction by A19,NAT_3:def 7;
          end;
          then m < r by A27,REAL_1:def 5; then m <= k by NAT_1:38;
          hence x in Seg k by A26,FINSEQ_1:3;
        end;
A32:    e <> 0 by A10,A12,A18,POLYNOM1:def 7;
B1:     support ppf s = support pfexp s by NAT_3:def 9;then
B2:     support ppf s = {r} by A17,A32,NAT_3:42; 
A37:    now assume (support ppf s) meets (support ppf t);
          then consider x being set such that
A34:      x in (support ppf s) and
A3a:      x in support ppf t by XBOOLE_0:3;
          x in support pfexp t by NAT_3:def 9,A3a; then
B36:      x in support PFactors t by DefPF;
          x = r by B2,A34,TARSKI:def 1;
          then r <= k by B22,B36,FINSEQ_1:3;
          hence contradiction by NAT_1:38;
        end;
        reconsider s1 = s, t1 = t as non zero Nat;
ZZ:     s1,t1 are_relative_prime
        proof assume not s1,t1 are_relative_prime; then
A38:      s1 hcf t1 <> 1 by INT_2:def 6;
          set u = s1 hcf t1;
A39:      u divides s1 by NAT_1:def 5;
          u <> 0 by INT_2:5; then 0 < u;
          then 0+1 <= u by NAT_1:38; then
          u > 1 by A38,REAL_1:def 5;
          then u >= 1+1 by NAT_1:38;
          then consider w being Nat such that
A40:      w is prime and
A41:      w divides u by INT_2:48;
          w divides s1 by A39,A41,NAT_1:51;
          then w divides r by A40,NAT_3:5;
          then A42: w = 1 or w = r by A17,INT_2:def 5;
          u divides t1 by NAT_1:def 5;
          then r divides t1 by A40,A41,A42,INT_2:def 5,NAT_1:51;
          then r in support pfexp t by A17,NAT_3:37;
          then r in support PFactors t by DefPF;
          then k+1 <= k by B22,FINSEQ_1:3;
          hence contradiction by NAT_1:38;
        end; 
        support ppf t = support pfexp t by NAT_3:def 9;then
V1:     support ppf s = support PFactors s &
        support ppf t = support PFactors t by B1,DefPF;   
G2:     Radical n = Product (PFactors s+PFactors t) by ZZ,NAT358,A20
          .= Radical s * Radical t by V1,A37,NAT_3:19;
K1:     p |-count Radical s <= p |-count s &
          p |-count Radical t <= p |-count t by CountRad;
Hi:     p |-count Radical s = 0 or p |-count Radical t = 0
        proof
          assume p |-count Radical s <> 0 & p |-count Radical t <> 0;
          then p |-count s > 0 & p |-count t > 0 by K1;
          then (PFactors s).p <> 0 & (PFactors t).p <> 0 by ATh56;
          then p in support PFactors s & p in support PFactors t
            by POLYNOM1:def 7;
          hence thesis by V1,XBOOLE_0:3,A37;
        end;
KM:     p |-count Radical s <= 1
        proof
          per cases;
          suppose
Z1:         p = r; then
Z2:         Radical s = r by A32,ThPPP1;
            p > 1 by INT_2:def 5;           
            hence thesis by Z1,Z2,NAT_3:22;
          end;
          suppose p <> r; then
            p, r are_relative_prime by INT_2:47,A17; then
H2:         not p divides r by PYTHTRIP:def 2;
H3:         p > 1 by INT_2:def 5;
            p |-count s = e * (p |-count r) by NAT_3:32
                       .= e * 0 by H2,H3,NAT_3:27
                       .= 0;
            hence thesis by CountRad;
          end;
        end;
        p |-count Radical n =
          (p |-count Radical t) + (p |-count Radical s) by G2,NAT_3:28;
        hence p |-count Radical n <= 1 by KM,Hi,A8,B22;
      end;
      suppose support PFactors n c= Seg k;
        hence for p being Prime holds p |-count Radical n <= 1 by A8;
      end;
    end;
A48:for k being natural number holds P[k] from NAT_1:sch 2(A1,A7);
    consider mS being Nat such that
J1: support ppf n c= Seg mS by 4H3;
    support ppf n = support pfexp n by NAT_3:def 9
                 .= support PFactors n by DefPF;
    hence thesis by A48,J1;
  end;

ThCCC:
  for n being non zero natural number, p being Prime holds
    not p |^2 divides Radical n
  proof
    let n be non zero natural number;
    let p be Prime;
    set PR = p |-count Radical n;
    assume
a0: p|^2 divides Radical n;   
lk: p <> 1 & Radical n <> 0 by INT_2:def 5;
a00:PR is non zero Nat
    proof
      assume not PR is non zero Nat; then
      p |^ 0 divides Radical n &
      not p |^(0+1) divides Radical n by NAT_3:def 7,lk; then
ml:   not p divides Radical n by NEWTON:10;
      thus contradiction by a0,hmm2,ml;
    end;
    PR >= 2
    proof
      assume PR < 2; then
      PR = 1 by a00,NAT_1:71; then
      not p |^(1+1) divides Radical n by NAT_3:def 7,lk;
      hence contradiction by a0;
    end; then
    PR > 1 by XREAL_1:2;
    hence contradiction by Ups;
  end;

RadSF:
  for n being non zero natural number holds
    Radical n is square-free
  proof
    let n be non zero natural number;
    assume Radical n is square-containing; then
    consider p being Prime such that
A1: p |^ 2 divides Radical n by Def1;
    thus contradiction by A1,ThCCC;
  end;

registration let n be non zero natural number;
  cluster Radical n -> square-free;
  coherence by RadSF;
end;

theorem
  for n being non zero natural number holds
    Radical Radical n = Radical n by Jot5;

theorem
  for n being non zero Nat, p being Prime holds
   { k where k is Element of NAT :
     0 < k & k divides Radical n & p divides k } c= Seg n
   proof
     let n be non zero Nat; let p be Prime;
     let x be set;
     assume x in { k where k is Element of NAT :
     0 < k & k divides Radical n & p divides k }; then
     consider k being Nat such that
B1:  x = k & k > 0 & k divides Radical n & p divides k;
     k <= Radical n & Radical n <= n by Th125,B1,NAT_1:54; then
     1 <= k & k <= n by B1,NAT_1:39,XREAL_1:2;
     hence x in Seg n by B1,FINSEQ_1:3;
   end;

theorem 
  for n being non zero Nat, p being Prime holds
   { k where k is Element of NAT :
     0 < k & k divides Radical n & not p divides k } c= Seg n
   proof
     let n be non zero Nat; let p be Prime;
     let x be set;
     assume x in { k where k is Element of NAT :
       0 < k & k divides Radical n & not p divides k }; then
     consider k being Nat such that
B1:  x = k & k > 0 & k divides Radical n & not p divides k;
     k <= Radical n & Radical n <= n by Th125,B1,NAT_1:54; then
     1 <= k & k <= n by B1, NAT_1:39,XREAL_1:2;
     hence x in Seg n by B1,FINSEQ_1:3;
   end;

BleBle1:
  for m, n being non zero Nat st
    m divides n & m is square-free holds m divides Radical n
  proof
    let m, n be non zero Nat;
    assume
ax: m divides n & m is square-free;
    for p being Prime holds p |-count m <= p |-count Radical n
    proof
      let p be Prime;
AA:   p > 1 by INT_2:def 5;
      per cases;
      suppose
        p divides m; then
AD:     p divides n by ax,NAT_1:51;
AB:     p |-count m <= 1 by ax,Zet0;
        p |-count Radical n <= 1 by Ups; then
ZH:     p |-count Radical n < 1 + 1 by NAT_1:38;       
        p divides Radical n by BlaBla,AD; then
        p |-count Radical n <> 0 by AA,NAT_3:27;       
        hence thesis by ZH,NAT_1:71,AB;
      end;
      suppose not p divides m; 
        hence thesis by AA,NAT_3:27;
      end;
    end;
    hence thesis by Gut1;
  end;

theorem BleBle:
  for k, n being non zero natural number holds
    k divides n & k is square-free iff k divides Radical n
  proof
    let k, n be non zero natural number;
OO: k is non zero Nat & n is non zero Nat by ORDINAL2:def 21;
    k divides Radical n implies k divides n & k is square-free
    proof
      assume C1: k divides Radical n;
      Radical n divides n by RadDivides;
      hence thesis by C1,Jot4,NAT_1:51;
    end;
    hence thesis by BleBle1,OO;
  end;

theorem
  for n being non zero natural number holds
  { k where k is Nat : 0 < k & k divides n & k is square-free } =
  { k where k is Nat : 0 < k & k divides Radical n }
  proof
    let n be non zero natural number;
    thus { k where k is Nat : 0 < k & k divides n & k is square-free } c=
      { k where k is Nat : 0 < k & k divides Radical n }
    proof
      let x be set;
      assume x in { k where k is Nat :
      0 < k & k divides n & k is square-free }; then
      consider k1 being Nat such that
H1:   k1 = x & 0 < k1 & k1 divides n & k1 is square-free;
      k1 divides Radical n by H1,BleBle; 
      hence thesis by H1;
    end;
    let x be set;
    assume x in { k where k is Nat : 0 < k & k divides Radical n }; then
    consider k1 being Nat such that
B1: x = k1 & 0 < k1 & k1 divides Radical n;
    Radical n divides n by RadDivides; then
B2: k1 divides n by B1,NAT_1:51;
    k1 is square-free by B1,Jot4; 
    hence thesis by B2,B1;
  end;  
