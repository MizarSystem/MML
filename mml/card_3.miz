:: K\"onig's Theorem
::  by Grzegorz Bancerek
::
:: Received April 10, 1990
:: Copyright (c) 1990 Association of Mizar Users

environ

 vocabularies ORDINAL1, CARD_1, SUBSET_1, NUMBERS, FUNCT_1, RELAT_1, FUNCOP_1,
      XBOOLE_0, ZFMISC_1, TARSKI, FUNCT_2, MCART_1, CARD_2, ORDINAL2, FINSET_1,
      ARYTM_3, ARYTM_1, CLASSES1, NAT_1, WELLORD1, WELLORD2, RELAT_2, SETFAM_1,
      PARTFUN1, FUNCT_4, FINSUB_1, CARD_3;
 notations TARSKI, XBOOLE_0, ZFMISC_1, SUBSET_1, CARD_1, NUMBERS, XCMPLX_0,
      NAT_1, RELAT_1, RELAT_2, FUNCT_1, RELSET_1, PARTFUN1, FUNCT_2, SETFAM_1,
      ORDINAL1, ORDINAL2, WELLORD1, MCART_1, WELLORD2, FUNCOP_1, FUNCT_4,
      FINSET_1, FINSUB_1, CARD_2, CLASSES1, XXREAL_0;
 constructors SETFAM_1, RELAT_2, WELLORD1, PARTFUN1, WELLORD2, FUNCOP_1,
      FUNCT_4, XREAL_0, NAT_1, CARD_2, CLASSES1, ORDINAL2, ORDINAL3, XXREAL_0,
      FINSUB_1, RELSET_1, FUNCT_1;
 registrations XBOOLE_0, SUBSET_1, SETFAM_1, RELAT_1, FUNCT_1, ORDINAL1,
      FUNCOP_1, FUNCT_4, FINSET_1, XREAL_0, CARD_1, FINSUB_1;
 requirements NUMERALS, BOOLE, SUBSET, ARITHM;
 definitions TARSKI, FUNCT_1, RELAT_2, WELLORD1, WELLORD2, XBOOLE_0, FUNCOP_1,
      RELAT_1, ORDINAL1, PARTFUN1;
 theorems TARSKI, ZFMISC_1, FUNCT_1, FUNCT_2, MCART_1, ORDINAL1, RELAT_1,
      RELAT_2, WELLORD1, WELLORD2, CARD_1, FUNCOP_1, FUNCT_5, CARD_2, CLASSES1,
      GRFUNC_1, XBOOLE_0, XBOOLE_1, SETFAM_1, FUNCT_4, PARTFUN1, RELSET_1,
      NAT_1, SUBSET_1, ORDINAL2, ORDINAL3, XREAL_1;
 schemes NAT_1, FUNCT_1, PARTFUN1, ORDINAL1, FUNCT_5, RELAT_1, XBOOLE_0,
      CLASSES1, ORDINAL2;

begin

reserve A,B,C for Ordinal,
  K,L,M,N for Cardinal,
  x,y,y1,y2,z,u,X,Y,Z,Z1,Z2 for set,
  n for Element of NAT,
  f,f1,g,h for Function,
  Q,R for Relation;

definition
  let IT be Function;
  attr IT is Cardinal-yielding means
  :Def1: for x st x in dom IT holds IT.x is Cardinal;
end;

registration
  cluster empty -> Cardinal-yielding Function;
  coherence
  proof
    let f such that
A1: f is empty;
    let x;
    thus thesis by A1;
  end;
end;

registration
  cluster Cardinal-yielding Function;
  existence
  proof
    take {};
    thus thesis;
  end;
end;

definition
  mode Cardinal-Function is Cardinal-yielding Function;
end;

reserve ff for Cardinal-Function;

registration
  let ff,X;
  cluster ff|X -> Cardinal-yielding;
  coherence
  proof
    ff|X is Cardinal-yielding
    proof
      let x;
      assume
A1:   x in dom(ff|X);
      then
A2:   (ff|X).x = ff.x by FUNCT_1:70;
      dom(ff|X) = dom ff /\ X by RELAT_1:90;
      then x in dom ff by A1,XBOOLE_0:def 4;
      hence thesis by A2,Def1;
    end;
    hence thesis;
  end;
end;

registration
  let X,K;
  cluster X --> K -> Cardinal-yielding;
  coherence
  proof
    let x;
    assume x in dom(X --> K);
    hence thesis by FUNCOP_1:13;
  end;
end;

registration
  let X,K;
  cluster X .--> K -> Cardinal-yielding;
  coherence;
end;

canceled 3;

scheme CFLambda { A()->set, F(set)->Cardinal } :
  ex ff st dom ff = A() & for x st x in A() holds ff.x = F(x)
proof
  consider f such that
A1: dom f = A() & for x st x in A() holds f.x = F(x) from FUNCT_1:sch 3;
  f is Cardinal-yielding
  proof
    let x;
    assume x in dom f;
    then f.x = F(x) by A1;
    hence thesis;
  end;
  then reconsider f as Cardinal-Function;
  take f;
  thus thesis by A1;
end;

definition
  let f;
  func Card f -> Cardinal-Function means
  :
  Def2: dom it = dom f & for x st x in dom f holds it.x = card(f.x);
  existence
  proof
    deffunc f(set) = card (f.$1);
    thus ex g being Cardinal-Function st
    dom g = dom f & for x st x in dom f holds g.x = f(x) from CFLambda;
  end;
  uniqueness
  proof
    let a1,a2 be Cardinal-Function such that
A1: dom a1 = dom f and
A2: for x st x in dom f holds a1.x = card(f.x) and
A3: dom a2 = dom f and
A4: for x st x in dom f holds a2.x = card(f.x);
    now
      let x;
      assume
A5:   x in dom f;
      then a1.x = card(f.x) by A2;
      hence a1.x = a2.x by A4,A5;
    end;
    hence thesis by A1,A3,FUNCT_1:9;
  end;
  func disjoin f -> Function means
  :
  Def3: dom it = dom f & for x st x in dom f holds it.x = [:f.x,{x}:];
  existence
  proof
    deffunc f(set) = [:f.$1,{$1}:];
    thus ex g being Function st
    dom g = dom f & for x st x in dom f holds g.x = f(x) from FUNCT_1:sch 3;
  end;
  uniqueness
  proof
    let a1,a2 be Function such that
A6: dom a1 = dom f and
A7: for x st x in dom f holds a1.x = [:f.x,{x}:] and
A8: dom a2 = dom f and
A9: for x st x in dom f holds a2.x = [:f.x,{x}:];
    now
      let x;
      assume
A10:  x in dom f;
      then a1.x = [:f.x,{x}:] by A7;
      hence a1.x = a2.x by A9,A10;
    end;
    hence thesis by A6,A8,FUNCT_1:9;
  end;
  func Union f -> set equals
  union rng f;
  correctness;
  defpred P[set] means
  ex g st $1 = g & dom g = dom f & for x st x in dom f holds g.x in f.x;
  func product f -> set means
  :
  Def5: x in it iff ex g st x = g & dom g = dom f &
  for y st y in dom f holds g.y in f.y;
  existence
  proof
    consider X such that
A11: x in X iff x in Funcs(dom f, union rng f) & P[x] from XBOOLE_0:sch 1;
    take X;
    let x;
    thus x in X implies ex g st x = g & dom g = dom f &
    for x st x in dom f holds g.x in f.x by A11;
    given g such that
A12: x = g and
A13: dom g = dom f and
A14: for x st x in dom f holds g.x in f.x;
    rng g c= union rng f
    proof
      let y;
      assume y in rng g;
      then consider z such that
A15:  z in dom g and
A16:  y = g.z by FUNCT_1:def 5;
A17:  y in f.z by A13,A14,A15,A16;
      f.z in rng f by A13,A15,FUNCT_1:def 5;
      hence thesis by A17,TARSKI:def 4;
    end;
    then x in Funcs(dom f, union rng f) by A12,A13,FUNCT_2:def 2;
    hence thesis by A11,A12,A13,A14;
  end;
  uniqueness
  proof
    let X1,X2 be set such that
A18: x in X1 iff P[x] and
A19: x in X2 iff P[x];
    thus thesis from XBOOLE_0:sch 2(A18,A19);
  end;
end;

canceled 4;

theorem Th8:
  Card ff = ff
proof
  now
    let x;
    assume x in dom ff;
    then reconsider M = ff.x as Cardinal by Def1;
    card M = M by CARD_1:def 5;
    hence ff.x = card (ff.x);
  end;
  hence thesis by Def2;
end;

canceled;

theorem
  Card (X --> Y) = X --> card Y
proof
A1: dom Card (X --> Y) = dom(X --> Y) by Def2;
  then
A2: dom Card (X --> Y) = X by FUNCOP_1:19;
A3: dom (X --> card Y) = X by FUNCOP_1:19;
  now
    let x;
    assume
A4: x in X;
    then
A5: Card (X --> Y).x = card ((X --> Y).x) by A1,A2,Def2;
    (X --> card Y).x = card Y by A4,FUNCOP_1:13;
    hence Card (X --> Y).x = (X --> card Y).x by A4,A5,FUNCOP_1:13;
  end;
  hence thesis by A2,A3,FUNCT_1:9;
end;

theorem
  disjoin {} = {}
proof
  dom disjoin {} = {} by Def3,RELAT_1:60;
  hence thesis;
end;

theorem Th12:
  disjoin (x .--> X) = x .--> [:X,{x}:]
proof
A1: dom disjoin ({x} --> X) = dom ({x} --> X) by Def3;
A2: dom ({x} --> X) = {x} by FUNCOP_1:19;
A3: dom ({x} --> [:X,{x}:]) = {x} by FUNCOP_1:19;
  now
    let y;
    assume
A4: y in {x};
    then
A5: disjoin ({x} --> X).y = [:({x} --> X).y,{y}:] by A2,Def3;
A6: ({x} --> X).y = X by A4,FUNCOP_1:13;
    ({x} --> [:X,{x}:]).y = [:X,{x}:] by A4,FUNCOP_1:13;
    hence disjoin ({x} --> X).y = ({x} --> [:X,{x}:]).y by A4,A5,A6,
    TARSKI:def 1;
  end;
  hence thesis by A1,A2,A3,FUNCT_1:9;
end;

theorem
  x in dom f & y in dom f & x <> y implies (disjoin f).x misses (disjoin f).y
proof
  assume that
A1: x in dom f and
A2: y in dom f and
A3: x <> y;
  consider z being Element of ((disjoin f).x) /\ ((disjoin f).y);
  assume
A4: ((disjoin f).x) /\ ((disjoin f).y) <> {};
A5: (disjoin f).x = [:f.x,{x}:] by A1,Def3;
A6: (disjoin f).y = [:f.y,{y}:] by A2,Def3;
A7: z in (disjoin f).x by A4,XBOOLE_0:def 4;
A8: z in (disjoin f).y by A4,XBOOLE_0:def 4;
A9: z`2 in {x} by A5,A7,MCART_1:10;
A10: z`2 in {y} by A6,A8,MCART_1:10;
  z`2 = x by A9,TARSKI:def 1;
  hence contradiction by A3,A10,TARSKI:def 1;
end;

canceled;

theorem Th15:
  Union (X --> Y) c= Y
proof
  let x;
  assume x in Union (X --> Y);
  then consider Z such that
A1: x in Z and
A2: Z in rng (X --> Y) by TARSKI:def 4;
  ex z st z in dom (X --> Y) & Z = (X --> Y).z by A2,FUNCT_1:def 5;
  hence thesis by A1,FUNCOP_1:13;
end;

theorem Th16:
  X <> {} implies Union (X --> Y) = Y
proof
  assume
A1: X <> {};
  consider x being Element of X;
  thus Union (X --> Y) c= Y by Th15;
A2: dom (X --> Y) = X by FUNCOP_1:19;
  (X --> Y).x = Y by A1,FUNCOP_1:13;
  then Y in rng (X --> Y) by A1,A2,FUNCT_1:def 5;
  hence thesis by ZFMISC_1:92;
end;

theorem
  Union (x .--> Y) = Y by Th16;

theorem Th18:
  g in product f iff dom g = dom f & for x st x in dom f holds g.x in f.x
proof
  thus g in product f implies
  dom g = dom f & for x st x in dom f holds g.x in f.x
  proof
    assume g in product f;
    then ex h being Function st
    g = h & dom h = dom f & for x st x in dom f holds h.x in f.x by Def5;
    hence thesis;
  end;
  thus thesis by Def5;
end;

theorem Th19:
  product {} = {{}}
proof
  thus product {} c= {{}}
  proof
    let x;
    assume x in product {};
    then ex g st
    x = g & dom g = dom {} & for y st y in dom {} holds g.y in {} .y by Def5;
    then x = {};
    hence thesis by TARSKI:def 1;
  end;
  let x;
  assume x in {{}};
  then
A1: x = {} by TARSKI:def 1;
  for y st y in dom {} holds {} .y in {} .y;
  hence thesis by A1,Th18;
end;

theorem Th20:
  Funcs(X,Y) = product (X --> Y)
proof
  set f = (X --> Y);
A1: dom f = X by FUNCOP_1:19;
  thus Funcs(X,Y) c= product f
  proof
    let x;
    assume x in Funcs(X,Y);
    then consider g such that
A2: x = g and
A3: dom g = X and
A4: rng g c= Y by FUNCT_2:def 2;
    now
      let y;
      assume
A5:   y in dom f;
      then
A6:   f.y = Y by FUNCOP_1:13;
      g.y in rng g by A3,A5,FUNCT_1:def 5;
      hence g.y in f.y by A4,A6;
    end;
    hence thesis by A1,A2,A3,Def5;
  end;
  let x;
  assume x in product f;
  then consider g such that
A7: x = g and
A8: dom g = dom f and
A9: for x st x in dom f holds g.x in f.x by Def5;
  rng g c= Y
  proof
    let y;
    assume y in rng g;
    then consider z such that
A10: z in dom g and
A11: y = g.z by FUNCT_1:def 5;
    y in f.z by A8,A9,A10,A11;
    hence thesis by A8,A10,FUNCOP_1:13;
  end;
  hence thesis by A1,A7,A8,FUNCT_2:def 2;
end;
defpred P[set] means $1 is Function;

definition
  let x,X;
  defpred R[set,set] means ex g st $1 = g & $2 = g.x;
  func pi(X,x) -> set means
  : Def6:
  y in it iff ex f st f in X & y = f.x;
  existence
  proof
    consider Y such that
A1: y in Y iff y in X & P[y] from XBOOLE_0:sch 1;
A2: for y st y in Y ex z st R[y,z]
    proof
      let y;
      assume y in Y;
      then reconsider y as Function by A1;
      take y.x, y;
      thus thesis;
    end;
    consider f such that
A3: dom f = Y & for y st y in Y holds R[y,f.y] from CLASSES1:sch 1(A2);
    take rng f;
    let y;
    thus y in rng f implies ex f st f in X & y = f.x
    proof
      assume y in rng f;
      then consider z such that
A4:   z in dom f and
A5:   y = f.z by FUNCT_1:def 5;
      consider g such that
A6:   z = g and
A7:   f.z = g.x by A3,A4;
      take g;
      thus thesis by A1,A3,A4,A5,A6,A7;
    end;
    given g such that
A8: g in X and
A9: y = g.x;
A10: g in Y by A1,A8;
    then ex f1 st g = f1 & f.g = f1.x by A3;
    hence thesis by A3,A9,A10,FUNCT_1:def 5;
  end;
  uniqueness
  proof
    defpred Z[set] means ex f st f in X & $1 = f.x;
    let X1,X2 be set such that
A11: y in X1 iff Z[y] and
A12: y in X2 iff Z[y];
    thus thesis from XBOOLE_0:sch 2(A11,A12);
  end;
end;

canceled;

theorem
  x in dom f & product f <> {} implies pi(product f,x) = f.x
proof
  assume that
A1: x in dom f and
A2: product f <> {};
A3: pi(product f,x) c= f.x
  proof
    let y;
    assume y in pi(product f,x);
    then ex g st g in product f & y = g.x by Def6;
    hence thesis by A1,Th18;
  end;
  f.x c= pi(product f,x)
  proof consider z being Element of product f;
    consider g such that
    z = g and
A4: dom g = dom f and
A5: for x st x in dom f holds g.x in f.x by A2,Def5;
    let y;
    deffunc f(set) = y;
    deffunc g(set) = g.$1;
    defpred C[set] means x = $1;
    consider h being Function such that
A6: dom h = dom g & for z st z in dom g holds
    (C[z] implies h.z = f(z)) & (not C[z] implies h.z = g(z)) from
    PARTFUN1:sch 1;
    assume
A7: y in f.x;
    now
      let z;
      assume
A8:   z in dom f;
      then x <> z implies g.z = h.z by A4,A6;
      hence h.z in f.z by A4,A5,A6,A7,A8;
    end;
    then
A9: h in product f by A4,A6,Th18;
    h.x = y by A1,A4,A6;
    hence thesis by A9,Def6;
  end;
  hence thesis by A3,XBOOLE_0:def 10;
end;

canceled;

theorem
  pi({},x) = {}
proof
  consider y being Element of pi({},x);
  assume not thesis;
  then ex f st f in {} & y = f.x by Def6;
  hence contradiction;
end;

theorem
  pi({g},x) = {g.x}
proof
  thus pi({g},x) c= {g.x}
  proof
    let y;
    assume y in pi({g},x);
    then consider f such that
A1: f in {g} and
A2: y = f.x by Def6;
    f = g by A1,TARSKI:def 1;
    hence thesis by A2,TARSKI:def 1;
  end;
  let y;
  assume
A3: y in {g.x};
A4: g in {g} by TARSKI:def 1;
  y = g.x by A3,TARSKI:def 1;
  hence thesis by A4,Def6;
end;

theorem
  pi({f,g},x) = {f.x,g.x}
proof
  thus pi({f,g},x) c= {f.x,g.x}
  proof
    let y;
    assume y in pi({f,g},x);
    then consider f1 such that
A1: f1 in {f,g} and
A2: y = f1.x by Def6;
    f1 = f or f1 = g by A1,TARSKI:def 2;
    hence thesis by A2,TARSKI:def 2;
  end;
  let y;
  assume
A3: y in {f.x,g.x};
A4: f in {f,g} by TARSKI:def 2;
A5: g in {f,g} by TARSKI:def 2;
  y = g.x or y = f.x by A3,TARSKI:def 2;
  hence thesis by A4,A5,Def6;
end;

theorem Th27:
  pi(X \/ Y,x) = pi(X,x) \/ pi(Y,x)
proof
  thus pi(X \/ Y,x) c= pi(X,x) \/ pi(Y,x)
  proof
    let y;
    assume y in pi(X \/ Y,x);
    then consider f such that
A1: f in X \/ Y and
A2: y = f.x by Def6;
    f in X or f in Y by A1,XBOOLE_0:def 3;
    then y in pi(X,x) or y in pi(Y,x) by A2,Def6;
    hence thesis by XBOOLE_0:def 3;
  end;
  let y;
  assume y in pi(X,x) \/ pi(Y,x);
  then
A3: y in pi(X,x) or y in pi(Y,x) by XBOOLE_0:def 3;
A4: now
    assume y in pi(X,x);
    then consider f such that
A5: f in X and
A6: y = f.x by Def6;
    f in X \/ Y by A5,XBOOLE_0:def 3;
    hence thesis by A6,Def6;
  end;
  now
    assume not y in pi(X,x);
    then consider f such that
A7: f in Y and
A8: y = f.x by A3,Def6;
    f in X \/ Y by A7,XBOOLE_0:def 3;
    hence thesis by A8,Def6;
  end;
  hence thesis by A4;
end;

theorem
  pi(X /\ Y,x) c= pi(X,x) /\ pi(Y,x)
proof
  let y;
  assume y in pi(X /\ Y,x);
  then consider f such that
A1: f in X /\ Y and
A2: y = f.x by Def6;
A3: f in X by A1,XBOOLE_0:def 4;
A4: f in Y by A1,XBOOLE_0:def 4;
A5: y in pi(X,x) by A2,A3,Def6;
  y in pi(Y,x) by A2,A4,Def6;
  hence thesis by A5,XBOOLE_0:def 4;
end;

theorem Th29:
  pi(X,x) \ pi(Y,x) c= pi(X \ Y,x)
proof
  let y;
  assume
A1: y in pi(X,x) \ pi(Y,x);
  then consider f such that
A2: f in X and
A3: y = f.x by Def6;
  not y in pi(Y,x) by A1,XBOOLE_0:def 5;
  then not f in Y by A3,Def6;
  then f in X \ Y by A2,XBOOLE_0:def 5;
  hence thesis by A3,Def6;
end;

theorem
  pi(X,x) \+\ pi(Y,x) c= pi(X \+\ Y,x)
proof
A1: pi(X,x) \ pi(Y,x) c= pi(X\Y,x) by Th29;
A2: pi(Y,x) \ pi(X,x) c= pi(Y\X,x) by Th29;
  pi(X\Y,x) \/ pi(Y\X,x) = pi((X\Y) \/ (Y\X),x) by Th27;
  hence thesis by A1,A2,XBOOLE_1:13;
end;

theorem Th31:
  card pi(X,x) c= card X
proof
  consider Y such that
A1: y in Y iff y in X & P[y] from XBOOLE_0:sch 1;
  defpred R[set,set] means ex g st $1 = g & $2 = g.x;
A2: for y st y in Y ex z st R[y,z]
  proof
    let y;
    assume y in Y;
    then reconsider y as Function by A1;
    take y.x, y;
    thus thesis;
  end;
  consider f such that
A3: dom f = Y & for y st y in Y holds R[y,f.y] from CLASSES1:sch 1(A2);
  now
    let y;
    thus y in rng f implies ex f st f in X & y = f.x
    proof
      assume y in rng f;
      then consider z such that
A4:   z in dom f and
A5:   y = f.z by FUNCT_1:def 5;
      consider g such that
A6:   z = g and
A7:   f.z = g.x by A3,A4;
      take g;
      thus thesis by A1,A3,A4,A5,A6,A7;
    end;
    given g such that
A8: g in X and
A9: y = g.x;
A10: g in Y by A1,A8;
    then ex f1 st g = f1 & f.g = f1.x by A3;
    hence y in rng f by A3,A9,A10,FUNCT_1:def 5;
  end;
  then rng f = pi(X,x) by Def6;
  then
A11: card pi(X,x) c= card Y by A3,CARD_1:28;
  Y c= X
  proof
    let x;
    thus thesis by A1;
  end;
  then card Y c= card X by CARD_1:27;
  hence thesis by A11,XBOOLE_1:1;
end;

theorem Th32:
  x in Union disjoin f implies ex y,z st x = [y,z]
proof
  assume x in Union disjoin f;
  then consider X such that
A1: x in X and
A2: X in rng disjoin f by TARSKI:def 4;
  consider y such that
A3: y in dom disjoin f and
A4: X = (disjoin f).y by A2,FUNCT_1:def 5;
  y in dom f by A3,Def3;
  then X = [:f.y,{y}:] by A4,Def3;
  hence thesis by A1,RELAT_1:def 1;
end;

theorem Th33:
  x in Union disjoin f iff x`2 in dom f & x`1 in f.(x`2) & x = [x`1,x`2]
proof
  thus x in Union disjoin f implies
  x`2 in dom f & x`1 in f.(x`2) & x = [x`1,x`2]
  proof
    assume x in Union disjoin f;
    then consider X such that
A1: x in X and
A2: X in rng disjoin f by TARSKI:def 4;
    consider y such that
A3: y in dom disjoin f and
A4: X = (disjoin f).y by A2,FUNCT_1:def 5;
A5: y in dom f by A3,Def3;
    then
A6: X = [:f.y,{y}:] by A4,Def3;
    then
A7: x`1 in f.y by A1,MCART_1:10;
    x`2 in {y} by A1,A6,MCART_1:10;
    hence thesis by A1,A5,A6,A7,MCART_1:23,TARSKI:def 1;
  end;
  assume that
A8: x`2 in dom f and
A9: x`1 in f.(x`2) and
A10: x = [x`1,x`2];
A11: (disjoin f).(x`2) = [:f.(x`2),{x`2}:] by A8,Def3;
A12: dom f = dom disjoin f by Def3;
  x`2 in {x`2} by TARSKI:def 1;
  then
A13: x in [:f.(x`2),{x`2}:] by A9,A10,ZFMISC_1:106;
  [:f.(x`2),{x`2}:] in rng disjoin f by A8,A11,A12,FUNCT_1:def 5;
  hence thesis by A13,TARSKI:def 4;
end;

theorem Th34:
  f c= g implies disjoin f c= disjoin g
proof
  assume
A1: f c= g;
  then
A2: dom f c= dom g by GRFUNC_1:8;
A3: dom disjoin f = dom f by Def3;
A4: dom disjoin g = dom g by Def3;
  now
    let x;
    assume
A5: x in dom disjoin f;
    then
A6: (disjoin f).x = [:f.x,{x}:] by A3,Def3;
    f.x = g.x by A1,A3,A5,GRFUNC_1:8;
    hence (disjoin f).x = (disjoin g).x by A2,A3,A5,A6,Def3;
  end;
  hence thesis by A2,A3,A4,GRFUNC_1:8;
end;

theorem Th35:
  f c= g implies Union f c= Union g
proof
  assume
A1: f c= g;
  then
A2: dom f c= dom g by GRFUNC_1:8;
  let x;
  assume x in Union f;
  then consider X such that
A3: x in X and
A4: X in rng f by TARSKI:def 4;
  consider y such that
A5: y in dom f and
A6: X = f.y by A4,FUNCT_1:def 5;
  f.y = g.y by A1,A5,GRFUNC_1:8;
  then X in rng g by A2,A5,A6,FUNCT_1:def 5;
  hence thesis by A3,TARSKI:def 4;
end;

theorem Th36:
  Union disjoin (Y --> X) = [:X,Y:]
proof
  set f = Y --> X;
A1: dom f = Y by FUNCOP_1:19;
  thus Union disjoin f c= [:X,Y:]
  proof
    let x;
    assume x in Union disjoin f;
    then consider Z such that
A2: x in Z and
A3: Z in rng disjoin f by TARSKI:def 4;
    consider y such that
A4: y in dom disjoin f and
A5: Z = (disjoin f).y by A3,FUNCT_1:def 5;
A6: y in Y by A1,A4,Def3;
    then
A7: Z = [:f.y,{y}:] by A1,A5,Def3;
A8: f.y = X by A6,FUNCOP_1:13;
    {y} c= Y by A6,ZFMISC_1:37;
    then Z c= [:X,Y:] by A7,A8,ZFMISC_1:118;
    hence thesis by A2;
  end;
  let x1,x2 be set;
  assume
A9: [x1,x2] in [:X,Y:];
  then
A10: x1 in X by ZFMISC_1:106;
A11: x2 in Y by A9,ZFMISC_1:106;
  then
A12: f.x2 = X by FUNCOP_1:13;
A13: (disjoin f).(x2) = [:f.x2,{x2}:] by A1,A11,Def3;
A14: x2 in dom disjoin f by A1,A11,Def3;
  x2 in {x2} by TARSKI:def 1;
  then
A15: [x1,x2] in [:f.x2,{x2}:] by A10,A12,ZFMISC_1:106;
  [:f.x2,{x2}:] in rng disjoin f by A13,A14,FUNCT_1:def 5;
  hence thesis by A15,TARSKI:def 4;
end;

theorem Th37:
  product f = {} iff {} in rng f
proof
  thus product f = {} implies {} in rng f
  proof
    assume that
A1: product f = {} and
A2: not {} in rng f;
A3: now
      assume dom f = {};
      then for x st x in dom f holds f.x in f.x;
      hence thesis by A1,Def5;
    end;
    now
      assume dom f <> {};
      then reconsider M = rng f as non empty set by RELAT_1:65;
      X in M implies X <> {} by A2;
      then consider f1 such that
      dom f1 = M and
A4:   for X st X in M holds f1.X in X by WELLORD2:28;
      deffunc g(set) = f1.(f.$1);
      consider g such that
      A5:   dom
 g = dom f & for x st x in dom f holds g.x = g(x) from FUNCT_1:sch 3;
      now
        let x;
        assume
A6:     x in dom f;
        then
A7:     f.x in M by FUNCT_1:def 5;
        g.x = f1.(f.x) by A5,A6;
        hence g.x in f.x by A4,A7;
      end;
      hence thesis by A1,A5,Def5;
    end;
    hence thesis by A3;
  end;
  assume {} in rng f;
  then
A8: ex x st ( x in dom f)&( {} = f.x) by FUNCT_1:def 5;
  assume
A9: product f <> {};
  consider y being Element of product f;
  ex g st ( y = g)&( dom g = dom f)&( for x st x in dom f
  holds g.x in f.x) by A9,Def5;
  hence contradiction by A8;
end;

theorem Th38:
  dom f = dom g & (for x st x in dom f holds f.x c= g.x) implies
  product f c= product g
proof
  assume that
A1: dom f = dom g and
A2: for x st x in dom f holds f.x c= g.x;
  let x;
  assume x in product f;
  then consider f1 such that
A3: x = f1 and
A4: dom f1 = dom f and
A5: for x st x in dom f holds f1.x in f.x by Def5;
  now
    let x;
    assume
A6: x in dom g;
    then
A7: f1.x in f.x by A1,A5;
    f.x c= g.x by A1,A2,A6;
    hence f1.x in g.x by A7;
  end;
  hence thesis by A1,A3,A4,Def5;
end;

reserve F,G for Cardinal-Function;

theorem
  for x st x in dom F holds card (F.x) = F.x
proof
  let x;
  assume x in dom F;
  then reconsider M = F.x as Cardinal by Def1;
  card M = M by CARD_1:def 5;
  hence thesis;
end;

theorem Th40:
  for x st x in dom F holds card ((disjoin F).x) = F.x
proof
  let x;
  assume
A1: x in dom F;
  then reconsider M = F.x as Cardinal by Def1;
  M,[:M,{x}:] are_equipotent by CARD_2:13;
  then M = card [:M,{x}:] by CARD_1:def 5;
  hence thesis by A1,Def3;
end;

definition
  let F;
  func Sum F -> Cardinal equals
  card Union disjoin F;
  correctness;
  func Product F -> Cardinal equals
  card product F;
  correctness;
end;

canceled 2;

theorem Th43:
  dom F = dom G & (for x st x in dom F holds F.x c= G.x) implies Sum F c= Sum
  G
proof
  assume that
A1: dom F = dom G and
A2: for x st x in dom F holds F.x c= G.x;
  Union disjoin F c= Union disjoin G
  proof
    let x;
    assume x in Union disjoin F;
    then consider X such that
A3: x in X and
A4: X in rng disjoin F by TARSKI:def 4;
    consider y such that
A5: y in dom disjoin F and
A6: X = (disjoin F).y by A4,FUNCT_1:def 5;
A7: y in dom F by A5,Def3;
    then
A8: F.y c= G.y by A2;
A9: X = [:F.y,{y}:] by A6,A7,Def3;
A10: (disjoin G).y = [:G.y,{y}:] by A1,A7,Def3;
A11: y in dom disjoin G by A1,A7,Def3;
A12: X c= [:G.y,{y}:] by A8,A9,ZFMISC_1:118;
    [:G.y,{y}:] in rng disjoin G by A10,A11,FUNCT_1:def 5;
    hence thesis by A3,A12,TARSKI:def 4;
  end;
  hence thesis by CARD_1:27;
end;

theorem
  {} in rng F iff Product F = 0
proof
  thus {} in rng F implies Product F = 0 by Th37,CARD_1:47;
  assume Product F = 0;
  then product F = {};
  hence thesis by Th37;
end;

theorem
  dom F = dom G & (for x st x in dom F holds F.x c= G.x) implies
  Product F c= Product G by Th38,CARD_1:27;

theorem
  F c= G implies Sum F c= Sum G
proof
  assume F c= G;
  then disjoin F c= disjoin G by Th34;
  hence thesis by Th35,CARD_1:27;
end;

theorem
  F c= G & not 0 in rng G implies Product F c= Product G
proof
  assume
A1: F c= G;
  then
A2: dom F c= dom G by GRFUNC_1:8;
  assume
A3: not 0 in rng G;
  deffunc f(Function) = $1|dom F;
  consider f such that
A4: dom f = product G & for g st g in product G holds f.g = f(g)
  from FUNCT_5:sch 1;
  product F c= rng f
  proof
    let x;
    assume x in product F;
    then consider g such that
A5: x = g and
A6: dom g = dom F and
A7: for x st x in dom F holds g.x in F.x by Def5;
A8: product G <> {} by A3,Th37;
    consider y being Element of product G;
    consider h such that
    y = h
    and dom h = dom G and
A9: for x st x in dom G holds h.x in G.x by A8,Def5;
    deffunc f(set) = g.$1;
    deffunc g(set) = h.$1;
    defpred C[set] means $1 in dom F;
    consider f1 such that
A10: dom f1 = dom G & for x st x in dom G holds
    (C[x] implies f1.x = f(x)) & (not C[x] implies f1.x = g(x))
    from PARTFUN1:sch 1;
    now
      let z such that
A11:  z in dom G;
A12:  now
        assume
A13:    z in dom F;
        then
A14:    f1.z = g.z by A10,A11;
        g.z in F.z by A7,A13;
        hence f1.z in G.z by A1,A13,A14,GRFUNC_1:8;
      end;
      not z in dom F implies f1.z = h.z by A10,A11;
      hence f1.z in G.z by A9,A11,A12;
    end;
    then
A15: f1 in product G by A10,Def5;
    then
A16: f.f1 = f1|dom F by A4;
A17: dom(f1|dom F) = dom F by A2,A10,RELAT_1:91;
    now
      let z;
      assume
A18:  z in dom F;
      then (f1|dom F).z = f1.z by A17,FUNCT_1:70;
      hence (f1|dom F).z = g.z by A2,A10,A18;
    end;
    then f.f1 = g by A6,A16,A17,FUNCT_1:9;
    hence thesis by A4,A5,A15,FUNCT_1:def 5;
  end;
  hence thesis by A4,CARD_1:28;
end;

theorem
  Sum({} --> K) = 0
proof dom ({} --> K) = {};
  then dom disjoin ({} --> K) = {} by Def3;
  hence thesis by CARD_1:47,RELAT_1:65,ZFMISC_1:2;
end;

theorem
  Product ({} --> K) = 1 by Th19,CARD_1:50;

theorem
  Sum(x .--> K) = K
proof
  thus Sum(x .--> K) = card Union (x .--> [:K,{x}:]) by Th12
    .= card [:K,{x}:] by Th16
    .= card K by CARD_2:13
    .= K by CARD_1:def 5;
end;

theorem
  Product(x .--> K) = K
proof
  thus Product(x .--> K) = card Funcs({x},K) by Th20
    .= card K by FUNCT_5:65
    .= K by CARD_1:def 5;
end;

theorem
  Sum(M --> N) = M*`N
proof
  thus Sum(M --> N) = card [:N,M:] by Th36
    .= M*`N by CARD_2:def 2;
end;

theorem
  Product(N --> M) = exp(M,N)
proof
  set F = N --> M;
  exp(M,N) = card Funcs(N,M) by CARD_2:def 3;
  hence thesis by Th20;
end;

theorem Th54:
  card Union f c= Sum Card f
proof
A1: now
    assume dom f = {};
    then {} = Union f by RELAT_1:65,ZFMISC_1:2;
    hence thesis;
  end;
  now
    assume
A2: dom f <> {};
    defpred P[set,set] means
    x in $2 iff x in Funcs(card $1,$1) & ex g st x = g & rng g = $1;
    defpred W[set,set] means P[f.$1,$2];
A3: for x st x in dom f ex y st W[x,y]
    proof
      let x such that x in dom f;
      defpred A[set] means ex g st $1 = g & rng g = f.x;
      consider Y such that
A4:   z in Y iff z in Funcs(card (f.x),f.x) & A[z] from XBOOLE_0:sch 1;
      take Y;
      thus thesis by A4;
    end;
    consider k being Function such that
A5: dom k = dom f & for x st x in dom f holds W[x,k.x] from CLASSES1:sch 1
    (A3);
    reconsider M = rng k as non empty set by A2,A5,RELAT_1:65;
    now
      let X;
      assume X in M;
      then consider x such that
A6:   x in dom k and
A7:   X = k.x by FUNCT_1:def 5;
      card(f.x),f.x are_equipotent by CARD_1:def 5;
      then consider g such that
      g is one-to-one and
A8:   dom g = card(f.x) and
A9:   rng g = f.x by WELLORD2:def 4;
      g in Funcs(card(f.x),f.x) by A8,A9,FUNCT_2:def 2;
      hence X <> {} by A5,A6,A7,A9;
    end;
    then consider FF being Function such that
    dom FF = M and
A10: for X st X in M holds FF.X in X by WELLORD2:28;
    set DD = union rng disjoin Card f;
    defpred S[set,set] means ex g st g = FF.(k.$1`2) & $2 = g.$1`1;
A11: for x st x in DD ex y st S[x,y]
    proof
      let x;
      assume x in DD;
      then consider X such that
A12:  x in X and
A13:  X in rng disjoin Card f by TARSKI:def 4;
      consider y such that
A14:  y in dom disjoin Card f and
A15:  X = (disjoin Card f).y by A13,FUNCT_1:def 5;
A16:  dom disjoin Card f = dom Card f by Def3;
A17:  dom Card f = dom f by Def2;
      X = [:(Card f).y,{y}:] by A14,A15,A16,Def3;
      then x`2 in {y} by A12,MCART_1:10;
      then
A18:  x`2 in dom f by A14,A16,A17,TARSKI:def 1;
      then k.x`2 in M by A5,FUNCT_1:def 5;
      then FF.(k.x`2) in k.x`2 by A10;
      then FF.(k.x`2) in Funcs(card (f.x`2),f.x`2) by A5,A18;
      then consider g such that
A19:  FF.(k.x`2) = g
      and dom g = card (f.x`2)
      and rng g c= f.x`2 by FUNCT_2:def 2;
      take g.x`1, g;
      thus thesis by A19;
    end;
    consider t being Function such that
A20: dom t = DD & for x st x in DD holds S[x,t.x] from CLASSES1:sch 1
    (A11);
    union rng f c= rng t
    proof
      let x;
      assume x in union rng f;
      then consider X such that
A21:  x in X and
A22:  X in rng f by TARSKI:def 4;
      consider y such that
A23:  y in dom f and
A24:  X = f.y by A22,FUNCT_1:def 5;
      k.y in M by A5,A23,FUNCT_1:def 5;
      then
A25:  FF.(k.y) in k.y by A10;
      then FF.(k.y) in Funcs(card(f.y),f.y) by A5,A23;
      then consider g such that
A26:  FF.(k.y) = g and
A27:  dom g = card(f.y)
      and rng g c= f.y by FUNCT_2:def 2;
      ex g st FF.(k.y) = g & rng g = f.y by A5,A23,A25;
      then consider z such that
A28:  z in dom g and
A29:  x = g.z by A21,A24,A26,FUNCT_1:def 5;
A30:  (Card f).y = card(f.y) by A23,Def2;
A31:  dom Card f = dom f by Def2;
      then
A32:  (disjoin Card f).y = [:dom g,{y}:] by A23,A27,A30,Def3;
A33:  y in {y} by TARSKI:def 1;
A34:  dom disjoin Card f = dom f by A31,Def3;
A35:  [z,y] in [:dom g,{y}:] by A28,A33,ZFMISC_1:106;
      [:dom g,{y}:] in rng disjoin Card f by A23,A32,A34,FUNCT_1:def 5;
      then
A36:  [z,y] in DD by A35,TARSKI:def 4;
A37:  [z,y]`1 = z by MCART_1:7;
      [z,y]`2 = y by MCART_1:7;
      then ex g st g = FF.(k.y) & t.[z,y] = g.z by A20,A36,A37;
      hence thesis by A20,A26,A29,A36,FUNCT_1:def 5;
    end;
    hence thesis by A20,CARD_1:28;
  end;
  hence thesis by A1;
end;

theorem
  card Union F c= Sum F
proof Card F = F by Th8;
  hence thesis by Th54;
end;

::
:: K\"onig's theorem
::

theorem
  dom F = dom G & (for x st x in dom F holds F.x in G.x) implies
  Sum F in Product G
proof
  assume that
A1: dom F = dom G and
A2: for x st x in dom F holds F.x in G.x;
  deffunc f(set) = (G.$1)\(F.$1);
  consider f such that
A3: dom f = dom F & for x st x in dom F holds f.x = f(x) from FUNCT_1:sch 3;
  now
    assume {} in rng f;
    then consider x such that
A4: x in dom f and
A5: {} = f.x by FUNCT_1:def 5;
    reconsider Fx = F.x, Gx = G.x as Cardinal by A1,A3,A4,Def1;
A6: Fx in Gx by A2,A3,A4;
    not Fx in Fx;
    then Fx in Gx \ Fx by A6,XBOOLE_0:def 5;
    hence contradiction by A3,A4,A5;
  end;
  then
A7: product f <> {} by Th37;
  consider a being Element of product f;
  consider h being Function such that
  a = h
  and dom h = dom f and
A8: for x st x in dom f holds h.x in f.x by A7,Def5;
  defpred P[set,Function] means dom $2 = dom F & for x st x in dom F holds
  ($1`2 = x implies $2.x = $1`1) & ($1`2 <> x implies $2.x = h.x);
  defpred R[set,set] means ex g st $2 = g & P[$1,g];
A9: for x st x in Union disjoin F ex y st R[x,y]
  proof
    let x such that x in Union disjoin F;
    deffunc f(set) = x`1;
    deffunc g(set) = h.$1;
    defpred C[set] means $1 = x`2;
    consider g such that
A10: dom g = dom F & for u st u in dom F holds
    (C[u] implies g.u = f(u)) & (not C[u] implies g.u = g(u))
    from PARTFUN1:sch 1;
    reconsider y = g as set;
    take y,g;
    thus thesis by A10;
  end;
  consider f1 such that
A11: dom f1 = Union disjoin F & for x st x in Union disjoin F holds R[x,f1.x]
  from CLASSES1:sch 1(A9);
A12: f1 is one-to-one
  proof
    let x,y;
    assume that
A13: x in dom f1 and
A14: y in dom f1 and
A15: f1.x = f1.y and
A16: x <> y;
    consider g1 being Function such that
A17: f1.x = g1 and
A18: P[x,g1] by A11,A13;
    consider g2 being Function such that
A19: f1.y = g2 and
A20: P[y,g2] by A11,A14;
A21: x`2 in dom F by A11,A13,Th33;
A22: y`2 in dom F by A11,A14,Th33;
A23: y`1 in F.(y`2) by A11,A14,Th33;
A24: ex x1,x2 being set st x = [x1,x2] by A11,A13,Th32;
A25: ex x1,x2 being set st y = [x1,x2] by A11,A14,Th32;
A26: x = [x`1,x`2] by A24,MCART_1:8;
A27: y = [y`1,y`2] by A25,MCART_1:8;
A28: now
      assume
A29:  x`1 = y`1;
A30:  g2.(y`2) = y`1 by A20,A22;
A31:  g1.(y`2) = h.(y`2) by A16,A18,A22,A26,A27,A29;
A32:  f.(y`2) = (G.(y`2))\(F.(y`2)) by A3,A22;
      h.(y`2) in f.(y`2) by A3,A8,A22;
      hence contradiction by A15,A17,A19,A23,A30,A31,A32,XBOOLE_0:def 5;
    end;
A33: x`2 = y`2 implies g1.(x`2) = x`1 & g2.(x`2) = y`1 by A18,A20,A21;
A34: g1.(y`2) = y`1 by A15,A17,A19,A20,A22;
A35: g1.(y`2) = h.(y`2) by A15,A17,A18,A19,A22,A28,A33;
A36: f.(y`2) = (G.(y`2))\(F.(y`2) ) by A3,A22;
    h.(y`2) in f.(y`2) by A3,A8,A22;
    hence contradiction by A23,A34,A35,A36,XBOOLE_0:def 5;
  end;
  rng f1 c= product G
  proof
    let x;
    assume x in rng f1;
    then consider y such that
A37: y in dom f1 and
A38: x = f1.y by FUNCT_1:def 5;
    consider g such that
A39: f1.y = g and
A40: P[y,g] by A11,A37;
    now
      let x;
      assume
A41:  x in dom G;
      then reconsider Gx = G.x, Fx = F.x as Cardinal by A1,Def1;
A42:  Fx in Gx by A1,A2,A41;
A43:  y`2 = x implies g.x = y`1 by A1,A40,A41;
A44:  y`2 <> x implies g.x = h.x by A1,A40,A41;
A45:  h.x in f.x by A1,A3,A8,A41;
A46:  f.x = Gx \ Fx by A1,A3,A41;
A47:  y`1 in F.(y`2) by A11,A37,Th33;
      Fx c= Gx by A42,CARD_1:13;
      hence g.x in G.x by A43,A44,A45,A46,A47;
    end;
    hence thesis by A1,A38,A39,A40,Def5;
  end;
  then
A48: Sum F c= Product G by A11,A12,CARD_1:26;
  now
    assume Sum F = Product G;
    then Union disjoin F,product G are_equipotent by CARD_1:21;
    then consider f such that
    f is one-to-one and
A49: dom f = Union disjoin F and
A50: rng f = product G
    by WELLORD2:def 4;
    deffunc f(set) = G.$1 \ pi(f.:((disjoin F).$1),$1);
    consider K being Function such that
A51: dom K = dom F & for x st x in dom F holds K.x = f(x) from FUNCT_1:sch 3;
    now
      assume {} in rng K;
      then consider x such that
A52:  x in dom F and
A53:  {} = K.x by A51,FUNCT_1:def 5;
A54:  K.x = G.x \ pi(f.:((disjoin F).x),x) by A51,A52;
      reconsider Fx = F.x, Gx = G.x as Cardinal by A1,A52,Def1;
A55:  card pi(f.:((disjoin F).x),x) c= card (f.:((disjoin F).x)) by Th31;
A56:  card (f.:((disjoin F).x)) c= card ((disjoin F).x) by CARD_2:3;
      card ((disjoin F).x) = Fx by A52,Th40;
      then
A57:  card pi(f.:((disjoin F).x),x) c= Fx by A55,A56,XBOOLE_1:1;
A58:  Fx in Gx by A2,A52;
      card Gx = Gx by CARD_1:def 5;
      hence contradiction by A53,A54,A57,A58,CARD_2:4,ORDINAL1:22;
    end;
    then
A59: product K <> {} by Th37;
    consider t being Element of product K;
    consider g such that
A60: t = g
    and dom g = dom K and
A61: for x st x in dom K holds g.x in K.x by A59,Def5;
    now
      let x;
      assume x in dom K;
      then K.x = G.x \ pi(f.:((disjoin F).x),x) by A51;
      hence K.x c= G.x;
    end;
    then product K c= product G by A1,A51,Th38;
    then t in product G by A59,TARSKI:def 3;
    then consider y such that
A62: y in dom f and
A63: t = f.y by A50,FUNCT_1:def 5;
    consider X such that
A64: y in X and
A65: X in rng disjoin F by A49,A62,TARSKI:def 4;
    consider x such that
A66: x in dom disjoin F and
A67: X = (disjoin F).x by A65,FUNCT_1:def 5;
    g in f.:X by A60,A62,A63,A64,FUNCT_1:def 12;
    then
A68: g.x in pi(f.:((disjoin F).x),x) by A67,Def6;
A69: x in dom F by A66,Def3;
A70: not g.x in G.x \ pi(f.:((disjoin F).x),x) by A68,XBOOLE_0:def 5;
    g.x in (K.x) by A51,A61,A69;
    hence contradiction by A51,A69,A70;
  end;
  hence thesis by A48,CARD_1:13;
end;

scheme FinRegularity { X()->finite set, P[set,set] }:
  ex x st x in X() & for y st y in X() & y <> x holds not P[y,x]
provided
A1: X() <> {} and
A2: for x,y st P[x,y] & P[y,x] holds x = y and
A3: for x,y,z st P[x,y] & P[y,z] holds P[x,z]
proof
  defpred Q[Element of NAT] means
  for X being finite set st card X = $1 & X <> {}
  ex x st x in X & for y st y in X & y <> x holds not P[y,x];
A4: Q[0];
A5: Q[n] implies Q[n+1]
  proof
    assume
A6: for X being finite set st card X = n & X <> {}
    ex x st x in X & for y st y in X & y <> x holds not P[y,x];
    let X be finite set;
    assume that
A7: card X = n+1 and
A8: X <> {};
    consider x being Element of X;
A9: now
      assume X\{x} = {};
      then
A10:  X c= {x} by XBOOLE_1:37;
      thus thesis
      proof
        take x;
        thus x in X by A8;
        thus thesis by A10,TARSKI:def 1;
      end;
    end;
    now
      assume
A11:  X\{x} <> {};
      {x} c= X by A8,ZFMISC_1:37;
      then
A12:  card (X\{x}) = (n+1) - card {x} by A7,CARD_2:63;
      card {x} = 1 by CARD_1:50;
      then consider y such that
A13:  y in X\{x} and
A14:  for z st z in X\{x} & z <> y holds not P[z,y] by A6,A11,A12;
A15:  now
        assume
A16:    P[x,y];
        thus thesis
        proof
          take x;
          thus x in X by A8;
          let z;
          assume that
A17:      z in X and
A18:      z <> x and
A19:      P[z,x];
          not z in {x} by A18,TARSKI:def 1;
          then
A20:      z in X \ {x} by A17,XBOOLE_0:def 5;
A21:      not y in {x} by A13,XBOOLE_0:def 5;
A22:      z = y by A3,A14,A16,A19,A20;
          y <> x by A21,TARSKI:def 1;
          hence contradiction by A2,A16,A19,A22;
        end;
      end;
      now
        assume
A23:    not P[x,y];
        thus thesis
        proof
          take y;
          thus y in X by A13;
          let z such that
A24:      z in X and
A25:      z <> y;
          z in {x} or not z in {x};
          then z = x or z in X \ {x} by A24,TARSKI:def 1,XBOOLE_0:def 5;
          hence thesis by A14,A23,A25;
        end;
      end;
      hence thesis by A15;
    end;
    hence thesis by A9;
  end;
A26: Q[n] from NAT_1:sch 1(A4,A5);
  card X() = card X();
  hence thesis by A1,A26;
end;

scheme MaxFinSetElem { X()->finite set, P[set,set] }:
  ex x st x in X() & for y st y in X() holds P[x,y]
provided
A1: X() <> {} and
A2: for x,y holds P[x,y] or P[y,x] and
A3: for x,y,z st P[x,y] & P[y,z] holds P[x,z]
proof
  defpred Q[Element of NAT] means
  for X being finite set st card X = $1 & X <> {}
  ex x st x in X & for y st y in X holds P[x,y];
A4: Q[0];
A5: Q[n] implies Q[n+1]
  proof
    assume
A6: for X being finite set st card X = n & X <> {}
    ex x st x in X & for y st y in X holds P[x,y];
    let X be finite set;
    assume that
A7: card X = n+1 and
A8: X <> {};
    consider x being Element of X;
A9: now
      assume X\{x} = {};
      then
A10:  X c= {x} by XBOOLE_1:37;
      thus thesis
      proof
        take x;
        thus x in X by A8;
        let y;
        assume y in X;
        then y = x by A10,TARSKI:def 1;
        hence thesis by A2;
      end;
    end;
    now
      assume
A11:  X\{x} <> {};
      {x} c= X by A8,ZFMISC_1:37;
      then
A12:  card (X\{x}) = (n+1) - card {x} by A7,CARD_2:63;
      card {x} = 1 by CARD_1:50;
      then consider y such that
A13:  y in X\{x} and
A14:  for z st z in X\{x} holds P[y,z] by A6,A11,A12;
A15:  P[x,y] or P[y,x] by A2;
A16:  P[x,x] by A2;
      P[y,y] by A2;
      then consider z such that
A17:  z = x or z = y and
A18:  P[z,x] and
A19:  P[z,y] by A15,A16;
      thus thesis
      proof
        take z;
        thus z in X by A13,A17;
        let u;
A20:    u in {x} or not u in {x};
        assume u in X;
        then u = x or u in X\{x} by A20,TARSKI:def 1,XBOOLE_0:def 5;
        then P[z,u] or P[y,u] by A14,A18;
        hence thesis by A3,A19;
      end;
    end;
    hence thesis by A9;
  end;
A21: Q[n] from NAT_1:sch 1(A4,A5);
  card X() = card X();
  hence thesis by A1,A21;
end;

scheme FuncSeparation { X()->set, F(set)->set, P[set,set] }:
  ex f st dom f = X() &
  for x st x in X() for y holds y in f.x iff y in F(x) & P[x,y]
proof
  defpred Q[set,set] means y in $2 iff y in F($1) & P[$1,y];
A1: for x st x in X() ex y st Q[x,y]
  proof
    let x such that x in X();
    defpred R[set] means P[x,$1];
    consider Y such that
A2: y in Y iff y in F(x) & R[y] from XBOOLE_0:sch 1;
    take Y;
    thus thesis by A2;
  end;
  thus ex f st dom f = X() &
  for x st x in X() holds Q[x,f.x] from CLASSES1:sch 1(A1);
end;

Lm1: Rank n is finite implies Rank (n+1) is finite
proof
  n+1 = succ n by NAT_1:39;
  then Rank (n+1) = bool Rank n by CLASSES1:34;
  hence thesis;
end;

theorem
  Rank n is finite
proof
  defpred P[Element of NAT] means Rank $1 is finite;
A1: P[0] by CLASSES1:33;
A2: for n st P[n] holds P[n+1] by Lm1;
  for n holds P[n] from NAT_1:sch 1(A1,A2);
  hence thesis;
end;

Lm2: x in field R implies ex y st [x,y] in R or [y,x] in R
proof
  assume x in field R;
  then x in dom R or x in rng R by XBOOLE_0:def 3;
  hence thesis by RELAT_1:def 4,def 5;
end;

theorem Th58:
  X is finite implies card X in card omega
proof
  assume
  X is finite;
  then ex n being Nat st ( card X = card n) by CARD_1:86;
  hence thesis by CARD_1:84;
end;

theorem Th59:
  card A in card B implies A in B
proof
  assume that
A1: card A in card B and
A2: not A in B;
  not card B c= card A by A1,CARD_1:14;
  hence contradiction by A2,CARD_1:27,ORDINAL1:26;
end;

theorem Th60:
  card A in M implies A in M
proof
  card M = M by CARD_1:def 5;
  hence thesis by Th59;
end;

theorem Th61:
  X is c=-linear implies
  ex Y st Y c= X & union Y = union X & for Z st Z c= Y & Z <> {}
  ex Z1 st Z1 in Z & for Z2 st Z2 in Z holds Z1 c= Z2
proof
  assume
A1: X is c=-linear;
  consider R such that
A2: R well_orders X by WELLORD2:26;
A3: R|_2 X is well-ordering by A2,WELLORD2:25;
A4: field(R|_2 X) = X by A2,WELLORD2:25;
  R|_2 X, RelIncl order_type_of R|_2 X are_isomorphic by A3,WELLORD2:def 2;
  then RelIncl order_type_of R|_2 X, R|_2 X are_isomorphic by WELLORD1:50;
  then consider f such that
A5: f is_isomorphism_of RelIncl order_type_of R|_2 X, R|_2 X
  by WELLORD1:def 8;
  field RelIncl order_type_of R|_2 X = order_type_of R|_2 X by WELLORD2:def 1;
  then
A6: dom f = order_type_of R|_2 X by A5,WELLORD1:def 7;
A7: rng f = X by A4,A5,WELLORD1:def 7;
  defpred P[set] means for A,B st B in A & $1 = A holds f.B c= f.A;
  consider Y such that
A8: x in Y iff x in dom f & P[x] from XBOOLE_0:sch 1;
  take Z = f.:Y;
  thus Z c= X by A7,RELAT_1:144;
  thus union Z c= union X by A7,RELAT_1:144,ZFMISC_1:95;
  thus union X c= union Z
  proof
    let x;
    assume x in union X;
    then consider Z1 such that
A9: x in Z1 and
A10: Z1 in X by TARSKI:def 4;
    consider y such that
A11: y in dom f and
A12: Z1 = f.y by A7,A10,FUNCT_1:def 5;
    reconsider y as Ordinal by A6,A11;
    defpred P[Ordinal] means $1 c= y & x in f.$1;
A13: ex A st P[A] by A9,A12;
    consider A such that
A14: P[A] & for B st P[B] holds A c= B from ORDINAL1:sch 1(A13);
A15: A in dom f by A6,A11,A14,ORDINAL1:22;
    now
      let B,C;
      assume that
A16:  C in B and
A17:  A = B;
A18:  C in dom f by A6,A11,A14,A16,A17,ORDINAL1:19;
A19:  not C c= y or not x in f.C by A14,A16,A17,ORDINAL1:7;
A20:  f.A in X by A7,A15,FUNCT_1:def 5;
      f.C in X by A7,A18,FUNCT_1:def 5;
      then f.C,f.A are_c=-comparable by A1,A20,ORDINAL1:def 9;
      then f.C c= f.A or f.A c= f.C by XBOOLE_0:def 9;
      hence f.C c= f.B by A14,A16,A17,A19,ORDINAL1:def 2;
    end;
    then A in Y by A8,A15;
    then f.A in Z by A15,FUNCT_1:def 12;
    hence thesis by A14,TARSKI:def 4;
  end;
  let V be set;
  assume that
A21: V c= Z and
A22: V <> {};
  consider x being Element of V;
  x in Z by A21,A22,TARSKI:def 3;
  then consider y such that
A23: y in dom f and
A24: y in Y and
A25: x = f.y by FUNCT_1:def 12;
  reconsider y as Ordinal by A6,A23;
  defpred P[Ordinal] means $1 in Y & f.$1 in V;
  y = y;
  then
A26: ex A st P[A] by A22,A24,A25;
  consider A such that
A27: P[A] & for B st P[B] holds A c= B from ORDINAL1:sch 1(A26);
  take Z1 = f.A;
  thus Z1 in V by A27;
  let Z2;
  assume
A28: Z2 in V;
  then consider y such that
A29: y in dom f and
A30: y in Y and
A31: Z2 = f.y by A21,FUNCT_1:def 12;
  reconsider y as Ordinal by A6,A29;
  A c< y iff A c= y & A <> y by XBOOLE_0:def 8;
  then A = y or A in y by A27,A28,A30,A31,ORDINAL1:21;
  hence thesis by A8,A30,A31;
end;

theorem
  (for Z st Z in X holds card Z in M) & X is c=-linear implies
  card union X c= M
proof
  assume that
A1: Z in X implies card Z in M and
A2: X is c=-linear;
  consider XX being set such that
A3: XX c= X and
A4: union XX = union X and
A5: for Z st Z c= XX & Z <> {}
  ex Z1 st Z1 in Z & for Z2 st Z2 in Z holds Z1 c= Z2 by A2,Th61;
A6: now
    let Z1,Z2;
    assume that
A7: Z1 in XX and
A8: Z2 in XX;
    Z1,Z2 are_c=-comparable by A2,A3,A7,A8,ORDINAL1:def 9;
    hence Z1 c= Z2 or Z2 c= Z1 by XBOOLE_0:def 9;
  end;
  consider R such that
A9: R well_orders union X by WELLORD2:26;
A10: R is_reflexive_in union X by A9,WELLORD1:def 5;
A11: R is_transitive_in union X by A9,WELLORD1:def 5;
A12: R is_antisymmetric_in union X by A9,WELLORD1:def 5;
A13: R is_connected_in union X by A9,WELLORD1:def 5;
  defpred P[set,set] means ((ex Z1 st Z1 in XX & $1 in Z1 & not $2 in Z1) or
  (for Z1 st Z1 in XX holds $1 in Z1 iff $2 in Z1) & [$1,$2] in R);
  consider Q such that
A14: [x,y] in Q iff x in union X & y in union X & P[x,y] from RELAT_1:sch 1;
A15: field Q = union X
  proof
    thus field Q c= union X
    proof
      let x;
      assume x in field Q;
      then ex y st [x,y] in Q or [y,x] in Q by Lm2;
      hence thesis by A14;
    end;
    let x;
    assume
A16: x in union X;
    then
A17: [x,x] in R by A10,RELAT_2:def 1;
    for Z1 st Z1 in XX holds x in Z1 iff x in Z1;
    then [x,x] in Q by A14,A16,A17;
    hence thesis by RELAT_1:30;
  end;
A18: Q is reflexive
  proof
    let x;
    assume
A19: x in field Q;
    then
A20: [x,x] in R by A10,A15,RELAT_2:def 1;
    for Z1 st Z1 in XX holds x in Z1 iff x in Z1;
    hence thesis by A14,A15,A19,A20;
  end;
A21: Q is transitive
  proof
    let x,y,z such that
A22: x in field Q and
A23: y in field Q and
A24: z in field Q and
A25: [x,y] in Q and
A26: [y,z] in Q;
A27: now
      given Z1 such that
A28:  Z1 in XX and
A29:  x in Z1 and
A30:  not y in Z1;
      given Z2 such that
A31:  Z2 in XX and
A32:  y in Z2 and
A33:  not z in Z2;
      Z1 c= Z2 or Z2 c= Z1 by A6,A28,A31;
      hence thesis by A14,A15,A22,A24,A29,A30,A31,A32,A33;
    end;
A34: now
      given Z1 such that
A35:  Z1 in XX and
A36:  x in Z1 and
A37:  not y in Z1;
      assume that
A38:  for Z1 st Z1 in XX holds y in Z1 iff z in Z1
      and [y,z] in R;
      not z in Z1 by A35,A37,A38;
      hence thesis by A14,A15,A22,A24,A35,A36;
    end;
A39: now
      given Z1 such that
A40:  Z1 in XX and
A41:  y in Z1 and
A42:  not z in Z1;
      assume that
A43:  for Z1 st Z1 in XX holds x in Z1 iff y in Z1
      and [x,y] in R;
      x in Z1 by A40,A41,A43;
      hence thesis by A14,A15,A22,A24,A40,A42;
    end;
    now
      assume that
A44:  for Z1 st Z1 in XX holds x in Z1 iff y in Z1 and
A45:  [x,y] in R and
A46:  for Z1 st Z1 in XX holds y in Z1 iff z in Z1 and
A47:  [y,z] in R;
A48:  [x,z] in R by A11,A15,A22,A23,A24,A45,A47,RELAT_2:def 8;
      now
        let Z;
        assume
A49:    Z in XX;
        then x in Z iff y in Z by A44;
        hence x in Z iff z in Z by A46,A49;
      end;
      hence thesis by A14,A15,A22,A24,A48;
    end;
    hence thesis by A14,A25,A26,A27,A34,A39;
  end;
A50: Q is antisymmetric
  proof
    let x,y;
    assume that
A51: x in field Q and
A52: y in field Q and
A53: [x,y] in Q and
A54: [y,x] in Q;
A55: (ex Z1 st Z1 in XX & x in Z1 & not y in Z1) or (for Z1 st Z1 in XX
    holds x in Z1 iff y in Z1) & [x,y] in R by A14,A53;
A56: (ex Z1 st Z1 in XX & y in Z1 & not x in Z1) or (for Z1 st Z1 in XX
    holds y in Z1 iff x in Z1) & [y,x] in R by A14,A54;
    now
      given Z1 such that
A57:  Z1 in XX and
A58:  x in Z1 and
A59:  not y in Z1;
      given Z2 such that
A60:  Z2 in XX and
A61:  y in Z2 and
A62:  not x in Z2;
      Z1 c= Z2 or Z2 c= Z1 by A6,A57,A60;
      hence thesis by A58,A59,A61,A62;
    end;
    hence thesis by A12,A15,A51,A52,A55,A56,RELAT_2:def 4;
  end;
A63: Q is connected
  proof
    let x,y such that
A64: x in field Q and
A65: y in field Q and
A66: x <> y;
    now
      assume
A67:  for Z st Z in XX holds x in Z iff y in Z;
A68:  [x,y] in R or [y,x] in R by A13,A15,A64,A65,A66,RELAT_2:def 6;
      for Z st Z in XX holds y in Z iff x in Z by A67;
      hence thesis by A14,A15,A64,A65,A67,A68;
    end;
    hence thesis by A14,A15,A64,A65;
  end;
  Q is well_founded
  proof
    let Y such that
A69: Y c= field Q and
A70: Y <> {};
    defpred P[set] means $1 /\ Y <> {};
    consider Z such that
A71: x in Z iff x in XX & P[x] from XBOOLE_0:sch 1;
A72: Z c= XX
    proof
      let x;
      thus thesis by A71;
    end;
    consider x being Element of Y;
    x in union XX by A4,A15,A69,A70,TARSKI:def 3;
    then consider Z1 such that
A73: x in Z1 and
A74: Z1 in XX by TARSKI:def 4;
    Z1 /\ Y <> {} by A70,A73,XBOOLE_0:def 4;
    then Z <> {} by A71,A74;
    then consider Z1 such that
A75: Z1 in Z and
A76: for Z2 st Z2 in Z holds Z1 c= Z2 by A5,A72;
A77: Z1 in XX by A71,A75;
A78: Z1 /\ Y c= Z1 by XBOOLE_1:17;
A79: Z1 c= union X by A3,A77,ZFMISC_1:92;
    Z1 /\ Y <> {} by A71,A75;
    then consider x such that
A80: x in Z1 /\ Y and
A81: for y st y in Z1 /\ Y holds [x,y] in R
    by A9,A78,A79,WELLORD1:9,XBOOLE_1:1;
    take x;
    thus x in Y by A80,XBOOLE_0:def 4;
    assume
A82: Q-Seg x /\ Y <> {};
    consider y being Element of Q-Seg x /\ Y;
A83: x in Z1 by A80,XBOOLE_0:def 4;
A84: y in Q-Seg x by A82,XBOOLE_0:def 4;
A85: y in Y by A82,XBOOLE_0:def 4;
A86: y <> x by A84,WELLORD1:def 1;
A87: [y,x] in Q by A84,WELLORD1:def 1;
A88: now
      given Z2 such that
A89:  Z2 in XX and
A90:  y in Z2 and
A91:  not x in Z2;
      Z2 /\ Y <> {} by A85,A90,XBOOLE_0:def 4;
      then Z2 in Z by A71,A89;
      then Z1 c= Z2 by A76;
      hence contradiction by A83,A91;
    end;
    then
A92: y in Z1 by A14,A77,A83,A87;
A93: [y,x] in R by A14,A87,A88;
    y in Z1 /\ Y by A85,A92,XBOOLE_0:def 4;
    then
A94: [x,y] in R by A81;
A95: x in union X by A14,A87;
    y in union X by A14,A87;
    hence contradiction by A12,A86,A93,A94,A95,RELAT_2:def 4;
  end;
  then Q is well-ordering by A18,A21,A50,A63,WELLORD1:def 4;
  then Q,RelIncl order_type_of Q are_isomorphic by WELLORD2:def 2;
  then RelIncl order_type_of Q,Q are_isomorphic by WELLORD1:50;
  then consider g such that
A96: g is_isomorphism_of RelIncl order_type_of Q,Q by WELLORD1:def 8;
A97: field RelIncl order_type_of Q = order_type_of Q by WELLORD2:def 1;
  then
A98: dom g = order_type_of Q by A96,WELLORD1:def 7;
A99: rng g = union X by A15,A96,WELLORD1:def 7;
A100: g is one-to-one by A96,WELLORD1:def 7;
A101: for Z,x st Z in XX & x in Z holds Q-Seg x c= Z
  proof
    let Z,x such that
A102: Z in XX and
A103: x in Z;
    let y;
    assume y in Q-Seg x;
    then
A104: [y,x] in Q by WELLORD1:def 1;
    now
      given Z1 such that
A105: Z1 in XX and
A106: y in Z1 and
A107: not x in Z1;
      Z1 c= Z or Z c= Z1 by A6,A102,A105;
      hence thesis by A103,A106,A107;
    end;
    hence thesis by A14,A102,A103,A104;
  end;
A108: for A st A in order_type_of Q holds card A = card (Q-Seg(g.A))
  proof
    let A such that
A109: A in order_type_of Q;
    A,Q-Seg(g.A) are_equipotent
    proof
      take f = g|A;
      A c= dom g by A98,A109,ORDINAL1:def 2;
      hence
A110: f is one-to-one & dom f = A by A100,FUNCT_1:84,RELAT_1:91;
      thus rng f c= Q-Seg(g.A)
      proof
        let x;
        assume x in rng f;
        then consider y such that
A111:   y in dom f and
A112:   x = f.y by FUNCT_1:def 5;
        reconsider B = y as Ordinal by A110,A111;
A113:   B in order_type_of Q by A109,A110,A111,ORDINAL1:19;
        B c= A by A110,A111,ORDINAL1:def 2;
        then
A114:   [B,A] in RelIncl order_type_of Q by A109,A113,WELLORD2:def 1;
A115:   x = g.B by A111,A112,FUNCT_1:70;
A116:   A <> B by A110,A111;
A117:   [x,g.A] in Q by A96,A114,A115,WELLORD1:def 7;
        x <> g.A by A98,A100,A109,A113,A115,A116,FUNCT_1:def 8;
        hence thesis by A117,WELLORD1:def 1;
      end;
      let x;
      assume
A118: x in Q-Seg(g.A);
      then
A119: [x,g.A] in Q by WELLORD1:def 1;
      then x in union X by A14;
      then consider y such that
A120: y in dom g and
A121: x = g.y by A99,FUNCT_1:def 5;
      reconsider B = y as Ordinal by A98,A120;
      [B,A] in RelIncl order_type_of Q by A96,A97,A98,A109,A119,A120
      ,A121,WELLORD1:def 7;
      then
A122: B c= A by A98,A109,A120,WELLORD2:def 1;
      B <> A by A118,A121,WELLORD1:def 1;
      then B c< A by A122,XBOOLE_0:def 8;
      hence thesis by A120,A121,FUNCT_1:73,ORDINAL1:21;
    end;
    hence thesis by CARD_1:21;
  end;
A123: order_type_of Q c= M
  proof
    let x be Ordinal;
    assume
A124: x in order_type_of Q;
    reconsider A = x as Ordinal;
    g.x in union X by A98,A99,A124,FUNCT_1:def 5;
    then consider Z such that
A125: g.x in Z and
A126: Z in XX by A4,TARSKI:def 4;
A127: card (Q-Seg(g.x)) c= card Z by A101,A125,A126,CARD_1:27;
A128: card (Q-Seg(g.x)) = card A by A108,A124;
    card (Q-Seg(g.x)) in M by A1,A3,A126,A127,ORDINAL1:22;
    hence thesis by A128,Th60;
  end;
  order_type_of Q,union X are_equipotent by A98,A99,A100,WELLORD2:def 4;
  then
A129: card order_type_of Q = card union X by CARD_1:21;
  card M = M by CARD_1:def 5;
  hence thesis by A123,A129,CARD_1:27;
end;

begin :: Addenda

:: from AMI_1

registration
  let f be Function;
  cluster product f -> functional;
  coherence
  proof
    set d = product f;
    let x be set;
    assume x in d;
    then ex g being Function
    st x = g & dom g= dom f & for x being set st x in dom f holds g.x in f.x
    by Def5;
    hence thesis;
  end;
end;

registration
  let A be set;
  let B be with_non-empty_elements set;
  cluster -> non-empty Function of A,B;
  coherence
  proof
    let f be Function of A,B;
    thus not {} in rng f;
  end;
end;

:: from PRVECT_1

registration
  let f be non-empty Function;
  cluster product f -> non empty;
  coherence
  proof
    not {} in rng f;
    hence thesis by Th37;
  end;
end;

:: from AMI_1, 2006.03.14, A.T.

theorem
  for a,b,c,d being set st a <> b holds
  product (a,b) --> ({c},{d}) = { (a,b) --> (c,d) }
proof
  let a,b,c,d be set such that
A1: a <> b;
  set X = { (a,b) --> (c,d) }, f = (a,b) --> ({c},{d});
A2: dom f = {a,b} by FUNCT_4:65;
  now
    let x;
    thus x in X implies ex g being Function st x = g & dom g = dom f &
    for x st x in dom f holds g.x in f.x
    proof
      assume
A3:   x in X;
      take g = (a,b) --> (c,d);
      thus x = g by A3,TARSKI:def 1;
      thus dom g = dom f by A2,FUNCT_4:65;
      let x;
      assume x in dom f;
      then
A4:   x = a or x = b by A2,TARSKI:def 2;
A5:   g.a = c by A1,FUNCT_4:66;
A6:   f.a = {c} by A1,FUNCT_4:66;
A7:   g.b = d by FUNCT_4:66;
      f.b = {d} by FUNCT_4:66;
      hence thesis by A4,A5,A6,A7,TARSKI:def 1;
    end;
    given g being Function such that
A8: x = g and
A9: dom g = dom f and
A10: for x st x in dom f holds g.x in f.x;
A11: a in dom f by A2,TARSKI:def 2;
A12: b in dom f by A2,TARSKI:def 2;
A13: g.a in f.a by A10,A11;
A14: g.b in f.b by A10,A12;
A15: f.a = {c} by A1,FUNCT_4:66;
A16: f.b = {d} by FUNCT_4:66;
A17: g.a = c by A13,A15,TARSKI:def 1;
    g.b = d by A14,A16,TARSKI:def 1;
    then g = (a,b) --> (c,d) by A2,A9,A17,FUNCT_4:69;
    hence x in X by A8,TARSKI:def 1;
  end;
  hence thesis by Def5;
end;

:: from AMI_1, 2006.03.14, A.T.

theorem
  x in product f implies x is Function;

begin :: Superproducts, from AMI_1, 2006.03.14, A.T.

reserve A,B for set;

definition
  let f be Function;
  func sproduct f -> set means
  :Def9:
  x in it iff ex g st x = g & dom g c= dom f &
  for x st x in dom g holds g.x in f.x;
  existence
  proof
    defpred P[set] means ex g st $1 = g & dom g c= dom f &
    for x st x in dom g holds g.x in f.x;
    consider A being set such that
A1: x in A iff x in PFuncs(dom f, union rng f) & P[x] from XBOOLE_0:sch 1;
    now
      let x;
      thus x in A implies ex g st x = g & dom g c= dom f &
      for x st x in dom g holds g.x in f.x by A1;
      given g such that
A2:   x = g and
A3:   dom g c= dom f and
A4:   for x st x in dom g holds g.x in f.x;
      rng g c= union rng f
      proof
        let y be set;
        assume y in rng g;
        then consider z being set such that
A5:     z in dom g and
A6:     y = g.z by FUNCT_1:def 5;
A7:     g.z in f.z by A4,A5;
        f.z in rng f by A3,A5,FUNCT_1:def 5;
        hence thesis by A6,A7,TARSKI:def 4;
      end;
      then x in PFuncs(dom f, union rng f) by A2,A3,PARTFUN1:def 5;
      hence x in A by A1,A2,A3,A4;
    end;
    hence thesis;
  end;
  uniqueness
  proof
    defpred P[set] means ex g st $1 = g & dom g c= dom f &
    for x st x in dom g holds g.x in f.x;
    let A,B be set such that
A8: x in A iff P[x] and
A9: x in B iff P[x];
    thus thesis from XBOOLE_0:sch 2(A8,A9);
  end;
end;

registration
  let f be Function;
  cluster sproduct f -> functional non empty;
  coherence
  proof
    defpred P[set] means ex g st $1 = g & dom g c= dom f &
    for x st x in dom g holds g.x in f.x;
    consider A being set such that
A1: x in A iff x in PFuncs(dom f, union rng f) & P[x] from XBOOLE_0:sch 1;
    {} is PartFunc of dom f, union rng f by RELSET_1:25;
    then
A2: {} in PFuncs(dom f, union rng f) by PARTFUN1:119;
A3: dom {} c= dom f by XBOOLE_1:2;
A4: for x st x in dom {} holds {} .x in f.x;
    now
      let x be set;
      assume x in A;
      then ex g st x = g & dom g c= dom f &
      for x st x in dom g holds g.x in f.x by A1;
      hence x is Function;
    end;
    then reconsider A as functional non empty set by A1,A2,A3,A4,
    FUNCT_1:def 19;
    now
      let x;
      thus x in A implies ex g st x = g & dom g c= dom f &
      for x st x in dom g holds g.x in f.x by A1;
      given g such that
A5:   x = g and
A6:   dom g c= dom f and
A7:   for x st x in dom g holds g.x in f.x;
      rng g c= union rng f
      proof
        let y be set;
        assume y in rng g;
        then consider z being set such that
A8:     z in dom g and
A9:     y = g.z by FUNCT_1:def 5;
A10:    g.z in f.z by A7,A8;
        f.z in rng f by A6,A8,FUNCT_1:def 5;
        hence thesis by A9,A10,TARSKI:def 4;
      end;
      then x in PFuncs(dom f, union rng f) by A5,A6,PARTFUN1:def 5;
      hence x in A by A1,A5,A6,A7;
    end;
    hence thesis by Def9;
  end;
end;

theorem Th65:
  g in sproduct f implies dom g c= dom f &
  for x st x in dom g holds g.x in f.x
proof
  assume g in sproduct f;
  then ex h st g = h & dom h c= dom f &
  for x st x in dom h holds h.x in f.x by Def9;
  hence thesis;
end;

theorem Th66:
  {} in sproduct f
proof
A1: dom {} c= dom f by XBOOLE_1:2;
  for x st x in dom {} holds {} .x in f.x;
  hence thesis by A1,Def9;
end;

registration let f;
 cluster empty Element of sproduct f;
 existence
  proof
    {} in sproduct f by Th66;
   hence thesis;
  end;
end;

theorem Th67:
  product f c= sproduct f
proof
  let x;
  assume x in product f;
  then ex g st x = g & dom g = dom f &
  for x st x in dom f holds g.x in f.x by Def5;
  hence thesis by Def9;
end;

theorem Th68:
  x in sproduct f implies x is PartFunc of dom f, union rng f
proof
  assume x in sproduct f;
  then consider g such that
A1: x = g and
A2: dom g c= dom f and
A3: for x st x in dom g holds g.x in f.x by Def9;
  rng g c= union rng f
  proof
    let y be set;
    assume y in rng g;
    then consider z being set such that
A4: z in dom g and
A5: y = g.z by FUNCT_1:def 5;
A6: g.z in f.z by A3,A4;
    f.z in rng f by A2,A4,FUNCT_1:def 5;
    hence thesis by A5,A6,TARSKI:def 4;
  end;
  hence thesis by A1,A2,RELSET_1:11;
end;

theorem Th69:
  g in product f & h in sproduct f implies g +* h in product f
proof
  assume
A1: g in product f;
  then
A2: dom g = dom f by Th18;
  assume
A3: h in sproduct f;
  then
A4: dom g \/ dom h = dom f by A2,Th65,XBOOLE_1:12;
  then
A5: dom(g +* h) = dom f by FUNCT_4:def 1;
  now
    let x;
    assume
A6: x in dom f;
A7: (dom g \ dom h) \/ dom h = dom f by A4,XBOOLE_1:39;
    now per cases by A6,A7,XBOOLE_0:def 3;
      case
A8:     x in dom g \ dom h;
        then not x in dom h by XBOOLE_0:def 5;
        hence x in dom f & (g +* h).x = g.x by A2,A8,FUNCT_4:12;
      end;
      case x in dom h;
        hence (g +* h).x = h.x by FUNCT_4:14;
      end;
    end;
    hence (g +* h).x in f.x by A1,A3,Th18,Th65;
  end;
  hence thesis by A5,Th18;
end;

theorem
  product f <> {} implies
  (g in sproduct f iff ex h st h in product f & g c= h)
proof
  assume
A1: product f <> {};
  thus g in sproduct f implies ex h st h in product f & g c= h
  proof
    assume
A2: g in sproduct f;
    consider k being Element of product f;
    reconsider k as Function;
    take k +* g;
    thus k +* g in product f by A1,A2,Th69;
    thus thesis by FUNCT_4:26;
  end;
  given h such that
A3: h in product f and
A4: g c= h;
A5: dom h = dom f by A3,Th18;
A6: dom g c= dom h by A4,RELAT_1:25;
  now
    let x;
    assume
A7: x in dom g;
    then g.x = h.x by A4,GRFUNC_1:8;
    hence g.x in f.x by A3,A5,A6,A7,Th18;
  end;
  hence thesis by A5,A6,Def9;
end;

theorem Th71:
  sproduct f c= PFuncs(dom f,union rng f)
proof
  let x;
  assume x in sproduct f;
  then x is PartFunc of dom f, union rng f by Th68;
  hence thesis by PARTFUN1:119;
end;

theorem Th72:
  f c= g implies sproduct f c= sproduct g
proof
  assume
A1: f c= g;
  then
A2: dom f c= dom g by GRFUNC_1:8;
  let y;
  assume y in sproduct f;
  then consider h such that
A3: y = h and
A4: dom h c= dom f and
A5: for x st x in dom h holds h.x in f.x by Def9;
A6: dom h c= dom g by A2,A4,XBOOLE_1:1;
  now
    let x;
    assume
A7: x in dom h;
    then f.x = g.x by A1,A4,GRFUNC_1:8;
    hence h.x in g.x by A5,A7;
  end;
  hence thesis by A3,A6,Def9;
end;

theorem Th73:
  sproduct {} = {{}}
proof
  sproduct {} c= PFuncs({},{}) by Th71,RELAT_1:60,ZFMISC_1:2;
  hence sproduct {} c= {{}} by PARTFUN1:122;
  let x be set;
  assume x in {{}};
  then x = {} by TARSKI:def 1;
  hence thesis by Th66;
end;

theorem
  PFuncs(A,B) = sproduct (A --> B)
proof
  now per cases;
    case
A1:   A = {};
      then A --> B = {} --> B;
      hence thesis by A1,Th73,PARTFUN1:122;
    end;
    case A <> {};
      then
A2:   rng (A --> B) = { B } by FUNCOP_1:14;
A3:   dom(A --> B) = A by FUNCOP_1:19;
A4:   B = union rng (A --> B) by A2,ZFMISC_1:31;
      thus PFuncs(A,B) c= sproduct (A --> B)
      proof
        let x;
        assume x in PFuncs(A,B);
        then consider f being Function such that
A5:     x = f and
A6:     dom f c= A and
A7:     rng f c= B by PARTFUN1:def 5;
A8:     dom f c= dom (A --> B) by A6,FUNCOP_1:19;
        now
          let x;
          assume
A9:       x in dom f;
          then f.x in rng f by FUNCT_1:def 5;
          then f.x in B by A7;
          hence f.x in (A --> B).x by A6,A9,FUNCOP_1:13;
        end;
        hence thesis by A5,A8,Def9;
      end;
      thus sproduct (A --> B) c= PFuncs(A,B) by A3,A4,Th71;
    end;
  end;
  hence thesis by XBOOLE_0:def 10;
end;

theorem
  for A, B being non empty set for f being Function of A,B
  holds sproduct f = sproduct(f|{x where x is Element of A: f.x <> {} })
proof
  let A, B be non empty set;
  let f be Function of A,B;
  set X = {x where x is Element of A: f.x <> {} };
  thus sproduct f c= sproduct(f|X)
  proof
    let x;
    assume x in sproduct f;
    then consider g such that
A1: x = g and
A2: dom g c= dom f and
A3: for x st x in dom g holds g.x in f.x by Def9;
A4: now
      let x;
      assume
A5:   x in dom g;
      then reconsider a = x as Element of A by A2,FUNCT_2:def 1;
      f.a <> {} by A3,A5;
      hence x in X;
    end;
A6: now
      let x;
      assume
A7:   x in dom g;
      then x in X by A4;
      hence x in (dom f)/\ X by A2,A7,XBOOLE_0:def 4;
    end;
A8: dom g c= dom(f|X)
    proof
      let x;
      assume x in dom g;
      then x in (dom f)/\ X by A6;
      hence thesis by RELAT_1:90;
    end;
    now
      let x;
      assume
A9:   x in dom g;
      then g.x in f.x by A3;
      hence g.x in (f|X).x by A6,A9,FUNCT_1:71;
    end;
    hence thesis by A1,A8,Def9;
  end;
  thus thesis by Th72,RELAT_1:88;
end;

theorem Th76:
  x in dom f & y in f.x implies x .--> y in sproduct f
proof
  assume that
A1: x in dom f and
A2: y in f.x;
A3: dom(x .--> y) = {x} by FUNCOP_1:19;
  then
A4: dom(x .--> y) c= dom f by A1,ZFMISC_1:37;
  now
    let z;
    assume z in dom(x .--> y);
    then z = x by A3,TARSKI:def 1;
    hence (x .--> y).z in f.z by A2,FUNCOP_1:87;
  end;
  hence thesis by A4,Def9;
end;

theorem
  sproduct f = {{}} iff for x st x in dom f holds f.x = {}
proof
  thus sproduct f = {{}} implies for x st x in dom f holds f.x = {}
  proof
    assume
A1: sproduct f = {{}};
    let x;
    assume
A2: x in dom f;
    assume
A3: f.x <> {};
    consider y being Element of f.x;
    x .--> y in sproduct f by A2,A3,Th76;
    hence contradiction by A1,TARSKI:def 1;
  end;
  assume
A4: for x st x in dom f holds f.x = {};
  now
    let x;
    thus x in sproduct f implies x = {}
    proof
      assume x in sproduct f;
      then consider g such that
A5:   x = g and
A6:   dom g c= dom f and
A7:   for y st y in dom g holds g.y in f.y by Def9;
      assume
A8:   x <> {};
      consider y being Element of dom g;
A9:   f.y <> {} by A5,A7,A8;
      y in dom f by A5,A6,A8,TARSKI:def 3;
      hence contradiction by A4,A9;
    end;
    thus x = {} implies x in sproduct f by Th66;
  end;
  hence thesis by TARSKI:def 1;
end;

theorem Th78:
  A c= sproduct f &
  (for h1,h2 being Function st h1 in A & h2 in A holds h1 tolerates h2)
  implies union A in sproduct f
proof
  assume that
A1: A c= sproduct f and
A2: for h1,h2 being Function st h1 in A & h2 in A holds h1 tolerates h2;
  reconsider g = union A as Function by A1,A2,PARTFUN1:188;
A3: dom g c= dom f
  proof
    let x;
    assume x in dom g;
    then consider y such that
A4: [x,y] in g by RELAT_1:def 4;
    consider h being set such that
A5: [x,y] in h and
A6: h in A by A4,TARSKI:def 4;
    reconsider h as Function by A1,A6;
A7: x in dom h by A5,RELAT_1:def 4;
    dom h c= dom f by A1,A6,Th65;
    hence thesis by A7;
  end;
  now
    let x;
    assume x in dom g;
    then consider y such that
A8: [x,y] in g by RELAT_1:def 4;
    consider h being set such that
A9: [x,y] in h and
A10: h in A by A8,TARSKI:def 4;
    reconsider h as Function by A1,A10;
A11: x in dom h by A9,RELAT_1:def 4;
    h.x = y by A9,FUNCT_1:8
      .= g.x by A8,FUNCT_1:8;
    hence g.x in f.x by A1,A10,A11,Th65;
  end;
  hence thesis by A3,Def9;
end;

theorem
  g tolerates h & g in sproduct f & h in sproduct f
  implies g \/ h in sproduct f
proof
  assume that
A1: g tolerates h and
A2: g in sproduct f and
A3: h in sproduct f;
A4: {g,h} c= sproduct f by A2,A3,ZFMISC_1:38;
A5: now
    let h1,h2 be Function;
    assume that
A6: h1 in {g,h} and
A7: h2 in {g,h};
A8: h1 = g or h1 = h by A6,TARSKI:def 2;
    h2 = g or h2 = h by A7,TARSKI:def 2;
    hence h1 tolerates h2 by A1,A8;
  end;
  union {g,h} = g \/ h by ZFMISC_1:93;
  hence thesis by A4,A5,Th78;
end;

theorem Th80:
  x c= h & h in sproduct f implies x in sproduct f
proof
  assume that
A1: x c= h and
A2: h in sproduct f;
  reconsider g = x as Function by A1;
A3: dom g c= dom h by A1,GRFUNC_1:8;
  dom h c= dom f by A2,Th65;
  then
A4: dom g c= dom f by A3,XBOOLE_1:1;
  now
    let x;
    assume
A5: x in dom g;
    then h.x in f.x by A2,A3,Th65;
    hence g.x in f.x by A1,A5,GRFUNC_1:8;
  end;
  hence thesis by A4,Def9;
end;

theorem Th81:
  g in sproduct f implies g|A in sproduct f by Th80,RELAT_1:88;

theorem Th82:
  g in sproduct f implies g|A in sproduct f|A
proof
A1: dom(g|A) = dom g /\ A by RELAT_1:90;
A2: dom(f|A) = dom f /\ A by RELAT_1:90;
  assume
A3: g in sproduct f;
  then
A4: dom(g|A) c= dom(f|A) by A1,A2,Th65,XBOOLE_1:26;
  now
    let x;
    assume
A5: x in dom(g|A);
    then
A6: (g|A).x = g.x by FUNCT_1:70;
A7: (f|A).x = f.x by A4,A5,FUNCT_1:70;
    x in dom g by A1,A5,XBOOLE_0:def 4;
    hence (g|A).x in (f|A).x by A3,A6,A7,Th65;
  end;
  hence thesis by A4,Def9;
end;

theorem
  h in sproduct(f+*g) implies
  ex f9,g9 being Function st f9 in sproduct f & g9 in sproduct g & h = f9+*g9
proof
  assume
A1: h in sproduct(f+*g);
  take h|(dom f \ dom g), h|dom g;
A2: h|(dom f \ dom g) in sproduct (f +* g)|(dom f \ dom g) by A1,Th82;
  sproduct (f +* g)|(dom f \ dom g) c= sproduct f by Th72,FUNCT_4:25;
  hence h|(dom f \ dom g) in sproduct f by A2;
  (f +* g)|dom g = g by FUNCT_4:24;
  hence h|dom g in sproduct g by A1,Th82;
  dom h c= dom(f+*g) by A1,Th65;
  then dom h c= dom f \/ dom g by FUNCT_4:def 1;
  then dom h c= (dom f \ dom g) \/ dom g by XBOOLE_1:39;
  hence thesis by FUNCT_4:74;
end;

theorem Th84:
  for f9,g9 being Function st dom g misses dom f9 \ dom g9 &
  f9 in sproduct f & g9 in sproduct g holds f9+*g9 in sproduct(f+*g)
proof
  let f9,g9 be Function such that
A1: dom g misses dom f9 \ dom g9 and
A2: f9 in sproduct f and
A3: g9 in sproduct g;
  set h = f9+*g9;
A4: dom f9 c= dom f by A2,Th65;
A5: dom g9 c= dom g by A3,Th65;
  then
A6: dom f9 \/ dom g9 c= dom f \/ dom g by A4,XBOOLE_1:13;
A7: dom h = dom f9 \/ dom g9 by FUNCT_4:def 1;
  then
A8: dom h c= dom(f+*g) by A6,FUNCT_4:def 1;
  x in dom h implies h.x in (f+*g).x
  proof
    assume
A9: x in dom h;
    then x in dom(f+*g) by A8;
    then
A10: x in dom f \/ dom g by FUNCT_4:def 1;
    x in dom f9 \ dom g9 \/ dom g9 by A7,A9,XBOOLE_1:39;
    then
A11: x in dom f9 \ dom g9 or x in dom g9 by XBOOLE_0:def 3;
    now per cases;
      case
A12:    x in dom g;
        then h.x = g9.x by A1,A7,A9,A11,FUNCT_4:def 1,XBOOLE_0:3;
        hence h.x in g.x by A1,A3,A11,A12,Th65,XBOOLE_0:3;
      end;
      case not x in dom g;
        then
A13:    not x in dom g9 by A5;
        then
A14:    h.x = f9.x by A7,A9,FUNCT_4:def 1;
        x in dom f9 by A7,A9,A13,XBOOLE_0:def 3;
        hence h.x in f.x by A2,A14,Th65;
      end;
    end;
    hence thesis by A10,FUNCT_4:def 1;
  end;
  hence thesis by A8,Def9;
end;

theorem
  for f9,g9 being Function st dom f9 misses dom g \ dom g9 &
  f9 in sproduct f & g9 in sproduct g holds f9+*g9 in sproduct(f+*g)
proof
  let f9,g9 be Function;
  assume dom f9 misses dom g \ dom g9;
  then dom g misses dom f9 \ dom g9 by XBOOLE_1:81;
  hence thesis by Th84;
end;

theorem Th86:
  g in sproduct f & h in sproduct f implies g +* h in sproduct f
proof
  assume that
A1: g in sproduct f and
A2: h in sproduct f;
A3: dom g c= dom f by A1,Th65;
  dom h c= dom f by A2,Th65;
  then dom g \/ dom h c= dom f by A3,XBOOLE_1:8;
  then
A4: dom(g+*h) c= dom f by FUNCT_4:def 1;
  now
    let x;
    assume x in dom(g+*h);
    then x in dom g \/ dom h by FUNCT_4:def 1;
    then
A5: x in (dom g \ dom h \/ dom h) by XBOOLE_1:39;
    now per cases by A5,XBOOLE_0:def 3;
      suppose
A6:     x in dom h;
        then h.x in f.x by A2,Th65;
        hence (g+*h).x in f.x by A6,FUNCT_4:14;
      end;
      suppose
A7:     x in dom g \ dom h;
        then
A8:     g.x in f.x by A1,Th65;
        not x in dom h by A7,XBOOLE_0:def 5;
        hence (g+*h).x in f.x by A8,FUNCT_4:12;
      end;
    end;
    hence (g+*h).x in f.x;
  end;
  hence thesis by A4,Def9;
end;

theorem
  for x1,x2,y1,y2 being set holds
  x1 in dom f & y1 in f.x1 & x2 in dom f & y2 in f.x2
  implies (x1,x2)-->(y1,y2) in sproduct f
proof
  let x1,x2,y1,y2 be set;
  assume that
A1: x1 in dom f and
A2: y1 in f.x1;
A3: x1 .--> y1 in sproduct f by A1,A2,Th76;
  assume that
A4: x2 in dom f and
A5: y2 in f.x2;
A6: x2 .--> y2 in sproduct f by A4,A5,Th76;
  (x1,x2)-->(y1,y2) = (x1 .--> y1) +* (x2 .--> y2) by FUNCT_4:def 4;
  hence thesis by A3,A6,Th86;
end;

begin  :: from PRALG_2, 2007.11.14, A.T.

definition
  let IT be set;
  attr IT is with_common_domain means
  :Def10:
  for f,g be Function st f in IT & g in IT holds dom f = dom g;
end;

registration
  cluster with_common_domain functional non empty set;
  existence
  proof
    consider h be Function;
    take A = {h};
    for f,g be Function st f in A & g in A holds dom f = dom g
    proof
      let f,g be Function;
      assume that
A1:   f in A and
A2:   g in A;
      f = h by A1,TARSKI:def 1;
      hence thesis by A2,TARSKI:def 1;
    end;
    hence A is with_common_domain by Def10;
    thus A is functional;
    thus thesis;
  end;
end;

theorem
  {{}} is functional with_common_domain set
proof
  for f,g be Function st f in {{}} & g in {{}} holds dom f = dom g
  proof
    let f,g be Function;
    assume that
A1: f in {{}} and
A2: g in {{}};
    f = {} by A1,TARSKI:def 1;
    hence thesis by A2,TARSKI:def 1;
  end;
  hence thesis by Def10;
end;

definition
  let X be with_common_domain functional set;
  canceled;  :: miejsce na uogolnienie
  func DOM X -> set means :: overloading (dom) dozwolony
  :Def12:
  for x be Function st x in X holds it = dom x if X <> {}
  otherwise it = {};
  existence
  proof
    thus X <> {} implies ex Y be set st for x be Function st x in X
    holds Y = dom x
    proof
      assume X <> {};
      then consider x be set such that
A1:   x in X by XBOOLE_0:def 1;
      reconsider x as Function by A1;
      take dom x;
      let y be Function;
      assume y in X;
      hence thesis by A1,Def10;
    end;
    thus thesis;
  end;
  uniqueness
  proof
    let A,B be set;
    thus
    X <> {} implies ((for x be Function st x in X holds A = dom x) &
    (for x be Function st x in X holds B = dom x) implies A = B)
    proof
      assume
A2:   X <> {};
      assume that
A3:   for x be Function st x in X holds A = dom x and
A4:   for x be Function st x in X holds B = dom x;
      consider x be set such that
A5:   x in X by A2,XBOOLE_0:def 1;
      reconsider x as Function by A5;
      A = dom x by A3,A5;
      hence thesis by A4,A5;
    end;
    thus thesis;
  end;
  consistency;
end;

theorem
  for X be with_common_domain functional set st X = {{}} holds DOM X = {}
proof
  let X be with_common_domain functional set;
  assume
A1: X = {{}};
  {} in {{}} by TARSKI:def 1;
  hence thesis by A1,Def12,RELAT_1:60;
end;

begin  :: Product like sets, from AMISTD_2, 2007.11.14, A.T.

definition
  let S be functional set;
  func product" S -> Function means  :: tu trzeba uzyc DOM
:: uzywajac meet mamy definicje
:: nie przez czesci
  :Def13:
  (for x being set holds x in dom it iff
  for f being Function st f in S holds x in dom f) &
  for i being set st i in dom it holds it.i = pi(S,i) if S is non empty
  otherwise it = {};
  existence
  proof
    thus S is non empty implies ex g being Function st
    (for x being set holds x in dom g iff
    for f being Function st f in S holds x in dom f) &
    for i being set st i in dom g holds g.i = pi(S,i)
    proof
      assume S is non empty;
      then reconsider S1 = S as non empty functional set;
      set D = {dom f where f is Element of S1: not contradiction};
      defpred P[set,set] means $2 = pi(S,$1);
A1:   for e being set st e in meet D ex u being set st P[e,u];
      consider g being Function such that
A2:   dom g = meet D and
A3:   for e being set st e in meet D holds P[e,g.e] from CLASSES1:sch 1(
      A1);
      take g;
      hereby
        let x be set;
        hereby
          assume
A4:       x in dom g;
          let f be Function;
          assume f in S;
          then dom f in D;
          hence x in dom f by A2,A4,SETFAM_1:def 1;
        end;
        assume
A5:     for f being Function st f in S holds x in dom f;
        consider f being Element of S1;
A6:     dom f in D;
        for Y being set holds Y in D implies x in Y
        proof
          let Y be set;
          assume Y in D;
          then ex f being Element of S1 st Y = dom f & not contradiction;
          hence thesis by A5;
        end;
        hence x in dom g by A2,A6,SETFAM_1:def 1;
      end;
      thus thesis by A2,A3;
    end;
    thus thesis;
  end;
  uniqueness
  proof
    let A, B be Function;
    thus S is non empty & (for x being set holds x in dom A iff
    for f being Function st f in S holds x in dom f) &
    (for i being set st i in dom A holds A.i = pi(S,i)) &
    (for x being set holds x in dom B iff
    for f being Function st f in S holds x in dom f) &
    (for i being set st i in dom B holds B.i = pi(S,i)) implies A = B
    proof
      defpred P[set] means for f being Function st f in S holds $1 in dom f;
      assume that S is non empty and
A7:   for x being set holds x in dom A iff P[x] and
A8:   for i being set st i in dom A holds A.i = pi(S,i) and
A9:   for x being set holds x in dom B iff P[x] and
A10:  for i being set st i in dom B holds B.i = pi(S,i);
A11:  dom A = dom B from XBOOLE_0:sch 2(A7,A9);
      now
        let i be set;
        assume
A12:    i in dom A;
        hence A.i = pi(S,i) by A8
          .= B.i by A10,A11,A12;
      end;
      hence thesis by A11,FUNCT_1:9;
    end;
    thus thesis;
  end;
  consistency;
end;

theorem
  for S being non empty functional set holds
  dom product" S = meet {dom f where f is Element of S: not contradiction}
proof
  let S be non empty functional set;
  set D = {dom f where f is Element of S: not contradiction};
  hereby
    let x be set;
    assume
A1: x in dom product" S;
    consider f being Element of S;
A2: dom f in D;
    for Y being set holds Y in D implies x in Y
    proof
      let Y be set;
      assume Y in D;
      then ex f being Element of S st Y = dom f & not contradiction;
      hence thesis by A1,Def13;
    end;
    hence x in meet D by A2,SETFAM_1:def 1;
  end;
  let x be set;
  assume
A3: x in meet D;
  for f being Function st f in S holds x in dom f
  proof
    let f be Function;
    assume f in S;
    then dom f in D;
    hence thesis by A3,SETFAM_1:def 1;
  end;
  hence thesis by Def13;
end;

theorem Th90:
  for S being non empty functional set,
  i being set st i in dom product" S holds
  (product" S).i = {f.i where f is Element of S: not contradiction}
proof
  let S be non empty functional set, i be set;
  assume
A1: i in dom product" S;
  hereby
    let x be set;
    assume x in (product" S).i;
    then x in pi(S,i) by A1,Def13;
    then ex f being Function st f in S & x = f.i by Def6;
    hence x in {f.i where f is Element of S: not contradiction};
  end;
  let x be set;
  assume x in {f.i where f is Element of S: not contradiction};
  then ex f being Element of S st x = f.i & not contradiction;
  then x in pi(S,i) by Def6;
  hence thesis by A1,Def13;
end;

definition
  let S be set;
  attr S is product-like means
  :Def14:
  ex f being Function st S = product f;
end;

registration
  let f be Function;
  cluster product f -> product-like;
  coherence by Def14;
end;

registration
  cluster product-like -> functional with_common_domain set;
  coherence
  proof
    let S be set;
    given f being Function such that
A1: S = product f;
    thus S is functional by A1;
    let h, g be Function such that
A2: h in S and
A3: g in S;
    thus dom h = dom f by A1,A2,Th18
      .= dom g by A1,A3,Th18;
  end;
end;

registration
  cluster product-like non empty set;
  existence
  proof
    consider B being with_non-empty_elements set, f being Function of 0,B;
    take product f;
    thus thesis;
  end;
end;

theorem Th92:
  for S being functional with_common_domain set holds dom product" S = DOM S
proof
  let S be functional with_common_domain set;
  per cases;
  suppose
A1: S is empty;
    hence dom product" S = {} by Def13,RELAT_1:60
      .= DOM S by A1,Def12;
  end;
  suppose
A2: S is non empty;
    consider f being Element of S;
    hereby
      let x be set;
      assume x in dom product" S;
      then x in dom f by A2,Def13;
      hence x in DOM S by A2,Def12;
    end;
    let x be set;
    assume x in DOM S;
    then for f being Function st f in S holds x in dom f by Def12;
    hence thesis by A2,Def13;
  end;
end;

theorem
  for S being functional set, i being set st i in dom product" S
  holds (product" S).i = pi(S,i)
proof
  let S be functional set, i be set;
  per cases;
  suppose S = {};
    then dom product" S = dom {} by Def13;
    hence thesis;
  end;
  suppose
A1: S <> {};
    assume i in dom product" S;
    hence thesis by A1,Def13;
  end;
end;

theorem Th94:
  for S being functional with_common_domain set holds S c= product product" S
proof
  let S be functional with_common_domain set;
  let f be set;
  assume
A1: f in S;
  then reconsider f as Element of S;
A2: dom f = DOM S by A1,Def12
    .= dom product" S by Th92;
  for i being set st i in dom product" S holds f.i in (product" S).i
  proof
    let i be set;
    assume i in dom product" S;
    then (product" S).i = pi(S,i) by A1,Def13;
    hence thesis by A1,Def6;
  end;
  hence thesis by A2,Th18;
end;

theorem
  for S being non empty product-like set holds S = product product" S
proof
  let S be non empty product-like set;
  thus S c= product product" S by Th94;
  let x be set;
  assume x in product product" S;
  then consider g being Function such that
A1: x = g and
A2: dom g = dom product" S and
A3: for z being set st z in dom product" S holds g.z in (product" S).z
  by Def5;
  consider p being Function such that
A4: S = product p by Def14;
  consider s being Element of S;
A5: dom g = DOM S by A2,Th92
    .= dom s by Def12
    .= dom p by A4,Th18;
  for z being set st z in dom p holds g.z in p.z
  proof
    let z be set;
    assume
A6: z in dom p;
    then g.z in (product" S).z by A2,A3,A5;
    then g.z in pi(S,z) by A2,A5,A6,Def13;
    then ex f being Function st f in S & g.z = f.z by Def6;
    hence thesis by A4,A6,Th18;
  end;
  hence thesis by A1,A4,A5,Th18;
end;

:: from AMI_1, 2008.04.11, A.T. (generalized)

theorem
  for f being Function
  for s, t being Element of product f, A be set holds
  s +* t|A is Element of product f
proof
  let f be Function;
  let s, t be Element of product f, A be set;
  per cases;
  suppose f is non-empty;
    then product f <> {};
    then
A1: t in product f;
    product f c= sproduct f by Th67;
    hence thesis by A1,Th69,Th81;
  end;
  suppose f is not non-empty;
    then {} in rng f by RELAT_1:def 9;
    then
A2: product f = {} by Th37;
    then
A3: s = {} by SUBSET_1:def 2;
    t = {} by A2,SUBSET_1:def 2;
    then t|A = {};
    hence thesis by A3;
  end;
end;

theorem
  for f being non-empty Function
  for p being Element of sproduct f
  ex s being Element of product f st p c= s
proof
  let f be non-empty Function,
  p be Element of sproduct f;
  consider h being Element of product f;
  reconsider s = h +* p as Element of product f by Th69;
  take s;
  thus thesis by FUNCT_4:26;
end;

theorem Th98:
  g in product f implies g|A in sproduct f
proof
A1: product f c= sproduct f by Th67;
  assume g in product f;
  hence thesis by A1,Th80,RELAT_1:88;
end;

:: needed, 2008.04.20, A.T.

definition
  let f be non-empty Function;
  let g be Element of product f;
  let X;
  redefine func g|X -> Element of sproduct f;
  coherence by Th98;
end;

theorem
  for f being non-empty Function
  for s,ss being Element of product f, A being set
  holds (ss +* s | A) | A = s | A
proof
  let f be non-empty Function;
  let s,ss be Element of product f;
  let A be set;
  dom s = dom f by Th18
    .= dom ss by Th18;
  then A /\ dom ss c= A /\ dom s;
  hence thesis by FUNCT_4:93;
end;

:: from PRE_CIRC, 2008.06.02, A.T.

theorem
  for M,x, g being Function st x in product M holds x * g in product (M * g)
proof
  let M, x, g be Function;
  assume
A1: x in product M;
  set xg = x * g;
  set Mg = M * g;
A2: ex gg being Function st ( x = gg)&( dom gg = dom M)&( for x
  being set st x in dom M holds gg.x in M.x) by A1,Def5;
  then
A3: dom xg = dom Mg by RELAT_1:198;
  now
    let y be set;
    assume
A4: y in dom Mg;
    then
A5: y in dom g by FUNCT_1:21;
A6: g.y in dom M by A4,FUNCT_1:21;
A7: xg.y = x.(g.y) by A5,FUNCT_1:23;
    Mg.y = M.(g.y) by A5,FUNCT_1:23;
    hence xg.y in Mg.y by A2,A6,A7;
  end;
  hence thesis by A3,Def5;
end;

:: moved from CARD_4, 2008.10.08, A.T.

theorem
  X is finite iff card X in omega by Th58,CARD_1:84;

reserve A,B for Ordinal;

theorem Th102:
  A is infinite iff omega c= A
proof omega c= A iff not A in omega by ORDINAL1:26;
  hence thesis;
end;

theorem Th103:
  N is finite & not M is finite implies N in M & N c= M
proof
  assume that
A1: N is finite and
A2: not M is finite;
A3: N in omega by A1,CARD_1:103;
  omega c= M by A2,Th102;
  hence N in M by A3;
  thus thesis by A1,A2;
end;

theorem
  not X is finite iff ex Y st Y c= X & card Y = omega
proof
  thus not X is finite implies ex Y st Y c= X & card Y = omega
  proof
    assume not X is finite;
    then not card X in omega;
    then
A1: omega c= card X by CARD_1:14;
    card X,X are_equipotent by CARD_1:def 5;
    then consider f such that
A2: f is one-to-one and
A3: dom f = card X and
A4: rng f = X by WELLORD2:def 4;
    take Y = f.:(omega);
    thus Y c= X by A4,RELAT_1:144;
    omega,Y are_equipotent
    proof
      take f|(omega);
      thus thesis by A1,A2,A3,FUNCT_1:84,RELAT_1:91,148;
    end;
    hence thesis by CARD_1:def 5;
  end;
  given Y such that
A5: Y c= X and
A6: card Y = omega;
  thus thesis by A5,A6;
end;

theorem Th105:
  card X = card Y iff nextcard X = nextcard Y
proof
  thus card X = card Y implies nextcard X = nextcard Y by CARD_1:34;
  assume that
A1: nextcard X = nextcard Y and
A2: card X <> card Y;
  card X in card Y or card Y in card X by A2,ORDINAL1:24;
  then nextcard X c= card Y & card Y in nextcard Y or
  nextcard Y c= card X & card X in nextcard X by CARD_1:def 6;
  hence thesis by A1,ORDINAL1:22;
end;

theorem
  nextcard N = nextcard M implies M = N
proof
A1: card N = N by CARD_1:def 5;
  card M = M by CARD_1:def 5;
  hence thesis by A1,Th105;
end;

theorem Th107:
  N in M iff nextcard N c= M
proof
A1: N in nextcard N by CARD_1:32;
  card N = N by CARD_1:def 5;
  hence thesis by A1,CARD_1:def 6;
end;

theorem
  N in nextcard M iff N c= M
proof
A1: not N c= M iff M in N by CARD_1:14;
  N in nextcard M iff not nextcard M c= N by CARD_1:14;
  hence thesis by A1,Th107;
end;
Lm3: 1 = card 1 by CARD_1:def 5;
Lm4: 2 = card 2 by CARD_1:def 5;

theorem
  0 in M iff 1 c= M
proof 0+1 = 1;
  then nextcard card 0 = card 1 by NAT_1:43;
  hence thesis by Lm3,Th107;
end;

theorem
  1 in M iff 2 c= M
proof 1+1 = 2;
  then nextcard card 1 = card 2 by NAT_1:43;
  hence thesis by Lm3,Lm4,Th107;
end;

theorem Th111:
  M is finite & (N c= M or N in M) implies N is finite
proof
  assume that
A1: M is finite and
A2: N c= M or N in M;
  N c= M by A2,CARD_1:13;
  hence thesis by A1;
end;

reserve n,k for Nat;

theorem Th112:
  A is limit_ordinal iff for B,n st B in A holds B+^ n in A
proof
  thus A is limit_ordinal implies for B,n st B in A holds B+^ n in A
  proof
    assume
A1: A is limit_ordinal;
    let B,n;
    defpred P[Nat] means B+^ $1 in A;
    assume B in A;
    then
A2: P[0] by ORDINAL2:44;
A3: P[k] implies P[k+1]
    proof (k+1) = succ k by NAT_1:39;
      then B+^(k+1) = succ (B+^ k) by ORDINAL2:45;
      hence thesis by A1,ORDINAL1:41;
    end;
    P[k] from NAT_1:sch 2(A2,A3);
    hence thesis;
  end;
  assume
A4: for B,n st B in A holds B+^ n in A;
  now
    let B;
    assume B in A;
    then B+^ 1 in A by A4;
    hence succ B in A by ORDINAL2:48;
  end;
  hence thesis by ORDINAL1:41;
end;

theorem Th113:
  A+^succ n = succ A +^ n & A +^ (n+1) = succ A +^ n
proof
  defpred P[Nat] means A+^succ $1 = succ A +^ $1;
  A+^succ 0 = succ A by ORDINAL2:48
    .= succ A +^ 0 by ORDINAL2:44;
  then
A1: P[0];
A2: P[k] implies P[k+1]
  proof
    assume
A3: P[k];
A4: k+1 = succ k by NAT_1:39;
    hence A+^succ (k+1) = succ (succ A +^ k) by A3,ORDINAL2:45
      .= succ A +^ k +^ 1 by ORDINAL2:48
      .= succ A +^ ( k +^ 1) by ORDINAL3:33
      .= succ A +^ (k+1) by A4,ORDINAL2:48;
  end;
  P[k] from NAT_1:sch 2(A1,A2);
  hence A+^succ n = succ A +^ n;
  hence thesis by NAT_1:39;
end;

theorem Th114:
  ex n st A*^succ 1 = A +^ n
proof
  defpred P[Ordinal] means ex n st $1*^2 = $1+^ n;
  {}+^{} = {} by ORDINAL2:44;
  then
A1: P[0] by ORDINAL2:52;
A2: for A st P[A] holds P[succ A]
  proof
    let A;
    given n such that
A3: A*^2 = A+^ n;
    take n+1;
    (succ A)*^2 = A*^2+^2 by ORDINAL2:53
      .= succ(A*^succ 1+^1) by ORDINAL2:45
      .= succ succ(A+^ n) by A3,ORDINAL2:48
      .= succ (A+^succ n) by ORDINAL2:45
      .= succ (A+^ (n+1)) by NAT_1:39
      .= A+^succ (n+1) by ORDINAL2:45;
    hence thesis by Th113;
  end;
A4: for A st A <> {} & A is limit_ordinal & for B st B in A holds P[B]
  holds P[A]
  proof
    let A;
    assume that
A5: A <> {} and
A6: A is limit_ordinal and
A7: for B st B in A holds P[B];
    take 0;
    deffunc f(Ordinal) = $1*^2;
    consider phi being Ordinal-Sequence such that
A8: dom phi = A and
A9: for B st B in A holds phi.B = f(B) from ORDINAL2:sch 3;
A10: A*^2 = union sup phi by A5,A6,A8,A9,ORDINAL2:54
      .= union sup rng phi by ORDINAL2:35;
    thus A*^2 c= A+^ 0
    proof
      let B;
      assume B in A*^2;
      then consider X such that
A11:  B in X and
A12:  X in sup rng phi by A10,TARSKI:def 4;
      reconsider X as Ordinal by A12;
      consider C being Ordinal such that
A13:  C in rng phi and
A14:  X c= C by A12,ORDINAL2:29;
      consider x such that
A15:  x in dom phi and
A16:  C = phi.x by A13,FUNCT_1:def 5;
      reconsider x as Ordinal by A15;
A17:  ex n st x*^2 = x+^ n by A7,A8,A15;
      C = x*^2 by A8,A9,A15,A16;
      then
A18:  C in A by A6,A8,A15,A17,Th112;
      A+^{} = A by ORDINAL2:44;
      hence thesis by A11,A14,A18,ORDINAL1:19;
    end;
A19: 1 in succ 1 by ORDINAL1:10;
A20: A+^ 0 = A by ORDINAL2:44;
A21: A = A*^1 by ORDINAL2:56;
    1 c= 2 by A19,ORDINAL1:def 2;
    hence thesis by A20,A21,ORDINAL2:59;
  end;
  for A holds P[A] from ORDINAL2:sch 1(A1,A2,A4);
  hence thesis;
end;

theorem Th115:
  A is limit_ordinal implies A *^ succ 1 = A
proof consider n such that
A1: A*^2 = A+^ n by Th114;
  assume A is limit_ordinal;
  then
A2: A+^ n is limit_ordinal by A1,ORDINAL3:48;
  now
    assume n <> 0;
    then consider k being Nat such that
A3: n = k+1 by NAT_1:6;
    reconsider k as Element of NAT by ORDINAL1:def 13;
    n = succ k by A3,NAT_1:39;
    then A+^ n = succ(A+^ k) by ORDINAL2:45;
    hence contradiction by A2,ORDINAL1:42;
  end;
  hence thesis by A1,ORDINAL2:44;
end;

Lm5: omega is limit_ordinal by ORDINAL1:def 12;

theorem Th116:
  omega c= A implies 1+^A = A
proof
  deffunc f(Ordinal) = 1+^$1;
  consider phi being Ordinal-Sequence such that
A1: dom phi = omega & for B st B in omega holds phi.B = f(B)
  from ORDINAL2:sch 3;
A2: 1+^omega = sup phi by A1,Lm5,ORDINAL2:46
    .= sup rng phi by ORDINAL2:35;
A3: 1+^omega c= omega
  proof
    let B;
    assume B in 1+^omega;
    then consider C being Ordinal such that
A4: C in rng phi and
A5: B c= C by A2,ORDINAL2:29;
    consider x such that
A6: x in dom phi and
A7: C = phi.x by A4,FUNCT_1:def 5;
    reconsider x as Ordinal by A6;
    reconsider x9 = x as Cardinal by A1,A6;
    reconsider x as finite Ordinal by A1,A6;
A8: card x9 = x by CARD_1:def 5;
    then
A9: x+^1 = (card x+1) by CARD_2:49;
A10: C = 1+^x by A1,A6,A7;
A11: 1+^x = x+^1 by A8,A9,CARD_2:49;
    succ x in omega by A1,A6,Lm5,ORDINAL1:41;
    then C in omega by A10,A11,ORDINAL2:48;
    hence thesis by A5,ORDINAL1:22;
  end;
  assume omega c= A;
  then
A12: ex B st A = omega+^B by ORDINAL3:30;
  omega c= 1+^omega by ORDINAL3:27;
  then omega = 1+^omega by A3,XBOOLE_0:def 10;
  hence thesis by A12,ORDINAL3:33;
end;

registration
  cluster infinite -> limit_ordinal Cardinal;
  coherence
  proof
    let M be Cardinal;
    assume M is infinite;
    then
A1: not M in omega;
    assume not thesis;
    then consider A such that
A2: M = succ A by ORDINAL1:42;
    omega <> M & omega c= M iff omega c< M by XBOOLE_0:def 8;
    then omega = succ A or omega in succ A by A1,A2,CARD_1:14,ORDINAL1:21;
    then
A3: omega c= A by Lm5,ORDINAL1:34,42;
    card (A+^1) = card 1 +` card A by CARD_2:24
      .= card (1+^A) by CARD_2:24
      .= card A by A3,Th116;
    then card succ A = card A by ORDINAL2:48;
    then
A4: A,succ A are_equipotent by CARD_1:21;
A5: not succ A c= A by ORDINAL1:7,10;
    ex B st succ A = B & for A st A,B are_equipotent holds B c= A by A2,
    CARD_1:def 1;
    hence contradiction by A4,A5;
  end;
end;

theorem Th117:
  not M is finite implies M+`M = M
proof
  assume not M is finite;
  then ( M)*^2 = M by Th115;
  then card M = (card 2)*`card M by CARD_2:25
    .= card (succ 1*^ M) by CARD_2:25
    .= card (1*^ M+^ M) by ORDINAL2:53
    .= card ( M+^ M) by ORDINAL2:56
    .= M+`M by CARD_2:def 1;
  hence thesis by CARD_1:def 5;
end;

theorem Th118:
  not M is finite & (N c= M or N in M) implies M+`N = M & N+`M = M
proof
  assume that
A1: not M is finite and
A2: N c= M or N in M;
A3: M+`M = M by A1,Th117;
A4: M+`M = card ( M +^ M) by CARD_2:def 1;
A5: M+`N = card ( M +^ N) by CARD_2:def 1;
  N c= M by A2,CARD_1:13;
  then
A6: M +^ N c= M +^ M by ORDINAL2:50;
A7: M c= M +^ N by ORDINAL3:27;
A8: card M = M by A3,A4;
A9: M+`N c= M by A3,A4,A5,A6,CARD_1:27;
  M c= M+`N by A5,A7,A8,CARD_1:27;
  hence thesis by A9,XBOOLE_0:def 10;
end;

theorem
  not X is finite & (X,Y are_equipotent or Y,X are_equipotent) implies
  X \/ Y,X are_equipotent & card (X \/ Y) = card X
proof
  assume that
A1: not X is finite and
A2: X,Y are_equipotent or Y,X are_equipotent;
A3: card X = card Y by A2,CARD_1:21;
A4: card X c= card (X \/ Y) by CARD_1:27,XBOOLE_1:7;
A5: card (X \/ Y) c= card X +` card Y by CARD_2:47;
  card X +` card Y = card X by A1,A3,Th117;
  then card X = card (X \/ Y) by A4,A5,XBOOLE_0:def 10;
  hence thesis by CARD_1:21;
end;

theorem
  not X is finite & Y is finite implies
  X \/ Y,X are_equipotent & card (X \/ Y) = card X
proof
  assume that
A1: not X is finite and
A2: Y is finite;
  card Y in card X by A1,A2,Th103;
  then
A3: card X +` card Y = card X by A1,Th118;
A4: card (X \/ Y) c= card X +` card Y by CARD_2:47;
  card X c= card (X \/ Y) by CARD_1:27,XBOOLE_1:7;
  then card X = card (X \/ Y) by A3,A4,XBOOLE_0:def 10;
  hence thesis by CARD_1:21;
end;

theorem
  not X is finite & (card Y in card X or card Y c= card X) implies
  X \/ Y,X are_equipotent & card (X \/ Y) = card X
proof
  assume that
A1: not X is finite and
A2: card Y in card X or card Y c= card X;
A3: card X +` card Y = card X by A1,A2,Th118;
A4: card (X \/ Y) c= card X +` card Y by CARD_2:47;
  card X c= card (X \/ Y) by CARD_1:27,XBOOLE_1:7;
  then card X = card (X \/ Y) by A3,A4,XBOOLE_0:def 10;
  hence thesis by CARD_1:21;
end;

theorem
  for M,N being finite Cardinal holds M+`N is finite
proof
  let M,N be finite Cardinal;
A1: card M = M by CARD_1:def 5;
  card N = N by CARD_1:def 5;
  then M+`N = card (card M + card N) by A1,CARD_2:51;
  hence thesis;
end;

theorem
  not M is finite implies not M+`N is finite & not N+`M is finite
proof
  assume
A1: not M is finite;
  M c= N or N c= M;
  then M c= N & not N is finite or M+`N = M & N+`M = M by A1,Th118;
  hence thesis by A1,Th118;
end;

theorem
  for M,N being finite Cardinal holds M*`N is finite
proof
  let M,N be finite Cardinal;
A1: card M = M by CARD_1:def 5;
  card N = N by CARD_1:def 5;
  then M*`N = card (card M * card N) by A1,CARD_2:52;
  hence thesis;
end;

theorem Th125:
  K in L & M in N or K c= L & M in N or K in L & M c= N or K c= L & M c= N
  implies K+`M c= L+`N & M+`K c= L+`N
proof
  assume that
A1: K in L & M in N or K c= L & M in N or K in L & M c= N or K c= L & M c=
  N;
A2: K c= L by A1,CARD_1:13;
A3: M c= N by A1,CARD_1:13;
A4: K+`M = card ( K +^ M) by CARD_2:def 1;
A5: L+`N = card ( L +^ N) by CARD_2:def 1;
A6: K +^ M c= L +^ N by A2,A3,ORDINAL3:21;
  hence K+`M c= L+`N by A4,A5,CARD_1:27;
  thus thesis by A4,A5,A6,CARD_1:27;
end;

theorem
  M in N or M c= N implies K+`M c= K+`N & K+`M c= N+`K &
  M+`K c= K+`N & M+`K c= N+`K by Th125;

definition
  let X;
  attr X is countable means
  : Def15:
  card X c= omega;
  attr X is denumerable means
  card X = omega;
end;

registration
  cluster denumerable -> countable infinite set;
  coherence
  proof
    let X be set;
    assume
A1: card X = omega;
    hence card X c= omega;
    thus thesis by A1;
  end;
  cluster countable infinite -> denumerable set;
  coherence
  proof
    let X be set;
    assume
A2: card X c= omega;
    assume X is infinite;
    then omega c= card X by Th102;
    hence card X = omega by A2,XBOOLE_0:def 10;
  end;
end;

registration
  cluster finite -> countable set;
  coherence
  proof
    let X be set;
    assume X is finite;
    then consider n being Nat such that
A1: X,n are_equipotent by CARD_1:74;
    card n = card X by A1,CARD_1:21;
    hence card X c= omega;
  end;
end;

registration
  cluster omega -> denumerable;
  coherence
  proof
    thus card omega = omega by CARD_1:84;
  end;
end;

registration
  cluster denumerable set;
  existence
  proof
    take omega;
    thus thesis;
  end;
end;

theorem Th127:
  X is countable iff ex f st dom f = NAT & X c= rng f
proof
  thus X is countable implies ex f st dom f = NAT & X c= rng f
  proof
    assume card X c= omega;
    hence thesis by CARD_1:28,84;
  end;
  assume ex f st dom f = NAT & X c= rng f;
  hence card X c= omega by CARD_1:28,84;
end;

registration
  let X be countable set;
  cluster -> countable Subset of X;
  coherence
  proof
    let Y be Subset of X;
A1: card Y c= card X by CARD_1:27;
    card X c= omega by Def15;
    hence card Y c= omega by A1,XBOOLE_1:1;
  end;
end;

Lm6: Y c= X & X is countable implies Y is countable;

theorem Th128:
  X is countable & Y is countable implies X \/ Y is countable
proof
  assume that
A1: card X c= omega and
A2: card Y c= omega;
A3: card (X \/ Y) c= card X +` card Y by CARD_2:47;
A4: omega +` omega = omega by Th117;
  card X +` card Y c= omega +` omega by A1,A2,Th125;
  hence card (X \/ Y) c= omega by A3,A4,XBOOLE_1:1;
end;

theorem
  X is countable implies X /\ Y is countable
  by Lm6,XBOOLE_1:17;

theorem
  X is countable implies X \ Y is countable;

theorem
  X is countable & Y is countable implies X \+\ Y is countable
proof
  assume that
A1: X is countable and
A2: Y is countable;
A3: X \ Y is countable by A1;
  Y \ X is countable by A2;
  hence thesis by A3,Th128;
end;

theorem Th132:
  (card dom f c= M & for x st x in dom f holds card (f.x) c= N) implies
  card Union f c= M*`N
proof
  assume that
A1: card dom f c= M and
A2: for x st x in dom f holds card (f.x) c= N;
A3: card Union f c= Sum Card f by Th54;
A4: dom Card f = dom f by Def2;
A5: dom(dom f --> N) = dom f by FUNCOP_1:19;
  now
    let x;
    assume
A6: x in dom Card f;
    then
A7: (Card f).x = card (f.x) by A4,Def2;
    (dom f --> N).x = N by A4,A6,FUNCOP_1:13;
    hence (Card f).x c= (dom f --> N).x by A2,A4,A6,A7;
  end;
  then Sum Card f c= Sum(dom f --> N) by A4,A5,Th43;
  then
A8: card Union f c= Sum(dom f --> N) by A3,XBOOLE_1:1;
A9: [:card dom f,N:] c= [:M,N:] by A1,ZFMISC_1:118;
  Sum(dom f --> N) = card [:N,dom f:] by Th36
    .= card [:N,card dom f:] by CARD_2:14
    .= card [:card dom f,N:] by CARD_2:11;
  then
A10: Sum(dom f --> N) c= card [:M,N:] by A9,CARD_1:27;
  card [:M,N:] = M*`N by CARD_2:def 2;
  hence thesis by A8,A10,XBOOLE_1:1;
end;

theorem
  (card X c= M & for Y st Y in X holds card Y c= N) implies card union X c=
  M*`N
proof
  assume that
A1: card X c= M and
A2: for Y st Y in X holds card Y c= N;
A3: dom id X = X by RELAT_1:71;
  now
    let x;
    assume x in dom id X;
    then (id X).x in X by A3,FUNCT_1:35;
    hence card ((id X).x) c= N by A2;
  end;
  then card Union id X c= M*`N by A1,A3,Th132;
  hence thesis by RELAT_1:71;
end;

theorem Th134:
  for f st dom f is finite &
  for x st x in dom f holds f.x is finite holds Union f is finite
proof
  let f;
  assume that
A1: dom f is finite and
A2: for x st x in dom f holds f.x is finite;
  reconsider df = dom f as finite set by A1;
  now
    assume dom f <> {};
    then
A3: df <> {};
    defpred P[set,set] means card (f.$2) c= card (f.$1);
A4: for x,y holds P[x,y] or P[y,x];
A5: for x,y,z being set st P[x,y] & P[y,z] holds P[x,z] by XBOOLE_1:1;
    consider x such that
A6: x in df & for y st y in df holds P[x,y] from MaxFinSetElem(A3,A4,
    A5);
    reconsider fx = f.x as finite set by A2,A6;
A7: card Union f c= (card card df) *` (card (f.x)) by A6,Th132;
    card (f.x) = card card fx;
    then card Union f c= card ((card df) * (card fx)) by A7,CARD_2:52;
    hence thesis;
  end;
  hence thesis by RELAT_1:65,ZFMISC_1:2;
end;

theorem
  (omega)*`(card n) c= omega & (card n)*`(omega) c= omega
proof
  defpred P[Nat] means (omega)*`(card $1) c= omega;
  (omega)*`(card 0) = 0 by CARD_2:32;
  then
A1: P[0];
A2: for k being Nat holds P[k] implies P[k+1]
  proof
    let k be Nat;
    assume
A3: P[k];
    card (k+1) = (k+1) by CARD_1:def 5
      .= succ k by NAT_1:39;
    then card (k+1) = card succ k;
    then (omega)*`(card (k+1)) =
    card (succ k *^ omega) by CARD_1:84,CARD_2:25
      .= card ( k *^ omega +^ omega) by ORDINAL2:53
      .= card ( k *^ omega) +` omega by CARD_1:84,CARD_2:24
      .= (omega)*`(card k) +` omega by CARD_1:84,CARD_2:25
      .= omega by A3,Th118;
    hence thesis;
  end;
A4: for k being Nat holds P[k] from NAT_1:sch 2(A1,A2);
  hence (omega)*`(card n) c= omega;
  thus thesis by A4;
end;

theorem Th136:
  K in L & M in N or K c= L & M in N or K in L & M c= N or K c= L & M c= N
  implies K*`M c= L*`N & M*`K c= L*`N
proof
  assume that
A1: K in L & M in N or K c= L & M in N or K in L & M c= N or K c= L & M c=
  N;
A2: K c= L by A1,CARD_1:13;
A3: M c= N by A1,CARD_1:13;
A4: K*`M = card [:K,M:] by CARD_2:def 2;
A5: L*`N = card [:L,N:] by CARD_2:def 2;
A6: [:K,M:] c= [:L,N:] by A2,A3,ZFMISC_1:119;
  hence K*`M c= L*`N by A4,A5,CARD_1:27;
  thus thesis by A4,A5,A6,CARD_1:27;
end;

theorem
  M in N or M c= N implies
  K*`M c= K*`N & K*`M c= N*`K & M*`K c= K*`N & M*`K c= N*`K by Th136;

theorem Th138:
  K in L & M in N or K c= L & M in N or K in L & M c= N or K c= L & M c= N
  implies K = 0 or exp(K,M) c= exp(L,N)
proof
  assume that
A1: K in L & M in N or K c= L & M in N or K in L & M c= N or K c= L & M c=
  N;
A2: K c= L by A1,CARD_1:13;
A3: M c= N by A1,CARD_1:13;
  now
    assume L <> {};
    then
A4: Funcs(N\M,L) <> {} by FUNCT_2:11;
    0 c= card Funcs(N\M,L);
    then 0 in card Funcs(N\M,L) by A4,CARD_1:13;
    then
A5: nextcard card 0 c= card Funcs(N\M,L) by CARD_1:def 6;
    0+1 = 1;
    then
A6: 1 c= card Funcs(N\M,L) by A5,Lm3,NAT_1:43;
A7: M misses (N\M) by XBOOLE_1:79;
A8: exp(K,M) = card Funcs(M,K) by CARD_2:def 3;
A9: exp(L,N) = card Funcs(N,L) by CARD_2:def 3;
A10: N = M \/ (N\M) by A3,XBOOLE_1:45;
    Funcs(M,K) c= Funcs(M,L) by A2,FUNCT_5:63;
    then
A11: exp(K,M) c= card Funcs(M,L) by A8,CARD_1:27;
A12: exp(L,N) = card [:Funcs(M,L),Funcs(N\M,L):] by A7,A9,A10,FUNCT_5:69;
A13: card [:Funcs(M,L),Funcs(N\M,L):] = card [:card Funcs(M,L),card Funcs(N\
    M,L):] by CARD_2:14;
    card Funcs(M,L) *` card Funcs(N\M,L) = card [:card Funcs(M,L),card
    Funcs(N\M,L):] by CARD_2:def 2;
    then 1 *` card Funcs(M,L) c= exp(L,N) by A6,A12,A13,Th136;
    then card Funcs(M,L) c= exp(L,N) by CARD_2:33;
    hence thesis by A11,XBOOLE_1:1;
  end;
  hence thesis by A1;
end;

theorem
  M in N or M c= N implies K = 0 or
  exp(K,M) c= exp(K,N) & exp(M,K) c= exp(N,K)
proof
  assume that
A1: M in N or M c= N and
A2: K <> 0;
  thus exp(K,M) c= exp(K,N) by A1,A2,Th138;
  M = 0 implies exp(M,K) = 0 by A2,CARD_2:39;
  hence thesis by A1,Th138;
end;

theorem Th140:
  M c= M+`N & N c= M+`N
proof
A1: M c= M +^ N by ORDINAL3:27;
A2: N c= M +^ N by ORDINAL3:27;
A3: card N = N by CARD_1:def 5;
  card M = M by CARD_1:def 5;
  then
A4: M c= card ( M +^ N) by A1,CARD_1:27;
  N c= card ( M +^ N) by A2,A3,CARD_1:27;
  hence thesis by A4,CARD_2:def 1;
end;

theorem
  N <> 0 implies M c= M*`N & M c= N*`M
proof
  assume
A1: N <> 0;
A2: card M = M by CARD_1:def 5;
  card N = N by CARD_1:def 5;
  then
A3: M*`N = card ( M *^ N) by A2,CARD_2:25;
  M c= M *^ N by A1,ORDINAL3:39;
  hence thesis by A2,A3,CARD_1:27;
end;

theorem Th142:
  K in L & M in N implies K+`M in L+`N & M+`K in L+`N
proof
A1: for K,L,M,N st K in L & M in N & L c= N holds K+`M in L+`N
  proof
    let K,L,M,N such that
A2: K in L and
A3: M in N and
A4: L c= N;
A5: now
      assume
A6:   N is finite;
      then reconsider N as finite Cardinal;
      reconsider L,M,K as finite Cardinal by A2,A3,A4,A6,Th111;
A7:   card K = K by CARD_1:def 5;
A8:   card L = L by CARD_1:def 5;
A9:   card M = M by CARD_1:def 5;
A10:  card N = N by CARD_1:def 5;
A11:  K+`M = card (card K + card M) by A7,A9,CARD_2:51;
A12:  L+`N = card (card L + card N) by A8,A10,CARD_2:51;
A13:  card K < card L by A2,A7,A8,NAT_1:42;
      card M < card N by A3,A9,A10,NAT_1:42;
      then card K + card M < card L + card N by A13,XREAL_1:10;
      hence thesis by A11,A12,NAT_1:42;
    end;
    now
      assume
A14:  not N is finite;
      then
A15:  L+`N = N by A4,Th118;
A16:  omega c= N by A14,Th102;
      K c= M & (M is finite or not M is finite) or
      M c= K & (K is finite or not K is finite);
      then
A17:  K is finite & M is finite or K+`M = M or K+`M = K & K in N by A2
      ,A4,Th118;
      now
        assume that
A18:    K is finite and
A19:    M is finite;
        reconsider K,M as finite Cardinal by A18,A19;
A20:    card K = K by CARD_1:def 5;
        card M = M by CARD_1:def 5;
        then K+`M = card (card K + card M) by A20,CARD_2:51
          .= (card K + card M) by CARD_1:def 5;
        hence thesis by A15,A16,TARSKI:def 3;
      end;
      hence thesis by A3,A4,A14,A17,Th118;
    end;
    hence thesis by A5;
  end;
  L c= N or N c= L;
  hence thesis by A1;
end;

theorem
  K+`M in K+`N implies M in N
proof
  assume that
A1: K+`M in K+`N and
A2: not M in N;
  N c= M by A2,CARD_1:14;
  then K+`N c= K+`M by Th125;
  hence thesis by A1,CARD_1:14;
end;

theorem
  card X +` card Y = card X & card Y in card X implies card (X \ Y) = card X
proof
  assume that
A1: card X +` card Y = card X and
A2: card Y in card X;
A3: card X c= card (X \/ Y) by CARD_1:27,XBOOLE_1:7;
  card (X \/ Y) c= card X by A1,CARD_2:47;
  then
A4: card (X \/ Y) = card X by A3,XBOOLE_0:def 10;
  (X \ Y) \/ Y = X \/ Y by XBOOLE_1:39;
  then
A5: card X = card (X \ Y) +` card Y by A4,CARD_2:48,XBOOLE_1:79;
  then
A6: card (X \ Y) c= card X by Th140;
A7: now
    assume not card X is finite;
    then
A8: card X +` card X = card X by Th117;
    assume not thesis;
    then card (X \ Y) in card X by A6,CARD_1:13;
    then card X in card X by A2,A5,A8,Th142;
    hence contradiction;
  end;
  now
    assume card X is finite;
    then reconsider X,Y as finite set by A2,Th111;
    card Y = card card Y;
    then card (card X + card Y) = card card X by A1,CARD_2:51;
    then card X + card Y = card X + 0 by CARD_1:71;
    then Y = {};
    hence thesis;
  end;
  hence thesis by A7;
end;

theorem
  K*`M in K*`N implies M in N
proof
  assume that
A1: K*`M in K*`N and
A2: not M in N;
  N c= M by A2,CARD_1:14;
  then K*`N c= K*`M by Th136;
  hence thesis by A1,CARD_1:14;
end;

registration
  let A be finite set, B be set, f be Function of A, Fin B;
  cluster Union f -> finite;
  coherence
  proof
    now
      let x be set;
      assume
A1:   x in dom f;
      then reconsider A as non empty set;
      reconsider x9 = x as Element of A by A1;
      reconsider f9 = f as Function of A, Fin B;
      f9.x9 is finite;
      hence f.x is finite;
    end;
    hence thesis by Th134;
  end;
end;

theorem
  for A being non empty countable set
  ex f being Function of NAT, A st rng f = A
proof
  let A be non empty countable set;
  consider f being Function such that
A1: dom f = NAT and
A2: A c= rng f by Th127;
  consider x being set such that
A3: x in A by XBOOLE_0:def 1;
  set F = f|(f"A) +* (NAT \ f"A --> x);
A4: rng F = A & dom F = NAT
  proof
A5: f"A c= NAT by A1,RELAT_1:167;
A6: dom(f|(f"A)) = NAT /\ (f"A) by A1,RELAT_1:90;
    per cases;
    suppose
A7:   NAT = f"A;
      then
A8:   NAT \ f"A = {} by XBOOLE_1:37;
      then dom(f|(f"A)) /\ dom(NAT \ f"A --> x) = {};
      then dom(f|(f"A)) misses dom(NAT \ f"A --> x) by XBOOLE_0:def 7;
      then F = (f|(f"A)) \/ (NAT \ f"A --> x) by FUNCT_4:32;
      hence rng F = rng(f|(f"A)) \/ rng(NAT \ f"A --> x) by RELAT_1:26
        .= rng(f|(f"A)) \/ {} by A8
        .= f.:(f"A) by RELAT_1:148
        .= A by A2,FUNCT_1:147;
      thus
      dom F = dom(f|(f"A)) \/ dom(NAT \ f"A --> x) by FUNCT_4:def 1
        .= dom(f|(f"A)) \/ {} by A8
        .= NAT by A6,A7;
    end;
    suppose
A9:   NAT <> f"A;
A10:  now
        assume NAT \ f"A is empty;
        then NAT c= f"A by XBOOLE_1:37;
        hence contradiction by A5,A9,XBOOLE_0:def 10;
      end;
      dom(NAT \ f"A --> x) = NAT \ f"A by FUNCOP_1:19;
      then F = (f|(f"A)) \/ (NAT \ f"A --> x) by A6,FUNCT_4:32
      ,XBOOLE_1:89;
      hence rng F = rng(f|(f"A)) \/ rng(NAT \ f"A --> x) by RELAT_1:26
        .= rng(f|(f"A)) \/ {x} by A10,FUNCOP_1:14
        .= f.:(f"A) \/ {x} by RELAT_1:148
        .= A \/ {x} by A2,FUNCT_1:147
        .= A by A3,ZFMISC_1:46;
      thus
      dom F = dom(f|(f"A)) \/ dom(NAT \ f"A --> x) by FUNCT_4:def 1
        .= NAT /\ (f"A) \/ (NAT \ f"A) by A6,FUNCOP_1:19
        .= NAT by XBOOLE_1:51;
    end;
  end;
  then reconsider F as Function of NAT, A by FUNCT_2:def 1,RELSET_1:11;
  take F;
  thus thesis by A4;
end;

:: from CIRCCOMB, 2009.01.26, A.T.

theorem
  for f,g being non-empty Function, x being Element of product f,
  y being Element of product g holds x+*y in product (f+*g)
proof
  let f,g be non-empty Function, x be Element of product f;
  let y be Element of product g;
A1: dom x = dom f by Th18;
A2: dom y = dom g by Th18;
  then
A3: dom (x+*y) = dom f \/ dom g by A1,FUNCT_4:def 1;
A4: dom (f+*g) = dom f \/ dom g by FUNCT_4:def 1;
  now
    let z be set;
    assume
A5: z in dom (f+*g);
    then z in dom g or not z in dom g & z in dom f by A4,XBOOLE_0:def 3;
    then (x+*y).z = x.z & (f+*g).z = f.z & x.z in f.z or
    (x+*y).z = y.z & (f+*g).z = g.z & y.z in g.z
    by A1,A2,A4,A5,Th18,FUNCT_4:def 1;
    hence (x+*y).z in (f+*g).z;
  end;
  hence thesis by A3,A4,Th18;
end;

theorem
  for f,g being non-empty Function
  for x being Element of product (f+*g) holds x|dom g in product g
proof
  let f,g be non-empty Function;
  let x be Element of product (f+*g);
A1: dom x = dom (f+*g) by Th18;
A2: dom (f+*g) = dom f \/ dom g by FUNCT_4:def 1;
  then
A3: dom g c= dom x by A1,XBOOLE_1:7;
A4: dom (x|dom g) = dom g by A1,A2,RELAT_1:91,XBOOLE_1:7;
  now
    let z be set;
    assume
A5: z in dom (x|dom g);
    then
A6: (x|dom g).z = x.z by FUNCT_1:70;
    (f+*g).z = g.z by A4,A5,FUNCT_4:14;
    hence (x|dom g).z in g.z by A1,A3,A4,A5,A6,Th18;
  end;
  hence thesis by A4,Th18;
end;

theorem
  for f,g being non-empty Function st f tolerates g
  for x being Element of product (f+*g) holds x|dom f in product f
proof
  let f,g be non-empty Function such that
A1: f tolerates g;
  let x be Element of product (f+*g);
A2: dom x = dom (f+*g) by Th18;
A3: dom (f+*g) = dom f \/ dom g by FUNCT_4:def 1;
  then
A4: dom f c= dom x by A2,XBOOLE_1:7;
A5: dom (x|dom f) = dom f by A2,A3,RELAT_1:91,XBOOLE_1:7;
  now
    let z be set;
    assume
A6: z in dom (x|dom f);
    then
A7: (x|dom f).z = x.z by FUNCT_1:70;
    (f+*g).z = f.z by A1,A5,A6,FUNCT_4:16;
    hence (x|dom f).z in f.z by A2,A4,A5,A6,A7,Th18;
  end;
  hence thesis by A5,Th18;
end;

:: missing, 2009.09.06, A.T.

theorem Th150:
  for S being with_common_domain functional set, f be Function
     st f in S  holds dom f = dom product" S
  proof let S be with_common_domain functional set, f be Function such that
Z: f in S;
  for x being set holds x in dom f iff x in dom product" S
   proof let x be set;
    thus x in dom f implies x in dom product" S
     proof assume x in dom f;
       then for g being Function st g in S holds x in dom g by Z,Def10;
      hence thesis by Z,Def13;
     end;
    thus thesis by Z,Def13;
   end;
   hence thesis by TARSKI:2;
  end;

theorem Th151:
  for S being functional set, f be Function, i be set
     st f in S & i in dom product" S holds f.i in (product" S).i
proof
  let S being functional set, F be Function, i be set such that
Z1: F in S;
  assume i in dom product" S;
   then (product" S).i = {f.i where f is Element of S: not contradiction}
      by Z1,Th90;
 hence F.i in (product" S).i by Z1;
end;

theorem
  for S being with_common_domain functional set, f be Function, i be set
     st f in S & i in dom f holds f.i in (product" S).i
 proof let S be with_common_domain functional set, f be Function, i be set;
  assume that
Z1: f in S and
Z2: i in dom f;
   dom f = dom(product" S) by Z1,Th150;
  hence f.i in (product" S).i by Z1,Z2,Th151;
 end;

:: 2009.09.12, A.T.

registration let X be with_common_domain set;
 cluster -> with_common_domain Subset of X;
 coherence
  proof let Y be Subset of X;
   let f,g be Function;
   thus thesis by Def10;
  end;
end;

:: from PRALG_3, 2009.09.18, A.T.

definition
  let f be Function, x be set;
  func proj(f,x) -> Function means
:Def17:
  dom it = product f & for y being
  Function st y in dom it holds it.y = y.x;
  existence
  proof
    defpred P[set,set] means for g be Function st $1 = g holds $2 = g.x;
A1: now
      let q be set;
      assume q in product f;
      then reconsider q1 = q as Function;
      take y = q1.x;
      thus P[q,y];
    end;
    consider F be Function such that
A2: dom F = product f & for a being set st a in product f holds P[a,F.
    a] from CLASSES1:sch 1(A1);
    take F;
    thus thesis by A2;
  end;
  uniqueness
  proof
    let F,G be Function such that
A3: dom F = product f and
A4: for y being Function st y in dom F holds F.y = y.x and
A5: dom G = product f and
A6: for y being Function st y in dom G holds G.y = y.x;
    now
      let y be set;
      assume
A7:   y in product f;
      then reconsider x1 = y as Function;
      thus F.y = x1.x by A3,A4,A7
        .= G.y by A5,A6,A7;
    end;
    hence thesis by A3,A5,FUNCT_1:9;
  end;
end;

registration
  let f be Function, x be set;
  cluster proj(f,x) -> (product f)-defined;
  coherence
   proof
     dom proj(f,x) = product f by Def17;
    hence thesis by RELAT_1:def 18;
   end;
end;

registration
  let f be Function, x be set;
  cluster proj(f,x) -> total;
  coherence
   proof
     dom proj(f,x) = product f by Def17;
    hence thesis by PARTFUN1:def 4;
   end;
end;

registration
  let f be non-empty Function;
  cluster -> f-compatible Element of product f;
  coherence
   proof let e be Element of product f;
    let x;
    assume x in dom e;
     then x in dom f by Th18;
    hence e.x in f.x by Th18;
   end;
end;

registration
  let I be set; let f be I-defined non-empty Function;
  cluster -> I-defined Element of product f;
  coherence
   proof let e be Element of product f;
     dom f c= I by RELAT_1:def 18;
    hence dom e c= I by Th18;
   end;
end;

registration
  let f be Function;
  cluster -> f-compatible Element of sproduct f;
  coherence
   proof let e be Element of sproduct f;
    let x;
    thus thesis by Th65;
   end;
end;

registration
  let I be set; let f be I-defined Function;
  cluster -> I-defined Element of sproduct f;
  coherence
   proof let e be Element of sproduct f;
A:   dom f c= I by RELAT_1:def 18;
     dom e c= dom f by Th65;
    hence dom e c= I by A,XBOOLE_1:1;
   end;
end;

registration
  let I be set; let f be total (I-defined non-empty Function);
  cluster -> total Element of product f;
  coherence
   proof let e be Element of product f;
    thus dom e = dom f by Th18
           .= I by PARTFUN1:def 4;
   end;
end;

theorem Th153:
 for I being set, f being non-empty I-defined Function
 for p being f-compatible I-defined Function
  holds p in sproduct f
 proof let I be set, f be non-empty I-defined Function;
  let p be f-compatible I-defined Function;
A: dom p c= dom f by FUNCT_1:175;
   for x being set st x in dom p holds p.x in f.x by FUNCT_1:def 20;
  hence p in sproduct f by A,Def9;
 end;

theorem
 for I being set, f being non-empty I-defined Function
 for p being f-compatible I-defined Function
  ex s being Element of product f st p c= s
proof let I be set;
  let f be non-empty I-defined Function,
  p be f-compatible I-defined Function;
  reconsider p as Element of sproduct f by Th153;
  consider h being Element of product f;
  reconsider s = h +* p as Element of product f by Th69;
  take s;
  thus thesis by FUNCT_4:26;
end;

