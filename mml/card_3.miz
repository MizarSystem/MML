:: K\"onig's Theorem
::  by Grzegorz Bancerek
::
:: Received April 10, 1990
:: Copyright (c) 1990 Association of Mizar Users

environ

 vocabularies ORDINAL1, CARD_1, FUNCT_1, RELAT_1, BOOLE, FUNCOP_1, FUNCT_2,
      TARSKI, MCART_1, PROB_1, RLVECT_1, CARD_2, ORDINAL2, FINSET_1, ARYTM_1,
      CLASSES1, ZFMISC_1, WELLORD1, WELLORD2, RELAT_2, CARD_3, HAHNBAN,
      FRAENKEL, AMI_1, ZF_REFLE, PARTFUN1, FUNCT_4, CAT_1, ARYTM, SETFAM_1,
      AMISTD_2, PRALG_2;
 notations TARSKI, XBOOLE_0, ZFMISC_1, SUBSET_1, CARD_1, NUMBERS, XCMPLX_0,
      NAT_1, RELAT_1, RELAT_2, FUNCT_1, RELSET_1, PARTFUN1, FUNCT_2, FRAENKEL,
      SETFAM_1, ORDINAL1, WELLORD1, MCART_1, WELLORD2, FUNCOP_1, FUNCT_4,
      FINSET_1, CARD_2, CLASSES1;
 constructors SETFAM_1, RELAT_2, WELLORD1, PARTFUN1, WELLORD2, FUNCOP_1,
      FUNCT_4, FRAENKEL, XREAL_0, NAT_1, CARD_2, CLASSES1;
 registrations XBOOLE_0, SUBSET_1, SETFAM_1, RELAT_1, FUNCT_1, ORDINAL1,
      FUNCOP_1, FUNCT_4, FINSET_1, FRAENKEL, XREAL_0, CARD_1;
 requirements NUMERALS, BOOLE, SUBSET;
 definitions TARSKI, FUNCT_1, RELAT_2, WELLORD1, WELLORD2, XBOOLE_0, FRAENKEL,
      FUNCOP_1, RELAT_1;
 theorems TARSKI, ZFMISC_1, FINSET_1, FUNCT_1, FUNCT_2, MCART_1, ORDINAL1,
      RELAT_1, RELAT_2, WELLORD1, WELLORD2, CARD_1, FUNCOP_1, FUNCT_5, CARD_2,
      CLASSES1, GRFUNC_1, XBOOLE_0, XBOOLE_1, XCMPLX_1, SETFAM_1, FUNCT_4,
      PARTFUN1, FRAENKEL, RELSET_1, NAT_1, SUBSET_1;
 schemes NAT_1, FUNCT_1, PARTFUN1, ORDINAL1, FUNCT_5, RELAT_1, XBOOLE_0,
      CLASSES1;

begin

reserve A,B,C for Ordinal,
  K,M,N for Cardinal,
  x,y,y1,y2,z,u,X,Y,Z,Z1,Z2 for set,
  n for Element of NAT,
  f,f1,g,h for Function,
  Q,R for Relation;

definition
  let IT be Function;
  attr IT is Cardinal-yielding means
  :
  Def1: for x st x in dom IT holds IT.x is Cardinal;
end;

registration
  cluster Cardinal-yielding Function;
  existence
  proof
    consider M;
    consider X;
    take f = X --> M;
A1: dom f = X & for x st x in X holds f.x = M by FUNCOP_1:13,19;
    let x;
    assume x in dom f;
    hence thesis by A1;
  end;
end;

definition
  mode Cardinal-Function is Cardinal-yielding Function;
end;

reserve ff for Cardinal-Function;

registration
  let ff,X;
  cluster ff|X -> Cardinal-yielding;
  coherence
  proof
    ff|X is Cardinal-yielding
    proof
      let x;
      assume
A1:   x in dom(ff|X);
      then
A2:   (ff|X).x = ff.x & dom(ff|X) = dom ff /\ X by FUNCT_1:70,RELAT_1:90;
      then x in dom ff by A1,XBOOLE_0:def 3;
      hence thesis by A2,Def1;
    end;
    hence thesis;
  end;
end;

registration
  let X,K;
  cluster X --> K -> Cardinal-yielding;
  coherence
  proof
      let x;
      assume x in dom(X --> K);
      then x in X;
      hence thesis by FUNCOP_1:13;
  end;
end;

registration
  let X,K;
  cluster X .--> K -> Cardinal-yielding;
  coherence;
end;

canceled 2;

theorem
  {} is Cardinal-Function
proof consider K;
  {} = {} --> K;
  hence thesis;
end;

scheme CFLambda { A()->set, F(set)->Cardinal } :
  ex ff st dom ff = A() & for x st x in A() holds ff.x = F(x)
proof
  consider f such that
A1: dom f = A() & for x st x in A() holds f.x = F(x) from FUNCT_1:sch 3;
  f is Cardinal-yielding
  proof
    let x;
    assume x in dom f;
    then f.x = F(x) by A1;
    hence thesis;
  end;
  then reconsider f as Cardinal-Function;
  take f; thus thesis by A1;
end;

definition
  let f;
  func Card f -> Cardinal-Function means
  :
  Def2: dom it = dom f & for x st x in dom f holds it.x = Card(f.x);
  existence
  proof
    deffunc f(set) = Card (f.$1);
    thus ex g being Cardinal-Function st
    dom g = dom f & for x st x in dom f holds g.x = f(x) from CFLambda;
  end;
  uniqueness
  proof
    let a1,a2 be Cardinal-Function such that
A1: dom a1 = dom f & for x st x in dom f holds a1.x = Card(f.x) and
A2: dom a2 = dom f & for x st x in dom f holds a2.x = Card(f.x);
    now
      let x;
      assume x in dom f;
      then a1.x = Card(f.x) & a2.x = Card(f.x) by A1,A2;
      hence a1.x = a2.x;
    end;
    hence thesis by A1,A2,FUNCT_1:9;
  end;
  func disjoin f -> Function means
  :
  Def3: dom it = dom f & for x st x in dom f holds it.x = [:f.x,{x}:];
  existence
  proof
    deffunc f(set) = [:f.$1,{$1}:];
    thus ex g being Function st
    dom g = dom f & for x st x in dom f holds g.x = f(x) from FUNCT_1:sch 3;
  end;
  uniqueness
  proof
    let a1,a2 be Function such that
A3: dom a1 = dom f & for x st x in dom f holds a1.x = [:f.x,{x}:] and
A4: dom a2 = dom f & for x st x in dom f holds a2.x = [:f.x,{x}:];
    now
      let x;
      assume x in dom f;
      then a1.x = [:f.x,{x}:] & a2.x = [:f.x,{x}:] by A3,A4;
      hence a1.x = a2.x;
    end;
    hence thesis by A3,A4,FUNCT_1:9;
  end;
  func Union f -> set equals

  union rng f;
  correctness;
  defpred P[set] means
  ex g st $1 = g & dom g = dom f & for x st x in dom f holds g.x in f.x;
  func product f -> set means
  :
  Def5: x in it iff ex g st x = g & dom g = dom f &
  for y st y in dom f holds g.y in f.y;
  existence
  proof
    consider X such that
A5: x in X iff x in Funcs(dom f, union rng f) & P[x] from XBOOLE_0:sch 1;
    take X;
    let x;
    thus x in X implies ex g st x = g & dom g = dom f &
    for x st x in dom f holds g.x in f.x by A5;
    given g such that
A6: x = g & dom g = dom f & for x st x in dom f holds g.x in f.x;
    rng g c= union rng f
    proof
      let y;
      assume y in rng g;
      then consider z such that
A7:   z in dom g & y = g.z by FUNCT_1:def 5;
      y in f.z & f.z = f.z & f.z in rng f by A6,A7,FUNCT_1:def 5;
      hence thesis by TARSKI:def 4;
    end;
    then x in Funcs(dom f, union rng f) by A6,FUNCT_2:def 2;
    hence thesis by A5,A6;
  end;
  uniqueness
  proof
    let X1,X2 be set such that
A8: x in X1 iff P[x] and
A9: x in X2 iff P[x];
    thus thesis from XBOOLE_0:sch 2(A8,A9);
  end;
end;

canceled 4;

theorem Th8:
  Card ff = ff
proof
  now
    let x;
    assume x in dom ff;
    then reconsider M = ff.x as Cardinal by Def1;
    Card M = M by CARD_1:def 5;
    hence ff.x = Card (ff.x);
  end;
  hence thesis by Def2;
end;

theorem
  Card {} = {}
proof consider K;
  Card({} --> K) = {} --> K & {} --> K = {} by Th8;
  hence thesis;
end;

theorem
  Card (X --> Y) = X --> Card Y
proof
A1: dom Card (X --> Y) = dom(X --> Y) by Def2;
  then
A2: dom Card (X --> Y) = X & dom (X --> Card Y) = X by FUNCOP_1:19;
  now
    let x;
    assume x in X;
    then Card (X --> Y).x = Card ((X --> Y).x) & (X --> Card Y).x = Card Y &
    (X --> Y).x = Y & Y = Y by A1,A2,Def2,FUNCOP_1:13;
    hence Card (X --> Y).x = (X --> Card Y).x;
  end;
  hence thesis by A2,FUNCT_1:9;
end;

theorem
  disjoin {} = {}
proof
  dom disjoin {} = {} by Def3,RELAT_1:60;
  hence thesis by RELAT_1:64;
end;

theorem Th12:
  disjoin (x .--> X) = x .--> [:X,{x}:]
proof
A1: dom disjoin ({x} --> X) = dom ({x} --> X) & dom ({x} --> X) = {x} &
  dom ({x} --> [:X,{x}:]) = {x} by Def3,FUNCOP_1:19;
  now
    let y;
    assume y in {x};
    then disjoin ({x} --> X).y = [:({x} --> X).y,{y}:] & ({x} --> X).y = X &
    ({x} --> [:X,{x}:]).y = [:X,{x}:] & y = x & X = X
    by A1,Def3,FUNCOP_1:13,TARSKI:def 1;
    hence disjoin ({x} --> X).y = ({x} --> [:X,{x}:]).y;
  end;
  hence thesis by A1,FUNCT_1:9;
end;

theorem
  x in dom f & y in dom f & x <> y implies (disjoin f).x misses (disjoin f).y
proof
  assume
A1: x in dom f & y in dom f & x <> y;
  consider z being Element of ((disjoin f).x) /\ ((disjoin f).y);
  assume ((disjoin f).x) /\ ((disjoin f).y) <> {};
  then (disjoin f).x = [:f.x,{x}:] & (disjoin f).y = [:f.y,{y}:] &
  (disjoin f).x = (disjoin f).x & (disjoin f).y = (disjoin f).y &
  z in (disjoin f).x & z in (disjoin f).y by A1,Def3,XBOOLE_0:def 3;
  then z`2 in {x} & z`2 in {y} by MCART_1:10;
  then z`2 = x & z`2 = y by TARSKI:def 1;
  hence contradiction by A1;
end;

canceled;

theorem Th15:
  Union (X --> Y) c= Y
proof
  let x;
  assume x in Union (X --> Y);
  then consider Z such that
A1: x in Z & Z in rng (X --> Y) by TARSKI:def 4;
A2: ex z st z in dom (X --> Y) & Z = (X --> Y).z by A1,FUNCT_1:def 5;
  thus x in Y by A1,A2,FUNCOP_1:13;
end;

theorem Th16:
  X <> {} implies Union (X --> Y) = Y
proof
  assume
A1: X <> {};
  consider x being Element of X;
  thus Union (X --> Y) c= Y by Th15;
  dom (X --> Y) = X & (X --> Y).x = Y by A1,FUNCOP_1:13,19;
  then Y in rng (X --> Y) & Union (X --> Y) = union rng (X --> Y)
  by A1,FUNCT_1:def 5;
  hence thesis by ZFMISC_1:92;
end;

theorem
  Union (x .--> Y) = Y by Th16;

theorem Th18:
  g in product f iff dom g = dom f & for x st x in dom f holds g.x in f.x
proof
  thus g in product f implies
  dom g = dom f & for x st x in dom f holds g.x in f.x
  proof
    assume g in product f;
    then ex h being Function st
    g = h & dom h = dom f & for x st x in dom f holds h.x in f.x by Def5;
    hence thesis;
  end;
  thus thesis by Def5;
end;

theorem Th19:
  product {} = {{}}
proof
  thus product {} c= {{}}
  proof
    let x;
    assume x in product {};
    then ex g st
    x = g & dom g = dom {} & for y st y in dom {} holds g.y in {} .y by Def5;
    then x = {} by RELAT_1:64;
    hence thesis by TARSKI:def 1;
  end;
  let x;
  assume x in {{}};
  then x = {} & for y st y in dom {} holds {} .y in {} .y by TARSKI:def 1;
  hence thesis by Th18;
end;

theorem Th20:
  Funcs(X,Y) = product (X --> Y)
proof
  set f = (X --> Y);
A1: dom f = X & for x st x in X holds f.x = Y by FUNCOP_1:13,19;
  thus Funcs(X,Y) c= product f
  proof
    let x;
    assume x in Funcs(X,Y);
    then consider g such that
A2: x = g & dom g = X & rng g c= Y by FUNCT_2:def 2;
    now
      let y;
      assume y in dom f;
      then f.y = Y & Y = Y & g.y in rng g by A1,A2,FUNCT_1:def 5;
      hence g.y in f.y by A2;
    end;
    hence thesis by A1,A2,Def5;
  end;
  let x;
  assume x in product f;
  then consider g such that
A3: x = g & dom g = dom f & for x st x in dom f holds g.x in f.x by Def5;
  rng g c= Y
  proof
    let y;
    assume y in rng g;
    then consider z such that
A4: z in dom g & y = g.z by FUNCT_1:def 5;
    y in f.z & f.z = Y & Y = Y by A1,A3,A4;
    hence thesis;
  end;
  hence thesis by A1,A3,FUNCT_2:def 2;
end;
defpred P[set] means $1 is Function;

definition
  let x,X;
  defpred R[set,set] means ex g st $1 = g & $2 = g.x;
  func pi(X,x) -> set means
  : Def6:
  y in it iff ex f st f in X & y = f.x;
  existence
  proof
    consider Y such that
A1: y in Y iff y in X & P[y] from XBOOLE_0:sch 1;
A3: for y st y in Y ex z st R[y,z]
    proof
      let y;
      assume y in Y;
      then reconsider y as Function by A1;
      take y.x, y; thus thesis;
    end;
    consider f such that
A4: dom f = Y & for y st y in Y holds R[y,f.y] from CLASSES1:sch 1(A3);
    take rng f;
    let y;
    thus y in rng f implies ex f st f in X & y = f.x
    proof
      assume y in rng f;
      then consider z such that
A5:   z in dom f & y = f.z by FUNCT_1:def 5;
      consider g such that
A6:   z = g & f.z = g.x by A4,A5;
      take g; thus thesis by A1,A4,A5,A6;
    end;
    given g such that
A7: g in X & y = g.x;
A8: g in Y by A1,A7;
    then ex f1 st g = f1 & f.g = f1.x by A4;
    hence thesis by A4,A7,A8,FUNCT_1:def 5;
  end;
  uniqueness
  proof
    defpred Z[set] means ex f st f in X & $1 = f.x;
    let X1,X2 be set such that
A9: y in X1 iff Z[y] and
A10: y in X2 iff Z[y];
    thus thesis from XBOOLE_0:sch 2(A9,A10);
  end;
end;

canceled;

theorem
  x in dom f & product f <> {} implies pi(product f,x) = f.x
proof
  assume
A1: x in dom f & product f <> {};
A2: pi(product f,x) c= f.x
  proof
    let y;
    assume y in pi(product f,x);
    then ex g st g in product f & y = g.x by Def6;
    hence y in f.x by A1,Th18;
  end;
  f.x c= pi(product f,x)
  proof consider z being Element of product f;
    consider g such that
A3: z = g & dom g = dom f & for x st x in dom f holds g.x in f.x by A1,Def5;
    let y;
    deffunc f(set) = y;
    deffunc g(set) = g.$1;
    defpred C[set] means x = $1;
    consider h being Function such that
A4: dom h = dom g & for z st z in dom g holds
    (C[z] implies h.z = f(z)) & (not C[z] implies h.z = g(z)) from
    PARTFUN1:sch 1;
    assume
A5: y in f.x;
    now
      let z;
      assume z in dom f;
      then g.z in f.z & (x <> z implies g.z = h.z) &
      (x = z implies y = h.z) by A3,A4;
      hence h.z in f.z by A5;
    end;
    then h in product f & h.x = y by A1,A3,A4,Th18;
    hence thesis by Def6;
  end;
  hence pi(product f,x) = f.x by A2,XBOOLE_0:def 10;
end;

canceled;

theorem
  pi({},x) = {}
proof
  consider y being Element of pi({},x);
  assume not thesis;
  then ex f st f in {} & y = f.x by Def6;
  hence contradiction;
end;

theorem
  pi({g},x) = {g.x}
proof
  thus pi({g},x) c= {g.x}
  proof
    let y;
    assume y in pi({g},x);
    then consider f such that
A1: f in {g} & y = f.x by Def6;
    f = g by A1,TARSKI:def 1;
    hence thesis by A1,TARSKI:def 1;
  end;
  let y;
  assume y in {g.x};
  then g in {g} & y = g.x by TARSKI:def 1;
  hence thesis by Def6;
end;

theorem
  pi({f,g},x) = {f.x,g.x}
proof
  thus pi({f,g},x) c= {f.x,g.x}
  proof
    let y;
    assume y in pi({f,g},x);
    then consider f1 such that
A1: f1 in {f,g} & y = f1.x by Def6;
    f1 = f or f1 = g by A1,TARSKI:def 2;
    hence thesis by A1,TARSKI:def 2;
  end;
  let y;
  assume y in {f.x,g.x};
  then f in {f,g} & g in {f,g} & (y = g.x or y = f.x) by TARSKI:def 2;
  hence thesis by Def6;
end;

theorem Th27:
  pi(X \/ Y,x) = pi(X,x) \/ pi(Y,x)
proof
  thus pi(X \/ Y,x) c= pi(X,x) \/ pi(Y,x)
  proof
    let y;
    assume y in pi(X \/ Y,x);
    then consider f such that
A1: f in X \/ Y & y = f.x by Def6;
    f in X or f in Y by A1,XBOOLE_0:def 2;
    then y in pi(X,x) or y in pi(Y,x) by A1,Def6;
    hence y in pi(X,x) \/ pi(Y,x) by XBOOLE_0:def 2;
  end;
  let y;
  assume y in pi(X,x) \/ pi(Y,x);
  then
A2: y in pi(X,x) or y in pi(Y,x) by XBOOLE_0:def 2;
A3: now
    assume y in pi(X,x);
    then consider f such that
A4: f in X & y = f.x by Def6;
    f in X \/ Y by A4,XBOOLE_0:def 2;
    hence thesis by A4,Def6;
  end;
  now
    assume not y in pi(X,x);
    then consider f such that
A5: f in Y & y = f.x by A2,Def6;
    f in X \/ Y by A5,XBOOLE_0:def 2;
    hence thesis by A5,Def6;
  end;
  hence thesis by A3;
end;

theorem
  pi(X /\ Y,x) c= pi(X,x) /\ pi(Y,x)
proof
  let y;
  assume y in pi(X /\ Y,x);
  then consider f such that
A1: f in X /\ Y & y = f.x by Def6;
  f in X & f in Y by A1,XBOOLE_0:def 3;
  then y in pi(X,x) & y in pi(Y,x) by A1,Def6;
  hence y in pi(X,x) /\ pi(Y,x) by XBOOLE_0:def 3;
end;

theorem Th29:
  pi(X,x) \ pi(Y,x) c= pi(X \ Y,x)
proof
  let y;
  assume
A1: y in pi(X,x) \ pi(Y,x);
  then consider f such that
A2: f in X & y = f.x by Def6;
  y in pi(X,x) & not y in pi(Y,x) by A1,XBOOLE_0:def 4;
  then not f in Y by A2,Def6;
  then f in X \ Y by A2,XBOOLE_0:def 4;
  hence y in pi(X \ Y,x) by A2,Def6;
end;

theorem
  pi(X,x) \+\ pi(Y,x) c= pi(X \+\ Y,x)
proof
  pi(X,x) \ pi(Y,x) c= pi(X\Y,x) & pi(Y,x) \ pi(X,x) c= pi(Y\X,x) &
  pi(X\Y,x) \/ pi(Y\X,x) = pi((X\Y) \/ (Y\X),x) &
  pi(X,x) \+\ pi(Y,x) = (pi(X,x) \ pi(Y,x)) \/ (pi(Y,x) \ pi(X,x)) &
  X \+\ Y = (X\Y) \/ (Y\X) by Th27,Th29;
  hence thesis by XBOOLE_1:13;
end;

theorem Th31:
  Card pi(X,x) c= Card X
proof
  consider Y such that
A1: y in Y iff y in X & P[y] from XBOOLE_0:sch 1;
  defpred R[set,set] means ex g st $1 = g & $2 = g.x;
A3: for y st y in Y ex z st R[y,z]
  proof
    let y;
    assume y in Y;
    then reconsider y as Function by A1;
    take y.x, y; thus thesis;
  end;
  consider f such that
A4: dom f = Y & for y st y in Y holds R[y,f.y] from CLASSES1:sch 1(A3);
  now
    let y;
    thus y in rng f implies ex f st f in X & y = f.x
    proof
      assume y in rng f;
      then consider z such that
A5:   z in dom f & y = f.z by FUNCT_1:def 5;
      consider g such that
A6:   z = g & f.z = g.x by A4,A5;
      take g; thus thesis by A1,A4,A5,A6;
    end;
    given g such that
A7: g in X & y = g.x;
A8: g in Y by A1,A7;
    then ex f1 st g = f1 & f.g = f1.x by A4;
    hence y in rng f by A4,A7,A8,FUNCT_1:def 5;
  end;
  then rng f = pi(X,x) by Def6;
  then
A9: Card pi(X,x) c= Card Y by A4,CARD_1:28;
  Y c= X
  proof
    let x; thus thesis by A1;
  end;
  then Card Y c= Card X by CARD_1:27;
  hence thesis by A9,XBOOLE_1:1;
end;

theorem Th32:
  x in Union disjoin f implies ex y,z st x = [y,z]
proof
  assume x in Union disjoin f;
  then consider X such that
A1: x in X & X in rng disjoin f by TARSKI:def 4;
  consider y such that
A2: y in dom disjoin f & X = (disjoin f).y by A1,FUNCT_1:def 5;
  y in dom f by A2,Def3;
  then X = [:f.y,{y}:] by A2,Def3;
  hence thesis by A1,RELAT_1:def 1;
end;

theorem Th33:
  x in Union disjoin f iff x`2 in dom f & x`1 in f.(x`2) & x = [x`1,x`2]
proof
  thus x in Union disjoin f implies
  x`2 in dom f & x`1 in f.(x`2) & x = [x`1,x`2]
  proof
    assume x in Union disjoin f;
    then consider X such that
A1: x in X & X in rng disjoin f by TARSKI:def 4;
    consider y such that
A2: y in dom disjoin f & X = (disjoin f).y by A1,FUNCT_1:def 5;
A3: y in dom f by A2,Def3;
    then X = [:f.y,{y}:] by A2,Def3;
    then x = [x`1,x`2] & x`1 in f.y & x`2 in {y} by A1,MCART_1:10,23;
    hence thesis by A3,TARSKI:def 1;
  end;
  assume
A4: x`2 in dom f & x`1 in f.(x`2) & x = [x`1,x`2];
  then (disjoin f).(x`2) = [:f.(x`2),{x`2}:] & dom f = dom disjoin f &
  x`2 in {x`2} by Def3,TARSKI:def 1;
  then x in [:f.(x`2),{x`2}:] & [:f.(x`2),{x`2}:] in rng disjoin f
  by A4,FUNCT_1:def 5,ZFMISC_1:106;
  hence thesis by TARSKI:def 4;
end;

theorem Th34:
  f c= g implies disjoin f c= disjoin g
proof
  assume f c= g;
  then
A1: dom f c= dom g & (for x st x in dom f holds f.x = g.x) by GRFUNC_1:8;
A2: dom disjoin f = dom f & dom disjoin g = dom g by Def3;
  now
    let x;
    assume x in dom disjoin f;
    then (disjoin f).x = [:f.x,{x}:] & (disjoin g).x = [:g.x,{x}:] &
    f.x = g.x by A1,A2,Def3;
    hence (disjoin f).x = (disjoin g).x;
  end;
  hence thesis by A1,A2,GRFUNC_1:8;
end;

theorem Th35:
  f c= g implies Union f c= Union g
proof
  assume f c= g;
  then
A1: dom f c= dom g & (for x st x in dom f holds f.x = g.x) by GRFUNC_1:8;
  let x;
  assume x in Union f;
  then consider X such that
A2: x in X & X in rng f by TARSKI:def 4;
  consider y such that
A3: y in dom f & X = f.y by A2,FUNCT_1:def 5;
  y in dom g & f.y = g.y by A1,A3;
  then X in rng g by A3,FUNCT_1:def 5;
  hence thesis by A2,TARSKI:def 4;
end;

theorem Th36:
  Union disjoin (Y --> X) = [:X,Y:]
proof
  set f = Y --> X;
A1: dom f = Y & for x st x in Y holds f.x = X by FUNCOP_1:13,19;
  thus Union disjoin f c= [:X,Y:]
  proof
    let x;
    assume x in Union disjoin f;
    then consider Z such that
A2: x in Z & Z in rng disjoin f by TARSKI:def 4;
    consider y such that
A3: y in dom disjoin f & Z = (disjoin f).y by A2,FUNCT_1:def 5;
    y in Y by A1,A3,Def3;
    then Z = [:f.y,{y}:] & f.y = X & X = X & {y} c= Y
    by A1,A3,Def3,ZFMISC_1:37;
    then Z c= [:X,Y:] by ZFMISC_1:118;
    hence thesis by A2;
  end;
  let x1,x2 be set;
  assume [x1,x2] in [:X,Y:];
  then
A4: x1 in X & x2 in Y by ZFMISC_1:106;
  then f.x2 = X & (disjoin f).(x2) = [:f.x2,{x2}:] &
  x2 in dom disjoin f & x2 in {x2} by A1,Def3,TARSKI:def 1;
  then [x1,x2] in [:f.x2,{x2}:] &
  [:f.x2,{x2}:] in rng disjoin f by A4,FUNCT_1:def 5,ZFMISC_1:106;
  hence thesis by TARSKI:def 4;
end;

theorem Th37:
  product f = {} iff {} in rng f
proof
  thus product f = {} implies {} in rng f
  proof
    assume
A1: product f = {} & not {} in rng f;
A2: now
      assume dom f = {};
      then for x st x in dom f holds f.x in f.x;
      hence thesis by A1,Def5;
    end;
    now
      assume dom f <> {};
      then reconsider M = rng f as non empty set by RELAT_1:65;
      X in M implies X <> {} by A1;
      then consider f1 such that
A3:   dom f1 = M & for X st X in M holds f1.X in X by WELLORD2:28;
      deffunc g(set) = f1.(f.$1);
      consider g such that
A4:   dom g = dom f & for x st x in dom f holds g.x = g(x) from FUNCT_1:sch 3;
      now
        let x;
        assume x in dom f;
        then f.x in M & f.x = f.x & g.x = f1.(f.x) by A4,FUNCT_1:def 5;
        hence g.x in f.x by A3;
      end;
      hence thesis by A1,A4,Def5;
    end;
    hence thesis by A2;
  end;
  assume {} in rng f;
  then consider x such that
A5: x in dom f & {} = f.x by FUNCT_1:def 5;
  assume
A6: product f <> {};
  consider y being Element of product f;
  consider g such that
A7: y = g & dom g = dom f & for x st x in dom f holds g.x in f.x by A6,Def5;
  thus contradiction by A5,A7;
end;

theorem Th38:
  dom f = dom g & (for x st x in dom f holds f.x c= g.x) implies
  product f c= product g
proof
  assume
A1: dom f = dom g & (for x st x in dom f holds f.x c= g.x);
  let x;
  assume x in product f;
  then consider f1 such that
A2: x = f1 & dom f1 = dom f & for x st x in dom f holds f1.x in f.x by Def5;
  now
    let x;
    assume x in dom g;
    then f1.x in f.x & f.x c= g.x by A1,A2;
    hence f1.x in g.x;
  end;
  hence thesis by A1,A2,Def5;
end;

reserve F,G for Cardinal-Function;

theorem
  for x st x in dom F holds Card (F.x) = F.x
proof
  let x;
  assume x in dom F;
  then reconsider M = F.x as Cardinal by Def1;
  Card M = M by CARD_1:def 5;
  hence thesis;
end;

theorem Th40:
  for x st x in dom F holds Card ((disjoin F).x) = F.x
proof
  let x;
  assume
A1: x in dom F;
  then reconsider M = F.x as Cardinal by Def1;
  M = M & M,[:M,{x}:] are_equipotent & M = Card M by CARD_1:def 5,CARD_2:13;
  then M = Card [:M,{x}:] & (disjoin F).x = [:M,{x}:] by A1,Def3,CARD_1:21;
  hence thesis;
end;

definition
  let F;
  func Sum F -> Cardinal equals

  Card Union disjoin F;
  correctness;
  func Product F -> Cardinal equals

  Card product F;
  correctness;
end;

canceled 2;

theorem
  dom F = dom G & (for x st x in dom F holds F.x c= G.x) implies Sum F c= Sum
  G
proof
  assume
A1: dom F = dom G & for x st x in dom F holds F.x c= G.x;
  Union disjoin F c= Union disjoin G
  proof
    let x;
    assume x in Union disjoin F;
    then consider X such that
A2: x in X & X in rng disjoin F by TARSKI:def 4;
    consider y such that
A3: y in dom disjoin F & X = (disjoin F).y by A2,FUNCT_1:def 5;
    y in dom F by A3,Def3;
    then F.y c= G.y & X = [:F.y,{y}:] & (disjoin G).y = [:G.y,{y}:] &
    F.y = F.y & G.y = G.y & y in dom disjoin G by A1,A3,Def3;
    then X c= [:G.y,{y}:] & [:G.y,{y}:] in rng disjoin G
    by FUNCT_1:def 5,ZFMISC_1:118;
    hence thesis by A2,TARSKI:def 4;
  end;
  hence thesis by CARD_1:27;
end;

theorem
  {} in rng F iff Product F = 0
proof
  thus {} in rng F implies Product F = 0 by Th37,CARD_1:47;
  assume Product F = 0;
  then product F,{} are_equipotent by CARD_1:21,47;
  then product F = {} by CARD_1:46;
  hence {} in rng F by Th37;
end;

theorem
  dom F = dom G & (for x st x in dom F holds F.x c= G.x) implies
  Product F c= Product G by Th38,CARD_1:27;

theorem
  F c= G implies Sum F c= Sum G
proof
  assume F c= G;
  then disjoin F c= disjoin G by Th34;
  hence Sum F c= Sum G by Th35,CARD_1:27;
end;

theorem
  F c= G & not 0 in rng G implies Product F c= Product G
proof
  assume
A1: F c= G;
  then
A2: dom F c= dom G & for x st x in dom F holds F.x = G.x by GRFUNC_1:8;
  assume
A3: not 0 in rng G;
  deffunc f(Function) = $1|dom F;
  consider f such that
A4: dom f = product G & for g st g in product G holds f.g = f(g)
  from FUNCT_5:sch 1;
  product F c= rng f
  proof
    let x;
    assume x in product F;
    then consider g such that
A5: x = g & dom g = dom F & for x st x in dom F holds g.x in F.x by Def5;
A6: product G <> {} by A3,Th37;
    consider y being Element of product G;
    consider h such that
A7: y = h & dom h = dom G & for x st x in dom G holds h.x in G.x by A6,Def5;
    deffunc f(set) = g.$1;
    deffunc g(set) = h.$1;
    defpred C[set] means $1 in dom F;
    consider f1 such that
A8: dom f1 = dom G & for x st x in dom G holds
    (C[x] implies f1.x = f(x)) & (not C[x] implies f1.x = g(x))
    from PARTFUN1:sch 1;
    now
      let z such that
A9:   z in dom G;
A10:  now
        assume z in dom F;
        then f1.z = g.z & g.z in F.z & F.z = G.z by A1,A5,A8,A9,GRFUNC_1:8;
        hence f1.z in G.z;
      end;
      (not z in dom F implies f1.z = h.z) & h.z in G.z by A7,A8,A9;
      hence f1.z in G.z by A10;
    end;
    then
A11: f1 in product G by A8,Def5;
    then
A12: f.f1 = f1|dom F & dom(f1|dom F) = dom F by A2,A4,A8,RELAT_1:91;
    now
      let z;
      assume z in dom F;
      then (f1|dom F).z = f1.z & z in dom G & (z in dom G implies f1.z = g. z)
      by A2,A8,A12,FUNCT_1:70;
      hence (f1|dom F).z = g.z;
    end;
    then f.f1 = g by A5,A12,FUNCT_1:9;
    hence thesis by A4,A5,A11,FUNCT_1:def 5;
  end;
  hence thesis by A4,CARD_1:28;
end;

theorem
  Sum({} --> K) = 0
proof dom ({} --> K) = {};
  then dom disjoin ({} --> K) = {} by Def3;
  hence thesis by CARD_1:47,RELAT_1:65,ZFMISC_1:2;
end;

theorem
  Product ({} --> K) = 1 by Th19,CARD_1:50;

theorem
  Sum(x .--> K) = K
proof
  thus Sum(x .--> K) = Card Union (x .--> [:K,{x}:]) by Th12
    .= Card [:K,{x}:] by Th16
    .= Card K by CARD_2:13
    .= K by CARD_1:def 5;
end;

theorem
  Product(x .--> K) = K
proof
  thus Product(x .--> K) = Card Funcs({x},K) by Th20
    .= Card K by FUNCT_5:65
    .= K by CARD_1:def 5;
end;

theorem
  Sum(M --> N) = M*`N
proof
  thus Sum(M --> N) = Card [:N,M:] by Th36
    .= M*`N by CARD_2:def 2;
end;

theorem
  Product(N --> M) = exp(M,N)
proof
  set F = N --> M;
  exp(M,N) = Card Funcs(N,M) & Product F = Card product F &
  Funcs(N,M) = product F by Th20,CARD_2:def 3;
  hence thesis;
end;

theorem Th54:
  Card Union f c= Sum Card f
proof
A1: now
    assume dom f = {};
    then {} = Union f by RELAT_1:65,ZFMISC_1:2;
    hence thesis by CARD_1:47,XBOOLE_1:2;
  end;
  now
    assume
A2: dom f <> {};
    defpred P[set,set] means
    x in $2 iff x in Funcs(Card $1,$1) & ex g st x = g & rng g = $1;
    defpred W[set,set] means P[f.$1,$2];
A6: for x st x in dom f ex y st W[x,y]
    proof
      let x such that x in dom f;
      defpred A[set] means ex g st $1 = g & rng g = f.x;
      consider Y such that
A7:   z in Y iff z in Funcs(Card (f.x),f.x) & A[z] from XBOOLE_0:sch 1;
      take Y;
      thus thesis by A7;
    end;
    consider k being Function such that
A8: dom k = dom f & for x st x in dom f holds W[x,k.x] from CLASSES1:sch 1
    (A6);
    reconsider M = rng k as non empty set by A2,A8,RELAT_1:65;
    now
      let X;
      assume X in M;
      then consider x such that
A9:   x in dom k & X = k.x by FUNCT_1:def 5;
      Card(f.x),f.x are_equipotent by CARD_1:def 5;
      then consider g such that
A10:  g is one-to-one & dom g = Card(f.x) & rng g = f.x by WELLORD2:def 4;
      g in Funcs(Card(f.x),f.x) by A10,FUNCT_2:def 2;
      hence X <> {} by A8,A9,A10;
    end;
    then consider FF being Function such that
A11: dom FF = M & for X st X in M holds FF.X in X by WELLORD2:28;
    set DD = union rng disjoin Card f;
    defpred S[set,set] means ex g st g = FF.(k.$1`2) & $2 = g.$1`1;
A13: for x st x in DD ex y st S[x,y]
    proof
      let x;
      assume x in DD;
      then consider X such that
A14:  x in X & X in rng disjoin Card f by TARSKI:def 4;
      consider y such that
A15:  y in dom disjoin Card f & X = (disjoin Card f).y by A14,FUNCT_1:def 5;
A16:  dom disjoin Card f = dom Card f & dom Card f = dom f by Def2,Def3;
      then X = [:(Card f).y,{y}:] by A15,Def3;
      then x`1 in (Card f).y & x`2 in {y} by A14,MCART_1:10;
      then
A17:  x`2 in dom f by A15,A16,TARSKI:def 1;
      then P[f.x`2,k.x`2] & k.x`2 = k.x`2 & k.x`2 in M by A8,FUNCT_1:def 5;
      then FF.(k.x`2) in k.x`2 by A11;
      then FF.(k.x`2) in Funcs(Card (f.x`2),f.x`2) by A8,A17;
      then consider g such that
A18:  FF.(k.x`2) = g & dom g = Card (f.x`2) & rng g c= f.x`2 by FUNCT_2:def 2;
      take g.x`1, g; thus thesis by A18;
    end;
    consider t being Function such that
A19: dom t = DD & for x st x in DD holds S[x,t.x] from CLASSES1:sch 1
    (A13);
    union rng f c= rng t
    proof
      let x;
      assume x in union rng f;
      then consider X such that
A20:  x in X & X in rng f by TARSKI:def 4;
      consider y such that
A21:  y in dom f & X = f.y by A20,FUNCT_1:def 5;
      P[f.y,k.y] & k.y = k.y & k.y in M by A8,A21,FUNCT_1:def 5;
      then
A22:  FF.(k.y) in k.y by A11;
      then FF.(k.y) in Funcs(Card(f.y),f.y) by A8,A21;
      then consider g such that
A23:  FF.(k.y) = g & dom g = Card(f.y) & rng g c= f.y by FUNCT_2:def 2;
      ex g st FF.(k.y) = g & rng g = f.y by A8,A21,A22;
      then consider z such that
A24:  z in dom g & x = g.z by A20,A21,A23,FUNCT_1:def 5;
      (Card f).y = Card(f.y) & dom Card f = dom f & dom g = dom g by A21,Def2;
      then (disjoin Card f).y = [:dom g,{y}:] & y in {y} &
      dom disjoin Card f = dom f by A21,A23,Def3,TARSKI:def 1;
      then [z,y] in [:dom g,{y}:] & [:dom g,{y}:] in rng disjoin Card f
      by A21,A24,FUNCT_1:def 5,ZFMISC_1:106;
      then
A25:  [z,y] in DD & [z,y]`1 = z & [z,y]`2 = y by MCART_1:7,TARSKI:def 4;
      then ex g st g = FF.(k.y) & t.[z,y] = g.z by A19;
      hence thesis by A19,A23,A24,A25,FUNCT_1:def 5;
    end;
    hence thesis by A19,CARD_1:28;
  end;
  hence thesis by A1;
end;

theorem
  Card Union F c= Sum F
proof Card F = F by Th8;
  hence thesis by Th54;
end;

::
:: K\"onig's theorem
::

theorem
  dom F = dom G & (for x st x in dom F holds F.x in G.x) implies
  Sum F in Product G
proof
  assume
A1: dom F = dom G & (for x st x in dom F holds F.x in G.x);
  deffunc f(set) = (G.$1)\(F.$1);
  consider f such that
A2: dom f = dom F & for x st x in dom F holds f.x = f(x) from FUNCT_1:sch 3;
  now
    assume {} in rng f;
    then consider x such that
A3: x in dom f & {} = f.x by FUNCT_1:def 5;
    reconsider Fx = F.x, Gx = G.x as Cardinal by A1,A2,A3,Def1;
    Fx in Gx & not Fx in Fx by A1,A2,A3;
    then Fx in Gx \ Fx & {} = Gx \ Fx by A2,A3,XBOOLE_0:def 4;
    hence contradiction;
  end;
  then
A4: product f <> {} by Th37;
  consider a being Element of product f;
  consider h being Function such that
A5: a = h & dom h = dom f & for x st x in dom f holds h.x in f.x by A4,Def5;
  defpred P[set,Function] means dom $2 = dom F & for x st x in dom F holds
  ($1`2 = x implies $2.x = $1`1) & ($1`2 <> x implies $2.x = h.x);
  defpred R[set,set] means ex g st $2 = g & P[$1,g];
A9: for x st x in Union disjoin F ex y st R[x,y]
  proof
    let x such that x in Union disjoin F;
    deffunc f(set) = x`1;
    deffunc g(set) = h.$1;
    defpred C[set] means $1 = x`2;
    consider g such that
A10: dom g = dom F & for u st u in dom F holds
    (C[u] implies g.u = f(u)) & (not C[u] implies g.u = g(u))
    from PARTFUN1:sch 1;
    reconsider y = g as set;
    take y,g; thus thesis by A10;
  end;
  consider f1 such that
A11: dom f1 = Union disjoin F & for x st x in Union disjoin F holds R[x,f1.x]
  from CLASSES1:sch 1(A9);
A12: f1 is one-to-one
  proof
    let x,y;
    assume
A13: x in dom f1 & y in dom f1 & f1.x = f1.y & x <> y;
    then consider g1 being Function such that
A14: f1.x = g1 & P[x,g1] by A11;
    consider g2 being Function such that
A15: f1.y = g2 & P[y,g2] by A11,A13;
A16: x`2 in dom F & x`1 in F.(x`2) & y`2 in dom F & y`1 in F.(y`2)
    by A11,A13,Th33;
    (ex x1,x2 being set st x = [x1,x2]) &
    (ex x1,x2 being set st y = [x1,x2]) by A11,A13,Th32;
    then
A17: x = [x`1,x`2] & y = [y`1,y`2] by MCART_1:8;
A18: now
      assume x`1 = y`1;
      then g1.(x`2) = x`1 & g2.(x`2) = h.(x`2) & g2.(y`2) = y`1 &
      g1.(y`2) = h.(y`2) & f.(y`2) = (G.(y`2))\(F.(y`2)) &
      h.(y`2) in f.(y`2) & f.(y`2) = f.(y`2) by A2,A5,A13,A14,A15,A16,A17;
      hence contradiction by A13,A14,A15,A16,XBOOLE_0:def 4;
    end;
    x`2 = y`2 implies g1.(x`2) = x`1 & g2.(x`2) = y`1 by A14,A15,A16;
    then g1.(y`2) = y`1 & g1.(y`2) = h.(y`2) & f.(y`2) = (G.(y`2))\(F.(y`2)
    ) & h.(y`2) in f.(y`2) & f.(y`2) = f.(y`2) by A2,A5,A13,A14,A15,A16,A18;
    hence contradiction by A16,XBOOLE_0:def 4;
  end;
  rng f1 c= product G
  proof
    let x;
    assume x in rng f1;
    then consider y such that
A19: y in dom f1 & x = f1.y by FUNCT_1:def 5;
    consider g such that
A20: f1.y = g & P[y,g] by A11,A19;
    now
      let x;
      assume
A21:  x in dom G;
      then reconsider Gx = G.x, Fx = F.x as Cardinal by A1,Def1;
      Fx in Gx by A1,A21;
      then (y`2 = x implies g.x = y`1) & (y`2 <> x implies g.x = h.x) &
      h.x in f.x & f.x = Gx \ Fx & f.x = f.x & y`1 in F.(y`2) &
      Fx c= Gx & Fx = Fx by A1,A2,A5,A11,A19,A20,A21,Th33,CARD_1:13;
      hence g.x in G.x;
    end;
    hence thesis by A1,A19,A20,Def5;
  end;
  then
A22: Sum F c= Product G by A11,A12,CARD_1:26;
  now
    assume Sum F = Product G;
    then Union disjoin F,product G are_equipotent by CARD_1:21;
    then consider f such that
A23: f is one-to-one & dom f = Union disjoin F & rng f = product G
    by WELLORD2:def 4;
    deffunc f(set) = G.$1 \ pi(f.:((disjoin F).$1),$1);
    consider K being Function such that
A24: dom K = dom F & for x st x in dom F holds K.x = f(x) from FUNCT_1:sch 3;
    now
      assume {} in rng K;
      then consider x such that
A25:  x in dom F & {} = K.x by A24,FUNCT_1:def 5;
A26:  K.x = G.x \ pi(f.:((disjoin F).x),x) by A24,A25;
      reconsider Fx = F.x, Gx = G.x as Cardinal by A1,A25,Def1;
A27:  Card pi(f.:((disjoin F).x),x) c= Card (f.:((disjoin F).x)) &
      Card (f.:((disjoin F).x)) c= Card ((disjoin F).x) by Th31,CARD_2:3;
      Card ((disjoin F).x) = Fx & Fx in Gx by A1,A25,Th40;
      then Card pi(f.:((disjoin F).x),x) c= Fx & Fx in Gx & Card Gx = Gx
      by A27,CARD_1:def 5,XBOOLE_1:1;
      hence contradiction by A25,A26,CARD_2:4,ORDINAL1:22;
    end;
    then
A28: product K <> {} by Th37;
    consider t being Element of product K;
    consider g such that
A29: t = g & dom g = dom K & for x st x in dom K holds g.x in K.x by A28,Def5;
    now
      let x;
      assume x in dom K;
      then K.x = G.x \ pi(f.:((disjoin F).x),x) & K.x = K.x & G.x = G.x
      by A24;
      hence K.x c= G.x;
    end;
    then product K c= product G by A1,A24,Th38;
    then t in product G by A28,TARSKI:def 3;
    then consider y such that
A30: y in dom f & t = f.y by A23,FUNCT_1:def 5;
    consider X such that
A31: y in X & X in rng disjoin F by A23,A30,TARSKI:def 4;
    consider x such that
A32: x in dom disjoin F & X = (disjoin F).x by A31,FUNCT_1:def 5;
    g in f.:X by A29,A30,A31,FUNCT_1:def 12;
    then g.x in pi(f.:((disjoin F).x),x) & x in dom F by A32,Def3,Def6;
    then not g.x in G.x \ pi(f.:((disjoin F).x),x) & g.x in (K.x) &
    G.x \ pi(f.:((disjoin F).x),x) = K.x by A24,A29,XBOOLE_0:def 4;
    hence contradiction;
  end;
  hence thesis by A22,CARD_1:13;
end;

scheme FinRegularity { X()->finite set, P[set,set] }:
  ex x st x in X() & for y st y in X() & y <> x holds not P[y,x]
provided
A1: X() <> {}
and
A2: for x,y st P[x,y] & P[y,x] holds x = y
and
A3: for x,y,z st P[x,y] & P[y,z] holds P[x,z]
proof
  defpred Q[Element of NAT] means
  for X being finite set st card X = $1 & X <> {}
  ex x st x in X & for y st y in X & y <> x holds not P[y,x];
A4: Q[0] by CARD_2:59;
A5: Q[n] implies Q[n+1]
  proof
    assume
A6: for X being finite set st card X = n & X <> {}
    ex x st x in X & for y st y in X & y <> x holds not P[y,x];
    let X be finite set;
    assume
A7: card X = n+1 & X <> {};
    consider x being Element of X;
A8: now
      assume X\{x} = {};
      then
A9:   X c= {x} & {x} c= X by A7,XBOOLE_1:37,ZFMISC_1:37;
      thus thesis
      proof
        take x; thus x in X by A7;
        thus thesis by A9,TARSKI:def 1;
      end;
    end;
    now
      assume
A10:  X\{x} <> {};
      {x} c= X by A7,ZFMISC_1:37;
      then card (X\{x}) = (n+1) - card {x} & card {x} = 1 & n+1-1 = n &
      X\{x} is finite by A7,CARD_1:79,CARD_2:63,XCMPLX_1:26;
      then consider y such that
A11:  y in X\{x} & for z st z in X\{x} & z <> y holds not P[z,y] by A6,A10;
A12:  now
        assume
A13:    P[x,y];
        thus thesis
        proof
          take x; thus x in X by A7;
          let z;
          assume
A14:      z in X & z <> x & P[z,x];
          then not z in {x} by TARSKI:def 1;
          then z in X \ {x} & P[z,y] & not y in
          {x} by A3,A11,A13,A14,XBOOLE_0:def 4;
          then z = y & y <> x by A11,TARSKI:def 1;
          hence contradiction by A2,A13,A14;
        end;
      end;
      now
        assume
A15:    not P[x,y];
        thus thesis
        proof
          take y; thus y in X by A11;
          let z such that
A16:      z in X & z <> y;
          z in {x} or not z in {x};
          then z = x or z in X \ {x} by A16,TARSKI:def 1,XBOOLE_0:def 4;
          hence thesis by A11,A15,A16;
        end;
      end;
      hence thesis by A12;
    end;
    hence thesis by A8;
  end;
A17: Q[n] from NAT_1:sch 1(A4,A5);
  card X() = card X();
  hence thesis by A1,A17;
end;

scheme MaxFinSetElem { X()->finite set, P[set,set] }:
  ex x st x in X() & for y st y in X() holds P[x,y]
provided
A1: X() <> {}
and
A2: for x,y holds P[x,y] or P[y,x]
and
A3: for x,y,z st P[x,y] & P[y,z] holds P[x,z]
proof
  defpred Q[Element of NAT] means
  for X being finite set st card X = $1 & X <> {}
  ex x st x in X & for y st y in X holds P[x,y];
A4: Q[0] by CARD_2:59;
A5: Q[n] implies Q[n+1]
  proof
    assume
A6: for X being finite set st card X = n & X <> {}
    ex x st x in X & for y st y in X holds P[x,y];
    let X be finite set;
    assume
A7: card X = n+1 & X <> {};
    consider x being Element of X;
A8: now
      assume X\{x} = {};
      then
A9:   X c= {x} & {x} c= X by A7,XBOOLE_1:37,ZFMISC_1:37;
      thus thesis
      proof
        take x; thus x in X by A7;
        let y;
        assume y in X;
        then y = x by A9,TARSKI:def 1;
        hence P[x,y] by A2;
      end;
    end;
    now
      assume
A10:  X\{x} <> {};
      {x} c= X by A7,ZFMISC_1:37;
      then card (X\{x}) = (n+1) - card {x} & card {x} = 1 & n+1-1 = n &
      X\{x} is finite by A7,CARD_1:79,CARD_2:63,XCMPLX_1:26;
      then consider y such that
A11:  y in X\{x} & for z st z in X\{x} holds P[y,z] by A6,A10;
      (P[x,y] or P[y,x]) & P[x,x] & P[y,y] by A2;
      then consider z such that
A12:  (z = x or z = y) & P[z,x] & P[z,y];
      thus thesis
      proof
        take z; thus z in X by A11,A12;
        let u;
A13:    u in {x} or not u in {x};
        assume u in X;
        then u = x or u in X\{x} by A13,TARSKI:def 1,XBOOLE_0:def 4;
        then P[z,u] or P[y,u] by A11,A12;
        hence thesis by A3,A12;
      end;
    end;
    hence thesis by A8;
  end;
A14: Q[n] from NAT_1:sch 1(A4,A5);
  card X() = card X();
  hence thesis by A1,A14;
end;

scheme FuncSeparation { X()->set, F(set)->set, P[set,set] }:
  ex f st dom f = X() &
  for x st x in X() for y holds y in f.x iff y in F(x) & P[x,y]
proof
  defpred Q[set,set] means y in $2 iff y in F($1) & P[$1,y];
A4: for x st x in X() ex y st Q[x,y]
  proof
    let x such that x in X();
    defpred R[set] means P[x,$1];
    consider Y such that
A5: y in Y iff y in F(x) & R[y] from XBOOLE_0:sch 1;
    take Y;
    thus thesis by A5;
  end;
  thus ex f st dom f = X() &
  for x st x in X() holds Q[x,f.x] from CLASSES1:sch 1(A4);
end;

Lm1: Rank n is finite implies Rank (n+1) is finite
proof
  n+1 = succ n by NAT_1:39;
  then Rank (n+1) = bool Rank n by CLASSES1:34;
  hence thesis by FINSET_1:24;
end;

theorem
  Rank n is finite
proof
  defpred P[Element of NAT] means Rank $1 is finite;
A1: P[0] by CLASSES1:33;
A2: for n st P[n] holds P[n+1] by Lm1;
  for n holds P[n] from NAT_1:sch 1(A1,A2);
  hence thesis;
end;

Lm2: x in field R implies ex y st [x,y] in R or [y,x] in R
proof
  assume x in field R;
  then x in dom R or x in rng R by XBOOLE_0:def 2;
  hence ex y st [x,y] in R or [y,x] in R by RELAT_1:def 4,def 5;
end;

theorem
  X is finite implies Card X in Card omega
proof
  assume
A1: X is finite;
  X,Card X are_equipotent by CARD_1:def 5;
  then Card X is finite by A1,CARD_1:68;
  then consider n being Nat such that
A2: Card X = card n by CARD_1:86;
  thus Card X in Card omega by A2,CARD_1:84;
end;

theorem Th59:
  Card A in Card B implies A in B
proof
  assume Card A in Card B & not A in B;
  then not Card B c= Card A & B c= A by CARD_1:14,ORDINAL1:26;
  hence contradiction by CARD_1:27;
end;

theorem Th60:
  Card A in M implies A in M
proof M = M & Card M = M by CARD_1:def 5;
  hence thesis by Th59;
end;

theorem Th61:
  X is c=-linear implies
  ex Y st Y c= X & union Y = union X & for Z st Z c= Y & Z <> {}
  ex Z1 st Z1 in Z & for Z2 st Z2 in Z holds Z1 c= Z2
proof
  assume
A1: X is c=-linear;
  consider R such that
A2: R well_orders X by WELLORD2:26;
A3: R|_2 X is well-ordering & field(R|_2 X) = X by A2,WELLORD2:25;
  then R|_2 X, RelIncl order_type_of R|_2 X are_isomorphic by WELLORD2:def 2;
  then RelIncl order_type_of R|_2 X, R|_2 X are_isomorphic by WELLORD1:50;
  then consider f such that
A4: f is_isomorphism_of RelIncl order_type_of R|_2 X, R|_2 X
  by WELLORD1:def 8;
  field RelIncl order_type_of R|_2 X = order_type_of R|_2 X by WELLORD2:def 1;
  then
A5: dom f = order_type_of R|_2 X & rng f = X & f is one-to-one &
  for x,y holds [x,y] in RelIncl order_type_of R|_2 X iff
  x in order_type_of R|_2 X & y in order_type_of R|_2 X & [f.x,f.y] in R|_2 X
  by A3,A4,WELLORD1:def 7;
  defpred P[set] means for A,B st B in A & $1 = A holds f.B c= f.A;
  consider Y such that
A6: x in Y iff x in dom f & P[x] from XBOOLE_0:sch 1;
  take Z = f.:Y;
  thus Z c= X by A5,RELAT_1:144;
  hence union Z c= union X by ZFMISC_1:95;
  thus union X c= union Z
  proof
    let x;
    assume x in union X;
    then consider Z1 such that
A7: x in Z1 & Z1 in X by TARSKI:def 4;
    consider y such that
A8: y in dom f & Z1 = f.y by A5,A7,FUNCT_1:def 5;
    reconsider y as Ordinal by A5,A8,ORDINAL1:23;
    defpred P[Ordinal] means $1 c= y & x in f.$1;
A9: ex A st P[A] by A7,A8;
    consider A such that
A10: P[A] & for B st P[B] holds A c= B from ORDINAL1:sch 1(A9);
A11: A in dom f by A5,A8,A10,ORDINAL1:22;
    now
      let B,C;
      assume
A12:  C in B & A = B;
      then not A c= C & C in y & C in dom f by A5,A8,A10,ORDINAL1:7,19;
      then
A13:  (not C c= y or not x in f.C) & f.C = f.C & f.A in X & C c= y &
      f.C in X & f.A = f.A by A5,A10,A11,FUNCT_1:def 5,ORDINAL1:def 2;
      then f.C,f.A are_c=-comparable by A1,ORDINAL1:def 9;
      then f.C c= f.A or f.A c= f.C by XBOOLE_0:def 9;
      hence f.C c= f.B by A10,A12,A13;
    end;
    then A in Y by A6,A11;
    then f.A in Z & f.A = f.A by A11,FUNCT_1:def 12;
    hence thesis by A10,TARSKI:def 4;
  end;
  let V be set;
  assume
A14: V c= Z & V <> {};
  consider x being Element of V;
  x in Z by A14,TARSKI:def 3;
  then consider y such that
A15: y in dom f & y in Y & x = f.y by FUNCT_1:def 12;
  reconsider y as Ordinal by A5,A15,ORDINAL1:23;
  defpred P[Ordinal] means $1 in Y & f.$1 in V;
  y = y;
  then
A16: ex A st P[A] by A14,A15;
  consider A such that
A17: P[A] & for B st P[B] holds A c= B from ORDINAL1:sch 1(A16);
  take Z1 = f.A;
  thus Z1 in V by A17;
  let Z2;
  assume
A18: Z2 in V;
  then consider y such that
A19: y in dom f & y in Y & Z2 = f.y by A14,FUNCT_1:def 12;
  reconsider y as Ordinal by A5,A19,ORDINAL1:23;
  A c< y iff A c= y & A <> y by XBOOLE_0:def 8;
  then A = y or A in y by A17,A18,A19,ORDINAL1:21;
  hence Z1 c= Z2 by A6,A19;
end;

theorem
  (for Z st Z in X holds Card Z in M) & X is c=-linear implies
  Card union X c= M
proof
  assume that
A1: Z in X implies Card Z in M and
A2: X is c=-linear;
  consider XX being set such that
A3: XX c= X & union XX = union X and
A4: for Z st Z c= XX & Z <> {}
  ex Z1 st Z1 in Z & for Z2 st Z2 in Z holds Z1 c= Z2 by A2,Th61;
A5: now
    let Z1,Z2;
    assume Z1 in XX & Z2 in XX;
    then Z1,Z2 are_c=-comparable by A2,A3,ORDINAL1:def 9;
    hence Z1 c= Z2 or Z2 c= Z1 by XBOOLE_0:def 9;
  end;
  consider R such that
A6: R well_orders union X by WELLORD2:26;
A7: R is_reflexive_in union X & R is_transitive_in union X &
  R is_antisymmetric_in union X & R is_connected_in union X &
  R is_well_founded_in union X by A6,WELLORD1:def 5;
  defpred P[set,set] means ((ex Z1 st Z1 in XX & $1 in Z1 & not $2 in Z1) or
  (for Z1 st Z1 in XX holds $1 in Z1 iff $2 in Z1) & [$1,$2] in R);
  consider Q such that
A8: [x,y] in Q iff x in union X & y in union X & P[x,y] from RELAT_1:sch 1;
A9: field Q = union X
  proof
    thus field Q c= union X
    proof
      let x;
      assume x in field Q;
      then ex y st [x,y] in Q or [y,x] in Q by Lm2;
      hence thesis by A8;
    end;
    let x;
    assume
A10: x in union X;
    then [x,x] in R & for Z1 st Z1 in XX holds x in Z1 iff x in Z1
    by A7,RELAT_2:def 1;
    then [x,x] in Q by A8,A10;
    hence x in field Q by RELAT_1:30;
  end;
  Q is well-ordering
  proof
    thus Q is reflexive
    proof
      let x;
      assume
A11:  x in field Q;
      then [x,x] in R & for Z1 st Z1 in XX holds x in Z1 iff x in Z1
      by A7,A9,RELAT_2:def 1;
      hence thesis by A8,A9,A11;
    end;
    thus Q is transitive
    proof
      let x,y,z such that
A12:  x in field Q & y in field Q & z in field Q & [x,y] in Q & [y,z] in Q;
A13:  now
        given Z1 such that
A14:    Z1 in XX & x in Z1 & not y in Z1;
        given Z2 such that
A15:    Z2 in XX & y in Z2 & not z in Z2;
        Z1 c= Z2 or Z2 c= Z1 by A5,A14,A15;
        hence [x,z] in Q by A8,A9,A12,A14,A15;
      end;
A16:  now
        given Z1 such that
A17:    Z1 in XX & x in Z1 & not y in Z1;
        assume (for Z1 st Z1 in XX holds y in Z1 iff z in Z1) & [y,z] in R;
        then not z in Z1 by A17;
        hence [x,z] in Q by A8,A9,A12,A17;
      end;
A18:  now
        given Z1 such that
A19:    Z1 in XX & y in Z1 & not z in Z1;
        assume (for Z1 st Z1 in XX holds x in Z1 iff y in Z1) & [x,y] in R;
        then x in Z1 by A19;
        hence [x,z] in Q by A8,A9,A12,A19;
      end;
      now
        assume
A20:    (for Z1 st Z1 in XX holds x in Z1 iff y in Z1) & [x,y] in R &
        (for Z1 st Z1 in XX holds y in Z1 iff z in Z1) & [y,z] in R;
        then
A21:    [x,z] in R by A7,A9,A12,RELAT_2:def 8;
        now
          let Z;
          assume Z in XX;
          then (x in Z iff y in Z) & (y in Z iff z in Z) by A20;
          hence x in Z iff z in Z;
        end;
        hence [x,z] in Q by A8,A9,A12,A21;
      end;
      hence thesis by A8,A12,A13,A16,A18;
    end;
    thus Q is antisymmetric
    proof
      let x,y;
      assume
A22:  x in field Q & y in field Q & [x,y] in Q & [y,x] in Q;
      then
A23:  ((ex Z1 st Z1 in XX & x in Z1 & not y in Z1) or
      (for Z1 st Z1 in XX holds x in Z1 iff y in Z1) & [x,y] in R) &
      ((ex Z1 st Z1 in XX & y in Z1 & not x in Z1) or
      (for Z1 st Z1 in XX holds y in Z1 iff x in Z1) & [y,x] in R) by A8;
      now
        given Z1 such that
A24:    Z1 in XX & x in Z1 & not y in Z1;
        given Z2 such that
A25:    Z2 in XX & y in Z2 & not x in Z2;
        Z1 c= Z2 or Z2 c= Z1 by A5,A24,A25;
        hence x = y by A24,A25;
      end;
      hence thesis by A7,A9,A22,A23,RELAT_2:def 4;
    end;
    thus Q is connected
    proof
      let x,y such that
A26:  x in field Q & y in field Q & x <> y;
      now
        assume
A27:    for Z st Z in XX holds x in Z iff y in Z;

then ([x,y] in R or [y,x] in R) & for Z st Z in XX holds y in Z iff x in Z
        by A7,A9,A26,RELAT_2:def 6;
        hence thesis by A8,A9,A26,A27;
      end;
      hence thesis by A8,A9,A26;
    end;
    thus Q is well_founded
    proof
      let Y such that
A28:  Y c= field Q & Y <> {};
      defpred P[set] means $1 /\ Y <> {};
      consider Z such that
A29:  x in Z iff x in XX & P[x] from XBOOLE_0:sch 1;
A30:  Z c= XX
      proof
        let x; thus thesis by A29;
      end;
      consider x being Element of Y;
      x in union XX by A3,A9,A28,TARSKI:def 3;
      then consider Z1 such that
A31:  x in Z1 & Z1 in XX by TARSKI:def 4;
      Z1 /\ Y <> {} by A28,A31,XBOOLE_0:def 3;
      then Z <> {} by A29,A31;
      then consider Z1 such that
A32:  Z1 in Z & for Z2 st Z2 in Z holds Z1 c= Z2 by A4,A30;
A33:  Z1 in XX by A29,A32;
      then Z1 /\ Y c= Z1 & Z1 c= union X & Z1 /\ Y <> {}
      by A3,A29,A32,XBOOLE_1:17,ZFMISC_1:92;
      then Z1 /\ Y c= union X & Z1 /\ Y <> {} by XBOOLE_1:1;
      then consider x such that
A34:  x in Z1 /\ Y & for y st y in Z1 /\ Y holds [x,y] in R by A6,WELLORD1:9;
      take x; thus x in Y by A34,XBOOLE_0:def 3;
      assume
A35:  Q-Seg x /\ Y <> {};
      consider y being Element of Q-Seg x /\ Y;
A36:  x in Z1 by A34,XBOOLE_0:def 3;
A37:  y in Q-Seg x & y in Y by A35,XBOOLE_0:def 3;
      then
A38:  y <> x & [y,x] in Q & y in Y by WELLORD1:def 1;
      now
        given Z2 such that
A39:    Z2 in XX & y in Z2 & not x in Z2;
        Z2 /\ Y <> {} by A37,A39,XBOOLE_0:def 3;
        then Z2 in Z by A29,A39;
        then Z1 c= Z2 by A32;
        hence contradiction by A36,A39;
      end;
      then
A40:  y in Z1 & [y,x] in R by A8,A33,A36,A38;
      then y in Z1 /\ Y by A37,XBOOLE_0:def 3;
      then [x,y] in R & x in union X & y in union X by A8,A34,A38;
      hence contradiction by A7,A38,A40,RELAT_2:def 4;
    end;
  end;
  then Q,RelIncl order_type_of Q are_isomorphic by WELLORD2:def 2;
  then RelIncl order_type_of Q,Q are_isomorphic by WELLORD1:50;
  then consider g such that
A41: g is_isomorphism_of RelIncl order_type_of Q,Q by WELLORD1:def 8;
  field RelIncl order_type_of Q = order_type_of Q by WELLORD2:def 1;
  then
A42: dom g = order_type_of Q & rng g = union X & g is one-to-one &
  for x,y holds [x,y] in RelIncl order_type_of Q iff
  x in order_type_of Q & y in order_type_of Q & [g.x,g.y] in Q
  by A9,A41,WELLORD1:def 7;
A43: for Z,x st Z in XX & x in Z holds Q-Seg x c= Z
  proof
    let Z,x such that
A44: Z in XX & x in Z;
    let y;
    assume y in Q-Seg x;
    then
A45: [y,x] in Q by WELLORD1:def 1;
    now
      given Z1 such that
A46:  Z1 in XX & y in Z1 & not x in Z1;
      Z1 c= Z or Z c= Z1 by A5,A44,A46;
      hence y in Z by A44,A46;
    end;
    hence thesis by A8,A44,A45;
  end;
A47: for A st A in order_type_of Q holds Card A = Card (Q-Seg(g.A))
  proof
    let A such that
A48: A in order_type_of Q;
    A,Q-Seg(g.A) are_equipotent
    proof
      take f = g|A;
      A c= dom g by A42,A48,ORDINAL1:def 2;
      hence
A49:  f is one-to-one & dom f = A by A42,FUNCT_1:84,RELAT_1:91;
      thus rng f c= Q-Seg(g.A)
      proof
        let x;
        assume x in rng f;
        then consider y such that
A50:    y in dom f & x = f.y by FUNCT_1:def 5;
        reconsider B = y as Ordinal by A49,A50,ORDINAL1:23;
A51:    B in order_type_of Q & B c= A by A48,A49,A50,ORDINAL1:19,def 2;
        then [B,A] in RelIncl order_type_of Q & x = g.B & A <> B
        by A48,A49,A50,FUNCT_1:70,WELLORD2:def 1;
        then [x,g.A] in Q & x <> g.A by A42,A48,A51,FUNCT_1:def 8;
        hence thesis by WELLORD1:def 1;
      end;
      let x;
      assume
A52:  x in Q-Seg(g.A);
      then
A53:  [x,g.A] in Q & x <> g.A by WELLORD1:def 1;
      then x in union X by A8;
      then consider y such that
A54:  y in dom g & x = g.y by A42,FUNCT_1:def 5;
      reconsider B = y as Ordinal by A42,A54,ORDINAL1:23;
      [B,A] in RelIncl order_type_of Q by A42,A48,A53,A54;
      then B c= A & B <> A by A42,A48,A52,A54,WELLORD1:def 1,WELLORD2:def 1;
      then B c< A by XBOOLE_0:def 8;
      hence thesis by A54,FUNCT_1:73,ORDINAL1:21;
    end;
    hence thesis by CARD_1:21;
  end;
A55: order_type_of Q c= M
  proof
    let x;
    assume
A56: x in order_type_of Q;
    then reconsider A = x as Ordinal by ORDINAL1:23;
    g.x in union X by A42,A56,FUNCT_1:def 5;
    then consider Z such that
A57: g.x in Z & Z in XX by A3,TARSKI:def 4;
    Q-Seg(g.x) c= Z by A43,A57;
    then Card (Q-Seg(g.x)) c= Card Z & Card Z in M by A1,A3,A57,CARD_1:27;
    then Card (Q-Seg(g.x)) = Card A & Card (Q-Seg(g.x)) in M by A47,A56,
    ORDINAL1:22;
    hence x in M by Th60;
  end;
  order_type_of Q,union X are_equipotent by A42,WELLORD2:def 4;
  then Card order_type_of Q = Card union X & Card M = M by CARD_1:21,def 5;
  hence thesis by A55,CARD_1:27;
end;

begin :: Addenda

:: from AMI_1

registration
  let f be Function;
  cluster product f -> functional;
  coherence
  proof
    set d = product f;
    let x be set;
    assume x in d;
    then ex g being Function
    st x = g & dom g= dom f & for x being set st x in dom f holds g.x in f.x
    by Def5;
    hence x is Function;
  end;
end;

registration
  let A be set;
  let B be with_non-empty_elements set;
  cluster -> non-empty Function of A,B;
  coherence
  proof
    let f be Function of A,B;
    thus not {} in rng f by SETFAM_1:def 9;
  end;
end;

:: from PRVECT_1

registration
  let f be non-empty Function;
  cluster product f -> non empty;
  coherence
  proof
    not {} in rng f by RELAT_1:def 9;
    hence thesis by Th37;
  end;
end;

:: from AMI_1, 2006.03.14, A.T.

theorem
  for a,b,c,d being set st a <> b holds
  product (a,b) --> ({c},{d}) = { (a,b) --> (c,d) }
proof
  let a,b,c,d be set such that
A1: a <> b;
  set X = { (a,b) --> (c,d) }, f = (a,b) --> ({c},{d});
A2: dom f = {a,b} by FUNCT_4:65;
  now
    let x;
    thus x in X implies ex g being Function st x = g & dom g = dom f &
    for x st x in dom f holds g.x in f.x
    proof
      assume
A3:   x in X;
      take g = (a,b) --> (c,d);
      thus x = g by A3,TARSKI:def 1;
      thus dom g = dom f by A2,FUNCT_4:65;
      let x;
      assume x in dom f;
      then
A4:   x = a or x = b by A2,TARSKI:def 2;
      g.a = c & f.a = {c} & g.b = d & f.b = {d} by A1,FUNCT_4:66;
      hence g.x in f.x by A4,TARSKI:def 1;
    end;
    given g being Function such that
A5: x = g and
A6: dom g = dom f and
A7: for x st x in dom f holds g.x in f.x;
    a in dom f & b in dom f by A2,TARSKI:def 2;
    then g.a in f.a & g.b in f.b & f.a = {c} & f.b = {d} by A1,A7,FUNCT_4:66;
    then g.a = c & g.b = d by TARSKI:def 1;
    then g = (a,b) --> (c,d) by A2,A6,FUNCT_4:69;
    hence x in X by A5,TARSKI:def 1;
  end;
  hence product (a,b) --> ({c},{d}) = { (a,b) --> (c,d) } by Def5;
end;

:: from AMI_1, 2006.03.14, A.T.

theorem
  x in product f implies x is Function
proof
  assume x in product f;
  then ex g st x = g & dom g = dom f &
  for x st x in dom f holds g.x in f.x by Def5;
  hence x is Function;
end;

begin :: Superproducts, from AMI_1, 2006.03.14, A.T.

reserve A,B for set;

definition
  let f be Function;
  func sproduct f -> set means
  :Def9:
  x in it iff ex g st x = g & dom g c= dom f &
  for x st x in dom g holds g.x in f.x;
  existence
  proof
    defpred P[set] means ex g st $1 = g & dom g c= dom f &
    for x st x in dom g holds g.x in f.x;
    consider A being set such that
A1: x in A iff x in PFuncs(dom f, union rng f) & P[x] from XBOOLE_0:sch 1;
    now
      let x;
      thus x in A implies ex g st x = g & dom g c= dom f &
      for x st x in dom g holds g.x in f.x by A1;
      given g such that
A2:   x = g & dom g c= dom f & for x st x in dom g holds g.x in f.x;
      rng g c= union rng f
      proof
        let y be set;
        assume y in rng g;
        then consider z being set such that
A3:     z in dom g & y = g.z by FUNCT_1:def 5;
A4:     g.z in f.z by A2,A3;
        f.z in rng f by A2,A3,FUNCT_1:def 5;
        hence y in union rng f by A3,A4,TARSKI:def 4;
      end;
      then x in PFuncs(dom f, union rng f) by A2,PARTFUN1:def 5;
      hence x in A by A1,A2;
    end;
    hence thesis;
  end;
  uniqueness
  proof
    defpred P[set] means ex g st $1 = g & dom g c= dom f &
    for x st x in dom g holds g.x in f.x;
    let A,B be set such that
A5: x in A iff P[x] and
A6: x in B iff P[x];
    thus thesis from XBOOLE_0:sch 2(A5,A6);
  end;
end;

registration
  let f be Function;
  cluster sproduct f -> functional non empty;
  coherence
  proof
    defpred P[set] means ex g st $1 = g & dom g c= dom f &
    for x st x in dom g holds g.x in f.x;
    consider A being set such that
A1: x in A iff x in PFuncs(dom f, union rng f) & P[x] from XBOOLE_0:sch 1;
    {} is PartFunc of dom f, union rng f by RELSET_1:25;
    then
A2: {} in PFuncs(dom f, union rng f) by PARTFUN1:119;
    dom {} c= dom f & for x st x in dom {} holds {} .x in f.x by XBOOLE_1:2;
    then reconsider A as non empty set by A1,A2;
    now
      let x be set;
      assume x in A;
      then ex g st x = g & dom g c= dom f &
      for x st x in dom g holds g.x in f.x by A1;
      hence x is Function;
    end;
    then reconsider A as functional non empty set by FRAENKEL:def 1;
    now
      let x;
      thus x in A implies ex g st x = g & dom g c= dom f &
      for x st x in dom g holds g.x in f.x by A1;
      given g such that
A3:   x = g & dom g c= dom f & for x st x in dom g holds g.x in f.x;
      rng g c= union rng f
      proof
        let y be set;
        assume y in rng g;
        then consider z being set such that
A4:     z in dom g & y = g.z by FUNCT_1:def 5;
A5:     g.z in f.z by A3,A4;
        f.z in rng f by A3,A4,FUNCT_1:def 5;
        hence y in union rng f by A4,A5,TARSKI:def 4;
      end;
      then x in PFuncs(dom f, union rng f) by A3,PARTFUN1:def 5;
      hence x in A by A1,A3;
    end;
    hence thesis by Def9;
  end;
end;

theorem Th65:
  g in sproduct f implies dom g c= dom f &
  for x st x in dom g holds g.x in f.x
proof
  assume g in sproduct f;
  then ex h st g = h & dom h c= dom f &
  for x st x in dom h holds h.x in f.x by Def9;
  hence thesis;
end;

theorem Th66:
  {} in sproduct f
proof
  dom {} c= dom f & for x st x in dom {} holds {} .x in f.x by XBOOLE_1:2;
  hence {} in sproduct f by Def9;
end;

theorem Th67:
  product f c= sproduct f
proof
  let x;
  assume x in product f;
  then ex g st x = g & dom g = dom f &
  for x st x in dom f holds g.x in f.x by Def5;
  hence x in sproduct f by Def9;
end;

theorem Th68:
  x in sproduct f implies x is PartFunc of dom f, union rng f
proof
  assume x in sproduct f;
  then consider g such that
A1: x = g & dom g c= dom f & for x st x in dom g holds g.x in f.x by Def9;
  rng g c= union rng f
  proof
    let y be set;
    assume y in rng g;
    then consider z being set such that
A2: z in dom g & y = g.z by FUNCT_1:def 5;
A3: g.z in f.z by A1,A2;
    f.z in rng f by A1,A2,FUNCT_1:def 5;
    hence y in union rng f by A2,A3,TARSKI:def 4;
  end;
  hence x is PartFunc of dom f, union rng f by A1,RELSET_1:11;
end;

theorem Th69:
  g in product f & h in sproduct f implies g +* h in product f
proof
  assume
A1: g in product f;
  then
A2: dom g = dom f & for x st x in dom f holds g.x in f.x by Th18;
  assume
A3: h in sproduct f;
  then dom h c= dom f & for x st x in dom h holds h.x in f.x by Th65;
  then
A4: dom g \/ dom h = dom f by A2,XBOOLE_1:12;
  then
A5: dom(g +* h) = dom f by FUNCT_4:def 1;
  now
    let x;
    assume
A6: x in dom f;
A7: (dom g \ dom h) \/ dom h = dom f by A4,XBOOLE_1:39;
    now per cases by A6,A7,XBOOLE_0:def 2;
      case
A8:     x in dom g \ dom h;
        then not x in dom h by XBOOLE_0:def 4;
        hence x in dom f & (g +* h).x = g.x by A2,A8,FUNCT_4:12;
      end;
      case x in dom h;
        hence (g +* h).x = h.x by FUNCT_4:14;
      end;
    end;
    hence (g +* h).x in f.x by A1,A3,Th18,Th65;
  end;
  hence g +* h in product f by A5,Th18;
end;

theorem
  product f <> {} implies
  (g in sproduct f iff ex h st h in product f & g c= h)
proof
  assume
A1: product f <> {};
  thus g in sproduct f implies ex h st h in product f & g c= h
  proof
    assume
A2: g in sproduct f;
    consider k being Element of product f;
    reconsider k as Function;
    take k +* g;
    thus k +* g in product f by A1,A2,Th69;
    thus g c= k +* g by FUNCT_4:26;
  end;
  given h such that
A3: h in product f & g c= h;
A4: dom h = dom f & for x st x in dom f holds h.x in f.x by A3,Th18;
A5: dom g c= dom h by A3,RELAT_1:25;
  now
    let x;
    assume
A6: x in dom g;
    then g.x = h.x by A3,GRFUNC_1:8;
    hence g.x in f.x by A4,A5,A6;
  end;
  hence g in sproduct f by A4,A5,Def9;
end;

theorem Th71:
  sproduct f c= PFuncs(dom f,union rng f)
proof
  let x;
  assume x in sproduct f;
  then x is PartFunc of dom f, union rng f by Th68;
  hence x in PFuncs(dom f,union rng f) by PARTFUN1:119;
end;

theorem Th72:
  f c= g implies sproduct f c= sproduct g
proof
  assume
A1: f c= g;
  then
A2: dom f c= dom g by GRFUNC_1:8;
  let y;
  assume y in sproduct f;
  then consider h such that
A3: y = h & dom h c= dom f and
A4: for x st x in dom h holds h.x in f.x by Def9;
A5: dom h c= dom g by A2,A3,XBOOLE_1:1;
  now
    let x;
    assume
A6: x in dom h;
    then f.x = g.x by A1,A3,GRFUNC_1:8;
    hence h.x in g.x by A4,A6;
  end;
  hence y in sproduct g by A3,A5,Def9;
end;

theorem Th73:
  sproduct {} = {{}}
proof
  sproduct {} c= PFuncs({},{}) by Th71,RELAT_1:60,ZFMISC_1:2;
  hence sproduct {} c= {{}} by PARTFUN1:122;
  let x be set;
  assume x in {{}};
  then x = {} by TARSKI:def 1;
  hence x in sproduct {} by Th66;
end;

theorem
  PFuncs(A,B) = sproduct (A --> B)
proof
  now per cases;
    case
A1:   A = {};
      then A --> B = {} --> B;
      hence sproduct (A --> B) = PFuncs(A,B) by A1,Th73,PARTFUN1:122;
    end;
    case A <> {};
      then rng (A --> B) = { B } by FUNCOP_1:14;
      then
A2:   dom(A --> B) = A & B = union rng (A --> B) by FUNCOP_1:19,ZFMISC_1:31;
      thus PFuncs(A,B) c= sproduct (A --> B)
      proof
        let x;
        assume x in PFuncs(A,B);
        then consider f being Function such that
A3:     x = f & dom f c= A & rng f c= B by PARTFUN1:def 5;
A4:     dom f c= dom (A --> B) by A3,FUNCOP_1:19;
        now
          let x;
          assume
A5:       x in dom f;
          then f.x in rng f by FUNCT_1:def 5;
          then f.x in B by A3;
          hence f.x in (A --> B).x by A3,A5,FUNCOP_1:13;
        end;
        hence x in sproduct (A --> B) by A3,A4,Def9;
      end;
      thus sproduct (A --> B) c= PFuncs(A,B) by A2,Th71;
    end;
  end;
  hence thesis by XBOOLE_0:def 10;
end;

theorem
  for A, B being non empty set for f being Function of A,B
  holds sproduct f = sproduct(f|{x where x is Element of A: f.x <> {} })
proof
  let A, B be non empty set;
  let f be Function of A,B;
  set X = {x where x is Element of A: f.x <> {} };
  thus sproduct f c= sproduct(f|X)
  proof
    let x;
    assume x in sproduct f;
    then consider g such that
A1: x = g & dom g c= dom f & for x st x in dom g holds g.x in f.x by Def9;
A2: now
      let x;
      assume
A3:   x in dom g;
      then reconsider a = x as Element of A by A1,FUNCT_2:def 1;
      f.a <> {} by A1,A3;
      hence x in X;
    end;
A4: now
      let x;
      assume
A5:   x in dom g;
      then x in X by A2;
      hence x in (dom f)/\ X by A1,A5,XBOOLE_0:def 3;
    end;
A6: dom g c= dom(f|X)
    proof
      let x;
      assume x in dom g;
      then x in (dom f)/\ X by A4;
      hence x in dom(f|X) by RELAT_1:90;
    end;
    now
      let x;
      assume x in dom g;
      then x in (dom f)/\ X & g.x in f.x by A1,A4;
      hence g.x in (f|X).x by FUNCT_1:71;
    end;
    hence x in sproduct(f|X) by A1,A6,Def9;
  end;
  thus thesis by Th72,RELAT_1:88;
end;

theorem Th76:
  x in dom f & y in f.x implies x .--> y in sproduct f
proof
  assume that
A1: x in dom f and
A2: y in f.x;
A3: dom(x .--> y) = {x} by FUNCOP_1:19;
  then
A4: dom(x .--> y) c= dom f by A1,ZFMISC_1:37;
  now
    let z;
    assume z in dom(x .--> y);
    then z = x by A3,TARSKI:def 1;
    hence (x .--> y).z in f.z by A2,FUNCOP_1:87;
  end;
  hence x .--> y in sproduct f by A4,Def9;
end;

theorem
  sproduct f = {{}} iff for x st x in dom f holds f.x = {}
proof
  thus sproduct f = {{}} implies for x st x in dom f holds f.x = {}
  proof
    assume
A1: sproduct f = {{}};
    let x;
    assume
A2: x in dom f;
    assume
A3: f.x <> {};
    consider y being Element of f.x;
    x .--> y in sproduct f by A2,A3,Th76;
    hence contradiction by A1,TARSKI:def 1;
  end;
  assume
A4: for x st x in dom f holds f.x = {};
  now
    let x;
    thus x in sproduct f implies x = {}
    proof
      assume x in sproduct f;
      then consider g such that
A5:   x = g and
A6:   dom g c= dom f and
A7:   for y st y in dom g holds g.y in f.y by Def9;
      assume x <> {};
      then
A8:   dom g <> {} by A5,RELAT_1:64;
      consider y being Element of dom g;
      f.y <> {} & y in dom f by A6,A7,A8,TARSKI:def 3;
      hence contradiction by A4;
    end;
    thus x = {} implies x in sproduct f by Th66;
  end;
  hence sproduct f = {{}} by TARSKI:def 1;
end;

theorem Th78:
  A c= sproduct f &
  (for h1,h2 being Function st h1 in A & h2 in A holds h1 tolerates h2)
  implies union A in sproduct f
proof
  assume that
A1: A c= sproduct f and
A2: for h1,h2 being Function st h1 in A & h2 in A holds h1 tolerates h2;
  for x be set st x in A holds x is Function by A1,FRAENKEL:def 1;
  then reconsider g = union A as Function by A2,PARTFUN1:188;
A3: dom g c= dom f
  proof
    let x;
    assume x in dom g;
    then consider y such that
A4: [x,y] in g by RELAT_1:def 4;
    consider h being set such that
A5: [x,y] in h and
A6: h in A by A4,TARSKI:def 4;
    reconsider h as Function by A1,A6,FRAENKEL:def 1;
A7: x in dom h by A5,RELAT_1:def 4;
    dom h c= dom f by A1,A6,Th65;
    hence x in dom f by A7;
  end;
  now
    let x;
    assume x in dom g;
    then consider y such that
A8: [x,y] in g by RELAT_1:def 4;
    consider h being set such that
A9: [x,y] in h and
A10: h in A by A8,TARSKI:def 4;
    reconsider h as Function by A1,A10,FRAENKEL:def 1;
A11: x in dom h by A9,RELAT_1:def 4;
    h.x = y by A9,FUNCT_1:8
      .= g.x by A8,FUNCT_1:8;
    hence g.x in f.x by A1,A10,A11,Th65;
  end;
  hence union A in sproduct f by A3,Def9;
end;

theorem
  g tolerates h & g in sproduct f & h in sproduct f
  implies g \/ h in sproduct f
proof
  assume that
A1: g tolerates h and
A2: g in sproduct f & h in sproduct f;
A3: {g,h} c= sproduct f by A2,ZFMISC_1:38;
A4: now
    let h1,h2 be Function;
    assume h1 in {g,h} & h2 in {g,h};
    then (h1 = g or h1 = h) & (h2 = g or h2 = h) by TARSKI:def 2;
    hence h1 tolerates h2 by A1;
  end;
  union {g,h} = g \/ h by ZFMISC_1:93;
  hence g \/ h in sproduct f by A3,A4,Th78;
end;

theorem Th80:
  g c= h & h in sproduct f implies g in sproduct f
proof
  assume that
A1: g c= h and
A2: h in sproduct f;
A3: dom g c= dom h by A1,GRFUNC_1:8;
  dom h c= dom f by A2,Th65;
  then
A4: dom g c= dom f by A3,XBOOLE_1:1;
  now
    let x;
    assume
A5: x in dom g;
    then h.x in f.x by A2,A3,Th65;
    hence g.x in f.x by A1,A5,GRFUNC_1:8;
  end;
  hence g in sproduct f by A4,Def9;
end;

theorem Th81:
  g in sproduct f implies g|A in sproduct f by Th80,RELAT_1:88;

theorem Th82:
  g in sproduct f implies g|A in sproduct f|A
proof
A1: dom(g|A) = dom g /\ A & dom(f|A) = dom f /\ A by RELAT_1:90;
  assume
A2: g in sproduct f;
  then dom g c= dom f by Th65;
  then
A3: dom(g|A) c= dom(f|A) by A1,XBOOLE_1:26;
  now
    let x;
    assume
A4: x in dom(g|A);
    then
A5: (g|A).x = g.x & (f|A).x = f.x by A3,FUNCT_1:70;
    x in dom g by A1,A4,XBOOLE_0:def 3;
    hence (g|A).x in (f|A).x by A2,A5,Th65;
  end;
  hence g|A in sproduct f|A by A3,Def9;
end;

theorem
  h in sproduct(f+*g) implies
  ex f',g' being Function st f' in sproduct f & g' in sproduct g & h = f'+*g'
proof
  assume
A1: h in sproduct(f+*g);
  take h|(dom f \ dom g), h|dom g;
A2: h|(dom f \ dom g) in sproduct (f +* g)|(dom f \ dom g) by A1,Th82;
  sproduct (f +* g)|(dom f \ dom g) c= sproduct f by Th72,FUNCT_4:25;
  hence h|(dom f \ dom g) in sproduct f by A2;
  (f +* g)|dom g = g by FUNCT_4:24;
  hence h|dom g in sproduct g by A1,Th82;
  dom h c= dom(f+*g) by A1,Th65;
  then dom h c= dom f \/ dom g by FUNCT_4:def 1;
  then dom h c= (dom f \ dom g) \/ dom g by XBOOLE_1:39;
  hence h = h|(dom f \ dom g) +* h|dom g by FUNCT_4:74;
end;

theorem Th84:
  for f',g' being Function st dom g misses dom f' \ dom g' &
  f' in sproduct f & g' in sproduct g holds f'+*g' in sproduct(f+*g)
proof
  let f',g' be Function such that
A1: dom g misses dom f' \ dom g' and
A2: f' in sproduct f & g' in sproduct g;
  set h = f'+*g';
A3: dom f' c= dom f & dom g' c= dom g by A2,Th65;
  then
A4: dom f' \/ dom g' c= dom f \/ dom g by XBOOLE_1:13;
A5: dom h = dom f' \/ dom g' by FUNCT_4:def 1;
  then
A6: dom h c= dom(f+*g) by A4,FUNCT_4:def 1;
  x in dom h implies h.x in (f+*g).x
  proof
    assume
A7: x in dom h;
    then x in dom(f+*g) by A6;
    then
A8: x in dom f \/ dom g by FUNCT_4:def 1;
    x in dom f' \ dom g' \/ dom g' by A5,A7,XBOOLE_1:39;
    then
A9: x in dom f' \ dom g' or x in dom g' by XBOOLE_0:def 2;
    now per cases;
      case
A10:    x in dom g;
        then h.x = g'.x by A1,A5,A7,A9,FUNCT_4:def 1,XBOOLE_0:3;
        hence h.x in g.x by A1,A2,A9,A10,Th65,XBOOLE_0:3;
      end;
      case not x in dom g;
        then
A11:    not x in dom g' by A3;
        then
A12:    h.x = f'.x by A5,A7,FUNCT_4:def 1;
        x in dom f' by A5,A7,A11,XBOOLE_0:def 2;
        hence h.x in f.x by A2,A12,Th65;
      end;
    end;
    hence h.x in (f+*g).x by A8,FUNCT_4:def 1;
  end;
  hence h in sproduct(f+*g) by A6,Def9;
end;

theorem
  for f',g' being Function st dom f' misses dom g \ dom g' &
  f' in sproduct f & g' in sproduct g holds f'+*g' in sproduct(f+*g)
proof
  let f',g' be Function;
  assume dom f' misses dom g \ dom g';
  then dom g misses dom f' \ dom g' by XBOOLE_1:81;
  hence thesis by Th84;
end;

theorem Th86:
  g in sproduct f & h in sproduct f implies g +* h in sproduct f
proof
  assume
A1: g in sproduct f & h in sproduct f;
  then dom g c= dom f & dom h c= dom f by Th65;
  then dom g \/ dom h c= dom f by XBOOLE_1:8;
  then
A2: dom(g+*h) c= dom f by FUNCT_4:def 1;
  now
    let x;
    assume x in dom(g+*h);
    then x in dom g \/ dom h by FUNCT_4:def 1;
    then
A3: x in (dom g \ dom h \/ dom h) by XBOOLE_1:39;
    now per cases by A3,XBOOLE_0:def 2;
      suppose
A4:     x in dom h;
        then h.x in f.x by A1,Th65;
        hence (g+*h).x in f.x by A4,FUNCT_4:14;
      end;
      suppose
A5:     x in dom g \ dom h;
        then
A6:     g.x in f.x by A1,Th65;
        not x in dom h by A5,XBOOLE_0:def 4;
        hence (g+*h).x in f.x by A6,FUNCT_4:12;
      end;
    end;
    hence (g+*h).x in f.x;
  end;
  hence thesis by A2,Def9;
end;

theorem
  for x1,x2,y1,y2 being set holds
  x1 in dom f & y1 in f.x1 & x2 in dom f & y2 in f.x2
  implies (x1,x2)-->(y1,y2) in sproduct f
proof
  let x1,x2,y1,y2 be set;
  assume x1 in dom f & y1 in f.x1;
  then
A1: x1 .--> y1 in sproduct f by Th76;
  assume x2 in dom f & y2 in f.x2;
  then
A2: x2 .--> y2 in sproduct f by Th76;
  (x1,x2)-->(y1,y2) = (x1 .--> y1) +* (x2 .--> y2) by FUNCT_4:def 4;
  hence (x1,x2)-->(y1,y2) in sproduct f by A1,A2,Th86;
end;

begin  :: from PRALG_2, 2007.11.14, A.T.

definition
  let IT be set;
  attr IT is with_common_domain means
  :Def10:
  for f,g be Function st f in IT & g in IT holds dom f = dom g;
end;

registration
  cluster with_common_domain functional non empty set;
  existence
  proof
    consider h be Function;
    take A = {h};
    for f,g be Function st f in A & g in A holds dom f = dom g
    proof
      let f,g be Function;
      assume f in A & g in A;
      then f = h & g = h by TARSKI:def 1;
      hence thesis;
    end;
    hence A is with_common_domain by Def10;
    for x be set st x in A holds x is Function by TARSKI:def 1;
    hence A is functional by FRAENKEL:def 1;
    thus A is non empty;
  end;
end;

theorem
  {{}} is functional with_common_domain set
proof
A1: for x st x in {{}} holds x is Function by TARSKI:def 1;
  for f,g be Function st f in {{}} & g in {{}} holds dom f = dom g
  proof
    let f,g be Function;
    assume f in {{}} & g in {{}};
    then f = {} & g = {} by TARSKI:def 1;
    hence thesis;
  end;
  hence thesis by A1,Def10,FRAENKEL:def 1;
end;

definition
  let X be with_common_domain functional set;
  canceled;  :: miejsce na uogolnienie
  func DOM X -> set means :: overloading (dom) dozwolony
  :Def12:
  (for x be Function st x in X holds it = dom x) if X <> {}
  otherwise it = {};
  existence
  proof
    thus X <> {} implies ex Y be set st for x be Function st x in X
    holds Y = dom x
    proof
      assume X <> {};
      then consider x be set such that
A1:   x in X by XBOOLE_0:def 1;
      reconsider x as Function by A1,FRAENKEL:def 1;
      take dom x;
      let y be Function;
      assume y in X;
      hence thesis by A1,Def10;
    end;
    thus X = {} implies ex Y be set st Y = {};
  end;
  uniqueness
  proof
    let A,B be set;
    thus X <> {} implies ((for x be Function st x in X holds A = dom x) &
    (for x be Function st x in X holds B = dom x) implies A = B)
    proof
      assume
A2:   X <> {};
      assume that
A3:   for x be Function st x in X holds A = dom x and
A4:   for x be Function st x in X holds B = dom x;
      consider x be set such that
A5:   x in X by A2,XBOOLE_0:def 1;
      reconsider x as Function by A5,FRAENKEL:def 1;
      A = dom x & B = dom x by A3,A4,A5;
      hence thesis;
    end;
    thus X = {} implies (A = {} & B = {} implies A = B);
  end;
  consistency;
end;

theorem
  for X be with_common_domain functional set st X = {{}} holds DOM X = {}
proof
  let X be with_common_domain functional set;
  assume
A1: X = {{}};
  {} in {{}} by TARSKI:def 1;
  hence thesis by A1,Def12,RELAT_1:60;
end;

begin  :: Product like sets, from AMISTD_2, 2007.11.14, A.T.

definition
  let S be functional set;
  func product" S -> Function means  :: tu trzeba uzyc DOM

:: uzywajac meet mamy definicje
:: nie przez czesci
  :Def13:
  (for x being set holds x in dom it iff
  for f being Function st f in S holds x in dom f) &
  (for i being set st i in dom it holds it.i = pi(S,i)) if S is non empty
  otherwise it = {};
  existence
  proof
    thus S is non empty implies ex g being Function st
    (for x being set holds x in dom g iff
    for f being Function st f in S holds x in dom f) &
    (for i being set st i in dom g holds g.i = pi(S,i))
    proof
      assume S is non empty;
      then reconsider S1 = S as non empty functional set;
      set D = {dom f where f is Element of S1: not contradiction};
      defpred P[set,set] means $2 = pi(S,$1);
A1:   for e being set st e in meet D ex u being set st P[e,u];
      consider g being Function such that
A2:   dom g = meet D and
A3:   for e being set st e in meet D holds P[e,g.e] from CLASSES1:sch 1(A1);
      take g;
      hereby
        let x be set;
        hereby
          assume
A4:       x in dom g;
          let f be Function;
          assume f in S;
          then dom f in D;
          hence x in dom f by A2,A4,SETFAM_1:def 1;
        end;
        assume
A5:     for f being Function st f in S holds x in dom f;
        consider f being Element of S1;
A6:     dom f in D;
        for Y being set holds Y in D implies x in Y
        proof
          let Y be set;
          assume Y in D;
          then ex f being Element of S1 st Y = dom f & not contradiction;
          hence x in Y by A5;
        end;
        hence x in dom g by A2,A6,SETFAM_1:def 1;
      end;
      thus thesis by A2,A3;
    end;
    thus thesis;
  end;
  uniqueness
  proof
    let A, B be Function;
    thus S is non empty & (for x being set holds x in dom A iff
    for f being Function st f in S holds x in dom f) &
    (for i being set st i in dom A holds A.i = pi(S,i)) &
    (for x being set holds x in dom B iff
    for f being Function st f in S holds x in dom f) &
    (for i being set st i in dom B holds B.i = pi(S,i)) implies A = B
    proof
      defpred P[set] means for f being Function st f in S holds $1 in dom f;
      assume that S is non empty and
A7:   for x being set holds x in dom A iff P[x] and
A8:   for i being set st i in dom A holds A.i = pi(S,i) and
A9:   for x being set holds x in dom B iff P[x] and
A10:  for i being set st i in dom B holds B.i = pi(S,i);
A11:  dom A = dom B from XBOOLE_0:sch 2(A7,A9);
      now
        let i be set;
        assume
A12:    i in dom A;
        hence A.i = pi(S,i) by A8
          .= B.i by A10,A11,A12;
      end;
      hence A = B by A11,FUNCT_1:9;
    end;
    thus thesis;
  end;
  consistency;
end;

theorem
  for S being non empty functional set holds
  dom product" S = meet {dom f where f is Element of S: not contradiction}
proof
  let S be non empty functional set;
  set D = {dom f where f is Element of S: not contradiction};
  hereby
    let x be set;
    assume
A1: x in dom product" S;
    consider f being Element of S;
A2: dom f in D;
    for Y being set holds Y in D implies x in Y
    proof
      let Y be set;
      assume Y in D;
      then ex f being Element of S st Y = dom f & not contradiction;
      hence x in Y by A1,Def13;
    end;
    hence x in meet D by A2,SETFAM_1:def 1;
  end;
  let x be set;
  assume
A3: x in meet D;
  for f being Function st f in S holds x in dom f
  proof
    let f be Function;
    assume f in S;
    then dom f in D;
    hence x in dom f by A3,SETFAM_1:def 1;
  end;
  hence thesis by Def13;
end;

theorem
  for S being non empty functional set,
  i being set st i in dom product" S holds
  (product" S).i = {f.i where f is Element of S: not contradiction}
proof
  let S be non empty functional set, i be set;
  assume
A1: i in dom product" S;
  hereby
    let x be set;
    assume x in (product" S).i;
    then x in pi(S,i) by A1,Def13;
    then ex f being Function st f in S & x = f.i by Def6;
    hence x in {f.i where f is Element of S: not contradiction};
  end;
  let x be set;
  assume x in {f.i where f is Element of S: not contradiction};
  then ex f being Element of S st x = f.i & not contradiction;
  then x in pi(S,i) by Def6;
  hence thesis by A1,Def13;
end;

definition
  let S be set;
  attr S is product-like means
  :Def14:
  ex f being Function st S = product f;
end;

registration
  let f be Function;
  cluster product f -> product-like;
  coherence by Def14;
end;

registration
  cluster product-like -> functional with_common_domain set;
  coherence
  proof
    let S be set;
    given f being Function such that
A1: S = product f;
    thus S is functional by A1;
    let h, g be Function such that
A2: h in S and
A3: g in S;
    thus dom h = dom f by A1,A2,Th18
      .= dom g by A1,A3,Th18;
  end;
end;

registration
  cluster product-like non empty set;
  existence
  proof
    consider B being with_non-empty_elements set, f being Function of 0,B;
    take product f;
    thus thesis;
  end;
end;

theorem Th92:
  for S being functional with_common_domain set holds dom product" S = DOM S
proof
  let S be functional with_common_domain set;
  per cases;
  suppose
A1: S is empty;
    hence dom product" S = {} by Def13,RELAT_1:60
      .= DOM S by A1,Def12;
  end;
  suppose
A2: S is non empty;
    consider f being Element of S;
    hereby
      let x be set;
      assume x in dom product" S;
      then x in dom f by A2,Def13;
      hence x in DOM S by A2,Def12;
    end;
    let x be set;
    assume x in DOM S;
    then for f being Function st f in S holds x in dom f by Def12;
    hence thesis by A2,Def13;
  end;
end;

theorem
  for S being functional set, i being set st i in dom product" S
  holds (product" S).i = pi(S,i)
proof
  let S be functional set, i be set;
  per cases;
  suppose S = {};
    then dom product" S = dom {} by Def13;
    hence thesis;
  end;
  suppose
A1: S <> {};
    assume i in dom product" S;
    hence thesis by A1,Def13;
  end;
end;

theorem Th94:
  for S being functional with_common_domain set holds S c= product product" S
proof
  let S be functional with_common_domain set;
  let f be set;
  assume
A1: f in S;
  then reconsider f as Element of S;
A2: dom f = DOM S by A1,Def12
    .= dom product" S by Th92;
  for i being set st i in dom product" S holds f.i in (product" S).i
  proof
    let i be set;
    assume i in dom product" S;
    then (product" S).i = pi(S,i) by A1,Def13;
    hence f.i in (product" S).i by A1,Def6;
  end;
  hence thesis by A2,Th18;
end;

theorem
  for S being non empty product-like set holds S = product product" S
proof
  let S be non empty product-like set;
  thus S c= product product" S by Th94;
  let x be set;
  assume x in product product" S;
  then consider g being Function such that
A1: x = g and
A2: dom g = dom product" S and
A3: for z being set st z in dom product" S holds g.z in (product" S).z
  by Def5;
  consider p being Function such that
A4: S = product p by Def14;
  consider s being Element of S;
A5: dom g = DOM S by A2,Th92
    .= dom s by Def12
    .= dom p by A4,Th18;
  for z being set st z in dom p holds g.z in p.z
  proof
    let z be set;
    assume
A6: z in dom p;
    then g.z in (product" S).z by A2,A3,A5;
    then g.z in pi(S,z) by A2,A5,A6,Def13;
    then ex f being Function st f in S & g.z = f.z by Def6;
    hence g.z in p.z by A4,A6,Th18;
  end;
  hence x in S by A1,A4,A5,Th18;
end;

:: from AMI_1, 2008.04.11, A.T. (generalized)

theorem
  for f being Function
  for s, t being Element of product f, A be set holds
   s +* t|A is Element of product f
proof let f be Function;
  let s, t be Element of product f, A be set;
  per cases;
  suppose f is non-empty;
   then not {} in rng f by RELAT_1:def 9;
   then product f <> {} by Th37;
   then
A1: t in product f;
  product f c= sproduct f by Th67;
  hence s +* t|A is Element of product f by A1,Th69,Th81;
  end;
  suppose f is not non-empty;
   then {} in rng f by RELAT_1:def 9;
   then
A:    product f = {} by Th37;
   then
B: s = {} by SUBSET_1:def 2;
   t = {} by A,SUBSET_1:def 2;
   then t|A = {} by RELAT_1:111;
   then s +* t|A = {} by B;
  hence s +* t|A is Element of product f by A,SUBSET_1:def 2;
  end;
end;

theorem
  for f being non-empty Function
  for p being Element of sproduct f
  ex s being Element of product f st p c= s
proof
  let f be non-empty Function,
      p be Element of sproduct f;
  consider h being Element of product f;
  reconsider s = h +* p as Element of product f by Th69;
  take s;
  thus p c= s by FUNCT_4:26;
end;

