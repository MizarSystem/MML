:: The Fundamental Properties of Natural Numbers
::  by Grzegorz Bancerek
::
:: Received January 11, 1989
:: Copyright (c) 1990 Association of Mizar Users

environ

 vocabularies NUMBERS, ORDINAL1, REAL_1, SUBSET_1, CARD_1, ARYTM_3, XREAL_0,
      TARSKI, RELAT_1, XXREAL_0, XCMPLX_0, ARYTM_1, XBOOLE_0, FINSET_1,
      FUNCT_1, NAT_1, FUNCOP_1;
 notations TARSKI, XBOOLE_0, SUBSET_1, ORDINAL1, FINSET_1, CARD_1, NUMBERS,
      XCMPLX_0, XREAL_0, REAL_1, XXREAL_0, RELAT_1, FUNCT_1, PARTFUN1,
      FUNCOP_1, FUNCT_2;
 constructors NUMBERS, XCMPLX_0, XXREAL_0, XREAL_0, CARD_1, WELLORD2, FUNCT_2,
      PARTFUN1, FUNCOP_1, FUNCT_4, ENUMSET1, RELSET_1;
 registrations SUBSET_1, ORDINAL1, NUMBERS, XXREAL_0, XREAL_0, REAL_1, CARD_1,
      RELSET_1, FUNCT_2;
 requirements REAL, NUMERALS, SUBSET, BOOLE, ARITHM;
 definitions TARSKI, XBOOLE_0, CARD_1, FUNCT_1;
 theorems AXIOMS, ORDINAL1, XCMPLX_1, XREAL_1, XXREAL_0, TARSKI, ORDINAL2,
      XBOOLE_1, XBOOLE_0, CARD_1, FUNCT_2, FUNCT_1, FUNCOP_1;
 schemes SUBSET_1, ORDINAL2, FUNCT_2, FRAENKEL;

begin

definition
  mode Nat is natural number;
end;

reserve x for Real,
  p,k,l,m,n,s,h,i,j,k1,t,t1 for Nat,
  X for Subset of REAL;

:: The results of axioms of natural numbers

theorem Th1:
  for X st 0 in X & for x st x in X holds x + 1 in X for n holds n
  in X
proof
  let A be Subset of REAL such that
A1: 0 in A;
  assume x in A implies x + 1 in A;
  then for x being real number st x in A holds x + 1 in A;
  then
A2: NAT c= A by A1,AXIOMS:29;
  let n;
  n in NAT by ORDINAL1:def 13;
  hence thesis by A2;
end;

:: Addition and multiplication
:: The natural numbers are real numbers therefore some theorems of real
:: numbers are translated for natural numbers.

registration
  let n,k be Nat;
  cluster n + k -> natural;
  coherence
  proof
    defpred P[Real] means ex k st $1 = k & n + k is natural;
    consider X such that
A1: x in X iff P[x] from SUBSET_1:sch 3;
A2: now
      let x;
      assume x in X;
      then consider k such that
A3:   x = k and
A4:   n + k is natural by A1;
A5:   (n + k) + 1 = n + (k + 1);
      reconsider k as Element of NAT by ORDINAL1:def 13;
      n + k is Element of NAT by A4,ORDINAL1:def 13;
      then k + 1 is Element of NAT & (n + k) + 1 is Element of NAT by
      AXIOMS:28;
      hence x + 1 in X by A1,A3,A5;
    end;
    n + 0 = n;
    then 0 in X by A1;
    then k in X by A2,Th1;
    then ex m st k = m & n + m is natural by A1;
    hence thesis;
  end;
end;

definition
  let n be Nat, k be Element of NAT;
  redefine func n + k -> Element of NAT;
  coherence by ORDINAL1:def 13;
end;

definition
  let n be Element of NAT, k be Nat;
  redefine func n + k -> Element of NAT;
  coherence by ORDINAL1:def 13;
end;

:: Now we can form and prove the scheme of induction.

::$N The Principle of Mathematical Induction
scheme
  Ind { P[Nat] } : for k being Element of NAT holds P[k]
provided
A1: P[0] and
A2: for k being Element of NAT st P[k] holds P[k + 1]
proof
  let k;
  defpred P1[Real] means ex k st P[k] & k = $1;
  consider X such that
A3: x in X iff P1[x] from SUBSET_1:sch 3;
A4: for x st x in X holds x + 1 in X
  proof
    let x;
    assume x in X;
    then consider k such that
A5: P[k] and
A6: k = x by A3;
    reconsider k as Element of NAT by ORDINAL1:def 13;
    P[k + 1] by A2,A5;
    hence thesis by A3,A6;
  end;
  0 in X by A1,A3;
  then k in X by A4,Th1;
  then ex n st P[n] & n = k by A3;
  hence thesis;
end;

scheme
  NatInd { P[Nat] } : for k being Nat holds P[k]
provided
A1: P[0] and
A2: for k be Nat st P[k] holds P[k + 1]
proof
A3: for k be Element of NAT st P[k] holds P[k + 1] by A2;
  let k be Nat;
A4: k is Element of NAT by ORDINAL1:def 13;
A5: P[0] by A1;
  for k be Element of NAT holds P[k] from Ind(A5,A3);
  hence thesis by A4;
end;

:: Like addition, the result of multiplication of two natural numbers is
:: a natural number.

registration
  let n,k be Nat;
  cluster n * k -> natural;
  coherence
  proof
    defpred P[Nat] means n*$1 is natural;
A1: for m be Nat holds P[m] implies P[m+1]
    proof
      let m be Nat;
      assume P[m];
      then reconsider k = n * m as Nat;
      k + n is Nat;
      hence thesis;
    end;
A2: P[0];
    for m be Nat holds P[m] from NatInd(A2,A1);
    hence thesis;
  end;
end;

definition
  let n be Nat, k be Element of NAT;
  redefine func n * k -> Element of NAT;
  coherence by ORDINAL1:def 13;
end;

definition
  let n be Element of NAT, k be Nat;
  redefine func n * k -> Element of NAT;
  coherence by ORDINAL1:def 13;
end;

:: Order relation ::
:: Some theorems of not great relation "<=" in real numbers are translated
:: to natural number easy and it is necessary to have them here.

theorem Th2:
  0 <= i
proof
  defpred P[Nat] means 0 <= $1;
A1: for n st P[n] holds P[n+1];
A2: P[0];
  for k holds P[k] from NatInd(A2,A1);
  hence thesis;
end;

theorem
  0 <> i implies 0 < i by Th2;

theorem
  i <= j implies i * h <= j * h
proof
  assume
A1: i <= j;
  0 <= h by Th2;
  hence thesis by A1,XREAL_1:66;
end;

theorem
  0 < i + 1
proof
  assume
A1: 0 >= i + 1;
  0 <= i by Th2;
  hence contradiction by A1;
end;

theorem Th6:
  i = 0 or ex k st i = k + 1
proof
  defpred P[Nat] means $1 = 0 or ex k st $1 = k + 1;
A1: P[h] implies P[h + 1];
A2: P[0];
  for i holds P[i] from NatInd(A2,A1);
  hence thesis;
end;

theorem Th7:
  i + j = 0 implies i = 0 & j = 0
proof
  assume
A1: i + j = 0;
  0 <= i & 0 <= j by Th2;
  hence thesis by A1;
end;

registration
  cluster non zero Nat;
  existence
  proof
    take 1;
    thus thesis;
  end;
end;

registration
  let m be Nat, n be non zero Nat;
  cluster m + n -> non zero;
  coherence by Th7;
  cluster n + m -> non zero;
  coherence;
end;

scheme
  DefbyInd { N()->Nat, F(Nat,Nat)->Nat, P[Nat,Nat] } : (for k being Nat ex n
  being Nat st P[k,n]) & for k,n,m being Nat st P[k,n] & P[k,m] holds n = m
provided
A1: for k,n being Nat holds P[k,n] iff k = 0 & n = N() or ex m,l being
Nat st k = m + 1 & P[m,l] & n = F(k,l)
proof
  reconsider N = N() as Element of NAT by ORDINAL1:def 13;
  defpred P[Nat] means ex n being Nat st P[$1,n];
A2: for k being Nat holds P[k] implies P[k+1]
  proof
    let k be Nat;
    given n being Nat such that
A3: P[k,n];
    reconsider F = F(k+1,n) as Element of NAT by ORDINAL1:def 13;
    take F;
    thus thesis by A1,A3;
  end;
  P[0,N] by A1;
  then
A4: P[0];
  thus for k being Nat holds P[k] from NatInd(A4,A2);
  defpred P[Nat] means for n,m being Nat st P[$1,n] & P[$1,m] holds n = m;
A5: for k being Nat st P[k] holds P[k+1]
  proof
    let k be Nat such that
A6: for n,m being Nat st P[k,n] & P[k,m] holds n = m;
    let n,m be Nat;
    assume ( P[k+1,n])& P[k+1,m];
    then (ex l,u being Nat st k + 1 = l + 1 &( P[l,u])& n = F(k + 1 ,u) )& ex
    v,w being Nat st k + 1 = v + 1 & P[v,w] & m = F(k + 1,w) by A1;
    hence thesis by A6;
  end;
A7: P[0]
  proof
    let n,m be Nat such that
A8: P[0,n] and
A9: P[0,m];
    not ex m,l being Nat st 0 = m + 1 & P[m,l] & n = F(0,l);
    then ( not ex n,l being Nat st 0 = n + 1 & P[n,l] & m = F(0,l))& n = N()
    by A1,A8;
    hence thesis by A1,A9;
  end;
  thus for k being Nat holds P[k] from NatInd(A7,A5);
end;

theorem Th8:
  i <= j + 1 implies i <= j or i = j + 1
proof
  defpred P[Nat] means for j holds $1 <= j + 1 implies $1 <= j or $1 = j+1;
A1: for i st P[i] holds P[i+1]
  proof
    let i such that
A2: for j holds i <= j + 1 implies i <= j or i = j + 1;
    let j;
    assume
A3: i + 1 <= j + 1;
A4: now
      given k such that
A5:   j = k + 1;
      i <= k + 1 by A3,A5,XREAL_1:8;
      then i <= k or i = k + 1 by A2;
      hence thesis by A5,XREAL_1:8;
    end;
    now
A6:   0 <= i by Th2;
      assume
A7:   j = 0;
      then i <= 0 by A3,XREAL_1:8;
      hence thesis by A7,A6;
    end;
    hence thesis by A4,Th6;
  end;
A8: P[0] by Th2;
  for i holds P[i] from NatInd(A8,A1);
  hence thesis;
end;

theorem
  i <= j & j <= i + 1 implies i = j or j = i + 1
proof
  assume that
A1: i <= j and
A2: j <= i + 1;
  j <= i or j = i + 1 by A2,Th8;
  hence thesis by A1,XXREAL_0:1;
end;

theorem Th10:
  i <= j implies ex k st j = i + k
proof
  defpred P[Nat] means i <= $1 implies ex k st $1 = i + k;
A1: for j st P[j] holds P[j+1]
  proof
    let j such that
A2: i <= j implies ex k st j = i + k;
A3: now
      assume i <= j;
      then consider k such that
A4:   j = i + k by A2;
      i + k + 1 = i + (k + 1);
      hence thesis by A4;
    end;
A5: now
      assume i = j + 1;
      then j + 1 = i + 0;
      hence thesis;
    end;
    assume i <= j + 1;
    hence thesis by A3,A5,Th8;
  end;
A6: P[0]
  proof
    assume
A7: i <= 0;
    take 0;
    thus thesis by A7,Th2;
  end;
  for j holds P[j] from NatInd(A6,A1);
  hence thesis;
end;

theorem Th11:
  i <= i + j
proof
  0 + i = i & 0 <= j by Th2;
  hence thesis by XREAL_1:9;
end;

scheme
  CompInd { P[Nat] } : for k being Nat holds P[k]
provided
A1: for k being Nat st for n being Nat st n < k holds P[n] holds P[k]
proof
  let k be Nat;
  defpred P1[Nat] means for n being Nat st n < $1 holds P[n];
A2: for k be Nat holds P1[k] implies P1[k+1]
  proof
    let k be Nat;
    assume
A3: for n being Nat st n < k holds P[n];
    let n be Nat;
    assume n < k + 1;
    then n <= k by Th8;
    then n < k or n = k & n <= k by XXREAL_0:1;
    hence thesis by A1,A3;
  end;
A4: P1[0] by Th2;
  for k being Nat holds P1[k] from NatInd(A4,A2);
  then for n being Nat st n < k holds P[n];
  hence thesis by A1;
end;

:: Principle of minimum

scheme
  Min { P[Nat] } : ex k being Nat st P[k] & for n being Nat st P[n] holds k <=
  n
provided
A1: ex k being Nat st P[k]
proof
  defpred P1[Nat] means not P[$1];
  assume
A2: not thesis;
A3: for k being Nat st for n being Nat st n < k holds P1[n] holds P1[k]
  proof
    let k be Nat;
    assume
A4: for n being Nat st n < k holds not P[n];
    not (ex n being Nat st P[n] & not k <= n) implies not P[k] by A2;
    hence thesis by A4;
  end;
  for k be Nat holds P1[k] from CompInd(A3);
  hence contradiction by A1;
end;

:: Principle of maximum

scheme
  Max { P[Nat], N()->Nat } : ex k being Nat st P[k] & for n being Nat st P[n]
  holds n <= k
provided
A1: for k being Nat st P[k] holds k <= N() and
A2: ex k being Nat st P[k]
proof
  defpred P1[Nat] means for n being Nat st P[n] holds n <= $1;
A3: ex k being Nat st P1[k] by A1;
  consider k being Nat such that
A4: P1[k] and
A5: for m being Nat st P1[m] holds k <= m from Min(A3);
  take k;
  thus P[k]
  proof
    consider n being Nat such that
A6: P[n] by A2;
A7: n <= k by A4,A6;
    assume
A8: not P[k];
    then n <> k by A6;
    then k <> 0 by A7,Th2;
    then consider m such that
A9: k = m + 1 by Th6;
    for n being Nat st P[n] holds n <= m by A4,A8,A9,Th8;
    then
A10: k <= m by A5;
    -m + m + 1 = -m + (m + 1);
    hence contradiction by A9,A10,XREAL_1:8;
  end;
  thus thesis by A4;
end;

theorem Th12:
  i <= j implies i <= j + h
proof
  assume i <= j;
  then
A1: i + h <= j + h by XREAL_1:9;
  0 <= h by Th2;
  then i + 0 <= i + h by XREAL_1:9;
  hence thesis by A1,XXREAL_0:2;
end;

theorem Th13:
  i < j + 1 iff i <= j
proof
  thus i < j + 1 implies i <= j by Th8;
  assume
A1: i <= j;
A2: now
A3: j + (- j) = 0 & j + 1 + (- j) = 1;
    assume i = j + 1;
    hence contradiction by A1,A3,XREAL_1:8;
  end;
  i <= j + 1 by A1,Th12;
  hence thesis by A2,XXREAL_0:1;
end;

theorem Th14:
  j < 1 implies j = 0
proof
  assume j < 1;
  then j < 0 + 1;
  then
A1: j <= 0 by Th13;
  assume j <> 0;
  hence thesis by A1,Th2;
end;

theorem
  i * j = 1 implies i = 1
proof
  assume
A1: i * j = 1;
  then i <> 0;
  then consider m such that
A2: i = m + 1 by Th6;
  j <> 0 by A1;
  then consider l such that
A3: j = l + 1 by Th6;
A4: m * l + m + l + 1 = 0 + 1 by A1,A2,A3;
  then m * l + m = 0;
  hence thesis by A2,A4;
end;

theorem Th16:
  k <> 0 implies n < n + k
proof
  assume k <> 0;
  then
A1: n <> n + k;
  n <= n + k by Th12;
  hence thesis by A1,XXREAL_0:1;
end;

scheme
  Regr { P[Nat] } : P[0]
provided
A1: ex k being Nat st P[k] and
A2: for k being Nat st k <> 0 & P[k] ex n being Nat st n < k & P[n]
proof
  consider k being Nat such that
A3: P[k] & for n being Nat st P[n] holds k <= n from Min(A1);
  now
    assume k <> 0;
    then ex n being Nat st n < k & P[n] by A2,A3;
    hence contradiction by A3;
  end;
  hence thesis by A3;
end;

:: Exact division and rest of division

theorem
  0 < m implies for n ex k,t st n = (m*k)+t & t < m
proof
  defpred P[Nat] means ex k,t st $1 = (m*k)+t & t < m;
  assume
A1: 0 < m;
A2: for n st P[n] holds P[n+1]
  proof
    let n;
    given k1,t1 such that
A3: n = (m*k1)+t1 and
A4: t1 < m;
A5: t1+1 < m implies ex k,t st n+1 = (m*k)+t & t < m
    proof
      assume
A6:   t1+1 < m;
      take k = k1, t = t1+1;
      thus n+1 = m*k+t by A3;
      thus thesis by A6;
    end;
A7: t1+1 = m implies ex k,t st n+1 = (m*k)+t & t < m
    proof
      assume
A8:   t1+1 = m;
      take k = k1+1 , t = 0;
      thus n+1 = m*k+t by A3,A8;
      thus thesis by A1;
    end;
    t1+1 <= m by A4,Th13;
    hence thesis by A5,A7,XXREAL_0:1;
  end;
  0 = m*0+0;
  then
A9: P[0] by A1;
  thus for n holds P[n] from NatInd(A9,A2);
end;

theorem
  n = m*k+t & t < m & n = m*k1+t1 & t1 < m implies k = k1 & t = t1
proof
  assume that
A1: n = m*k+t and
A2: t < m and
A3: n = m*k1+t1 and
A4: t1 < m;
A5: now
    assume k1 <= k;
    then consider u being Nat such that
A6: k = k1 + u by Th10;
    m * (k1 + u) + t = m * k1 + (m * u + t);
    then
A7: m * u + t = t1 by A1,A3,A6,XCMPLX_1:2;
    now
      given w being Nat such that
A8:   u = w + 1;
      m * u + t = m + (m * w + t) by A8;
      hence contradiction by A4,A7,Th11;
    end;
    then
A9: u = 0 by Th6;
    hence k = k1 by A6;
    thus t = t1 by A1,A3,A6,A9,XCMPLX_1:2;
  end;
  now
    assume k <= k1;
    then consider u being Nat such that
A10: k1 = k + u by Th10;
    m * (k + u) + t1 = m * k + (m * u + t1);
    then
A11: m * u + t1 = t by A1,A3,A10,XCMPLX_1:2;
    now
      given w being Nat such that
A12:  u = w + 1;
      m * u + t1 = m + (m * w + t1) by A12;
      hence contradiction by A2,A11,Th11;
    end;
    then
A13: u = 0 by Th6;
    hence k = k1 by A10;
    thus t = t1 by A1,A3,A10,A13,XCMPLX_1:2;
  end;
  hence thesis by A5;
end;

registration
  cluster -> ordinal Nat;
  coherence;
end;

registration
  cluster non empty ordinal Subset of REAL;
  existence
  proof
    take NAT;
    thus thesis;
  end;
end;

theorem
  k < k + n iff 1 <= n
proof
  thus k < k + n implies 1 <= n
  proof
    assume
A1: k < k + n;
    assume not 1 <= n;
    then n = 0 by Th14;
    hence thesis by A1;
  end;
  assume 1 <= n;
  hence thesis by Th16;
end;

theorem
  k < n implies n - 1 is Element of NAT
proof
  assume k < n;
  then k + 1 <= n by Th13;
  then consider j being Nat such that
A1: n = k + 1 + j by Th10;
  n - 1 = k + j by A1;
  hence thesis by ORDINAL1:def 13;
end;

theorem
  k <= n implies n - k is Element of NAT
proof
  assume
A1: k <= n;
  per cases by A1,XXREAL_0:1;
  suppose
    k < n;
    then k + 1 <= n by Th13;
    then consider j being Nat such that
A2: n = k + 1 + j by Th10;
    reconsider j as Element of NAT by ORDINAL1:def 13;
    n - k = 1 + j by A2;
    hence thesis;
  end;
  suppose
    k = n;
    then n - k = 0;
    hence thesis;
  end;
end;

begin :: Addenda

:: from ALGSEQ_1

theorem Th22:
  m < n+1 implies m < n or m = n
proof
  assume m<n+1;
  then m<=n by Th13;
  hence thesis by XXREAL_0:1;
end;

theorem
  k < 2 implies k = 0 or k = 1
proof
  assume k<2;
  then k<1+1;
  hence thesis by Th14,Th22;
end;

registration
  cluster non zero Element of NAT;
  existence
  proof
    take 1;
    thus thesis;
  end;
end;

registration
  cluster -> non negative Element of NAT;
  coherence by Th2;
end;

registration
  cluster -> non negative Nat;
  coherence by Th2;
end;

:: from JORDAN4

theorem
  i <> 0 & h = j*i implies j <= h
proof
  assume i<>0;
  then consider k such that
A1: i = k+1 by Th6;
  assume h=j*i;
  then h=j*k+j*1 by A1;
  hence thesis by Th11;
end;

:: from SCMFSA_7, 2006.03.15, A.T.

canceled;

:: from BINOM, 2006.05.28, A.T.

scheme
  Ind1{M() -> Nat, P[Nat]} : for i being Nat st M() <= i holds P[i]
provided
A1: P[M()] and
A2: for j being Nat st M() <= j holds P[j] implies P[j+1]
proof
  reconsider M = M() as Element of NAT by ORDINAL1:def 13;
  defpred Q[Nat] means P[M() + $1];
A3: now
    let m be Element of NAT;
    assume Q[m];
    then P[M+m+1] by A2,Th11;
    hence Q[m+1];
  end;
  let i;
  assume M() <= i;
  then consider m being Nat such that
A4: i = M() + m by Th10;
A5: Q[0] by A1;
A6: for m being Element of NAT holds Q[m] from Ind(A5,A3);
  m in NAT by ORDINAL1:def 13;
  hence thesis by A6,A4;
end;

:: from INT_2, 2006.05.30, AG

scheme
  CompInd1 { a() -> Nat, P[Nat] } : for k being Nat st k >= a() holds P[k]
provided
A1: for k being Nat st k>=a() & (for n being Nat st n>=a() & n<k holds P
[n]) holds P[k]
proof
  defpred P1[Nat] means for n being Nat st (n>=a() & n<$1) holds P[n];
A2: for k being Nat st k>=a() holds P1[k] implies P1[k+1]
  proof
    let k be Nat;
    assume k>=a();
    assume
A3: for n being Nat st n>=a() & n<k holds P[n];
    let n be Nat;
    assume that
A4: n>=a() and
A5: n<k+1;
    n<=k by A5,Th13;
    then n<k or n = k by XXREAL_0:1;
    hence thesis by A1,A3,A4;
  end;
  let k be Nat;
  assume
A6: k>=a();
A7: P1[a()];
  for k being Nat st k>=a() holds P1[k] from Ind1(A7,A2);
  then for n being Nat st n>=a() & n<k holds P[n] by A6;
  hence thesis by A1,A6;
end;

:: Moved from CQC_THE1 on 07.07.2006 by AK

theorem Th26:
  n <= 1 implies n = 0 or n = 1
proof
  assume
A1: n <= 1;
  assume that
A2: not n = 0 and
A3: not n = 1;
  n < 0+1 by A1,A3,XXREAL_0:1;
  hence contradiction by A2,Th13;
end;

theorem Th27:
  n <= 2 implies n = 0 or n = 1 or n = 2
proof
  assume n <= 2;
  then n <= 1+1;
  hence thesis by Th8,Th26;
end;

theorem Th28:
  n <= 3 implies n = 0 or n = 1 or n = 2 or n = 3
proof
  assume n <= 3;
  then n <= 2+1;
  hence thesis by Th8,Th27;
end;

theorem Th29:
  n <= 4 implies n = 0 or n = 1 or n = 2 or n = 3 or n = 4
proof
  assume n <= 4;
  then n <= 3+1;
  hence thesis by Th8,Th28;
end;

theorem Th30:
  n <= 5 implies n = 0 or n = 1 or n = 2 or n = 3 or n = 4 or n =
  5
proof
  assume n <= 5;
  then n <= 4+1;
  hence thesis by Th8,Th29;
end;

theorem Th31:
  n <= 6 implies n = 0 or n = 1 or n = 2 or n = 3 or n = 4 or n =
  5 or n = 6
proof
  assume n <= 6;
  then n <= 5+1;
  hence thesis by Th8,Th30;
end;

theorem Th32:
  n <= 7 implies n = 0 or n = 1 or n = 2 or n = 3 or n = 4 or n =
  5 or n = 6 or n = 7
proof
  assume n <= 7;
  then n <= 6+1;
  hence thesis by Th8,Th31;
end;

theorem Th33:
  n <= 8 implies n = 0 or n = 1 or n = 2 or n = 3 or n = 4 or n =
  5 or n = 6 or n = 7 or n = 8
proof
  assume n <= 8;
  then n <= 7+1;
  hence thesis by Th8,Th32;
end;

theorem Th34:
  n <= 9 implies n = 0 or n = 1 or n = 2 or n = 3 or n = 4 or n =
  5 or n = 6 or n = 7 or n = 8 or n = 9
proof
  assume n <= 9;
  then n <= 8+1;
  hence thesis by Th8,Th33;
end;

theorem Th35:
  n <= 10 implies n = 0 or n = 1 or n = 2 or n = 3 or n = 4 or n =
  5 or n = 6 or n = 7 or n = 8 or n = 9 or n = 10
proof
  assume n <= 10;
  then n <= 9+1;
  hence thesis by Th8,Th34;
end;

theorem Th36:
  n <= 11 implies n = 0 or n = 1 or n = 2 or n = 3 or n = 4 or n =
  5 or n = 6 or n = 7 or n = 8 or n = 9 or n = 10 or n = 11
proof
  assume n <= 11;
  then n <= 10+1;
  hence thesis by Th8,Th35;
end;

theorem Th37:
  n <= 12 implies n = 0 or n = 1 or n = 2 or n = 3 or n = 4 or n =
  5 or n = 6 or n = 7 or n = 8 or n = 9 or n = 10 or n = 11 or n = 12
proof
  assume n <= 12;
  then n <= 11+1;
  hence thesis by Th8,Th36;
end;

theorem
  n <= 13 implies n = 0 or n = 1 or n = 2 or n = 3 or n = 4 or n = 5 or
  n = 6 or n = 7 or n = 8 or n = 9 or n = 10 or n = 11 or n = 12 or n = 13
proof
  assume n <= 13;
  then n <= 12+1;
  hence thesis by Th8,Th37;
end;

:: compare BINARITH:sch 1, 2006.07.19, A.T.

scheme
  Indfrom1 { P[Nat] } : for k being non empty Nat holds P[k]
provided
A1: ( P[1]) and
A2: for k being non empty Nat st P[k] holds P[k + 1]
proof
  defpred P[Nat] means $1 is non empty implies P[$1];
A3: now
    let k be Nat;
    assume
A4: P[k];
    now
      assume k+1 is non empty;
      k is empty or k is non empty;
      hence P[k+1] by A1,A2,A4;
    end;
    hence P[k+1];
  end;
A5: P[0];
  for k being Nat holds P[k] from NatInd(A5,A3);
  hence thesis;
end;

:: from HENMODEL, 2007.03.15, A.T.

definition
  let A be set;
  func min* A -> Element of NAT means :Def1:
  it in A & for k st k in A holds it <= k
  if A is non empty Subset of NAT otherwise it = 0;
  existence
  proof
    A is non empty Subset of NAT implies ex i st i in A & for k be Nat st
    k in A holds i <= k
    proof
      defpred P[Nat] means $1 in A;
      set x =the  Element of A;
      assume
A1:   A is non empty Subset of NAT;
      then x is Element of NAT by TARSKI:def 3;
      then
A2:   ex k be Nat st P[k] by A1;
      ex k be Nat st P[k] & for i be Nat st P[i] holds k <= i from Min( A2
      );
      hence thesis;
    end;
    hence thesis;
  end;
  uniqueness
  proof
    let i,n be Element of NAT;
    A is non empty Subset of NAT & (i in A & for k st k in A holds i <= k)
    & (n in A & for k st k in A holds n <= k) implies i = n
    proof
      assume that
      A is non empty Subset of NAT and
A3:   i in A & ( for k st k in A holds i <= k)& n in A & for k st k in
      A holds n <= k;
      i <= n & n <= i by A3;
      hence thesis by XXREAL_0:1;
    end;
    hence thesis;
  end;
  consistency;
end;

:: from CARD_1, 2007.10.28,A.T.

reserve x,X,Y,Z for set;

theorem Th39:
  for n being natural number holds succ n = n + 1
proof
  let n be natural number;
A1: n+1 = {L where L is Element of NAT: L < n+1} by AXIOMS:30;
A2: n = {K where K is Element of NAT: K < n} by AXIOMS:30;
  thus succ n c= n+1
  proof
    let x such that
A3: x in succ n;
    per cases by A3,ORDINAL1:13;
    suppose
      x in n;
      then consider K being Element of NAT such that
A4:   x = K and
A5:   K < n by A2;
      K < n+1 by A5,Th13;
      hence thesis by A1,A4;
    end;
    suppose
A6:   x = n;
      reconsider n as Element of NAT by ORDINAL1:def 13;
      n < n+1 by Th13;
      hence thesis by A1,A6;
    end;
  end;
  let x;
  assume x in n+1;
  then consider K being Element of NAT such that
A7: x = K and
A8: K < n+1 by A1;
  K <= n by A8,Th13;
  then K = n or K < n by XXREAL_0:1;
  then x = n or x in n by A2,A7;
  hence thesis by ORDINAL1:13;
end;

theorem Th40:
  n <= m iff n c= m
proof
  defpred P[Nat] means for m holds $1 <= m iff $1 c= m;
A1: for n st P[n] holds P[n+1]
  proof
    let n such that
A2: P[n];
    let m;
    thus n+1 <= m implies (n+1) c= m
    proof
      assume n+1 <= m;
      then consider k being Nat such that
A3:   m = n+1+k by Th10;
      reconsider k as Element of NAT by ORDINAL1:def 13;
      n <= n+k by Th11;
      then n c= (n+k) by A2;
      then
A4:   succ n c= succ (n+k) by ORDINAL2:1;
      (n+k+1) = succ (n+k) by Th39;
      hence thesis by A3,A4,Th39;
    end;
    assume
A5: (n+1) c= m;
    (n+1) = succ n by Th39;
    then
A6: n in m by A5,ORDINAL1:33;
    then n c= m by ORDINAL1:def 2;
    then
A7: n <= m by A2;
    n <> m by A6;
    then n < m by A7,XXREAL_0:1;
    hence thesis by Th13;
  end;
A8: P[0];
  for n holds P[n] from NatInd(A8,A1);
  hence thesis;
end;

theorem Th41:
  card n c= card m iff n <= m
proof
  reconsider n,m as Element of NAT by ORDINAL1:def 13;
  card n = n & card m = m by CARD_1:def 5;
  hence thesis by Th40;
end;

theorem Th42:
  card n in card m iff n < m
proof
A1: n <= m & n <> m iff n < m by XXREAL_0:1;
  card n c< card m iff card n c= card m & card n <> card m by XBOOLE_0:def
  8;
  hence thesis by A1,Th41,ORDINAL1:21,def 2;
end;

reserve M,N for Cardinal;

theorem
  nextcard card n = card(n+1)
proof
  reconsider n as Element of NAT by ORDINAL1:def 13;
A1: for M st card card n in M holds card(n+1) c= M
  proof
A2: card n = n by CARD_1:def 5;
    let M;
    assume card card n in M;
    then
A3: succ n c= M by A2,ORDINAL1:33;
    (n+1) = succ n by Th39;
    hence thesis by A3,CARD_1:def 5;
  end;
  n < n+1 by Th13;
  then card card n in card(n+1) by Th42;
  hence thesis by A1,CARD_1:def 6;
end;

definition
  let n be natural number;
  redefine func succ n equals
  n+1;
  compatibility by Th39;
end;

theorem
  for X,Y being finite set holds X c= Y implies card X <= card Y
proof
  let X,Y be finite set;
  assume X c= Y;
  then card X c= card Y by CARD_1:27;
  hence thesis by Th40;
end;

reserve l for Element of NAT;

theorem
  k in n iff k < n
proof
  hereby
    assume k in n;
    then k in { l : l < n } by AXIOMS:30;
    then ex l st k = l & l < n;
    hence k < n;
  end;
  assume
A1: k < n;
  reconsider k as Element of NAT by ORDINAL1:def 13;
  k in { l : l < n } by A1;
  hence thesis by AXIOMS:30;
end;

theorem
  n in n+1
proof
  reconsider n as Element of NAT by ORDINAL1:def 13;
  n<n+1 by XREAL_1:31;
  then n in {l:l<n+1};
  hence thesis by AXIOMS:30;
end;

theorem
  k <= n implies k = k /\ n
proof
  assume k <= n;
  then Segm k c= Segm n by Th40;
  hence thesis by XBOOLE_1:28;
end;

:: from RECDEF_1, 2008.02.21, A.T.

scheme
  LambdaRecEx{A() -> set,G(set,set) -> set}: ex f being Function st dom f =
  NAT & f.0 = A() & for n being Nat holds f.(n+1) = G(n,f.n) proof
  deffunc D(set,set) = {};
  consider L being T-Sequence such that
A1: dom L = NAT and
A2: {} in NAT implies L.{} = A() and
A3: for A being Ordinal st succ A in NAT holds L.(succ A) = G(A,L.A) and
  for A being Ordinal st A in NAT & A <> {} & A is limit_ordinal holds L.A
  = D(A,L|A) from ORDINAL2:sch 5;
  take L;
  thus dom L = NAT by A1;
  thus L.0 = A() by A2;
  let n be Nat;
  succ n in NAT;
  hence thesis by A3;
end;

scheme
  LambdaRecExD{D() -> non empty set, A() -> Element of D(), G(set,set) ->
Element of D()}: ex f being Function of NAT,D() st f.0 = A() & for n being Nat
  holds f.(n+1) = G(n,f.n) proof
  consider f being Function such that
A1: dom f = NAT and
A2: f.0 = A() and
A3: for n being Nat holds f.(n+1) = G(n,f.n) from LambdaRecEx;
  for x being set st x in NAT holds f.x in D()
  proof
    let x be set;
    assume x in NAT;
    then reconsider n = x as Nat;
    per cases by Th6;
    suppose
      n = 0;
      hence thesis by A2;
    end;
    suppose
      ex k st n = k + 1;
      then consider k such that
A4:   n = k+1;
      f.n = G(k,f.k) by A3,A4;
      hence thesis;
    end;
  end;
  then reconsider f as Function of NAT,D() by A1,FUNCT_2:5;
  take f;
  thus thesis by A2,A3;
end;

scheme
  RecUn{A() -> set, F, G() -> Function, P[set,set,set]}: F() = G()
provided
A1: dom F() = NAT and
A2: F().0 = A() and
A3: for n holds P[n,F().n,F().(n+1)] and
A4: dom G() = NAT and
A5: G().0 = A() and
A6: for n holds P[n,G().n,G().(n+1)] and
A7: for n for x,y1,y2 being set st P[n,x,y1] & P[n,x,y2] holds y1 = y2
proof
  defpred P[Nat] means F().$1 = G().$1;
A8: for n st P[n] holds P[n+1]
  proof
    let n;
    assume F().n = G().n;
    then
A9: P[n,F().n,G().(n+1)] by A6;
    P[n,F().n,F().(n+1)] by A3;
    hence thesis by A7,A9;
  end;
A10: P[0] by A2,A5;
  for n holds P[n] from NatInd(A10,A8);
  then for x st x in NAT holds F().x = G().x;
  hence thesis by A1,A4,FUNCT_1:9;
end;

scheme
  RecUnD{D() -> non empty set,A() -> Element of D(), P[set,set,set], F, G() ->
  Function of NAT,D()} : F() = G()
provided
A1: F().0 = A() and
A2: for n holds P[n,F().n,F().(n+1)] and
A3: G().0 = A() and
A4: for n holds P[n,G().n,G().(n+1)] and
A5: for n being Nat,x,y1,y2 being Element of D() st P[n,x,y1] & P[n,x,y2
] holds y1=y2
proof
  defpred Q[Nat] means F().$1 <> G().$1;
A6: dom F() = NAT & dom G() = NAT by FUNCT_2:def 1;
  assume F() <> G();
  then ex x st x in NAT & F().x <> G().x by A6,FUNCT_1:9;
  then
A7: ex k be Nat st Q[k];
  consider m be Nat such that
A8: Q[m] & for n be Nat st Q[n] holds m <= n from Min(A7);
  now
    assume m<>0;
    then consider k being Nat such that
A9: m=k+1 by Th6;
    reconsider k as Element of NAT by ORDINAL1:def 13;
    k < m by A9,Th13;
    then
A10: F().k = G().k by A8;
    ( P[k,F().k,F().(k+1)])& P[k,G().k,G().(k+1)] by A2,A4;
    hence contradiction by A5,A8,A9,A10;
  end;
  hence contradiction by A1,A3,A8;
end;

scheme
  LambdaRecUn{A() -> set, RecFun(set,set) -> set, F, G() -> Function}: F() = G
  ()
provided
A1: dom F() = NAT and
A2: F().0 = A() and
A3: for n holds F().(n+1) = RecFun(n,F().n) and
A4: dom G() = NAT and
A5: G().0 = A() and
A6: for n holds G().(n+1) = RecFun(n,G().n)
proof
  defpred P[Nat,set,set] means $3=RecFun($1,$2);
A7: for n holds P[n,G().n,G().(n+1)] by A6;
A8: for n being Nat,x,y1,y2 being set st P[n,x,y1] & P[n,x,y2] holds y1=y2;
A9: for n holds P[n,F().n,F().(n+1)] by A3;
  thus F() = G() from RecUn(A1,A2,A9,A4,A5,A7,A8);
end;

scheme
  LambdaRecUnD{D() -> non empty set,A() -> Element of D(), RecFun(set,set) ->
  Element of D(), F, G() -> Function of NAT,D()}: F() = G()
provided
A1: F().0 = A() and
A2: for n holds F().(n+1) = RecFun(n,F().n) and
A3: G().0 = A() and
A4: for n holds G().(n+1) = RecFun(n,G().n)
proof
  defpred P[Nat,set,set] means $3=RecFun($1,$2);
A5: for n holds P[n,G().n,G().(n+1)] by A4;
A6: for n being Nat,x,y1,y2 being Element of D() st P[n,x,y1] & P[n,x,y2]
  holds y1=y2;
A7: for n holds P[n,F().n,F().(n+1)] by A2;
  thus F() = G() from RecUnD(A1,A7,A3,A5,A6);
end;

:: missing, 2008.02.22, A.T.

registration
  let x,y be Nat;
  cluster min(x,y) -> natural;
  coherence by XXREAL_0:15;
  cluster max(x,y) -> natural;
  coherence by XXREAL_0:16;
end;

:: from SCMFSA_9, 2008.02.25, A.T.

scheme
  MinIndex { F(Nat)->Nat} : ex k st F(k)=0 & for n st F(n)=0 holds k <= n
provided
A1: for k holds (F(k+1) < F(k) or F(k) = 0)
proof
  defpred X[Nat] means F($1)=0;
  defpred P[Nat] means ex n being Nat st $1 = F(n);
A2: for k be Nat st k <> 0 & P[k] ex m be Nat st m < k & P[m]
  proof
    let k be Nat;
    assume that
A3: k <> 0 and
A4: P[k];
    consider n being Nat such that
A5: k = F(n) by A4;
    take F(n + 1);
    thus thesis by A1,A3,A5;
  end;
  F(0) is Nat;
  then
A6: ex k be Nat st P[k];
  P[0] from Regr(A6,A2);
  then
A7: ex k be Nat st X[k];
  consider k be Nat such that
A8: ( X[k])& for n be Nat st X[n] holds k <= n from Min(A7);
  take k;
  thus thesis by A8;
end;

:: Added by AK, 2007.10.09

definition
  let D be set, f be Function of NAT,D;
  let n be Nat;
  redefine func f.n -> Element of D;
  coherence
  proof
    reconsider n as Element of NAT by ORDINAL1:def 13;
    f.n is Element of D;
    hence thesis;
  end;
end;

:: from MODELC_2, 2008.08.18, A.T.

definition
  let X be set;
  mode sequence of X is Function of NAT,X;
end;

:: from SEQM_3, BHSP_3, COMSEQ_3, KURATO_2, LOPBAN_3, CLVECT_2, CLOPBAN3
::      (generalized), 2008.08.23, A.T.

definition
  let X be non empty set, s be sequence of X, k be Nat;
  func s ^\ k -> sequence of X means
  :Def3:
  for n being Nat holds it.n=s.(n+k);
  existence
  proof
    deffunc U(Element of NAT) = s.($1+k);
    consider f being sequence of X such that
A1: for n being Element of NAT holds f.n=U(n) from FUNCT_2:sch 4;
    take f;
    let n be Nat;
    n in NAT by ORDINAL1:def 13;
    hence thesis by A1;
  end;
  uniqueness
  proof
    let s1,s2 be sequence of X;
    assume that
A2: for n holds s1.n=s.(n+k) and
A3: for n holds s2.n=s.(n+k);
    now
      let n be Element of NAT;
      s1.n=s.(n+k) by A2;
      hence s1.n=s2.n by A3;
    end;
    hence s1=s2 by FUNCT_2:113;
  end;
end;

reserve X for non empty set,
  s for sequence of X,
  k,m for Nat;

theorem
  s^\0 =s
proof
  now
    let n be Element of NAT;
    thus (s ^\0).n=s.(n+0) by Def3
      .=s.n;
  end;
  hence thesis by FUNCT_2:113;
end;

theorem Th49:
  s ^\k^\m = s^\(k+m)
proof
  now
    let n be Element of NAT;
    thus (s ^\k^\m).n=(s ^\k).(n+m) by Def3
      .=s.(n+m+k) by Def3
      .=s.(n+(k+m))
      .=(s ^\(k+m)).n by Def3;
  end;
  hence thesis by FUNCT_2:113;
end;

theorem
  s^\k^\m = s^\m^\k
proof
  thus s^\k^\m = s^\(k+m) by Th49
    .= s^\m^\k by Th49;
end;

theorem
  for N being sequence of NAT holds (s * N) ^\k = s * (N ^\k)
proof
  let N be sequence of NAT;
  now
    let n be Element of NAT;
    thus ((s * N) ^\k).n = (s * N).(n + k) by Def3
      .= s.(N.(n + k)) by FUNCT_2:21
      .= s.((N ^\k).n) by Def3
      .= (s * (N ^\k)).n by FUNCT_2:21;
  end;
  hence thesis by FUNCT_2:113;
end;

theorem
  s.n in rng s
proof
  n in NAT by ORDINAL1:def 13;
  then n in dom s by FUNCT_2:def 1;
  hence thesis by FUNCT_1:12;
end;

theorem
  (for n holds s.n in Y) implies rng s c= Y
proof
  assume
A1: for n holds s.n in Y;
  let y be set;
  assume y in rng s;
  then consider x such that
A2: x in dom s and
A3: y = s.x by FUNCT_1:def 5;
  x in NAT by A2,FUNCT_2:def 1;
  hence thesis by A1,A3;
end;

:: from UPROOTS, 2009.07.21, A.T.

theorem
  for n being natural number holds n is non zero implies n = 1 or n > 1
proof
  let n be natural number;
  assume n is non zero;
  then 0+1 <= n by Th13;
  hence n = 1 or n > 1 by XXREAL_0:1;
end;

theorem
 succ n = {l : l <= n}
  proof
    defpred P[Nat] means $1 <= n;
    defpred Q[Nat] means $1 < n+1;
    deffunc F(Nat) = $1;
A1:   for l holds Q[l] iff P[l] by Th13;
   thus succ n = n+1
     .= {F(l) : Q[l]} by AXIOMS:30
     .= {F(l) : P[l]} from FRAENKEL:sch 3(A1);
  end;

scheme MinPred { F(Element of NAT) -> Element of NAT, P[set]} :
  ex k be Element of NAT st P[k] &
    for n be Element of NAT st P[n] holds k <= n
provided
A1: for k be Element of NAT holds F(k+1) < F(k) or P[k]
proof
  now
    consider f being Function of NAT, NAT such that
A2: for k be Element of NAT holds f.k = F(k) from FUNCT_2:sch 4;
A3:  f.0 in rng f by FUNCT_2:6;
    rng f c= NAT
    proof
      let x be set; assume x in rng f; then
      consider y being set such that
A4:    y in dom f & x = f.y by FUNCT_1:def 5;
      reconsider y1 = y as Element of NAT by A4,FUNCT_2:def 1;
      x = F(y1) by A4,A2;
      hence thesis;
    end; then
    reconsider rf = rng f as non empty Subset of NAT by A3;
    set m = min* rf;
    m in rf by Def1;
    then consider x being set such that
A5: x in dom f and
A6: m = f.x by FUNCT_1:def 5;
    reconsider x as Element of NAT by A5,FUNCT_2:def 1;
    f.x = F(x) & f.(x+1) = F(x+1) by A2; then
A7: f.(x+1) < f.x or P[x] by A1;
    assume
A8: for k holds not P[k];
    f.(x+1) in rf by FUNCT_2:6;
    hence contradiction by Def1,A8,A6,A7;
  end; then
A9: ex k be Nat st P[k];
  consider k be Nat such that
A10: P[k] and
A11: for n be Nat st P[n] holds k <= n from Min(A9);
  k in NAT & for n be Element of NAT st P[n] holds k <= n
    by A11,ORDINAL1:def 13;
  hence thesis by A10;
end;

registration let k be Ordinal, x be set;
  cluster k --> x -> T-Sequence-like;
 coherence
 proof
   dom(k --> x) = k by FUNCOP_1:19;
   hence thesis by ORDINAL1:def 7;
 end;
end;
