:: On the Characterization of Collineations of the Segre Product of Strongly
:: Connected Partial Linear Spaces
::  by Adam Naumowicz
::
:: Received October 18, 2004
:: Copyright (c) 2004 Association of Mizar Users

environ

 vocabularies PENCIL_3, FINSEQ_1, RELAT_1, ARYTM_1, BOOLE, FUNCT_1, PRALG_1,
      PBOOLE, MSUALG_2, RLVECT_2, FUNCT_4, PENCIL_1, CARD_3, INTEGRA1,
      SUBSET_1, PRE_TOPC, REALSET1, CARD_1, SGRAPH1, CAT_1, AMI_1, RELAT_2,
      PENCIL_2, FINSET_1, FUNCT_2, PARSP_1, WAYBEL_3, VECTSP_1, FDIFF_1,
      GRAPH_2, NAT_1, COMPLEX1;
 notations TARSKI, XBOOLE_0, ZFMISC_1, XCMPLX_0, XXREAL_0, NUMBERS, NAT_1,
      NAT_D, RELAT_1, SUBSET_1, REALSET1, FUNCT_1, FUNCT_2, FUNCOP_1, RELSET_1,
      REALSET2, CARD_1, FINSET_1, FINSEQ_1, CARD_3, POLYNOM1, DOMAIN_1,
      STRUCT_0, PRE_TOPC, PBOOLE, PZFMISC1, T_0TOPSP, PRALG_1, WAYBEL_3,
      PENCIL_1, PENCIL_2, TOPS_2, GRAPH_2;
 constructors DOMAIN_1, XXREAL_0, PZFMISC1, TOPS_2, T_0TOPSP, GRAPH_2,
      POLYNOM1, PENCIL_2, NAT_1, REALSET2, NAT_D;
 registrations STRUCT_0, RELSET_1, SUBSET_1, PENCIL_1, XREAL_0, ARYTM_3,
      TREES_9, FUNCT_2, XBOOLE_0, REALSET1, FINSET_1, TEX_1, PBOOLE, XXREAL_0,
      NAT_1, CARD_1;
 requirements REAL, BOOLE, SUBSET, NUMERALS, ARITHM;
 definitions TARSKI, XBOOLE_0, PBOOLE, FUNCT_1, FUNCT_2, PENCIL_2, T_0TOPSP,
      STRUCT_0, RELAT_1;
 theorems XBOOLE_0, ZFMISC_1, FUNCT_1, FINSEQ_1, FINSEQ_3, NAT_1, CARD_3,
      PBOOLE, PRE_TOPC, FUNCT_7, PRALG_1, PZFMISC1, TARSKI, FUNCT_2, REALSET1,
      TOPS_2, PENCIL_1, PENCIL_2, CARD_1, XBOOLE_1, PUA2MSS1, FINSET_1, CARD_2,
      GRAPH_2, FUNCOP_1, RELAT_1, RELSET_1, XREAL_1, XXREAL_0, ORDINAL1,
      STRUCT_0;
 schemes TRANSGEO, NAT_1, FINSEQ_2, PENCIL_2, FINSEQ_1, PBOOLE, FUNCT_1;

begin :: Preliminaries

theorem Th1:
  for S being non empty non void TopStruct
  for f being Collineation of S
  for p,q being Point of S st p,q are_collinear holds f.p,f.q are_collinear
  proof
    let S be non empty non void TopStruct;
    let f be Collineation of S;
    A1: dom f = the carrier of S by FUNCT_2:def 1;
    let p,q be Point of S;
    assume A2: p,q are_collinear;
    per cases;
    suppose p=q;
      hence f.p,f.q are_collinear by PENCIL_1:def 1;
    end;
    suppose p<>q; then
      consider B being Block of S such that
      A3: {p,q} c= B by A2,PENCIL_1:def 1;
      p in B & q in B by A3,ZFMISC_1:38; then
      f.p in f.:B & f.q in f.:B by A1,FUNCT_1:def 12; then
      {f.p,f.q} c= f.:B by ZFMISC_1:38;
      hence f.p,f.q are_collinear by PENCIL_1:def 1;
    end;
  end;

theorem Th2:
  for I being non empty set
  for i be Element of I
  for A being non-Trivial-yielding (1-sorted-yielding ManySortedSet of I)
  holds A.i is non trivial
  proof
    let I be non empty set;
    let i be Element of I;
    let A be non-Trivial-yielding (1-sorted-yielding ManySortedSet of I);
    dom A = I by PBOOLE:def 3; then
    A.i in rng A by FUNCT_1:12;
    hence A.i is non trivial by PENCIL_1:def 17;
  end;

theorem Th3:
  for S being non void identifying_close_blocks TopStruct
  st S is strongly_connected holds S is without_isolated_points
  proof
    let S be non void identifying_close_blocks TopStruct;
    assume A1: S is strongly_connected;
    now
      let x being Point of S;
      consider X being set such that
      A2: X in the topology of S by XBOOLE_0:def 1;
      reconsider X as Block of S by A2;
      reconsider X1=X as Subset of S by A2;
      X1 is closed_under_lines strong by PENCIL_1:20,21; then
    consider f being FinSequence of bool the carrier of S such that
    A3: X = f.1 & x in f.(len f) &
    (for W being Subset of S st W in rng f holds
    W is closed_under_lines strong) &
    for i being Nat st 1 <= i & i < len f holds
    2 c= Card((f.i) /\ (f.(i+1))) by A1,PENCIL_1:def 11;
    x in f.(len f) by A3; then
    A4: len f in dom f by FUNCT_1:def 4; then
    A5: f.(len f) in rng f by FUNCT_1:12; then
    reconsider W=f.(len f) as Subset of S;
    A6: W is closed_under_lines strong &
    for i being Nat st 1 <= i & i < len f holds
    2 c= Card((f.i) /\ (f.(i+1))) by A3,A5;
    reconsider l=len f - 1 as Nat by A4,FINSEQ_3:28;
    per cases;
    suppose x in X;
      hence ex l being Block of S st x in l;
    end;
    suppose not x in X; then
      A7: 1 <> len f by A3;
      1 <= len f by A4,FINSEQ_3:27; then
      1 < len f -1 + 1 by A7,XXREAL_0:1; then
      1 <= l & l < len f by NAT_1:13; then
      2 c= Card((f.l) /\ (f.(l+1))) by A6; then
      consider a being set such that
      A8: a in f.l /\ f.(len f) & a<>x by PENCIL_1:3;
      A9: a in W & a<>x by A8,XBOOLE_0:def 3;
      reconsider a as Point of S by A9;
      x,a are_collinear by A3,A6,A9,PENCIL_1:def 3;
      then consider l being Block of S such that
      A10: {x,a} c= l by A9,PENCIL_1:def 1;
      x in l & a in l by A10,ZFMISC_1:38;
      hence ex l being Block of S st x in l;
    end;
    end;
    hence S is without_isolated_points by PENCIL_1:def 9;
  end;

theorem Th4:
  for S being non empty non void identifying_close_blocks TopStruct holds
  S is strongly_connected implies S is connected
  proof
    let S being non empty non void identifying_close_blocks TopStruct;
    assume S is strongly_connected; then
    S is strongly_connected & S is without_isolated_points by Th3;
    hence S is connected by PENCIL_1:28;
  end;

theorem
  for S being non void non degenerated TopStruct
  for L being Block of S
  ex x being Point of S st not x in L
  proof
    let S be non void non degenerated TopStruct;
    let L be Block of S;
    L in the topology of S; then
    L c= the carrier of S; then
    A1: L c= [#]S;
    now assume [#]S c= L; then
      [#]S=L by A1,XBOOLE_0:def 10; then
      the carrier of S is Block of S;
      hence contradiction by PENCIL_1:def 5;
    end; then
    consider x being set such that
    A2: x in [#]S & not x in L by TARSKI:def 3;
    reconsider x as Point of S by A2;
    take x;
    thus thesis by A2;
  end;

theorem Th6:
  for I being non empty set
  for A being non-Empty (TopStruct-yielding ManySortedSet of I)
  for p being Point of Segre_Product A holds
  p is Element of Carrier A
  proof
    let I be non empty set;
    let A be non-Empty (TopStruct-yielding ManySortedSet of I);
    let p be Point of Segre_Product A;
    Segre_Product A = TopStruct(#product Carrier A, Segre_Blocks A#)
    by PENCIL_1:def 23;
    then the carrier of Segre_Product A = product Carrier A; then
    consider f being Function such that
    A1: f=p & dom f = dom Carrier A & for x being set st x in dom Carrier A
    holds f.x in (Carrier A).x by CARD_3:def 5;
    A2: dom f = I by A1,PBOOLE:def 3; then
    reconsider f as ManySortedSet of I by PBOOLE:def 3;
    for i being set st i in I holds f.i is Element of (Carrier A).i by A1,A2;
    hence p is Element of Carrier A by A1,PBOOLE:def 17;
  end;

theorem Th7:
  for I being non empty set
  for A be 1-sorted-yielding ManySortedSet of I
  for x being Element of I holds (Carrier A).x = [#](A.x)
  proof
    let I be non empty set;
    let A be 1-sorted-yielding ManySortedSet of I;
    let x be Element of I;
    consider R being 1-sorted such that
    A1: R=A.x & (Carrier A).x = the carrier of R by PRALG_1:def 13;
    thus (Carrier A).x = [#](A.x) by A1;
  end;

theorem Th8:
  for I being non empty set
  for i being Element of I
  for A be non-Trivial-yielding (TopStruct-yielding ManySortedSet of I)
  ex L being Segre-like non trivial-yielding ManySortedSubset of Carrier A st
  indx(L)=i & product L is Segre-Coset of A
  proof
    let I being non empty set;
    let x being Element of I ;
    let A be non-Trivial-yielding (TopStruct-yielding ManySortedSet of I);
    dom A = I by PBOOLE:def 3; then
    A.x in rng A by FUNCT_1:12; then
    A.x is non trivial by PENCIL_1:def 18; then
    the carrier of A.x is non trivial by STRUCT_0:def 9; then
    reconsider C=[#](A.x) as non trivial set;
    consider p0 being Point of Segre_Product A;
    reconsider p0 as Element of Carrier A by Th6;
    reconsider p={p0} as ManySortedSubset of Carrier A by PENCIL_1:11;
    reconsider b=p+*(x,C) as Segre-like non trivial-yielding ManySortedSubset
    of Carrier A by PENCIL_1:9,10,PENCIL_2:7;
    take b;
    dom p=I by PBOOLE:def 3; then
    A1: b.x = C by FUNCT_7:33;
    hence indx(b)=x by PENCIL_1:def 21; then
    A2: b.indx(b)=[#](A.indx(b)) by A1;
    product b c= the carrier of Segre_Product A
    proof
      let a be set;
      assume a in product b; then consider f being Function such that
      A3: a=f & dom f=dom b &
      for x being set st x in dom b holds f.x in b.x by CARD_3:def 5;
      A4: dom Carrier A = I by PBOOLE:def 3; then
      A5: dom f = dom Carrier A by A3,PBOOLE:def 3;
      now
        let i be set; assume A6: i in dom Carrier A; then
        A7: f.i in b.i by A3,A5;
        reconsider i1=i as Element of I by A4,A6;
        per cases;
        suppose i1=x;
          hence f.i in (Carrier A).i by A1,A7,Th7;
        end;
        suppose i1<>x; then
          f.i1 in p.i1 by A7,FUNCT_7:34; then
          f.i1 in {p0.i1} by PZFMISC1:def 1; then
          f.i1 = p0.i1 by TARSKI:def 1; then
          A8: f.i1 is Element of (Carrier A).i1 by PBOOLE:def 17;
          I = dom A by PBOOLE:def 3; then
          A.i1 in rng A by FUNCT_1:12; then
          A.i1 is non trivial by PENCIL_1:def 18; then
          the carrier of A.i1 is non trivial by STRUCT_0:def 9; then
          reconsider AA=the carrier of A.i1 as non trivial set;
          AA is non empty; then
          [#](A.i1) is non empty; then
          (Carrier A).i1 is non empty by Th7;
          hence f.i in (Carrier A).i by A8;
        end;
      end; then
      A9: a in product Carrier A by A3,A5,CARD_3:def 5;
      Segre_Product A = TopStruct(#product Carrier A, Segre_Blocks A#)
      by PENCIL_1:def 23;
      hence a in the carrier of Segre_Product A by A9;
    end;
    hence product b is Segre-Coset of A by A2,PENCIL_2:def 2;
  end;

theorem Th9:
  for I being non empty set
  for i being Element of I
  for A be non-Trivial-yielding (TopStruct-yielding ManySortedSet of I)
  for p being Point of Segre_Product A
  ex L being Segre-like non trivial-yielding ManySortedSubset of Carrier A st
  indx(L)=i & product L is Segre-Coset of A & p in product L
  proof
    let I being non empty set;
    let x being Element of I ;
    let A be non-Trivial-yielding (TopStruct-yielding ManySortedSet of I);
    dom A = I by PBOOLE:def 3; then
    A.x in rng A by FUNCT_1:12; then
    A.x is non trivial by PENCIL_1:def 18; then
    the carrier of A.x is non trivial by STRUCT_0:def 9; then
    reconsider C=[#](A.x) as non trivial set;
    let p0 be Point of Segre_Product A;
    reconsider p0'=p0 as Element of Carrier A by Th6;
    reconsider p={p0'} as ManySortedSubset of Carrier A by PENCIL_1:11;
    reconsider b=p+*(x,C) as Segre-like non trivial-yielding ManySortedSubset
    of Carrier A by PENCIL_1:9,10,PENCIL_2:7;
    take b;
    dom p=I by PBOOLE:def 3; then
    A1: b.x = C by FUNCT_7:33;
    hence indx(b)=x by PENCIL_1:def 21; then
    A2: b.indx(b)=[#](A.indx(b)) by A1;
    product b c= the carrier of Segre_Product A
    proof
      let a be set;
      assume a in product b; then consider f being Function such that
      A3: a=f & dom f=dom b &
      for x being set st x in dom b holds f.x in b.x by CARD_3:def 5;
      A4: dom Carrier A = I by PBOOLE:def 3; then
      A5: dom f = dom Carrier A by A3,PBOOLE:def 3;
      now
        let i be set; assume A6: i in dom Carrier A; then
        A7: f.i in b.i by A3,A5;
        reconsider i1=i as Element of I by A4,A6;
        per cases;
        suppose i1=x;
          hence f.i in (Carrier A).i by A1,A7,Th7;
        end;
        suppose i1<>x; then
          f.i1 in p.i1 by A7,FUNCT_7:34; then
          f.i1 in {p0'.i1} by PZFMISC1:def 1; then
          f.i1 = p0'.i1 by TARSKI:def 1; then
          A8: f.i1 is Element of (Carrier A).i1 by PBOOLE:def 17;
          I = dom A by PBOOLE:def 3; then
          A.i1 in rng A by FUNCT_1:12; then
          A.i1 is non trivial by PENCIL_1:def 18; then
          the carrier of A.i1 is non trivial by STRUCT_0:def 9; then
          reconsider AA=the carrier of A.i1 as non trivial set;
          AA is non empty; then
          [#](A.i1) is non empty; then
          (Carrier A).i1 is non empty by Th7;
          hence f.i in (Carrier A).i by A8;
        end;
      end; then
      A9: a in product Carrier A by A3,A5,CARD_3:def 5;
      Segre_Product A = TopStruct(#product Carrier A, Segre_Blocks A#)
      by PENCIL_1:def 23;
      hence a in the carrier of Segre_Product A by A9;
    end;
    hence product b is Segre-Coset of A by A2,PENCIL_2:def 2;
    A10: dom p0' = I & dom (p+*(x,C)) = I & dom p = I by PBOOLE:def 3;
    now
      let z be set;
      assume A11: z in I; then
      reconsider z1=z as Element of I;
      dom A = I by PBOOLE:def 3; then
      A.z in rng A by A11,FUNCT_1:def 5; then
      A.z is non trivial 1-sorted by PENCIL_1:def 18; then
      reconsider tc = the carrier of A.z1 as non trivial set by STRUCT_0:def 9;
      A12: tc is non empty;
      per cases;
      suppose A13: z=x; then
        A14: p+*(x,C).z = C by A10,FUNCT_7:33;
        p0'.z1 is Element of (Carrier A).z1 by PBOOLE:def 17; then
        p0'.z1 is Element of [#](A.z1) by Th7; then
        p0'.z1 is Element of A.z1; then
        p0'.z1 in the carrier of A.z1 by A12; then
        p0'.z1 in [#](A.z1);
        hence p0'.z in p+*(x,C).z by A13,A14;
      end;
      suppose z<>x; then
        p+*(x,C).z = p.z by FUNCT_7:34; then
        p+*(x,C).z = {p0'.z} by A11,PZFMISC1:def 1;
        hence p0'.z in p+*(x,C).z by TARSKI:def 1;
      end;
    end;
    hence p0 in product b by A10,CARD_3:18;
  end;

theorem Th10:
  for I being non empty set
  for A being non-Trivial-yielding (TopStruct-yielding ManySortedSet of I)
  for b being Segre-like non trivial-yielding ManySortedSubset of Carrier A st
  product b is Segre-Coset of A holds b.indx(b) = [#](A.indx(b))
  proof
    let I be non empty set;
    let A be non-Trivial-yielding (TopStruct-yielding ManySortedSet of I);
    let b be Segre-like non trivial-yielding ManySortedSubset of Carrier A
    such that
    A1: product b is Segre-Coset of A;
    consider L being Segre-like non trivial-yielding ManySortedSubset of
    Carrier A such that
    A2: product b = product L & L.indx(L) = [#](A.indx(L)) by A1,PENCIL_2:def 2
;
    b=L by A2,PUA2MSS1:2;
    hence b.indx(b) = [#](A.indx(b)) by A2;
  end;

theorem Th11:
  for I being non empty set
  for A be non-Trivial-yielding (TopStruct-yielding ManySortedSet of I)
  for L1,L2 being Segre-like non trivial-yielding ManySortedSubset of Carrier A
  st product L1 is Segre-Coset of A & product L2 is Segre-Coset of A &
  indx(L1) = indx(L2) & product L1 meets product L2 holds L1=L2
  proof
    let I be non empty set;
    let A be non-Trivial-yielding (TopStruct-yielding ManySortedSet of I);
    let L1,L2 being Segre-like non trivial-yielding ManySortedSubset of
    Carrier A;
    assume A1: product L1 is Segre-Coset of A & product L2 is Segre-Coset of A
    & indx(L1) = indx(L2) & product L1 meets product L2;
    reconsider B1=product L1, B2=product L2 as Segre-Coset of A by A1;
    consider b1 being Segre-like non trivial-yielding ManySortedSubset of
    Carrier A such that
    A2: B1=product b1 & b1.indx(b1)=[#](A.indx(b1)) by PENCIL_2:def 2;
    consider b2 being Segre-like non trivial-yielding ManySortedSubset of
    Carrier A such that
    A3: B2=product b2 & b2.indx(b2)=[#](A.indx(b2)) by PENCIL_2:def 2;
    A4: b1=L1 & b2=L2 by A2,A3,PUA2MSS1:2;
    B1 /\ B2 <> {} by A1,XBOOLE_0:def 7; then
    consider x being set such that A5: x in B1 /\ B2 by XBOOLE_0:def 1;
    A6: x in B1 & x in B2 by A5,XBOOLE_0:def 3; then
    reconsider x as Element of Carrier A by Th6;
    A7: dom L1 = I by PBOOLE:def 3 .= dom L2 by PBOOLE:def 3;
    now
      let a be set;
      assume A8: a in dom L1; then
      reconsider i=a as Element of I by PBOOLE:def 3;
      per cases;
      suppose A9: i=indx(L1); then
        L1.i = [#](A.i) by A2,A4;
        hence L1.a = L2.a by A1,A3,A4,A9;
      end;
      suppose A10: i<>indx(L1);
        L1.i is trivial non empty by A10,PENCIL_1:def 21; then
        consider o1 being set such that
        A11: L1.i = {o1} by REALSET1:def 4;
        L2.i is trivial non empty by A1,A10,PENCIL_1:def 21; then
        consider o2 being set such that
        A12: L2.i = {o2} by REALSET1:def 4;
        A13: x.i in L1.i by A6,A8,CARD_3:18;
        A14: x.i in L2.i by A6,A7,A8,CARD_3:18;
        o1 = x.i by A11,A13,TARSKI:def 1 .= o2 by A12,A14,TARSKI:def 1;
        hence L1.a = L2.a by A11,A12;
      end;
    end;
    hence L1=L2 by A7,FUNCT_1:9;
  end;

theorem Th12:
  for I being non empty set
  for A be PLS-yielding ManySortedSet of I
  for L being Segre-like non trivial-yielding ManySortedSubset of Carrier A
  for B being Block of A.indx(L) holds
  product(L+*(indx(L),B)) is Block of Segre_Product A
  proof
    let I being non empty set;
    let A be PLS-yielding ManySortedSet of I;
    let L being Segre-like non trivial-yielding ManySortedSubset of Carrier A;
    let B being Block of A.indx(L);
    B in the topology of A.indx(L); then
    reconsider B1=B as Subset of A.indx(L);
    A1: now let i be Element of I;
    assume A2: i <> indx(L); then
    L+*(indx(L),B1).i = L.i by FUNCT_7:34;
    hence L+*(indx(L),B1).i is non empty trivial by A2,PENCIL_1:12;
    end;
    2 c= Card B by PENCIL_1:def 6; then
    B1 is non trivial by PENCIL_1:4; then
    reconsider S=L+*(indx(L),B1) as Segre-like non trivial-yielding
    ManySortedSubset of Carrier A by A1,PENCIL_1:9,def 20,PENCIL_2:7;
    A3: now assume indx(S)<>indx(L); then
      S.indx(S) is non empty trivial by A1;
      hence contradiction by PENCIL_1:def 21;
    end;
    dom L = I by PBOOLE:def 3;
    then S.indx(S) = B1 by A3,FUNCT_7:33; then
    S.indx(S) is Block of A.indx(S) by A3;
    hence product(L+*(indx(L),B)) is Block of Segre_Product A by PENCIL_1:24;
  end;

theorem Th13:
  for I being non empty set
  for A be PLS-yielding ManySortedSet of I
  for i being Element of I
  for p being Point of A.i
  for L being Segre-like non trivial-yielding ManySortedSubset of Carrier A
  st i<>indx(L) holds
  L+*(i,{p}) is Segre-like non trivial-yielding ManySortedSubset of Carrier A
  proof
    let I be non empty set;
    let A be PLS-yielding ManySortedSet of I;
    let i be Element of I;
    let p be Point of A.i;
    let L be Segre-like non trivial-yielding ManySortedSubset of Carrier A;
    assume A1: i<>indx(L);
    L+*(i,{p}) c= Carrier A
    proof
      let a be set;
      assume A2: a in I; then
      reconsider a1=a as Element of I;
      A3: a1 in dom L by A2,PBOOLE:def 3;
      per cases;
      suppose A4: a=i; then
        L+*(i,{p}).a1 = {p} by A3,FUNCT_7:33; then
        L+*(i,{p}).a1 c= the carrier of A.a1 by A4; then
        L+*(i,{p}).a1 c= [#](A.a1);
        hence L+*(i,{p}).a c= (Carrier A).a by Th7;
      end;
      suppose a<>i; then
        A5: L+*(i,{p}).a1 = L.a1 by FUNCT_7:34;
        L c= Carrier A by PBOOLE:def 23;
        hence L+*(i,{p}).a c= (Carrier A).a by A5,PBOOLE:def 5;
      end;
    end; then
    A6: L+*(i,{p}) is ManySortedSubset of Carrier A by PBOOLE:def 23;
    now
      let j be Element of I;
      A7: dom L=I by PBOOLE:def 3;
      assume A8: j<>indx(L);
      per cases;
      suppose j=i; then
        L+*(i,{p}).j = {p} by A7,FUNCT_7:33;
        hence L+*(i,{p}).j is non empty trivial;
      end;
      suppose j<>i; then
        L+*(i,{p}).j = L.j by FUNCT_7:34;
        hence L+*(i,{p}).j is non empty trivial by A8,PENCIL_1:12;
      end;
    end; then
    A9: L+*(i,{p}) is Segre-like by PENCIL_1:def 20;
    dom (L+*(i,{p})) = I by PBOOLE:def 3; then
    A10: L+*(i,{p}).indx(L) in rng (L+*(i,{p})) by FUNCT_1:12;
    L+*(i,{p}).indx(L) = L.indx(L) by A1,FUNCT_7:34; then
    L+*(i,{p}).indx(L) is non trivial by PENCIL_1:def 21; then
    L+*(i,{p}) is non trivial-yielding by A10,PENCIL_1:def 16;
    hence L+*(i,{p}) is Segre-like non trivial-yielding ManySortedSubset
    of Carrier A by A6,A9;
end;

theorem Th14:
  for I being non empty set
  for A being PLS-yielding ManySortedSet of I
  for i being Element of I
  for S being Subset of A.i
  for L being Segre-like non trivial-yielding ManySortedSubset of Carrier A
  holds product (L+*(i,S)) is Subset of Segre_Product A
  proof
    let I be non empty set;
    let A be PLS-yielding ManySortedSet of I;
    let i be Element of I;
    let S be Subset of A.i;
    let L be Segre-like non trivial-yielding ManySortedSubset of Carrier A;
    A1: Segre_Product A = TopStruct(#product Carrier A, Segre_Blocks A#)
    by PENCIL_1:def 23;
    A2: dom (L+*(i,S)) = I by PBOOLE:def 3 .= dom Carrier A by PBOOLE:def 3;
    now
      let a be set;
      assume a in dom (L+*(i,S)); then
      A3: a in I by PBOOLE:def 3; then
      A4: a in dom L by PBOOLE:def 3;
      per cases;
      suppose A5: a=i; then
        (L+*(i,S)).a = S by A4,FUNCT_7:33; then
        (L+*(i,S)).a c= the carrier of A.i; then
        (L+*(i,S)).a c= [#](A.i);
        hence (L+*(i,S)).a c= (Carrier A).a by A5,Th7;
      end;
      suppose a<>i; then
        A6: (L+*(i,S)).a = L.a by FUNCT_7:34;
        L c= Carrier A by PBOOLE:def 23;
        hence (L+*(i,S)).a c= (Carrier A).a by A3,A6,PBOOLE:def 5;
      end;
    end; then
    product (L+*(i,S)) c= product Carrier A by A2,CARD_3:38;
    hence product (L+*(i,S)) is Subset of Segre_Product A by A1;
  end;

theorem Th15:
  for I being non empty set
  for P being ManySortedSet of I
  for i being Element of I holds
  {P}.i is non empty trivial
  proof
    let I being non empty set;
    let P be ManySortedSet of I;
    let i be Element of I;
    {P}.i = {P.i} by PZFMISC1:def 1;
    hence {P}.i is non empty trivial;
  end;

theorem Th16:
  for I being non empty set
  for i being Element of I
  for A be PLS-yielding ManySortedSet of I
  for B being Block of A.i
  for P being Element of Carrier A holds
  product({P}+*(i,B)) is Block of Segre_Product A
  proof
    let I being non empty set;
    let i be Element of I;
    let A be PLS-yielding ManySortedSet of I;
    let B being Block of A.i;
    let P being Element of Carrier A;
    B in the topology of A.i; then
    reconsider B1=B as Subset of A.i;
    A1: now let j be Element of I;
    assume j <> i; then
    {P}+*(i,B1).j = {P}.j by FUNCT_7:34;
    hence {P}+*(i,B1).j is non empty trivial by Th15;
    end;
    reconsider PP={P} as ManySortedSubset of Carrier A by PENCIL_1:11;
    2 c= Card B by PENCIL_1:def 6; then
    B1 is non trivial by PENCIL_1:4; then
    reconsider S=PP+*(i,B1) as Segre-like non trivial-yielding ManySortedSubset
    of Carrier A by A1,PENCIL_1:9,def 20,PENCIL_2:7;
    A2: now assume indx(S)<>i; then
      S.indx(S) is non empty trivial by A1;
      hence contradiction by PENCIL_1:def 21;
    end;
    dom {P} = I by PBOOLE:def 3;
    then S.indx(S) = B1 by A2,FUNCT_7:33; then
    S.i is Block of A.i by A2;
    hence product({P}+*(i,B)) is Block of Segre_Product A by A2,PENCIL_1:24;
  end;

theorem Th17:
  for I being non empty set
  for A being PLS-yielding ManySortedSet of I
  for p,q being Point of Segre_Product A st p<>q holds
  p,q are_collinear iff
  for p1,q1 being ManySortedSet of I st p1=p & q1=q
  ex i being Element of I st
  (for a,b being Point of A.i st a=p1.i & b=q1.i
  holds a<>b & a,b are_collinear) &
  for j being Element of I st j<>i holds p1.j = q1.j
  proof
    let I being non empty set;
    let A being PLS-yielding ManySortedSet of I;
    let p,q being Point of Segre_Product A;
    assume A1: p<>q;
    thus p,q are_collinear implies
    for p1,q1 being ManySortedSet of I st p1=p & q1=q
    ex i being Element of I st
    (for a,b being Point of A.i st a=p1.i & b=q1.i holds
    a<>b & a,b are_collinear) &
    for j being Element of I st j<>i holds p1.j = q1.j
    proof
      assume p,q are_collinear; then
      consider l being Block of Segre_Product A such that
      A2: {p,q} c= l by A1,PENCIL_1:def 1;
      consider L being Segre-like non trivial-yielding ManySortedSubset of
      Carrier A such that
      A3: l = product L & L.indx(L) is Block of A.indx(L) by PENCIL_1:24;
      let p1,q1 be ManySortedSet of I;
      assume A4: p1=p & q1=q; then
      A5: p1 in l & q1 in l by A2,ZFMISC_1:38;
      take i=indx(L);
      thus for a,b being Point of A.i st a=p1.i & b=q1.i holds
      a<>b & a,b are_collinear
      proof
        let a,b being Point of A.i;
        assume A6: a=p1.i & b=q1.i;
        consider p0 being Function such that
        A7: p0=p1 & dom p0=dom L & for o being set st o in dom L holds
        p0.o in L.o by A3,A5,CARD_3:def 5;
        consider q0 being Function such that
        A8: q0=q1 & dom q0=dom L & for o being set st o in dom L holds
        q0.o in L.o by A3,A5,CARD_3:def 5;
        reconsider LI=L.indx(L) as Block of A.indx(L) by A3;
        now
          assume A9: a=b;
          A10: dom p1 = I by PBOOLE:def 3 .= dom q1 by PBOOLE:def 3;
          now
            let o be set;
            assume A11: o in dom p1; then
            reconsider o1=o as Element of I by PBOOLE:def 3;
            per cases;
            suppose o1=i;
              hence p1.o = q1.o by A6,A9;
            end;
            suppose o1<>i; then
              L.o1 is non empty trivial by PENCIL_1:12; then
              consider s being set such that
              A12: L.o1 = {s} by REALSET1:def 4;
              p1.o in {s} & q1.o in {s} by A7,A8,A11,A12; then
              p1.o = s & q1.o = s by TARSKI:def 1;
              hence p1.o = q1.o;
            end;
          end;
          hence contradiction by A1,A4,A10,FUNCT_1:9;
        end;
        hence a<>b;
        dom L = I by PBOOLE:def 3; then
        p1.i in LI & q1.i in LI by A7,A8; then
        {a,b} c= LI by A6,ZFMISC_1:38;
        hence a,b are_collinear by PENCIL_1:def 1;
      end;
      let j being Element of I;
      assume j<>i;
      hence p1.j = q1.j by A3,A5,PENCIL_1:23;
    end;
    assume A13: for p1,q1 being ManySortedSet of I st p1=p & q1=q
    ex i being Element of I st
    (for a,b being Point of A.i st a=p1.i & b=q1.i holds
    a<>b & a,b are_collinear) &
    for j being Element of I st j<>i holds p1.j = q1.j;
    reconsider p1=p,q1=q as Element of Carrier A by Th6;
    consider i being Element of I such that
    A14: (for a,b being Point of A.i st a=p1.i & b=q1.i holds
    a<>b & a,b are_collinear) &
    for j being Element of I st j<>i holds p1.j = q1.j by A13;
    p1.i is Element of (Carrier A).i by PBOOLE:def 17; then
    p1.i is Element of [#](A.i) by Th7;
    then reconsider a=p1.i as Point of A.i;
    q1.i is Element of (Carrier A).i by PBOOLE:def 17; then
    q1.i is Element of [#](A.i) by Th7;
    then reconsider b=q1.i as Point of A.i;
    a,b are_collinear by A14; then
    A15: a=b or ex l being Block of A.i st {a,b} c= l by PENCIL_1:def 1;
    per cases by A15;
    suppose a=b;
      hence p,q are_collinear by A14;
    end;
    suppose ex l being Block of A.i st {a,b} c= l;  then
      consider l being Block of A.i such that
      A16: {a,b} c= l;
      reconsider L=product ({p1}+*(i,l)) as Block of Segre_Product A by Th16;
      A17: dom ({p1}+*(i,l)) = I by PBOOLE:def 3;
      A18: dom {p1} = dom ({p1}+*(i,l)) by A17,PBOOLE:def 3;
      A19: dom p1 = dom ({p1}+*(i,l)) by A17,PBOOLE:def 3;
      for o being set st o in dom ({p1}+*(i,l)) holds p1.o in ({p1}+*(i,l)).o
      proof
        let o be set;
        assume A20: o in dom ({p1}+*(i,l));
        per cases;
        suppose A21: o = i; then
          ({p1}+*(i,l)).o = l by A18,A20,FUNCT_7:33;
          hence p1.o in ({p1}+*(i,l)).o by A16,A21,ZFMISC_1:38;
        end;
        suppose o <> i; then
          ({p1}+*(i,l)).o = {p1}.o by FUNCT_7:34; then
          ({p1}+*(i,l)).o = {p1.o} by A17,A20,PZFMISC1:def 1;
          hence p1.o in ({p1}+*(i,l)).o by TARSKI:def 1;
        end;
      end; then
      A22: p in L by A19,CARD_3:def 5;
      A23: dom q1 = dom ({p1}+*(i,l)) by A17,PBOOLE:def 3;
      for o being set st o in dom ({p1}+*(i,l)) holds q1.o in ({p1}+*(i,l)).o
      proof
        let o be set;
        assume A24: o in dom ({p1}+*(i,l)); then
        reconsider o1=o as Element of I by PBOOLE:def 3;
        per cases;
        suppose A25: o1 = i; then
          ({p1}+*(i,l)).o = l by A18,A24,FUNCT_7:33;
          hence q1.o in ({p1}+*(i,l)).o by A16,A25,ZFMISC_1:38;
        end;
        suppose A26: o1 <> i; then
          ({p1}+*(i,l)).o = {p1}.o by FUNCT_7:34; then
          ({p1}+*(i,l)).o = {p1.o} by A17,A24,PZFMISC1:def 1; then
          ({p1}+*(i,l)).o = {q1.o1} by A14,A26;
          hence q1.o in ({p1}+*(i,l)).o by TARSKI:def 1;
        end;
      end; then
      q in L by A23,CARD_3:def 5; then
      {p,q} c= L by A22,ZFMISC_1:38;
      hence p,q are_collinear by PENCIL_1:def 1;
    end;
  end;

theorem Th18:
  for I being non empty set
  for A being PLS-yielding ManySortedSet of I
  for b being Segre-like non trivial-yielding ManySortedSubset of Carrier A
  for x being Point of A.indx(b)
  ex p being ManySortedSet of I st
  p in product b & {p+*(indx(b),x) qua set} = product(b+*(indx(b),{x}))
  proof
    let I be non empty set;
    let A be PLS-yielding ManySortedSet of I;
    let b1 be Segre-like non trivial-yielding ManySortedSubset of Carrier A;
    set i=indx(b1);
    let x be Point of A.i;
    consider bb being set such that
    A1: bb in product b1 by XBOOLE_0:def 1;
    consider bf being Function such that
    A2: bf=bb & dom bf=dom b1 & for o being set st o in dom b1 holds
    bf.o in b1.o by A1,CARD_3:def 5;
    A3: dom b1=I & dom Carrier A = I by PBOOLE:def 3; then
    reconsider bb as ManySortedSet of I by A2,PBOOLE:def 3;
    take p=bb;
    thus p in product b1 by A1;
    set bbx=bb+*(i,x);
    thus {p+*(i,x) qua set}=product(b1+*(i,{x}))
    proof
      thus {p+*(i,x) qua set} c= product(b1+*(i,{x}))
      proof
        let o be set;
        assume o in {p+*(i,x) qua set}; then
        A4: o = bbx by TARSKI:def 1;
        A5: dom bbx = I by PBOOLE:def 3 .= dom (b1+*(i,{x})) by PBOOLE:def 3;
        now
          let z be set;
          assume z in dom (b1+*(i,{x})); then
          A6: z in I by PBOOLE:def 3; then
          A7: z in dom bb by PBOOLE:def 3;
          per cases;
          suppose A8: z=i; then
            bbx.z = x by A7,FUNCT_7:33; then
            bbx.z in {x} by TARSKI:def 1;
            hence bbx.z in (b1+*(i,{x})).z by A3,A8,FUNCT_7:33;
          end;
          suppose A9: z<>i; then
            bbx.z = bb.z by FUNCT_7:34; then
            bbx.z in b1.z by A1,A3,A6,CARD_3:18;
            hence bbx.z in (b1+*(i,{x})).z by A9,FUNCT_7:34;
          end;
        end;
        hence o in product(b1+*(i,{x})) by A4,A5,CARD_3:18;
      end;
      let o be set;
      assume o in product(b1+*(i,{x})); then
      consider u being Function such that
      A10: u=o & dom u=dom (b1+*(i,{x})) &
      for z being set st z in dom (b1+*(i,{x})) holds u.z in (b1+*(i,{x})).z
      by CARD_3:def 5;
      A11: dom u = I by A10,PBOOLE:def 3 .= dom bbx by PBOOLE:def 3;
      now
        let z be set;
        assume A12: z in dom u; then
        A13: z in I by A10,PBOOLE:def 3; then
        reconsider zz=z as Element of I;
        A14: u.z in (b1+*(i,{x})).z by A10,A12;
        per cases;
        suppose A15: zz=i; then
          u.z in {x} by A3,A14,FUNCT_7:33; then
          u.z = x by TARSKI:def 1;
          hence u.z = bbx.z by A2,A3,A15,FUNCT_7:33;
        end;
        suppose A16: zz<>i; then
          b1.zz is non empty trivial by PENCIL_1:def 21; then
          consider o being set such that
          A17: b1.z = {o} by REALSET1:def 4;
          u.z in b1.z by A14,A16,FUNCT_7:34; then
          A18: u.z = o by A17,TARSKI:def 1;
          bbx.z = bb.z by A16,FUNCT_7:34; then
          bbx.z in {o} by A2,A3,A13,A17;
          hence u.z = bbx.z by A18,TARSKI:def 1;
        end;
      end; then
      u=bbx by A11,FUNCT_1:9;
      hence o in {p+*(i,x) qua set} by A10,TARSKI:def 1;
    end;
  end;

definition
  let I be finite non empty set;
  let b1,b2 be ManySortedSet of I;
  func diff(b1,b2) -> Nat equals
  Card {i where i is Element of I: b1.i <> b2.i};
  correctness
  proof
    {i where i is Element of I: b1.i <> b2.i} c= I
    proof
      let a be set;
      assume a in {i where i is Element of I: b1.i <> b2.i}; then
      consider i being Element of I such that
      A1: a=i & b1.i<>b2.i;
      thus a in I by A1;
    end; then
    reconsider F={i where i is Element of I: b1.i <> b2.i} as finite set
    by FINSET_1:13;
    card F = Card F;
    hence thesis;
  end;
end;

theorem Th19:
  for I being finite non empty set
  for b1,b2 being ManySortedSet of I
  for i being Element of I st b1.i<>b2.i holds
  diff(b1,b2) = diff(b1,b2+*(i,b1.i)) + 1
  proof
    let I be finite non empty set;
    let b1,b2 be ManySortedSet of I;
    let j be Element of I;
    assume A1: b1.j<>b2.j;
    {i where i is Element of I: b1.i <> b2.i} c= I
    proof
      let a be set;
      assume a in {i where i is Element of I: b1.i <> b2.i}; then
      consider i being Element of I such that
      A2: a=i & b1.i<>b2.i;
      thus a in I by A2;
    end; then
    reconsider F={i where i is Element of I: b1.i <> b2.i} as finite set
    by FINSET_1:13;
    set b3=b2+*(j,b1.j);
    {i where i is Element of I: b1.i <> b3.i} c= I
    proof
      let a be set;
      assume a in {i where i is Element of I: b1.i <> b3.i}; then
      consider i being Element of I such that
      A3: a=i & b1.i<>b3.i;
      thus a in I by A3;
    end; then
    reconsider G={i where i is Element of I: b1.i <> b3.i} as finite set
    by FINSET_1:13;
    A4: F = G \/ {j}
    proof
      thus F c= G \/ {j}
      proof
        let o be set;
        assume o in F; then
        consider i being Element of I such that
        A5: o=i & b1.i <> b2.i;
        per cases;
        suppose i=j; then
          o in {j} by A5,TARSKI:def 1;
          hence o in G \/ {j} by XBOOLE_0:def 2;
        end;
        suppose i<>j; then
          b3.i=b2.i by FUNCT_7:34; then
          i in G by A5;
          hence o in G \/ {j} by A5,XBOOLE_0:def 2;
        end;
      end;
      let o be set;
      assume A6: o in G \/ {j};
      per cases by A6,XBOOLE_0:def 2;
      suppose o in G; then
        consider i being Element of I such that
        A7: o=i & b1.i <> b3.i;
        now
          assume A8: b1.i = b2.i; then
          i=j by A7,FUNCT_7:34;
          hence contradiction by A1,A8;
        end;
        hence o in F by A7;
      end;
      suppose o in {j}; then
        o=j by TARSKI:def 1;
        hence o in F by A1;
      end;
    end;
    now
      assume j in G; then
      consider jj being Element of I such that
      A9: jj=j & b1.jj <> b3.jj;
      dom b2=I by PBOOLE:def 3; then
      b1.j=b3.j by FUNCT_7:33;
      hence contradiction by A9;
    end; then
    card F = card G + 1 by A4,CARD_2:54;
    hence diff(b1,b2) = diff(b1,b2+*(j,b1.j)) + 1;
end;

begin :: The adherence of Segre cosets

definition
  let I be non empty set;
  let A be PLS-yielding ManySortedSet of I;
  let B1,B2 be Segre-Coset of A;
  pred B1 '||' B2 means :Def2:
  for x being Point of Segre_Product A st x in B1
  ex y being Point of Segre_Product A st y in B2 & x,y are_collinear;
end;

theorem Th20:
  for I being non empty set
  for A being PLS-yielding ManySortedSet of I
  for B1,B2 being Segre-Coset of A st B1 '||' B2
  for f being Collineation of Segre_Product A
  for C1,C2 being Segre-Coset of A st C1=f.:B1 & C2=f.:B2 holds C1 '||' C2
  proof
    let I be non empty set;
    let A be PLS-yielding ManySortedSet of I;
    let B1,B2 be Segre-Coset of A such that A1: B1 '||' B2;
    let f be Collineation of Segre_Product A;
    let C1,C2 be Segre-Coset of A such that
    A2: C1=f.:B1 & C2=f.:B2;
    let x be Point of Segre_Product A;
    assume x in C1; then
    consider a being set such that
    A3: a in dom f & a in B1 & x=f.a by A2,FUNCT_1:def 12;
    reconsider a as Point of Segre_Product A by A3;
    consider b being Point of Segre_Product A such that
    A4: b in B2 & a,b are_collinear by A1,A3,Def2;
    A5: dom f = the carrier of Segre_Product A by FUNCT_2:def 1;
    take y=f.b;
    thus y in C2 by A2,A4,A5,FUNCT_1:def 12;
    per cases;
    suppose a=b;
      hence x,y are_collinear by A3,PENCIL_1:def 1;
    end;
    suppose a<>b; then
      consider l being Block of Segre_Product A such that
      A6: {a,b} c= l by A4,PENCIL_1:def 1;
      reconsider k=f.:l as Block of Segre_Product A;
      a in l & b in l by A6,ZFMISC_1:38; then
      x in k & y in k by A3,A5,FUNCT_1:def 12; then
      {x,y} c= k by ZFMISC_1:38;
      hence x,y are_collinear by PENCIL_1:def 1;
    end;
end;

theorem Th21:
  for I being non empty set
  for A being PLS-yielding ManySortedSet of I
  for B1,B2 being Segre-Coset of A st B1 misses B2 holds
  B1 '||' B2 iff
  for b1,b2 being Segre-like non trivial-yielding ManySortedSubset of Carrier A
  st B1 = product b1 & B2 = product b2 holds indx(b1)=indx(b2) &
  ex r being Element of I st r<>indx(b1) &
  (for i being Element of I st i<>r holds b1.i=b2.i) &
  for c1,c2 being Point of A.r st b1.r = {c1} & b2.r = {c2} holds
  c1,c2 are_collinear
  proof
    let I being non empty set;
    let A being PLS-yielding ManySortedSet of I;
    let B1,B2 being Segre-Coset of A;
    assume A1: B1 misses B2;
    thus B1 '||' B2 implies
    for b1,b2 being Segre-like non trivial-yielding ManySortedSubset of
    Carrier A st
    B1 = product b1 & B2 = product b2 holds indx(b1)=indx(b2) &
    ex r being Element of I st r<>indx(b1) &
    (for i being Element of I st i<>r holds b1.i=b2.i) &
    for c1,c2 being Point of A.r st b1.r={c1} & b2.r={c2} holds
    c1,c2 are_collinear
    proof
      assume B1 '||' B2; then
      A2: for x being Point of Segre_Product A st x in B1
      ex y being Point of Segre_Product A st y in B2 & x,y are_collinear
      by Def2;
      let b1,b2 being Segre-like non trivial-yielding ManySortedSubset of
      Carrier A;
      assume A3: B1 = product b1 & B2 = product b2;
      consider L1 being Segre-like non trivial-yielding ManySortedSubset of
      Carrier A such that
      A4: B1 = product L1 & L1.indx(L1) = [#](A.indx(L1)) by PENCIL_2:def 2;
      consider L2 being Segre-like non trivial-yielding ManySortedSubset of
      Carrier A such that
      A5: B2 = product L2 & L2.indx(L2) = [#](A.indx(L2)) by PENCIL_2:def 2;
      A6:b1 = L1 by A3,A4,PUA2MSS1:2;
      A7:b2 = L2 by A3,A5,PUA2MSS1:2;
      thus A8: indx(b1)=indx(b2)
      proof
        assume indx(b1)<>indx(b2);
        then b2.indx(b1) is non empty trivial by PENCIL_1:12; then
        consider c2 being set such that
        A9: b2.indx(b1)={c2} by REALSET1:def 4;
        consider p0 being set such that
        A10: p0 in B1 by A3,XBOOLE_0:def 1;
        reconsider p0 as Point of Segre_Product A by A10;
        reconsider p=p0 as Element of Carrier A by Th6;
        consider bl being Block of A.indx(b1);
        A11:  2 c= Card bl by PENCIL_1:def 6;
        bl in the topology of A.indx(b1); then
        Card bl c= Card (the carrier of (A.indx(b1))) by CARD_1:27; then
        2 c= Card (the carrier of (A.indx(b1))) by A11,XBOOLE_1:1;
        then consider a being set such that
        A12: a in the carrier of (A.indx(b1)) & a <> c2 by PENCIL_1:3;
        reconsider a as Point of A.indx(b1) by A12;
        reconsider x=p+*(indx(b1),a) as Point of Segre_Product A
        by PENCIL_1:25;
        reconsider x1=x as Element of Carrier A by Th6;
        A13: dom x1 = I by PBOOLE:def 3 .= dom b1 by PBOOLE:def 3;
        now
          let i be set;
          assume A14: i in dom x1; then i in I by PBOOLE:def 3; then
          A15: i in dom p by PBOOLE:def 3;
          per cases;
          suppose A16: i=indx(b1); then
            x1.i = a by A15,FUNCT_7:33; then
            x1.i in [#](A.indx(b1));
            hence x1.i in b1.i by A4,A6,A16;
          end;
          suppose A17: i<>indx(b1);
            consider f being Function such that
            A18: f=p & dom f = dom b1 & for a being set st a in dom b1 holds
            f.a in b1.a by A3,A10,CARD_3:def 5;
            x1.i = p.i by A17,FUNCT_7:34;
            hence x1.i in b1.i by A13,A14,A18;
          end;
        end; then
        A19: x in B1 by A3,A13,CARD_3:def 5; then
        consider y being Point of Segre_Product A such that
        A20: y in B2 & x,y are_collinear by A2;
        reconsider y1=y as Element of Carrier A by Th6;
        per cases;
        suppose
          y=x; then
          y in B1 by A19; then
          y in B1 /\ B2 by A20,XBOOLE_0:def 3;
          hence contradiction by A1,XBOOLE_0:def 7;
        end;
        suppose
          y<>x; then
          consider i0 being Element of I such that
          A21: (for a,b being Point of A.i0 st a=x1.i0 & b=y1.i0 holds
          a<>b & a,b are_collinear) &
          for j being Element of I st j<>i0 holds x1.j = y1.j by A20,Th17;
          A22: dom y1 = I by PBOOLE:def 3 .= dom b1 by PBOOLE:def 3;
          now
            let i be set;
            assume A23: i in dom y1; then i in I by PBOOLE:def 3; then
            A24: i in dom p by PBOOLE:def 3;
            then reconsider i5=i as Element of I by PBOOLE:def 3;
            per cases;
            suppose A25: i=indx(b1);
              reconsider i1=i as Element of I by A24,PBOOLE:def 3;
              y1.i1 is Element of (Carrier A).i1 by PBOOLE:def 17; then
              y1.i1 is Element of [#](A.i1) by Th7; then
              y1.i1 is Element of A.i1; then
              y1.i1 in the carrier of A.i1; then
              y1.i1 in [#](A.i1);
              hence y1.i in b1.i by A4,A6,A25;
            end;
            suppose A26: i<>indx(b1);
              consider f being Function such that
              A27: f=p & dom f = dom b1 & for a being set st a in dom b1 holds
              f.a in b1.a by A3,A10,CARD_3:def 5;
              dom p = I by PBOOLE:def 3; then
              A28: x1.indx(b1) = a by FUNCT_7:33;
              consider g being Function such that
              A29: g=y1 & dom g = dom b2 & for a being set st a in dom b2 holds
              g.a in b2.a by A3,A20,CARD_3:def 5;
              dom b2 = I by PBOOLE:def 3; then
              y1.indx(b1) in b2.indx(b1) by A29; then
              y1.indx(b1) in {c2} by A9; then
              y1.indx(b1) = c2 by TARSKI:def 1; then
              y1.indx(b1)<>x1.indx(b1) by A12,A28; then
              i0 = indx(b1) by A21; then
              A30: y1.i5 = x1.i5 by A21,A26;
              x1.i = p.i by A26,FUNCT_7:34;
              hence y1.i in b1.i by A22,A23,A27,A30;
            end;
          end; then
          y in B1 by A3,A22,CARD_3:def 5; then
          y in B1 /\ B2 by A20,XBOOLE_0:def 3;
          hence contradiction by A1,XBOOLE_0:def 7;
        end;
      end;

      thus ex r being Element of I st r<>indx(b1) &
      (for i being Element of I st i<>r holds b1.i=b2.i) &
      for c1,c2 being Point of A.r st b1.r={c1} & b2.r={c2} holds
      c1,c2 are_collinear
      proof
        consider x being set such that
        A31: x in B1 by A3,XBOOLE_0:def 1;
        reconsider x as Point of Segre_Product A by A31;
        reconsider x1=x as Element of Carrier A by Th6;
        consider y being Point of Segre_Product A such that
        A32: y in B2 & x,y are_collinear by A2,A31;
        reconsider y1=y as Element of Carrier A by Th6;
        now
          assume x=y; then
          B1 /\ B2 <> {} by A31,A32,XBOOLE_0:def 3;
          hence contradiction by A1,XBOOLE_0:def 7;
        end; then
        consider r being Element of I such that
        A33: (for a,b being Point of A.r st a=x1.r & b=y1.r holds
        a<>b & a,b are_collinear) &
        for j being Element of I st j<>r holds x1.j = y1.j by A32,Th17;
        take r;
        now
          assume A34: r=indx(b1);
          A35: dom y1 = I by PBOOLE:def 3 .= dom b1 by PBOOLE:def 3;
          now
            let o be set;
            assume A36: o in dom b1; then
            reconsider o1=o as Element of I by PBOOLE:def 3;
            per cases;
            suppose A37: o1=r; then
              A38: b1.o1 = [#](A.r) by A4,A6,A34;
              y1.o1 is Element of (Carrier A).o1 by PBOOLE:def 17; then
              y1.o1 is Element of [#](A.o1) by Th7;
              hence y1.o in b1.o by A37,A38;
            end;
            suppose A39: o1<>r; then
              b1.o1 is trivial non empty by A34,PENCIL_1:12; then
              consider c being set such that
              A40: b1.o1 = {c} by REALSET1:def 4;
              x1.o1 in b1.o1 by A4,A6,A31,A36,CARD_3:18; then
              c = x1.o1 by A40,TARSKI:def 1 .= y1.o1 by A33,A39;
              hence y1.o in b1.o by A40,TARSKI:def 1;
            end;
          end; then
          y1 in B1 by A4,A6,A35,CARD_3:18; then
          B1 /\ B2 <> {} by A32,XBOOLE_0:def 3;
          hence contradiction by A1,XBOOLE_0:def 7;
        end;
        hence r<>indx(b1);
        thus for i being Element of I st i<>r holds b1.i=b2.i
        proof
          let i be Element of I;
          assume A41: i<>r;
          per cases;
          suppose i=indx(b1);then
            b1.i = [#](A.i) & b2.i = [#](A.i) by A4,A5,A6,A7,A8;
            hence b1.i=b2.i;
          end;
          suppose A42: i<>indx(b1);
            b1.i is trivial non empty by A42,PENCIL_1:12; then
            consider c being set such that
            A43: b1.i = {c} by REALSET1:def 4;
            b2.i is trivial non empty by A8,A42,PENCIL_1:12; then
            consider d being set such that
            A44: b2.i = {d} by REALSET1:def 4;
            dom b1 = I by PBOOLE:def 3; then
            x1.i in b1.i by A4,A6,A31,CARD_3:18; then
            A45: c = x1.i by A43,TARSKI:def 1 .= y1.i by A33,A41;
            dom b2 = I by PBOOLE:def 3; then
            y1.i in b2.i by A5,A7,A32,CARD_3:18;
            hence b1.i=b2.i by A43,A44,A45,TARSKI:def 1;
          end;
        end;
        let c1,c2 being Point of A.r;
        assume A46: b1.r={c1} & b2.r={c2};
        dom L1 = I by PBOOLE:def 3; then
        x1.r in b1.r by A4,A6,A31,CARD_3:18; then
        A47: c1 = x1.r by A46,TARSKI:def 1;
        dom L2 = I by PBOOLE:def 3; then
        y1.r in b2.r by A5,A7,A32,CARD_3:18; then
        c2 = y1.r by A46,TARSKI:def 1;
        hence c1,c2 are_collinear by A33,A47;
      end;
    end;
    assume A48:
    for b1,b2 being Segre-like non trivial-yielding ManySortedSubset of
    Carrier A st
    B1 = product b1 & B2 = product b2 holds indx(b1)=indx(b2) &
    ex r being Element of I st r<>indx(b1) &
    (for i being Element of I st i<>r holds b1.i=b2.i) &
    for c1,c2 being Point of A.r st b1.r={c1} & b2.r={c2} holds
    c1,c2 are_collinear;
    consider L1 being Segre-like non trivial-yielding ManySortedSubset of
    Carrier A such that
    A49: B1 = product L1 & L1.indx(L1) = [#](A.indx(L1)) by PENCIL_2:def 2;
    consider L2 being Segre-like non trivial-yielding ManySortedSubset of
    Carrier A such that
    A50: B2 = product L2 & L2.indx(L2) = [#](A.indx(L2)) by PENCIL_2:def 2;
    A51: indx(L1)=indx(L2) by A48,A49,A50;
    consider r being Element of I such that
    A52: r<>indx(L1) &
    (for i being Element of I st i<>r holds L1.i=L2.i) &
    for c1,c2 being Point of A.r st L1.r={c1} & L2.r={c2} holds
    c1,c2 are_collinear by A48,A49,A50;
    L1.r is non empty trivial by A52,PENCIL_1:12; then
    consider c1 being set such that
    A53: L1.r = {c1} by REALSET1:def 4;
    L1 c= Carrier A by PBOOLE:def 23; then
    L1.r c= (Carrier A).r by PBOOLE:def 5; then
    {c1} c= [#](A.r) by A53,Th7; then
    {c1} c= the carrier of A.r; then
    reconsider c1 as Point of A.r by ZFMISC_1:37;
    L2.r is non empty trivial by A51,A52,PENCIL_1:12; then
    consider c2 being set such that
    A54: L2.r = {c2} by REALSET1:def 4;
    L2 c= Carrier A by PBOOLE:def 23; then
    L2.r c= (Carrier A).r by PBOOLE:def 5; then
    {c2} c= [#](A.r) by A54,Th7; then
    {c2} c= the carrier of A.r; then
    reconsider c2 as Point of A.r by ZFMISC_1:37;
    A55: now assume A56: c1=c2;
    A57: dom L1 = I by PBOOLE:def 3 .= dom L2 by PBOOLE:def 3;
    now let s be set; assume s in dom L1; then
      reconsider s1=s as Element of I by PBOOLE:def 3;
      per cases;
      suppose s1=r;
        hence L1.s=L2.s by A53,A54,A56;
      end;
      suppose s1<>r;
        hence L1.s=L2.s by A52;
      end;
    end;
    then L1=L2 by A57,FUNCT_1:9; then
    B1 = B2 by A49,A50; then
    B1 /\ B1 = {} by A1,XBOOLE_0:def 7;
    hence contradiction by A49;
  end;
  c1,c2 are_collinear by A52,A53,A54; then
  consider bb being Block of A.r such that
  A58: {c1,c2} c= bb by A55,PENCIL_1:def 1;
  let x being Point of Segre_Product A;
  assume A59: x in B1;
  reconsider x1=x as Element of Carrier A by Th6;
  consider x2 being Function such that
  A60: x2=x & dom x2=dom L1 & for o being set st o in dom L1 holds
  x2.o in L1.o by A49,A59,CARD_3:def 5;
  reconsider y=x1+*(r,c2) as Point of Segre_Product A by PENCIL_1:25;
  take y;
  reconsider y1=y as ManySortedSet of I;
  A61: dom y1 = I by PBOOLE:def 3 .= dom L2 by PBOOLE:def 3;
  now let a be set;
    assume a in dom L2; then reconsider a1=a as Element of I by PBOOLE:def 3;
    per cases;
    suppose A62: a1=r;
      dom x1 = I by PBOOLE:def 3; then
      y1.a = c2 by A62,FUNCT_7:33;
      hence y1.a in L2.a by A54,A62,TARSKI:def 1;
    end;
    suppose A63: a1<>r;
      A64: dom x1 = I by PBOOLE:def 3;
      A65: y1.a1 = x1.a1 by A63,FUNCT_7:34;
      y1.a1 in L1.a1 by A60,A64,A65;
      hence y1.a in L2.a by A52,A63;
    end;
  end;
  hence y in B2 by A50,A61,CARD_3:def 5;
  reconsider B=product({x1}+*(r,bb)) as Block of Segre_Product A by Th16;
  A66: dom x1 = I by PBOOLE:def 3 .= dom ({x1}+*(r,bb)) by PBOOLE:def 3;
  now let s be set;
    assume A67: s in dom x1; then A68: s in I by PBOOLE:def 3; then
    A69: s in dom {x1} by PBOOLE:def 3;
    per cases;
    suppose A70: s=r;
      x1.s in L1.s by A60,A67; then
      x1.s in {c1} by A53,A70; then
      A71: x1.s = c1 by TARSKI:def 1;
      bb = ({x1}+*(r,bb)).s by A69,A70,FUNCT_7:33;
      hence x1.s in ({x1}+*(r,bb)).s by A58,A71,ZFMISC_1:38;
    end;
    suppose s<>r; then
      {x1}.s = ({x1}+*(r,bb)).s by FUNCT_7:34; then
      {x1.s} = ({x1}+*(r,bb)).s by A68,PZFMISC1:def 1;
      hence x1.s in ({x1}+*(r,bb)).s by TARSKI:def 1;
    end;
  end; then
  A72: x in B by A66,CARD_3:def 5;
  A73: dom y1 = I by PBOOLE:def 3 .= dom({x1}+*(r,bb)) by PBOOLE:def 3;
  now let s be set;
    assume s in dom y1; then
    A74: s in I by PBOOLE:def 3; then
    A75: s in dom {x1} & s in dom x1 by PBOOLE:def 3;
    per cases;
    suppose A76: s=r; then
      A77: y1.s = c2 by A75,FUNCT_7:33;
      bb = ({x1}+*(r,bb)).s by A75,A76,FUNCT_7:33;
      hence y1.s in ({x1}+*(r,bb)).s by A58,A77,ZFMISC_1:38;
    end;
    suppose A78: s<>r; then
      A79: y1.s = x1.s by FUNCT_7:34;
      {x1}.s = ({x1}+*(r,bb)).s by A78,FUNCT_7:34; then
      {x1.s} = ({x1}+*(r,bb)).s by A74,PZFMISC1:def 1;
      hence y1.s in ({x1}+*(r,bb)).s by A79,TARSKI:def 1;
    end;
  end; then
  A80: y in B by A73,CARD_3:def 5;
  {x,y} c= B by A72,A80,ZFMISC_1:38;
  hence x,y are_collinear by PENCIL_1:def 1;
end;

theorem Th22:
  for I being finite non empty set
  for A being PLS-yielding ManySortedSet of I st
  for i being Element of I holds A.i is connected
  for i being Element of I
  for p being Point of A.i
  for b1,b2 being Segre-like non trivial-yielding ManySortedSubset of Carrier A
  st product b1 is Segre-Coset of A & product b2 is Segre-Coset of A &
  b1=b2+*(i,{p}) & not p in b2.i
  ex D being FinSequence of bool the carrier of Segre_Product A st
  D.1=product b1 & D.(len D)=product b2  &
  (for i being Nat st i in dom D holds D.i is Segre-Coset of A) &
  for i being Nat st 1<=i & i<len D
  for Di,Di1 being Segre-Coset of A st Di=D.i & Di1=D.(i+1)
  holds Di misses Di1 & Di '||' Di1
  proof
    let I be finite non empty set;
    let A be PLS-yielding ManySortedSet of I such that
    A1: for i being Element of I holds A.i is connected;
    let i be Element of I;
    let p be Point of A.i;
    let b1,b2 be Segre-like non trivial-yielding ManySortedSubset of Carrier A
    such that
    A2: product b1 is Segre-Coset of A & product b2 is Segre-Coset of A &
    b1=b2+*(i,{p}) & not p in b2.i;
    A3: dom b2=I by PBOOLE:def 3;
    A4:
    now
      assume i=indx(b2); then
      b2.i = [#](A.i) by A2,Th10; then
      b2.i = the carrier of (A.i);
      hence contradiction by A2;
    end; then
    b2.i is non empty trivial by PENCIL_1:12; then consider q being set
    such that
    A5: b2.i = {q} by REALSET1:def 4;
    b2 c= Carrier A by PBOOLE:def 23; then
    b2.i c= (Carrier A).i by PBOOLE:def 5; then
    {q} c= [#](A.i) by A5,Th7; then
    q in [#](A.i) by ZFMISC_1:37; then
    reconsider q as Point of A.i;
    A.i is connected by A1; then
    consider f being FinSequence of the carrier of A.i such that
    A6: p=f.1 & q=f.(len f) and
    A7: for j being Nat st 1 <= j & j < len f
    for a,b being Point of A.i st a = f.j & b = f.(j+1)
    holds a,b are_collinear by PENCIL_1:def 10;

    defpred P[set,set] means
    for a,b being Point of A.i st $1=a & $2=b holds a,b are_collinear;

    A8: for j being Element of NAT, x,y being set st
    1 <= j & j < len f & x=f.j & y=f.(j+1) holds P[x,y] by A7;
    consider F being one-to-one FinSequence of the carrier of A.i such that
    A9: p=F.1 & q=F.len F & rng F c= rng f &
    for j being Element of NAT st 1 <= j & j < len F holds P[F.j,F.(j+1)]
    from PENCIL_2:sch 1(A6,A8);

    deffunc H(set) = product (b2+*(i,{F.$1}));

    consider G being FinSequence such that
    A10: len G = len F &
    for j being Element of NAT st j in Seg (len F) holds G.j=H(j)
    from FINSEQ_1:sch 2;
    rng G c= bool the carrier of Segre_Product A
    proof
      let a be set;
      assume a in rng G; then
      consider o being set such that
      A11: o in dom G & G.o=a by FUNCT_1:def 5;
      reconsider o as Element of NAT by A11;
      o in Seg (len F) by A10,A11,FINSEQ_1:def 3; then
      A12: G.o = product (b2+*(i,{F.o})) by A10;
      dom G = dom F by A10,FINSEQ_3:31; then
      A13: F.o in rng F by A11,FUNCT_1:12;
      F.o in the carrier of A.i by A13; then
      {F.o} is Subset of A.i by ZFMISC_1:37; then
      product (b2+*(i,{F.o})) is Subset of Segre_Product A by Th14;
      hence a in bool the carrier of Segre_Product A by A11,A12;
    end; then
    reconsider D=G as FinSequence of bool the carrier of Segre_Product A
    by FINSEQ_1:def 4;

    take D;
    A14:
    now
      assume F={}; then
      dom F = {} by FINSEQ_1:26; then
      F.1 = {} & F.(len F) = {} by FUNCT_1:def 4; then
      p = q by A9;
      hence contradiction by A2,A5,TARSKI:def 1;
    end; then
    rng F <> {} by FINSEQ_1:27; then
    A15: 1 in dom F by FINSEQ_3:34;
    dom F = Seg (len F) by FINSEQ_1:def 3; then
    1 in Seg (len F) by A15; then
    A16: D.1 = product (b2+*(i,{F.1})) by A10;
    b1 = b2+*(i,{F.1}) by A2,A9;
    hence D.1=product b1 by A16;
    len F <> 0 by A14,FINSEQ_1:25; then
    len D in Seg (len F) by A10,FINSEQ_1:5; then
    A17: D.(len D) = product (b2+*(i,{F.(len F)})) by A10;
    {F.(len F)}=b2.i by A5,A9; then
    b2=b2+*(i,{F.(len F)}) by FUNCT_7:37;
    hence D.(len D)=product b2 by A17;
    thus for j being Nat st j in dom D holds D.j is Segre-Coset of A
    proof
      let j be Nat;
      assume A18: j in dom D; then
      j in Seg (len F) by A10,FINSEQ_1:def 3; then
      j in dom F by FINSEQ_1:def 3; then
      A19: F.j in rng F by FUNCT_1:12;
      reconsider Fj=F.j as Point of A.i by A19;
      reconsider BB=b2+*(i,{Fj}) as Segre-like non trivial-yielding
      ManySortedSubset of Carrier A by A4,Th13;
      j in Seg (len F) by A10,A18,FINSEQ_1:def 3; then
      A20: D.j = product BB by A10;
      A21: D.j is Subset of Segre_Product A by A20,Th14;
      BB.indx(b2) = b2.indx(b2) by A4,FUNCT_7:34; then
      BB.indx(b2) is non trivial by PENCIL_1:def 21; then
      A22: indx(BB)=indx(b2) by PENCIL_1:def 21; then
      BB.indx(BB)=b2.indx(b2) by A4,FUNCT_7:34
      .=[#](A.indx(BB)) by A2,A22,Th10;
      hence D.j is Segre-Coset of A by A20,A21,PENCIL_2:def 2;
    end;
    thus for i being Nat st 1<=i & i<len D for Di,Di1 being Segre-Coset of A st
    Di=D.i & Di1=D.(i+1)
    holds Di misses Di1 & Di '||' Di1
    proof
      let j be Nat;
      assume A23: 1<=j & j<len D;
      let Di,Di1 be Segre-Coset of A such that
      A24: Di=D.j & Di1=D.(j+1);
      reconsider j as Element of NAT by ORDINAL1:def 13;
      j in dom D by A23,FINSEQ_3:27; then
      j in Seg (len F) by A10,FINSEQ_1:def 3; then
      j in dom F by FINSEQ_1:def 3; then
      A25: F.j in rng F by FUNCT_1:12;
      reconsider Fj=F.j as Point of A.i by A25;
      reconsider BB1=b2+*(i,{Fj}) as Segre-like non trivial-yielding
      ManySortedSubset of Carrier A by A4,Th13;
      1<=j+1 & j+1 <= len D by A23,NAT_1:13; then
      j+1 in dom D by FINSEQ_3:27; then
      j+1 in Seg (len F) by A10,FINSEQ_1:def 3; then
      j+1 in dom F by FINSEQ_1:def 3; then
      A26: F.(j+1) in rng F by FUNCT_1:12;
      reconsider Fj2=F.(j+1) as Point of A.i by A26;
      reconsider BB2=b2+*(i,{Fj2}) as Segre-like non trivial-yielding
      ManySortedSubset of Carrier A by A4,Th13;
      j in dom D by A23,FINSEQ_3:27; then
      A27: j in Seg len F by A10,FINSEQ_1:def 3; then
      A28: D.j = product BB1 by A10;
      1<=j+1 & j+1<=len D by A23,NAT_1:13; then
      j+1 in dom D by FINSEQ_3:27; then
      A29: j+1 in Seg len F by A10,FINSEQ_1:def 3; then
      A30: D.(j+1) = product BB2 by A10;
      thus A31: Di misses Di1
      proof
        assume Di /\ Di1 <> {}; then consider x being set such that
        A32: x in Di /\ Di1 by XBOOLE_0:def 1;
        A33: x in Di & x in Di1 by A32,XBOOLE_0:def 3;
        consider x1 being Function such that
        A34: x1=x & dom x1=dom (b2+*(i,{F.j})) & for o being set st
        o in dom (b2+*(i,{F.j}))
        holds x1.o in (b2+*(i,{F.j})).o by A24,A28,A33,CARD_3:def 5;
        consider x2 being Function such that
        A35: x2=x & dom x2=dom (b2+*(i,{F.(j+1)})) & for o being set st
        o in dom (b2+*(i,{F.(j+1)}))
        holds x2.o in (b2+*(i,{F.(j+1)})).o by A24,A30,A33,CARD_3:def 5;
        dom (b2+*(i,{F.j})) = I by PBOOLE:def 3; then
        x1.i in (b2+*(i,{F.j})).i by A34; then
        x1.i in {F.j} by A3,FUNCT_7:33; then
        A36: x1.i = F.j by TARSKI:def 1;
        dom (b2+*(i,{F.(j+1)})) = I by PBOOLE:def 3; then
        x2.i in (b2+*(i,{F.(j+1)})).i by A35; then
        x2.i in {F.(j+1)} by A3,FUNCT_7:33; then
        A37: x2.i = F.(j+1) by TARSKI:def 1;
        j in dom F & j+1 in dom F & j<>j+1 by A27,A29,FINSEQ_1:def 3;
        hence contradiction by A34,A35,A36,A37,FUNCT_1:def 8;
      end;
      now
        let c1,c2 be Segre-like non trivial-yielding ManySortedSubset of
        Carrier A such that
        A38: Di = product c1 & Di1 = product c2;
        A39: c1 = b2+*(i,{F.j}) by A24,A28,A38,PUA2MSS1:2; then
        c1.indx(b2)=b2.indx(b2) by A4,FUNCT_7:34; then
        c1.indx(b2) is non trivial by PENCIL_1:def 21; then
        A40: indx(c1) = indx(b2) by PENCIL_1:def 21;
        A41: c2 = b2+*(i,{F.(j+1)}) by A24,A30,A38,PUA2MSS1:2; then
        c2.indx(b2)=b2.indx(b2) by A4,FUNCT_7:34; then
        c2.indx(b2) is non trivial by PENCIL_1:def 21;
        hence indx(c1)=indx(c2) by A40,PENCIL_1:def 21;
        take r=i;
        thus r<>indx(c1) by A4,A40;
        thus for j being Element of I st j<>r holds c1.j=c2.j
        proof
          let j be Element of I;
          assume A42: j<>r;
          thus c1.j = b2.j by A39,A42,FUNCT_7:34
          .= c2.j by A41,A42,FUNCT_7:34;
        end;
        thus for p1,p2 being Point of A.r st c1.r={p1} & c2.r={p2} holds
        p1,p2 are_collinear
        proof
          let p1,p2 be Point of A.r such that
          A43: c1.r={p1} & c2.r={p2};
          c1.r = {F.j} by A3,A39,FUNCT_7:33; then
          A44: F.j=p1 by A43,ZFMISC_1:6;
          c2.r = {F.(j+1)} by A3,A41,FUNCT_7:33; then
          F.(j+1)=p2 by A43,ZFMISC_1:6;
          hence p1,p2 are_collinear by A9,A10,A23,A44;
        end;
      end;
      hence Di '||' Di1 by A31,Th21;
    end;
  end;

theorem Th23:
  for I being finite non empty set
  for A being PLS-yielding ManySortedSet of I st
  for i being Element of I holds A.i is connected
  for B1,B2 being Segre-Coset of A st B1 misses B2
  for b1,b2 being Segre-like non trivial-yielding ManySortedSubset of Carrier A
  st B1 = product b1 & B2 = product b2 holds indx(b1)=indx(b2) iff
  ex D being FinSequence of bool the carrier of Segre_Product A st
  D.1=B1 & D.(len D)=B2 &
  (for i being Nat st i in dom D holds D.i is Segre-Coset of A) &
  for i being Nat st 1<=i & i<len D for Di,Di1 being Segre-Coset of A st
  Di=D.i & Di1=D.(i+1) holds Di misses Di1 & Di '||' Di1
  proof
    let I be finite non empty set;
    let A be PLS-yielding ManySortedSet of I;
    assume A1: for i being Element of I holds A.i is connected;
    let B1,B2 be Segre-Coset of A such that
    A2: B1 misses B2;
    let b1,b2 be Segre-like non trivial-yielding ManySortedSubset of Carrier A
    such that
    A3: B1 = product b1 & B2 = product b2;

    thus indx(b1)=indx(b2) implies ex D being FinSequence of bool the carrier
    of Segre_Product A st
    D.1=B1 & D.(len D)=B2 &
    (for i being Nat st i in dom D holds D.i is Segre-Coset of A) &
    for i being Nat st 1<=i & i<len D for Di,Di1 being Segre-Coset of A st
    Di=D.i & Di1=D.(i+1) holds Di misses Di1 & Di '||' Di1
    proof
      assume A4: indx(b1)=indx(b2);
      defpred P[Nat] means
      for c1,c2 being Segre-like non trivial-yielding ManySortedSubset of
      Carrier A st indx(c1) = indx(c2) &
      product c1 is Segre-Coset of A & product c2 is Segre-Coset of A &
      product c1 misses product c2 & diff(c1,c2)=$1
      ex D being FinSequence of bool the carrier of Segre_Product A st
      D.1=product c1 & D.(len D)=product c2 &
      (for i being Nat st i in dom D holds D.i is Segre-Coset of A) &
      for i being Nat st 1<=i & i<len D for Di,Di1 being Segre-Coset of A st
      Di=D.i & Di1=D.(i+1) holds Di misses Di1 & Di '||' Di1;
      A5: P[0]
      proof
        let c1,c2 be Segre-like non trivial-yielding ManySortedSubset of
        Carrier A;
        assume A6: indx(c1)=indx(c2) & product c1 is Segre-Coset of A &
        product c2 is Segre-Coset of A &
        product c1 misses product c2 & diff(c1,c2)=0; then
        Card {i where i is Element of I: c1.i <> c2.i} = 0; then
        A7: {i where i is Element of I: c1.i <> c2.i} = {} by CARD_2:59;
        A8: dom c1 = I by PBOOLE:def 3 .= dom c2 by PBOOLE:def 3;
        now
          let a be set;
          assume a in dom c1; then
          reconsider j=a as Element of I by PBOOLE:def 3;
          assume c1.a<>c2.a; then
          j in {i where i is Element of I: c1.i <> c2.i};
          hence contradiction by A7;
        end;
        then c1=c2 by A8,FUNCT_1:9;
        hence ex D being FinSequence of bool the carrier of Segre_Product A st
        D.1=product c1 & D.(len D)=product c2 &
        (for i being Nat st i in dom D holds D.i is Segre-Coset of A) &
        for i being Nat st 1<=i & i<len D for Di,Di1 being Segre-Coset of A st
        Di=D.i & Di1=D.(i+1)
        holds Di misses Di1 & Di '||' Di1 by A6;
      end;
      A9:
      now
        let k be Nat;
        assume A10: P[k];
        thus P[k+1]
        proof
          let c1,c2 being Segre-like non trivial-yielding ManySortedSubset of
          Carrier A such that
          A11: indx(c1) = indx(c2) & product c1 is Segre-Coset of A &
          product c2 is Segre-Coset of A &
          product c1 misses product c2 & diff(c1,c2)=k+1;
          Card {i where i is Element of I: c1.i<>c2.i} = k+1 by A11;then
          Card {i where i is Element of I: c1.i<>c2.i} <> 0; then
          {i where i is Element of I: c1.i<>c2.i} <> {} by CARD_1:def 5; then
          consider j0 being set such that
          A12: j0 in {i where i is Element of I: c1.i<>c2.i} by XBOOLE_0:def 1;
          consider j being Element of I such that
          A13: j0=j & c1.j<>c2.j by A12;
          A14: c1.indx(c1)=[#](A.indx(c1)) & c2.indx(c1)=[#](A.indx(c1))
          by A11,Th10; then
          A15: j <> indx(c1) by A13;
          c1.j is non empty trivial by A15,PENCIL_1:12; then
          consider p being set such that
          A16: c1.j={p} by REALSET1:def 4;
          c1 c= Carrier A by PBOOLE:def 23; then
          {p} c= (Carrier A).j by A16,PBOOLE:def 5; then
          p in (Carrier A).j by ZFMISC_1:37; then
          p in [#](A.j) by Th7; then
          reconsider p as Point of A.j;
          c2.j is non empty trivial by A11,A15,PENCIL_1:12; then
          consider r being set such that
          A17: c2.j={r} by REALSET1:def 4;
          c2 c= Carrier A by PBOOLE:def 23; then
          {r} c= (Carrier A).j by A17,PBOOLE:def 5; then
          r in (Carrier A).j by ZFMISC_1:37; then
          r in [#](A.j) by Th7; then
          reconsider r as Point of A.j;
          reconsider c3=c2+*(j,{p}) as Segre-like non trivial-yielding
          ManySortedSubset of Carrier A by A11,A15,Th13;
          A18: product c3 is Subset of Segre_Product A by Th14;
          A19: A.indx(c1) is non trivial by Th2;
          A20: c3.indx(c1)=[#](A.indx(c1)) by A14,A15,FUNCT_7:34; then
          c3.indx(c1)=the carrier of (A.indx(c1)); then
          c3.indx(c1) is non trivial by A19,STRUCT_0:def 9; then
          A21: indx(c3) = indx(c1) by PENCIL_1:def 21; then
          c3.indx(c3)=[#](A.indx(c3)) by A20; then
          A22: product c3 is Segre-Coset of A by A18,PENCIL_2:def 2;
          per cases;
          suppose A23: product c1 misses product c3;
            diff(c1,c2) = diff(c1,c3) + 1 by A13,A16,Th19; then
            k+(1-1) = diff(c1,c3) + 1-1 by A11; then
            diff(c1,c3)= k; then
            consider E being FinSequence of bool the carrier of Segre_Product A
            such that
            A24: E.1=product c1 & E.(len E)=product c3 &
            (for i being Nat st i in dom E holds E.i is Segre-Coset of A) &
            for i being Nat st 1<=i & i<len E for Ei,Ei1 being Segre-Coset of A
            st Ei=E.i & Ei1=E.(i+1)
            holds Ei misses Ei1 & Ei '||' Ei1 by A10,A11,A21,A22,A23;

            A25: not p in c2.j by A13,A16,A17,TARSKI:def 1;
            then consider F being FinSequence of bool the carrier of
            Segre_Product A such that
            A26: F.1=product c3 & F.(len F)=product c2 &
            (for i being Nat st i in dom F holds F.i is Segre-Coset of A) &
            for i being Nat st 1<=i & i<len F for Di,Di1 being Segre-Coset of A
            st Di=F.i & Di1=F.(i+1)
            holds Di misses Di1 & Di '||' Di1 by A1,A11,A22,Th22;
            reconsider D = E ^' F as FinSequence of bool the carrier of
            Segre_Product A;
            take D;
            1 in dom E by A24,FUNCT_1:def 4; then
            1 <= len E by FINSEQ_3:27;
            hence D.1=product c1 by A24,GRAPH_2:14;
            1 in dom F by A26,FUNCT_1:def 4; then
            A27: 1 <= len F by FINSEQ_3:27;
            now
              assume len F=1; then
              product c3 = product c2 by A26; then
              A28: c3 = c2 by PUA2MSS1:2;
              dom c2 = I by PBOOLE:def 3; then
              c3.j = {p} by FUNCT_7:33;
              hence contradiction by A25,A28,TARSKI:def 1;
            end; then
            A29: len F > 1 by A27,XXREAL_0:1;
            hence D.(len D)=product c2 by A26,GRAPH_2:16;

            thus for i being Nat st i in dom D holds D.i is Segre-Coset of A
            proof
              let i be Nat;
              assume i in dom D; then
              A30: D.i in rng D by FUNCT_1:12;
              rng D c= rng E \/ rng F by GRAPH_2:17; then
              D.i in rng E \/ rng F by A30; then
              A31: D.i in rng E or D.i in rng F by XBOOLE_0:def 2;
              per cases by A31;
              suppose D.i in rng E; then
                consider i0 being set such that
                A32: i0 in dom E & D.i = E.i0 by FUNCT_1:def 5;
                reconsider i0 as Element of NAT by A32;
                i0 is Nat;
                hence thesis by A24,A32;
              end;
              suppose D.i in rng F; then
                consider i0 being set such that
                A33: i0 in dom F & D.i = F.i0 by FUNCT_1:def 5;
                reconsider i0 as Element of NAT by A33;
                i0 is Nat;
                hence thesis by A26,A33;
              end;
            end;
            thus for i being Nat st 1<=i & i<len D for Di,Di1 being Segre-Coset
            of A st Di=D.i & Di1=D.(i+1) holds Di misses Di1 & Di '||' Di1
            proof
              let i be Nat;
              assume A34: 1<=i & i<len D;
              let Di,Di1 be Segre-Coset of A such that
              A35: Di=D.i & Di1=D.(i+1);
              reconsider i as Element of NAT by ORDINAL1:def 13;
              per cases;
              suppose A36: i<len E; then
                A37: Di=E.i by A34,A35,GRAPH_2:14;
                i+1 <= len E by A36,NAT_1:13; then
                1<=i+1 & i+1 <= len E by NAT_1:11; then
                Di1=E.(i+1) by A35,GRAPH_2:14;
                hence Di misses Di1 & Di '||' Di1 by A24,A34,A36,A37;
              end;
              suppose i>=len E; then
                consider k being Nat such that
                A38: i=len E+k by NAT_1:10;
                reconsider k as Element of NAT by ORDINAL1:def 13;
                len F > 0 by A29; then
                F <> {} by FINSEQ_1:25; then
                A39: len D + 1 = len E + len F by GRAPH_2:13;
                per cases;
                suppose k>0; then
                  A40: 0+1<=k by NAT_1:13;
                  len E + k < len D by A34,A38; then
                  len E + k + 1 < len D + 1 by XREAL_1:8; then
                  len E + (k + 1) < len E + len F by A39; then
                  A41: k+1 < len F by XREAL_1:8;
                  k < k+1 by NAT_1:13; then
                  k < len F by A41,XXREAL_0:2; then
                  A42: Di=F.(k+1) by A35,A38,A40,GRAPH_2:15;
                  A43: Di1=D.(len E + (k + 1)) by A35,A38;
                  1 <= k+1 by NAT_1:11; then
                  A44: Di1=F.((k+1)+1) by A41,A43,GRAPH_2:15;
                  1 <= k+1 & k+1 < len F by A41,NAT_1:11;
                  hence Di misses Di1 & Di '||' Di1 by A26,A42,A44;
                end;
                suppose k=0; then
                  A45: i = len E by A38; then
                  A46: Di = F.1 by A24,A26,A34,A35,GRAPH_2:14;
                  Di1 = F.(1+1) by A29,A35,A45,GRAPH_2:15;
                  hence Di misses Di1 & Di '||' Di1 by A26,A29,A46;
                end;
              end;
            end;
          end;
          suppose product c1 meets product c3; then
            A47: c1=c3 by A11,A21,A22,Th11;
            not p in c2.j by A13,A16,A17,TARSKI:def 1;
            hence ex D being FinSequence of bool the carrier of Segre_Product A
            st D.1=product c1 & D.(len D)=product c2 &
            (for i being Nat st i in dom D holds D.i is Segre-Coset of A) &
            for i being Nat st 1<=i & i<len D for Di,Di1 being Segre-Coset of A
            st Di=D.i & Di1=D.(i+1)
            holds Di misses Di1 & Di '||' Di1 by A1,A11,A47,Th22;
          end;
        end;
      end;
      for n being Nat holds P[n] from NAT_1:sch 2(A5,A9); then
      P[diff(b1,b2)]; then
      consider D being FinSequence of bool the carrier of Segre_Product A
      such that
      A48: D.1=product b1 & D.(len D)=product b2 &
      (for i being Nat st i in dom D holds D.i is Segre-Coset of A) &
      for i being Nat st 1<=i & i<len D for Di,Di1 being Segre-Coset of A st
      Di=D.i & Di1=D.(i+1) holds Di misses Di1 & Di '||' Di1 by A2,A3,A4;
      take D;
      thus D.1=B1 & D.(len D)=B2 by A3,A48;
      thus (for i being Nat st i in dom D holds D.i is Segre-Coset of A) &
      for i being Nat st 1<=i & i<len D for Di,Di1 being Segre-Coset of A st
      Di=D.i & Di1=D.(i+1) holds Di misses Di1 & Di '||' Di1 by A48;
    end;

    given D being FinSequence of bool the carrier of Segre_Product A such that
    A49: D.1=B1 & D.(len D)=B2 &
    (for i being Nat st i in dom D holds D.i is Segre-Coset of A) &
    for i being Nat st 1<=i & i<len D
    for Di,Di1 being Segre-Coset of A st Di=D.i & Di1=D.(i+1)
    holds Di misses Di1 & Di '||' Di1;
    defpred P[Nat] means for bb being Segre-like non trivial-yielding
    ManySortedSubset of Carrier A st
    product bb = D.$1 holds indx(b1) = indx(bb);
    A50: P[0]
    proof
      let bb be Segre-like non trivial-yielding ManySortedSubset of Carrier A
      such that
      A51: product bb = D.0;
      not 0 in dom D by FINSEQ_3:26;
      hence indx(b1) = indx(bb) by A51,FUNCT_1:def 4;
    end;
    A52:
    now
      let k be Nat;
      assume A53: P[k];
      thus P[k+1]
      proof
        let bb be Segre-like non trivial-yielding ManySortedSubset of Carrier A
        such that
        A54: product bb = D.(k+1);
        A55: k+1 in dom D by A54,FUNCT_1:def 4; then
        A56: 1<=k+1 & k+1 <= len D by FINSEQ_3:27;
        per cases;
        suppose k=0; then
          product bb = product b1 by A3,A49,A54;
          hence indx(b1) = indx(bb) by PUA2MSS1:2;
        end;
        suppose 0<k; then
          0+1<k+1 by XREAL_1:8; then
          A57: 1<=k by NAT_1:13;
          k <= len D by A56,NAT_1:13; then
          k in dom D by A57,FINSEQ_3:27; then
          reconsider B0=D.k as Segre-Coset of A by A49;
          reconsider B3=D.(k+1) as Segre-Coset of A by A49,A55;
          consider b0 being Segre-like non trivial-yielding ManySortedSubset of
          Carrier A such that
          A58: B0 = product b0 & b0.indx(b0)=[#](A.indx(b0)) by PENCIL_2:def 2;
          A59: indx(b1) = indx(b0) by A53,A58;
          k < len D by A56,NAT_1:13; then
          B0 misses B3 & B0 '||' B3 by A49,A57; then
          indx(b0) = indx(bb) by A54,A58,Th21;
          hence indx(b1) = indx(bb) by A59;
        end;
      end;
    end;
    for n being Nat holds P[n] from NAT_1:sch 2(A50,A52);
    hence indx(b1) = indx(b2) by A3,A49;
  end;

theorem Th24:
  for I being finite non empty set
  for A being PLS-yielding ManySortedSet of I st
  for i being Element of I holds A.i is strongly_connected
  for f being Collineation of Segre_Product A
  for B1,B2 being Segre-Coset of A
  for b1,b2,b3,b4 being Segre-like non trivial-yielding ManySortedSubset of
  Carrier A st B1 = product b1 & B2 = product b2 &
  f.:B1 = product b3 & f.:B2 = product b4 holds
  indx(b1)=indx(b2) implies indx(b3)=indx(b4)
  proof
    let I be finite non empty set;
    let A be PLS-yielding ManySortedSet of I such that
    A1: for i being Element of I holds A.i is strongly_connected;
    A2:
    now
      let i be Element of I;
      A.i is strongly_connected by A1;
      hence A.i is connected by Th4;
    end;
    let f be Collineation of Segre_Product A;
    let B1,B2 be Segre-Coset of A;
    let b1,b2,b3,b4 be Segre-like non trivial-yielding ManySortedSubset of
    Carrier A such that
    A3: B1 = product b1 & B2 = product b2 & f.:B1 = product b3 &
    f.:B2 = product b4;
    assume A4: indx(b1)=indx(b2);
    per cases;
    suppose A5: B1 misses B2; then
      consider D being FinSequence of bool the carrier of Segre_Product A
      such that
      A6: D.1=B1 & D.(len D)=B2 &
      (for i being Nat st i in dom D holds D.i is Segre-Coset of A) &
      for i being Nat st 1<=i & i<len D for Di,Di1 being Segre-Coset of A st
      Di=D.i & Di1=D.(i+1)
      holds Di misses Di1 & Di '||' Di1 by A2,A3,A4,Th23;
      deffunc F(Nat)=f.:(D.$1);
      consider E being FinSequence of bool the carrier of Segre_Product A
      such that
      A7: len E = len D &
      for j being Element of NAT st j in Seg len D holds E.j = F(j)
      from FINSEQ_2:sch 1;
      1 in dom D by A3,A6,FUNCT_1:def 4; then
      1 in Seg len D by FINSEQ_1:def 3; then
      A8: E.1 = f.:B1 by A6,A7;
      len E in dom D by A3,A6,A7,FUNCT_1:def 4; then
      len E in Seg len D by FINSEQ_1:def 3; then
      A9: E.(len E) = f.:B2 by A6,A7;
      A10: for i being Nat st i in dom E holds E.i is Segre-Coset of A
      proof
        let i be Nat;
        assume i in dom E; then
        A11: i in Seg len D by A7,FINSEQ_1:def 3; then
        i in dom D by FINSEQ_1:def 3; then
        reconsider di=D.i as Segre-Coset of A by A6;
        E.i = f.:di by A7,A11;
        hence E.i is Segre-Coset of A by A1,PENCIL_2:24;
      end;
      A12: for i being Nat st 1<=i & i<len E for Ei,Ei1 being Segre-Coset of A
      st Ei=E.i & Ei1=E.(i+1) holds Ei misses Ei1 & Ei '||' Ei1
      proof
        let i be Nat;
        assume A13: 1<=i & i<len E;
        let Ei,Ei1 be Segre-Coset of A;
        assume A14: Ei=E.i & Ei1=E.(i+1);
        i in Seg len D by A7,A13,FINSEQ_1:3; then
        A15: Ei=f.:(D.i) by A7,A14;
        1<=i+1 & i+1 <= len E by A13,NAT_1:13; then
        i+1 in Seg len D by A7,FINSEQ_1:3; then
        A16: Ei1=f.:(D.(i+1)) by A7,A14;
        i in dom D by A7,A13,FINSEQ_3:27; then
        reconsider Di=D.i as Segre-Coset of A by A6;
        1<=i+1 & i+1 <= len E by A13,NAT_1:13; then
        i+1 in dom D by A7,FINSEQ_3:27; then
        reconsider Di1=D.(i+1) as Segre-Coset of A by A6;
        A17: Di misses Di1 & Di '||' Di1 by A6,A7,A13;
        f is bijective Function of the carrier of
        Segre_Product A, the carrier of Segre_Product A by PENCIL_2:def 4;
        hence Ei misses Ei1 by A15,A16,A17,FUNCT_1:125;
        thus Ei '||' Ei1 by A15,A16,A17,Th20;
      end;
      reconsider fB1=f.:B1,fB2=f.:B2 as Segre-Coset of A by A1,PENCIL_2:24;
      f is bijective Function of the carrier of Segre_Product A,
      the carrier of Segre_Product A by PENCIL_2:def 4; then
      fB1 misses fB2 by A5,FUNCT_1:125;
      hence indx(b3)=indx(b4) by A2,A3,A8,A9,A10,A12,Th23;
    end;
    suppose B1 meets B2; then
      B1=B2 by A3,A4,Th11;
      hence indx(b3)=indx(b4) by A3,PUA2MSS1:2;
    end;
  end;

theorem Th25:
  for I being finite non empty set
  for A being PLS-yielding ManySortedSet of I st
  for i being Element of I holds A.i is strongly_connected
  for f being Collineation of Segre_Product A
  ex s being Permutation of I st
  for i,j being Element of I
  holds s.i=j iff
  for B1 being Segre-Coset of A
  for b1,b2 being Segre-like non trivial-yielding ManySortedSubset of Carrier A
  st B1 = product b1 & f.:B1 = product b2 holds indx(b1)=i implies indx(b2)=j
  proof
    let I be finite non empty set;
    let A be PLS-yielding ManySortedSet of I;
    assume A1: for i be Element of I holds A.i is strongly_connected;
    let f be Collineation of Segre_Product A;

    deffunc A() = I;
    defpred P[set,set] means
    for B1 being Segre-Coset of A
    for b1,b2 being Segre-like non trivial-yielding ManySortedSubset of
    Carrier A st B1 = product b1 & f.:B1 = product b2 holds
    indx(b1)=$1 implies indx(b2)=$2;

    A2:  for x being Element of A()
    ex y being Element of A() st P[x,y]
    proof
      let x be Element of I;
      dom A = I by PBOOLE:def 3; then
      A.x in rng A by FUNCT_1:12; then
      A.x is non trivial by PENCIL_1:def 18; then
      the carrier of A.x is non trivial by STRUCT_0:def 9; then
      reconsider C=[#](A.x) as non trivial set;
      consider p0 being Point of Segre_Product A;
      reconsider p0 as Element of Carrier A by Th6;
      reconsider p={p0} as ManySortedSubset of Carrier A by PENCIL_1:11;
      reconsider b=p+*(x,C) as Segre-like non trivial-yielding ManySortedSubset
      of Carrier A by PENCIL_1:9,10,PENCIL_2:7;
      dom p=I by PBOOLE:def 3; then
      A3: b.x = C by FUNCT_7:33; then
      A4: indx(b)=x by PENCIL_1:def 21; then
      A5: b.indx(b)=[#](A.indx(b)) by A3;
      product b c= the carrier of Segre_Product A
      proof
        let a be set;
        assume a in product b; then consider f being Function such that
        A6: a=f & dom f=dom b & for x being set st x in dom b holds
        f.x in b.x by CARD_3:def 5;
        A7: dom Carrier A = I by PBOOLE:def 3; then
        A8: dom f = dom Carrier A by A6,PBOOLE:def 3;
        now
          let i be set; assume A9: i in dom Carrier A; then
          A10: f.i in b.i by A6,A8;
          reconsider i1=i as Element of I by A7,A9;
          per cases;
          suppose i1=x;
            hence f.i in (Carrier A).i by A3,A10,Th7;
          end;
          suppose i1<>x; then
            f.i1 in p.i1 by A10,FUNCT_7:34; then
            f.i1 in {p0.i1} by PZFMISC1:def 1; then
            f.i1 = p0.i1 by TARSKI:def 1; then
            A11: f.i1 is Element of (Carrier A).i1 by PBOOLE:def 17;
            [#](A.i1) is non empty; then
            (Carrier A).i1 is non empty by Th7;
            hence f.i in (Carrier A).i by A11;
          end;
        end; then
        A12: a in product Carrier A by A6,A8,CARD_3:def 5;
        Segre_Product A = TopStruct(#product Carrier A, Segre_Blocks A#)
        by PENCIL_1:def 23;
        hence a in the carrier of Segre_Product A by A12;
      end;
      then reconsider B=product b as Segre-Coset of A by A5,PENCIL_2:def 2;
      reconsider fB=f.:B as Segre-Coset of A by A1,PENCIL_2:24;
      consider b0 being Segre-like non trivial-yielding ManySortedSubset of
      Carrier A such that
      A13: fB = product b0 & b0.indx(b0)=[#](A.indx(b0)) by PENCIL_2:def 2;
      take y=indx(b0);
      let B1 being Segre-Coset of A;
      let b1,b2 being Segre-like non trivial-yielding ManySortedSubset of
      Carrier A;
      assume B1 = product b1 & f.:B1 = product b2 & indx(b1)=x;
      hence indx(b2)=y by A1,A4,A13,Th24;
    end;
    A14:  for y being Element of A()
    ex x being Element of A() st P[x,y]
    proof
      let x be Element of I;
      dom A = I by PBOOLE:def 3; then
      A.x in rng A by FUNCT_1:12; then
      A.x is non trivial by PENCIL_1:def 18; then
      the carrier of A.x is non trivial by STRUCT_0:def 9; then
      reconsider C=[#](A.x) as non trivial set;
      consider p0 being Point of Segre_Product A;
      reconsider p0 as Element of Carrier A by Th6;
      reconsider p={p0} as ManySortedSubset of Carrier A by PENCIL_1:11;
      reconsider b=p+*(x,C) as Segre-like non trivial-yielding ManySortedSubset
      of Carrier A by PENCIL_1:9,10,PENCIL_2:7;
      dom p=I by PBOOLE:def 3; then
      A15: b.x = C by FUNCT_7:33; then
      A16: indx(b)=x by PENCIL_1:def 21; then
      A17: b.indx(b)=[#](A.indx(b)) by A15;
      product b c= the carrier of Segre_Product A
      proof
        let a be set;
        assume a in product b; then consider f being Function such that
        A18: a=f & dom f=dom b & for x being set st x in dom b holds
        f.x in b.x by CARD_3:def 5;
        A19: dom Carrier A = I by PBOOLE:def 3; then
        A20: dom f = dom Carrier A by A18,PBOOLE:def 3;
        now
          let i be set; assume A21: i in dom Carrier A; then
          A22: f.i in b.i by A18,A20;
          reconsider i1=i as Element of I by A19,A21;
          per cases;
          suppose i1=x;
            hence f.i in (Carrier A).i by A15,A22,Th7;
          end;
          suppose i1<>x; then
            f.i1 in p.i1 by A22,FUNCT_7:34; then
            f.i1 in {p0.i1} by PZFMISC1:def 1; then
            f.i1 = p0.i1 by TARSKI:def 1; then
            A23: f.i1 is Element of (Carrier A).i1 by PBOOLE:def 17;
            [#](A.i1) is non empty; then
            (Carrier A).i1 is non empty by Th7;
            hence f.i in (Carrier A).i by A23;
          end;
        end; then
        A24: a in product Carrier A by A18,A20,CARD_3:def 5;
        Segre_Product A = TopStruct(#product Carrier A, Segre_Blocks A#)
        by PENCIL_1:def 23;
        hence a in the carrier of Segre_Product A by A24;
      end;
      then reconsider B=product b as Segre-Coset of A by A17,PENCIL_2:def 2;
      reconsider fB=f"B as Segre-Coset of A by A1,PENCIL_2:25;
      consider b0 being Segre-like non trivial-yielding ManySortedSubset of
      Carrier A such that
      A25: fB = product b0 & b0.indx(b0)=[#](A.indx(b0)) by PENCIL_2:def 2;
      take y=indx(b0);
      let B1 being Segre-Coset of A;
      let b1,b2 being Segre-like non trivial-yielding ManySortedSubset of
      Carrier A;
      assume A26: B1 = product b1 & f.:B1 = product b2 & indx(b1)=y;
      f is bijective by PENCIL_2:def 4; then
      f is onto by FUNCT_2:def 4; then
      rng f = the carrier of Segre_Product A by FUNCT_2:def 3; then
      f.:fB = product b by FUNCT_1:147;
      hence indx(b2)=x by A1,A16,A25,A26,Th24;
    end;
    A27:  for x,y,x' being Element of A()
    st P[x,y] & P[x',y] holds x=x'
    proof
      let x,y,x' be Element of A();
      assume A28:
      (for B1 being Segre-Coset of A
      for b1,b2 being Segre-like non trivial-yielding ManySortedSubset of
      Carrier A st B1 = product b1 & f.:B1 = product b2 holds
      indx(b1)=x implies indx(b2)=y) &
      (for B1 being Segre-Coset of A
      for b1,b2 being Segre-like non trivial-yielding ManySortedSubset of
      Carrier A st B1 = product b1 & f.:B1 = product b2 holds
      indx(b1)=x' implies indx(b2)=y);
      consider b1 being Segre-like non trivial-yielding ManySortedSubset of
      Carrier A such that
      A29: indx(b1) = x & product b1 is Segre-Coset of A by Th8;
      reconsider B1 = product b1 as Segre-Coset of A by A29;
      reconsider fB1=f.:B1 as Segre-Coset of A by A1,PENCIL_2:24;
      consider L1 being Segre-like non trivial-yielding ManySortedSubset of
      Carrier A such that
      A30: fB1 = product L1 & L1.indx(L1) = [#](A.indx(L1)) by PENCIL_2:def 2;
      A31: indx(L1)=y by A28,A29,A30;
      consider b2 being Segre-like non trivial-yielding ManySortedSubset of
      Carrier A such that
      A32: indx(b2) = x' & product b2 is Segre-Coset of A by Th8;
      reconsider B2 = product b2 as Segre-Coset of A by A32;
      reconsider fB2=f.:B2 as Segre-Coset of A by A1,PENCIL_2:24;
      consider L2 being Segre-like non trivial-yielding ManySortedSubset of
      Carrier A such that
      A33: fB2 = product L2 & L2.indx(L2) = [#](A.indx(L2)) by PENCIL_2:def 2;
      A34: indx(L2)=y by A28,A32,A33;
      reconsider ff=f" as Collineation of Segre_Product A by PENCIL_2:13;
      f is bijective by PENCIL_2:def 4; then
      A35: f is onto one-to-one by FUNCT_2:def 4; then
      rng f = [#]Segre_Product A by FUNCT_2:def 3; then
      A36: ff = (f qua Function)" by A35,TOPS_2:def 4;
      A37: ff.:fB1 = f"fB1 by A35,A36,FUNCT_1:155; then
      A38: ff.:fB1 c= B1 by A35,FUNCT_1:152;
      dom f = the carrier of Segre_Product A by FUNCT_2:def 1; then
      B1 c= ff.:fB1 by A37,FUNCT_1:146; then
      A39: B1=ff.:fB1 by A38,XBOOLE_0:def 10;
      A40: ff.:fB2 = f"fB2 by A35,A36,FUNCT_1:155; then
      A41: ff.:fB2 c= B2 by A35,FUNCT_1:152;
      dom f = the carrier of Segre_Product A by FUNCT_2:def 1; then
      B2 c= ff.:fB2 by A40,FUNCT_1:146; then
      A42: B2=ff.:fB2 by A41,XBOOLE_0:def 10;
      thus x=x' by A1,A29,A30,A31,A32,A33,A34,A39,A42,Th24;
    end;
    A43:  for x,y,y' being Element of A()
    st P[x,y] & P[x,y'] holds y=y'
    proof
      let x,y,y' be Element of A();
      assume A44:
      (for B1 being Segre-Coset of A
      for b1,b2 being Segre-like non trivial-yielding ManySortedSubset of
      Carrier A st B1 = product b1 & f.:B1 = product b2 holds
      indx(b1)=x implies indx(b2)=y) &
      (for B1 being Segre-Coset of A
      for b1,b2 being Segre-like non trivial-yielding ManySortedSubset of
      Carrier A st B1 = product b1 & f.:B1 = product b2 holds
      indx(b1)=x implies indx(b2)=y');
      consider b1 being Segre-like non trivial-yielding ManySortedSubset of
      Carrier A such that
      A45: indx(b1) = x & product b1 is Segre-Coset of A by Th8;
      reconsider B1 = product b1 as Segre-Coset of A by A45;
      reconsider fB1=f.:B1 as Segre-Coset of A by A1,PENCIL_2:24;
      consider L1 being Segre-like non trivial-yielding ManySortedSubset of
      Carrier A such that
      A46: fB1 = product L1 & L1.indx(L1) = [#](A.indx(L1)) by PENCIL_2:def 2;
      indx(L1)=y by A44,A45,A46;
      hence y=y' by A44,A45,A46;
    end;

    thus ex f being Permutation of A() st
    for x,y being Element of A() holds f.x=y iff P[x,y]
    from TRANSGEO:sch 1(A2,A14,A27,A43);
  end;

definition
  let I be finite non empty set;
  let A be PLS-yielding ManySortedSet of I such that
  A1: for i being Element of I holds A.i is strongly_connected;
  let f be Collineation of Segre_Product A;
  func permutation_of_indices(f) -> Permutation of I means :Def3:
  for i,j being Element of I
  holds it.i=j iff
  for B1 being Segre-Coset of A
  for b1,b2 being Segre-like non trivial-yielding ManySortedSubset of Carrier A
  st B1 = product b1 & f.:B1 = product b2 holds indx(b1)=i implies indx(b2)=j;
  existence by A1,Th25;
  uniqueness
  proof
    let s,t be Permutation of I such that
    A2: for i,j being Element of I
    holds s.i=j iff
    for B1 being Segre-Coset of A
    for b1,b2 being Segre-like non trivial-yielding ManySortedSubset of
    Carrier A st
    B1 = product b1 & f.:B1 = product b2 holds indx(b1)=i implies indx(b2)=j
    and
    A3: for i,j being Element of I
    holds t.i=j iff
    for B1 being Segre-Coset of A
    for b1,b2 being Segre-like non trivial-yielding ManySortedSubset of
    Carrier A st
    B1 = product b1 & f.:B1 = product b2 holds indx(b1)=i implies indx(b2)=j;
    A4: dom s = I & dom t = I by FUNCT_2:def 1;
    now
      let a be set;
      assume a in I; then
      reconsider i=a as Element of I;
      reconsider j1=s.i as Element of I;
      reconsider j2=t.i as Element of I;
      consider b1 being Segre-like non trivial-yielding ManySortedSubset of
      Carrier A such that
      A5: indx(b1)=i & product b1 is Segre-Coset of A by Th8;
      reconsider B1=product b1 as Segre-Coset of A by A5;
      reconsider fB=f.:B1 as Segre-Coset of A by A1,PENCIL_2:24;
      consider b2 being Segre-like non trivial-yielding ManySortedSubset of
      Carrier A such that
      A6: fB = product b2 & b2.indx(b2) = [#](A.indx(b2)) by PENCIL_2:def 2;
      j1 = indx(b2) by A2,A5,A6 .= j2 by A3,A5,A6;
      hence s.a=t.a;
    end;
    hence s=t by A4,FUNCT_1:9;
  end;
end;

begin :: Canonical embeddings and automorphisms of Segre product

definition
  let I be finite non empty set;
  let A be PLS-yielding ManySortedSet of I such that
  A1: for i being Element of I holds A.i is strongly_connected;
  let f be Collineation of Segre_Product A;
  let b1 be Segre-like non trivial-yielding ManySortedSubset of Carrier A
  such that A2: product b1 is Segre-Coset of A;
  func canonical_embedding(f,b1) ->
  Function of A.indx(b1),A.(permutation_of_indices(f).indx(b1))
  means :Def4:
  it is isomorphic &
  for a being ManySortedSet of I st
  a is Point of Segre_Product A & a in product b1
  for b being ManySortedSet of I st b=f.a
  holds b.(permutation_of_indices(f).indx(b1))=it.(a.indx(b1));
  existence
  proof
    set s=permutation_of_indices(f);
    set i=indx(b1);
    A3: for i,j being Element of I
    holds s.i=j iff
    for B1 being Segre-Coset of A
    for b1,b2 being Segre-like non trivial-yielding ManySortedSubset of
    Carrier A st
    B1 = product b1 & f.:B1 = product b2 holds
    indx(b1)=i implies indx(b2)=j by A1,Def3;
    A4: dom f = the carrier of Segre_Product A by FUNCT_2:def 1;
    f is bijective by PENCIL_2:def 4; then
    f is onto by FUNCT_2:def 4; then
    A5: rng f = the carrier of Segre_Product A by FUNCT_2:def 3;
    f is bijective by PENCIL_2:def 4; then
    A6: f is one-to-one by FUNCT_2:def 4;
    A7: f" = (f qua Function)" by A5,A6,TOPS_2:def 4;

    reconsider B1=product b1 as Segre-Coset of A by A2;
    reconsider B2=f.:B1 as Segre-Coset of A by A1,PENCIL_2:24;
    consider b2 being Segre-like non trivial-yielding ManySortedSubset of
    Carrier A such that
    A8: product b2=B2 & b2.indx(b2) = [#](A.indx(b2)) by PENCIL_2:def 2;
    A9: indx(b2)=s.i by A3,A8;
    set j=indx(b2);
    A10: B1 c= f"B2 by A4,FUNCT_1:146;
    f"B2 c= B1 by A6,FUNCT_1:152; then
    A11: f"B2 = B1 by A10,XBOOLE_0:def 10;

    defpred P[set,set] means for J being ManySortedSet of I st
    J in f.:(product(b1+*(i,{$1}))) holds $2 = J.(s.i);
    deffunc A() = the carrier of A.i;
    A12: Segre_Product A = TopStruct(#product Carrier A, Segre_Blocks A#)
    by PENCIL_1:def 23;
    A13: for x,y1,y2 being set st x in A() & P[x,y1] & P[x,y2] holds y1 = y2
    proof
      let x,y1,y2 be set;
      assume A14: x in A() & P[x,y1] & P[x,y2];
      consider bb being set such that
      A15: bb in B1 by XBOOLE_0:def 1;
      consider bf being Function such that
      A16: bf=bb & dom bf=dom b1 & for o being set st o in dom b1 holds
      bf.o in b1.o by A15,CARD_3:def 5;
      A17: dom b1=I & dom Carrier A = I by PBOOLE:def 3; then
      reconsider bb as ManySortedSet of I by A16,PBOOLE:def 3;
      set bbx=bb+*(i,x);
      A18: dom bbx= I by PBOOLE:def 3 .= dom Carrier A by PBOOLE:def 3;
      now
        let o be set;
        assume A19: o in dom Carrier A; then
        reconsider u=o as Element of I by PBOOLE:def 3;
        per cases;
        suppose A20: u=i; then
          bbx.u=x by A16,A17,FUNCT_7:33; then
          bbx.u in [#](A.i) by A14;
          hence bbx.o in (Carrier A).o by A20,Th7;
        end;
        suppose u<>i; then
          bbx.u = bb.u by FUNCT_7:34; then
          A21: bbx.u in b1.u by A15,A17,CARD_3:18;
          b1 c= Carrier A by PBOOLE:def 23; then
          b1.o c= (Carrier A).o by A17,A19,PBOOLE:def 5;
          hence bbx.o in (Carrier A).o by A21;
        end;
      end; then
      bbx in product Carrier A by A18,CARD_3:18; then
      reconsider bbx1=bbx as Point of Segre_Product A by A12;
      A22: bbx1 in dom f by A4;
B22:  {bbx qua set} = product(b1+*(i,{x}))
      proof
        thus {bbx qua set} c= product(b1+*(i,{x}))
        proof
          let o be set;
          assume o in {bbx qua set}; then
          A23: o = bbx by TARSKI:def 1;
          A24
: dom bbx = I by PBOOLE:def 3 .= dom (b1+*(i,{x})) by PBOOLE:def 3;
          now
            let z be set;
            assume z in dom (b1+*(i,{x})); then
            A25: z in I by PBOOLE:def 3; then
            A26: z in dom bb by PBOOLE:def 3;
            per cases;
            suppose A27: z=i; then
              bbx.z = x by A26,FUNCT_7:33; then
              bbx.z in {x} by TARSKI:def 1;
              hence bbx.z in (b1+*(i,{x})).z by A17,A27,FUNCT_7:33;
            end;
            suppose A28: z<>i; then
              bbx.z = bb.z by FUNCT_7:34; then
              bbx.z in b1.z by A15,A17,A25,CARD_3:18;
              hence bbx.z in (b1+*(i,{x})).z by A28,FUNCT_7:34;
            end;
          end;
          hence o in product(b1+*(i,{x})) by A23,A24,CARD_3:18;
        end;
        let o be set;
        assume o in product(b1+*(i,{x})); then
        consider u being Function such that
        A29: u=o & dom u=dom (b1+*(i,{x})) &
        for z being set st z in dom (b1+*(i,{x})) holds
        u.z in (b1+*(i,{x})).z by CARD_3:def 5;
        A30: dom u = I by A29,PBOOLE:def 3 .= dom bbx by PBOOLE:def 3;
        now
          let z be set;
          assume A31: z in dom u; then
          A32: z in I by A29,PBOOLE:def 3; then
          reconsider zz=z as Element of I;
          A33: u.z in (b1+*(i,{x})).z by A29,A31;
          per cases;
          suppose A34: zz=i; then
            u.z in {x} by A17,A33,FUNCT_7:33; then
            u.z = x by TARSKI:def 1;
            hence u.z = bbx.z by A16,A17,A34,FUNCT_7:33;
          end;
          suppose A35: zz<>i; then
            b1.zz is non empty trivial by PENCIL_1:def 21; then
            consider o being set such that
            A36: b1.z = {o} by REALSET1:def 4;
            u.z in b1.z by A33,A35,FUNCT_7:34; then
            A37: u.z = o by A36,TARSKI:def 1;
            bbx.z = bb.z by A35,FUNCT_7:34; then
            bbx.z in {o} by A16,A17,A32,A36;
            hence u.z = bbx.z by A37,TARSKI:def 1;
          end;
        end; then
        u=bbx by A30,FUNCT_1:9;
        hence o in {bbx qua set} by A29,TARSKI:def 1;
      end;
      A38: Im(f,bbx) = {f.bbx} by A22,FUNCT_1:117;
      reconsider fbbx=f.bbx1 as ManySortedSet of I by PENCIL_1:14;
      A39: fbbx in Im(f,bbx) by A38,TARSKI:def 1;
      thus y1 = fbbx.(s.i) by A14,A39,B22
      .= y2 by A14,A39,B22;
    end;
    A40: for x being set st x in A() ex y being set st P[x,y]
    proof
      let x be set;
      assume A41: x in A();
      consider bb being set such that
      A42: bb in B1 by XBOOLE_0:def 1;
      consider bf being Function such that
      A43: bf=bb & dom bf=dom b1 & for o being set st o in dom b1 holds
      bf.o in b1.o by A42,CARD_3:def 5;
      A44: dom b1=I & dom Carrier A = I by PBOOLE:def 3; then
      reconsider bb as ManySortedSet of I by A43,PBOOLE:def 3;
      set bbx=bb+*(i,x);
      A45: dom bbx= I by PBOOLE:def 3 .= dom Carrier A by PBOOLE:def 3;
      now
        let o be set;
        assume A46: o in dom Carrier A; then
        reconsider u=o as Element of I by PBOOLE:def 3;
        per cases;
        suppose A47: u=i; then
          bbx.u=x by A43,A44,FUNCT_7:33; then
          bbx.u in [#](A.i) by A41;
          hence bbx.o in (Carrier A).o by A47,Th7;
        end;
        suppose u<>i; then
          bbx.u = bb.u by FUNCT_7:34; then
          A48: bbx.u in b1.u by A42,A44,CARD_3:18;
          b1 c= Carrier A by PBOOLE:def 23; then
          b1.o c= (Carrier A).o by A44,A46,PBOOLE:def 5;
          hence bbx.o in (Carrier A).o by A48;
        end;
      end; then
      bbx in product Carrier A by A45,CARD_3:18; then
      reconsider bbx1=bbx as Point of Segre_Product A by A12;
      dom f = the carrier of Segre_Product A by FUNCT_2:def 1; then
      A49: bbx1 in dom f;
X:    {bbx qua set} = product(b1+*(i,{x}))
      proof
        thus {bbx qua set} c= product(b1+*(i,{x}))
        proof
          let o be set;
          assume o in {bbx qua set}; then
          A50: o = bbx by TARSKI:def 1;
          A51
: dom bbx = I by PBOOLE:def 3 .= dom (b1+*(i,{x})) by PBOOLE:def 3;
          now
            let z be set;
            assume z in dom (b1+*(i,{x})); then
            A52: z in I by PBOOLE:def 3; then
            A53: z in dom bb by PBOOLE:def 3;
            per cases;
            suppose A54: z=i; then
              bbx.z = x by A53,FUNCT_7:33; then
              bbx.z in {x} by TARSKI:def 1;
              hence bbx.z in (b1+*(i,{x})).z by A44,A54,FUNCT_7:33;
            end;
            suppose A55: z<>i; then
              bbx.z = bb.z by FUNCT_7:34; then
              bbx.z in b1.z by A42,A44,A52,CARD_3:18;
              hence bbx.z in (b1+*(i,{x})).z by A55,FUNCT_7:34;
            end;
          end;
          hence o in product(b1+*(i,{x})) by A50,A51,CARD_3:18;
        end;
        let o be set;
        assume o in product(b1+*(i,{x})); then
        consider u being Function such that
        A56: u=o & dom u=dom (b1+*(i,{x})) &
        for z being set st z in dom (b1+*(i,{x})) holds
        u.z in (b1+*(i,{x})).z by CARD_3:def 5;
        A57: dom u = I by A56,PBOOLE:def 3 .= dom bbx by PBOOLE:def 3;
        now
          let z be set;
          assume A58: z in dom u; then
          A59: z in I by A56,PBOOLE:def 3; then
          reconsider zz=z as Element of I;
          A60: u.z in (b1+*(i,{x})).z by A56,A58;
          per cases;
          suppose A61: zz=i; then
            u.z in {x} by A44,A60,FUNCT_7:33; then
            u.z = x by TARSKI:def 1;
            hence u.z = bbx.z by A43,A44,A61,FUNCT_7:33;
          end;
          suppose A62: zz<>i; then
            b1.zz is non empty trivial by PENCIL_1:def 21; then
            consider o being set such that
            A63: b1.z = {o} by REALSET1:def 4;
            u.z in b1.z by A60,A62,FUNCT_7:34; then
            A64: u.z = o by A63,TARSKI:def 1;
            bbx.z = bb.z by A62,FUNCT_7:34; then
            bbx.z in {o} by A43,A44,A59,A63;
            hence u.z = bbx.z by A64,TARSKI:def 1;
          end;
        end; then
        u=bbx by A57,FUNCT_1:9;
        hence o in {bbx qua set} by A56,TARSKI:def 1;
      end;
      A65: Im(f,bbx) = {f.bbx} by A49,FUNCT_1:117;
      reconsider fbbx=f.bbx1 as ManySortedSet of I by PENCIL_1:14;
      take y=fbbx.(s.i);
      let J be ManySortedSet of I such that
      A66: J in f.:product(b1+*(i,{x}));
      thus y=J.(s.i) by A65,A66,TARSKI:def 1,X;
    end;
    consider M being Function such that
    A67: dom M = A() & for x being set st x in A() holds P[x,M.x]
    from FUNCT_1:sch 2(A13,A40);
    set t=s;
    rng M c= the carrier of A.(t.i)
    proof
      let x be set;
      assume x in rng M; then
      consider o being set such that
      A68: o in dom M & x=M.o by FUNCT_1:def 5;
      reconsider o as Point of A.i by A67,A68;
      consider p being ManySortedSet of I such that
      A69: p in product b1 & {p+*(i,o) qua set} = product(b1+*(i,{o})) by Th18;
      p is Point of Segre_Product A by A2,A69; then
      reconsider pio=p+*(i,o) as Point of Segre_Product A by PENCIL_1:25;
      pio in dom f by A4; then
      A70: Im(f,p+*(i,o)) = {f.pio} by FUNCT_1:117;
      reconsider J=f.pio as ManySortedSet of I by PENCIL_1:14;
      A71: J in f.:(product(b1+*(i,{o}))) by A70,TARSKI:def 1,A69;
      P[o,M.o] by A67; then
      A72: M.o = J.(s.i) by A71;
      s.i in I; then
      A73: s.i in dom Carrier A by PBOOLE:def 3;
      J in product Carrier A by A12; then
      J.(s.i) in (Carrier A).(s.i) by A73,CARD_3:18; then
      J.(s.i) in [#](A.(s.i)) by Th7;
      hence x in the carrier of A.(t.i) by A68,A72;
    end; then
    M is Relation of the carrier of A.i,the carrier of A.(t.i)
    by A67,RELSET_1:11;
    then reconsider M as Function of A.i,A.(t.i) by A67,FUNCT_2:def 1;
    take M;
    set m=M;
    thus m is isomorphic
    proof
      A74: m is one-to-one
      proof
        let x1,x2 be set;
        assume A75: x1 in dom m & x2 in dom m & m.x1 = m.x2; then
        reconsider o1=x1,o2=x2 as Point of A.i;
        consider p1 being ManySortedSet of I such that
        A76: p1 in product b1 & {p1+*(i,o1) qua set} = product(b1+*(i,{o1}))
        by Th18;
        p1 is Point of Segre_Product A by A2,A76; then
        reconsider p1io=p1+*(i,o1) as Point of Segre_Product A by PENCIL_1:25;
        p1io in dom f by A4; then
        A77: Im(f,p1+*(i,o1)) = {f.p1io} by FUNCT_1:117;
        reconsider J1=f.p1io as ManySortedSet of I by PENCIL_1:14;
        A78: J1 in f.:(product(b1+*(i,{o1}))) by A77,TARSKI:def 1,A76;
        P[o1,M.o1] by A67; then
        A79: M.o1 = J1.(s.i) by A78;
        consider p2 being ManySortedSet of I such that
        A80: p2 in product b1 & {p2+*(i,o2) qua set} = product(b1+*(i,{o2}))
        by Th18;
        p2 is Point of Segre_Product A by A2,A80; then
        reconsider p2io=p2+*(i,o2) as Point of Segre_Product A by PENCIL_1:25;
        p2io in dom f by A4; then
        A81: Im(f,p2+*(i,o2)) = {f.p2io} by FUNCT_1:117;
        reconsider J2=f.p2io as ManySortedSet of I by PENCIL_1:14;
        A82: J2 in f.:(product(b1+*(i,{o2}))) by A81,TARSKI:def 1,A80;
        P[o2,M.o2] by A67; then
        A83: M.o2 = J2.(s.i) by A82;
        A84: dom p1=I & dom (p1+*(i,o1))=I & dom b1=I by PBOOLE:def 3;
        now
          let o be set;
          assume A85: o in I;
          per cases;
          suppose A86: o=indx(b1); then
            p1+*(i,o1).o = o1 by A84,FUNCT_7:33; then
            p1+*(i,o1).o in the carrier of A.i; then
            p1+*(i,o1).o in [#](A.i);
            hence p1+*(i,o1).o in b1.o by A2,A86,Th10;
          end;
          suppose o<>indx(b1); then
            p1+*(i,o1).o = p1.o by FUNCT_7:34;
            hence p1+*(i,o1).o in b1.o by A76,A84,A85,CARD_3:18;
          end;
        end; then
        p1io in product b1 by A84,CARD_3:18; then
        A87: J1 in B2 by A4,FUNCT_1:def 12;
        A88: dom p2=I & dom (p2+*(i,o2))=I & dom b1=I by PBOOLE:def 3;
        now
          let o be set;
          assume A89: o in I;
          per cases;
          suppose A90: o=indx(b1); then
            p2+*(i,o2).o = o2 by A88,FUNCT_7:33; then
            p2+*(i,o2).o in the carrier of A.i; then
            p2+*(i,o2).o in [#](A.i);
            hence p2+*(i,o2).o in b1.o by A2,A90,Th10;
          end;
          suppose o<>indx(b1); then
            p2+*(i,o2).o = p2.o by FUNCT_7:34;
            hence p2+*(i,o2).o in b1.o by A80,A88,A89,CARD_3:18;
          end;
        end; then
        p2io in product b1 by A88,CARD_3:18; then
        A91: J2 in B2 by A4,FUNCT_1:def 12;
        A92: dom J1 = I & dom J2 = I by PBOOLE:def 3;
        now
          let o be set;
          assume o in I; then
          reconsider l=o as Element of I;
          per cases;
          suppose l=indx(b2);
            hence J1.o=J2.o by A9,A75,A79,A83;
          end;
          suppose l<>indx(b2);
            hence J1.o=J2.o by A8,A87,A91,PENCIL_1:23;
          end;
        end; then
        J1=J2 by A92,FUNCT_1:9; then
        A93: p1io=p2io by A4,A6,FUNCT_1:def 8;
        dom p1 = I & dom p2 = I by PBOOLE:def 3; then
        p1+*(i,o1).i = o1 & p2+*(i,o2).i = o2 by FUNCT_7:33;
        hence x1=x2 by A93;
      end;
      A94: m is onto
      proof
        thus rng m = the carrier of A.(t.i)
        proof
          thus rng m c= the carrier of A.(t.i);
          thus the carrier of A.(t.i) c= rng m
          proof
            let x be set;
            assume x in the carrier of A.(t.i); then
            reconsider x1=x as Point of A.(t.i);
            consider p0 being ManySortedSet of I such that
            A95: p0 in product b2 & {p0+*(indx(b2),x1) qua set} =
            product(b2+*(indx(b2),{x1})) by A9,Th18;
            p0 is Point of Segre_Product A by A8,A95; then
            reconsider p=p0+*(indx(b2),x1) as Point of Segre_Product A
            by A9,PENCIL_1:25;
            reconsider p1=p as ManySortedSet of I;
            A96: p=f.(f".p) by A5,A6,A7,FUNCT_1:57;
            reconsider q=f".p as ManySortedSet of I by PENCIL_1:14;
            A97: dom m = the carrier of A.i by FUNCT_2:def 1;
            A98: I = dom Carrier A by PBOOLE:def 3;
            f".p in product Carrier A by A12; then
            q.i in (Carrier A).i by A98,CARD_3:18; then
            q.i in [#](A.i) by Th7; then
            A99: q.i in the carrier of A.i; then
            A100: q.i in dom m by A97;
            A101: dom p0 = I by PBOOLE:def 3;
            A102: q in dom f by A4;
            A103
: dom q = I & dom (b1+*(i,{q.i})) = I & dom b1=I by PBOOLE:def 3;
            now
              let o be set;
              assume A104: o in I; then
              reconsider l=o as Element of I;
              per cases;
              suppose l=i; then
                b1+*(i,{q.i}).l = {q.o} by A103,FUNCT_7:33;
                hence q.o in b1+*(i,{q.i}).o by TARSKI:def 1;
              end;
              suppose l<>i; then
                A105: b1+*(i,{q.i}).l = b1.l by FUNCT_7:34;
                A106: dom p1 = I & dom b2 = I & dom p0 = I by PBOOLE:def 3;
                now
                  let o be set;
                  assume A107: o in I;
                  per cases;
                  suppose A108: o=indx(b2); then
                    p1.o = x1 by A106,FUNCT_7:33; then
                    p1.o in the carrier of A.(t.i); then
                    p1.o in [#](A.(t.i));
                    hence p1.o in b2.o by A8,A9,A108;
                  end;
                  suppose o<>indx(b2); then
                    p1.o = p0.o by FUNCT_7:34;
                    hence p1.o in b2.o by A95,A106,A107,CARD_3:18;
                  end;
                end; then
                p in product b2 by A106,CARD_3:18; then
                p in f.:B1 by A8; then
                consider q0 being set such that
                A109: q0 in dom f & q0 in B1 & p=f.q0 by FUNCT_1:def 12;
                q=q0 by A6,A96,A102,A109,FUNCT_1:def 8; then
                q.o in b1.o by A103,A104,A109,CARD_3:18;
                hence q.o in b1+*(i,{q.i}).o by A105;
              end;
            end; then
            A110: q in product(b1+*(i,{q.i})) by A103,CARD_3:18;

            p0+*(indx(b2),x1) in f.:(product(b1+*(i,{q.i})))
            by A96,A102,A110,FUNCT_1:def 12; then
            m.(q.i) = p0+*(indx(b2),x1).(s.i) by A67,A99; then
            m.(q.i)=x by A9,A101,FUNCT_7:33;
            hence x in rng m by A100,FUNCT_1:12;
          end;
        end;
      end;
      hence A111: m is bijective by A74,FUNCT_2:def 4;

      rng m = the carrier of A.j by A9,A94,FUNCT_2:def 3; then
      A112: m" = (m qua Function)" by A9,A74,TOPS_2:def 4;

      thus m is open
      proof
        let S0 be Subset of A.i;
        assume S0 is open; then
        S0 in the topology of A.i by PRE_TOPC:def 5; then
        reconsider S=S0 as Block of A.i;
        reconsider L=product(b1+*(i,S)) as Block of Segre_Product A by Th12;
        reconsider K=f.:L as Block of Segre_Product A;
        consider k being Segre-like non trivial-yielding ManySortedSubset of
        Carrier A such that
        A113: K = product k & k.indx(k) is Block of A.indx(k) by PENCIL_1:24;
        A114: dom k = I by PBOOLE:def 3;
        A115: dom (b1+*(i,S)) = I & dom b1 = I by PBOOLE:def 3;
        now
          let x be set;
          assume x in I;
          per cases;
          suppose A116: x=i; then
            b1+*(i,S).x = S by A115,FUNCT_7:33; then
            b1+*(i,S).x c= the carrier of A.i; then
            b1+*(i,S).x c= [#](A.i);
            hence b1+*(i,S).x c= b1.x by A2,A116,Th10;
          end;
          suppose x<>i;
            hence b1+*(i,S).x c= b1.x by FUNCT_7:34;
          end;
        end; then
        A117: L c= product b1 by A115,CARD_3:38; then
        K c= product b2 by A8,RELAT_1:156; then
        product b2 /\ product k = K by A113,XBOOLE_1:28; then
        2 c= Card(product b2 /\ product k) by PENCIL_1:def 6; then
        A118: indx(k)=t.i & for i being set st i <> indx(b2) holds k.i = b2.i
        by A9,PENCIL_1:26;
        m.:S=k.indx(k)
        proof
          thus m.:S c= k.indx(k)
          proof
            let o be set;
            assume o in m.:S; then
            consider u being set such that
            A119: u in dom m & u in S & o=m.u by FUNCT_1:def 12;
            reconsider u as Point of A.i by A119;
            consider p0 being ManySortedSet of I such that
            A120: p0 in product b1 & {p0+*(indx(b1),u) qua set} =
            product(b1+*(indx(b1),{u})) by Th18;
            reconsider p=p0+*(indx(b1),u) as Point of Segre_Product A
            by A2,A120,PENCIL_1:25;
            reconsider q=f.p as ManySortedSet of I by PENCIL_1:14;
            A121: dom (p0+*(i,u)) = I & dom (b1+*(i,S)) = I &
            dom p0 = I & dom b1 = I by PBOOLE:def 3;
            now
              let a be set;
              assume A122: a in I;
              per cases;
              suppose A123: a=i; then
                p0+*(i,u).a = u by A121,FUNCT_7:33; then
                p0+*(i,u).a in S by A119;
                hence p0+*(i,u).a in b1+*(i,S).a by A121,A123,FUNCT_7:33;
              end;
              suppose A124:a<>i; then
                p0+*(i,u).a = p0.a by FUNCT_7:34; then
                p0+*(i,u).a in b1.a by A120,A121,A122,CARD_3:18;
                hence p0+*(i,u).a in b1+*(i,S).a by A124,FUNCT_7:34;
              end;
            end; then
            p in L by A121,CARD_3:18; then
            A125: q in product k by A4,A113,FUNCT_1:def 12;
            A126: Im(f,p0+*(indx(b1),u)) = {f.p} by A4,FUNCT_1:117
;
            A127: P[u,m.u] by A67;
            q in f.:product(b1+*(indx(b1),{u})) by A126,TARSKI:def 1,A120; then
            m.u = q.(s.i) by A127;
            hence o in k.indx(k) by A114,A118,A119,A125,CARD_3:18;
          end;
          let o be set;
          assume A128: o in k.indx(k);
          k.indx(k) is Block of A.(s.i) by A113,A118; then
          k.indx(k) in the topology of A.(s.i); then
          reconsider u=o as Point of A.(s.i) by A128;
          consider p0 being ManySortedSet of I such that
          A129: p0 in product k & {p0+*(s.i,u) qua set} =
          product(k+*(s.i,{u})) by A118,Th18;
          K in the topology of Segre_Product A; then
          K c= the carrier of Segre_Product A; then
          p0 is Point of Segre_Product A by A113,A129; then
          reconsider p=p0+*(s.i,u) as Point of Segre_Product A by PENCIL_1:25;
          reconsider q=f".p as ManySortedSet of I by PENCIL_1:14;
          A130: dom q = I & dom Carrier A = I & dom(b1+*(i,S)) = I & dom b1 = I
          by PBOOLE:def 3;
          q in product Carrier A by A12; then
          q.i in (Carrier A).i by A130,CARD_3:18; then
          q.i in [#](A.i) by Th7; then
          A131: q.i in dom m by A67;
          A132: dom (p0+*(s.i,u)) = I & dom k = I & dom p0 = I by PBOOLE:def 3;
          now
            let z be set;
            assume A133: z in I;
            per cases;
            suppose A134: z=s.i; then
              p0+*(s.i,u).z = u by A132,FUNCT_7:33;
              hence p0+*(s.i,u).z in k.z by A118,A128,A134;
            end;
            suppose z<>s.i; then
              p0+*(s.i,u).z = p0.z by FUNCT_7:34;
              hence p0+*(s.i,u).z in k.z by A129,A132,A133,CARD_3:18;
            end;
          end; then
          p in f.:L by A113,A132,CARD_3:18; then
          consider qq being set such that
          A135: qq in dom f & qq in L & p=f.qq by FUNCT_1:def 12;
          A136: p=f.q by A5,A6,A7,FUNCT_1:57;
          q in dom f by A4; then
          A137: q in L by A6,A135,A136,FUNCT_1:def 8; then
          q.i in b1+*(i,S).i by A130,CARD_3:18; then
          A138: q.i in S by A115,FUNCT_7:33; then
          reconsider qi=q.i as Point of A.i;
          consider q0 being ManySortedSet of I such that
          A139: q0 in product b1 & {q0+*(i,qi) qua set} = product(b1+*(i,{qi}))
          by Th18;
          A140: dom q = I & dom (q0+*(i,qi)) = I & dom q0 = I by PBOOLE:def 3;
          now
            let a be set;
            assume a in I;
            per cases;
            suppose a=i;
              hence q0+*(i,qi).a = q.a by A140,FUNCT_7:33;
            end;
            suppose A141: a<>i; then
              q0+*(i,qi).a = q0.a by FUNCT_7:34;
              hence q0+*(i,qi).a = q.a by A117,A137,A139,A141,PENCIL_1:23;
            end;
          end; then
          q0+*(i,qi) = q by A140,FUNCT_1:9; then
          A142: Im(f,q0+*(i,qi))={f.q} by A4,FUNCT_1:117;
          A143: P[qi,m.qi] by A67;
          p in f.:product(b1+*(i,{qi})) by A136,A142,TARSKI:def 1,A139; then
          m.(q.i) = p0+*(s.i,u).(s.i) by A143; then
          m.(q.i) = o by A132,FUNCT_7:33;
          hence o in m.:S by A131,A138,FUNCT_1:def 12;
        end; then
        m.:S is Block of A.(t.i) by A113,A118;
        hence m.:S0 is open by PRE_TOPC:def 5;
      end;
      thus m" is bijective by A111,PENCIL_2:12;
      thus m" is open
      proof
        let S0 be Subset of A.(t.i);
        assume S0 is open; then
        S0 in the topology of A.(t.i) by PRE_TOPC:def 5; then
        reconsider S=S0 as Block of A.(t.i);
        reconsider L=product(b2+*(j,S)) as Block of Segre_Product A
        by A9,Th12;
        reconsider K=f"L as Block of Segre_Product A;
        consider k being Segre-like non trivial-yielding ManySortedSubset of
        Carrier A such that
        A144: K = product k & k.indx(k) is Block of A.indx(k) by PENCIL_1:24;
        A145: dom (b2+*(j,S)) = I & dom b2 = I by PBOOLE:def 3;
        now
          let x be set;
          assume x in I;
          per cases;
          suppose A146: x=j; then
            b2+*(j,S).x = S by A145,FUNCT_7:33; then
            b2+*(j,S).x c= the carrier of A.(t.i); then
            b2+*(j,S).x c= [#](A.(s.i));
            hence b2+*(j,S).x c= b2.x by A8,A9,A146;
          end;
          suppose x<>j;
            hence b2+*(j,S).x c= b2.x by FUNCT_7:34;
          end;
        end; then
        L c= product b2 by A145,CARD_3:38; then
        K c= product b1 by A8,A11,RELAT_1:178; then
        product b1 /\ product k = K by A144,XBOOLE_1:28; then
        2 c= Card(product b1 /\ product k) by PENCIL_1:def 6; then
        A147: indx(k)=i & for i being set st i <> indx(b1) holds k.i = b1.i
        by PENCIL_1:26;
        m"S=k.indx(k)
        proof
          thus m"S c= k.indx(k)
          proof
            let o be set;
            assume o in m"S; then
            A148: o in dom m & m.o in S by FUNCT_1:def 13; then
            reconsider u=o as Point of A.i;
            consider p being ManySortedSet of I such that
            A149: p in product b1 & {p+*(i,u) qua set} = product(b1+*(i,{u}))
            by Th18;
            reconsider q=p+*(i,u) as Point of Segre_Product A
            by A2,A149,PENCIL_1:25;
            reconsider fq=f.q as ManySortedSet of I by PENCIL_1:14;
            A150: dom p = I & dom k = I by PBOOLE:def 3;
            Im(f,p+*(i,u)) = {f.q} by A4,FUNCT_1:117; then
            A151: fq in f.:product(b1+*(i,{u})) by TARSKI:def 1,A149; then
            m.u = fq.(s.i) by A67; then
            A152: fq.(s.i) in S by A148;
            product(b1+*(i,{u})) c= product b1
            proof
              let a be set;
              assume a in product(b1+*(i,{u})); then
              consider g being Function such that
              A153: a=g & dom g=dom (b1+*(i,{u})) &
              for o being set st o in dom (b1+*(i,{u})) holds
              g.o in b1+*(i,{u}).o by CARD_3:def 5;
              A154: dom g = I & dom b1 = I & dom (b1+*(i,{u})) = I
              by A153,PBOOLE:def 3;
              now
                let o be set;
                assume o in I; then
                A155: g.o in b1+*(i,{u}).o by A153,A154;
                per cases;
                suppose A156: o=i; then
                  g.o in {u} by A154,A155,FUNCT_7:33; then
                  g.o = u by TARSKI:def 1; then
                  g.o in the carrier of A.i; then
                  g.o in [#](A.i);
                  hence g.o in b1.o by A2,A156,Th10;
                end;
                suppose o<>i; then
                  b1+*(i,{u}).o = b1.o by FUNCT_7:34;
                  hence g.o in b1.o by A155;
                end;
              end;
              hence a in product b1 by A153,A154,CARD_3:18;
            end; then
            f.:product(b1+*(i,{u})) c= product b2 by A8,RELAT_1:156; then
            A157: fq in product b2 by A151;
            A158
: dom fq = I & dom (b2+*(j,S)) = I & dom b2 = I by PBOOLE:def 3;
            now
              let o be set;
              assume A159: o in I;
              per cases;
              suppose A160: o=j; then
                b2+*(j,S).o = S by A158,FUNCT_7:33;
                hence fq.o in b2+*(j,S).o by A9,A152,A160;
              end;
              suppose o<>j; then
                b2+*(j,S).o = b2.o by FUNCT_7:34;
                hence fq.o in b2+*(j,S).o by A157,A158,A159,CARD_3:18;
              end;
            end; then
            fq in L by A158,CARD_3:18; then
            q in K by A4,FUNCT_1:def 13; then
            p+*(i,u).i in k.i by A144,A150,CARD_3:18;
            hence o in k.indx(k) by A147,A150,FUNCT_7:33;
          end;
          let o be set;
          assume A161: o in k.indx(k);
          k.indx(k) is Block of A.i by A144,A147; then
          k.indx(k) in the topology of A.i; then
          reconsider u=o as Point of A.i by A161;
          consider p0 being ManySortedSet of I such that
          A162: p0 in product b1 & {p0+*(i,u) qua set} = product(b1+*(i,{u}))
          by Th18;
          p0 is Point of Segre_Product A by A2,A162; then
          reconsider p=p0+*(i,u) as Point of Segre_Product A by PENCIL_1:25;
          reconsider fp=f.p as ManySortedSet of I by PENCIL_1:14;
          Im(f,p0+*(i,u)) = {f.p} by A4,FUNCT_1:117; then
          fp in f.:product(b1+*(i,{u})) by TARSKI:def 1,A162; then
          A163: m.u = fp.(s.i) by A67;
          A164: dom fp = I & dom (b2+*(j,S)) = I & dom b2 = I by PBOOLE:def 3;
          A165: dom (p0+*(i,u)) = I & dom k = I & dom b1 = I & dom p0 = I
          by PBOOLE:def 3;
          now
            let a be set;
            assume A166: a in I;
            per cases;
            suppose A167: a=i; then
              p0+*(i,u).a = u by A165,FUNCT_7:33;
              hence p0+*(i,u).a in k.a by A147,A161,A167;
            end;
            suppose A168: a<>i; then
              p0+*(i,u).a = p0.a by FUNCT_7:34; then
              p0+*(i,u).a in b1.a by A162,A165,A166,CARD_3:18;
              hence p0+*(i,u).a in k.a by A147,A168;
            end;
          end; then
          p in K by A144,A165,CARD_3:18; then
          fp in L by FUNCT_1:def 13; then
          fp.j in b2+*(j,S).j by A164,CARD_3:18; then
          fp.(s.i) in S by A9,A164,FUNCT_7:33; then
          m.u in S by A163;
          hence o in m"S by A67,FUNCT_1:def 13;
        end; then
        m".:S is Block of A.i by A74,A112,A144,A147,FUNCT_1:155;
        hence m".:S0 is open by PRE_TOPC:def 5;
      end;
    end;
    let a be ManySortedSet of I such that
    A169: a is Point of Segre_Product A & a in product b1;
    let b be ManySortedSet of I such that
    A170: b=f.a;
    A171: dom a = I & dom Carrier A = I by PBOOLE:def 3;
    a in product Carrier A by A12,A169; then
    a.i in (Carrier A).i by A171,CARD_3:18; then
    a.i in [#](A.i) by Th7; then
    reconsider ai=a.i as Point of A.i;
    A172: dom a = I & dom (b1+*(i,{ai})) = I & dom b1 = I by PBOOLE:def 3;
    now
      let o be set;
      assume A173: o in I;
      per cases;
      suppose A174: o=i; then
        b1+*(i,{ai}).o = {ai} by A172,FUNCT_7:33;
        hence a.o in b1+*(i,{ai}).o by A174,TARSKI:def 1;
      end;
      suppose o<>i; then
        b1+*(i,{ai}).o = b1.o by FUNCT_7:34;
        hence a.o in b1+*(i,{ai}).o by A169,A172,A173,CARD_3:18;
      end;
    end; then
    a in product(b1+*(i,{ai})) by A172,CARD_3:18; then
    b in f.:product(b1+*(i,{ai})) by A4,A169,A170,FUNCT_1:def 12;
    hence b.(t.i) = m.(a.i) by A67;
  end;
  uniqueness
  proof
    set s=permutation_of_indices(f);
    set i=indx(b1);
    let f1,f2 be Function of A.i,A.(permutation_of_indices(f).i) such that
A175: f1 is isomorphic &
    for a being ManySortedSet of I st
    a is Point of Segre_Product A & a in product b1
    for b being ManySortedSet of I st b=f.a holds b.(s.i)=f1.(a.i) and
A176: f2 is isomorphic &
    for a being ManySortedSet of I st
    a is Point of Segre_Product A & a in product b1
    for b being ManySortedSet of I st b=f.a
    holds b.(s.i)=f2.(a.i);
A177: dom f1 = the carrier of A.i by FUNCT_2:def 1
    .= dom f2 by FUNCT_2:def 1;
    now
      let x be set;
      assume x in dom f1; then
      reconsider x0=x as Point of A.i;
      consider p being set such that
      A178: p in product b1 by XBOOLE_0:def 1;
      product b1 is Segre-Coset of A by A2; then
      reconsider p as Point of Segre_Product A by A178;
      reconsider P=p as ManySortedSet of I by PENCIL_1:14;
      set a=P+*(i,x0);
A179:   dom a = I & dom P = I & dom b1 = I by PBOOLE:def 3;
      now
        let e be set;
        assume A180: e in I;
        per cases;
        suppose A181: e=i; then
          a.e = x0 by A179,FUNCT_7:33; then
          a.e in the carrier of A.i; then
          a.e in [#](A.i);
          hence a.e in b1.e by A2,A181,Th10;
        end;
        suppose e<>i; then
          a.e = P.e by FUNCT_7:34;
          hence a.e in b1.e by A178,A179,A180,CARD_3:18;
        end;
      end; then
      A182: a in product b1 by A179,CARD_3:18;
      reconsider a1=a as Point of Segre_Product A by PENCIL_1:25;
      reconsider b=f.a1 as ManySortedSet of I by PENCIL_1:14;
      A183: f1.(a.i)=b.(s.i) by A175,A182;
      A184: f2.(a.i)=b.(s.i) by A176,A182;
      dom P = I by PBOOLE:def 3; then
      a.i=x by FUNCT_7:33;
      hence f1.x = f2.x by A183,A184;
    end;
    hence f1=f2 by A177,FUNCT_1:9;
    end;
end;

theorem Th26:
  for I being finite non empty set
  for A being PLS-yielding ManySortedSet of I st
  for i being Element of I holds A.i is strongly_connected
  for f being Collineation of Segre_Product A
  for B1,B2 being Segre-Coset of A st B1 misses B2 & B1 '||' B2
  for b1,b2 being Segre-like non trivial-yielding ManySortedSubset of Carrier A
  st product b1 = B1 & product b2 = B2 holds
  canonical_embedding(f,b1) = canonical_embedding(f,b2)
  proof
    let I be finite non empty set;
    let A be PLS-yielding ManySortedSet of I such that
    A1: for i being Element of I holds A.i is strongly_connected;
    let f be Collineation of Segre_Product A;
    A2: dom f = the carrier of Segre_Product A by FUNCT_2:def 1;
    let B1,B2 be Segre-Coset of A such that
    A3: B1 misses B2 & B1 '||' B2;
    let b1,b2 be Segre-like non trivial-yielding ManySortedSubset of Carrier A
    such that
    A4: product b1 = B1 & product b2 = B2;
    A5: dom b1 = I by PBOOLE:def 3;
    A6: indx(b1)=indx(b2) by A3,A4,Th21;
    set i = indx(b1);
    consider r being Element of I such that
    A7: r<>indx(b1) &
    (for i being Element of I st i<>r holds b1.i=b2.i) &
    for c1,c2 being Point of A.r st b1.r={c1} & b2.r={c2} holds
    c1,c2 are_collinear by A3,A4,Th21;
    reconsider B3=f.:B1,B4=f.:B2 as Segre-Coset of A by A1,PENCIL_2:24;
    f is bijective by PENCIL_2:def 4; then
    A8: f is one-to-one by FUNCT_2:def 4; then
    A9: B3 misses B4 & B3 '||' B4 by A3,Th20,FUNCT_1:125;
    consider b3 being Segre-like non trivial-yielding ManySortedSubset of
    Carrier A such that
    A10: product b3 = B3 & b3.indx(b3) = [#](A.indx(b3)) by PENCIL_2:def 2;
    consider b4 being Segre-like non trivial-yielding ManySortedSubset of
    Carrier A such that
    A11: product b4 = B4 & b4.indx(b4) = [#](A.indx(b4)) by PENCIL_2:def 2;
    A12: indx(b3)=indx(b4) by A9,A10,A11,Th21;
    set j = indx(b3);
    A13: dom canonical_embedding(f,b1) = the carrier of A.i &
       dom canonical_embedding(f,b2) = the carrier of A.i by A6,FUNCT_2:def 1;
    now
      let o be set;
      assume o in the carrier of A.i; then
      reconsider u=o as Point of A.i;
      consider p0 being set such that
      A14: p0 in product b1 by XBOOLE_0:def 1;
      reconsider p1=p0 as Point of Segre_Product A by A4,A14;
      reconsider p=p1 as ManySortedSet of I by PENCIL_1:14;
      set q=p+*(i,u);
      reconsider q1=q as Point of Segre_Product A by PENCIL_1:25;
      b1.r is trivial by A7,PENCIL_1:def 21; then
      consider c1 being set such that
      A15: b1.r = {c1} by REALSET1:def 4;
      b1 c= Carrier A by PBOOLE:def 23; then
      b1.r c= (Carrier A).r by PBOOLE:def 5; then
      {c1} c= [#](A.r) by A15,Th7; then
      c1 in [#](A.r) by ZFMISC_1:37; then
      reconsider c1 as Point of A.r;
      b2.r is trivial by A6,A7,PENCIL_1:def 21; then
      consider c2 being set such that
      A16: b2.r = {c2} by REALSET1:def 4;
      b2 c= Carrier A by PBOOLE:def 23; then
      b2.r c= (Carrier A).r by PBOOLE:def 5; then
      {c2} c= [#](A.r) by A16,Th7; then
      c2 in [#](A.r) by ZFMISC_1:37; then
      reconsider c2 as Point of A.r;
      set t=q+*(r,c2);
      q is Point of Segre_Product A by PENCIL_1:25; then
      t is Point of Segre_Product A by PENCIL_1:25; then
      reconsider t1=t as Point of Segre_Product A;
      A17: c1,c2 are_collinear by A7,A15,A16;
      per cases;
      suppose A18: c1<>c2;
        q.r = p.r by A7,FUNCT_7:34; then
        q.r in b1.r by A5,A14,CARD_3:18; then
        A19: q.r = c1 by A15,TARSKI:def 1;
        dom q = I by PBOOLE:def 3; then
        A20: t.r=c2 by FUNCT_7:33; then
        A21: q1<>t1 by A18,A19; then
        A22: f.q1 <> f.t1 by A2,A8,FUNCT_1:def 8;
        now
          let q3,t3 be ManySortedSet of I such that
          A23: q3=q1 & t3=t1;
          take r;
          thus for a,b being Point of A.r st a=q3.r & b=t3.r holds
          a<>b & a,b are_collinear by A17,A18,A19,A20,A23;
          let j be Element of I;
          assume j<>r;
          hence q3.j = t3.j by A23,FUNCT_7:34;
        end; then
        q1,t1 are_collinear by A21,Th17; then
        A24: f.q1,f.t1 are_collinear by Th1;
        reconsider fq=f.q1,ft=f.t1 as ManySortedSet of I by PENCIL_1:14;
        A25: j=permutation_of_indices(f).i by A1,A4,A10,Def3;
        A26: dom q = I & dom p = I & dom t = I & dom b1 = I & dom b2 = I
        by PBOOLE:def 3;
        now
          let a be set;
          assume A27: a in I;
          per cases;
          suppose a=i; then
            q.a = u & b1.a = [#](A.i) by A4,A26,Th10,FUNCT_7:33; then
            q.a = u & b1.a = the carrier of (A.i);
            hence q.a in b1.a;
          end;
          suppose a<>i; then
            q.a = p.a by FUNCT_7:34;
            hence q.a in b1.a by A14,A26,A27,CARD_3:18;
          end;
        end; then
        A28: q in product b1 by A26,CARD_3:18; then
        A29: canonical_embedding(f,b1).(q.i)=fq.(permutation_of_indices(f).i)
        by A1,A4,Def4;
        now
          let a be set;
          assume A30: a in I;
          per cases;
          suppose A31: a=r; then
            t.a = c2 by A26,FUNCT_7:33;
            hence t.a in b2.a by A16,A31,TARSKI:def 1;
          end;
          suppose A32: a<>r; then
            t.a = q.a by FUNCT_7:34; then
            t.a in b1.a by A26,A28,A30,CARD_3:18;
            hence t.a in b2.a by A7,A30,A32;
          end;
        end; then
        A33: t in product b2 by A26,CARD_3:18; then
        A34: canonical_embedding(f,b2).(t.i)=ft.(permutation_of_indices(f).i)
        by A1,A4,A6,Def4;
        A35:
        now
          assume A36: fq.j<>ft.j;
          consider l being Element of I such that
          A37: (for a,b being Point of A.l st a=fq.l & b=ft.l holds
          a<>b & a,b are_collinear) &
          for j being Element of I st j<>l holds fq.j = ft.j by A22,A24,Th17;
          A38: j=l by A36,A37;
          q1 in B1 & q1 in dom f by A2,A4,A28; then
          A39: fq in B3 by FUNCT_1:def 12;
          A40: dom fq = I & dom ft = I & dom b3 = I & dom b4=I by PBOOLE:def 3;
          now
            let o be set;
            assume o in I; then
            reconsider o1=o as Element of I;
            per cases;
            suppose A41: o1=j; then
              fq.o1 in b3.j by A10,A39,A40,CARD_3:18; then
              fq.o in [#](A.j) by A10;
              hence fq.o in b4.o by A11,A12,A41;
            end;
            suppose o1<>j; then
              A42: fq.o1 = ft.o1 by A37,A38;
              t in B2 & t1 in dom f by A2,A4,A33; then
              ft in product b4 by A11,FUNCT_1:def 12;
              hence fq.o in b4.o by A40,A42,CARD_3:18;
            end;
          end; then
          fq in product b4 by A40,CARD_3:18; then
          fq in product b3 /\ product b4 by A10,A39,XBOOLE_0:def 3; then
          product b3 meets product b4 by XBOOLE_0:def 7;
          hence contradiction by A9,A10,A11;
        end;
        dom p = I by PBOOLE:def 3; then
        A43: q.i=o by FUNCT_7:33; then
        A44: t.i=o by A7,FUNCT_7:34;
        thus canonical_embedding(f,b1).o = canonical_embedding(f,b2).o
        by A25,A29,A34,A35,A43,A44;
      end;
      suppose A45: c1=c2;
        A46: dom b1 = I & dom b2 = I by PBOOLE:def 3;
        now
          let o be set;
          assume o in I; then
          reconsider o1=o as Element of I;
          per cases;
          suppose r=o1;
            hence b1.o=b2.o by A15,A16,A45;
          end;
          suppose r<>o1;
            hence b1.o=b2.o by A7;
          end;
        end; then
        b1=b2 by A46,FUNCT_1:9;
        hence canonical_embedding(f,b1).o = canonical_embedding(f,b2).o;
      end;
    end;
    hence canonical_embedding(f,b1) = canonical_embedding(f,b2) by A13,
FUNCT_1:9;
  end;

theorem Th27:
  for I being finite non empty set
  for A being PLS-yielding ManySortedSet of I st
  for i being Element of I holds A.i is strongly_connected
  for f being Collineation of Segre_Product A
  for b1,b2 being Segre-like non trivial-yielding ManySortedSubset of Carrier A
  st product b1 is Segre-Coset of A & product b2 is Segre-Coset of A &
  indx(b1)=indx(b2) holds canonical_embedding(f,b1) = canonical_embedding(f,b2)
  proof
    let I be finite non empty set;
    let A be PLS-yielding ManySortedSet of I such that
    A1: for i being Element of I holds A.i is strongly_connected;
    A2:
    now
      let o be Element of I;
      A.o is strongly_connected by A1;
      hence A.o is connected by Th4;
    end;
    let f be Collineation of Segre_Product A;
    let b1,b2 be Segre-like non trivial-yielding ManySortedSubset of Carrier A
    such that
    A3: product b1 is Segre-Coset of A & product b2 is Segre-Coset of A &
    indx(b1)=indx(b2);
    reconsider B1=product b1, B2=product b2 as Segre-Coset of A by A3;
    per cases;
    suppose B1 misses B2; then
      consider D being FinSequence of bool the carrier of Segre_Product A
      such that
      A4: D.1=B1 & D.(len D)=B2 & (for i being Nat st i in dom D holds
      D.i is Segre-Coset of A) &
      for i being Nat st 1<=i & i<len D for Di,Di1 being Segre-Coset of A st
      Di=D.i & Di1=D.(i+1)
      holds Di misses Di1 & Di '||' Di1 by A2,A3,Th23;

      defpred P[Nat] means
      $1 in dom D implies
      for D1 being Segre-Coset of A st D1=D.$1
      for d1 being Segre-like non trivial-yielding ManySortedSubset of
      Carrier A st D1=product d1 holds
      canonical_embedding(f,b1)=canonical_embedding(f,d1);

      A5: P[0] by FINSEQ_3:26;
      A6:
      now
        let k be Nat;
        assume A7: P[k];
        thus P[k+1]
        proof
          assume k+1 in dom D; then
          k+1 <= len D by FINSEQ_3:27; then
          A8: k < len D by NAT_1:13;
          let D2 be Segre-Coset of A such that
          A9: D2=D.(k+1);
          let d2 be Segre-like non trivial-yielding ManySortedSubset of
          Carrier A such that
          A10: D2=product d2;
          per cases by NAT_1:14;
          suppose k=0; then
            D2=B1 by A4,A9;
            hence canonical_embedding(f,b1)=canonical_embedding(f,d2)
            by A10,PUA2MSS1:2;
          end;
          suppose A11: 1<=k; then
            A12: k in dom D by A8,FINSEQ_3:27; then
            reconsider D1=D.k as Segre-Coset of A by A4;
            consider d1 being Segre-like non trivial-yielding
            ManySortedSubset of Carrier A such that
            A13: product d1 = D1 & d1.indx(d1)=[#](A.indx(d1))
            by PENCIL_2:def 2;
            D1 misses D2 & D1 '||' D2 by A4,A8,A9,A11; then
            A14: canonical_embedding(f,d1)=canonical_embedding(f,d2)
            by A1,A10,A13,Th26;
            thus canonical_embedding(f,b1) = canonical_embedding(f,d2)
            by A7,A12,A13,A14;
          end;
        end;
      end;
      for n being Nat holds P[n] from NAT_1:sch 2(A5,A6); then
      A15: P[len D];
      1 in dom D by A4,FUNCT_1:def 4; then
      1 <= len D by FINSEQ_3:27; then
      len D in dom D by FINSEQ_3:27;
      hence canonical_embedding(f,b1) = canonical_embedding(f,b2) by A4,A15;
    end;
    suppose B1 meets B2;
      then B1=B2 by A3,Th11;
      hence canonical_embedding(f,b1) = canonical_embedding(f,b2)
      by PUA2MSS1:2;
    end;
  end;

definition
  let I be finite non empty set;
  let A be PLS-yielding ManySortedSet of I such that
  A1: for i being Element of I holds A.i is strongly_connected;
  let f be Collineation of Segre_Product A;
  let i be Element of I;
  func canonical_embedding(f,i) ->
  Function of A.i,A.(permutation_of_indices(f).i) means :Def5:
  for b being Segre-like non trivial-yielding ManySortedSubset of Carrier A st
  product b is Segre-Coset of A & indx(b)=i holds it=canonical_embedding(f,b);
  existence
  proof
    consider L being Segre-like non trivial-yielding ManySortedSubset of
    Carrier A such that
    A2: indx(L)=i & product L is Segre-Coset of A by Th8;
    reconsider n=canonical_embedding(f,L) as Function of
    A.i,A.(permutation_of_indices(f).i) by A2;
    take n;
    let b be Segre-like non trivial-yielding ManySortedSubset of Carrier A
    such that
    A3: product b is Segre-Coset of A & indx(b)=i;
    thus n=canonical_embedding(f,b) by A1,A2,A3,Th27;
  end;
  uniqueness
  proof
    let n1,n2 be Function of A.i,A.(permutation_of_indices(f).i) such that
    A4: for b being Segre-like non trivial-yielding ManySortedSubset of
    Carrier A st
    product b is Segre-Coset of A & indx(b)=i holds n1=canonical_embedding(f,b)
    and
    A5: for b being Segre-like non trivial-yielding ManySortedSubset of
    Carrier A st
    product b is Segre-Coset of A & indx(b)=i
    holds n2=canonical_embedding(f,b);
    consider L being Segre-like non trivial-yielding ManySortedSubset of
    Carrier A such that
    A6: indx(L)=i & product L is Segre-Coset of A by Th8;
    thus n1=canonical_embedding(f,L) by A4,A6 .= n2 by A5,A6;
  end;
end;

theorem
  for I being finite non empty set
  for A being PLS-yielding ManySortedSet of I st
  for i being Element of I holds A.i is strongly_connected
  for f being Collineation of Segre_Product A
  ex s being Permutation of I, B being Function-yielding ManySortedSet of I st
  for i being Element of I holds (B.i is Function of A.i,A.(s.i) &
  for m being Function of A.i,A.(s.i) st m=B.i holds m is isomorphic) &
  for p being Point of Segre_Product A
  for a being ManySortedSet of I st a=p
  for b being ManySortedSet of I st b=f.p
  for m being Function of A.i,A.(s.i) st m=B.i holds b.(s.i)=m.(a.i)
  proof
    let I be finite non empty set;
    let A be PLS-yielding ManySortedSet of I such that
    A1: for i being Element of I holds A.i is strongly_connected;
    let f be Collineation of Segre_Product A;
    set s=permutation_of_indices(f);
    take s;
    defpred P[set,set] means
    for i being Element of I st i=$1 holds $2=canonical_embedding(f,i);
    A2: for i being set st i in I ex j being set st P[i,j]
    proof
      let i be set;
      assume i in I; then reconsider i1=i as Element of I;
      P[i1,canonical_embedding(f,i1)];
      hence ex j being set st P[i,j];
    end;

    consider B being ManySortedSet of I such that
    A3: for i being set st i in I holds P[i,B.i] from PBOOLE:sch 3(A2);

    now
      let x be set;
      assume x in dom B; then
      reconsider y=x as Element of I by PBOOLE:def 3;
      B.y = canonical_embedding(f,y) by A3;
      hence B.x is Function;
    end; then
    reconsider B as Function-yielding ManySortedSet of I by FUNCOP_1:def 6;
    take B;
    let i be Element of I;
    A4: B.i = canonical_embedding(f,i) by A3;
    thus B.i is Function of A.i,A.(s.i) &
    for m being Function of A.i,A.(s.i) st m=B.i holds m is isomorphic
    proof
      thus B.i is Function of A.i,A.(s.i) by A4;
      let m be Function of A.i,A.(s.i);
      assume A5: m=B.i;
      consider L being Segre-like non trivial-yielding ManySortedSubset of
      Carrier A such that
      A6: indx(L)=i & product L is Segre-Coset of A by Th8;
      B.i=canonical_embedding(f,L) by A1,A4,A6,Def5;
      hence m is isomorphic by A1,A5,A6,Def4;
    end;
    let p be Point of Segre_Product A;
    let a be ManySortedSet of I such that
    A7: a=p;
    let b be ManySortedSet of I such that
    A8: b=f.p;
    let m be Function of A.i,A.(s.i) such that
    A9: m=B.i;
    consider b1 being Segre-like non trivial-yielding ManySortedSubset of
    Carrier A such that
    A10: indx(b1)=i & product b1 is Segre-Coset of A & a in product b1 by A7,
Th9;
    m=canonical_embedding(f,b1) by A1,A4,A9,A10,Def5;
    hence b.(s.i)=m.(a.i) by A1,A7,A8,A10,Def4;
  end;
