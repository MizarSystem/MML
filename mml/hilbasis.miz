:: Hilbert Basis Theorem
::  by Jonathan Backer and Piotr Rudnicki
::
:: Received November 27, 2000
:: Copyright (c) 2000 Association of Mizar Users
 
environ

 vocabularies NUMBERS, FINSEQ_1, FUNCT_1, RELAT_1, XBOOLE_0, TARSKI, ORDINAL4,
      NAT_1, XXREAL_0, ARYTM_3, PRE_POLY, CARD_1, FUNCOP_1, PARTFUN1, SUBSET_1,
      ARYTM_1, FUNCT_4, ORDINAL1, PBOOLE, FINSET_1, ORDERS_1, VECTSP_1,
      ZFMISC_1, ALGSTR_0, POLYNOM2, GROUP_1, POLYNOM1, SUPINF_2, RLVECT_1,
      ALGSEQ_1, LATTICES, POLYNOM3, STRUCT_0, CARD_3, CARD_FIL, QUOFIELD,
      MSSUBFAM, IDEAL_1, PRELAMB, MCART_1, BINOP_1, FUNCT_2, HILBASIS;
 notations TARSKI, XBOOLE_0, ZFMISC_1, SUBSET_1, PBOOLE, RELAT_1, FINSET_1,
      FUNCT_1, PARTFUN1, VECTSP_1, NORMSP_1, CARD_1, NUMBERS, XCMPLX_0,
      XXREAL_0, NAT_1, RELSET_1, FUNCT_2, FUNCOP_1, FINSEQ_1, FUNCT_4, BINOP_1,
      XXREAL_2, MCART_1, FINSEQOP, FINSEQ_2, FUNCT_7, POLYNOM1, POLYNOM2,
      BHSP_1, POLYNOM3, DOMAIN_1, STRUCT_0, ALGSTR_0, RLVECT_1, GROUP_1,
      ALGSEQ_1, NAT_D, IDEAL_1, TOPS_2, GRCAT_1, ORDINAL1, PRE_POLY, WSIERP_1,
      ORDERS_1, GROUP_6, QUOFIELD, RECDEF_1, MATRLIN;
 constructors FINSEQOP, RFUNCT_3, NAT_D, REAL_1, WSIERP_1, TOPS_2, ALGSEQ_1,
      BHSP_1, GRCAT_1, GROUP_6, MATRIX_2, DTCONSTR, TRIANG_1, QUOFIELD,
      POLYNOM2, POLYNOM3, IDEAL_1, SEQ_1, RECDEF_1, SEQ_4, XXREAL_2, DOMAIN_1,
      BINARITH, RELSET_1, FUNCT_7, PRE_POLY, MATRLIN;
 registrations XBOOLE_0, SUBSET_1, RELAT_1, FUNCT_1, FUNCOP_1, FINSET_1,
      XXREAL_0, XREAL_0, NAT_1, INT_1, CARD_1, MEMBERED, FINSEQ_1, CARD_5,
      PRE_CIRC, STRUCT_0, VECTSP_1, ALGSTR_1, GR_CY_1, WAYBEL_2, GCD_1,
      PRE_POLY, POLYNOM1, POLYNOM2, POLYNOM3, IDEAL_1, VALUED_0, ALGSTR_0,
      XXREAL_2;
 requirements NUMERALS, REAL, SUBSET, BOOLE, ARITHM;
 definitions TARSKI, IDEAL_1, GRCAT_1, GROUP_6, FUNCOP_1, POLYNOM3, CARD_1,
      STRUCT_0;
 theorems TARSKI, ZFMISC_1, RLVECT_1, FUNCT_1, FUNCT_2, POLYNOM1, NAT_1,
      AXIOMS, FVSUM_1, FINSEQ_1, FINSEQ_2, FINSEQ_3, POLYNOM3, FUNCOP_1,
      ALGSEQ_1, INT_1, FUNCT_7, IDEAL_1, POLYNOM4, GRCAT_1, QUOFIELD, FUNCT_4,
      RELAT_1, CARD_1, MATRLIN, CARD_3, ORDINAL1, WAYBEL_1, ORDERS_1, FINSET_1,
      FINSEQOP, POLYNOM2, TOPS_2, FINSEQ_5, GROUP_1, XBOOLE_0, XBOOLE_1,
      RLVECT_2, VECTSP_1, XREAL_1, GROUP_6, XXREAL_0, NORMSP_1, PARTFUN1,
      XXREAL_2, NAT_D, XREAL_0, PRE_POLY;
 schemes NAT_1, RECDEF_1, FUNCT_1, FUNCT_2, FINSEQ_2, FUNCT_7;

begin :: Preliminaries

theorem Th1:
  for A,B being FinSequence, f being Function st rng A \/ rng B c=
  dom f ex fA, fB being FinSequence st fA = f*A & fB = f*B & f*(A^B) = fA^fB
proof
  let A,B being FinSequence, f being Function;
  assume
A1: rng A \/ rng B c= dom f;
  then
A2: rng (A^B) c= dom f by FINSEQ_1:44;
  then reconsider fAB = f*(A^B) as FinSequence by FINSEQ_1:20;
A3: rng B c= rng A \/ rng B by XBOOLE_1:7;
  then reconsider fB = f*B as FinSequence by A1,FINSEQ_1:20,XBOOLE_1:1;
A4: dom (f*B) = dom B by A1,A3,RELAT_1:46,XBOOLE_1:1;
  then
A5: len fB = len B by FINSEQ_3:31;
A6: rng A c= rng A \/ rng B by XBOOLE_1:7;
  then reconsider fA = f*A as FinSequence by A1,FINSEQ_1:20,XBOOLE_1:1;
  take fA, fB;
A7: dom (f*(A^B)) = dom (A^B) by A2,RELAT_1:46;
A8: dom (f*A) = dom A by A1,A6,RELAT_1:46,XBOOLE_1:1;
  then
A9: len fA = len A by FINSEQ_3:31;
A10: now
    let k be Nat;
    assume 1 <=k & k <= len fAB;
    then
A11: k in dom fAB by FINSEQ_3:27;
    per cases;
    suppose
A12:  k in dom fA;
      hence (fA^fB).k = fA.k by FINSEQ_1:def 7
        .= f.(A.k) by A12,FUNCT_1:22
        .= f.((A^B).k) by A8,A12,FINSEQ_1:def 7
        .= fAB.k by A11,FUNCT_1:22;
    end;
    suppose
      not k in dom fA;
      then consider n being Nat such that
A13:  n in dom B and
A14:  k=len A + n by A8,A7,A11,FINSEQ_1:38;
      thus fAB.k = f.((A^B).k) by A11,FUNCT_1:22
        .= f.(B.n) by A13,A14,FINSEQ_1:def 7
        .= fB.n by A4,A13,FUNCT_1:22
        .= (fA^fB).k by A9,A4,A13,A14,FINSEQ_1:def 7;
    end;
  end;
  len fAB = len (A^B) by A7,FINSEQ_3:31
    .= len fA + len fB by A9,A5,FINSEQ_1:35
    .= len (fA^fB) by FINSEQ_1:35;
  hence thesis by A10,FINSEQ_1:18;
end;

theorem Th2:
  for b being bag of 0 holds decomp b = <* <* {}, {} *> *>
proof
  let b be bag of 0;
  b in Bags {} by PRE_POLY:def 12;
  then
A1: b = {} by PRE_POLY:51,TARSKI:def 1;
A2: EmptyBag {} = {} --> 0 by PRE_POLY:def 13;
  then divisors b = <* {} *> by A1,PRE_POLY:67;
  then
A3: len divisors b = 1 by FINSEQ_1:56;
A4: dom divisors b = dom decomp b by PRE_POLY:def 17;
  then 1 in dom decomp b by A3,FINSEQ_3:27;
  then
A5: (decomp b).1=(decomp b)/.1 by PARTFUN1:def 8
    .=<* {},{} *>by A1,A2,PRE_POLY:71;
  len decomp b = 1 by A3,A4,FINSEQ_3:31;
  hence thesis by A5,FINSEQ_1:57;
end;

theorem Th3:
  for i,j being Element of NAT, b being bag of j st i <= j holds (b
  |i) is Element of Bags i
proof
  let i,j being Element of NAT, b being bag of j;
  assume
A1: i <= j;
  i c= j
  proof
    let x be set;
    assume x in i;
    then x in {y where y is Element of NAT : y < i } by AXIOMS:30;
    then consider x9 being Element of NAT such that
A2: x9=x and
A3: x9 < i;
    x9 < j by A1,A3,XXREAL_0:2;
    then x9 in {y where y is Element of NAT : y < j };
    hence thesis by A2,AXIOMS:30;
  end;
  hence thesis by PRE_POLY:def 12;
end;

theorem Th4:
  for i, j being set, b1, b2 being bag of j, b19,b29 being bag of i
  st b19 = (b1|i) & b29 = (b2|i) & b1 divides b2 holds b19 divides b29
proof
  let i,j be set, b1,b2 be bag of j, b19,b29 be bag of i;
  assume that
A1: b19=(b1|i) & b29=(b2|i) and
A2: b1 divides b2;
  now
    let k be set;
A3: dom b19 = i by PARTFUN1:def 4
      .= dom b29 by PARTFUN1:def 4;
    per cases;
    suppose
A4:   not k in dom b19;
      then b19.k = {} by FUNCT_1:def 4
        .= b29.k by A3,A4,FUNCT_1:def 4;
      hence b19.k <= b29.k;
    end;
    suppose
      k in dom b19;
      then b19.k = b1.k & b29.k = b2.k by A1,A3,FUNCT_1:70;
      hence b19.k <= b29.k by A2,PRE_POLY:def 11;
    end;
  end;
  hence thesis by PRE_POLY:def 11;
end;

theorem Th5:
  for i,j be set, b1, b2 being bag of j, b19, b29 being bag of i st
  b19=(b1|i) & b29=(b2|i) holds (b1-' b2)|i = b19-' b29 & (b1+b2)|i = b19+b29
proof
  let i,j be set, b1, b2 being bag of j, b19, b29 being bag of i;
  assume that
A1: b19=(b1|i) and
A2: b29=(b2|i);
  dom b1 = j by PARTFUN1:def 4;
  then
A3: dom (b1|i) = j /\ i by RELAT_1:90;
  dom b2 = j by PARTFUN1:def 4;
  then
A4: dom (b2|i) = j /\ i by RELAT_1:90;
  dom (b1 + b2) = j by PARTFUN1:def 4;
  then
A5: dom ((b1 + b2)|i) = j /\ i by RELAT_1:90;
A6: now
    let x be set;
    assume
A7: x in j /\ i;
    hence ((b1 + b2)|i).x = (b1 + b2).x by A5,FUNCT_1:70
      .= b1.x + b2.x by PRE_POLY:def 5
      .= b19.x + b2.x by A1,A3,A7,FUNCT_1:70
      .= b19.x + b29.x by A2,A4,A7,FUNCT_1:70
      .= (b19 + b29).x by PRE_POLY:def 5;
  end;
  dom (b1 -' b2) = j by PARTFUN1:def 4;
  then
A8: dom ((b1 -' b2)|i) = j /\ i by RELAT_1:90;
A9: now
    let x be set;
    assume
A10: x in j /\ i;
    hence ((b1 -' b2)|i).x = (b1 -' b2).x by A8,FUNCT_1:70
      .= b1.x -' b2.x by PRE_POLY:def 6
      .= b19.x -' b2.x by A1,A3,A10,FUNCT_1:70
      .= b19.x -' b29.x by A2,A4,A10,FUNCT_1:70
      .= (b19 -' b29).x by PRE_POLY:def 6;
  end;
  dom (b19 -' b29) = i by PARTFUN1:def 4
    .= j /\ i by A1,A3,PARTFUN1:def 4;
  hence (b1 -' b2)|i = b19 -' b29 by A8,A9,FUNCT_1:9;
  dom (b19 + b29) = i by PARTFUN1:def 4
    .= j /\ i by A1,A3,PARTFUN1:def 4;
  hence thesis by A5,A6,FUNCT_1:9;
end;

definition
  let n,k be Nat, b be bag of n;
  func b bag_extend k -> Element of Bags (n+1) means
  :Def1:
  it|n = b & it.n = k;
  existence
  proof
    set b1 = b +* (n .--> k);
A1: dom b = n by PARTFUN1:def 4;
A2: dom b1 = dom b \/ dom (n .--> k) by FUNCT_4:def 1
      .= dom b \/ {n} by FUNCOP_1:19
      .= n \/ {n} by PARTFUN1:def 4
      .= succ n by ORDINAL1:def 1
      .= n+1 by NAT_1:39;
    then b1 is ManySortedSet of n+1 by PARTFUN1:def 4,RELAT_1:def 18;
    then reconsider b1 as Element of Bags (n+1) by PRE_POLY:def 12;
    take b1;
A3: dom (b1|n) = (n+1) /\ n by A2,RELAT_1:90
      .= succ n /\ n by NAT_1:39
      .= (n \/ {n}) /\ n by ORDINAL1:def 1
      .= n by XBOOLE_1:21;
    now
      let x be set;
      assume
A4:   x in n;
      then
A5:   x in dom b \/ dom (n .--> k) by A1,XBOOLE_0:def 3;
A6:   now
        assume x in dom (n .--> k);
        then x in {n} by FUNCOP_1:19;
        then x = n by TARSKI:def 1;
        hence contradiction by A4;
      end;
      thus (b1|n).x=b1.x by A3,A4,FUNCT_1:70
        .= b.x by A5,A6,FUNCT_4:def 1;
    end;
    hence b1|n = b by A3,A1,FUNCT_1:9;
    n in {n} by TARSKI:def 1;
    then
A7: n in dom (n .--> k) by FUNCOP_1:19;
    then n in dom b \/ dom (n .--> k) by XBOOLE_0:def 3;
    hence b1.n = (n .--> k).n by A7,FUNCT_4:def 1
      .= k by FUNCOP_1:87;
  end;
  uniqueness
  proof
    let b1,b2 be Element of Bags (n+1);
    assume that
A8: b1|n = b and
A9: b1.n = k and
A10: b2|n = b and
A11: b2.n = k;
A12: dom b1 = n+1 by PARTFUN1:def 4;
A13: now
      let x be set;
      assume
A14:  x in n+1;
      then x in succ n by NAT_1:39;
      then
A15:  x in n \/ {n} by ORDINAL1:def 1;
      per cases;
      suppose
        x in {n};
        then x = n by TARSKI:def 1;
        hence b1.x = b2.x by A9,A11;
      end;
      suppose
        not x in {n};
        then x in n by A15,XBOOLE_0:def 3;
        then x in (n+1) /\ n by A14,XBOOLE_0:def 4;
        then
A16:    x in dom b by A8,A12,RELAT_1:90;
        hence b1.x = b.x by A8,FUNCT_1:70
          .= b2.x by A10,A16,FUNCT_1:70;
      end;
    end;
    dom b2 = n+1 by PARTFUN1:def 4;
    hence thesis by A12,A13,FUNCT_1:9;
  end;
end;

theorem Th6:
  for n being Element of NAT holds EmptyBag (n+1) = (EmptyBag n) bag_extend 0
proof
  let n being Element of NAT;
A1: now
    let x be set;
    assume x in n+1;
    then x in succ n by NAT_1:39;
    then
A2: x in n \/ {n} by ORDINAL1:def 1;
    per cases by A2,XBOOLE_0:def 3;
    suppose
A3:   x in n;
      thus (EmptyBag(n+1)).x = 0 by PRE_POLY:52
        .= (EmptyBag n).x by PRE_POLY:52
        .= (((EmptyBag n) bag_extend 0)|n).x by Def1
        .= ((EmptyBag n) bag_extend 0).x by A3,FUNCT_1:72;
    end;
    suppose
A4:   x in {n};
      thus (EmptyBag(n+1)).x = 0 by PRE_POLY:52
        .= ((EmptyBag n) bag_extend 0).n by Def1
        .= ((EmptyBag n) bag_extend 0).x by A4,TARSKI:def 1;
    end;
  end;
  dom (EmptyBag (n+1)) = n+1 & dom ((EmptyBag n) bag_extend 0) = n+1 by
PARTFUN1:def 4;
  hence thesis by A1,FUNCT_1:9;
end;

theorem Th7:
  for n be Ordinal, b, b1 be bag of n holds b1 in rng divisors b
  iff b1 divides b
proof
  let n be Ordinal, b, b1 be bag of n;
  consider S being non empty finite Subset of Bags n such that
A1: divisors b = SgmX(BagOrder n, S) and
A2: for p being bag of n holds p in S iff p divides b by PRE_POLY:def 16;
  field (BagOrder n) = Bags n by ORDERS_1:100;
  then
A3: BagOrder n linearly_orders S by ORDERS_1:133,134;
  hereby
    assume b1 in rng divisors b;
    then b1 in S by A1,A3,PRE_POLY:def 2;
    hence b1 divides b by A2;
  end;
  assume b1 divides b;
  then b1 in S by A2;
  hence thesis by A1,A3,PRE_POLY:def 2;
end;

definition
  let X be set, x be Element of X;
  func UnitBag x -> Element of Bags X equals
  (EmptyBag X)+*(x, 1);
  coherence by PRE_POLY:def 12;
end;

theorem Th8:
  for X being non empty set, x being Element of X holds support UnitBag x = {x}
proof
  let X be non empty set, x be Element of X;
  now
    let a be set;
    hereby
      assume
A1:   a in support UnitBag x;
      now
        assume a <> x;
        then ((EmptyBag X)+*(x, 1)).a = (EmptyBag X).a by FUNCT_7:34
          .= 0 by PRE_POLY:52;
        hence contradiction by A1,PRE_POLY:def 7;
      end;
      hence a in {x} by TARSKI:def 1;
    end;
    EmptyBag X = X --> 0 by PRE_POLY:def 13;
    then
A2: dom (EmptyBag X) = X by FUNCOP_1:19;
    assume a in {x};
    then a = x by TARSKI:def 1;
    then (UnitBag x).a = 1 by A2,FUNCT_7:33;
    hence a in support UnitBag x by PRE_POLY:def 7;
  end;
  hence thesis by TARSKI:2;
end;

theorem Th9:
  for X being non empty set, x being Element of X holds (UnitBag x)
  .x = 1 & for y being Element of X st x <> y holds (UnitBag x).y = 0
proof
  let X be non empty set, x be Element of X;
A1: dom (X -->0) = X by FUNCOP_1:19;
  thus (UnitBag x).x = ((X --> 0)+*(x, 1)).x by PRE_POLY:def 13
    .= 1 by A1,FUNCT_7:33;
  let y be Element of X;
  assume x <> y;
  hence (UnitBag x).y = (EmptyBag X).y by FUNCT_7:34
    .= 0 by PRE_POLY:52;
end;

theorem Th10:
  for X being non empty set, x1, x2 being Element of X st UnitBag
  x1 = UnitBag x2 holds x1 = x2
proof
  let X be non empty set, x1, x2 be Element of X such that
A1: UnitBag x1 = UnitBag x2 and
A2: x1 <> x2;
  1 = (UnitBag x2).x1 by A1,Th9
    .= 0 by A2,Th9;
  hence contradiction;
end;

theorem Th11:
  for X being non empty Ordinal, x be Element of X, L being
  well-unital non trivial (non empty doubleLoopStr), e being Function of X, L
  holds eval(UnitBag x, e) = e.x
proof
  let X be non empty Ordinal, x be Element of X, L be well-unital non trivial
  (non empty doubleLoopStr), e be Function of X, L;
  reconsider edx = e.x as Element of L;
  support UnitBag x = {x} by Th8;
  hence eval(UnitBag x, e) = power(L).(e.x, (UnitBag x).x) by POLYNOM2:17
    .= power(L).(e.x, 0+1) by Th9
    .= power(L).(edx, 0) * (edx) by GROUP_1:def 8
    .= 1_L * (edx) by GROUP_1:def 8
    .= e.x by GROUP_1:def 5;
end;

definition
  let X be set, x be Element of X, L be unital (non empty multLoopStr_0);
  func 1_1(x,L) -> Series of X, L equals
  0_(X,L)+*(UnitBag x,1_L);
  coherence;
end;

theorem Th12:
  for X being set, L being unital non trivial (non empty
doubleLoopStr), x be Element of X holds 1_1(x,L).UnitBag x = 1_L & for b being
  bag of X st b <> UnitBag x holds 1_1(x,L).b = 0.L
proof
  let X be set, L be unital non trivial (non empty doubleLoopStr), x be
  Element of X;
  dom (0_(X,L)) = dom ((Bags X) --> 0.L) by POLYNOM1:def 24
    .= Bags X by FUNCOP_1:19;
  hence 1_1(x,L).UnitBag x = 1_L by FUNCT_7:33;
  let b be bag of X;
  assume b <> UnitBag x;
  hence 1_1(x,L).b = (0_(X,L)).b by FUNCT_7:34
    .= 0.L by POLYNOM1:81;
end;

theorem Th13:
  for X being set, x being Element of X, L being add-associative
right_zeroed right_complementable well-unital right-distributive non trivial (
  non empty doubleLoopStr) holds Support 1_1(x,L) = {UnitBag x}
proof
  let X be set, x be Element of X, L be add-associative right_zeroed
  right_complementable well-unital right-distributive non trivial (non empty
  doubleLoopStr);
  now
    let a be set;
    hereby
      assume
A1:   a in Support 1_1(x,L);
      then reconsider b = a as Element of Bags X;
      now
        assume a <> UnitBag x;
        then 1_1(x,L).b = (0_(X,L)).b by FUNCT_7:34
          .= 0.L by POLYNOM1:81;
        hence contradiction by A1,POLYNOM1:def 9;
      end;
      hence a in {UnitBag x} by TARSKI:def 1;
    end;
    assume
A2: a in {UnitBag x};
    then a = UnitBag x by TARSKI:def 1;
    then 1_1(x,L).a <> 0.L by Th12;
    hence a in Support 1_1(x,L) by A2,POLYNOM1:def 9;
  end;
  hence thesis by TARSKI:2;
end;

registration
  let X be Ordinal, x be Element of X, L be add-associative right_zeroed
  right_complementable well-unital right-distributive non trivial (non empty
  doubleLoopStr);
  cluster 1_1(x,L) -> finite-Support;
  coherence
  proof
    Support 1_1(x,L) = {UnitBag x} by Th13;
    hence thesis by POLYNOM1:def 10;
  end;
end;

theorem Th14:
  for L being add-associative right_zeroed right_complementable
  well-unital right-distributive non trivial (non empty doubleLoopStr), X being
non empty set, x1, x2 being Element of X st 1_1(x1,L) = 1_1(x2,L) holds x1 = x2
proof
  let L be add-associative right_zeroed right_complementable well-unital
  right-distributive non trivial (non empty doubleLoopStr), X be non empty set,
  x1, x2 be Element of X such that
A1: 1_1(x1,L) = 1_1(x2,L) and
A2: x1 <> x2;
  1_L = 1_1(x2,L).UnitBag x1 by A1,Th12
    .= 0.L by A2,Th10,Th12;
  hence contradiction;
end;

theorem Th15:
  for L being add-associative right_zeroed right_complementable
distributive (non empty doubleLoopStr), x being Element of Polynom-Ring L, p be
  sequence of L st x = p holds -x = -p
proof
  let L be add-associative right_zeroed right_complementable distributive (non
  empty doubleLoopStr), x being Element of Polynom-Ring L, p be sequence of L;
  assume
A1: x = p;
  reconsider x9=x as Polynomial of L by POLYNOM3:def 12;
A2: now
    let i be set;
    assume
A3: i in NAT;
    then reconsider i9=i as Element of NAT;
    thus (p-p).i = p.i9 - p.i9 by POLYNOM3:27
      .= 0.L by RLVECT_1:28
      .= (0_.L).i by A3,FUNCOP_1:13;
  end;
  reconsider mx=-x9 as Element of Polynom-Ring L by POLYNOM3:def 12;
  dom 0_.L = NAT & dom (p-p) = NAT by FUNCT_2:def 1;
  then
A4: p-p = 0_.L by A2,FUNCT_1:9;
  x+mx = x9+-x9 by POLYNOM3:def 12
    .=0.(Polynom-Ring L) by A1,A4,POLYNOM3:def 12;
  then x = -mx by RLVECT_1:19;
  hence thesis by A1,RLVECT_1:30;
end;

theorem Th16:
  for L being add-associative right_zeroed right_complementable
distributive (non empty doubleLoopStr), x, y being Element of Polynom-Ring L, p
  , q be sequence of L st x = p & y = q holds x-y = p-q
proof
  let L being add-associative right_zeroed right_complementable distributive (
non empty doubleLoopStr), x,y being Element of Polynom-Ring L, p,q be sequence
  of L;
  assume that
A1: x = p and
A2: y = q;
A3: -y = -q by A2,Th15;
  thus x - y = x + (-y) by RLVECT_1:def 14
    .= p - q by A1,A3,POLYNOM3:def 12;
end;

definition
  let L be right_zeroed add-associative right_complementable well-unital
  distributive (non empty doubleLoopStr);
  let I be non empty Subset of Polynom-Ring L;
  func minlen(I) -> non empty Subset of I equals
  { x where x is Element of I :
  for x9,y9 being Polynomial of L st x9=x & y9 in I holds len x9 <= len y9 };
  coherence
  proof
    I c= I;
    then reconsider I9=I as non empty Subset of I;
    defpred P[Element of I,Element of NAT] means for p being Polynomial of L
    st $1=p holds $2 = len p;
    set u = { x where x is Element of I : for x9,y9 being Polynomial of L st
    x9=x & y9 in I holds len x9 <= len y9 };
A1: now
      let x be Element of I;
      reconsider x9=x as Polynomial of L by POLYNOM3:def 12;
      for p be Polynomial of L st x=p holds len x9 = len p;
      hence ex y being Element of NAT st P[x,y];
    end;
    consider f being Function of I,NAT such that
A2: for x being Element of I holds P[x,f.x] from FUNCT_2:sch 3(A1);
    min (f.:I9) in f.:I by XXREAL_2:def 7;
    then consider x being set such that
A3: x in dom f and
    x in I and
A4: min (f.:I9) = f.x by FUNCT_1:def 12;
    reconsider x as Element of I by A3;
    now
      let x9,y9 being Polynomial of L;
      assume that
A5:   x9=x and
A6:   y9 in I;
      dom f = I by FUNCT_2:def 1;
      then f.y9 in f.:I by A6,FUNCT_1:def 12;
      then f.x <= f.y9 by A4,XXREAL_2:def 7;
      then len x9 <= f.y9 by A2,A5;
      hence len x9 <= len y9 by A2,A6;
    end;
    then
A7: x in u;
    u c= I
    proof
      let x be set;
      assume x in u;
      then
      ex x99 being Element of I st x99=x & for x9,y9 being Polynomial of L
      st x9=x99 & y9 in I holds len x9 <= len y9;
      hence thesis;
    end;
    hence thesis by A7;
  end;
end;

theorem Th17:
  for L be right_zeroed add-associative right_complementable
  well-unital distributive (non empty doubleLoopStr), I be non empty Subset of
Polynom-Ring L, i1, i2 be Polynomial of L st i1 in minlen(I) & i2 in I holds i1
  in I & len i1 <= len i2
proof
  let L be right_zeroed add-associative right_complementable well-unital
distributive (non empty doubleLoopStr), I be non empty Subset of Polynom-Ring L
  , i1, i2 be Polynomial of L;
  assume that
A1: i1 in minlen(I) and
A2: i2 in I;
  ex i19 being Element of I st i19=i1 & for x9,y9 being Polynomial of L st
  x9=i19 & y9 in I holds len x9 <= len y9 by A1;
  hence thesis by A2;
end;

definition
  let L be right_zeroed add-associative right_complementable well-unital
  distributive (non empty doubleLoopStr), n be Nat, a be Element of L;
  func monomial(a,n) -> Polynomial of L means
  :Def5:
  for x being Nat holds (x = n implies it.x = a) & (x <> n implies it.x = 0.L);
  existence
  proof
    reconsider x = 0_.(L)+*(n,a) as sequence of L;
    now
      let i be Nat;
A1:   i in NAT by ORDINAL1:def 13;
      assume i >= n+1;
      then i > n by NAT_1:13;
      hence x.i = (NAT --> 0.L).i by FUNCT_7:34
        .= 0.L by A1,FUNCOP_1:13;
    end;
    then reconsider x as Polynomial of L by ALGSEQ_1:def 2;
    now
      let i be Nat;
A2:   i in NAT by ORDINAL1:def 13;
      thus i = n implies x.i = a
      proof
A3:     dom 0_.(L) = NAT by FUNCT_2:def 1;
        assume i = n;
        hence thesis by A2,A3,FUNCT_7:33;
      end;
      thus i <> n implies x.i = 0.L
      proof
        assume i <> n;
        hence x.i = (NAT --> 0.L).i by FUNCT_7:34
          .= 0.L by A2,FUNCOP_1:13;
      end;
    end;
    hence thesis;
  end;
  uniqueness
  proof
    let u,v be Polynomial of L such that
A4: for x being Nat holds (x=n implies u.x=a) & (x<>n implies u.x = 0.L) and
A5: for x being Nat holds (x=n implies v.x=a) & (x<>n implies v.x = 0.L);
A6: now
      let x be set;
      assume
A7:   x in NAT;
      per cases;
      suppose
A8:     x = n;
        hence u.x = a by A4
          .= v.x by A5,A8;
      end;
      suppose
A9:     x <> n;
        hence u.x = 0.L by A4,A7
          .= v.x by A5,A7,A9;
      end;
    end;
    dom u = NAT & dom v = NAT by FUNCT_2:def 1;
    hence u = v by A6,FUNCT_1:9;
  end;
end;

theorem Th18:
  for L be right_zeroed add-associative right_complementable
  well-unital distributive (non empty doubleLoopStr), n be Element of NAT, a be
  Element of L holds (a <> 0.L implies len monomial(a,n) = n+1) & (a = 0.L
  implies len monomial(a,n) = 0) & len monomial (a,n) <= n+1
proof
  let L be right_zeroed add-associative right_complementable well-unital
distributive (non empty doubleLoopStr), n be Element of NAT, a be Element of L;
A1: now
    assume
A2: a = 0.L;
    now
      let i be Nat;
      assume i >= 0;
      per cases;
      suppose
        i = n;
        hence monomial(a,n).i = 0.L by A2,Def5;
      end;
      suppose
        i<>n;
        hence monomial(a,n).i = 0.L by Def5;
      end;
    end;
    then 0 is_at_least_length_of monomial(a,n) by ALGSEQ_1:def 3;
    hence len monomial(a,n) = 0 by ALGSEQ_1:def 4;
  end;
  now
    now
      let i be Nat;
      assume i >= n+1;
      then i > n by NAT_1:13;
      hence monomial(a,n).i = 0.L by Def5;
    end;
    then n+1 is_at_least_length_of monomial(a,n) by ALGSEQ_1:def 3;
    then
A3: len monomial(a,n) <= n+1 by ALGSEQ_1:def 4;
    assume a <> 0.L;
    then monomial(a,n).n <> 0.L by Def5;
    then len monomial(a,n) > n by ALGSEQ_1:22;
    then len monomial(a,n) >= n+1 by NAT_1:13;
    hence len monomial(a,n) = n+1 by A3,XXREAL_0:1;
  end;
  hence thesis by A1;
end;

theorem Th19:
  for L be right_zeroed add-associative right_complementable
  well-unital distributive (non empty doubleLoopStr), n, x be Element of NAT, a
be Element of L, p be Polynomial of L holds (monomial(a,n)*'p).(x+n) = a * (p.x
  )
proof
  let L be right_zeroed add-associative right_complementable well-unital
distributive (non empty doubleLoopStr), n,x be Element of NAT, a be Element of
  L, p be Polynomial of L;
  consider r being FinSequence of the carrier of L such that
A1: len r = x+n+1 and
A2: (monomial(a,n)*'p).(x+n) = Sum r and
A3: for k be Element of NAT st k in dom r holds r.k = monomial(a,n).(k-'
  1) * p.(x+n+1-'k) by POLYNOM3:def 11;
  len r = n+(1+x) by A1;
  then consider b,c being FinSequence of the carrier of L such that
A4: len b = n and
A5: len c = 1+x and
A6: r = b^c by FINSEQ_2:26;
  consider d,e being FinSequence of the carrier of L such that
A7: len d = 1 and
  len e = x and
A8: c = d^e by A5,FINSEQ_2:26;
A9: dom d c= dom c by A8,FINSEQ_1:39;
  now
A10: dom b c= dom r by A6,FINSEQ_1:39;
    let i be Element of NAT;
A11: i - 1 < i by XREAL_1:148;
    assume
A12: i in dom b;
    then
A13: i <= n by A4,FINSEQ_3:27;
    1 <= i by A12,FINSEQ_3:27;
    then
A14: i-'1 = i-1 by XREAL_1:235;
    thus b.i = r.i by A6,A12,FINSEQ_1:def 7
      .= monomial(a,n).(i-'1)*p.(x+n+1-'i) by A3,A12,A10
      .= 0.L * p.(x+n+1-'i) by A13,A14,A11,Def5
      .= 0.L by VECTSP_1:39;
  end;
  then
A15: Sum b = 0.L by POLYNOM3:1;
  now
    let i be Element of NAT;
A16: n+(1+i) -' 1 = n+i+1 -' 1 .= n+i by NAT_D:34;
    assume
A17: i in dom e;
    then
A18: 1+i in dom c by A7,A8,FINSEQ_1:41;
    i >= 1 by A17,FINSEQ_3:27;
    then n+i >= n+1 by XREAL_1:8;
    then
A19: n+i > n by NAT_1:13;
    thus e.i = c.(1+i) by A7,A8,A17,FINSEQ_1:def 7
      .= r.(n+(1+i)) by A4,A6,A18,FINSEQ_1:def 7
      .= monomial(a,n).(n+(1+i)-'1)*p.(x+n+1-'(n+(1+i))) by A3,A4,A6,A18,
FINSEQ_1:41
      .= 0.L * p.(x+n+1-'(n+(1+i))) by A19,A16,Def5
      .= 0.L by VECTSP_1:39;
  end;
  then
A20: Sum e = 0.L by POLYNOM3:1;
A21: 1 in dom d by A7,FINSEQ_3:27;
  then d.1 = c.1 by A8,FINSEQ_1:def 7
    .= r.(n+1) by A4,A6,A21,A9,FINSEQ_1:def 7
    .= monomial(a,n).(n+1-'1)*p.(x+n+1-'(n+1)) by A3,A4,A6,A21,A9,FINSEQ_1:41
    .= monomial(a,n).n*p.(x+(n+1)-'(n+1)) by NAT_D:34
    .= monomial(a,n).n*p.x by NAT_D:34
    .= a*p.x by Def5;
  then d = <* a*p.x *> by A7,FINSEQ_1:57;
  then Sum d = a * (p.x) by RLVECT_1:61;
  then Sum c = a * (p.x) + 0.L by A8,A20,RLVECT_1:58
    .= a * (p.x) by RLVECT_1:10;
  hence (monomial(a,n)*'p).(x+n) = 0.L + a * (p.x) by A2,A6,A15,RLVECT_1:58
    .= a * (p.x) by RLVECT_1:10;
end;

theorem Th20:
  for L be right_zeroed add-associative right_complementable
  well-unital distributive (non empty doubleLoopStr), n, x be Element of NAT, a
be Element of L, p be Polynomial of L holds (p*'monomial(a,n)).(x+n) = (p.x) *
  a
proof
  let L be right_zeroed add-associative right_complementable well-unital
distributive (non empty doubleLoopStr), n,x be Element of NAT, a be Element of
  L, p be Polynomial of L;
  consider r being FinSequence of the carrier of L such that
A1: len r = x+n+1 and
A2: (p*'monomial(a,n)).(x+n) = Sum r and
A3: for k be Element of NAT st k in dom r holds r.k = p.(k-'1) *
  monomial(a,n).(x+n+1-'k) by POLYNOM3:def 11;
  len r = x+(n+1) by A1;
  then consider b,c being FinSequence of the carrier of L such that
A4: len b = x and
A5: len c = n+1 and
A6: r = b^c by FINSEQ_2:26;
  consider d,e being FinSequence of the carrier of L such that
A7: len d = 1 and
A8: len e = n and
A9: c = d^e by A5,FINSEQ_2:26;
A10: dom d c= dom c by A9,FINSEQ_1:39;
  now
    let i be Element of NAT;
A11: n > n-1 by XREAL_1:148;
    assume
A12: i in dom e;
    then
A13: 1+i in dom c by A7,A9,FINSEQ_1:41;
    i <= n by A8,A12,FINSEQ_3:27;
    then x+i <= x+n by XREAL_1:8;
    then x+i+1<=x+n+1 by XREAL_1:8;
    then
A14: x+n+1 -' (x+(1+i)) = x+n+1 - (x+(1+i)) by XREAL_1:235;
    1 <= i by A12,FINSEQ_3:27;
    then
A15: n-i <= n-1 by XREAL_1:15;
    thus e.i = c.(1+i) by A7,A9,A12,FINSEQ_1:def 7
      .= r.(x+(1+i)) by A4,A6,A13,FINSEQ_1:def 7
      .= p.(x+(1+i)-'1)*monomial(a,n).(x+n+1-'(x+(1+i))) by A3,A4,A6,A13,
FINSEQ_1:41
      .= p.(x+(1+i)-'1)*0.L by A14,A15,A11,Def5
      .= 0.L by VECTSP_1:36;
  end;
  then
A16: Sum e = 0.L by POLYNOM3:1;
  now
    let i be Element of NAT;
A17: dom b c= dom r by A6,FINSEQ_1:39;
    assume
A18: i in dom b;
    then i <= x by A4,FINSEQ_3:27;
    then i+n <= x+n by XREAL_1:8;
    then i+n < x+n+1 by NAT_1:13;
    then
A19: n < x+n+1-i by XREAL_1:22;
    then
A20: x+n+1-i = x+n+1-'i by XREAL_0:def 2;
    thus b.i = r.i by A6,A18,FINSEQ_1:def 7
      .= p.(i-'1)*monomial(a,n).(x+n+1-'i) by A3,A18,A17
      .= p.(i-'1)*0.L by A19,A20,Def5
      .= 0.L by VECTSP_1:36;
  end;
  then
A21: Sum b = 0.L by POLYNOM3:1;
A22: 1 in dom d by A7,FINSEQ_3:27;
  then d.1 = c.1 by A9,FINSEQ_1:def 7
    .= r.(x+1) by A4,A6,A22,A10,FINSEQ_1:def 7
    .= p.(x+1-'1)*monomial(a,n).(x+n+1-'(x+1)) by A3,A4,A6,A22,A10,FINSEQ_1:41
    .= p.x*monomial(a,n).(n+(x+1)-'(x+1)) by NAT_D:34
    .= p.x*monomial(a,n).n by NAT_D:34
    .= p.x*a by Def5;
  then d = <* p.x*a *> by A7,FINSEQ_1:57;
  then Sum d = p.x*a by RLVECT_1:61;
  then Sum c = (p.x)*a + 0.L by A9,A16,RLVECT_1:58
    .= (p.x)*a by RLVECT_1:10;
  hence (p*'monomial(a,n)).(x+n) = 0.L + (p.x)*a by A2,A6,A21,RLVECT_1:58
    .= (p.x)*a by RLVECT_1:10;
end;

theorem Th21:
  for L be right_zeroed add-associative right_complementable
  well-unital distributive (non empty doubleLoopStr), p, q be Polynomial of L
  holds len (p*'q) <= (len p)+(len q)-'1
proof
  let L be right_zeroed add-associative right_complementable well-unital
  distributive (non empty doubleLoopStr), p,q be Polynomial of L;
  now
    let i be Nat;
A1: len p + len q -' 1 >= len p + len q - 1 by XREAL_0:def 2;
    i in NAT by ORDINAL1:def 13;
    then consider r be FinSequence of the carrier of L such that
A2: len r = i+1 and
A3: (p*'q).i = Sum r and
A4: for k be Element of NAT st k in dom r holds r.k=p.(k-'1) * q.(i+1
    -'k) by POLYNOM3:def 11;
    assume i >= len p + len q -' 1;
    then i >= len p + (len q - 1) by A1,XXREAL_0:2;
    then len p <= i - (len q - 1) by XREAL_1:21;
    then
A5: -len p >= -(i - len q + 1) by XREAL_1:26;
    now
      let k be Element of NAT;
      assume
A6:   k in dom r;
      then
A7:   r.k = p.(k-'1) * q.(i+1-'k) by A4;
      k in Seg len r by A6,FINSEQ_1:def 3;
      then k <= i+1 by A2,FINSEQ_1:3;
      then
A8:   i+1-k >= 0 by XREAL_1:50;
      per cases;
      suppose
        k-'1 < len p;
        then k-1 < len p by XREAL_0:def 2;
        then -(k-1) > -len p by XREAL_1:26;
        then 1-k > len q - 1 - i by A5,XXREAL_0:2;
        then i+(1-k)>len q - 1 by XREAL_1:21;
        then i+1-'k > len q -1 by A8,XREAL_0:def 2;
        then i+1-'k >= len q -1 +1 by INT_1:20;
        then q.(i+1-'k) = 0.L by ALGSEQ_1:22;
        hence r.k = 0.L by A7,VECTSP_1:36;
      end;
      suppose
        k-'1 >= len p;
        then p.(k-'1) = 0.L by ALGSEQ_1:22;
        hence r.k = 0.L by A7,VECTSP_1:39;
      end;
    end;
    hence (p*'q).i = 0.L by A3,POLYNOM3:1;
  end;
  then len p + len q -' 1 is_at_least_length_of p*'q by ALGSEQ_1:def 3;
  hence thesis by ALGSEQ_1:def 4;
end;

begin :: On Ring isomorphism

theorem Th22:
  for R,S being non empty doubleLoopStr, I being Ideal of R, P
  being Function of R,S st P is RingIsomorphism holds P.:I is Ideal of S
proof
  let R,S being non empty doubleLoopStr, I being Ideal of R, P being Function
  of R,S;
  set Q = P.:I;
  assume
A1: P is RingIsomorphism;
A2: now
    let p, x be Element of S;
    assume x in Q;
    then consider x9 being set such that
A3: x9 in the carrier of R and
A4: x9 in I and
A5: x = P.x9 by FUNCT_2:115;
    reconsider x9 as Element of R by A3;
A6: P is RingMonomorphism RingEpimorphism by A1,QUOFIELD:def 24;
    then rng P = the carrier of S by QUOFIELD:def 22;
    then consider p9 being set such that
A7: p9 in dom P and
A8: p = P.p9 by FUNCT_1:def 5;
    reconsider p9 as Element of R by A7;
A9: p9*x9 in I by A4,IDEAL_1:def 2;
    P is RingHomomorphism by A6,QUOFIELD:def 22;
    then P is multiplicative by QUOFIELD:def 21;
    then p*x = P.(p9*x9) by A5,A8,GROUP_6:def 7;
    hence p*x in Q by A9,FUNCT_2:43;
  end;
A10: now
    let p, x be Element of S;
    assume x in Q;
    then consider x9 being set such that
A11: x9 in the carrier of R and
A12: x9 in I and
A13: x = P.x9 by FUNCT_2:115;
    reconsider x9 as Element of R by A11;
A14: P is RingMonomorphism RingEpimorphism by A1,QUOFIELD:def 24;
    then rng P = the carrier of S by QUOFIELD:def 22;
    then consider p9 being set such that
A15: p9 in dom P and
A16: p = P.p9 by FUNCT_1:def 5;
    reconsider p9 as Element of R by A15;
A17: x9*p9 in I by A12,IDEAL_1:def 3;
    P is RingHomomorphism by A14,QUOFIELD:def 22;
    then P is multiplicative by QUOFIELD:def 21;
    then x*p = P.(x9*p9) by A13,A16,GROUP_6:def 7;
    hence x*p in Q by A17,FUNCT_2:43;
  end;
  now
    let x, y be Element of S;
    assume that
A18: x in Q and
A19: y in Q;
    consider x9 being set such that
A20: x9 in the carrier of R and
A21: x9 in I and
A22: x = P.x9 by A18,FUNCT_2:115;
    consider y9 being set such that
A23: y9 in the carrier of R and
A24: y9 in I and
A25: y = P.y9 by A19,FUNCT_2:115;
    reconsider x9,y9 as Element of R by A20,A23;
A26: x9+y9 in I by A21,A24,IDEAL_1:def 1;
    P is RingMonomorphism RingEpimorphism by A1,QUOFIELD:def 24;
    then P is RingHomomorphism by QUOFIELD:def 22;
    then P is additive by QUOFIELD:def 21;
    then x+y = P.(x9+y9) by A22,A25,GRCAT_1:def 13;
    hence x+y in Q by A26,FUNCT_2:43;
  end;
  hence thesis by A2,A10,IDEAL_1:def 1,def 2,def 3;
end;

theorem Th23:
  for R,S being add-associative right_zeroed right_complementable
  (non empty doubleLoopStr), f being Function of R, S st f is RingHomomorphism
  holds f.(0.R) = 0.S
proof
  let R,S be add-associative right_zeroed right_complementable (non empty
  doubleLoopStr);
  let f be Function of R, S;
  assume f is RingHomomorphism;
  then
A1: f is additive by QUOFIELD:def 21;
  f.(0.R)=f.(0.R+0.R) by RLVECT_1:10
    .= f.(0.R)+f.(0.R) by A1,GRCAT_1:def 13;
  then 0.S = (f.(0.R)+f.(0.R))+(-f.(0.R)) by RLVECT_1:def 13
    .= f.(0.R) + (f.(0.R) + (-f.(0.R))) by RLVECT_1:def 6
    .= f.(0.R) + 0.S by RLVECT_1:def 13
    .= f.(0.R) by RLVECT_1:10;
  hence thesis;
end;

theorem Th24:
  for R, S being add-associative right_zeroed right_complementable
  (non empty doubleLoopStr), F being non empty Subset of R, G being non empty
  Subset of S, P being Function of R, S, lc being LinearCombination of F, LC
  being LinearCombination of G, E being FinSequence of [:the carrier of R, the
carrier of R, the carrier of R:] st P is RingHomomorphism & len lc = len LC & E
represents lc & (for i being set st i in dom LC holds LC.i = (P.(E/.i)`1)*(P.(E
  /.i)`2)*(P.(E/.i)`3)) holds P.(Sum lc) = Sum LC
proof
  let R, S be add-associative right_zeroed right_complementable (non empty
  doubleLoopStr), F be non empty Subset of R, G be non empty Subset of S, P be
Function of R,S, lc be LinearCombination of F, LC be LinearCombination of G, E
be FinSequence of [:the carrier of R, the carrier of R, the carrier of R:] such
  that
A1: P is RingHomomorphism and
A2: len lc = len LC and
A3: E represents lc and
A4: for i being set st i in dom LC holds LC.i = (P.(E/.i)`1)*(P.(E/.i)`2
  )*(P.(E/.i)`3);
  defpred P[Element of NAT] means for lc9 being LinearCombination of F, LC9
being LinearCombination of G st lc9 = lc|Seg $1 & LC9 = LC|Seg $1 holds P.(Sum
  lc9) = Sum LC9;
A5: P is additive multiplicative by A1,QUOFIELD:def 21;
A6: dom lc = dom LC by A2,FINSEQ_3:31;
A7: for k being Element of NAT st P[k] holds P[k+1]
  proof
    let k be Element of NAT;
    assume
A8: P[k];
    thus P[k+1]
    proof
      let lc9 be LinearCombination of F, LC9 be LinearCombination of G;
      assume that
A9:   lc9 = lc| Seg (k+1) and
A10:  LC9 = LC|Seg (k+1);
      per cases;
      suppose
A11:    len lc < k+1;
        then
A12:    len lc <= k by NAT_1:13;
A13:    lc9 = lc by A9,A11,FINSEQ_3:55
          .= lc|Seg k by A12,FINSEQ_3:55;
        LC9 = LC by A2,A10,A11,FINSEQ_3:55
          .= LC|Seg k by A2,A12,FINSEQ_3:55;
        hence thesis by A8,A13;
      end;
      suppose
A14:    len lc >= k+1;
        set i = k+1;
        reconsider LCk = LC|Seg k as LinearCombination of G by IDEAL_1:41;
        reconsider lck = lc|Seg k as LinearCombination of F by IDEAL_1:41;
        1 <= k+1 by NAT_1:11;
        then
A15:    k+1 in dom lc by A14,FINSEQ_3:27;
        then
A16:    lc.(k+1) = lc/.(k+1) by PARTFUN1:def 8;
A17:    LC.(k+1) = LC/.(k+1) by A6,A15,PARTFUN1:def 8;
        lc|Seg (k+1) = lck^<*lc.(k+1)*> by A15,FINSEQ_5:11;
        hence P.(Sum lc9) = P.((Sum lck)+lc/.(k+1)) by A9,A16,FVSUM_1:87
          .= P.(Sum lck)+P.(lc/.(k+1)) by A5,GRCAT_1:def 13
          .= (Sum LCk)+P.(lc/.(k+1)) by A8
          .= (Sum LCk)+P.(((E/.i)`1)*((E/.i)`2)*((E/.i)`3)) by A3,A15,A16,
IDEAL_1:def 12
          .= (Sum LCk)+P.(((E/.i)`1)*((E/.i)`2))*P.((E/.i)`3) by A5,
GROUP_6:def 7
          .= (Sum LCk)+P.((E/.i)`1)*P.((E/.i)`2)*P.((E/.i)`3) by A5,
GROUP_6:def 7
          .= (Sum LCk)+LC/.(k+1) by A4,A6,A15,A17
          .= Sum (LCk^<*LC/.(k+1)*>) by FVSUM_1:87
          .= Sum LC9 by A6,A10,A15,A17,FINSEQ_5:11;
      end;
    end;
  end;
A18: lc = lc|Seg len lc & LC = LC|Seg len LC by FINSEQ_3:55;
A19: P[ 0 ]
  proof
    let lc9 be LinearCombination of F, LC9 be LinearCombination of G such that
A20: lc9 = lc|(Seg 0 qua set) and
A21: LC9 = LC|(Seg 0 qua set);
    thus P.(Sum lc9) = P.(Sum <*>the carrier of R) by A20
      .= P.(0.R) by RLVECT_1:60
      .= 0.S by A1,Th23
      .= Sum <*>the carrier of S by RLVECT_1:60
      .= Sum LC9 by A21;
  end;
  for k being Element of NAT holds P[k] from NAT_1:sch 1(A19,A7);
  hence thesis by A2,A18;
end;

theorem Th25:
  for R, S be non empty doubleLoopStr, P be Function of R, S st P
  is RingIsomorphism holds P" is RingIsomorphism
proof
  let R, S be non empty doubleLoopStr, P be Function of R, S;
  assume
A1: P is RingIsomorphism;
  then
A2: P is RingEpimorphism by QUOFIELD:def 24;
  then
A3: rng P = the carrier of S by QUOFIELD:def 22;
  P is RingMonomorphism by A1,QUOFIELD:def 24;
  then
A4: P is one-to-one by QUOFIELD:def 23;
  P is RingHomomorphism by A2,QUOFIELD:def 22;
  then
A5: P is additive multiplicative unity-preserving by QUOFIELD:def 21;
  for x,y being Element of S holds P".(x+y) = P".x + P".y & P".(x*y) = P".
  x * P".y & P".(1_S) = 1_R
  proof
A6: P".(1_S) = P".(P.(1_R)) by A5,GROUP_1:def 17
      .= ((P qua Function)").(P.(1_R)) by A4,A3,TOPS_2:def 4
      .= 1_R by A4,FUNCT_2:32;
    let x,y be Element of S;
    consider x9 being set such that
A7: x9 in the carrier of R and
A8: P.(x9) = x by A3,FUNCT_2:17;
    reconsider x9 as Element of R by A7;
A9: x9 = ((P qua Function)").(P.(x9)) by A4,FUNCT_2:32
      .= P".x by A4,A3,A8,TOPS_2:def 4;
    consider y9 being set such that
A10: y9 in the carrier of R and
A11: P.(y9) = y by A3,FUNCT_2:17;
    reconsider y9 as Element of R by A10;
A12: y9 = ((P qua Function)").(P.(y9)) by A4,FUNCT_2:32
      .= P".y by A4,A3,A11,TOPS_2:def 4;
A13: P".(x*y) = P".(P.(x9*y9)) by A5,A8,A11,GROUP_6:def 7
      .= ((P qua Function)").(P.(x9*y9)) by A4,A3,TOPS_2:def 4
      .= P".x * P".y by A4,A9,A12,FUNCT_2:32;
    P".(x+y) = P".(P.(x9+y9)) by A5,A8,A11,GRCAT_1:def 13
      .= ((P qua Function)").(P.(x9+y9)) by A4,A3,TOPS_2:def 4
      .= P".x + P".y by A4,A9,A12,FUNCT_2:32;
    hence thesis by A13,A6;
  end;
  then P" is additive multiplicative unity-preserving by GRCAT_1:def 13
,GROUP_1:def 17,GROUP_6:def 7;
  then
A14: P" is RingHomomorphism by QUOFIELD:def 21;
A15: rng P = [#]S by A2,QUOFIELD:def 22;
  then rng(P") = [#]R by A4,TOPS_2:62
    .= the carrier of R;
  then
A16: P" is RingEpimorphism by A14,QUOFIELD:def 22;
  P" is one-to-one by A4,A15,TOPS_2:63;
  then P" is RingMonomorphism by A14,QUOFIELD:def 23;
  hence thesis by A16,QUOFIELD:def 24;
end;

theorem Th26:
  for R,S being Abelian add-associative right_zeroed
  right_complementable associative distributive well-unital (non empty
doubleLoopStr), F being non empty Subset of R, P being Function of R,S st P is
  RingIsomorphism holds P.:(F-Ideal) = (P.:F)-Ideal
proof
  let R,S being Abelian add-associative right_zeroed right_complementable
  associative distributive well-unital (non empty doubleLoopStr), F being non
  empty Subset of R, P being Function of R,S;
  assume
A1: P is RingIsomorphism;
  now
    let x be set;
A2: dom P = the carrier of R by FUNCT_2:def 1;
    assume
A3: x in (P.:F)-Ideal;
    then consider lc being LinearCombination of P.: F such that
A4: x = Sum lc by IDEAL_1:60;
    consider E be FinSequence of [:the carrier of S, the carrier of S, the
    carrier of S:] such that
A5: E represents lc by IDEAL_1:35;
    P is RingMonomorphism by A1,QUOFIELD:def 24;
    then
A6: P is one-to-one by QUOFIELD:def 23;
    P is RingEpimorphism by A1,QUOFIELD:def 24;
    then
A7: rng P=the carrier of S by QUOFIELD:def 22;
    then
A8: (P qua Function)" = P" by A6,TOPS_2:def 4;
    (P qua Function)" .: (P.:F) = (P qua Function)"(P.:F) by A6,FUNCT_1:155;
    then consider lc9 being LinearCombination of F such that
A9: len lc = len lc9 & for i being set st i in dom lc9 holds lc9.i =
    (P".(E/.i) `1)*(P".(E /.i)`2)*(P".(E/.i)`3) by A6,A8,A5,FUNCT_1:152
,IDEAL_1:36;
    P" is RingIsomorphism by A1,Th25;
    then P" is RingMonomorphism by QUOFIELD:def 24;
    then P" is RingHomomorphism by QUOFIELD:def 23;
    then P".x = Sum lc9 by A4,A5,A9,Th24;
    then P".x in F-Ideal by IDEAL_1:60;
    then P.(P".x) in P.:(F-Ideal) by A2,FUNCT_1:def 12;
    hence x in P.:(F-Ideal) by A3,A6,A7,A8,FUNCT_1:57;
  end;
  then
A10: (P.:F)-Ideal c= P.:(F-Ideal) by TARSKI:def 3;
  now
    let x be set;
    assume x in P.:(F-Ideal);
    then consider x9 being set such that
    x9 in the carrier of R and
A11: x9 in F-Ideal and
A12: x = P.x9 by FUNCT_2:115;
    consider lc9 being LinearCombination of F such that
A13: x9 = Sum lc9 by A11,IDEAL_1:60;
    consider E being FinSequence of [:the carrier of R, the carrier of R, the
    carrier of R:] such that
A14: E represents lc9 by IDEAL_1:35;
    consider lc being LinearCombination of P.:F such that
A15: len lc9 = len lc & for i being set st i in dom lc holds lc.i = (P.
    (E/.i)`1)* (P.(E/.i)`2 )*(P.(E/.i)`3) by A14,IDEAL_1:36;
    P is RingMonomorphism by A1,QUOFIELD:def 24;
    then P is RingHomomorphism by QUOFIELD:def 23;
    then x = Sum lc by A12,A13,A14,A15,Th24;
    hence x in (P.:F)-Ideal by IDEAL_1:60;
  end;
  then P.:(F-Ideal) c= (P.:F)-Ideal by TARSKI:def 3;
  hence thesis by A10,XBOOLE_0:def 10;
end;

theorem Th27:
  for R,S being Abelian add-associative right_zeroed
  right_complementable associative distributive well-unital (non empty
  doubleLoopStr), P being Function of R,S st P is RingIsomorphism & R is
  Noetherian holds S is Noetherian
proof
  let R,S be Abelian add-associative right_zeroed right_complementable
  associative distributive well-unital (non empty doubleLoopStr), P be Function
  of R,S;
  assume that
A1: P is RingIsomorphism and
A2: R is Noetherian;
  now
    P is RingEpimorphism by A1,QUOFIELD:def 24;
    then
A3: rng P = the carrier of S by QUOFIELD:def 22;
    let I be Ideal of S;
    P is RingMonomorphism by A1,QUOFIELD:def 24;
    then
A4: P is one-to-one by QUOFIELD:def 23;
    reconsider PI=P".:I as Ideal of R by A1,Th22,Th25;
    PI is finitely_generated by A2,IDEAL_1:def 27;
    then consider F being non empty finite Subset of R such that
A5: P".:I = F-Ideal by IDEAL_1:def 26;
    P is RingEpimorphism by A1,QUOFIELD:def 24;
    then rng P = the carrier of S by QUOFIELD:def 22;
    then P" = (P qua Function)" by A4,TOPS_2:def 4;
    then P.:(P".:I) = P.:(P"I) by A4,FUNCT_1:155;
    then P.:(P".:I) = I by A3,FUNCT_1:147;
    then I = (P.:F)-Ideal by A1,A5,Th26;
    hence I is finitely_generated;
  end;
  hence thesis by IDEAL_1:def 27;
end;

theorem Th28:
  for R being add-associative right_zeroed right_complementable
  associative Abelian distributive well-unital non trivial (non empty
  doubleLoopStr) holds ex P being Function of R, Polynom-Ring (0,R) st P is
  RingIsomorphism
proof
  deffunc F(set)=Bags {}--> $1;
  let R be add-associative right_zeroed right_complementable associative
  Abelian distributive well-unital non trivial (non empty doubleLoopStr);
  consider P being Function such that
A1: dom P = the carrier of R and
A2: for x being set st x in the carrier of R holds P.x=F(x) from FUNCT_1
  :sch 3;
  now
    let y be set;
    hereby
      assume y in rng P;
      then consider x being set such that
A3:   x in the carrier of R and
A4:   y = P.x by A1,FUNCT_1:def 5;
      reconsider x as Element of R by A3;
      reconsider y9 = Bags {} --> x as Function of (Bags {}), R;
      Support y9 is finite by PRE_POLY:51;
      then y9 is finite-Support Series of 0, R by POLYNOM1:def 10;
      then y9 in the carrier of Polynom-Ring (0,R) by POLYNOM1:def 27;
      hence y in the carrier of Polynom-Ring (0,R) by A2,A4;
    end;
    assume y in the carrier of Polynom-Ring (0,R);
    then reconsider y9=y as Function of (Bags {}), R by POLYNOM1:def 27;
A5: dom y9 = Bags {} by FUNCT_2:def 1;
    then
A6: rng y9 = {y9.{}} by FUNCT_1:14,PRE_POLY:51;
    then y9.{} in rng y9 by TARSKI:def 1;
    then reconsider x = y9.{} as Element of R;
    y9 = Bags {} --> y9.{} by A5,A6,FUNCOP_1:15;
    then y = P.x by A2;
    hence y in rng P by A1,FUNCT_1:def 5;
  end;
  then
A7: rng P = the carrier of Polynom-Ring (0,R) by TARSKI:2;
  then reconsider P as Function of R, Polynom-Ring (0,R) by A1,FUNCT_2:3;
A8: EmptyBag {} = {} --> 0 by PRE_POLY:def 13;
  now
    let x,y be Element of R;
    reconsider Px = P.x, Py = P.y, Pxy = P.(x+y) as Polynomial of 0, R by
POLYNOM1:def 27;
    now
      let z be bag of 0;
A9:   z in Bags {} by PRE_POLY:def 12;
A10:  Py.z = (Bags {} --> y).z by A2
        .= y by A9,FUNCOP_1:13;
A11:  Px.z = (Bags {} --> x).z by A2
        .= x by A9,FUNCOP_1:13;
      Pxy.z = (Bags {} --> x+y).z by A2
        .= x+y by A9,FUNCOP_1:13;
      hence Pxy.z = Px.z + Py.z by A11,A10;
    end;
    then Pxy = Px + Py by POLYNOM1:def 21;
    hence P.x+P.y = P.(x+y) by POLYNOM1:def 27;
  end;
  then
A12: P is additive by GRCAT_1:def 13;
  now
    let x,y be Element of R;
    reconsider Px = P.x, Py = P.y, Pxy = P.(x*y) as Polynomial of 0, R by
POLYNOM1:def 27;
    now
      reconsider s = <* x*y *> as FinSequence of the carrier of R;
      let b be bag of 0;
      take s;
A13:  b in Bags {} by PRE_POLY:def 12;
      thus Pxy.b = (Bags {} --> x*y).b by A2
        .= x*y by A13,FUNCOP_1:13
        .= Sum s by RLVECT_1:61;
A14:  decomp b = <* <* {}, {} *> *> by Th2;
A15:  len s = 1 by FINSEQ_1:56;
      hence len s = len decomp b by A14,FINSEQ_1:56;
A16:  len decomp b = 1 by A14,FINSEQ_1:56;
      now
        set b1 = {}, b2 = {};
        let k be Element of NAT;
A17:    b1 in Bags {} by PRE_POLY:51,TARSKI:def 1;
        then reconsider b1, b2 as bag of 0;
A18:    Px.b1 = (Bags {} --> x).b1 by A2
          .= x by A17,FUNCOP_1:13;
A19:    Py.b2 = (Bags {} --> y).b2 by A2
          .= y by A17,FUNCOP_1:13;
        assume
A20:    k in dom s;
        then
A21:    1 <= k & k <= 1 by A15,FINSEQ_3:27;
        then
A22:    k = 1 by XXREAL_0:1;
        take b1, b2;
        k in dom decomp b by A16,A21,FINSEQ_3:27;
        hence (decomp b)/.k = (decomp b).1 by A22,PARTFUN1:def 8
          .= <*b1, b2*> by A14,FINSEQ_1:57;
        thus s/.k = s.1 by A20,A22,PARTFUN1:def 8
          .= Px.b1*Py.b2 by A18,A19,FINSEQ_1:57;
      end;
      hence for k being Element of NAT st k in dom s ex b1, b2 being bag of 0
      st (decomp b)/.k = <*b1, b2*> & s/.k = Px.b1*Py.b2;
    end;
    then Pxy = Px *' Py by POLYNOM1:def 26;
    hence P.x*P.y = P.(x*y) by POLYNOM1:def 27;
  end;
  then
A23: P is multiplicative by GROUP_6:def 7;
  take P;
  reconsider f0 = {{}} --> 0.R, f1 = {{}} --> 1_R as Function of {{}},the
  carrier of R;
A24: dom f1 = {{}} by FUNCT_2:def 1;
A25: dom f0 = {{}} by FUNCT_2:def 1;
  then
A26: {} in dom ({{}} --> 0.R) by TARSKI:def 1;
  1_Polynom-Ring (0, R) = 1_ (0,R) by POLYNOM1:90
    .= 0_ (0,R)+*({},1_R) by A8,POLYNOM1:def 25
    .= ({{}} --> 0.R)+*({},1_R) by POLYNOM1:def 24,PRE_POLY:51
    .= ({{}} --> 0.R)+*({} .--> 1_R) by A26,FUNCT_7:def 3
    .= ({{}} --> 1_R) by A25,A24,FUNCT_4:20
    .= P.(1_R)by A2,PRE_POLY:51;
  then P is unity-preserving by GROUP_1:def 17;
  then
A27: P is RingHomomorphism by A12,A23,QUOFIELD:def 21;
  then
A28: P is RingEpimorphism by A7,QUOFIELD:def 22;
  now
    let x1,x2 be set;
    assume that
A29: x1 in dom P and
A30: x2 in dom P;
    assume P.x1 = P.x2;
    then (Bags {} --> x1) = P.x2 by A2,A29;
    then (Bags {} --> x1) = (Bags {} --> x2) by A2,A30;
    hence x1 = x2 by FUNCT_4:7;
  end;
  then P is one-to-one by FUNCT_1:def 8;
  then P is RingMonomorphism by A27,QUOFIELD:def 23;
  hence thesis by A28,QUOFIELD:def 24;
end;

theorem Th29:
  for R being right_zeroed add-associative right_complementable
well-unital distributive non trivial (non empty doubleLoopStr), n being Element
  of NAT, b being bag of n, p1 being Polynomial of n, R, F being FinSequence of
  the carrier of Polynom-Ring (n,R) st p1 = Sum F ex g being Function of the
carrier of Polynom-Ring (n, R), the carrier of R st (for p being Polynomial of
  n, R holds g.p = p.b) & p1.b = Sum (g*F)
proof
  let R be right_zeroed add-associative right_complementable well-unital
  distributive non trivial (non empty doubleLoopStr), n be Element of NAT, b be
  bag of n,p1 be Polynomial of n, R, F be FinSequence of the carrier of
  Polynom-Ring (n,R);
  assume
A1: p1 = Sum F;
  set CR = the carrier of R;
  set PNR = Polynom-Ring (n,R);
  set CPNR = the carrier of PNR;
  defpred P1[Element of CPNR, Element of CR] means for p being Polynomial of n
  , R st p = $1 holds $2 = p.b;
A2: now
    let x be Element of CPNR;
    reconsider x9=x as Polynomial of n, R by POLYNOM1:def 27;
    P1[x,x9.b];
    hence ex y being Element of CR st P1[x,y];
  end;
  consider g be Function of CPNR,CR such that
A3: for x being Element of CPNR holds P1[x,g.x] from FUNCT_2:sch 3(A2);
  take g;
  now
    let p be Polynomial of n,R;
    reconsider p9=p as Element of CPNR by POLYNOM1:def 27;
    P1[p9,g.p9] by A3;
    hence g.p = p.b;
  end;
  hence for p being Polynomial of n, R holds g.p = p.b;
  defpred P2[Nat] means for F9 being FinSequence of CPNR, p19 being Polynomial
  of n, R st len F9 <= $1 & p19 = Sum F9 holds p19.b = Sum (g * F9);
A4: for k being Element of NAT st P2[k] holds P2[k+1]
  proof
    let k be Element of NAT;
    assume
A5: P2[k];
    now
      let F9 be FinSequence of CPNR, p19 be Polynomial of n, R;
      assume that
A6:   len F9 <= k+1 and
A7:   p19 = Sum F9;
      per cases;
      suppose
        len F9 < k+1;
        then len F9 <= k by NAT_1:13;
        hence p19.b = Sum (g * F9) by A5,A7;
      end;
      suppose
        len F9 >= k+1;
        then len F9 = k+1 by A6,XXREAL_0:1;
        then consider p,q being FinSequence such that
A8:     len p = k and
A9:     len q = 1 and
A10:    F9 = p^q by FINSEQ_2:25;
        rng q c= rng F9 by A10,FINSEQ_1:43;
        then rng q c= CPNR by XBOOLE_1:1;
        then reconsider q as FinSequence of CPNR by FINSEQ_1:def 4;
        rng p c= rng F9 by A10,FINSEQ_1:42;
        then rng p c= CPNR by XBOOLE_1:1;
        then reconsider p as FinSequence of CPNR by FINSEQ_1:def 4;
A11:    Sum F9 = Sum p + Sum q by A10,RLVECT_1:58;
        reconsider p9 = Sum p as Polynomial of n, R by POLYNOM1:def 27;
A12:    g * F9 = (g * p)^(g* q) by A10,FINSEQOP:10;
        1 in dom q by A9,FINSEQ_3:27;
        then q.1 in rng q by FUNCT_1:def 5;
        then reconsider q9=q.1 as Element of CPNR;
        reconsider q99=q9 as Polynomial of n, R by POLYNOM1:def 27;
A13:    q = <* q9 *> by A9,FINSEQ_1:57;
        then g * q = <* g.q9 *> by FINSEQ_2:39
          .= <* q99.b *> by A3;
        then
A14:    Sum (g * q) = q99.b by RLVECT_1:61;
        q9 = Sum q by A13,RLVECT_1:61;
        then
A15:    p19 = p9 + q99 by A7,A11,POLYNOM1:def 27;
        p9.b = Sum (g * p) by A5,A8;
        hence p19.b = Sum (g * p) + Sum (g * q) by A14,A15,POLYNOM1:def 21
          .= Sum (g * F9) by A12,RLVECT_1:58;
      end;
    end;
    hence thesis;
  end;
A16: P2[ 0 ]
  proof
    let F9 being FinSequence of CPNR, p19 be Polynomial of n, R;
    assume that
A17: len F9 <= 0 and
A18: p19 = Sum F9;
A19: F9 = <*> (CPNR) by A17;
    then g * F9 = <*> (CR);
    then
A20: Sum (g * F9) = 0.R by RLVECT_1:60;
    p19 = 0.PNR by A18,A19,RLVECT_1:60
      .= 0_(n, R) by POLYNOM1:def 27;
    hence thesis by A20,POLYNOM1:81;
  end;
  for k being Element of NAT holds P2[k] from NAT_1:sch 1(A16,A4);
  then P2[len F];
  hence thesis by A1;
end;

definition
  let R be Abelian add-associative right_zeroed right_complementable
  associative distributive well-unital commutative non trivial (non empty
  doubleLoopStr), n be Element of NAT;
  func upm (n,R) -> Function of Polynom-Ring (Polynom-Ring(n,R)), Polynom-Ring
  (n+1,R) means
  :Def6:
  for p1 being (Polynomial of Polynom-Ring (n,R)), p2 being
(Polynomial of n, R), p3 being (Polynomial of (n+1), R), b being bag of n+1 st
  p3 = it.p1 & p2 = p1.(b.n) holds p3.b = p2.(b|n);
  existence
  proof
    set CR = the carrier of R;
    set PNR = Polynom-Ring(n,R);
    set PN1R = Polynom-Ring(n+1,R);
    set PRPNR = Polynom-Ring (Polynom-Ring(n,R));
    set CPRPNR = the carrier of PRPNR;
    set CPN1R = the carrier of PN1R;
    defpred P1[Element of CPRPNR, Element of CPN1R] means for p1 being (
Polynomial of PNR), p2 being (Polynomial of n, R), p3 being (Polynomial of (n+1
), R), b being bag of n+1 st p1 = $1 & p3 = $2 & p2 = p1.(b.n) holds p3.b = p2.
    (b|n);
A1: now
      let x being Element of CPRPNR;
      reconsider p1=x as Polynomial of PNR by POLYNOM3:def 12;
      defpred P2[Element of Bags (n+1), Element of CR] means for p2 being (
      Polynomial of n, R) st p2 = p1.($1.n) holds $2 = p2.($1|n);
      deffunc F(set)={ b where b is Element of Bags (n+1) : b.n = $1 & for p2
      being Polynomial of n, R st p2 = p1.$1 holds b|n in Support p2 };
A2:   now
        let k be set;
        assume k in NAT;
        set Ak = F(k);
        Ak c= Bags (n+1)
        proof
          let b be set;
          assume b in Ak;
          then ex b9 being Element of Bags (n+1) st b9=b & b9.n = k & for p2
          being Polynomial of n, R st p2 = p1.k holds b9|n in Support p2;
          hence thesis;
        end;
        hence Ak in bool Bags (n+1);
      end;
      consider A being Function of NAT,bool Bags (n+1) such that
A3:   for k being set st k in NAT holds A.k =F(k) from FUNCT_2:sch 2(
      A2);
      now
        let X be set;
        assume X in A .: len p1;
        then consider k being Element of NAT such that
        k in len p1 and
A4:     X = A.k by FUNCT_2:116;
        reconsider p2 = p1.k as Polynomial of n, R by POLYNOM1:def 27;
A5:     A.k = { b where b is Element of Bags (n+1) : b.n = k & for p2
        being Polynomial of n, R st p2 = p1.k holds b|n in Support p2 } by A3;
        per cases;
        suppose
A6:       Support p2 = {};
          now
            assume A.k <> {};
            then consider b being set such that
A7:         b in A.k by XBOOLE_0:def 1;
            ex b9 being Element of Bags (n+1) st b9=b & b9.n = k & for p2
being Polynomial of n, R st p2 = p1.k holds b9|n in Support p2 by A5,A7;
            hence contradiction by A6;
          end;
          hence X is finite by A4;
        end;
        suppose
A8:       Support p2 <> {};
          then consider b2 being set such that
A9:       b2 in Support p2 by XBOOLE_0:def 1;
          reconsider b2 as Element of Bags n by A9;
A10:      (b2 bag_extend k).n = k by Def1;
          for p2 being Polynomial of n, R st p2 = p1.k holds (b2
          bag_extend k)|n in Support p2 by A9,Def1;
          then (b2 bag_extend k) in A.k by A5,A10;
          then reconsider Ak = A.k as non empty set;
          reconsider Supportp2 = Support p2 as non empty set by A8;
          defpred P3[Element of Ak, Element of Supportp2] means for b being
          Element of Bags (n+1) st $1 = b holds $2 = b|n;
A11:      now
            let x be Element of Ak;
            x in A.k;
            then consider b being Element of Bags (n+1) such that
A12:        b=x and
            b.n = k and
A13:        for p2 being Polynomial of n, R st p2 = p1.k holds b|n in
            Support p2 by A5;
            reconsider bn = b|n as Element of Supportp2 by A13;
            P3[x,bn] by A12;
            hence ex y being Element of Supportp2 st P3[x,y];
          end;
          consider f being Function of Ak,Supportp2 such that
A14:      for x being Element of Ak holds P3[x,f.x] from FUNCT_2:sch
          3(A11);
A15:      dom f = Ak by FUNCT_2:def 1;
          now
            let x1,x2 be set;
            assume that
A16:        x1 in dom f and
A17:        x2 in dom f and
A18:        f.x1 = f.x2;
            f.x1 in Supportp2 by A16,FUNCT_2:7;
            then reconsider fx1 = f.x1 as Element of Bags n;
            consider b1 being Element of Bags (n+1) such that
A19:        b1=x1 and
A20:        b1.n = k and
            for p2 being Polynomial of n, R st p2 = p1.k holds b1|n in
            Support p2 by A5,A15,A16;
            b1|n = f.x1 by A14,A16,A19;
            then
A21:        b1 = fx1 bag_extend k by A20,Def1;
            consider b2 being Element of Bags (n+1) such that
A22:        b2=x2 and
A23:        b2.n = k and
            for p2 being Polynomial of n, R st p2 = p1.k holds b2|n in
            Support p2 by A5,A15,A17;
            b2|n = f.x1 by A14,A17,A18,A22;
            hence x1 = x2 by A19,A21,A22,A23,Def1;
          end;
          then
A24:      f is one-to-one by FUNCT_1:def 8;
          rng f c= Supportp2;
          then card Ak c= card Supportp2 by A15,A24,CARD_1:26;
          hence X is finite by A4;
        end;
      end;
      then
A25:  union (A .: len p1) is finite by FINSET_1:25;
A26:  now
        let b be Element of Bags (n+1);
        reconsider p2 = p1.(b.n) as Polynomial of n, R by POLYNOM1:def 27;
        n < n+1 by XREAL_1:31;
        then reconsider bn = b|n as bag of n by Th3;
        P2[b,p2.bn];
        hence ex r being Element of CR st P2[b,r];
      end;
      consider y being Function of Bags (n+1), CR such that
A27:  for b being Element of Bags (n+1) holds P2[b,y.b] from FUNCT_2:
      sch 3 (A26);
      reconsider y as Function of Bags (n+1), R;
      reconsider y as Series of (n+1), R;
      Support y c= union (A .: len p1)
      proof
        let x be set;
A28:    dom A = NAT by FUNCT_2:def 1;
        assume
A29:    x in Support y;
        then reconsider x9=x as Element of Bags (n+1);
        reconsider p2 = p1.(x9.n) as Polynomial of n, R by POLYNOM1:def 27;
        n < n+1 by XREAL_1:31;
        then reconsider xn = x9|n as Element of Bags n by Th3;
        y.x9 <> 0.R by A29,POLYNOM1:def 9;
        then
A30:    p2.(xn) <> 0.R by A27;
        then p2 <> 0_ (n, R) by POLYNOM1:81;
        then p2 <> 0.PNR by POLYNOM1:def 27;
        then
A31:    x9.n < len p1 by ALGSEQ_1:22;
        len p1 = { i where i is Element of NAT : i < len p1 } by AXIOMS:30;
        then x9.n in len p1 by A31;
        then
A32:    A.(x9.n) in A .: len p1 by A28,FUNCT_1:def 12;
A33:    A.(x9.n) = { b where b is Element of Bags (n+1) : b.n = x9.n &
for p2 being Polynomial of n, R st p2 = p1.(x9.n) holds b|n in Support p2 } by
A3;
        for p2 being Polynomial of n, R st p2 = p1.(x9.n) holds xn in
        Support p2 by A30,POLYNOM1:def 9;
        then x in A.(x9.n) by A33;
        hence thesis by A32,TARSKI:def 4;
      end;
      then y is finite-Support by A25,POLYNOM1:def 10;
      then reconsider y9=y as Element of CPN1R by POLYNOM1:def 27;
      now
        let p1 be (Polynomial of PNR), p2 be (Polynomial of n, R), p3 be (
        Polynomial of (n+1), R), b be bag of n+1;
A34:    b is Element of Bags (n+1) by PRE_POLY:def 12;
        assume p1 = x & p3 = y9 & p2 = p1.(b.n);
        hence p3.b = p2.(b|n) by A27,A34;
      end;
      hence ex y being Element of CPN1R st P1[x,y];
    end;
    consider P being Function of CPRPNR,CPN1R such that
A35: for x being Element of CPRPNR holds P1[x,P.x] from FUNCT_2:sch 3
    (A1);
    reconsider P as Function of PRPNR, PN1R;
    take P;
    now
      let p1 being (Polynomial of Polynom-Ring (n,R)), p2 being (Polynomial of
      n, R), p3 being (Polynomial of (n+1), R), b being bag of n+1;
A36:  p1 in CPRPNR by POLYNOM3:def 12;
      assume p3 = P.p1 & p2 = p1.(b.n);
      hence p3.b = p2.(b|n) by A35,A36;
    end;
    hence thesis;
  end;
  uniqueness
  proof
    let A, B be Function of Polynom-Ring (Polynom-Ring(n,R)), Polynom-Ring(n+1
    ,R);
    set CPN1R = the carrier of Polynom-Ring(n+1,R);
    set CPRPNR = the carrier of Polynom-Ring (Polynom-Ring(n,R));
    set PNR = Polynom-Ring(n,R);
    assume
A37: for p1 being (Polynomial of Polynom-Ring (n,R)), p2 being (
Polynomial of n, R), p3 being (Polynomial of (n+1), R), b being bag of n+1 st
    p3 = A.p1 & p2 = p1.(b.n) holds p3.b = p2.(b|n);
    assume
A38: for p1 being (Polynomial of Polynom-Ring (n,R)), p2 being (
Polynomial of n, R), p3 being (Polynomial of (n+1), R), b being bag of n+1 st
    p3 = B.p1 & p2 = p1.(b.n) holds p3.b = p2.(b|n);
    now
      let x be set;
      assume
A39:  x in CPRPNR;
      then reconsider x9=x as Polynomial of PNR by POLYNOM3:def 12;
      A.x in CPN1R & B.x in CPN1R by A39,FUNCT_2:7;
      then reconsider Ax=A.x, Bx=B.x as (Polynomial of n+1,R) by
POLYNOM1:def 27;
      now
        let b be set;
        assume b in Bags (n+1);
        then reconsider b9=b as Element of Bags (n+1);
        reconsider p2 = x9.(b9.n) as Polynomial of n, R by POLYNOM1:def 27;
        n < n+1 by NAT_1:13;
        then reconsider bn = (b9|n) as Element of Bags n by Th3;
        thus Ax.b = p2.bn by A37
          .= Bx.b by A38;
      end;
      hence A.x = B.x by FUNCT_2:18;
    end;
    hence A=B by FUNCT_2:18;
  end;
end;

registration
  let R be Abelian add-associative right_zeroed right_complementable
  associative distributive well-unital commutative non trivial (non empty
  doubleLoopStr), n be Element of NAT;
  cluster upm (n,R) -> additive;
  coherence
  proof
    set P = upm (n,R);
    set PNR = Polynom-Ring(n,R);
    thus P is additive
    proof
      let x,y be Element of Polynom-Ring (Polynom-Ring(n,R));
      reconsider x9=x, y9=y, xy9=x+y as Polynomial of PNR by POLYNOM3:def 12;
      reconsider Pxy = P.(x+y), Px = P.x, Py = P.y as (Polynomial of n+1, R)
      by POLYNOM1:def 27;
A1:   xy9 = x9+y9 by POLYNOM3:def 12;
      now
        let b be set;
        assume b in Bags (n+1);
        then reconsider b9=b as bag of n+1;
        reconsider xybn = (x9+y9).(b9.n) as Polynomial of n,R by
POLYNOM1:def 27;
        reconsider xbn=x9.(b9.n), ybn = y9.(b9.n) as Polynomial of n, R by
POLYNOM1:def 27;
        n < n+1 by XREAL_1:31;
        then reconsider bn = b9|n as bag of n by Th3;
A2:     xbn.bn = Px.b9 & ybn.bn = Py.b9 by Def6;
        (x9+y9).(b9.n) = x9.(b9.n)+y9.(b9.n) by NORMSP_1:def 5;
        then xybn = xbn + ybn by POLYNOM1:def 27;
        hence Pxy.b = (xbn + ybn).bn by A1,Def6
          .= Px.b9 + Py.b9 by A2,POLYNOM1:def 21
          .= (Px + Py).b by POLYNOM1:def 21;
      end;
      hence P.(x+y) = Px+Py by FUNCT_2:18
        .= P.x + P.y by POLYNOM1:def 27;
    end;
  end;
  cluster upm (n,R) -> multiplicative;
  coherence
  proof
    set P = upm (n,R);
    set CR = the carrier of R;
    set PNR = Polynom-Ring(n,R);
    set CPNR = the carrier of PNR;
    thus P is multiplicative
    proof
      let x9,y9 be Element of the carrier of Polynom-Ring (Polynom-Ring(n,R));
      reconsider x=x9, y=y9, xy = x9*y9 as Polynomial of PNR by POLYNOM3:def 12
;
      reconsider Pxy = P.(x9*y9), PxPy = (P.x9)*(P.y9), Px=P.x9, Py=P.y9 as
      Polynomial of n+1,R by POLYNOM1:def 27;
A3:   xy = x*'y by POLYNOM3:def 12;
A4:   PxPy = Px*'Py by POLYNOM1:def 27;
      now
        let b9 be set;
        assume b9 in Bags (n+1);
        then reconsider b=b9 as Element of Bags (n+1);
        consider r be FinSequence of CPNR such that
A5:     len r = (b.n)+1 and
A6:     (xy).(b.n) = Sum r and
A7:     for k be Element of NAT st k in dom r holds r.k = x.(k-'1)*y.
        ((b.n) +1-'k) by A3,POLYNOM3:def 11;
        n < n+1 by NAT_1:13;
        then reconsider bn=b|n as Element of Bags n by Th3;
        defpred P3[set, set] means for p,q being Polynomial of n,R, fcr being
FinSequence of CR, i being Element of NAT st i = $1 & p = x.(i-'1) & q = y.((b.
n)+1-'i) & fcr = $2 holds (p*'q).bn = Sum fcr & len fcr = len decomp bn & for k
being Element of NAT st k in dom fcr holds ex b1, b2 being bag of n st (decomp
        bn)/.k = <*b1, b2*> & fcr/.k = p.b1*q.b2;
        reconsider xybn=xy.(b.n) as Polynomial of n,R by POLYNOM1:def 27;
        consider u being FinSequence of CR such that
A8:     PxPy.b = Sum u and
A9:     len u = len decomp b and
A10:    for k being Element of NAT st k in dom u ex b1, b2 being bag
of n+1 st (decomp b)/.k = <*b1, b2*> & u/.k = Px.b1*Py.b2 by A4,POLYNOM1:def 26
        ;
A11:    now
          let e9 be set;
          assume e9 in dom r;
          then reconsider e=e9 as Element of NAT;
          reconsider p = x.(e-'1), q = y.((b.n)+1-'e) as Polynomial of n, R by
POLYNOM1:def 27;
          consider fcr being FinSequence of CR such that
A12:      (p*'q).bn = Sum fcr & len fcr = len decomp bn & for k being
Element of NAT st k in dom fcr holds ex b1, b2 being bag of n st (decomp bn)/.k
          = <*b1, b2 *> & fcr/.k = p.b1*q.b2 by POLYNOM1:def 26;
A13:      fcr in CR* by FINSEQ_1:def 11;
          P3[e,fcr] by A12;
          hence ex u being set st u in CR* & P3[e9,u] by A13;
        end;
        consider s being Function of dom r, CR* such that
A14:    for e being set st e in dom r holds P3[e,s.e] from FUNCT_2:
        sch 1(A11 );
A15:    rng s c= CR*;
A16:    dom s = dom r by FUNCT_2:def 1;
        then ex n being Nat st dom s = Seg n by FINSEQ_1:def 2;
        then s is FinSequence-like by FINSEQ_1:def 2;
        then reconsider s as FinSequence of CR* by A15,FINSEQ_1:def 4;
        consider g being Function of CPNR, CR such that
A17:    for p being Polynomial of n, R holds g.p = p.bn and
A18:    xybn.bn = Sum (g * r) by A6,Th29;
A19:    Sum (g * r) = Pxy.b by A18,Def6;
        0+1 <= len r by A5,XREAL_1:8;
        then
A20:    1 in dom s by A16,FINSEQ_3:27;
A21:    now
          reconsider p9=x.(1-'1), q9=y.((b.n)+1-'1) as Polynomial of n,R by
POLYNOM1:def 27;
          s/.1 is FinSequence of CR;
          then
A22:      s.1 is FinSequence of CR by A20,PARTFUN1:def 8;
          p9=x. ( 1 -'1) & q9=y.((b.n)+1-'1);
          hence len (s.1) <> 0 by A14,A16,A20,A22;
        end;
        defpred P1[set, set] means for i,n1 being Element of NAT, b1 being bag
of n+1 st n1=$1 & b1 = (divisors b).n1 & i in dom (divisors bn) & (divisors bn)
.i = b1|n holds b1.n+1 in dom s & i in dom (s.(b1.n+1)) & $2 = (Sum Card (s|(b1
        .n+1-'1))) + i;
        set t = FlattenSeq s;
A23:    now
          let n19 be set;
          assume
A24:      n19 in dom u;
          then reconsider n1=n19 as Element of NAT;
          dom u = dom decomp b by A9,FINSEQ_3:31
            .= dom divisors b by PRE_POLY:def 17;
          then
A25:      (divisors b).n1 in rng divisors b by A24,FUNCT_1:def 5;
          then reconsider b1=(divisors b).n1 as bag of n+1;
A26:      b1 divides b by A25,Th7;
          then b1.n <= b.n by PRE_POLY:def 11;
          then
A27:      b1.n +1 <= b.n+1 by XREAL_1:8;
          n < n+1 by NAT_1:13;
          then reconsider b1n=b1|n as Element of Bags n by Th3;
          reconsider p=x.((b1.n+1)-'1), q=y.((b.n)+1-'(b1.n+1)) as Polynomial
          of n,R by POLYNOM1:def 27;
A28:      p = x.((b1.n+1)-'1) & q = y.((b.n)+1-'(b1.n+1));
          b1n divides bn by A26,Th4;
          then b1n in rng divisors bn by Th7;
          then consider i being set such that
A29:      i in dom divisors bn and
A30:      b1n = (divisors bn).i by FUNCT_1:def 5;
          reconsider i as Element of NAT by A29;
          set n2 = (Sum Card (s|(b1.n+1-'1))) + i;
A31:      b1.n +1 >= 1+0 by XREAL_1:8;
          then
A32:      b1.n+1 in dom s by A5,A16,A27,FINSEQ_3:27;
          then s.(b1.n+1) is Element of CR* by A16,FUNCT_2:7;
          then len (s.(b1.n+1)) = len decomp bn by A14,A16,A32,A28;
          then
A33:      dom (s.(b1.n+1)) = dom decomp bn by FINSEQ_3:31
            .= dom divisors bn by PRE_POLY:def 17;
          then
A34:      n2 in dom t by A29,A32,PRE_POLY:30;
          for i9,n19 being Element of NAT, b19 being bag of n+1 st n19=n1
& b19 = (divisors b).n19 & i9 in dom (divisors bn) & (divisors bn).i9 = b19|n
holds b19.n+1 in dom s & i9 in dom (s.(b19.n+1)) & n2 = (Sum Card (s|(b19.n+1-'
          1))) + i9 by A5,A16,A29,A30,A27,A31,A33,FINSEQ_3:27,FUNCT_1:def 8;
          hence ex n29 being set st n29 in dom t & P1[n19,n29] by A34;
        end;
        consider p being Function of dom u, dom t such that
A35:    for x being set st x in dom u holds P1[x,p.x] from FUNCT_2:
        sch 1(A23 );
        1 in dom Card s by A20,CARD_3:def 2;
        then Sum Card s >= (Card s).1 by POLYNOM3:4;
        then Sum Card s > 0 by A20,A21,CARD_3:def 2;
        then len t > 0 by PRE_POLY:27;
        then
A36:    t <> {};
        then
A37:    dom p = dom u by FUNCT_2:def 1;
        now
          let n19,n29 be set;
          assume that
A38:      n19 in dom p and
A39:      n29 in dom p and
A40:      p.n19 = p.n29;
          dom p = dom u by A36,FUNCT_2:def 1;
          then reconsider n1=n19, n2=n29 as Element of NAT by A38,A39;
A41:      dom u = dom decomp b by A9,FINSEQ_3:31
            .= dom divisors b by PRE_POLY:def 17;
          then
A42:      (divisors b).n1 in rng divisors b by A38,FUNCT_1:def 5;
          then reconsider b1=(divisors b).n1 as bag of n+1;
A43:      (divisors b).n2 in rng divisors b by A39,A41,FUNCT_1:def 5;
          then reconsider b2=(divisors b).n2 as bag of n+1;
          n < n+1 by NAT_1:13;
          then reconsider b1n=b1|n, b2n=b2|n as Element of Bags n by Th3;
A44:      (Card s)|(b1.n+1-'1) = Card (s|(b1.n+1-'1)) & (Card s)|(b2.n+1
          -'1) = Card (s |(b2.n+1-'1)) by POLYNOM3:16;
          b2 divides b by A43,Th7;
          then b2n divides bn by Th4;
          then b2n in rng divisors bn by Th7;
          then consider i2 being set such that
A45:      i2 in dom divisors bn and
A46:      b2n = (divisors bn).i2 by FUNCT_1:def 5;
          reconsider i2 as Element of NAT by A45;
A47:      b2.n+1 in dom s & i2 in dom (s.(b2.n+1)) by A35,A39,A45,A46;
          b1 divides b by A42,Th7;
          then b1n divides bn by Th4;
          then b1n in rng divisors bn by Th7;
          then consider i1 being set such that
A48:      i1 in dom divisors bn and
A49:      b1n = (divisors bn).i1 by FUNCT_1:def 5;
          reconsider i1 as Element of NAT by A48;
A50:      p.n1 = (Sum Card (s|(b1.n+1-'1))) + i1 by A35,A38,A48,A49;
A51:      p.n2 = (Sum Card (s|(b2.n+1-'1))) + i2 by A35,A39,A45,A46;
A52:      b2 is Element of Bags (n+1) by PRE_POLY:def 12;
          b1.n+1 in dom s & i1 in dom (s.(b1.n+1)) by A35,A38,A48,A49;
          then
A53:      b1.n+1 = b2.n+1 & i1=i2 by A40,A50,A47,A51,A44,POLYNOM3:22;
          b1 is Element of Bags (n+1) by PRE_POLY:def 12;
          then b1 = b1n bag_extend b1.n by Def1
            .= b2 by A49,A46,A53,A52,Def1;
          hence n19 = n29 by A38,A39,A41,FUNCT_1:def 8;
        end;
        then
A54:    p is one-to-one by FUNCT_1:def 8;
        dom t c= rng p
        proof
          let n19 be set;
          assume
A55:      n19 in dom t;
          then reconsider n1=n19 as Element of NAT;
          consider i, j being Element of NAT such that
A56:      i in dom s and
A57:      j in dom (s.i) and
A58:      n1 = (Sum Card (s|(i-'1))) + j and
          (s.i).j = t.n1 by A55,PRE_POLY:29;
          s.i in CR* by A16,A56,FUNCT_2:7;
          then
A59:      s.i is FinSequence of CR by FINSEQ_1:def 11;
          reconsider bj=(divisors bn)/.j as bag of n;
          set bij = bj bag_extend (i -' 1);
          reconsider p9 = x.(i-'1), q9 = y.((b.n)+1-'i) as Polynomial of n,R
          by POLYNOM1:def 27;
A60:      bij.n = i-'1 by Def1;
          1 <= i by A56,FINSEQ_3:27;
          then
A61:      bij.n+1= i by A60,XREAL_1:237;
A62:      dom u = dom decomp b by A9,FINSEQ_3:31
            .= dom divisors b by PRE_POLY:def 17;
          p9 = x.(i-'1) & q9 = y.((b.n)+1-'i);
          then len (s.i) = len decomp bn by A14,A16,A56,A59;
          then
A63:      dom (s.i) = dom decomp bn by FINSEQ_3:31
            .= dom divisors bn by PRE_POLY:def 17;
          then
A64:      bj = (divisors bn).j by A57,PARTFUN1:def 8;
          then bj in rng divisors bn by A57,A63,FUNCT_1:def 5;
          then
A65:      bj divides bn by Th7;
          now
            let k be set;
            per cases;
            suppose
A66:          k in n+1;
              now
                per cases;
                suppose
A67:              k in n;
                  then
A68:              b.k = bn.k by FUNCT_1:72;
                  bij.k = (bij|n).k by A67,FUNCT_1:72
                    .= bj.k by Def1;
                  hence bij.k <= b.k by A65,A68,PRE_POLY:def 11;
                end;
                suppose
A69:              not k in n;
A70:              1 <= i by A56,FINSEQ_3:27;
                  i <= b.n+1 by A5,A16,A56,FINSEQ_3:27;
                  then
A71:              i - 1 <= b.n + 1 - 1 by XREAL_1:11;
                  n+1 = succ n by NAT_1:39
                    .= n \/ {n} by ORDINAL1:def 1;
                  then k in {n} by A66,A69,XBOOLE_0:def 3;
                  then
A72:              k = n by TARSKI:def 1;
                  then bij.k = i -' 1 by Def1;
                  hence bij.k <= b.k by A72,A70,A71,XREAL_1:235;
                end;
              end;
              hence bij.k <= b.k;
            end;
            suppose
A73:          not k in n+1;
              dom bij = n+1 by PARTFUN1:def 4;
              hence bij.k <= b.k by A73,FUNCT_1:def 4;
            end;
          end;
          then bij divides b by PRE_POLY:def 11;
          then bij in rng divisors b by Th7;
          then consider k being set such that
A74:      k in dom divisors b and
A75:      bij = (divisors b).k by FUNCT_1:def 5;
A76:      dom p = dom u by A36,FUNCT_2:def 1;
          (divisors bn).j = bij|n by A64,Def1;
          then p.k = (Sum Card (s|(bij.n+1-'1))) + j by A35,A57,A63,A74,A75,A62
;
          hence thesis by A58,A74,A76,A62,A61,FUNCT_1:def 5;
        end;
        then
A77:    rng p = dom t by XBOOLE_0:def 10;
        len (Sum s) = len s by MATRLIN:def 8;
        then
A78:    dom (Sum s) = dom r by A16,FINSEQ_3:31;
A79:    now
          let k be Nat;
          reconsider p = x.(k-'1), q = y.((b.n)+1-'k) as Polynomial of n, R by
POLYNOM1:def 27;
          reconsider pq9 = p *' q as Element of CPNR by POLYNOM1:def 27;
          assume
A80:      k in dom r;
          then reconsider sk=s.k as Element of CR* by FUNCT_2:7;
          reconsider sk as FinSequence of CR;
A81:      r.k = x.(k-'1)*y.((b.n)+1-'k) by A7,A80
            .= pq9 by POLYNOM1:def 27;
          (Sum s)/.k = (Sum s).k & s/.k = s.k by A16,A78,A80,PARTFUN1:def 8;
          hence (Sum s).k = Sum sk by A78,A80,MATRLIN:def 8
            .= (p*'q).bn by A14,A80
            .= g.(r.k) by A17,A81
            .= (g * r).k by A80,FUNCT_1:23;
        end;
A82:    now
          let n1 be Element of NAT;
          reconsider b19 = (divisors b)/.n1 as bag of n+1;
          assume
A83:      n1 in dom u;
          then consider b1, b2 being bag of n+1 such that
A84:      (decomp b)/.n1 = <*b1, b2*> and
A85:      u/.n1 = Px.b1*Py.b2 by A10;
A86:      dom u = dom decomp b by A9,FINSEQ_3:31;
          then
A87:      <* b1,b2 *> = <* b19,b-' b19 *> by A83,A84,PRE_POLY:def 17;
          then
A88:      b1 = b19 by FINSEQ_1:98;
          reconsider xb1n = x.(b1.n), yb2n=y.(b2.n) as Polynomial of n,R by
POLYNOM1:def 27;
          n < n+1 by NAT_1:13;
          then reconsider b1n = b1|n, b2n=b2|n as Element of Bags n by Th3;
A89:      u.n1 = Px.b1*Py.b2 by A83,A85,PARTFUN1:def 8
            .= xb1n.b1n * Py.b2 by Def6
            .= xb1n.b1n * yb2n.b2n by Def6;
A90:      b2 = b -' b19 by A87,FINSEQ_1:98;
A91:      n1 in dom divisors b by A83,A86,PRE_POLY:def 17;
          then
A92:      b1 = (divisors b).n1 by A88,PARTFUN1:def 8;
          then b1 in rng divisors b by A91,FUNCT_1:def 5;
          then
A93:      b1 divides b by Th7;
          then b1n divides bn by Th4;
          then b1n in rng divisors bn by Th7;
          then consider i being set such that
A94:      i in dom divisors bn and
A95:      b1n = (divisors bn).i by FUNCT_1:def 5;
          reconsider i as Element of NAT by A94;
A96:      b1.n <= b.n by A93,PRE_POLY:def 11;
          then b1.n + 1 <= b.n + 1 by XREAL_1:8;
          then
A97:      b.n+1 -' (b1.n+1) = b.n+1-(b1.n+1) by XREAL_1:235
            .= b.n-b1.n+1-1
            .= b.n -' b1.n by A96,XREAL_1:235
            .= b2.n by A88,A90,PRE_POLY:def 6;
A98:      b1.n+1-'1 = b1.n+1-1 by NAT_D:37
            .= b1.n;
          then
A99:      xb1n = x.((b1.n+1)-'1);
A100:     b1.n+1 in dom s by A35,A83,A92,A94,A95;
          then s.(b1.n+1) is Element of CR* by A16,FUNCT_2:7;
          then reconsider sb1n1=s.(b1.n+1) as FinSequence of CR;
A101:     i in dom (s.(b1.n+1)) by A35,A83,A92,A94,A95;
          then consider B1, B2 being bag of n such that
A102:     (decomp bn)/.i=<*B1,B2*> and
A103:     sb1n1/.i=xb1n.B1*yb2n.B2 by A14,A16,A100,A98,A97;
          p.n1 = (Sum Card (s|(b1.n+1-'1))) + i by A35,A83,A92,A94,A95;
          then
A104:     t.(p.n1) = (s.(b1.n+1)).i by A100,A101,PRE_POLY:30;
          reconsider B19 = (divisors bn)/.i as bag of n;
A105:     dom divisors bn = dom decomp bn by PRE_POLY:def 17;
          then
A106:     <*B1,B2*> = <* B19,bn -' B19 *> by A94,A102,PRE_POLY:def 17;
          then
A107:     B1 = B19 by FINSEQ_1:98;
          then
A108:     B1 = b1n by A94,A95,PARTFUN1:def 8;
          yb2n = y.((b.n)+1-'(b1.n+1)) by A97;
          then len sb1n1 = len decomp bn by A14,A16,A100,A99;
          then
A109:     dom sb1n1 = dom divisors bn by A105,FINSEQ_3:31;
          B2 = bn -' B19 by A106,FINSEQ_1:98;
          then B2 = b2n by A88,A90,A107,A108,Th5;
          hence u.n1 = t.(p.n1) by A89,A94,A104,A103,A108,A109,PARTFUN1:def 8;
        end;
        dom r = dom (g * r) by FINSEQ_3:129;
        then Sum s = g * r by A78,A79,FINSEQ_1:17;
        then
A110:   Sum t = Pxy.b by A19,POLYNOM1:34;
A111:   len u = card dom u by CARD_1:104
          .= card (p qua set) by A37,CARD_1:104
          .= card dom t by A54,A77,PRE_POLY:19
          .= len t by CARD_1:104;
        then
A112:   dom u = dom t by FINSEQ_3:31;
        then p is Permutation of dom u by A54,A77,FUNCT_2:83;
        hence Pxy.b9 = PxPy.b9 by A110,A8,A82,A111,A112,RLVECT_2:8;
      end;
      hence P.(x9*y9) = (P.x9)*(P.y9) by FUNCT_2:18;
    end;
  end;
  cluster upm (n,R) -> unity-preserving;
  coherence
  proof
    set P = upm (n,R);
    set PNR = Polynom-Ring(n,R);
    set PN1R = Polynom-Ring(n+1,R);
    set PRPNR = Polynom-Ring (Polynom-Ring(n,R));
    set CPN1R = the carrier of PN1R;
    reconsider p1 = 1_PRPNR as Polynomial of PNR by POLYNOM3:def 12;
    reconsider p19 = 1_PN1R as (Polynomial of n+1, R) by POLYNOM1:def 27;
    P.(1_PRPNR) in CPN1R;
    then reconsider p3 = P.p1 as (Polynomial of n+1, R) by POLYNOM1:def 27;
    now
      let x be set;
      assume x in Bags (n+1);
      then reconsider b = x as Element of Bags (n+1);
      reconsider p2 = p1.(b.n) as Polynomial of n, R by POLYNOM1:def 27;
A113: p3.b = p2.(b|n) by Def6;
      now
        per cases;
        suppose
A114:     b|n = EmptyBag(n) & b.n = 0;
          then
A115:     b = (EmptyBag n) bag_extend 0 by Def1
            .=EmptyBag (n+1) by Th6;
          p2 = (1_. (PNR)).0 by A114,POLYNOM3:def 12
            .= 1_(PNR) by POLYNOM3:31
            .= 1_ (n,R) by POLYNOM1:90;
          hence p3.b = 1_R by A113,A114,POLYNOM1:84
            .= 1_ (n+1,R).b by A115,POLYNOM1:84
            .= p19.b by POLYNOM1:90;
        end;
        suppose
A116:     b|n <> EmptyBag(n) or b.n <> 0;
A117:     now
            n < n+1 by NAT_1:13;
            then
A118:       b|n is bag of n by Th3;
A119:       p2 = (1_. (PNR)).(b.n) by POLYNOM3:def 12;
            per cases;
            suppose
A120:         b.n = 0;
              then p2 = 1_(PNR) by A119,POLYNOM3:31
                .= 1_ (n,R) by POLYNOM1:90;
              hence p3.b = 0.R by A113,A116,A118,A120,POLYNOM1:84;
            end;
            suppose
              b.n <> 0;
              then p2 = 0.(PNR) by A119,POLYNOM3:31
                .= 0_ (n, R) by POLYNOM1:def 27;
              hence p3.b = 0.R by A113,A118,POLYNOM1:81;
            end;
          end;
          b <> (EmptyBag n) bag_extend 0 by A116,Def1;
          then b <> EmptyBag (n+1) by Th6;
          hence p3.b = 1_ (n+1,R).b by A117,POLYNOM1:84
            .= p19.b by POLYNOM1:90;
        end;
      end;
      hence p3.x = p19.x;
    end;
    then p19 = p3 by FUNCT_2:18;
    hence thesis by GROUP_1:def 17;
  end;
  cluster upm (n,R) -> one-to-one;
  coherence
  proof
    set P = upm (n,R);
    set PNR = Polynom-Ring(n,R);
    set PRPNR = Polynom-Ring (Polynom-Ring(n,R));
    now
      let x9,y9 being Element of PRPNR;
      reconsider x=x9, y=y9 as Polynomial of PNR by POLYNOM3:def 12;
      reconsider Py = P.y9 as Polynomial of n+1,R by POLYNOM1:def 27;
      assume
A121: P.x9 = P.y9;
      now
        let bn9 be set;
        assume bn9 in NAT;
        then reconsider bn = bn9 as Element of NAT;
        reconsider xbn=x.bn, ybn = y.bn as Polynomial of n,R by POLYNOM1:def 27
;
        now
          let b9 be set;
          assume b9 in Bags n;
          then reconsider b = b9 as bag of n;
          set bn1 = b bag_extend bn;
A122:     bn1|n = b & bn1.n = bn by Def1;
          then (xbn).b = Py.bn1 by A121,Def6
            .= (ybn).b by A122,Def6;
          hence (xbn).b9 = (ybn).b9;
        end;
        hence x.bn9 = y.bn9 by FUNCT_2:18;
      end;
      hence x9=y9 by FUNCT_2:18;
    end;
    hence thesis by WAYBEL_1:def 1;
  end;
end;

definition
  let R be Abelian add-associative right_zeroed right_complementable
  associative distributive well-unital commutative non trivial (non empty
  doubleLoopStr), n be Element of NAT;
  func mpu (n,R) -> Function of Polynom-Ring (n+1,R), Polynom-Ring
  Polynom-Ring(n,R) means
  :Def7:
  for p1 being (Polynomial of n+1,R), p2 being (
  Polynomial of n, R), p3 being (Polynomial of Polynom-Ring (n, R)), i being
  Element of NAT, b being bag of n st p3 = it.p1 & p2 = p3.i holds p2.b = p1.(b
  bag_extend i);
  existence
  proof
    set CR = the carrier of R;
    set PNR = Polynom-Ring(n,R);
    set PN1R = Polynom-Ring(n+1,R);
    set PRPNR = Polynom-Ring (Polynom-Ring(n,R));
    set CPRPNR = the carrier of PRPNR;
    set CPN1R = the carrier of PN1R;
    set CPNR = the carrier of PNR;
    defpred P1[Element of CPN1R, Element of CPRPNR] means for p1 being (
Polynomial of n+1,R), p2 being (Polynomial of n, R), p3 being (Polynomial of
Polynom-Ring (n, R)), i being Element of NAT, b being bag of n st p1 = $1 & p3
    = $2 & p2 = p3.i holds p2.b = p1.(b bag_extend i);
A1: now
      let x being Element of CPN1R;
      reconsider p1=x as Polynomial of n+1,R by POLYNOM1:def 27;
      defpred P2[Element of NAT, Element of CPNR] means for p2 being (
Polynomial of n, R), b being bag of n st p2 = $2 holds p2.b = p1.(b bag_extend
      $1);
A2:   now
        let i being Element of NAT;
        deffunc F(Element of Bags n)=p1.($1 bag_extend i);
        consider p2 being Function of Bags n,CR such that
A3:     for b being Element of Bags n holds p2.b = F(b) from FUNCT_2:
        sch 4;
        reconsider p2 as Function of Bags n, R;
        reconsider p2 as Series of n, R;
        now
          per cases;
          suppose
A4:         Support p1 = {};
            now
              assume Support p2 <> {};
              then consider b being set such that
A5:           b in Support p2 by XBOOLE_0:def 1;
              reconsider b as Element of Bags n by A5;
              p2.b <> 0.R by A5,POLYNOM1:def 9;
              then p1.(b bag_extend i) <> 0.R by A3;
              hence Support p1 <> {} by POLYNOM1:def 9;
            end;
            hence Support p2 is finite by A4;
          end;
          suppose
            Support p2 = {};
            hence Support p2 is finite;
          end;
          suppose
A6:         Support p1 <> {} & Support p2 <> {};
            then reconsider
            Supportp2 = Support p2 as non empty Subset of Bags n;
            reconsider Supportp1 = Support p1 as non empty Subset of Bags (n+1
            ) by A6;
            defpred P[Element of Supportp2,set] means $2 = $1 bag_extend i;
A7:         now
              let x being Element of Supportp2;
              x is Element of Bags n & p2.x <> 0.R by POLYNOM1:def 9
;
              then p1.(x bag_extend i) <> 0.R by A3;
              then x bag_extend i in Support p1 by POLYNOM1:def 9;
              hence ex y being Element of Supportp1 st P[x,y];
            end;
            consider f being Function of Supportp2,Supportp1 such that
A8:         for x being Element of Supportp2 holds P[x,f.x] from
            FUNCT_2:sch 3(A7);
A9:         dom f = Supportp2 by FUNCT_2:def 1;
            now
              let x1,x2 be set;
              assume that
A10:          x1 in dom f and
A11:          x2 in dom f and
A12:          f.x1 = f.x2;
              reconsider x19=x1, x29=x2 as Element of Bags n by A9,A10,A11;
A13:          x19 bag_extend i = f.x1 by A8,A10
                .= x29 bag_extend i by A8,A11,A12;
              x19 = (x19 bag_extend i)|n by Def1
                .= x29 by A13,Def1;
              hence x1 = x2;
            end;
            then
A14:        f is one-to-one by FUNCT_1:def 8;
            rng f c= Supportp1;
            then card Supportp2 c= card Supportp1 by A9,A14,CARD_1:26;
            hence Support p2 is finite;
          end;
        end;
        then p2 is finite-Support by POLYNOM1:def 10;
        then reconsider p29=p2 as Element of CPNR by POLYNOM1:def 27;
        take p29;
        now
          let p299 being (Polynomial of n, R), b being bag of n;
A15:      b is Element of Bags n by PRE_POLY:def 12;
          assume p299 = p29;
          hence p299.b = p1.(b bag_extend i) by A3,A15;
        end;
        hence P2[i,p29];
      end;
      consider p3 being Function of NAT,CPNR such that
A16:  for x being Element of NAT holds P2[x,p3.x] from FUNCT_2:sch 3(
      A2);
      reconsider p3 as sequence of PNR;
      now
        per cases;
        suppose
A17:      Support p1 = {};
          now
            let i be Nat;
            assume i >= 0;
            reconsider i1=i as Element of NAT by ORDINAL1:def 13;
            reconsider p2 = p3.i1 as Polynomial of n, R by POLYNOM1:def 27;
A18:        now
              let x be set;
              assume x in Bags n;
              then reconsider x9=x as Element of Bags n;
              p1.(x9 bag_extend i) = 0.R by A17,POLYNOM1:def 9;
              then p2.x9 = 0.R by A16;
              hence p2.x = ((Bags n) --> 0.R).x by FUNCOP_1:13;
            end;
            dom ((Bags n) --> 0.R) = Bags n & dom (p2) = Bags n by
FUNCT_2:def 1;
            then p2 = (Bags n) --> 0.R by A18,FUNCT_1:9;
            hence p3.i = 0_(n,R) by POLYNOM1:def 24
              .= 0.PNR by POLYNOM1:def 27;
          end;
          hence p3 is finite-Support by ALGSEQ_1:def 2;
        end;
        suppose
          Support p1 <> {};
          then reconsider
          Supportp1 = Support p1 as finite non empty Subset of Bags
          (n+1);
          deffunc F(Element of Bags (n+1))=$1.n;
          consider f being Function of Bags (n+1), NAT such that
A19:      for x being Element of Bags (n+1) holds f.x = F(x) from
          FUNCT_2:sch 4;
          reconsider j = max (f .: Supportp1) as Element of NAT by
ORDINAL1:def 13;
          now
            let i being Nat;
            reconsider i1 = i as Element of NAT by ORDINAL1:def 13;
            reconsider p2 = p3.i1 as Polynomial of n, R by POLYNOM1:def 27;
            assume
A20:        i >= j+1;
A21:        now
              let x be set;
              assume x in Bags n;
              then reconsider x9=x as Element of Bags n;
              i > j by A20,NAT_1:13;
              then
A22:          not i in f.:Supportp1 by XXREAL_2:def 8;
              f.(x9 bag_extend i) = (x9 bag_extend i).n by A19
                .= i by Def1;
              then not x9 bag_extend i in Supportp1 by A22,FUNCT_2:43;
              then p1.(x9 bag_extend i) = 0.R by POLYNOM1:def 9;
              then p2.x9 = 0.R by A16;
              hence p2.x = ((Bags n) --> 0.R).x by FUNCOP_1:13;
            end;
            dom ((Bags n) --> 0.R) = Bags n & dom (p2) = Bags n by
FUNCT_2:def 1;
            then p2 = (Bags n) --> 0.R by A21,FUNCT_1:9;
            hence p3.i = 0_(n,R) by POLYNOM1:def 24
              .= 0.PNR by POLYNOM1:def 27;
          end;
          hence p3 is finite-Support by ALGSEQ_1:def 2;
        end;
      end;
      then reconsider y=p3 as Element of CPRPNR by POLYNOM3:def 12;
      take y;
      thus P1[x,y] by A16;
    end;
    consider P being Function of CPN1R,CPRPNR such that
A23: for x being Element of CPN1R holds P1[x,P.x] from FUNCT_2:sch 3(
    A1);
    reconsider P as Function of PN1R,PRPNR;
    take P;
    now
      let p1 being (Polynomial of n+1,R), p2 being (Polynomial of n, R ) , p3
being (Polynomial of Polynom-Ring (n, R)), i being Element of NAT, b being bag
      of n;
A24:  p1 in CPN1R by POLYNOM1:def 27;
      assume p3 = P.p1 & p2 = p3.i;
      hence p2.b = p1.(b bag_extend i) by A23,A24;
    end;
    hence thesis;
  end;
  uniqueness
  proof
    set PNR = Polynom-Ring(n,R);
    set PN1R = Polynom-Ring(n+1,R);
    set PRPNR = Polynom-Ring (Polynom-Ring(n,R));
    set CPN1R = the carrier of PN1R;
    let A,B be Function of PN1R,PRPNR;
    assume
A25: for p1 being (Polynomial of n+1,R), p2 being (Polynomial of n, R)
, p3 being (Polynomial of Polynom-Ring (n, R)), i being Element of NAT, b being
    bag of n st p3 = A.p1 & p2 = p3.i holds p2.b = p1.(b bag_extend i);
    assume
A26: for p1 being (Polynomial of n+1,R), p2 being (Polynomial of n, R)
, p3 being (Polynomial of Polynom-Ring (n, R)), i being Element of NAT, b being
    bag of n st p3 = B.p1 & p2 = p3.i holds p2.b = p1.(b bag_extend i);
    now
      let x be set;
      assume
A27:  x in CPN1R;
      then reconsider x99=x as Element of CPN1R;
      reconsider x9=x as Polynomial of n+1, R by A27,POLYNOM1:def 27;
      reconsider Ax=A.x99,Bx=B.x99 as Polynomial of PNR by POLYNOM3:def 12;
      now
        let i be set;
        assume i in NAT;
        then reconsider i9=i as Element of NAT;
        reconsider Axi=Ax.i9, Bxi=Bx.i9 as Polynomial of n, R by
POLYNOM1:def 27;
        now
          let b be set;
          assume b in Bags n;
          then reconsider b9=b as bag of n;
          thus Axi.b = x9.(b9 bag_extend i9) by A25
            .= Bxi.b by A26;
        end;
        hence Ax.i = Bx.i by FUNCT_2:18;
      end;
      hence A.x=B.x by FUNCT_2:18;
    end;
    hence A=B by FUNCT_2:18;
  end;
end;

theorem Th30:
  for R being Abelian add-associative right_zeroed
  right_complementable associative distributive well-unital commutative non
  trivial (non empty doubleLoopStr), n being Element of NAT, p being Element of
  Polynom-Ring (n+1,R) holds upm(n,R).(mpu(n,R).p) = p
proof
  let R being Abelian add-associative right_zeroed right_complementable
  associative distributive well-unital commutative non trivial (non empty
doubleLoopStr), n being Element of NAT, p being Element of Polynom-Ring (n+1,R)
  ;
  set PNR = Polynom-Ring(n,R);
  reconsider p9=p as Polynomial of (n+1), R by POLYNOM1:def 27;
  reconsider upmmpup = upm(n,R).(mpu(n,R).p) as Polynomial of (n+1), R by
POLYNOM1:def 27;
  reconsider mpup = (mpu(n,R).p) as Polynomial of PNR by POLYNOM3:def 12;
  now
    let b9 be set;
    assume b9 in Bags (n+1);
    then reconsider b=b9 as Element of Bags (n+1);
    reconsider mpupbn = mpup.(b.n) as Polynomial of n, R by POLYNOM1:def 27;
    n < n+1 by NAT_1:13;
    then reconsider bn = (b|n) as bag of n by Th3;
A1: b = bn bag_extend b.n by Def1;
    thus upmmpup.b9 = mpupbn.bn by Def6
      .= p9.b9 by A1,Def7;
  end;
  hence thesis by FUNCT_2:18;
end;

theorem Th31:
  for R being Abelian add-associative right_zeroed
  right_complementable associative distributive well-unital commutative non
  trivial (non empty doubleLoopStr), n being Element of NAT ex P being Function
of Polynom-Ring (Polynom-Ring(n,R)),Polynom-Ring(n+1,R) st P is RingIsomorphism
proof
  let R be Abelian add-associative right_zeroed right_complementable
  associative distributive well-unital commutative non trivial (non empty
  doubleLoopStr), n being Element of NAT;
  set PN1R = Polynom-Ring(n+1,R);
  set CPRPNR = the carrier of Polynom-Ring (Polynom-Ring(n,R));
  set CPN1R = the carrier of PN1R;
  set P = upm (n,R);
A1: P is RingHomomorphism by QUOFIELD:def 21;
  then
A2: P is RingMonomorphism by QUOFIELD:def 23;
  now
    let p be set;
    assume p in CPN1R;
    then reconsider p9 = p as Element of CPN1R;
    dom P = CPRPNR & P.(mpu(n,R).p9) = p9 by Th30,FUNCT_2:def 1;
    hence p in rng P by FUNCT_1:def 5;
  end;
  then CPN1R c= rng P by TARSKI:def 3;
  then rng P = CPN1R by XBOOLE_0:def 10;
  then P is RingEpimorphism by A1,QUOFIELD:def 22;
  then P is RingIsomorphism by A2,QUOFIELD:def 24;
  hence thesis;
end;

begin :: Hilbert basis theorem

registration
  let R be Noetherian Abelian add-associative right_zeroed
  right_complementable associative distributive well-unital commutative (non
  empty doubleLoopStr);
  cluster Polynom-Ring R -> Noetherian;
  coherence
  proof
    set cR = the carrier of R;
    set PR = Polynom-Ring R;
    set cPR = the carrier of PR;
    now
      assume PR is non Noetherian;
      then consider I being Ideal of PR such that
A1:   I is non finitely_generated by IDEAL_1:def 27;
      defpred P1[set,set,set] means ($2 is non empty finite Subset of I)
implies (ex A,B being non empty Subset of cPR st A = $2 & B = I\(A-Ideal) & ex
      r being Element of cPR st r in minlen(B) & $3 = $2 \/ {r});
A2:   now
        let n be Element of NAT, x be Subset of cPR;
        per cases;
        suppose
          not x is non empty finite Subset of I;
          hence ex y be Subset of cPR st P1[n,x,y];
        end;
        suppose
A3:       x is non empty finite Subset of I;
          then reconsider x9=x as non empty Subset of cPR;
          set B = I\(x9 -Ideal);
          now
            assume B = {};
            then
A4:         I c= x9-Ideal by XBOOLE_1:37;
            x9-Ideal c= I-Ideal by A3,IDEAL_1:57;
            then x9-Ideal c= I by IDEAL_1:44;
            hence contradiction by A1,A3,A4,XBOOLE_0:def 10;
          end;
          then reconsider B as non empty Subset of cPR;
          consider r being set such that
A5:       r in minlen (B) by XBOOLE_0:def 1;
          minlen(B) c= cPR by XBOOLE_1:1;
          then reconsider r as Element of cPR by A5;
          P1[n,x,x9 \/ {r}] by A5;
          hence ex y be Subset of cPR st P1[n,x,y];
        end;
      end;
      consider F be Function of NAT,bool cPR such that
A6:   F.0 = {0.PR} & for n be Element of NAT holds P1[n,F.n,F.(n+1)]
      from RECDEF_1:sch 2(A2);
      defpred P2[set,set] means ex n being Element of NAT, A,B being non empty
Subset of cPR st A = F.n & B = I\(A-Ideal) & n = $1 & F.(n+1) = F.n \/ {$2} &
      $2 in minlen(B);
      defpred P[Element of NAT] means F.$1 is non empty finite Subset of I;
A7:   now
        let n be Element of NAT;
        assume P[n];
        then reconsider Fn=F.n as non empty finite Subset of I;
        consider A,B being non empty Subset of cPR such that
        A = Fn and
A8:     B = I\(A-Ideal) and
A9:     ex r being Element of cPR st r in minlen(B) & F.(n+1)= Fn \/ {r} by A6;
        consider r being Element of cPR such that
A10:    r in minlen(B) and
A11:    F.(n+1) = Fn \/ {r} by A9;
        r in I by A8,A10,XBOOLE_0:def 5;
        then {r} c= I by ZFMISC_1:37;
        hence P[n+1] by A11,XBOOLE_1:8;
      end;
      F.0 c= I
      proof
        let x be set;
        assume x in F.0;
        then x = 0.PR by A6,TARSKI:def 1;
        hence thesis by IDEAL_1:2;
      end;
      then
A12:  P[ 0 ] by A6;
A13:  for n being Element of NAT holds P[n] from NAT_1:sch 1(A12,A7);
A14:  now
        let x be Element of NAT;
        ex A,B being non empty Subset of cPR st A = F.x & B = I\ (A-Ideal)
& ex r being Element of cPR st r in minlen(B)&F.(x+1)=F.x \/ {r} by A6,A13;
        hence ex y being Element of cPR st P2[x,y];
      end;
      consider f being Function of NAT, cPR such that
A15:  for x being Element of NAT holds P2[x,f.x] from FUNCT_2:sch 3(
      A14);
A16:  for i,j being Element of NAT st i <= j holds F.i c= F.j
      proof
        let i,j be Element of NAT;
        defpred P[Element of NAT] means F.i c= F.(i+$1);
        assume i<=j;
        then consider m being Nat such that
A17:    j = i+m by NAT_1:10;
A18:    for m being Element of NAT st P[m] holds P[m+1]
        proof
          let m be Element of NAT;
          ex A,B being non empty Subset of cPR st A = F.(i+m) & B = I\(A
-Ideal) & ex r being Element of cPR st r in minlen(B) & F.((i+m)+1) = F. (i+m)
          \/ {r} by A6,A13;
          then
A19:      F.(i+m) c= F.((i+m)+1) by XBOOLE_1:7;
          assume F.i c= F.(i+m);
          hence thesis by A19,XBOOLE_1:1;
        end;
A20:    P[ 0 ];
A21:    for m being Element of NAT holds P[m] from NAT_1:sch 1(A20, A18);
        m in NAT by ORDINAL1:def 13;
        hence thesis by A17,A21;
      end;
A22:  for i being Element of NAT holds f.i <> 0.PR
      proof
        let i be Element of NAT;
        consider n being Element of NAT, A,B being non empty Subset of cPR
        such that
A23:    A = F.n and
A24:    B = I\(A-Ideal) and
        n = i and
        F.(n+1) = F.n \/ {f.i} and
A25:    f.i in minlen(B) by A15;
        F.n c= A-Ideal by A23,IDEAL_1:def 15;
        then
A26:    not f.i in F.n by A24,A25,XBOOLE_0:def 5;
        F.0 c=F.n & 0.PR in F.0 by A6,A16,TARSKI:def 1;
        hence thesis by A26;
      end;
A27:  now
        let i be Element of NAT, fi be Polynomial of R;
        assume fi = f.i;
        then fi <> 0.PR by A22;
        then fi <> 0_.R by POLYNOM3:def 12;
        then len fi <> 0 by POLYNOM4:8;
        then len fi >= 0+1 by NAT_1:13;
        hence len fi-1 >= 0 by XREAL_1:21;
      end;
      defpred P3[set,set] means ex n being Element of NAT, A being Polynomial
      of R st n = $1 & A = f.n & $2 = A.(len A -' 1);
A28:  now
        let x be Element of NAT;
        reconsider fx=f.x as Polynomial of R by POLYNOM3:def 12;
        fx.(len fx -' 1) is Element of cR;
        hence ex y being Element of cR st P3[x,y];
      end;
      consider a being Function of NAT, cR such that
A29:  for x being Element of NAT holds P3[x,a.x] from FUNCT_2:sch 3(
      A28);
      reconsider a as sequence of R;
      for B being non empty Subset of cR ex C being non empty finite
      Subset of cR st C c= B & C-Ideal = B-Ideal by IDEAL_1:99;
      then consider m being Element of NAT such that
A30:  a.(m+1) in (rng (a|(m+1)))-Ideal by IDEAL_1:100;
      reconsider fm1 = f.(m+1) as Polynomial of R by POLYNOM3:def 12;
      defpred P4[set,set] means (ex u,v,w being Element of cR st $1 = u*v*w &
      v in rng (a|Segm(m+1))) implies ex x,y,z being Element of cPR, p being
Polynomial of R st $2 = p & p = (x*y)*z & $1 = p.(len fm1 -' 1) & len p <= len
      fm1 & y in F.(m+1);
A31:  ex n being Element of NAT, A,B being non empty Subset of cPR st A =
      F.n & B = I\(A-Ideal) & n = m+1 & F.(n+1) = F.n \/ {f.(m+1)} & f.(m+1) in
      minlen(B) by A15;
A32:  for i,j being Element of NAT, fi, fj being Polynomial of R st i <=
      j & fi = f.i & fj = f.j holds len fi <= len fj
      proof
        let i,j be Element of NAT, fi, fj be Polynomial of R;
        assume that
A33:    i <= j and
A34:    fi = f.i and
A35:    fj = f.j;
        consider k being Nat such that
A36:    j = i + k by A33,NAT_1:10;
        defpred P[Element of NAT] means for fk being Polynomial of R st fk=f.(
        i+$1) holds len fi <= len fk;
A37:    now
          let k be Element of NAT;
          assume
A38:      P[k];
          now
            reconsider fk = f.(i+k) as Polynomial of R by POLYNOM3:def 12;
            let fk1 be Polynomial of R;
A39:        len fi <= len fk by A38;
            consider n being Element of NAT, A,B being non empty Subset of cPR
            such that
A40:        A = F.n and
A41:        B = I\(A-Ideal) and
A42:        n = i+k and
            F.(n+1) = F.n \/ {f.(i+k)} and
A43:        f.(i+k) in minlen(B) by A15;
            consider n9 being Element of NAT, A9,B9 being non empty Subset of
            cPR such that
A44:        A9 = F.n9 and
A45:        B9 = I\(A9-Ideal) and
A46:        n9 = i+(k+1) and
            F.(n9+1) = F.n9 \/ {f.(i+(k+1))} and
A47:        f.(i+(k+1)) in minlen(B9) by A15;
A48:        f.(i+(k+1)) in I by A45,A47,XBOOLE_0:def 5;
            i+(k+1) = (i+k)+1;
            then i+k < i+(k+1) by NAT_1:13;
            then A-Ideal c= A9-Ideal by A16,A40,A42,A44,A46,IDEAL_1:57;
            then not f.(i+(k+1)) in A-Ideal by A45,A47,XBOOLE_0:def 5;
            then
A49:        f.(i+(k+1)) in B by A41,A48,XBOOLE_0:def 5;
            assume fk1=f.(i+(k+1));
            then len fk <= len fk1 by A43,A49,Th17;
            hence len fi <= len fk1 by A39,XXREAL_0:2;
          end;
          hence P[k+1];
        end;
A50:    P[ 0 ] by A34;
A51:    for k being Element of NAT holds P[k] from NAT_1:sch 1(A50, A37);
        k in NAT by ORDINAL1:def 13;
        hence thesis by A35,A36,A51;
      end;
A52:  for e being set st e in cR ex d being set st d in cPR & P4[e,d]
      proof
        let e be set;
        assume e in cR;
        per cases;
        suppose
          ex u,v,w being Element of cR st e= u*v*w & v in rng (a|Segm
          (m+ 1 ) );
          then consider u,b9,w being Element of cR such that
A53:      e = u*b9*w and
A54:      b9 in rng (a|Segm(m+1));
          consider n being set such that
A55:      n in dom (a|Segm(m+1)) and
A56:      b9 = (a|Segm(m+1)).n by A54,FUNCT_1:def 5;
          set c9 = w;
          set a9 = u;
          set z9 = monomial(c9,0);
A57:      len fm1 -' 1 = (len fm1 -' 1) + 0;
          reconsider n as Element of NAT by A55;
          set y = f.n;
          reconsider y9=y as Polynomial of R by POLYNOM3:def 12;
          set x9 = monomial(a9,len fm1 -' len y9);
          dom (a|Segm(m+1)) = dom a /\ Segm(m+1) by RELAT_1:90
            .= NAT /\ Segm(m+1) by FUNCT_2:def 1
            .= Segm(m+1) by XBOOLE_1:28;
          then
A58:      n < m+1 by A55,NAT_1:45;
          then len y9 <= len fm1 by A32;
          then len y9 - len y9 <= len fm1 - len y9 by XREAL_1:11;
          then
A59:      len fm1 -' len y9 = len fm1 - len y9 by XREAL_0:def 2;
          then len x9 <= len fm1 - len y9 +1 by Th18;
          then
A60:      len x9 + (len y9-1) <= len fm1-(len y9-1)+(len y9-1) by XREAL_1:8;
A61:      len (x9*'y9) <= len x9 + len y9 -' 1 by Th21;
A62:      len y9 -1 >= 0 by A27;
          then 0+0 <= (len y9 - 1)+len x9;
          then len (x9*'y9) <= len x9 + len y9 - 1 by A61,XREAL_0:def 2;
          then
A63:      len (x9*'y9) <= len fm1 by A60,XXREAL_0:2;
          len fm1 - 1 >= 0 by A27;
          then
A64:      len fm1 -' 1 = (len fm1 - len y9) + (len y9 -1) by XREAL_0:def 2
            .= (len y9 -' 1) + (len fm1 -' len y9) by A59,A62,XREAL_0:def 2;
          reconsider x=x9,z=z9 as Element of cPR by POLYNOM3:def 12;
          set p = (x*y)*z;
A65:      x*y = x9*'y9 by POLYNOM3:def 12;
          then
A66:      p = (x9*'y9)*'z9 by POLYNOM3:def 12;
          reconsider p as Polynomial of R by POLYNOM3:def 12;
A67:      ex n9 being Element of NAT, A being Polynomial of R st n9 = n &
          A = f.n9 & a.n = A.(len A -' 1) by A29;
          b9 = a.n by A55,A56,FUNCT_1:70;
          then (x9*'y9).(len fm1 -'1) = a9 * b9 by A67,A64,Th19;
          then
A68:      (a9*b9)*c9 = p.(len fm1 -' 1) by A66,A57,Th20;
          ex n9 being Element of NAT, A,B being non empty Subset of cPR
st A = F.n9 & B = I\(A-Ideal) & n9 = n & F.(n9+1) = F.n9 \/ {f.n} & f .n in
          minlen(B) by A15;
          then {y} c= F.(n+1) by XBOOLE_1:7;
          then
A69:      y in F.(n+1) by ZFMISC_1:37;
          len z9 <= 0+1 by Th18;
          then len (x9*'y9) + len z9 <= len fm1 + 1 by A63,XREAL_1:9;
          then
A70:      len(x9*'y9)+len z9-'1 <= len fm1+1-'1 by NAT_D:42;
          len ((x9*'y9)*'z9) <= len (x9*'y9) + len z9 -' 1 by Th21;
          then len ((x9*'y9)*'z9) <= len fm1 +1 -' 1 by A70,XXREAL_0:2;
          then len ((x9*'y9)*'z9) <= len fm1 +1 -1 by XREAL_0:def 2;
          then
A71:      len p <= len fm1+0 by A65,POLYNOM3:def 12;
          n+1 <= m+1 by A58,NAT_1:13;
          then F.(n+1) c= F.(m+1) by A16;
          hence thesis by A53,A68,A71,A69;
        end;
        suppose
          not ex u,v,w being Element of cR st e= u*v*w & v in rng (a
          |Segm(m+1));
          hence thesis;
        end;
      end;
      consider LCT being Function of cR, cPR such that
A72:  for e being set st e in cR holds P4[e,LCT.e] from FUNCT_2:sch
      1 (A52 );
      reconsider FM1 = F.(m+1) as non empty Subset of cPR by A13;
      set raSm1 = rng(a|Segm(m+1));
      consider lc being LinearCombination of rng (a|Segm(m+1)) such that
A73:  a.(m+1) = Sum lc by A30,IDEAL_1:60;
A74:  for lc being LinearCombination of raSm1 ex LC being
      LinearCombination of FM1 st LC = LCT * lc & len lc = len LC
      proof
        let lc be LinearCombination of raSm1;
        set LC = LCT * lc;
        dom LCT = cR by FUNCT_2:def 1;
        then rng lc c= dom LCT;
        then
A75:    dom lc = dom (LCT*lc) by RELAT_1:46;
        then
A76:    len lc = len LC by FINSEQ_3:31;
        LC is LinearCombination of FM1
        proof
          let i be set such that
A77:      i in dom LC;
          consider u,v being Element of R, a being Element of raSm1 such that
A78:      lc/.i = u*a*v by A75,A77,IDEAL_1:def 9;
A79:      lc/.i = lc.i by A75,A77,PARTFUN1:def 8;
          consider x,y,z being Element of cPR, p being Polynomial of R such
          that
A80:      LCT.(lc/.i) = p & p = (x*y)*z and
          (u*a)*v = p.(len fm1 -' 1) and
          len p <= len fm1 and
A81:      y in F.(m+1) by A72,A78;
          reconsider y as Element of FM1 by A81;
          reconsider x, z as Element of PR;
          LC/.i = (LCT*lc).i by A77,PARTFUN1:def 8
            .= x*y*z by A75,A77,A79,A80,FUNCT_1:23;
          hence
          ex x,z being Element of PR, y being Element of FM1 st LC/.i = x *y*z;
        end;
        then reconsider LC as LinearCombination of FM1;
        LC = LC;
        hence thesis by A76;
      end;
      for lc being LinearCombination of raSm1 ex LC being
LinearCombination of FM1, sLC being Polynomial of R st LC = LCT*lc & sLC = Sum
      LC & sLC.(len fm1 -' 1) = Sum lc & len sLC <= len fm1
      proof
        let lc be LinearCombination of (raSm1);
        defpred P5[Element of NAT] means for lc being LinearCombination of
raSm1 st len lc <= $1 holds ex LC being LinearCombination of FM1, sLC being
Polynomial of R st LC = LCT*lc & sLC = Sum LC & sLC.(len fm1 -' 1) = Sum lc &
        len sLC <= len fm1;
A82:    ex n being Element of NAT st n = len lc;
A83:    for k being Element of NAT st P5[k] holds P5[k+1]
        proof
          let k be Element of NAT;
          assume
A84:      P5[k];
          thus P5[k+1]
          proof
            let lc be LinearCombination of (raSm1);
            assume
A85:        len lc <= k+1;
            per cases;
            suppose
              len lc <= k;
              hence thesis by A84;
            end;
            suppose
A86:          len lc > k;
              then len lc >= k+1 by NAT_1:13;
              then
A87:          len lc = k+1 by A85,XXREAL_0:1;
              thus thesis
              proof
                per cases;
                suppose
A88:              k = 0;
                  then dom lc = {1} by A87,FINSEQ_1:4,def 3;
                  then
A89:              1 in dom lc by TARSKI:def 1;
                  then consider
                  u,w being Element of R, v being Element of raSm1
                  such that
A90:              lc/.1 = u*v*w by IDEAL_1:def 9;
A91:              lc.1 = lc/.1 by A89,PARTFUN1:def 8;
                  then consider
                  x,y,z being Element of cPR, p being Polynomial of R
                  such that
A92:              LCT.(lc.1) = p and
                  p = (x*y)*z and
A93:              (u*v)*w = p.(len fm1 -' 1) and
A94:              len p <= len fm1 and
                  y in F.(m+1) by A72,A90;
A95:              lc = <*lc.1*> by A87,A88,FINSEQ_1:57;
                  then
A96:              Sum lc = p.(len fm1 -' 1) by A90,A91,A93,RLVECT_1:61;
                  consider LC being LinearCombination of FM1 such that
A97:              LC = LCT*lc and
                  len LC = len lc by A74;
                  LC = <* LCT.(u*v*w) *> by A95,A90,A91,A97,FINSEQ_2:39;
                  then Sum LC = p by A90,A91,A92,RLVECT_1:61;
                  hence thesis by A94,A97,A96;
                end;
                suppose
A98:              k > 0;
                  consider LC being LinearCombination of FM1 such that
A99:              LC = LCT*lc and
                  len LC = len lc by A74;
                  lc is non empty by A86;
                  then consider
                  p being LinearCombination of raSm1, e being Element
                  of cR such that
A100:             lc = p^<*e*> and
A101:             <*e*> is LinearCombination of raSm1 by IDEAL_1:32;
                  len <* e *> = 0+1 by FINSEQ_1:56;
                  then len <*e*> <= k by A98,NAT_1:13;
                  then consider LCe being LinearCombination of FM1, sLCe being
                  Polynomial of R such that
A102:             LCe = LCT*<*e*> and
A103:             sLCe = Sum LCe and
A104:             sLCe.(len fm1 -' 1) = Sum <* e *> and
A105:             len sLCe <= len fm1 by A84,A101;
                  len lc = len p + len <* e *> by A100,FINSEQ_1:35
                    .= len p + 1 by FINSEQ_1:56;
                  then consider LCp being LinearCombination of FM1, sLCp being
                  Polynomial of R such that
A106:             LCp = LCT*p and
A107:             sLCp = Sum LCp and
A108:             sLCp.(len fm1 -' 1) = Sum p and
A109:             len sLCp <= len fm1 by A84,A87;
                  set sLC = sLCp + sLCe;
A110:             Sum lc = Sum p + e by A100,FVSUM_1:87
                    .= sLCp.(len fm1 -' 1) + sLCe.(len fm1 -' 1) by A108,A104,
RLVECT_1:61
                    .= sLC.(len fm1 -' 1) by NORMSP_1:def 5;
A111:             now
                    per cases;
                    suppose
                      len sLCp < len sLCe;
                      then len sLC <= len sLCe by POLYNOM4:9;
                      hence len sLC <= len fm1 by A105,XXREAL_0:2;
                    end;
                    suppose
                      len sLCp >= len sLCe;
                      then len sLC <= len sLCp by POLYNOM4:9;
                      hence len sLC <= len fm1 by A109,XXREAL_0:2;
                    end;
                  end;
                  dom LCT = cR by FUNCT_2:def 1;
                  then rng p \/ rng <* e *> c= dom LCT;
                  then ex LCTp, LCTe being FinSequence st LCTp = LCT*p & LCTe
                  = LCT*<*e*> & LCT*(p^<*e*>) = LCTp^LCTe by Th1;
                  then
                  Sum LC = Sum LCp + Sum LCe by A100,A106,A102,A99,RLVECT_1:58
                    .= sLC by A107,A103,POLYNOM3:def 12;
                  hence thesis by A99,A110,A111;
                end;
              end;
            end;
          end;
        end;
A112:   P5 [ 0]
        proof
          let lc be LinearCombination of (raSm1);
          assume
A113:     len lc <= 0;
          then
A114:     lc = <*>cR;
          consider LC being LinearCombination of FM1 such that
A115:     LC = LCT * lc and
A116:     len lc = len LC by A74;
          take LC, p = 0_.(R);
          thus LC = LCT * lc by A115;
          LC = <*>cPR by A113,A116;
          then Sum LC = 0.PR by RLVECT_1:60
            .= p by POLYNOM3:def 12;
          hence p = Sum LC;
          thus p.(len fm1 -' 1) = 0.R by FUNCOP_1:13
            .= Sum lc by A114,RLVECT_1:60;
          thus thesis by POLYNOM4:6;
        end;
        for k being Element of NAT holds P5[k] from NAT_1:sch 1(A112,
        A83);
        hence thesis by A82;
      end;
      then consider
      LC being LinearCombination of FM1, sLC being Polynomial of R
      such that
      LC = LCT*lc and
A117: sLC = Sum LC and
A118: sLC.(len fm1 -' 1) = Sum lc and
A119: len sLC <= len fm1;
A120: sLC in FM1-Ideal by A117,IDEAL_1:60;
      set f9=fm1-sLC;
A121: now
        ex n being Element of NAT, A being Polynomial of R st n = m+1 & A
        = f.n & a.(m+1) = A.(len A -' 1) by A29;
        then
A122:   f9.(len fm1 -' 1)= fm1.(len fm1 -' 1) - fm1.(len fm1 -' 1) by A73,A118,
POLYNOM3:27
          .= 0.R by RLVECT_1:28;
        len fm1 - 1 >= 0 by A27;
        then
A123:   (len fm1 -' 1) + 1 = (len fm1 - 1) + 1 by XREAL_0:def 2
          .= len fm1;
        assume len f9 = len fm1;
        hence contradiction by A123,A122,ALGSEQ_1:25;
      end;
A124: f9+sLC = fm1+(sLC+(-sLC)) by POLYNOM3:26
        .= fm1+(sLC-sLC)
        .= fm1+0_.R by POLYNOM3:30
        .= fm1 by POLYNOM3:29;
A125: now
        reconsider sLC as Element of cPR by POLYNOM3:def 12;
        assume
A126:   f9 in FM1-Ideal;
        reconsider f9 as Element of cPR by POLYNOM3:def 12;
        f.(m+1) = f9+sLC by A124,POLYNOM3:def 12;
        then fm1 in FM1-Ideal by A120,A126,IDEAL_1:def 1;
        hence contradiction by A31,XBOOLE_0:def 5;
      end;
      len (-sLC) <= len fm1 by A119,POLYNOM4:11;
      then len f9 <= len fm1 by POLYNOM4:9;
      then
A127: len f9 < len fm1 by A121,XXREAL_0:1;
      f9 in I
      proof
        reconsider f9 as Element of cPR by POLYNOM3:def 12;
        reconsider sLC as Element of cPR by POLYNOM3:def 12;
        FM1 is Subset of I by A13;
        then FM1-Ideal c= I-Ideal by IDEAL_1:57;
        then
A128:   FM1-Ideal c= I by IDEAL_1:44;
        f.(m+1) in I & f9=f.(m+1)-sLC by A31,Th16,XBOOLE_0:def 5;
        hence thesis by A120,A128,IDEAL_1:15;
      end;
      then f9 in I\(FM1-Ideal) by A125,XBOOLE_0:def 5;
      hence contradiction by A127,A31,Th17;
    end;
    hence thesis;
  end;
end;

canceled;

theorem Th33:
  for R being Abelian add-associative right_zeroed
  right_complementable associative distributive well-unital non trivial
commutative (non empty doubleLoopStr) st R is Noetherian for n being Element of
  NAT holds Polynom-Ring (n,R) is Noetherian
proof
  let R be Abelian add-associative right_zeroed right_complementable
  associative distributive well-unital non trivial commutative (non empty
  doubleLoopStr);
  assume
A1: R is Noetherian;
  defpred P[Element of NAT] means Polynom-Ring($1,R) is Noetherian;
A2: now
    let k be Element of NAT such that
A3: P[k];
    ex P being Function of Polynom-Ring(Polynom-Ring(k,R)), Polynom-Ring(k+
    1,R) st P is RingIsomorphism by Th31;
    hence P[k+1] by A3,Th27;
  end;
  ex P being Function of R, Polynom-Ring (0,R) st P is RingIsomorphism by Th28;
  then
A4: P[ 0 ] by A1,Th27;
  thus for n being Element of NAT holds P[n] from NAT_1:sch 1(A4, A2);
end;

theorem Th34:
  for F being Field holds F is Noetherian
proof
  let F be Field;
  let I be Ideal of F;
  per cases by IDEAL_1:22;
  suppose
A1: I = {0.F};
    reconsider s0F = {0.F} as finite non empty Subset of F;
    {0.F} = s0F-Ideal by IDEAL_1:47;
    hence thesis by A1;
  end;
  suppose
A2: I = the carrier of F;
    reconsider s1F = {1_F} as finite non empty Subset of F;
    the carrier of F = s1F-Ideal by IDEAL_1:51;
    hence thesis by A2;
  end;
end;

theorem
  for F being Field, n being Element of NAT holds Polynom-Ring (n,F) is
  Noetherian
proof
  let F be Field, n be Element of NAT;
  F is Noetherian by Th34;
  hence thesis by Th33;
end;

theorem
  for R being Abelian right_zeroed add-associative right_complementable
  well-unital distributive associative commutative non trivial (non empty
  doubleLoopStr), X be infinite Ordinal holds Polynom-Ring (X,R) is non
  Noetherian
proof
  deffunc F(set)=$1;
  let R be Abelian right_zeroed add-associative right_complementable
  well-unital distributive associative commutative non trivial (non empty
  doubleLoopStr), X be infinite Ordinal such that
A1: Polynom-Ring (X,R) is Noetherian;
  reconsider f0 = X --> 0.R as Function of X,the carrier of R;
  deffunc G(Element of X)=1_1($1,R);
  set tcR = the carrier of R;
A2: for d1,d2 being Element of X st G(d1)=G(d2) holds d1=d2 by Th14;
  tcR c= tcR;
  then reconsider cR = the carrier of R as non empty Subset of tcR;
  set S = {1_1(n, R) where n is Element of X : n in NAT};
  set tcPR = the carrier of Polynom-Ring(X,R);
A3: NAT c= X by CARD_3:102;
  0 in NAT;
  then reconsider 0X = 0 as Element of X by A3;
A4: S c= tcPR
  proof
    let x be set;
    assume x in S;
    then ex n being Element of X st x = 1_1(n,R) & n in NAT;
    hence thesis by POLYNOM1:def 27;
  end;
  1_1(0X,R) in S;
  then reconsider S as non empty Subset of tcPR by A4;
  consider C being non empty finite Subset of tcPR such that
A5: C c= S and
A6: C-Ideal = S-Ideal by A1,IDEAL_1:99;
  set CN = { F(n) where n is Element of X : G(n) in C };
A7: C is finite;
A8: CN is finite from FUNCT_7:sch 2(A7,A2);
A9: CN c= NAT
  proof
    let x be set;
    assume x in CN;
    then consider n being Element of X such that
A10: x = n and
A11: 1_1(n,R) in C;
    1_1(n,R) in S by A5,A11;
    then ex m being Element of X st 1_1(n,R) = 1_1(m,R) & m in NAT;
    hence thesis by A10,Th14;
  end;
  consider c being Element of C;
  c in C;
  then c in S by A5;
  then consider cn being Element of X such that
A12: c = 1_1(cn,R) and
A13: cn in NAT;
  reconsider cn as Element of NAT by A13;
  cn in CN by A12;
  then reconsider CN as non empty finite Subset of NAT by A8,A9;
  reconsider mm = max CN as Element of NAT by ORDINAL1:def 13;
  reconsider m1 = mm+1 as Element of NAT;
  m1 in NAT;
  then reconsider m2 = m1 as Element of X by A3;
  1_1(m2,R) in S & S c= S-Ideal by IDEAL_1:def 15;
  then consider lc being LinearCombination of C such that
A14: 1_1(m2,R) = Sum lc by A6,IDEAL_1:60;
  reconsider ev = f0+*(m2,1_R) as Function of X, R;
  consider E be FinSequence of [:tcPR, tcPR, tcPR:] such that
A15: E represents lc by IDEAL_1:35;
  set P = Polynom-Evaluation(X, R, ev);
  deffunc F(Nat)=(P.(E/.$1)`1)*(P.(E/.$1)`2)*(P.(E/.$1)`3);
  consider LC being FinSequence of the carrier of R such that
A16: len LC = len lc and
A17: for k being Nat st k in dom LC holds LC.k = F(k) from FINSEQ_2:sch
  1;
  now
    let i being set;
    assume
A18: i in dom LC;
    then reconsider k = i as Element of NAT;
    reconsider a = (P.(E/.k)`2) as Element of cR;
    reconsider u=(P.(E/.k)`1), v=(P.(E/.k)`3) as Element of R;
    take u, v, a;
    thus LC/.i = LC.k by A18,PARTFUN1:def 8
      .= u*a*v by A17,A18;
  end;
  then reconsider LC as LinearCombination of cR by IDEAL_1:def 9;
A19: now
    let i be Element of NAT;
A20: now
      assume m2 in CN;
      then (max CN)+1 <= max CN by XXREAL_2:def 8;
      hence contradiction by XREAL_1:31;
    end;
    assume
A21: i in dom LC;
    then i in dom lc by A16,FINSEQ_3:31;
    then reconsider y = (E/.i)`2 as Element of C by A15,IDEAL_1:def 12;
    y in C;
    then y in S by A5;
    then consider n being Element of X such that
A22: y = 1_1(n, R) and
    n in NAT;
    n in CN by A22;
    then
A23: ev.n = (X --> 0.R).n by A20,FUNCT_7:34
      .= 0.R by FUNCOP_1:13;
A24: Support(1_1(n,R)) = {UnitBag n} by Th13;
A25: P.1_1(n,R) = eval(1_1(n,R), ev) by POLYNOM2:def 5
      .= (1_1(n,R).UnitBag n)*eval(UnitBag n,ev) by A24,POLYNOM2:21
      .= 1_R *eval(UnitBag n,ev) by Th12
      .= 1_R * ev.n by Th11
      .= 0.R by A23,VECTSP_1:36;
    thus LC.i = (P.(E/.i)`1)*(P.(E/.i)`2)*(P.(E/.i)`3) by A17,A21
      .= 0.R*(P.(E/.i)`3) by A22,A25,VECTSP_1:36
      .= 0.R by VECTSP_1:36;
  end;
  dom (X --> 0.R) = X by FUNCOP_1:19;
  then
A26: ev.m2 = 1_R by FUNCT_7:33;
A27: Support(1_1(m2,R)) = {UnitBag m2} by Th13;
A28: Polynom-Evaluation(X, R, ev).1_1(m2,R) = eval(1_1(m2,R), ev) by
POLYNOM2:def 5
    .= (1_1(m2,R).UnitBag m2)*eval(UnitBag m2,ev) by A27,POLYNOM2:21
    .= 1_R *eval(UnitBag m2,ev) by Th12
    .= 1_R * ev.m2 by Th11
    .= 1_R by A26,GROUP_1:def 5;
  for k being set st k in dom LC holds LC.k = (P.(E/.k)`1)*(P.(E/.k)`2)*(
  P.(E/.k)`3) by A17;
  then P.(Sum lc) = Sum LC by A15,A16,Th24
    .=0.R by A19,POLYNOM3:1;
  hence contradiction by A14,A28;
end;
