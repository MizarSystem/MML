:: Inferior Limit and Superior Limit of Sequences of Real Numbers
::  by Bo Zhang , Hiroshi Yamazaki and Yatsuka Nakamura
:: 
:: Received April 29, 2005
:: Copyright (c) 2005 Association of Mizar Users

environ

 vocabularies SEQ_1, ARYTM_3, RELAT_1, SEQ_2, FUNCT_1, ARYTM_1, ORDINAL2,
      ARYTM, ABSVALUE, BOOLE, RINFSUP1, SEQM_3, SQUARE_1, PROB_1, LATTICES,
      SUPINF_2, PARTFUN3, FRECHET2;
 notations ORDINAL1, NUMBERS, XCMPLX_0, XREAL_0, REAL_1, NAT_1, COMPLEX1,
      TARSKI, SEQM_3, SEQ_4, XBOOLE_0, SUBSET_1, SEQ_2, RELSET_1, FUNCT_2,
      SQUARE_1, LIMFUNC1, PSCOMP_1, SEQ_1, PARTFUN3;
 constructors REAL_1, NAT_1, COMPLEX1, SEQM_3, LIMFUNC1, RFUNCT_2, PARTFUN3;
 registrations SEQ_1, SUBSET_1, XREAL_0, RELSET_1, ARYTM_3, MEMBERED, ORDINAL2;
 requirements REAL, NUMERALS, BOOLE, SUBSET, ARITHM;


begin

 reserve n,m,k,k1,k2 for Nat;
 reserve r,r1,r2,s,t,p for real number;
 reserve seq,seq1,seq2 for Real_Sequence;
 reserve x,y for set;

theorem :: RINFSUP1:1
  s - r < t & s + r > t iff abs(t-s) < r;

definition
  let seq be Real_Sequence;
  func sup seq -> Real equals
:: RINFSUP1:def 1
    sup rng seq;
end;

definition
  let seq be Real_Sequence;
  func inf seq -> Real equals
:: RINFSUP1:def 2
    inf rng seq;
end;

theorem :: RINFSUP1:2
  seq1+seq2-seq2=seq1;

theorem :: RINFSUP1:3
  r in rng seq iff -r in rng(-seq);

theorem :: RINFSUP1:4
  rng (-seq) = - rng seq;

theorem :: RINFSUP1:5
  seq is bounded_above iff rng seq is bounded_above;

theorem :: RINFSUP1:6
  seq is bounded_below iff rng seq is bounded_below;

theorem :: RINFSUP1:7
  seq is bounded_above implies ( r = sup seq iff
    ((for n holds seq.n <= r) & (for s st 0<s holds ex k st r-s < seq.k)));

theorem :: RINFSUP1:8
  seq is bounded_below implies (r = inf seq iff
    ((for n holds r <= seq.n) & (for s st 0<s holds ex k st seq.k < r+s)));

theorem :: RINFSUP1:9
  (for n holds seq.n <= r) iff (seq is bounded_above & sup seq <= r);

theorem :: RINFSUP1:10
  (for n holds r <= seq.n) iff (seq is bounded_below & r <= inf seq);

theorem :: RINFSUP1:11
  seq is bounded_above iff -seq is bounded_below;

theorem :: RINFSUP1:12
  seq is bounded_below iff -seq is bounded_above;

theorem :: RINFSUP1:13
  seq is bounded_above implies sup seq = -inf (-seq);

theorem :: RINFSUP1:14
  seq is bounded_below implies inf seq = -sup (-seq);

theorem :: RINFSUP1:15
  seq1 is bounded_below & seq2 is bounded_below implies
    inf (seq1 + seq2) >= inf seq1 + inf seq2;

theorem :: RINFSUP1:16
  seq1 is bounded_above & seq2 is bounded_above implies
    sup (seq1 + seq2) <= sup seq1 + sup seq2;

notation
  let f be Real_Sequence;
  synonym f is nonnegative for f is nonnegative-yielding;
end;

definition
  let f be Real_Sequence;
  redefine attr f is nonnegative means
:: RINFSUP1:def 3
    for n holds f.n >= 0;
end;

theorem :: RINFSUP1:17
  seq is nonnegative implies seq ^\k is nonnegative;

theorem :: RINFSUP1:18
  seq is bounded_below nonnegative implies inf seq >= 0;

theorem :: RINFSUP1:19
  seq is bounded_above nonnegative implies sup seq >= 0;

theorem :: RINFSUP1:20
  seq1 is bounded_below nonnegative &
  seq2 is bounded_below nonnegative implies
    (seq1(#)seq2) is bounded_below &
    inf (seq1 (#) seq2) >= (inf seq1) * (inf seq2);

theorem :: RINFSUP1:21
  seq1 is bounded_above nonnegative &
  seq2 is bounded_above nonnegative implies
    (seq1(#)seq2) is bounded_above &
    sup (seq1 (#) seq2) <= (sup seq1) * (sup seq2);

theorem :: RINFSUP1:22
  seq is non-decreasing bounded_above implies seq is bounded;

theorem :: RINFSUP1:23
  seq is non-increasing bounded_below implies seq is bounded;

theorem :: RINFSUP1:24
  seq is non-decreasing bounded_above implies
    lim seq = sup seq;

theorem :: RINFSUP1:25
  seq is non-increasing bounded_below implies
    lim seq = inf seq;

theorem :: RINFSUP1:26
  seq is bounded_above implies seq ^\k is bounded_above;

theorem :: RINFSUP1:27
  seq is bounded_below implies seq ^\k is bounded_below;

theorem :: RINFSUP1:28
  seq is bounded implies seq ^\k is bounded;

theorem :: RINFSUP1:29
  for seq, n holds {seq.k: n <= k} is Subset of REAL;

theorem :: RINFSUP1:30
  rng (seq ^\ k) = {seq.n: k <= n};

theorem :: RINFSUP1:31
  seq is bounded_above implies (for n for R being Subset of REAL st
    R = {seq.k : n <= k} holds R is bounded_above);

theorem :: RINFSUP1:32
  seq is bounded_below implies (for n for R being Subset of REAL st
    R = {seq.k : n <= k} holds R is bounded_below);

theorem :: RINFSUP1:33
  seq is bounded implies (for n for R being Subset of REAL st
    R = {seq.k : n <= k} holds R is bounded);

theorem :: RINFSUP1:34
  seq is non-decreasing implies for n
    for R being Subset of REAL st R = {seq.k : n <= k} holds
      inf R = seq.n;

theorem :: RINFSUP1:35
  seq is non-increasing implies
    for n for R being Subset of REAL st R = {seq.k : n <= k}
    holds sup R = seq.n;

theorem :: RINFSUP1:36
  for seq holds
    ex f being Function of NAT,REAL st
    for n for Y being Subset of REAL st Y = {seq.k: n <= k} holds f.n = sup Y;

theorem :: RINFSUP1:37
  for seq holds
   ex f being Function of NAT,REAL st
  for n for Y being Subset of REAL st Y = {seq.k: n <= k} holds f.n = inf Y;

definition
  let seq be Real_Sequence;
  func inferior_realsequence seq -> Real_Sequence means
:: RINFSUP1:def 4
  for n for Y being Subset of REAL st Y = {seq.k : n <= k} holds it.n = inf Y;
end;

definition
  let seq be Real_Sequence;
  func superior_realsequence seq -> Real_Sequence means
:: RINFSUP1:def 5
  for n for Y being Subset of REAL st Y = {seq.k : n <= k} holds it.n = sup Y;
end;

theorem :: RINFSUP1:38
  (inferior_realsequence seq).n = inf (seq ^\n);

theorem :: RINFSUP1:39
  (superior_realsequence seq).n = sup (seq ^\n);

theorem :: RINFSUP1:40
  seq is bounded_below implies (inferior_realsequence seq).0 = inf seq;

theorem :: RINFSUP1:41
  seq is bounded_above implies (superior_realsequence seq).0 = sup seq;

theorem :: RINFSUP1:42
  seq is bounded_below implies (r = (inferior_realsequence seq).n iff
    (for k holds r <= seq.(n+k)) & for s st 0<s ex k st seq.(n+k)<r+s);

theorem :: RINFSUP1:43
  seq is bounded_above implies (r = (superior_realsequence seq).n iff
    (for k holds seq.(n+k) <= r) & for s st 0<s ex k st r-s<seq.(n+k));

theorem :: RINFSUP1:44
  seq is bounded_below implies
    ((for k holds r <= seq.(n+k)) iff r <= (inferior_realsequence seq).n);

theorem :: RINFSUP1:45
seq is bounded_below implies
((for m st n <= m holds r <= seq.m) iff r <= (inferior_realsequence seq).n);

theorem :: RINFSUP1:46
seq is bounded_above implies
((for k holds seq.(n+k) <= r) iff (superior_realsequence seq).n <= r);

theorem :: RINFSUP1:47
seq is bounded_above implies
((for m st n<=m holds seq.m <= r) iff (superior_realsequence seq).n <= r);

theorem :: RINFSUP1:48
seq is bounded_below implies
 (inferior_realsequence seq).n = min((inferior_realsequence seq).(n+1),seq.n);

theorem :: RINFSUP1:49
seq is bounded_above implies
 (superior_realsequence seq).n = max((superior_realsequence seq).(n+1),seq.n);

theorem :: RINFSUP1:50
  seq is bounded_below implies (inferior_realsequence seq).n <=
    (inferior_realsequence seq).(n+1);

theorem :: RINFSUP1:51
  seq is bounded_above implies (superior_realsequence seq).(n+1) <=
    (superior_realsequence seq).n;

theorem :: RINFSUP1:52
  seq is bounded_below implies inferior_realsequence seq is non-decreasing;

theorem :: RINFSUP1:53
  seq is bounded_above implies superior_realsequence seq is non-increasing;

theorem :: RINFSUP1:54
  seq is bounded implies
    (inferior_realsequence seq).n <= (superior_realsequence seq).n;

theorem :: RINFSUP1:55
  seq is bounded implies
    (inferior_realsequence seq).n <= inf (superior_realsequence seq);

theorem :: RINFSUP1:56
  seq is bounded implies
    sup(inferior_realsequence seq) <= (superior_realsequence seq).n;

theorem :: RINFSUP1:57
  seq is bounded implies sup(inferior_realsequence seq) <=
    inf(superior_realsequence seq);

theorem :: RINFSUP1:58
  seq is bounded implies superior_realsequence seq is bounded &
    inferior_realsequence seq is bounded;

theorem :: RINFSUP1:59
  seq is bounded implies inferior_realsequence seq is convergent &
    lim inferior_realsequence seq = sup inferior_realsequence seq;

theorem :: RINFSUP1:60
  seq is bounded implies superior_realsequence seq is convergent &
    lim superior_realsequence seq = inf superior_realsequence seq;

theorem :: RINFSUP1:61
  seq is bounded_below implies
    (inferior_realsequence seq).n = - (superior_realsequence(-seq)).n;

theorem :: RINFSUP1:62
  seq is bounded_above implies
    (superior_realsequence seq).n = - (inferior_realsequence(-seq)).n;

theorem :: RINFSUP1:63
  seq is bounded_below implies
    (inferior_realsequence seq) = - (superior_realsequence(-seq));

theorem :: RINFSUP1:64
  seq is bounded_above implies
    (superior_realsequence seq) = - (inferior_realsequence(-seq));

theorem :: RINFSUP1:65
  seq is non-decreasing implies seq.n <= (inferior_realsequence seq).(n+1);

theorem :: RINFSUP1:66
  seq is non-decreasing implies inferior_realsequence seq = seq;

theorem :: RINFSUP1:67
  seq is non-decreasing bounded_above implies
    seq.n <= (superior_realsequence seq).(n+1);

theorem :: RINFSUP1:68
  seq is non-decreasing bounded_above implies
    (superior_realsequence seq).n = (superior_realsequence seq).(n+1);

theorem :: RINFSUP1:69
  seq is non-decreasing bounded_above implies
    (superior_realsequence seq).n = sup seq &
    (superior_realsequence seq) is constant;

theorem :: RINFSUP1:70
  seq is non-decreasing bounded_above implies
    inf (superior_realsequence seq) = sup seq;

theorem :: RINFSUP1:71
  seq is non-increasing implies (superior_realsequence seq).(n+1) <= seq.n;

theorem :: RINFSUP1:72
  seq is non-increasing implies superior_realsequence seq = seq;

theorem :: RINFSUP1:73
  seq is non-increasing bounded_below implies
    (inferior_realsequence seq).(n+1) <= seq.n;

theorem :: RINFSUP1:74
  seq is non-increasing bounded_below implies
    (inferior_realsequence seq).n = (inferior_realsequence seq).(n+1);

theorem :: RINFSUP1:75
  seq is non-increasing & seq is bounded_below implies
    (inferior_realsequence seq).n = inf seq &
      (inferior_realsequence seq) is constant;

theorem :: RINFSUP1:76
  seq is non-increasing bounded_below implies
    sup inferior_realsequence seq = inf seq;

theorem :: RINFSUP1:77
seq1 is bounded & seq2 is bounded & (for n holds seq1.n <= seq2.n) implies
 ((for n holds (superior_realsequence seq1).n <=
   (superior_realsequence seq2).n) &
 (for n holds (inferior_realsequence seq1).n <=
   (inferior_realsequence seq2).n));

theorem :: RINFSUP1:78
seq1 is bounded_below & seq2 is bounded_below implies
 (inferior_realsequence(seq1+seq2)).n >=
 (inferior_realsequence seq1).n + (inferior_realsequence seq2).n;

theorem :: RINFSUP1:79
  seq1 is bounded_above & seq2 is bounded_above implies
   (superior_realsequence(seq1+seq2)).n <=
   (superior_realsequence seq1).n + (superior_realsequence seq2).n;

theorem :: RINFSUP1:80
seq1 is bounded_below nonnegative &
seq2 is bounded_below nonnegative implies
 (inferior_realsequence(seq1(#)seq2)).n >=
 (inferior_realsequence seq1).n * (inferior_realsequence seq2).n;

theorem :: RINFSUP1:81
seq1 is bounded_below nonnegative &
seq2 is bounded_below nonnegative implies
 (inferior_realsequence(seq1(#)seq2)).n >=
 (inferior_realsequence seq1).n * (inferior_realsequence seq2).n;

theorem :: RINFSUP1:82
  seq1 is bounded_above nonnegative &
  seq2 is bounded_above nonnegative implies
 (superior_realsequence(seq1(#)seq2)).n <=
 (superior_realsequence seq1).n * (superior_realsequence seq2).n;

definition
  let seq be Real_Sequence;
  func lim_sup seq -> Element of REAL equals
:: RINFSUP1:def 6
  inf superior_realsequence seq;
end;

definition
  let seq be Real_Sequence;
  func lim_inf seq -> Element of REAL equals
:: RINFSUP1:def 7
  sup inferior_realsequence seq;
end;

theorem :: RINFSUP1:83
  seq is bounded implies (lim_inf seq <= r iff
    (for s st 0<s holds (for n ex k st seq.(n+k)<r+s)));

theorem :: RINFSUP1:84
  seq is bounded implies (r <= lim_inf seq iff
  (for s st 0<s holds ex n st for k holds r-s<seq.(n+k)));

theorem :: RINFSUP1:85
  seq is bounded implies (r = lim_inf seq iff
    (for s st 0<s holds ((for n ex k st seq.(n+k)<r+s) &
    (ex n st for k holds r-s<seq.(n+k)))));

theorem :: RINFSUP1:86
  seq is bounded implies (r <= lim_sup seq iff
    (for s st 0<s holds (for n ex k st seq.(n+k)>r-s)));

theorem :: RINFSUP1:87
  seq is bounded implies (lim_sup seq <= r iff
    (for s st 0<s holds (ex n st for k holds seq.(n+k)<r+s)));

theorem :: RINFSUP1:88
  seq is bounded implies (r = lim_sup seq iff
    (for s st 0<s holds ((for n holds ex k st seq.(n+k)>r-s) &
    (ex n st for k holds seq.(n+k)<r+s))));

theorem :: RINFSUP1:89
  seq is bounded implies lim_inf seq <= lim_sup seq;

theorem :: RINFSUP1:90
  seq is bounded & lim_sup seq = lim_inf seq iff seq is convergent;

theorem :: RINFSUP1:91
  seq is convergent implies lim seq = lim_sup seq & lim seq = lim_inf seq;

theorem :: RINFSUP1:92
  seq is bounded implies
    ((lim_sup -seq = - lim_inf seq) & (lim_inf -seq = - lim_sup seq));

theorem :: RINFSUP1:93
seq1 is bounded & seq2 is bounded & (for n holds seq1.n <= seq2.n) implies
 lim_sup seq1 <= lim_sup seq2 & lim_inf seq1 <= lim_inf seq2;

theorem :: RINFSUP1:94
seq1 is bounded & seq2 is bounded implies
 ((lim_inf seq1 + lim_inf seq2 <= lim_inf (seq1+seq2)) &
 (lim_inf (seq1+seq2) <= lim_inf seq1 + lim_sup seq2) &
 (lim_inf (seq1+seq2) <= lim_sup seq1 + lim_inf seq2) &
 (lim_inf seq1 + lim_sup seq2 <= lim_sup (seq1+seq2)) &
 (lim_sup seq1 + lim_inf seq2 <= lim_sup (seq1+seq2)) &
 (lim_sup (seq1+seq2) <= lim_sup seq1 + lim_sup seq2) &
 (seq1 is convergent or seq2 is convergent implies
   (lim_inf (seq1+seq2) = lim_inf seq1 + lim_inf seq2) &
   (lim_sup (seq1+seq2) = lim_sup seq1 + lim_sup seq2)));

theorem :: RINFSUP1:95
seq1 is bounded nonnegative &
seq2 is bounded nonnegative implies
 (lim_inf seq1) * (lim_inf seq2) <= lim_inf(seq1(#)seq2) &
 lim_sup(seq1(#)seq2) <= (lim_sup seq1) * (lim_sup seq2);
