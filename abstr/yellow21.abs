:: Categorial Background for Duality Theory
::  by Grzegorz Bancerek
::
:: Received August 1, 2001
:: Copyright (c) 2001 Association of Mizar Users

environ

 vocabulary ORDERS_1, FUNCT_1, RELAT_1, PROB_1, AMI_1, ORDERS_3, BOOLE,
      ALTCAT_1, YELLOW18, WAYBEL_0, BHSP_3, PBOOLE, FUNCT_2, PRE_TOPC, SEQM_3,
      FILTER_0, CAT_1, QC_LANG1, FUNCTOR0, WELLORD1, ALTCAT_3, CAT_3, ISOCAT_1,
      SUBSET_1, LATTICES, RELAT_2, ORDINAL1, TARSKI, WELLORD2, CARD_1,
      LATTICE3, ORDINAL2, COMPTS_1, QUANTAL1, WAYBEL_8, WAYBEL_3, REALSET1,
      TRIANG_1, ALTCAT_2, FUNCT_5, YELLOW21;
 notation TARSKI, XBOOLE_0, ZFMISC_1, SUBSET_1, RELAT_1, RELAT_2, RELSET_1,
      FUNCT_1, REALSET1, PARTFUN1, FUNCT_2, PROB_1, BINOP_1, ORDINAL1, CARD_1,
      AMI_1, TRIANG_1, STRUCT_0, ORDERS_1, LATTICE3, GRCAT_1, ORDERS_3,
      FUNCT_5, WELLORD1, WELLORD2, YELLOW_0, WAYBEL_0, YELLOW_1, YELLOW_2,
      WAYBEL_3, WAYBEL_8, PRE_TOPC, TOPS_2, ALTCAT_1, ALTCAT_2, FUNCTOR0,
      ALTCAT_3, YELLOW18;
 constructors GRCAT_1, TOPS_2, TRIANG_1, AMI_1, ORDERS_3, WAYBEL_1, WAYBEL_8,
      YELLOW_9, QUANTAL1, WAYBEL18, ALTCAT_3, YELLOW18, PROB_1;
 clusters SUBSET_1, RELSET_1, FUNCT_1, ORDINAL1, CARD_1, REALSET1, AMI_1,
      STRUCT_0, ORDERS_1, LATTICE3, WAYBEL_0, WAYBEL_3, TRIANG_1, WAYBEL_8,
      YELLOW_9, WAYBEL10, WAYBEL17, ALTCAT_2, FUNCTOR0, FUNCTOR2, ALTCAT_4,
      YELLOW18;
 requirements SUBSET, BOOLE;


begin :: Lattice-wise categories

reserve x, y for set;

definition
 let a be set;
 func a as_1-sorted -> 1-sorted equals
:: YELLOW21:def 1

  a if a is 1-sorted otherwise 1-sorted(#a#);
end;


definition
 let W be set;
 func POSETS W means
:: YELLOW21:def 2

  x in it iff x is strict Poset & the carrier of x as_1-sorted in W;
end;


registration
 let W be non empty set;
 cluster POSETS W -> non empty;
 coherence
  proof consider x being Element of W, y being Order of x;
      RelStr(#x,y#) as_1-sorted = RelStr(#x,y#) by Def1;
   hence thesis by Def2;
  end;
end;


registration
 let W be with_non-empty_elements set;
 cluster POSETS W -> POSet_set-like;
 coherence
  proof let a be set; assume A1: a in POSETS W;
then A2: a is strict Poset & the carrier of a as_1-sorted in W by Def2;
   reconsider a as Poset by A1,Def2;
      a = a as_1-sorted & the carrier of a as_1-sorted <> {}
     by A2,Def1,AMI_1:def 1;
   hence thesis by STRUCT_0:def 1;
  end;
end;


definition
 let C be category;
 attr C is carrier-underlaid means
:: YELLOW21:def 3

  for a being object of C
   ex S being 1-sorted st a = S & the_carrier_of a = the carrier of S;
end;


definition
 let C be category;
 attr C is lattice-wise means
:: YELLOW21:def 4

  C is semi-functional set-id-inheriting &
  (for a being object of C holds a is LATTICE) &
  (for a,b being object of C
   for A,B being LATTICE st A = a & B = b holds <^a,b^> c= MonFuncs(A, B));
end;


definition
 let C be category;
 attr C is with_complete_lattices means
:: YELLOW21:def 5

  C is lattice-wise &
  for a being object of C holds a is complete LATTICE;
end;


registration
 cluster with_complete_lattices -> lattice-wise category;
 coherence by Def5;
 cluster lattice-wise -> concrete carrier-underlaid category;
 coherence
  proof let C be category such that
A1: C is semi-functional set-id-inheriting and
A2: for a being object of C holds a is LATTICE and
A3: for a,b being object of C
     for A,B being LATTICE st A = a & B = b holds <^a,b^> c= MonFuncs(A, B);
   deffunc F(set) = the carrier of $1 as_1-sorted;
   consider F being ManySortedSet of C such that
A4: for i being Element of C holds F.i = F(i) from PRALG_2:sch 1;
      C is para-functional
     proof take F; let a,b be object of C;
      reconsider A = a, B = b as LATTICE by A2;
         a as_1-sorted = A & b as_1-sorted = B by Def1;
       then F.a = the carrier of A & F.b = the carrier of B by A4;
       then <^a,b^> c= MonFuncs(A, B) & MonFuncs(A, B) c= Funcs(F.a, F.b)
        by A3,ORDERS_3:11;
      hence thesis by XBOOLE_1:1;
     end;
   hence C is concrete by A1,YELLOW18:def 11;
   let a be object of C;
   reconsider S = a as LATTICE by A2;
   take S; thus a = S;
      idm a in <^a,a^> & <^a,a^> c= MonFuncs(S, S) by A3;
   then consider f being map of S,S such that
A5: idm a = f and
A6: f in Funcs(the carrier of S, the carrier of S) and f is monotone
     by ORDERS_3:def 6;
   thus the_carrier_of a = dom id the_carrier_of a by RELAT_1:71
     .= dom f by A1,A5,YELLOW18:def 10
     .= the carrier of S by A6,ALTCAT_1:6;
  end;
end;


scheme :: YELLOW21:sch 1
 local_CLCatEx
 { A() -> non empty set, P[set, set, set] }:
 ex C being strict category st C is lattice-wise &
  the carrier of C = A() &
  for a,b being LATTICE, f being monotone map of a,b
    holds f in (the Arrows of C).(a,b) iff a in A() & b in A() & P[a,b,f]
 provided
  for a being Element of A() holds a is LATTICE
 and
  for a,b,c being LATTICE st a in A() & b in A() & c in A()
     for f being map of a,b, g being map of b,c st
      P[a,b,f] & P[b,c,g] holds P[a,c,g*f]
 and
  for a being LATTICE st a in A() holds P[a,a,id a]
proof   set A = A();
    defpred P[set,set] means
     ex a,b being LATTICE
      st $1 = [a,b] &
      for f being set holds f in $2 iff f in MonFuncs(a, b) & P[a,b,f];
A4:  now let x; assume x in [:A,A:];
     then consider a,b being set such that
A5:   a in A & b in A & x = [a,b] by ZFMISC_1:def 2;
     reconsider a,b as LATTICE by A1,A5;
     defpred Q[set] means P[a,b,$1];
     consider y being set such that
A6:   for f being set holds f in y iff f in MonFuncs(a, b) & Q[f]
       from XBOOLE_0:sch 1;
     take y;
     thus P[x,y] by A5,A6;
    end;
   consider F being Function such that
      dom F = [:A,A:] and
A7: for x st x in [:A,A:] holds P[x, F.x] from ZFREFLE1:sch 1(A4);
A8: now let a,b be LATTICE; assume a in A & b in A;
      then [a,b] in [:A,A:] by ZFMISC_1:106;
     then consider a',b' being LATTICE such that
A9:   [a,b] = [a',b'] and
A10:   for f being set holds f in F.[a,b] iff
       f in MonFuncs(a', b') & P[a',b',f] by A7;
A11:   a = a' & b = b' by A9,ZFMISC_1:33;
     let f be set;
     hereby assume
A12:    f in F.[a,b]; hence P[a,b,f] by A10,A11;
      thus f in MonFuncs(a, b) by A10,A11,A12;
       then ex g being map of a, b st f = g &
         g in Funcs (the carrier of a, the carrier of b) & g is monotone
        by ORDERS_3:def 6;
      hence f in Funcs (the carrier of a, the carrier of b) &
            f is monotone map of a, b;
     end;
     assume f is monotone map of a, b;
     then reconsider g = f as monotone map of a, b;
        the carrier of b <> {} implies dom g = the carrier of a &
       rng g c= the carrier of b by FUNCT_2:def 1;
      then g in Funcs(the carrier of a, the carrier of b) by FUNCT_2:def 2;
      then f in MonFuncs(a, b) by ORDERS_3:def 6;
     hence P[a,b,f] implies f in F.[a,b] by A10,A11;
    end;
    defpred P[set,set] means
     for a being LATTICE st a = $1 holds $2 = the carrier of a;
A13:  now let x; assume x in A;
     then reconsider a = x as LATTICE by A1;
     reconsider b = the carrier of a as set;
     take b; thus P[x,b];
    end;
   consider D being Function such that
      dom D = A and
A14: for x st x in A holds P[x, D.x] from ZFREFLE1:sch 1(A13);
   deffunc D(set) = D.$1;
   deffunc B(set,set) = F.[$1,$2];
A15: for a,b,c being Element of A, f,g being Function
     st f in B(a,b) & g in B(b,c) holds g*f in B(a,c)
     proof let a,b,c be Element of A, f,g be Function such that
A16:    f in F.[a,b] & g in F.[b,c];
      reconsider x = a, y = b, z = c as LATTICE by A1;
      reconsider f' = f as monotone map of x,y by A8,A16;
      reconsider g' = g as monotone map of y,z by A8,A16;
         P[x,y,f'] & P[y,z,g'] by A8,A16;
       then P[a,c,g'*f'] by A2;
       then g'*f' is monotone map of x,z implies g'*f' in F.[x,z] by A8;
      hence thesis by YELLOW_2:14;
     end;
A17: for a,b being Element of A holds B(a,b) c= Funcs(D(a), D(b))
     proof let a,b be Element of A, f be set;
      reconsider x = a, y = b as LATTICE by A1;
      assume f in F.[a,b];
       then f in Funcs(the carrier of x, the carrier of y) by A8;
       then f in Funcs(D.a, the carrier of y) by A14;
      hence thesis by A14;
     end;
A18: now let a be Element of A;
     reconsider x = a as LATTICE by A1;
        D.a = the carrier of x by A14;
      then id (D.a) = id x & P[x,x,id x] by A3,GRCAT_1:def 11;
     hence id D(a) in B(a,a) by A8;
    end;
   consider C being concrete strict category such that
A19: the carrier of C = A and
     for a being object of C holds the_carrier_of a = D(a) and
A20: for a,b being object of C holds <^a,b^> = B(a,b)
     from YELLOW18:sch 16(A15,A17,A18);
   take C; thus C is semi-functional set-id-inheriting;
   thus for a being object of C holds a is LATTICE by A1,A19;
   thus for a,b being object of C
     for A,B being LATTICE st A = a & B = b holds <^a,b^> c= MonFuncs(A, B)
    proof let a, b be object of C;
     let A, B be LATTICE; assume
A21:   A = a & B = b;
     let f be set;
        <^a,b^> = F.[A,B] by A20,A21;
     hence thesis by A8,A19,A21;
    end;
   thus the carrier of C = A() by A19;
   let a,b be LATTICE, f be monotone map of a,b;
A22:  (the Arrows of C).[a,b] = (the Arrows of C).(a,b) by BINOP_1:def 1;
   hereby assume
A23:   f in (the Arrows of C).(a,b);
     then [a,b] in dom the Arrows of C by A22,FUNCT_1:def 4;
     then [a,b] in [:A,A:] by A19,PBOOLE:def 3;
    hence a in A & b in A by ZFMISC_1:106;
    then reconsider x = a, y = b as object of C by A19;
       (the Arrows of C).[a,b] = <^x,y^> by A22,ALTCAT_1:def 2
        .= F.[x,y] by A20;
    hence P[a,b,f] by A8,A19,A22,A23;
   end;
   assume
A24:  a in A() & b in A();
   then reconsider x = a, y = b as object of C by A19;
      (the Arrows of C).[a,b] = <^x,y^> by A22,ALTCAT_1:def 2
       .= F.[x,y] by A20;
   hence thesis by A8,A22,A24;
  end;

registration
 cluster strict with_complete_lattices category;
 existence
  proof consider L being complete LATTICE;
    defpred P[set,set,set] means $3 = $3;
A1: for a be Element of {L} holds a is LATTICE by TARSKI:def 1;
A2: for a,b,c being LATTICE st a in {L} & b in {L} & c in {L}
     for f being map of a,b, g being map of b,c st
      P[a,b,f] & P[b,c,g] holds P[a,c,g*f];
A3: for a being LATTICE st a in {L} holds P[a,a,id a];
   consider C being strict category such that
A4:  C is lattice-wise and
A5:  the carrier of C = {L} and
      for a,b being LATTICE, f being monotone map of a,b
     holds f in (the Arrows of C).(a,b) iff a in {L} & b in {L} & P[a,b,f]
      from local_CLCatEx(A1,A2,A3);
   take C; thus C is strict;
   thus C is lattice-wise by A4;
   let a be object of C;
   thus thesis by A5,TARSKI:def 1;
  end;
end;


theorem :: YELLOW21:1
   for C being carrier-underlaid category, a being object of C
  holds the_carrier_of a = the carrier of a as_1-sorted;

theorem :: YELLOW21:2
 for C being set-id-inheriting carrier-underlaid category
 for a being object of C holds idm a = id (a as_1-sorted);

notation
 let C be lattice-wise category;
 let a be object of C;
 synonym latt a for a as_1-sorted ;
end;
definition
 let C be lattice-wise category;
 let a be object of C;
 redefine func latt a -> LATTICE equals
:: YELLOW21:def 6

  a;
 end;


notation
 let C be with_complete_lattices category;
 let a be object of C;
 synonym latt a for a as_1-sorted ;
end;
definition
 let C be with_complete_lattices category;
 let a be object of C;
 redefine func latt a -> complete LATTICE;
 end;


definition
 let C be lattice-wise category;
 let a,b be object of C such that
  <^a,b^> <> {};
 let f be Morphism of a,b;
 func @f -> monotone map of latt a, latt b equals
:: YELLOW21:def 7

  f;
end;


theorem :: YELLOW21:3
 for C being lattice-wise category
 for a,b,c being object of C st <^a,b^> <> {} & <^b,c^> <> {}
 for f being Morphism of a,b, g being Morphism of b,c
  holds g*f = @g*@f;

scheme :: YELLOW21:sch 2
 CLCatEx1
 { A() -> non empty set, P[set, set, set] }:
 ex C being lattice-wise strict category st
  the carrier of C = A() &
  for a,b being object of C, f being monotone map of latt a, latt b
    holds f in <^a,b^> iff P[latt a, latt b, f]
 provided
  for a being Element of A() holds a is LATTICE
 and
  for a,b,c being LATTICE st a in A() & b in A() & c in A()
     for f being map of a,b, g being map of b,c st
      P[a,b,f] & P[b,c,g] holds P[a,c,g*f]
 and
  for a being LATTICE st a in A() holds P[a,a,id a]
proof   defpred p[set, set, set] means P[$1,$2,$3];
A4:  for a,b,c being LATTICE st a in A() & b in A() & c in A()
     for f being map of a,b, g being map of b,c st
      p[a,b,f] & p[b,c,g] holds p[a,c,g*f] by A2;
A5:  for a being LATTICE st a in A() holds p[a,a,id a] by A3;
   consider C being strict category such that
A6: C is lattice-wise and
A7: the carrier of C = A() and
A8: for a,b being LATTICE, f being monotone map of a,b
     holds f in (the Arrows of C).(a,b) iff a in A() & b in A() & p[a,b,f]
      from local_CLCatEx(A1,A4,A5);
   reconsider C as lattice-wise strict category by A6;
   take C; thus the carrier of C = A() by A7;
   let a,b be object of C;
      latt a = a & latt b = b & <^a,b^> = (the Arrows of C).(a,b)
     by Def6,ALTCAT_1:def 2;
   hence thesis by A7,A8;
  end;

scheme :: YELLOW21:sch 3
 CLCatEx2
 { A() -> non empty set, L[set], P[set, set, set] }:
 ex C being lattice-wise strict category st
  (for x being LATTICE holds
    x is object of C iff x is strict & L[x] & the carrier of x in A()) &
  for a,b being object of C, f being monotone map of latt a, latt b
    holds f in <^a,b^> iff P[latt a, latt b, f]
 provided
  ex x being strict LATTICE st L[x] & the carrier of x in A()
 and
  for a,b,c being LATTICE st L[a] & L[b] & L[c]
     for f being map of a,b, g being map of b,c st
      P[a,b,f] & P[b,c,g] holds P[a,c,g*f]
 and
  for a being LATTICE st L[a] holds P[a,a,id a]
proof
   defpred p[set] means $1 is LATTICE & L[$1];
   consider A being set such that
A4: x in A iff x in POSETS A() & p[x] from XBOOLE_0:sch 1;
   consider x being strict LATTICE such that
A5: L[x] & the carrier of x in A() by A1;
      x as_1-sorted = x by Def1;
    then x in POSETS A() by A5,Def2;
   then reconsider A as non empty set by A4,A5;
   defpred p[set, set, set] means P[$1,$2,$3];
A6: for a being Element of A holds a is LATTICE by A4;
A7: now let a,b,c be LATTICE; assume a in A & b in A & c in A;
      then L[a] & L[b] & L[c] by A4;
     hence for f being map of a,b, g being map of b,c st
       p[a,b,f] & p[b,c,g] holds p[a,c,g*f] by A2;
    end;
A8: now let a be LATTICE; assume a in A;
      then L[a] by A4;
     hence p[a,a,id a] by A3;
    end;
   consider C being lattice-wise strict category such that
A9: the carrier of C = A and
A10: for a,b being object of C, f being monotone map of latt a, latt b
      holds f in <^a,b^> iff p[latt a, latt b, f]
       from CLCatEx1(A6,A7,A8);
   take C;
   hereby let x be LATTICE;
       x as_1-sorted = x by Def1;
     then x in POSETS A() iff x is strict Poset & the carrier of x in A()
      by Def2;
     then x in A iff x is strict & L[x] & the carrier of x in A() by A4;
    hence x is object of C iff x is strict & L[x] & the carrier of x in A()
      by A9;
   end;
   thus thesis by A10;
  end;

scheme :: YELLOW21:sch 4
 CLCatUniq1
 { A() -> non empty set, P[set, set, set] }:
 for C1, C2 being lattice-wise category st
  the carrier of C1 = A() &
  (for a,b being object of C1, f being monotone map of latt a, latt b
     holds f in <^a,b^> iff P[a,b,f]) &
  the carrier of C2 = A() &
  (for a,b being object of C2, f being monotone map of latt a, latt b
     holds f in <^a,b^> iff P[a,b,f])
 holds the AltCatStr of C1 = the AltCatStr of C2
proof   let A1, A2 be lattice-wise category;
    deffunc B(set,set) = (the Arrows of A1).($1,$2);
A1: for C1, C2 being para-functional semi-functional category
    st the carrier of C1 = A() &
       (for a,b being object of C1 holds <^a,b^> = B(a,b)) &
       the carrier of C2 = A() &
       (for a,b being object of C2 holds <^a,b^> = B(a,b))
    holds the AltCatStr of C1 = the AltCatStr of C2
     from YELLOW18:sch 19;
   assume that
A2: the carrier of A1 = A() and
A3: for a,b being object of A1, f being monotone map of latt a, latt b
     holds f in <^a,b^> iff P[a,b,f] and
A4: the carrier of A2 = A() and
A5: for a,b being object of A2, f being monotone map of latt a, latt b
     holds f in <^a,b^> iff P[a,b,f];
A6: for a,b being object of A1 holds <^a,b^> = (the Arrows of A1).(a,b)
     by ALTCAT_1:def 2;
      now let a,b be object of A2;
     reconsider a' = a, b' = b as object of A1 by A2,A4;
A7:   latt a = a & latt b = b & latt a' = a & latt b' = b by Def6;
A8:   <^a',b'^> = (the Arrows of A1).(a',b') by ALTCAT_1:def 2;
     thus <^a,b^> = (the Arrows of A1).(a,b)
       proof
        hereby let x; assume
A9:       x in <^a,b^>;
         then reconsider f = x as Morphism of a,b;
A10:       @f = f by A9,Def7;
          then P[latt a',latt b',@f] & @f is map of latt a',latt b'
           by A5,A7,A9;
         hence x in (the Arrows of A1).(a,b) by A3,A7,A8,A10;
        end;
        let x; assume
A11:      x in (the Arrows of A1).(a,b);
        then reconsider f = x as Morphism of a',b' by A8;
           @f = f by A8,A11,Def7;
         then P[latt a,latt b,@f] & f = @f by A3,A7,A8,A11;
        hence x in <^a,b^> by A5,A7;
       end;
    end;
   hence thesis by A1,A2,A4,A6;
  end;

scheme :: YELLOW21:sch 5
 CLCatUniq2
 { A() -> non empty set, L[set], P[set, set, set] }:
 for C1, C2 being lattice-wise category st
  (for x being LATTICE holds
    x is object of C1 iff x is strict & L[x] & the carrier of x in A()) &
  (for a,b being object of C1, f being monotone map of latt a, latt b
     holds f in <^a,b^> iff P[a,b,f]) &
  (for x being LATTICE holds
    x is object of C2 iff x is strict & L[x] & the carrier of x in A()) &
  (for a,b being object of C2, f being monotone map of latt a, latt b
     holds f in <^a,b^> iff P[a,b,f])
 holds the AltCatStr of C1 = the AltCatStr of C2
proof   let A1, A2 be lattice-wise category;
    defpred p[set, set, set] means P[$1,$2,$3];
A1: for C1, C2 being lattice-wise category st
     the carrier of C1 = the carrier of A1 &
     (for a,b being object of C1, f being monotone map of latt a, latt b
        holds f in <^a,b^> iff p[a,b,f]) &
     the carrier of C2 = the carrier of A1 &
     (for a,b being object of C2, f being monotone map of latt a, latt b
        holds f in <^a,b^> iff p[a,b,f])
    holds the AltCatStr of C1 = the AltCatStr of C2 from CLCatUniq1;
   assume that
A2: for x being LATTICE holds
     x is object of A1 iff x is strict & L[x] & the carrier of x in A() and
A3: for a,b being object of A1, f being monotone map of latt a, latt b
     holds f in <^a,b^> iff P[a,b,f] and
A4: for x being LATTICE holds
     x is object of A2 iff x is strict & L[x] & the carrier of x in A();
      the carrier of A2 = the carrier of A1
     proof
      hereby let x; assume x in the carrier of A2;
then A5:     x is object of A2;
then A6:     x is LATTICE by Def4;
then A7:     x as_1-sorted = x by Def1;
        then x is strict LATTICE & L[x] & the carrier of x as_1-sorted in A()
         by A4,A5,A6;
        then x is object of A1 by A2,A7;
       hence x in the carrier of A1;
      end;
      let x; assume x in the carrier of A1;
then A8:    x is object of A1;
then A9:    x is LATTICE by Def4;
then A10:   x as_1-sorted = x by Def1;
       then x is strict LATTICE & L[x] & the carrier of x as_1-sorted in A()
        by A2,A8,A9;
       then x is object of A2 by A4,A10;
      hence x in the carrier of A2;
     end;
   hence thesis by A1,A3;
  end;

scheme :: YELLOW21:sch 6
 CLCovariantFunctorEx
 { P, Q[set, set, set],
   A,B() -> lattice-wise category,
   O(set) -> LATTICE,
   F(set,set,set) -> Function }:
 ex F being covariant strict Functor of A(),B() st
  (for a being object of A() holds F.a = O(latt a)) &
  for a,b being object of A() st <^a,b^> <> {}
   for f being Morphism of a,b holds F.f = F(latt a, latt b, @f)
 provided
  for a,b being LATTICE, f being map of a,b
    holds f in (the Arrows of A()).(a,b) iff
     a in the carrier of A() & b in the carrier of A() & P[a,b,f]
 and
  for a,b being LATTICE, f being map of a,b
    holds f in (the Arrows of B()).(a,b) iff
     a in the carrier of B() & b in the carrier of B() & Q[a,b,f]
 and
  for a being LATTICE st a in the carrier of A()
    holds O(a) in the carrier of B()
 and
  for a,b being LATTICE, f being map of a,b st P[a,b,f]
    holds F(a,b,f) is map of O(a),O(b) & Q[O(a),O(b),F(a,b,f)]
 and
  for a being LATTICE st a in the carrier of A() holds F(a,a,id a) = id O(a)
 and
  for a,b,c being LATTICE, f being map of a,b, g being map of b,c
    st P[a,b,f] & P[b,c,g]
    holds F(a,c,g*f) = F(b,c,g)*F(a,b,f)
proof
    deffunc o(set) = O($1);
    deffunc f(set,set,set) = F($1,$2,$3);
A7: for a being object of A() holds o(a) is object of B()
     proof let a be object of A();
         a is LATTICE & a in the carrier of A() by Def4;
       then O(a) in the carrier of B() by A3;
      hence thesis;
     end;
A8: for a,b being object of A() st <^a,b^> <> {}
     for f being Morphism of a,b
      holds f(a,b,f) in (the Arrows of B()).(o(a), o(b))
     proof let a,b be object of A() such that
A9:    <^a,b^> <> {};
      let f be Morphism of a,b;
A10:    f = @f & a = latt a & b = latt b by A9,Def6,Def7;
         <^a,b^> = (the Arrows of A()).(a,b) by ALTCAT_1:def 2;
       then a in the carrier of A() & b in the carrier of A() & P[a,b,f]
        by A1,A9,A10;
       then O(a) in the carrier of B() & O(b) in the carrier of B() &
       F(a,b,f) is map of O(a),O(b) & Q[O(a),O(b),F(a,b,f)] by A3,A4,A10;
      hence thesis by A2;
     end;
A11: now let a,b,c be object of A() such that
A12:   <^a,b^> <> {} & <^b,c^> <> {};
     let f be Morphism of a,b, g be Morphism of b,c;
     let a',b',c' be object of B() such that
A13:   a' = o(a) & b' = o(b) & c' = o(c);
     let f' be Morphism of a',b', g' be Morphism of b',c' such that
A14:   f' = f(a,b,f) & g' = f(b,c,g);
A15:   latt a = a & latt b = b & latt c = c by Def6;
A16:   @f = f & @g = g by A12,Def7;
        latt a' = a' & latt b' = b' & latt c' = c' &
      F(a,b,f) in (the Arrows of B()).(O(a), O(b)) &
      F(b,c,g) in (the Arrows of B()).(O(b), O(c)) by A8,A12,Def6;
then A17:   F(a,b,f) in <^a',b'^> & F(b,c,g) in <^b',c'^> by A13,ALTCAT_1:def 2
;
then A18:   @f' = f' & @g' = g' by Def7;
        <^a,b^> = (the Arrows of A()).(a,b) &
      <^b,c^> = (the Arrows of A()).(b,c) by ALTCAT_1:def 2;
      then P[a,b,f] & P[b,c,g] by A1,A12,A15,A16;
      then F(a,c,@g*@f) = F(b,c,g)*F(a,b,f) by A6,A15,A16 .= g'*f' by A14,A17,
A18,Th3;
     hence f(a,c,g*f) = g'*f' by A12,Th3;
    end;
A19: now let a be object of A(), a' be object of B(); assume a' = o(a);
      then a in the carrier of A() &
      latt a' = O(a) & latt a = a & idm a = id latt a by Def6,Th2;
     hence f(a,a,idm a) = id latt a' by A5 .= idm a' by Th2;
    end;
   consider F being covariant strict Functor of A(),B() such that
A20: for a being object of A() holds F.a = o(a) and
A21: for a,b being object of A() st <^a,b^> <> {}
     for f being Morphism of a,b holds F.f = f(a, b, f)
      from YELLOW18:sch 8(A7,A8,A11,A19);
   take F;
   hereby let a be object of A(); a = latt a by Def6;
    hence F.a = O(latt a) by A20;
   end;
   let a,b be object of A() such that
A22: <^a, b^> <> {};
   let f be Morphism of a,b;
      a = latt a & b = latt b & f = @f by A22,Def6,Def7;
   hence thesis by A21,A22;
  end;

scheme :: YELLOW21:sch 7
 CLContravariantFunctorEx
 { P, Q[set, set, set],
   A,B() -> lattice-wise category,
   O(set) -> LATTICE,
   F(set,set,set) -> Function }:
 ex F being contravariant strict Functor of A(),B() st
  (for a being object of A() holds F.a = O(latt a)) &
  for a,b being object of A() st <^a,b^> <> {}
   for f being Morphism of a,b holds F.f = F(latt a, latt b, @f)
 provided
  for a,b being LATTICE, f being map of a,b
    holds f in (the Arrows of A()).(a,b) iff
     a in the carrier of A() & b in the carrier of A() & P[a,b,f]
 and
  for a,b being LATTICE, f being map of a,b
    holds f in (the Arrows of B()).(a,b) iff
     a in the carrier of B() & b in the carrier of B() & Q[a,b,f]
 and
  for a being LATTICE st a in the carrier of A()
    holds O(a) in the carrier of B()
 and
  for a,b being LATTICE, f being map of a,b st P[a,b,f]
    holds F(a,b,f) is map of O(b),O(a) & Q[O(b),O(a),F(a,b,f)]
 and
  for a being LATTICE st a in the carrier of A() holds F(a,a,id a) = id O(a)
 and
  for a,b,c being LATTICE, f being map of a,b, g being map of b,c
    st P[a,b,f] & P[b,c,g]
    holds F(a,c,g*f) = F(a,b,f)*F(b,c,g)
proof
    deffunc o(set) = O($1);
    deffunc f(set,set,set) = F($1,$2,$3);
A7: for a being object of A() holds o(a) is object of B()
     proof let a be object of A();
         a is LATTICE & a in the carrier of A() by Def4;
       then O(a) in the carrier of B() by A3;
      hence thesis;
     end;
A8: for a,b being object of A() st <^a,b^> <> {}
     for f being Morphism of a,b
      holds f(a,b,f) in (the Arrows of B()).(o(b), o(a))
     proof let a,b be object of A() such that
A9:    <^a,b^> <> {};
      let f be Morphism of a,b;
A10:    f = @f & a = latt a & b = latt b by A9,Def6,Def7;
         <^a,b^> = (the Arrows of A()).(a,b) by ALTCAT_1:def 2;
       then a in the carrier of A() & b in the carrier of A() & P[a,b,f]
        by A1,A9,A10;
       then O(a) in the carrier of B() & O(b) in the carrier of B() &
       F(a,b,f) is map of O(b),O(a) & Q[O(b),O(a),F(a,b,f)] by A3,A4,A10;
      hence thesis by A2;
     end;
A11: now let a,b,c be object of A() such that
A12:   <^a,b^> <> {} & <^b,c^> <> {};
     let f be Morphism of a,b, g be Morphism of b,c;
     let a',b',c' be object of B() such that
A13:   a' = o(a) & b' = o(b) & c' = o(c);
     let f' be Morphism of b',a', g' be Morphism of c',b' such that
A14:   f' = f(a,b,f) & g' = f(b,c,g);
A15:   latt a = a & latt b = b & latt c = c by Def6;
A16:   @f = f & @g = g by A12,Def7;
        latt a' = a' & latt b' = b' & latt c' = c' &
      F(a,b,f) in (the Arrows of B()).(O(b), O(a)) &
      F(b,c,g) in (the Arrows of B()).(O(c), O(b)) by A8,A12,Def6;
then A17:   F(a,b,f) in <^b',a'^> & F(b,c,g) in <^c',b'^> by A13,ALTCAT_1:def 2
;
then A18:   @f' = f' & @g' = g' by Def7;
        <^a,b^> = (the Arrows of A()).(a,b) &
      <^b,c^> = (the Arrows of A()).(b,c) by ALTCAT_1:def 2;
      then P[a,b,f] & P[b,c,g] by A1,A12,A15,A16;
      then F(a,c,@g*@f) = F(a,b,f)*F(b,c,g) by A6,A15,A16 .= f'*g' by A14,A17,
A18,Th3;
     hence f(a,c,g*f) = f'*g' by A12,Th3;
    end;
A19: now let a be object of A(), a' be object of B(); assume a' = o(a);
      then a in the carrier of A() &
      latt a' = O(a) & latt a = a & idm a = id latt a by Def6,Th2;
     hence f(a,a,idm a) = id latt a' by A5 .= idm a' by Th2;
    end;
   consider F being contravariant strict Functor of A(),B() such that
A20: for a being object of A() holds F.a = o(a) and
A21: for a,b being object of A() st <^a,b^> <> {}
     for f being Morphism of a,b holds F.f = f(a, b, f)
      from YELLOW18:sch 9(A7,A8,A11,A19);
   take F;
   hereby let a be object of A(); a = latt a by Def6;
    hence F.a = O(latt a) by A20;
   end;
   let a,b be object of A() such that
A22: <^a, b^> <> {};
   let f be Morphism of a,b;
      a = latt a & b = latt b & f = @f by A22,Def6,Def7;
   hence thesis by A21,A22;
  end;

scheme :: YELLOW21:sch 8
 CLCatIsomorphism
 { P, Q[set, set, set],
   A,B() -> lattice-wise category,
   O(set) -> LATTICE,
   F(set,set,set) -> Function }:
  A(), B() are_isomorphic
 provided
  for a,b being LATTICE, f being map of a,b
    holds f in (the Arrows of A()).(a,b) iff
     a in the carrier of A() & b in the carrier of A() & P[a,b,f]
 and
  for a,b being LATTICE, f being map of a,b
    holds f in (the Arrows of B()).(a,b) iff
     a in the carrier of B() & b in the carrier of B() & Q[a,b,f]
 and
  ex F being covariant Functor of A(),B() st
    (for a being object of A() holds F.a = O(a)) &
    for a,b being object of A() st <^a,b^> <> {}
     for f being Morphism of a,b holds F.f = F(a,b,f)
 and
  for a,b being LATTICE st a in the carrier of A() & b in the carrier of A()
    holds O(a) = O(b) implies a = b
 and
  for a,b being LATTICE
   for f,g being map of a,b st P[a,b,f] & P[a,b,g]
    holds F(a,b,f) = F(a,b,g) implies f = g
 and
  for a,b being LATTICE, f being map of a,b st Q[a,b,f]
    ex c,d being LATTICE, g being map of c,d
     st c in the carrier of A() & d in the carrier of A() & P[c,d,g] &
        a = O(c) & b = O(d) & f = F(c,d,g)
proof
    deffunc o(set) = O($1);
    deffunc f(set,set,set) = F($1,$2,$3);
A7:  ex F being covariant Functor of A(),B() st
    (for a being object of A() holds F.a = o(a)) &
    for a,b being object of A() st <^a,b^> <> {}
     for f being Morphism of a,b holds F.f = f(a,b,f) by A3;
A8: for a,b being object of A() st o(a) = o(b) holds a = b
     proof let a,b be object of A();
         a in the carrier of A() & a = latt a & b = latt b by Def6;
      hence thesis by A4;
     end;
A9: for a,b being object of A() st <^a,b^> <> {}
     for f,g being Morphism of a,b st f(a,b,f) = f(a,b,g)
      holds f = g
     proof let a, b be object of A() such that
A10:    <^a,b^> <> {};
      let f,g be Morphism of a,b;
A11:    latt a = a & latt b = b & @f = f & @g = g by A10,Def6,Def7;
         <^a,b^> = (the Arrows of A()).(a,b) by ALTCAT_1:def 2;
       then P[latt a, latt b, @f] & P[latt a, latt b, @g] by A1,A10,A11;
      hence thesis by A5,A11;
     end;
A12: now let a,b be object of B() such that
A13:   <^a,b^> <> {};
     let f be Morphism of a,b;
A14:   latt a = a & latt b = b & @f = f by A13,Def6,Def7;
        <^a,b^> = (the Arrows of B()).(a,b) by ALTCAT_1:def 2;
      then Q[latt a, latt b, @f] by A2,A13,A14;
     then consider c,d being LATTICE, g being map of c,d such that
A15:   c in the carrier of A() & d in the carrier of A() & P[c,d,g] &
      latt a = O(c) & latt b = O(d) & @f = F(c,d,g) by A6;
     reconsider c' = c, d' = d as object of A() by A15;
        <^c',d'^> = (the Arrows of A()).(c,d) by ALTCAT_1:def 2;
     then g in <^c',d'^> by A1,A15;
     hence ex c,d being object of A(), g being Morphism of c,d
        st a = o(c) & b = o(d) & <^c,d^> <> {} & f = f(c,d,g) by A14,A15;
    end;
   thus thesis from YELLOW18:sch 11(A7,A8,A9,A12);
  end;

scheme :: YELLOW21:sch 9
 CLCatAntiIsomorphism
 { P, Q[set, set, set],
   A,B() -> lattice-wise category,
   O(set) -> LATTICE,
   F(set,set,set) -> Function }:
  A(), B() are_anti-isomorphic
 provided
  for a,b being LATTICE, f being map of a,b
    holds f in (the Arrows of A()).(a,b) iff
     a in the carrier of A() & b in the carrier of A() & P[a,b,f]
 and
  for a,b being LATTICE, f being map of a,b
    holds f in (the Arrows of B()).(a,b) iff
     a in the carrier of B() & b in the carrier of B() & Q[a,b,f]
 and
  ex F being contravariant Functor of A(),B() st
    (for a being object of A() holds F.a = O(a)) &
    for a,b being object of A() st <^a,b^> <> {}
     for f being Morphism of a,b holds F.f = F(a,b,f)
 and
  for a,b being LATTICE st a in the carrier of A() & b in the carrier of A()
    holds O(a) = O(b) implies a = b
 and
  for a,b being LATTICE, f,g being map of a,b st F(a,b,f) = F(a,b,g)
    holds f = g
 and
  for a,b being LATTICE, f being map of a,b st Q[a,b,f]
    ex c,d being LATTICE, g being map of c,d
     st c in the carrier of A() & d in the carrier of A() & P[c,d,g] &
        b = O(c) & a = O(d) & f = F(c,d,g)
proof
    deffunc o(set) = O($1);
    deffunc f(set,set,set) = F($1,$2,$3);
A7:  ex F being contravariant Functor of A(),B() st
    (for a being object of A() holds F.a = o(a)) &
    for a,b being object of A() st <^a,b^> <> {}
     for f being Morphism of a,b holds F.f = f(a,b,f) by A3;
A8: for a,b being object of A() st o(a) = o(b) holds a = b
     proof let a,b be object of A();
         a in the carrier of A() & a = latt a & b = latt b by Def6;
      hence thesis by A4;
     end;
A9: for a,b being object of A() st <^a,b^> <> {}
     for f,g being Morphism of a,b st f(a,b,f) = f(a,b,g)
      holds f = g
     proof let a, b be object of A() such that
A10:    <^a,b^> <> {};
      let f,g be Morphism of a,b;
         latt a = a & latt b = b & @f = f & @g = g by A10,Def6,Def7;
      hence thesis by A5;
     end;
A11: now let a,b be object of B() such that
A12:   <^a,b^> <> {};
     let f be Morphism of a,b;
A13:   latt a = a & latt b = b & @f = f by A12,Def6,Def7;
        <^a,b^> = (the Arrows of B()).(a,b) by ALTCAT_1:def 2;
      then Q[latt a, latt b, @f] by A2,A12,A13;
     then consider c,d being LATTICE, g being map of c,d such that
A14:   c in the carrier of A() & d in the carrier of A() & P[c,d,g] &
      latt b = O(c) & latt a = O(d) & @f = F(c,d,g) by A6;
     reconsider c' = c, d' = d as object of A() by A14;
        <^c',d'^> = (the Arrows of A()).(c,d) by ALTCAT_1:def 2;
     then g in <^c',d'^> by A1,A14;
     hence ex c,d being object of A(), g being Morphism of c,d
        st b = o(c) & a = o(d) & <^c,d^> <> {} & f = f(c,d,g) by A13,A14;
    end;
   thus thesis from YELLOW18:sch 13(A7,A8,A9,A11);
  end;

begin :: Equivalence of lattice-wise categories

definition
 let C be lattice-wise category;
 attr C is with_all_isomorphisms means
:: YELLOW21:def 8

  for a,b being object of C, f being map of latt a, latt b
   st f is isomorphic
   holds f in <^a,b^>;
end;


registration
 cluster with_all_isomorphisms (strict lattice-wise category);
 existence
  proof consider L being LATTICE;
    defpred P[set,set,set] means $3 = $3;
A1: for a be Element of {L} holds a is LATTICE by TARSKI:def 1;
A2: for a,b,c being LATTICE st a in {L} & b in {L} & c in {L}
     for f being map of a,b, g being map of b,c st
      P[a,b,f] & P[b,c,g] holds P[a,c,g*f];
A3: for a being LATTICE st a in {L} holds P[a,a,id a];
   consider C being strict category such that
A4: C is lattice-wise and
A5: the carrier of C = {L} and
A6: for a,b being LATTICE, f being monotone map of a,b
     holds f in (the Arrows of C).(a,b) iff a in {L} & b in {L} & P[a,b,f]
      from local_CLCatEx(A1,A2,A3);
   reconsider C as strict lattice-wise category by A4;
   take C; let a,b be object of C, f be map of latt a, latt b;
A7: latt a = a & latt b = b by Def6;
    then (f is isomorphic implies f is monotone) &
    (the Arrows of C).(latt a, latt b) = <^a,b^>
     by ALTCAT_1:def 2,YELLOW16:17;
   hence thesis by A5,A6,A7;
  end;
end;


theorem :: YELLOW21:4
   for C being with_all_isomorphisms (lattice-wise category)
 for a,b being object of C
 for f being Morphism of a,b
  st @f is isomorphic
  holds f is iso;

theorem :: YELLOW21:5
   for C being lattice-wise category
 for a,b being object of C st <^a,b^> <> {} & <^b,a^> <> {}
 for f being Morphism of a,b
  st f is iso
  holds @f is isomorphic;

scheme :: YELLOW21:sch 10
 CLCatEquivalence
 { P, Q[set, set, set],
   A,B() -> lattice-wise category,
   O1, O2(set) -> LATTICE,
   F1, F2(set,set,set) -> Function,
   A, B(set) -> Function }:
  A(), B() are_equivalent
 provided
  for a,b being object of A(), f being monotone map of latt a, latt b
    holds f in <^a,b^> iff P[latt a, latt b, f]
 and
  for a,b being object of B(), f being monotone map of latt a, latt b
    holds f in <^a,b^> iff Q[latt a, latt b, f]
 and
  ex F being covariant Functor of A(),B() st
    (for a being object of A() holds F.a = O1(a)) &
    for a,b being object of A() st <^a,b^> <> {}
    for f being Morphism of a,b holds F.f = F1(a,b,f)
 and
  ex G being covariant Functor of B(),A() st
    (for a being object of B() holds G.a = O2(a)) &
    for a,b being object of B() st <^a,b^> <> {}
    for f being Morphism of a,b holds G.f = F2(a,b,f)
 and
  for a being LATTICE st a in the carrier of A()
    ex f being monotone map of O2(O1(a)), a
     st f = A(a) & f is isomorphic & P[O2(O1(a)), a, f] & P[a, O2(O1(a)), f"]
 and
  for a being LATTICE st a in the carrier of B()
    ex f being monotone map of a, O1(O2(a))
     st f = B(a) & f is isomorphic & Q[a, O1(O2(a)), f] & Q[O1(O2(a)), a, f"]
 and
  for a,b being object of A() st <^a,b^> <> {}
   for f being Morphism of a,b
    holds A(b)*F2(O1(a),O1(b),F1(a,b,f)) = @f*A(a)
 and
  for a,b being object of B() st <^a,b^> <> {}
   for f being Morphism of a,b
    holds F1(O2(a),O2(b),F2(a,b,f))*B(a) = B(b)*@f
proof
    deffunc o1(set) = O1($1);
    deffunc f1(set,set,set) = F1($1,$2,$3);
    deffunc o2(set) = O2($1);
    deffunc f2(set,set,set) = F2($1,$2,$3);
    deffunc a(set) = A($1);
    deffunc b(set) = B($1);
A9:  ex F being covariant Functor of A(),B() st
    (for a being object of A() holds F.a = o1(a)) &
    for a,b being object of A() st <^a,b^> <> {}
    for f being Morphism of a,b holds F.f = f1(a,b,f) by A3;
A10:  ex G being covariant Functor of B(),A() st
    (for a being object of B() holds G.a = o2(a)) &
    for a,b being object of B() st <^a,b^> <> {}
    for f being Morphism of a,b holds G.f = f2(a,b,f) by A4;
A11: for a, b being object of A() st a = o2(o1(b))
     holds a(b) in <^a, b^> & a(b)" in <^b,a^> & a(b) is one-to-one
     proof let a, b be object of A() such that
A12:    a = O2(O1(b));
A13:    latt a = a & latt b = b by Def6;
      then consider f being monotone map of O2(O1(b)), latt b such that
A14:    f = A(b) & f is isomorphic & P[O2(O1(b)), latt b, f] &
       P[latt b, O2(O1(b)), f"] by A5;
      thus A(b) in <^a, b^> by A1,A12,A13,A14;
         the carrier of latt b = [#]latt b by PRE_TOPC:12;
then f is one-to-one & rng f = [#]latt b by A14,WAYBEL_0:66;
then A15:    A(b)" = f" by A14,TOPS_2:def 4;
       then ex g being map of latt b, O2(O1(b)) st g = f" & g is monotone
        by A14,WAYBEL_0:def 38;
      hence A(b)" in <^b,a^> by A1,A12,A13,A14,A15;
      thus thesis by A14,WAYBEL_0:66;
     end;
A16: for a, b being object of B() st b = o1(o2(a))
     holds b(a) in <^a, b^> & b(a)" in <^b,a^> & b(a) is one-to-one
     proof let a, b be object of B() such that
A17:    b = O1(O2(a));
A18:    latt a = a & latt b = b by Def6;
      then consider f being monotone map of latt a, O1(O2(a)) such that
A19:    f = B(a) & f is isomorphic & Q[latt a, O1(O2(a)), f] &
       Q[O1(O2(a)), latt a, f"] by A6;
      thus B(a) in <^a, b^> by A2,A17,A18,A19;
         the carrier of latt b = [#]latt b by PRE_TOPC:12;
then f is one-to-one & rng f = [#]O1(O2(a)) by A17,A18,A19,WAYBEL_0:66;
then A20:    B(a)" = f" by A19,TOPS_2:def 4;
       then ex g being map of O1(O2(a)), latt a st g = f" & g is monotone
        by A19,WAYBEL_0:def 38;
      hence B(a)" in <^b,a^> by A2,A17,A18,A19,A20;
      thus thesis by A19,WAYBEL_0:66;
     end;
A21: for a,b being object of A() st <^a,b^> <> {}
     for f being Morphism of a,b
      holds a(b)*f2(o1(a),o1(b),f1(a,b,f)) = f*a(a)
     proof let a,b be object of A() such that
A22:    <^a,b^> <> {};
      let f be Morphism of a,b; @f = f by A22,Def7;
      hence thesis by A7,A22;
     end;
A23: for a,b being object of B() st <^a,b^> <> {}
     for f being Morphism of a,b
      holds f1(o2(a),o2(b),f2(a,b,f))*b(a) = b(b)*f
     proof let a,b be object of B() such that
A24:    <^a,b^> <> {};
      let f be Morphism of a,b; @f = f by A24,Def7;
      hence thesis by A8,A24;
     end;
   thus thesis from YELLOW18:sch 22(A9,A10, A11,A16,A21,A23);
  end;

begin :: UPS category

definition
 let R be Relation;
 attr R is upper-bounded means
:: YELLOW21:def 9

  ex x st for y st y in field R holds [y,x] in R;
end;

registration
 cluster well-ordering ->
     reflexive transitive antisymmetric connected well_founded Relation;
 coherence by WELLORD1:def 4;
end;


registration
 cluster well-ordering Relation;
 existence
  proof consider r being Relation such that
A1: r well_orders 5 by WELLORD2:26;
   take r|_2 5; thus thesis by A1,WELLORD2:25;
  end;
end;


theorem :: YELLOW21:6
 for f being one-to-one Function, R being Relation
  holds [x,y] in f*R*(f") iff x in dom f & y in dom f & [f.x, f.y] in R;

registration
 let f be one-to-one Function;
 let R be reflexive Relation;
 cluster f*R*(f") -> reflexive;
 coherence
  proof let x; assume x in field (f*R*(f"));
then A1: x in dom (f*R*(f")) \/ rng (f*R*(f")) by RELAT_1:def 6;
A2: R is_reflexive_in field R by RELAT_2:def 9;
   per cases by A1,XBOOLE_0:def 2;
   suppose x in dom (f*R*(f"));
    then consider y being set such that
A3:  [x,y] in (f*R*(f")) by RELAT_1:def 4;
A4:  x in dom f & [f.x, f.y] in R by A3,Th6;
     then f.x in field R by RELAT_1:30;
     then [f.x, f.x] in R by A2,RELAT_2:def 1;
    hence thesis by A4,Th6;
   end;
   suppose x in rng (f*R*(f"));
    then consider y being set such that
A5:  [y,x] in (f*R*(f")) by RELAT_1:def 5;
A6:  x in dom f & [f.y, f.x] in R by A5,Th6;
     then f.x in field R by RELAT_1:30;
     then [f.x, f.x] in R by A2,RELAT_2:def 1;
    hence thesis by A6,Th6;
  end;
  end;
end;


registration
 let f be one-to-one Function;
 let R be antisymmetric Relation;
 cluster f*R*(f") -> antisymmetric;
 coherence
  proof let x,y be set; assume x in field (f*R*(f")) & y in field (f*R*(f"));
   assume [x,y] in f*R*(f") & [y,x] in f*R*(f");
then A1: x in dom f & y in dom f & [f.x, f.y] in R & [f.y, f.x] in R by Th6;
    then f.x in field R & f.y in field R & R is_antisymmetric_in field R
     by RELAT_1:30,RELAT_2:def 12;
    then f.x = f.y by A1,RELAT_2:def 4;
   hence thesis by A1,FUNCT_1:def 8;
  end;
end;


registration
 let f be one-to-one Function;
 let R be transitive Relation;
 cluster f*R*(f") -> transitive;
 coherence
  proof let x,y,z be set; assume
      x in field (f*R*(f")) & y in field (f*R*(f")) & z in field (f*R*(f"));
   assume [x,y] in f*R*(f") & [y,z] in f*R*(f");
then A1: x in dom f & z in dom f & [f.x, f.y] in R & [f.y, f.z] in R by Th6;
    then f.x in field R & f.y in field R & f.z in field R &
    R is_transitive_in field R by RELAT_1:30,RELAT_2:def 16;
    then [f.x, f.z] in R by A1,RELAT_2:def 8;
   hence thesis by A1,Th6;
  end;
end;


theorem :: YELLOW21:7
 for X being set, A being Ordinal st X,A are_equipotent
  ex R being Order of X st R well_orders X & order_type_of R = A;

registration
 let X be non empty set;
 cluster upper-bounded well-ordering Order of X;
 existence
  proof consider x being Element of X;
A1: X\{x},Card (X\{x}) are_equipotent by CARD_1:def 5;
A2: {x},{Card (X\{x})} are_equipotent by CARD_1:48;
A3: {x} misses (X\{x}) by XBOOLE_1:79;
      not Card (X\{x}) in Card (X\{x});
then A4: {Card (X\{x})} misses Card (X\{x}) by ZFMISC_1:56;
A5: succ Card (X\{x}) = Card (X\{x}) \/ {Card (X\{x})} &
    X = (X\{x}) \/ {x} by Lm1,ORDINAL1:def 1;
    then X,succ Card (X\{x}) are_equipotent by A1,A2,A3,A4,CARD_1:58;
   then consider r being Order of X such that
A6: r well_orders X and
A7: order_type_of r = succ Card (X\{x}) by Th7;
A8: field r = X by ORDERS_2:2;
then r is well-ordering by A6,WELLORD1:8;
    then r, RelIncl order_type_of r are_isomorphic by WELLORD2:def 2;
    then RelIncl order_type_of r, r are_isomorphic by WELLORD1:50;
   then consider f being Function such that
A9:f is_isomorphism_of RelIncl order_type_of r, r by WELLORD1:def 8;
      field RelIncl order_type_of r = order_type_of r by WELLORD2:def 1;
then A10:f is one-to-one & dom f = order_type_of r & rng f = X
     by A8,A9,WELLORD1:def 7;
   take r;
   thus r is upper-bounded
     proof take a = f.Card (X\{x});
      let y; assume
A11:   y in field r;
then A12:   f".y in order_type_of r by A8,A10,FUNCT_1:54;
then A13:   f".y in Card (X\{x}) or f".y = Card (X\{x}) by A5,A7,SETWISEO:6;
      reconsider b = f".y as Ordinal by A12,ORDINAL1:23;
         b c= Card (X\{x}) & Card (X\{x}) in order_type_of r
        by A5,A7,A13,ORDINAL1:def 2,SETWISEO:6;
       then [b, Card (X\{x})] in RelIncl order_type_of r
        by A12,WELLORD2:def 1;
       then [f.b, a] in r by A9,WELLORD1:def 7;
      hence thesis by A8,A10,A11,FUNCT_1:57;
     end;
   thus thesis by A6,A8,WELLORD1:8;
  end;
end;


theorem :: YELLOW21:8
 for P being reflexive non empty RelStr holds
  P is upper-bounded iff the InternalRel of P is upper-bounded;

theorem :: YELLOW21:9
 for P being upper-bounded (non empty Poset)
  st the InternalRel of P is well-ordering
  holds P is connected complete continuous;

theorem :: YELLOW21:10
 for P being upper-bounded (non empty Poset)
  st the InternalRel of P is well-ordering
 for x,y being Element of P st y < x
  ex z being Element of P st z is compact & y <= z & z <= x;

theorem :: YELLOW21:11
 for P being upper-bounded (non empty Poset)
  st the InternalRel of P is well-ordering
  holds P is algebraic;

registration
 let X be non empty set;
 let R be upper-bounded well-ordering Order of X;
 cluster RelStr(#X,R#) -> complete connected continuous algebraic;
 coherence
  proof RelStr(#X,R#) is upper-bounded by Th8;
   hence thesis by Th9,Th11;
  end;
end;


registration
 cluster non trivial -> with_non-empty_element set;
 coherence
  proof let W be set; assume W is non trivial;
   then reconsider W as non trivial set;
   consider w1 being Element of W;
   consider w2 being Element of W \ {w1};
      W \ {w1} is non empty by REALSET1:32;
    then w2 in W & w2 <> w1 & (w1 = {} or w1 <> {}) by ZFMISC_1:64;
   hence thesis by TRIANG_1:def 1;
  end;
end;


definition
 let W be non empty set;
 given w being Element of W such that
    w is non empty;
 func W-UPS_category -> lattice-wise strict category means
:: YELLOW21:def 10

  (for x being LATTICE holds
    x is object of it iff x is strict complete & the carrier of x in W) &
  for a,b being object of it, f being monotone map of latt a, latt b
    holds f in <^a,b^> iff f is directed-sups-preserving;
end;


registration
 let W be with_non-empty_element set;
 cluster W-UPS_category -> with_complete_lattices with_all_isomorphisms;
 coherence
  proof set C = W-UPS_category;
A1: ex w being non empty set st w in W by TRIANG_1:def 1;
   thus C is lattice-wise;
   hereby let a be object of C; a = latt a by Def6;
     hence a is complete LATTICE by A1,Def10;
    end;
   let a,b be object of C, f be map of latt a, latt b; assume
A2: f is isomorphic;
      a = latt a & b = latt b by Def6;
   then reconsider S = latt a, T = latt b as complete LATTICE by A1,Def10;
      f is sups-preserving map of S, T by A2,WAYBEL13:20;
   hence f in <^a,b^> by A1,Def10;
  end;
end;


theorem :: YELLOW21:12
 for W being with_non-empty_element set holds
   the carrier of W-UPS_category c= POSETS W;

theorem :: YELLOW21:13
 for W being with_non-empty_element set
 for x holds
   x is object of W-UPS_category iff x is complete LATTICE & x in POSETS W;

theorem :: YELLOW21:14
 for W being with_non-empty_element set
 for L being LATTICE st the carrier of L in W
  holds L is object of W-UPS_category iff L is strict complete;

theorem :: YELLOW21:15
 for W being with_non-empty_element set
 for a,b being object of W-UPS_category
 for f being set holds
   f in <^a,b^> iff f is directed-sups-preserving map of latt a, latt b;

registration
 let W be with_non-empty_element set;
 let a,b be object of W-UPS_category;
 cluster <^a,b^> -> non empty;
 coherence
  proof consider f being directed-sups-preserving map of latt a, latt b;
      f in <^a,b^> by Th15;
   hence thesis;
  end;
end;


begin :: Lattice-wise subcategories

theorem :: YELLOW21:16
 for A being category, B being non empty subcategory of A
 for a being object of A, b being object of B st b = a
  holds the_carrier_of b = the_carrier_of a;

registration
 let A be set-id-inheriting category;
 cluster -> set-id-inheriting (non empty subcategory of A);
 coherence
  proof let B be non empty subcategory of A;
   let b be object of B;
      b in the carrier of B &
    the carrier of B c= the carrier of A by ALTCAT_2:def 11;
   then reconsider a = b as object of A;
   thus idm b = idm a by ALTCAT_2:35 .= id the_carrier_of a by YELLOW18:def 10
             .= id the_carrier_of b by Th16;
  end;
end;


registration
 let A be para-functional category;
 cluster -> para-functional (non empty subcategory of A);
 coherence
  proof let B be non empty subcategory of A;
   consider F being ManySortedSet of A such that
A1: for a1,a2 being object of A holds <^a1,a2^> c= Funcs(F.a1,F.a2)
     by YELLOW18:def 7;
   set G = F|the carrier of B;
A2: dom F = the carrier of A & the carrier of B c= the carrier of A
     by ALTCAT_2:def 11,PBOOLE:def 3;
   then dom G = the carrier of B by RELAT_1:91;
   then reconsider G as ManySortedSet of B by PBOOLE:def 3;
   take G; let a1,a2 be object of B;
      a1 in the carrier of B & a2 in the carrier of B;
   then reconsider b1 = a1, b2 = a2 as object of A by A2;
      F.a1 = G.a1 & F.a2 = G.a2 by FUNCT_1:72;
    then <^a1,a2^> c= <^b1,b2^> & <^b1,b2^> c= Funcs(G.a1,G.a2) by A1,ALTCAT_2:
32;
   hence thesis by XBOOLE_1:1;
  end;
end;


registration
 let A be semi-functional category;
 cluster -> semi-functional (non empty transitive SubCatStr of A);
 coherence
  proof let B be non empty transitive SubCatStr of A;
   let b1,b2,b3 be object of B such that
A1: <^b1,b2^> <> {} & <^b2,b3^> <> {} & <^b1,b3^> <> {};
   let f1 be Morphism of b1,b2, f2 be Morphism of b2,b3;
   let f', g' be Function such that
A2: f1 = f' & f2 = g';
   reconsider a1 = b1, a2 = b2, a3 = b3 as object of A by ALTCAT_2:30;
   reconsider g1 = f1 as Morphism of a1,a2 by A1,ALTCAT_2:34;
   reconsider g2 = f2 as Morphism of a2,a3 by A1,ALTCAT_2:34;
      <^b1,b2^> c= <^a1,a2^> & <^b2,b3^> c= <^a2,a3^> & <^b1,b3^>c= <^a1,a3^>
     by ALTCAT_2:32;
    then <^a1,a2^> <> {} & <^a2,a3^> <> {} & <^a1,a3^> <> {} by A1,XBOOLE_1:3;
    then g2*g1 = g'*f' by A2,ALTCAT_1:def 14;
   hence thesis by A1,ALTCAT_2:33;
  end;
end;


registration
 let A be carrier-underlaid category;
 cluster -> carrier-underlaid (non empty subcategory of A);
 coherence
  proof let B be non empty subcategory of A;
   let b being object of B; reconsider a = b as object of A by ALTCAT_2:30;
   consider S being 1-sorted such that
A1: a = S & the_carrier_of a = the carrier of S by Def3;
   take S; thus b = S by A1;
   thus the_carrier_of b = proj1 idm b by YELLOW18:def 9
     .= proj1 idm a by ALTCAT_2:35 .= the carrier of S by A1,YELLOW18:def 9;
  end;
end;


registration
 let A be lattice-wise category;
 cluster -> lattice-wise (non empty subcategory of A);
 coherence
  proof let B be non empty subcategory of A;
   thus B is semi-functional set-id-inheriting;
   hereby let b be object of B; reconsider a = b as object of A by ALTCAT_2:30;
        a is LATTICE by Def4;
     hence b is LATTICE;
    end;
   let a,b be object of B;
   reconsider a' = a, b' = b as object of A by ALTCAT_2:30;
   let A,B be LATTICE; assume A = a & B = b;
    then <^a,b^> c= <^a',b'^> & <^a',b'^> c= MonFuncs(A, B) by Def4,ALTCAT_2:32
;
   hence thesis by XBOOLE_1:1;
  end;
end;


registration
 let A be with_all_isomorphisms (lattice-wise category);
 cluster full -> with_all_isomorphisms (non empty subcategory of A);
 coherence
  proof let B be non empty subcategory of A such that
A1: B is full;
   let a,b be object of B, f be map of latt a, latt b;
   reconsider a' = a, b' = b as object of A by ALTCAT_2:30;
   assume f is isomorphic;
    then f in <^a', b'^> & <^a,b^> = <^a',b'^> by A1,Def8,ALTCAT_2:29;
   hence f in <^a,b^>;
  end;
end;


registration
 let A be with_complete_lattices category;
 cluster -> with_complete_lattices (non empty subcategory of A);
 coherence
  proof let B be non empty subcategory of A;
   thus B is lattice-wise;
   let b be object of B; reconsider a = b as object of A by ALTCAT_2:30;
      a is complete LATTICE by Def5;
   hence thesis;
  end;
end;


definition
 let W be with_non-empty_element set;
 func W-CONT_category -> strict full non empty subcategory of W-UPS_category
    means
:: YELLOW21:def 11

  for a being object of W-UPS_category holds
    a is object of it iff latt a is continuous;
end;


definition
 let W be with_non-empty_element set;
 func W-ALG_category -> strict full non empty subcategory of W-CONT_category
    means
:: YELLOW21:def 12

  for a being object of W-CONT_category holds
    a is object of it iff latt a is algebraic;
end;


theorem :: YELLOW21:17
 for W being with_non-empty_element set
 for L being LATTICE st the carrier of L in W
  holds L is object of W-CONT_category iff L is strict complete continuous;

theorem :: YELLOW21:18
   for W being with_non-empty_element set
 for L being LATTICE st the carrier of L in W
  holds L is object of W-ALG_category iff L is strict complete algebraic;

theorem :: YELLOW21:19
 for W being with_non-empty_element set
 for a,b being object of W-CONT_category
 for f being set holds
   f in <^a,b^> iff f is directed-sups-preserving map of latt a, latt b;

theorem :: YELLOW21:20
 for W being with_non-empty_element set
 for a,b being object of W-ALG_category
 for f being set holds
   f in <^a,b^> iff f is directed-sups-preserving map of latt a, latt b;

registration
 let W be with_non-empty_element set;
 let a,b be object of W-CONT_category;
 cluster <^a,b^> -> non empty;
 coherence
  proof consider f being directed-sups-preserving map of latt a, latt b;
      f in <^a,b^> by Th19;
   hence thesis;
  end;
end;


registration
 let W be with_non-empty_element set;
 let a,b be object of W-ALG_category;
 cluster <^a,b^> -> non empty;
 coherence
  proof consider f being directed-sups-preserving map of latt a, latt b;
      f in <^a,b^> by Th20;
   hence thesis;
  end;
end;

