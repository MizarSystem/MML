:: Models and Satisfiability. Defining by Structural Induction and
:: Free Variables in ZF-formulae
::  by Grzegorz Bancerek
::
:: Received April 14, 1989
:: Copyright (c) 1990 Association of Mizar Users

environ

 vocabulary ZF_LANG, BOOLE, FUNCT_1, TARSKI, RELAT_1, ORDINAL1, ZF_MODEL;
 notation TARSKI, XBOOLE_0, ENUMSET1, ZFMISC_1, SUBSET_1, RELAT_1, FUNCT_1,
      ZF_LANG, FUNCT_2, ORDINAL1;
 constructors ENUMSET1, FUNCT_2, ZF_LANG, MEMBERED, XBOOLE_0;
 clusters ZF_LANG, RELSET_1, SUBSET_1, MEMBERED, ZFMISC_1, XBOOLE_0;
 requirements NUMERALS, SUBSET, BOOLE;


begin

 reserve F,H,H' for ZF-formula,

         x,y,z,t for Variable,
         a,b,c,d for set,
         A,X for set;

 scheme :: ZF_MODEL:sch 1
 ZFsch_ex
     { F1(Variable,Variable)->set, F2(Variable,Variable)->set,
       F3(set)->set, F4(set,set)->set, F5(Variable,set)->set,
       H()->ZF-formula } :
  ex a,A st
   (for x,y holds [x '=' y,F1(x,y)] in A & [x 'in' y,F2(x,y)] in A) &
   [H(),a] in A &
   for H,a st [H,a] in A holds
    (H is_equality implies a = F1(Var1 H,Var2 H) ) &
    (H is_membership implies a = F2(Var1 H,Var2 H) ) &
    (H is negative implies ex b st a = F3(b) & [the_argument_of H,b] in A) &
    (H is conjunctive implies ex b,c st (a = F4(b,c) &
      [the_left_argument_of H,b] in A) & [the_right_argument_of H,c] in A) &
    (H is universal implies ex b st a = F5(bound_in H,b) &
      [the_scope_of H,b] in A)
proof
   defpred Graph[set,ZF-formula,set] means
    (for x,y holds [x '=' y,F1(x,y)] in $1 & [x 'in' y,F2(x,y)] in $1) &
    [$2,$3] in $1 &
    for H,a st [H,a] in $1 holds
     (H is_equality implies a = F1(Var1 H,Var2 H) ) &
     (H is_membership implies a = F2(Var1 H,Var2 H) ) &
     (H is negative implies ex b st a = F3(b) & [the_argument_of H,b] in $1) &
     (H is conjunctive implies ex b,c st a = F4(b,c) &
       ([the_left_argument_of H,b] in $1 & [the_right_argument_of H,c] in
 $1)) &
     (H is universal implies ex b st (a = F5(bound_in H,b) &
       [the_scope_of H,b] in $1));
    defpred Ind[ZF-formula] means ex a,A st Graph[A,$1,a];
A1:  H is atomic implies Ind[H]
     proof assume
A2:    H is_equality or H is_membership;
      then consider a such that
A3:    H is_equality & a = F1(Var1 H,Var2 H) or
        H is_membership & a = F2(Var1 H,Var2 H);
      take a , X
 = { [x '=' y,F1(x,y)] : x = x } \/ { [z 'in' t,F2(z,t)] : z = z };
      thus for x,y holds [x '=' y,F1(x,y)] in X & [x 'in' y,F2(x,y)] in X
        proof let x,y;
            [x '=' y,F1(x,y)] in { [z '=' t,F1(z,t)] : z = z };
         hence [x '=' y,F1(x,y)] in X by XBOOLE_0:def 2;
            [x 'in' y,F2(x,y)] in { [z 'in' t,F2(z,t)] : z = z };
         hence [x 'in' y,F2(x,y)] in X by XBOOLE_0:def 2;
        end;
A4:    now assume
        H is_equality;
         then H.1 = 0 by ZF_LANG:35;
         then a = F1(Var1 H,Var2 H) & H = (Var1 H) '=' Var2 H
          by A3,ZF_LANG:36,53;
         then [H,a] in { [x '=' y,F1(x,y)] : x = x };
        hence [H,a] in X by XBOOLE_0:def 2;
       end;
         now assume
        H is_membership;
         then H.1 = 1 by ZF_LANG:36;
         then a = F2(Var1 H,Var2 H) & H = (Var1 H) 'in' Var2 H
          by A3,ZF_LANG:35,54;
         then [H,a] in { [x 'in' y,F2(x,y)] : x = x };
        hence [H,a] in X by XBOOLE_0:def 2;
       end;
      hence [H,a] in X by A2,A4;
      let H,a; assume
A5:       [H,a] in X;
then A6:    [H,a] in { [x '=' y,F1(x,y)] : x = x } or
        [H,a] in { [z 'in' t,F2(z,t)] : z = z } by XBOOLE_0:def 2;
      thus H is_equality implies a = F1(Var1 H,Var2 H)
        proof assume
A7:       H is_equality;
          then A8: H.1 = 0 by ZF_LANG:35;
            [H,a] <> [x 'in' y,F2(x,y)]
           proof
               H <> x 'in' y by A8,ZF_LANG:31;
            hence thesis by ZFMISC_1:33;
           end;
          then not ex x,y st [H,a] = [x 'in' y,F2(x,y)] & x = x;
         then consider x,y such that
A9:       [H,a] = [x '=' y,F1(x,y)] & x = x by A6;
A10:       H = x '=' y & a = F1(x,y) by A9,ZFMISC_1:33;
            H = (Var1 H) '=' Var2 H by A7,ZF_LANG:53;
          then Var1 H = x & Var2 H = y by A10,ZF_LANG:6;
         hence thesis by A9,ZFMISC_1:33;
        end;
      thus H is_membership implies a = F2(Var1 H,Var2 H)
        proof assume
A11:       H is_membership;
          then A12: H.1 = 1 by ZF_LANG:36;
            [H,a] <> [x '=' y,F1(x,y)]
           proof
               H <> x '=' y by A12,ZF_LANG:31;
            hence thesis by ZFMISC_1:33;
           end;
          then not ex x,y st [H,a] = [x '=' y,F1(x,y)] & x = x;
         then consider x,y such that
A13:       [H,a] = [x 'in' y,F2(x,y)] & x = x by A6;
A14:       H = x 'in' y & a = F2(x,y) by A13,ZFMISC_1:33;
            H = (Var1 H) 'in' Var2 H by A11,ZF_LANG:54;
          then Var1 H = x & Var2 H = y by A14,ZF_LANG:7;
         hence thesis by A13,ZFMISC_1:33;
        end;
A15:    now assume [H,a] in { [x '=' y,F1(x,y)] : x = x };
        then consider x,y such that
A16:      [H,a] = [x '=' y,F1(x,y)] & x = x;
           H = x '=' y by A16,ZFMISC_1:33;
        hence H.1 = 0 by ZF_LANG:31;
       end;
         now assume [H,a] in { [z 'in' t,F2(z,t)] : z = z };
        then consider x,y such that
A17:      [H,a] = [x 'in' y,F2(x,y)] & x = x;
           H = x 'in' y by A17,ZFMISC_1:33;
        hence H.1 = 1 by ZF_LANG:31;
       end;
      hence thesis by A5,A15,XBOOLE_0:def 2,ZF_LANG:37,38,39;
     end;
A18:  for H st H is negative & Ind[the_argument_of H] holds Ind[H]
     proof let H such that
A19:    H is negative;
      given a,A such that
A20:    Graph[A,the_argument_of H,a];
      take b = F3(a) , X = A \/ { [H,b] };
      thus for x,y holds [x '=' y,F1(x,y)] in X & [x 'in' y,F2(x,y)] in X
        proof let x,y;
            [x '=' y,F1(x,y)] in A & [x 'in' y,F2(x,y)] in A by A20;
         hence thesis by XBOOLE_0:def 2;
        end;
         [H,b] in { [H,b] } by TARSKI:def 1;
      hence [H,b] in X by XBOOLE_0:def 2;
      let F,c; assume
         [F,c] in X;
then A21:       [F,c] in A or [F,c] in { [H,b] } by XBOOLE_0:def 2;
A22:    [F,c] = [H,b] implies F = H & c = b by ZFMISC_1:33;
       A23: H.1 = 2 by A19,ZF_LANG:37;
      hence F is_equality implies c = F1(Var1 F,Var2 F) by A20,A21,A22,TARSKI:
def 1,ZF_LANG:35;
      thus F is_membership implies c = F2(Var1 F,Var2 F) by A20,A21,A22,A23,
TARSKI:def 1,ZF_LANG:36;
      thus F is negative implies ex b st c = F3(b) & [the_argument_of F,b] in
X
        proof assume
A24:       F is negative;
A25:       now assume [F,c] in A;
           then consider d such that
A26:         c = F3(d) & [the_argument_of F,d] in A by A20,A24;
              [the_argument_of F,d] in X by A26,XBOOLE_0:def 2;
           hence thesis by A26;
          end;
            now assume A27: [F,c] = [H,b];
            then [the_argument_of F,a] in X by A20,A22,XBOOLE_0:def 2;
           hence thesis by A22,A27;
          end;
         hence thesis by A21,A25,TARSKI:def 1;
        end;
      thus F is conjunctive implies ex b,d st c = F4(b,d) &
         [the_left_argument_of F,b] in X & [the_right_argument_of F,d] in X
        proof assume
         F is conjunctive;
         then consider b,d such that
A28:       c = F4(b,d) & [the_left_argument_of F,b] in A &
           [the_right_argument_of F,d] in A by A20,A21,A22,A23,TARSKI:def 1,
ZF_LANG:38;
         take b,d;
         thus thesis by A28,XBOOLE_0:def 2;
        end;
      thus F is universal implies ex b st c = F5(bound_in F,b) &
         [the_scope_of F,b] in X
        proof assume
         F is universal;
         then consider b such that
A29:       c = F5(bound_in F,b) & [the_scope_of F,b] in A by A20,A21,
A22,A23,TARSKI:def 1,ZF_LANG:39;
         take b;
         thus thesis by A29,XBOOLE_0:def 2;
        end;
     end;
A30:  for H st H is conjunctive & Ind[the_left_argument_of H] &
           Ind[the_right_argument_of H] holds Ind[H]
     proof let H such that
A31:    H is conjunctive;
      given a1 being set,A1 being set such that
A32:    Graph[A1,the_left_argument_of H,a1];
      given a2 being set,A2 being set such that
A33:    Graph[A2,the_right_argument_of H,a2];
      take a = F4(a1,a2) , X = A1 \/ A2 \/ { [H,a] };
      thus for x,y holds [x '=' y,F1(x,y)] in X & [x 'in' y,F2(x,y)] in X
        proof let x,y;
            [x '=' y,F1(x,y)] in A1 & [x 'in' y,F2(x,y)] in A1 by A32;
          then [x '=' y,F1(x,y)] in A1 \/ A2 & [x 'in' y,F2(x,y)] in A1 \/ A2
           by XBOOLE_0:def 2;
         hence thesis by XBOOLE_0:def 2;
        end;
         [H,a] in { [H,a] } by TARSKI:def 1;
      hence [H,a] in X by XBOOLE_0:def 2;
      let F,c; assume
         [F,c] in X;
then A34:       [F,c] in A1 \/ A2 or [F,c] in { [H,a] } by XBOOLE_0:def 2;
then A35:    [F,c] in A1 or [F,c] in
 A2 or [F,c] = [H,a] by TARSKI:def 1,XBOOLE_0:def 2;
A36:    [F,c] = [H,a] implies F = H & c = a by ZFMISC_1:33;
       A37: H.1 = 3 by A31,ZF_LANG:38;
then A38:    not H is_equality & not H is_membership & not H is negative &
        not H is universal by ZF_LANG:35,36,37,39;
      thus F is_equality implies c = F1(Var1 F,Var2 F) by A32,A33,A35,A36,A37,
ZF_LANG:35;
      thus F is_membership implies c = F2(Var1 F,Var2 F) by A32,A33,A35,A38,
ZFMISC_1:33;
      thus F is negative implies ex b st c = F3(b) & [the_argument_of F,b] in
X
        proof assume
A39:       F is negative;
A40:       now assume [F,c] in A1;
           then consider b such that
A41:         c = F3(b) & [the_argument_of F,b] in A1 by A32,A39;
              [the_argument_of F,b] in A1 \/ A2 by A41,XBOOLE_0:def 2;
            then [the_argument_of F,b] in X by XBOOLE_0:def 2;
           hence thesis by A41;
          end;
            now assume [F,c] in A2;
           then consider b such that
A42:         c = F3(b) & [the_argument_of F,b] in A2 by A33,A39;
              [the_argument_of F,b] in A1 \/ A2 by A42,XBOOLE_0:def 2;
            then [the_argument_of F,b] in X by XBOOLE_0:def 2;
           hence thesis by A42;
          end;
         hence thesis by A34,A36,A37,A39,A40,TARSKI:def 1,XBOOLE_0:def 2,
ZF_LANG:37;
        end;
      thus F is conjunctive implies ex b,d st c = F4(b,d) &
         [the_left_argument_of F,b] in X & [the_right_argument_of F,d] in X
        proof assume
A43:       F is conjunctive;
A44:       now assume A45: [F,c] = [H,a];
            then [the_left_argument_of F,a1] in A1 \/ A2 &
             [the_right_argument_of F,a2] in A1 \/ A2 by A32,A33,A36,XBOOLE_0:
def 2;
            then [the_left_argument_of F,a1] in X & [the_right_argument_of F,
a2] in
 X
             by XBOOLE_0:def 2;
           hence thesis by A36,A45;
          end;
A46:       now assume [F,c] in A1;
           then consider b,d such that
A47:         c = F4(b,d) & [the_left_argument_of F,b] in A1 &
             [the_right_argument_of F,d] in A1 by A32,A43;
              [the_left_argument_of F,b] in A1 \/ A2 &
             [the_right_argument_of F,d] in A1 \/ A2 by A47,XBOOLE_0:def 2
;
            then [the_left_argument_of F,b] in X & [the_right_argument_of F,d]
in X
             by XBOOLE_0:def 2;
           hence thesis by A47;
          end;
            now assume [F,c] in A2;
           then consider b,d such that
A48:         c = F4(b,d) & [the_left_argument_of F,b] in A2 &
             [the_right_argument_of F,d] in A2 by A33,A43;
              [the_left_argument_of F,b] in A1 \/ A2 &
             [the_right_argument_of F,d] in A1 \/ A2 by A48,XBOOLE_0:def 2
;
            then [the_left_argument_of F,b] in X & [the_right_argument_of F,d]
in X
             by XBOOLE_0:def 2;
           hence thesis by A48;
          end;
         hence thesis by A34,A44,A46,TARSKI:def 1,XBOOLE_0:def 2;
        end;
      thus F is universal implies ex b st c = F5(bound_in F,b) &
         [the_scope_of F,b] in X
        proof assume
A49:       F is universal;
A50:       now assume [F,c] in A1;
           then consider b such that
A51:         c = F5(bound_in F,b) & [the_scope_of F,b] in A1 by A32,A49;
              [the_scope_of F,b] in A1 \/ A2 by A51,XBOOLE_0:def 2;
            then [the_scope_of F,b] in X by XBOOLE_0:def 2;
           hence thesis by A51;
          end;
            now assume [F,c] in A2;
           then consider b such that
A52:         c = F5(bound_in F,b) & [the_scope_of F,b] in A2 by A33,A49;
              [the_scope_of F,b] in A1 \/ A2 by A52,XBOOLE_0:def 2;
            then [the_scope_of F,b] in X by XBOOLE_0:def 2;
           hence thesis by A52;
          end;
         hence thesis by A34,A36,A37,A49,A50,TARSKI:def 1,XBOOLE_0:def 2,
ZF_LANG:39;
        end;
     end;
A53:  for H st H is universal & Ind[the_scope_of H] holds Ind[H]
     proof let H such that
A54:    H is universal;
      given a,A such that
A55:    Graph[A,the_scope_of H,a];
      take b = F5(bound_in H,a) , X = A \/ { [H,b] };
      thus for x,y holds [x '=' y,F1(x,y)] in X & [x 'in' y,F2(x,y)] in X
        proof let x,y;
            [x '=' y,F1(x,y)] in A & [x 'in' y,F2(x,y)] in A by A55;
         hence thesis by XBOOLE_0:def 2;
        end;
         [H,b] in { [H,b] } by TARSKI:def 1;
      hence [H,b] in X by XBOOLE_0:def 2;
      let F,c; assume
         [F,c] in X;
then A56:       [F,c] in A or [F,c] in { [H,b] } by XBOOLE_0:def 2;
A57:    [F,c] = [H,b] implies F = H & c = b by ZFMISC_1:33;
       A58: H.1 = 4 by A54,ZF_LANG:39;
      hence F is_equality implies c = F1(Var1 F,Var2 F) by A55,A56,A57,TARSKI:
def 1,ZF_LANG:35;
      thus F is_membership implies c = F2(Var1 F,Var2 F) by A55,A56,A57,A58,
TARSKI:def 1,ZF_LANG:36;
      thus F is negative implies ex b st c = F3(b) & [the_argument_of F,b] in
X
        proof assume
         F is negative;
         then consider b such that
A59:       c = F3(b) & [the_argument_of F,b] in A by A55,A56,A57,A58,TARSKI:def
1,ZF_LANG:37;
            [the_argument_of F,b] in X by A59,XBOOLE_0:def 2;
         hence thesis by A59;
        end;
      thus F is conjunctive implies ex b,d st c = F4(b,d) &
         [the_left_argument_of F,b] in X & [the_right_argument_of F,d] in X
        proof assume
         F is conjunctive;
         then consider b,d such that
A60:       c = F4(b,d) & [the_left_argument_of F,b] in A &
           [the_right_argument_of F,d] in A by A55,A56,A57,A58,TARSKI:def 1,
ZF_LANG:38;
         take b,d;
         thus thesis by A60,XBOOLE_0:def 2;
        end;
      thus F is universal implies ex b st c = F5(bound_in F,b) &
         [the_scope_of F,b] in X
        proof assume
A61:       F is universal;
A62:       now assume [F,c] in A;
           then consider b such that
A63:         c = F5(bound_in F,b) & [the_scope_of F,b] in A by A55,A61;
              [the_scope_of F,b] in X by A63,XBOOLE_0:def 2;
           hence thesis by A63;
          end;
            now assume A64: [F,c] = [H,b];
            then [the_scope_of F,a] in X by A55,A57,XBOOLE_0:def 2;
           hence thesis by A57,A64;
          end;
         hence thesis by A56,A62,TARSKI:def 1;
        end;
     end;
      for H holds Ind[H] from ZF_LANG:sch 1(A1,A18,A30,A53);
   hence ex a,A st Graph[A,H(),a];
  end;

scheme :: ZF_MODEL:sch 2
 ZFsch_uniq
     { F1(Variable,Variable)->set, F2(Variable,Variable)->set,
       F3(set)->set, F4(set,set)->set, F5(Variable,set)->set,
       H()->ZF-formula, a()->set, b()->set } :

  a() = b()
    provided
 ex A st
    (for x,y holds [x '=' y,F1(x,y)] in A & [x 'in' y,F2(x,y)] in A) &
    [H(),a()] in A &
    for H,a st [H,a] in A holds
     (H is_equality implies a = F1(Var1 H,Var2 H) ) &
     (H is_membership implies a = F2(Var1 H,Var2 H) ) &
     (H is negative implies ex b st a = F3(b) & [the_argument_of H,b] in A) &
     (H is conjunctive implies ex b,c st a = F4(b,c) &
       [the_left_argument_of H,b] in A & [the_right_argument_of H,c] in A) &
     (H is universal implies ex b st a = F5(bound_in H,b) &
       [the_scope_of H,b] in A)
    and
 ex A st
    (for x,y holds [x '=' y,F1(x,y)] in A & [x 'in' y,F2(x,y)] in A) &
    [H(),b()] in A &
    for H,a st [H,a] in A holds
     (H is_equality implies a = F1(Var1 H,Var2 H) ) &
     (H is_membership implies a = F2(Var1 H,Var2 H) ) &
     (H is negative implies ex b st a = F3(b) & [the_argument_of H,b] in A) &
     (H is conjunctive implies ex b,c st a = F4(b,c) &
       [the_left_argument_of H,b] in A & [the_right_argument_of H,c] in A) &
     (H is universal implies ex b st a = F5(bound_in H,b) &
       [the_scope_of H,b] in A)
proof
   consider A1 being set such that
   for x,y holds [x '=' y,F1(x,y)] in A1 & [x 'in' y,F2(x,y)] in A1 and
A3: [H(),a()] in A1 and
A4: for H,a st [H,a] in A1 holds
     (H is_equality implies a = F1(Var1 H,Var2 H) ) &
     (H is_membership implies a = F2(Var1 H,Var2 H) ) &
     (H is negative implies ex b st a = F3(b) & [the_argument_of H,b] in A1) &
     (H is conjunctive implies ex b,c st a = F4(b,c) &
       [the_left_argument_of H,b] in A1 & [the_right_argument_of H,c] in A1) &
     (H is universal implies ex b st a = F5(bound_in H,b) &
       [the_scope_of H,b] in A1) by A1;
   consider A2 being set such that
   for x,y holds [x '=' y,F1(x,y)] in A2 & [x 'in' y,F2(x,y)] in A2 and
A5: [H(),b()] in A2 and
A6: for H,a st [H,a] in A2 holds
     (H is_equality implies a = F1(Var1 H,Var2 H) ) &
     (H is_membership implies a = F2(Var1 H,Var2 H) ) &
     (H is negative implies ex b st a = F3(b) & [the_argument_of H,b] in A2) &
     (H is conjunctive implies ex b,c st a = F4(b,c) &
       [the_left_argument_of H,b] in A2 & [the_right_argument_of H,c] in A2) &
     (H is universal implies ex b st a = F5(bound_in H,b) &
       [the_scope_of H,b] in A2) by A2;
     defpred P[ZF-formula] means
      for a,b st [$1,a] in A1 & [$1,b] in A2 holds a = b;
A7:  for H st H is atomic holds P[H]
     proof let H such that
A8:    H is_equality or H is_membership;
      let a,b such that
A9:    [H,a] in A1 & [H,b] in A2;
A10:    now assume H is_equality;
         then a = F1(Var1 H,Var2 H) & b = F1(Var1 H,Var2 H) by A4,A6,A9;
        hence thesis;
       end;
         now assume H is_membership;
         then a = F2(Var1 H,Var2 H) & b = F2(Var1 H,Var2 H) by A4,A6,A9;
        hence thesis;
       end;
      hence thesis by A8,A10;
     end;
A11:  for H st H is negative & P[the_argument_of H] holds P[H]
     proof let H such that
A12:    H is negative and
A13:    for a,b st [the_argument_of H,a] in A1 & [the_argument_of H,b] in A2
        holds a = b;
      let a,b; assume
A14:    [H,a] in A1 & [H,b] in A2;
 then A15:      ex a1 being set st
    a = F3(a1) & [the_argument_of H,a1] in A1 by A4,A12;
         ex b1 being set st
    b = F3(b1) & [the_argument_of H,b1] in A2 by A6,A12,A14;
      hence thesis by A13,A15;
     end;
A16:  for H st H is conjunctive & P[the_left_argument_of H] &
          P[the_right_argument_of H] holds P[H]
     proof let H such that
A17:    H is conjunctive and
A18:    for a,b st [the_left_argument_of H,a] in A1 &
        [the_left_argument_of H,b] in A2 holds a = b and
A19:    for a,b st [the_right_argument_of H,a] in A1 &
        [the_right_argument_of H,b] in A2 holds a = b;
      let a,b; assume
A20:    [H,a] in A1 & [H,b] in A2;
      then consider a1,a2 being set such that
A21:    a = F4(a1,a2) & [the_left_argument_of H,a1] in A1 &
        [the_right_argument_of H,a2] in A1 by A4,A17;
      consider b1,b2 being set such that
A22:    b = F4(b1,b2) & [the_left_argument_of H,b1] in A2 &
        [the_right_argument_of H,b2] in A2 by A6,A17,A20;
         a1 = b1 & a2 = b2 by A18,A19,A21,A22;
      hence thesis by A21,A22;
     end;
A23:  for H st H is universal & P[the_scope_of H] holds P[H]
     proof let H such that
A24:    H is universal and
A25:    for a,b st [the_scope_of H,a] in A1 & [the_scope_of H,b] in A2
        holds a = b;
      let a,b; assume
A26:    [H,a] in A1 & [H,b] in A2;
 then A27:      ex a1 being set st
    a = F5(bound_in H,a1) & [the_scope_of H,a1] in A1 by A4,A24;
         ex b1 being set st
    b = F5(bound_in H,b1) & [the_scope_of H,b1] in A2 by A6,A24,A26;
      hence thesis by A25,A27;
     end;
      for H holds P[H] from ZF_LANG:sch 1 (A7,A11,A16,A23);
   hence thesis by A3,A5;
  end;

scheme :: ZF_MODEL:sch 3
 ZFsch_result
     { F1(Variable,Variable)->set, F2(Variable,Variable)->set,
       F3(set)->set, F4(set,set)->set, F5(Variable,set)->set,
       H()->ZF-formula, f(ZF-formula)->set } :

 ( H() is_equality implies f(H()) = F1(Var1 H(),Var2 H()) ) &
  ( H() is_membership implies f(H()) = F2(Var1 H(),Var2 H()) ) &
   ( H() is negative implies f(H()) = F3(f(the_argument_of H())) ) &
    ( H() is conjunctive implies for a,b st a = f(the_left_argument_of H()) &
       b = f(the_right_argument_of H()) holds f(H()) = F4(a,b) ) &
     ( H() is universal implies f(H()) = F5(bound_in H(),f(the_scope_of H())) )
   provided
for H',a holds a = f(H') iff
   ex A st
    (for x,y holds [x '=' y,F1(x,y)] in A & [x 'in' y,F2(x,y)] in A) &
    [H',a] in A &
    for H,a st [H,a] in A holds
     (H is_equality implies a = F1(Var1 H,Var2 H) ) &
     (H is_membership implies a = F2(Var1 H,Var2 H) ) &
     (H is negative implies ex b st a = F3(b) & [the_argument_of H,b] in A) &
     (H is conjunctive implies ex b,c st a = F4(b,c) &
       [the_left_argument_of H,b] in A & [the_right_argument_of H,c] in A) &
     (H is universal implies ex b st a = F5(bound_in H,b) &
       [the_scope_of H,b] in A)
proof
   consider A such that
A2: for x,y holds [x '=' y,F1(x,y)] in A & [x 'in' y,F2(x,y)] in A and
A3: [H(),f(H())] in A and
A4: for H,a st [H,a] in A holds
     (H is_equality implies a = F1(Var1 H,Var2 H) ) &
     (H is_membership implies a = F2(Var1 H,Var2 H) ) &
     (H is negative implies ex b st a = F3(b) & [the_argument_of H,b] in A) &
     (H is conjunctive implies ex b,c st a = F4(b,c) &
       [the_left_argument_of H,b] in A & [the_right_argument_of H,c] in A) &
     (H is universal implies ex b st a = F5(bound_in H,b) &
       [the_scope_of H,b] in A) by A1;
   thus H() is_equality implies f(H()) = F1(Var1 H(),Var2 H()) by A3,A4;
   thus H() is_membership implies f(H()) = F2(Var1 H(),Var2 H()) by A3,A4;
   thus H() is negative implies f(H()) = F3(f(the_argument_of H()))
     proof assume H() is negative;
       then ex b st f(H()) = F3(b) & [the_argument_of H(),b] in A by A3,A4
;
      hence thesis by A1,A2,A4;
     end;
   thus H() is conjunctive implies for a,b st a = f(the_left_argument_of H())
&
      b = f(the_right_argument_of H()) holds f(H()) = F4(a,b)
     proof assume H() is conjunctive;
      then consider b,c such that
A5:     f(H()) = F4(b,c) & [the_left_argument_of H(),b] in A &
        [the_right_argument_of H(),c] in A by A3,A4;
      let a1,a2 be set such that
A6:     a1 = f(the_left_argument_of H()) & a2 = f(the_right_argument_of H());
         f(the_left_argument_of H()) = b & f(the_right_argument_of H()) = c
        by A1,A2,A4,A5;
      hence thesis by A5,A6;
     end;
   thus H() is universal implies f(H()) = F5(bound_in H(),f(the_scope_of H()))
     proof assume H() is universal;
       then ex b st
      f(H()) = F5(bound_in H(),b) & [the_scope_of H(),b] in A by A3,A4;
      hence thesis by A1,A2,A4;
     end;
  end;

scheme :: ZF_MODEL:sch 4
 ZFsch_property
     { F1(Variable,Variable)->set, F2(Variable,Variable)->set,
       F3(set)->set, F4(set,set)->set, F5(Variable,set)->set,
       f(ZF-formula)->set, H()->ZF-formula, P[set] } :

  P[f(H())]
    provided
 for H',a holds a = f(H') iff
    ex A st
     (for x,y holds [x '=' y,F1(x,y)] in A & [x 'in' y,F2(x,y)] in A) &
     [H',a] in A &
     for H,a st [H,a] in A holds
      (H is_equality implies a = F1(Var1 H,Var2 H) ) &
      (H is_membership implies a = F2(Var1 H,Var2 H) ) &
      (H is negative implies ex b st a = F3(b) & [the_argument_of H,b] in A) &
      (H is conjunctive implies ex b,c st a = F4(b,c) &
        [the_left_argument_of H,b] in A & [the_right_argument_of H,c] in A) &
      (H is universal implies ex b st a = F5(bound_in H,b) &
        [the_scope_of H,b] in A) and
 for x,y holds P[F1(x,y)] & P[F2(x,y)] and
 for a st P[a] holds P[F3(a)] and
 for a,b st P[a] & P[b] holds P[F4(a,b)] and
 for a,x st P[a] holds P[F5(x,a)]
proof
    deffunc f1(Variable,Variable) = F1($1,$2);
    deffunc f2(Variable,Variable) = F2($1,$2);
    deffunc f3(set) = F3($1);
    deffunc f4(set,set) = F4($1,$2);
    deffunc f5(Variable,set) = F5($1,$2);
    deffunc g(ZF-formula) = f($1);
A6:for H',a holds a = g(H') iff
    ex A st
     (for x,y holds [x '=' y,f1(x,y)] in A & [x 'in' y,f2(x,y)] in A) &
     [H',a] in A &
     for H,a st [H,a] in A holds
      (H is_equality implies a = f1(Var1 H,Var2 H) ) &
      (H is_membership implies a = f2(Var1 H,Var2 H) ) &
      (H is negative implies ex b st a = f3(b) & [the_argument_of H,b] in A) &
      (H is conjunctive implies ex b,c st a = f4(b,c) &
        [the_left_argument_of H,b] in A & [the_right_argument_of H,c] in A) &
      (H is universal implies ex b st a = f5(bound_in H,b) &
        [the_scope_of H,b] in A) by A1;
A7:  now let H;
     thus ( H is_equality implies g(H) = f1(Var1 H,Var2 H) ) &
       ( H is_membership implies g(H) = f2(Var1 H,Var2 H) ) &
        ( H is negative implies g(H) = f3(g(the_argument_of H)) ) &
         ( H is conjunctive implies for a,b st a = g(the_left_argument_of H) &
            b = g(the_right_argument_of H) holds g(H) = f4(a,b) ) &
          ( H is universal implies g(H) = f5(bound_in H,g(the_scope_of H)) )
        from ZFsch_result (A6);
    end;
    defpred Pf[ZF-formula] means P[f($1)];
A8:  for H st H is atomic holds Pf[(H)]
     proof let H; assume
         H is_equality or H is_membership;
       then f(H) = F1(Var1 H,Var2 H) or f(H) = F2(Var1 H,Var2 H) by A7;
      hence thesis by A2;
     end;
A9:  for H st H is negative & Pf[(the_argument_of H)] holds Pf[(H)]
     proof let H; assume
         H is negative;
       then f(H) = F3(f(the_argument_of H)) by A7;
      hence thesis by A3;
     end;
A10:  for H st H is conjunctive & Pf[(the_left_argument_of H)] &
      Pf[(the_right_argument_of H)] holds Pf[(H)]
     proof let H; assume H is conjunctive; then
       f(H) = F4(f(the_left_argument_of H),f(the_right_argument_of H)) by A7;
      hence thesis by A4;
     end;
A11:  for H st H is universal & Pf[(the_scope_of H)] holds Pf[(H)]
     proof let H; assume
         H is universal;
       then f(H) = F5(bound_in H,f(the_scope_of H)) by A7;
      hence thesis by A5;
     end;
      for H holds Pf[(H)] from ZF_LANG:sch 1 (A8,A9,A10,A11);
   hence thesis;
  end;
 definition let H;
  func Free H -> set means
:: ZF_MODEL:def 1

   ex A st
    (for x,y holds [x '=' y,{ x,y }] in A & [x 'in' y,{ x,y }] in A) &
    [H,it] in A &
    for H',a st [H',a] in A holds
     (H' is_equality implies a = { Var1 H',Var2 H' }) &
     (H' is_membership implies a = { Var1 H',Var2 H' }) &
     (H' is negative implies ex b st a = b & [the_argument_of H',b] in A) &
     (H' is conjunctive implies ex b,c st a = union { b,c } &
       [the_left_argument_of H',b] in A & [the_right_argument_of H',c] in A) &
     (H' is universal implies ex b st
       a = (union { b }) \ { bound_in H' } & [the_scope_of H',b] in A);
 end;

 definition let H;
 redefine func Free H -> Subset of VAR;
 end;


theorem :: ZF_MODEL:1
    for H holds
   (H is_equality implies Free H = { Var1 H,Var2 H }) &
    (H is_membership implies Free H = { Var1 H,Var2 H }) &
     (H is negative implies Free H = Free the_argument_of H) &
      (H is conjunctive implies Free H =
        Free the_left_argument_of H \/ Free the_right_argument_of H) &
       (H is universal implies Free H = (Free the_scope_of H) \ { bound_in H })
;

::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::                                                    ::
:: The set of all valuations of variables in a model  ::
::                                                    ::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::

 definition let D be non empty set;
  func VAL D -> set means
:: ZF_MODEL:def 2
  a in it iff a is Function of VAR,D;
 end;


 registration let D be non empty set;
  cluster VAL D -> non empty;
  coherence
  proof
   consider f being Function of VAR,D;
     f in VAL D by Def2;
   hence thesis;
  end;
 end;


 reserve E for non empty set,
         f,g,h for Function of VAR,E,
         v1,v2,v3,v4,v5,u1,u2,u3,u4,u5 for Element of VAL E;

::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::                                                                  ::
:: The set of all valuations which satisfy a ZF-formula in a model  ::
::                                                                  ::
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::


 definition let H,E;
  func St(H,E) -> set means
:: ZF_MODEL:def 3
   ex A st
    (for x,y holds [x '=' y,{ v1 : for f st f = v1 holds f.x = f.y }] in A &
      [x 'in' y,{ v2 : for f st f = v2 holds f.x in f.y }] in A) &
    [H,it] in A &
    for H',a st [H',a] in A holds
     (H' is_equality implies
       a = { v3 : for f st f = v3 holds f.(Var1 H') = f.(Var2 H') }) &
     (H' is_membership implies
       a = { v4 : for f st f = v4 holds f.(Var1 H') in f.(Var2 H') }) &
     (H' is negative implies ex b st a = (VAL E) \ union { b } &
       [the_argument_of H',b] in A ) &
     (H' is conjunctive implies ex b,c st a = (union { b }) /\ union { c } &
       [the_left_argument_of H',b] in A & [the_right_argument_of H',c] in A) &
     (H' is universal implies ex b st
       a = { v5 : for X,f st X = b & f = v5 holds f in X &
        for g st for y st g.y <> f.y holds bound_in H' = y holds g in X } &
      [the_scope_of H',b] in A);
 end;

 definition let H,E;
 redefine func St(H,E) -> Subset of VAL E;
 end;


theorem :: ZF_MODEL:2
  for x,y,f holds f.x = f.y iff f in St(x '=' y,E);

theorem :: ZF_MODEL:3
  for x,y,f holds f.x in f.y iff f in St(x 'in' y,E);

theorem :: ZF_MODEL:4
  for H,f holds not f in St(H,E) iff f in St('not' H,E);

theorem :: ZF_MODEL:5
  for H,H',f holds f in St(H,E) & f in St(H',E) iff f in St(H '&' H',E);

theorem :: ZF_MODEL:6
  for x,H,f holds
  ( f in St(H,E) & for g st for y st g.y <> f.y holds x = y holds g in
 St(H,E) )
     iff f in St(All(x,H),E);

theorem :: ZF_MODEL:7
    H is_equality implies
   for f holds f.(Var1 H) = f.(Var2 H) iff f in St(H,E);

theorem :: ZF_MODEL:8
    H is_membership implies
   for f holds f.(Var1 H) in f.(Var2 H) iff f in St(H,E);

theorem :: ZF_MODEL:9
    H is negative implies
   for f holds not f in St(the_argument_of H,E) iff f in St(H,E);

theorem :: ZF_MODEL:10
    H is conjunctive implies
  for f holds f in St(the_left_argument_of H,E) &
   f in St(the_right_argument_of H,E) iff f in St(H,E);

theorem :: ZF_MODEL:11
    H is universal implies
  for f holds
   (f in St(the_scope_of H,E) &
     for g st for y st g.y <> f.y holds bound_in H = y
           holds g in St(the_scope_of H,E) )
   iff f in St(H,E);

:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::                                                             ::
::  The satisfaction of a ZF-formula in a model by a valuation ::
::                                                             ::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

 definition let D be non empty set; let f be Function of VAR,D; let H;
  pred D,f |= H means
:: ZF_MODEL:def 4
  f in St(H,D);
 end;


theorem :: ZF_MODEL:12
    for E,f,x,y holds E,f |= x '=' y iff f.x = f.y;

theorem :: ZF_MODEL:13
    for E,f,x,y holds E,f |= x 'in' y iff f.x in f.y;

theorem :: ZF_MODEL:14
  for E,f,H holds E,f |= H iff not E,f |= 'not' H;

theorem :: ZF_MODEL:15
  for E,f,H,H' holds E,f |= H '&' H' iff E,f |= H & E,f |= H';


theorem :: ZF_MODEL:16
  for E,f,H,x holds E,f |= All(x,H) iff
       for g st for y st g.y <> f.y holds x = y holds E,g |= H;

theorem :: ZF_MODEL:17
    for E,f,H,H' holds E,f |= H 'or' H' iff E,f |= H or E,f |= H';

theorem :: ZF_MODEL:18
  for E,f,H,H' holds E,f |= H => H' iff (E,f |= H implies E,f |= H');

theorem :: ZF_MODEL:19
    for E,f,H,H' holds E,f |= H <=> H' iff (E,f |= H iff E,f |= H');

theorem :: ZF_MODEL:20
  for E,f,H,x holds E,f |= Ex(x,H) iff
       ex g st (for y st g.y <> f.y holds x = y) & E,g |= H;

theorem :: ZF_MODEL:21
  for E,f,x for e being Element of E ex g st g.x = e &
    for z st z <> x holds g.z = f.z;

theorem :: ZF_MODEL:22
    E,f |= All(x,y,H) iff
   for g st for z st g.z <> f.z holds x = z or y = z holds E,g |= H;

theorem :: ZF_MODEL:23
    E,f |= Ex(x,y,H) iff
   ex g st (for z st g.z <> f.z holds x = z or y = z) & E,g |= H;

:::::::::::::::::::::::::::::::::::::::::::::::::::
::                                               ::
::  The satisfaction of a ZF-formula in a model  ::
::                                               ::
:::::::::::::::::::::::::::::::::::::::::::::::::::

 definition let E,H;
  pred E |= H means
:: ZF_MODEL:def 5
   for f holds E,f |= H;
 end;


canceled;

theorem :: ZF_MODEL:25
    E |= All(x,H) iff E |= H;

:::::::::::::::::::::::::::::::::
::  The axioms of ZF-language  ::
:::::::::::::::::::::::::::::::::

 definition
  func the_axiom_of_extensionality -> ZF-formula equals
:: ZF_MODEL:def 6

       All(x.0,x.1,All(x.2,x.2 'in' x.0 <=> x.2 'in' x.1) => x.0 '=' x.1);
  func the_axiom_of_pairs -> ZF-formula equals
:: ZF_MODEL:def 7

       All(x.0,x.1,Ex(x.2,All(x.3,
           x.3 'in' x.2 <=> (x.3 '=' x.0 'or' x.3 '=' x.1) )));
  func the_axiom_of_unions -> ZF-formula equals
:: ZF_MODEL:def 8

       All(x.0,Ex(x.1,All(x.2,
           x.2 'in' x.1 <=> Ex(x.3,x.2 'in' x.3 '&' x.3 'in' x.0) )));
  func the_axiom_of_infinity -> ZF-formula equals
:: ZF_MODEL:def 9

       Ex(x.0,x.1,x.1 'in' x.0 '&'
          All(x.2,x.2 'in' x.0 => Ex(x.3,x.3 'in' x.0 '&' 'not' x.3 '=' x.2 '&'
            All(x.4,x.4 'in' x.2 => x.4 'in' x.3) )));
  func the_axiom_of_power_sets -> ZF-formula equals
:: ZF_MODEL:def 10

       All(x.0,Ex(x.1,All(x.2,
           x.2 'in' x.1 <=> All(x.3,x.3 'in' x.2 => x.3 'in' x.0) )));
 end;


 definition let H be ZF-formula;
  func the_axiom_of_substitution_for H -> ZF-formula equals
:: ZF_MODEL:def 11

       All(x.3,Ex(x.0,All(x.4,H <=> x.4 '=' x.0))) =>
          All(x.1,Ex(x.2,All(x.4,x.4 'in' x.2 <=> Ex(x.3,x.3 'in'
 x.1 '&' H))));
 end;


 definition let E;
  attr E is being_a_model_of_ZF means
:: ZF_MODEL:def 12

     E is epsilon-transitive &
   E |= the_axiom_of_pairs &
   E |= the_axiom_of_unions &
   E |= the_axiom_of_infinity &
   E |= the_axiom_of_power_sets &
   for H st { x.0,x.1,x.2 } misses Free H holds
    E |= the_axiom_of_substitution_for H;
  end;
notation let E;
  synonym E is_a_model_of_ZF for E is being_a_model_of_ZF ; end;

