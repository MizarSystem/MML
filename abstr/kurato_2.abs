:: On the {K}uratowski Limit Operators
::  by Adam Grabowski
::
:: Received August 12, 2003
:: Copyright (c) 2003 Association of Mizar Users

environ

 vocabularies KURATO_2, FRECHET2, YELLOW_6, BOOLE, EUCLID, PRE_TOPC, COMPTS_1,
      SETFAM_1, METRIC_1, SUBSET_1, PCOMPS_1, RELAT_1, ORDINAL2, LATTICES,
      SEQ_2, PROB_1, SEQ_1, FUNCT_1, SEQM_3, FRECHET, ARYTM_3, CONNSP_2, ARYTM,
      TOPS_1, ARYTM_1, NEWTON, NORMSP_1, COMPLEX1, INT_1, FINSEQ_1, TOPREAL1,
      TOPREAL2, JORDAN9, JORDAN2C, SQUARE_1, GOBOARD9, ZF_REFLE, FUNCOP_1,
      MCART_1, WAYBEL_7, RLVECT_3, CARD_4, CANTOR_1, YELLOW_8;
 notations TARSKI, XBOOLE_0, SUBSET_1, ORDINAL1, NUMBERS, XCMPLX_0, ZFMISC_1,
      XXREAL_0, XREAL_0, REAL_1, NAT_1, SETFAM_1, MCART_1, DOMAIN_1, STRUCT_0,
      PRE_TOPC, TOPS_1, TOPS_2, COMPTS_1, RELAT_1, FUNCT_1, INT_1, FINSEQ_1,
      TBSP_1, RELSET_1, FUNCT_2, METRIC_1, PCOMPS_1, RLVECT_1, EUCLID,
      FUNCOP_1, BORSUK_1, CARD_3, PROB_1, LIMFUNC1, CONNSP_2, TOPREAL1,
      TOPREAL2, JORDAN2C, VALUED_0, GOBOARD9, YELLOW_8, FRECHET, FRECHET2,
      TOPRNS_1, JORDAN9, FUNCT_6;
 constructors SETFAM_1, REAL_1, NAT_1, PROB_1, LIMFUNC1, FUNCT_6, TOPS_1,
      BORSUK_1, TBSP_1, MONOID_0, TOPRNS_1, TOPREAL2, GOBOARD9, FUNCSDOM,
      FRECHET, JORDAN2C, FRECHET2, JORDAN9, SEQ_1, RECDEF_1, SEQM_3, VALUED_0,
      YELLOW_8, TOPS_3, FINSUB_1;
 registrations XBOOLE_0, SUBSET_1, RELAT_1, ORDINAL1, FUNCT_2, XXREAL_0,
      XREAL_0, NAT_1, INT_1, MEMBERED, STRUCT_0, TOPS_1, METRIC_1, PCOMPS_1,
      BORSUK_1, MONOID_0, EUCLID, TOPREAL2, TOPREAL5, JORDAN2C, FUNCOP_1,
      VALUED_0, PRE_TOPC;
 requirements REAL, SUBSET, BOOLE, NUMERALS, ARITHM;


begin

canceled;

theorem :: KURATO_2:2
  for F being Function, i being set st i in dom F holds meet F c= F.i;

canceled;

theorem :: KURATO_2:4
  for A, B, C, D being set st A meets B & C meets D holds [: A, C
  :] meets [: B, D :];

registration
  let X be set;
  cluster -> non empty SetSequence of X;
end;

registration
  let T be non empty set;
  cluster non-empty SetSequence of T;
end;

definition
  let T be 1-sorted;
  mode SetSequence of T is SetSequence of the carrier of T;
end;

definition
  let X be set, F be SetSequence of X;
  redefine func Union F -> Subset of X;
  redefine func meet F -> Subset of X;
end;

begin :: Lower and Upper Limit of Sequences of Subsets

definition
  let X be set, F be SetSequence of X;
  canceled 2;
  func lim_inf F -> Subset of X means
:: KURATO_2:def 3

  ex f being SetSequence of X st it
  = Union f & for n being Element of NAT holds f.n = meet (F ^\ n);
  func lim_sup F -> Subset of X means
:: KURATO_2:def 4

  ex f being SetSequence of X st it
  = meet f & for n being Element of NAT holds f.n = Union (F ^\ n);
end;

canceled;

theorem :: KURATO_2:6
  for X being set, F being SetSequence of X, x being set holds x in
  meet F iff for z being Element of NAT holds x in F.z;

theorem :: KURATO_2:7
  for X being set, F being SetSequence of X, x being set holds x in
  lim_inf F iff ex n being Element of NAT st for k being Element of NAT holds x
  in F.(n+k);

theorem :: KURATO_2:8
  for X being set, F being SetSequence of X, x being set holds x in
lim_sup F iff for n being Element of NAT ex k being Element of NAT st x in F.(n
  +k);

theorem :: KURATO_2:9
  for X being set, F being SetSequence of X holds lim_inf F c= lim_sup F;

theorem :: KURATO_2:10
  for X being set, F being SetSequence of X holds meet F c=
  lim_inf F;

theorem :: KURATO_2:11
  for X being set, F being SetSequence of X holds lim_sup F c=
  Union F;

theorem :: KURATO_2:12
  for X being set, F being SetSequence of X holds lim_inf F = (lim_sup
  Complement F)`;

theorem :: KURATO_2:13
  for X being set, A, B, C being SetSequence of X st (for n being
Element of NAT holds C.n = A.n /\ B.n) holds lim_inf C = lim_inf A /\ lim_inf B
;

theorem :: KURATO_2:14
  for X being set, A, B, C being SetSequence of X st (for n being
Element of NAT holds C.n = A.n \/ B.n) holds lim_sup C = lim_sup A \/ lim_sup B
;

theorem :: KURATO_2:15
  for X being set, A, B, C being SetSequence of X st (for n being
Element of NAT holds C.n = A.n \/ B.n) holds lim_inf A \/ lim_inf B c= lim_inf
  C;

theorem :: KURATO_2:16
  for X being set, A, B, C being SetSequence of X st (for n being
Element of NAT holds C.n = A.n /\ B.n) holds lim_sup C c= lim_sup A /\ lim_sup
  B;

theorem :: KURATO_2:17
  for X being set, A being SetSequence of X, B being Subset of X
  st (for n being Nat holds A.n = B) holds lim_sup A = B;

theorem :: KURATO_2:18
  for X being set, A being SetSequence of X, B being Subset of X
  st (for n being Nat holds A.n = B) holds lim_inf A = B;

theorem :: KURATO_2:19
  for X being set, A, B being SetSequence of X, C being Subset of X st (
  for n being Element of NAT holds B.n = C \+\ A.n) holds C \+\ lim_inf A c=
  lim_sup B;

theorem :: KURATO_2:20
  for X being set, A, B being SetSequence of X, C being Subset of X st (
  for n being Element of NAT holds B.n = C \+\ A.n) holds C \+\ lim_sup A c=
  lim_sup B;

begin :: Ascending and Descending Families of Subsets

theorem :: KURATO_2:21
  for f being Function st (for i being Element of NAT holds f.(i+1
  ) c= f.i) for i, j being Element of NAT st i <= j holds f.j c= f.i;

definition
  let T be set, S be SetSequence of T;
  redefine attr S is non-ascending means
:: KURATO_2:def 5

  for i being Element of NAT
  holds S.(i+1) c= S.i;
  redefine attr S is non-descending means
:: KURATO_2:def 6

  for i being Element of NAT
  holds S.i c= S.(i+1);
end;

canceled 2;

theorem :: KURATO_2:24
  for T being set, F being SetSequence of T, x being set st F is
non-ascending & ex k being Element of NAT st for n being Element of NAT st n >
  k holds x in F.n holds x in meet F;

theorem :: KURATO_2:25
  for T being set, F being SetSequence of T st F is non-ascending holds
  lim_inf F = meet F;

theorem :: KURATO_2:26
  for T being set, F being SetSequence of T st F is non-descending holds
  lim_sup F = Union F;

begin :: Constant and Convergent Sequences

definition
  let T be set, S be SetSequence of T;
  attr S is convergent means
:: KURATO_2:def 7

  lim_sup S = lim_inf S;
end;

theorem :: KURATO_2:27
  for T being set, S being SetSequence of T st S is constant holds
  the_value_of S is Subset of T;

registration
  let T be set;
  cluster constant -> convergent non-descending non-ascending SetSequence of T;
end;

registration
  let T be set;
  cluster constant non empty SetSequence of T;
end;

definition
  canceled;
  let T be set, S be convergent SetSequence of T;
  func Lim_K S -> Subset of T means
:: KURATO_2:def 9

  it = lim_sup S & it = lim_inf S;
end;

theorem :: KURATO_2:28
  for X being set, F being convergent SetSequence of X, x being set
holds x in Lim_K F iff ex n being Element of NAT st for k being Element of NAT
  holds x in F.(n+k);

begin :: Topological Lemmas

reserve n for Element of NAT;

registration
  let f be FinSequence of the carrier of TOP-REAL 2;
  cluster L~f -> closed;
end;

canceled;

theorem :: KURATO_2:30
  for x being Point of Euclid n, r being real number holds Ball (x
  , r) is open Subset of TOP-REAL n;

canceled;

theorem :: KURATO_2:32
  for p being Point of Euclid n, x, p' being Point of TOP-REAL n,
  r being real number st p = p' & x in Ball (p, r) holds |. x - p' .| < r;

theorem :: KURATO_2:33
  for p being Point of Euclid n, x, p' being Point of TOP-REAL n,
  r being real number st p = p' & |. x - p' .| < r holds x in Ball (p, r);

theorem :: KURATO_2:34
  for n being Element of NAT, r being Point of TOP-REAL n, X being
Subset of TOP-REAL n st r in Cl X holds ex seq being Real_Sequence of n st rng
  seq c= X & seq is convergent & lim seq = r;

registration
  let M be non empty MetrSpace;
  cluster TopSpaceMetr M -> first-countable;
end;

theorem :: KURATO_2:35
  for T being non empty TopSpace holds T is first-countable iff
  the TopStruct of T is first-countable;

registration
  let n be Element of NAT;
  cluster TOP-REAL n -> first-countable;
end;

theorem :: KURATO_2:36
  for A being Subset of TOP-REAL n, p being Point of TOP-REAL n, p'
  being Point of Euclid n st p = p' holds p in Cl A iff for r being real number
  st r > 0 holds Ball (p', r) meets A;

theorem :: KURATO_2:37
  for x, y being Point of TOP-REAL n, x' being Point of Euclid n st x' =
  x & x <> y ex r being Real st not y in Ball (x', r);

theorem :: KURATO_2:38
  for S being Subset of TOP-REAL n holds S is non Bounded iff for
r being Real st r > 0 holds ex x, y being Point of Euclid n st x in S & y in S
  & dist (x, y) > r;

theorem :: KURATO_2:39
  for a, b being real number, x, y being Point of Euclid n st Ball
  (x, a) meets Ball (y, b) holds dist (x, y) < a + b;

theorem :: KURATO_2:40
  for a, b, c being real number, x, y, z being Point of Euclid n
st Ball (x, a) meets Ball (z, c) & Ball (z, c) meets Ball (y, b) holds dist (x,
  y) < a + b + 2*c;

theorem :: KURATO_2:41
  for X, Y being non empty TopSpace, x being Point of X, y being
Point of Y, V being Subset of [: X, Y :] holds V is a_neighborhood of [: {x}, {
  y} :] iff V is a_neighborhood of [ x, y ];

begin :: Subsequences

canceled 3;

theorem :: KURATO_2:45
  for T being non empty 1-sorted, F, G being SetSequence of the
  carrier of T, A being Subset of T st G is subsequence of F & for i being Nat
  holds F.i = A holds G = F;

canceled;

theorem :: KURATO_2:47
  for T being non empty 1-sorted, S being SetSequence of the carrier of
T, R being subsequence of S, n being Element of NAT holds ex m being Element of
  NAT st m >= n & R.n = S.m;

begin :: Lower Topological Limit

definition
  let T be non empty TopSpace;
  let S be SetSequence of the carrier of T;
  canceled;
  func Lim_inf S -> Subset of T means
:: KURATO_2:def 11

  for p being Point of T holds p
  in it iff for G being a_neighborhood of p ex k being Element of NAT st for m
  being Element of NAT st m > k holds S.m meets G;
end;

theorem :: KURATO_2:48
  for S being SetSequence of the carrier of TOP-REAL n, p being
Point of TOP-REAL n, p' being Point of Euclid n st p = p' holds p in Lim_inf S
  iff for r being real number st r > 0 ex k being Element of NAT st for m being
  Element of NAT st m > k holds S.m meets Ball (p', r);

theorem :: KURATO_2:49
  for T being non empty TopSpace, S being SetSequence of the
  carrier of T holds Cl Lim_inf S = Lim_inf S;

theorem :: KURATO_2:50
  for T being non empty TopSpace, S being SetSequence of the
  carrier of T holds Lim_inf S is closed;

theorem :: KURATO_2:51
  for T being non empty TopSpace, R, S being SetSequence of the carrier
  of T st R is subsequence of S holds Lim_inf S c= Lim_inf R;

theorem :: KURATO_2:52
  for T being non empty TopSpace, A, B being SetSequence of the
carrier of T st for i being Element of NAT holds A.i c= B.i holds Lim_inf A c=
  Lim_inf B;

theorem :: KURATO_2:53
  for T being non empty TopSpace, A, B, C being SetSequence of the
carrier of T st for i being Element of NAT holds C.i = A.i \/ B.i holds Lim_inf
  A \/ Lim_inf B c= Lim_inf C;

theorem :: KURATO_2:54
  for T being non empty TopSpace, A, B, C being SetSequence of the
carrier of T st for i being Element of NAT holds C.i = A.i /\ B.i holds Lim_inf
  C c= Lim_inf A /\ Lim_inf B;

theorem :: KURATO_2:55
  for T being non empty TopSpace, F, G being SetSequence of the
carrier of T st for i being Element of NAT holds G.i = Cl (F.i) holds Lim_inf G
  = Lim_inf F;

theorem :: KURATO_2:56
  for S being SetSequence of the carrier of TOP-REAL n, p being Point of
  TOP-REAL n holds (ex s being Real_Sequence of n st s is convergent & (for x
  being Element of NAT holds s.x in S.x) & p = lim s) implies p in Lim_inf S;

theorem :: KURATO_2:57
  for T being non empty TopSpace, P being Subset of T, s being
  SetSequence of the carrier of T st (for i being Nat holds s.i c= P) holds
  Lim_inf s c= Cl P;

theorem :: KURATO_2:58
  for T being non empty TopSpace, F being SetSequence of the
  carrier of T, A being Subset of T st for i being Nat holds F.i = A holds
  Lim_inf F = Cl A;

theorem :: KURATO_2:59
  for T being non empty TopSpace, F being SetSequence of the carrier of
T, A being closed Subset of T st for i being Nat holds F.i = A holds Lim_inf F
  = A;

theorem :: KURATO_2:60
  for S being SetSequence of the carrier of TOP-REAL n, P being
Subset of TOP-REAL n st P is Bounded & (for i being Element of NAT holds S.i c=
  P) holds Lim_inf S is Bounded;

theorem :: KURATO_2:61
  for S being SetSequence of the carrier of TOP-REAL 2, P being Subset
  of TOP-REAL 2 st P is Bounded & (for i being Element of NAT holds S.i c= P)
  holds Lim_inf S is compact;

theorem :: KURATO_2:62
  for A, B being SetSequence of the carrier of TOP-REAL n, C being
  SetSequence of the carrier of [: TOP-REAL n, TOP-REAL n :] st for i being
  Element of NAT holds C.i = [:A.i, B.i:] holds [: Lim_inf A, Lim_inf B :] =
  Lim_inf C;

theorem :: KURATO_2:63
  for S being SetSequence of TOP-REAL 2 holds lim_inf S c= Lim_inf S;

theorem :: KURATO_2:64
  for C being Simple_closed_curve, i being Element of NAT holds Fr (UBD
  L~Cage (C,i))` = L~Cage (C,i);

begin :: Upper Topological Limit

definition
  let T be non empty TopSpace;
  let S be SetSequence of the carrier of T;
  func Lim_sup S -> Subset of T means
:: KURATO_2:def 12

  for x being set holds x in it
  iff ex A being subsequence of S st x in Lim_inf A;
end;

theorem :: KURATO_2:65
  for N being Element of NAT, F being sequence of TOP-REAL N, x being
  Point of TOP-REAL N, x' being Point of Euclid N st x = x' holds x
is_a_cluster_point_of F iff for r being real number, n being Element of NAT st
  r > 0 holds ex m being Element of NAT st n <= m & F.m in Ball (x', r);

theorem :: KURATO_2:66
  for T being non empty TopSpace, A being SetSequence of the
  carrier of T holds Lim_inf A c= Lim_sup A;

theorem :: KURATO_2:67
  for A, B, C being SetSequence of the carrier of TOP-REAL 2 st (
for i being Element of NAT holds A.i c= B.i) & C is subsequence of A holds ex D
  being subsequence of B st for i being Element of NAT holds C.i c= D.i;

theorem :: KURATO_2:68
  for A, B, C being SetSequence of the carrier of TOP-REAL 2 st (for i
being Element of NAT holds A.i c= B.i) & C is subsequence of B holds ex D being
  subsequence of A st for i being Element of NAT holds D.i c= C.i;

theorem :: KURATO_2:69  :: (2)
  for A, B being SetSequence of the carrier of TOP-REAL 2 st for i
  being Element of NAT holds A.i c= B.i holds Lim_sup A c= Lim_sup B;

theorem :: KURATO_2:70 :: (3)
  for A, B, C being SetSequence of the carrier of TOP-REAL 2 st for i
  being Element of NAT holds C.i = A.i \/ B.i holds Lim_sup A \/ Lim_sup B c=
  Lim_sup C;

theorem :: KURATO_2:71 :: (4)
  for A, B, C being SetSequence of the carrier of TOP-REAL 2 st for i
  being Element of NAT holds C.i = A.i /\ B.i holds Lim_sup C c= Lim_sup A /\
  Lim_sup B;

theorem :: KURATO_2:72
  for A, B being SetSequence of the carrier of TOP-REAL 2, C, C1
  being SetSequence of the carrier of [: TOP-REAL 2, TOP-REAL 2 :] st (for i
being Element of NAT holds C.i = [: A.i, B.i :]) & C1 is subsequence of C holds
  ex A1, B1 being SetSequence of the carrier of TOP-REAL 2 st A1 is subsequence
of A & B1 is subsequence of B & for i being Element of NAT holds C1.i = [: A1.i
  , B1.i :];

theorem :: KURATO_2:73
  for A, B being SetSequence of the carrier of TOP-REAL 2, C being
  SetSequence of the carrier of [: TOP-REAL 2, TOP-REAL 2 :] st for i being
  Element of NAT holds C.i = [: A.i, B.i :] holds Lim_sup C c= [: Lim_sup A,
  Lim_sup B :];

theorem :: KURATO_2:74
  for T being non empty TopSpace, F being SetSequence of the
  carrier of T, A being Subset of T st for i being Nat holds F.i = A holds
  Lim_inf F = Lim_sup F;

theorem :: KURATO_2:75
  for F being SetSequence of the carrier of TOP-REAL 2, A being Subset
  of TOP-REAL 2 st for i being Nat holds F.i = A holds Lim_sup F = Cl A;

theorem :: KURATO_2:76
  for F, G being SetSequence of the carrier of TOP-REAL 2 st for i being
  Element of NAT holds G.i = Cl (F.i) holds Lim_sup G = Lim_sup F;

