:: Some Properties Of Some Special Matrices
::  by Xiaopeng Yue , Xiquan Liang and Zhongpin Sun
:: 
:: Received December 7, 2005
:: Copyright (c) 2005 Association of Mizar Users

environ

 vocabularies VECTSP_1, RLVECT_1, MATRIX_1, ARYTM_1, FINSEQ_1, TREES_1,
      RELAT_1, GROUP_1, MATRIX_2, QC_LANG1, FUNCOP_1, MATRIX_6, RELAT_2;
 notations TARSKI, ZFMISC_1, SUBSET_1, XREAL_0, RELAT_1, FINSEQ_1, RLVECT_1,
      GROUP_1, VECTSP_1, FINSEQ_2, NAT_1, STRUCT_0, ARYTM_3, MATRIX_1,
      MATRIX_2, MATRIX_3, MATRIX_4;
 constructors VECTSP_1, FVSUM_1, MATRIX_1, NAT_1, RELSET_1, XREAL_0, GROUP_1,
      MATRIX_2, RELAT_1, MATRIX_3, MATRIX_4, FINSEQ_4, ARYTM_3, RELAT_2;
 registrations FINSEQ_1, VECTSP_1, STRUCT_0, FINSEQ_2, RELSET_1, GROUP_1,
      FVSUM_1, RELAT_1, ARYTM_3, MATRIX_1, FUNCT_1, MATRIX_2, NAT_1, FUNCT_2,
      INT_1;
 requirements NUMERALS, SUBSET, BOOLE, ARITHM, REAL;


begin

 reserve i,j,k,l,n,m for Nat,
         K for Field,
         s,t,v for FinSequence,
         a,b for Element of K,
         M,M1,M2,M3,M4,M5 for Matrix of n,K;
 reserve A,B for Matrix of K;

definition let n be Nat, K be Field, M1,M2 be Matrix of n,K;
  pred M1 is_permutable_with M2 means
:: MATRIX_6:def 1
    M1 * M2 = M2 * M1;
  symmetry;
end;

definition let n be Nat,K be Field,M1,M2 be Matrix of n,K;
  pred M1 is_reverse_of M2 means
:: MATRIX_6:def 2
    M1*M2 = M2*M1 & M1*M2 = 1.(K,n);
  symmetry;
end;

definition let n be Nat, K be Field; let M1 be Matrix of n,K;
  attr M1 is Reversible means
:: MATRIX_6:def 3
    ex M2 be Matrix of n,K st M1 is_reverse_of M2;
end;

definition let n, K; let M1 be Matrix of n,K;
  redefine func -M1 -> Matrix of n,K;
end;

definition let n, K; let M1,M2 be Matrix of n,K;
  redefine func M1+M2 -> Matrix of n,K;
end;

definition let n, K; let M1,M2 be Matrix of n,K;
  redefine func M1-M2 -> Matrix of n,K;
end;

definition let n, K; let M1,M2 be Matrix of n,K;
  redefine func M1*M2 -> Matrix of n,K;
end;

theorem :: MATRIX_6:1
  for K being Field,A being Matrix of K st len A>0 & width A>0 holds
    (0.(K,len A,len A))*A=0.(K,len A,width A);

theorem :: MATRIX_6:2
  for K being Field,A being Matrix of K st len A>0 & width A>0 holds
    A*(0.(K,width A,width A))=0.(K,len A,width A);

theorem :: MATRIX_6:3
  n>0 implies M1 is_permutable_with 0.(K,n,n);

theorem :: MATRIX_6:4
  M1 is_permutable_with M2 & M2 is_permutable_with M3 &
    M1 is_permutable_with M3 implies M1 is_permutable_with M2*M3;

theorem :: MATRIX_6:5
  M1 is_permutable_with M2 & M1 is_permutable_with M3 & n>0 implies
    M1 is_permutable_with M2+M3;

theorem :: MATRIX_6:6
  M1 is_permutable_with 1.(K,n);

theorem :: MATRIX_6:7
  M2 is_reverse_of M3 & M1 is_reverse_of M3 implies M1=M2;

definition let n be Nat, K be Field, M1 be Matrix of n,K;
  assume  M1 is Reversible;
  func M1~ -> Matrix of n,K means
:: MATRIX_6:def 4
    it is_reverse_of M1;
end;

theorem :: MATRIX_6:8
  (1.(K,n))~ = 1.(K,n) & 1.(K,n) is Reversible;

theorem :: MATRIX_6:9
  ((1.(K,n))~)~ = 1.(K,n);

theorem :: MATRIX_6:10
  n>0 implies (1.(K,n))@ = 1.(K,n);

theorem :: MATRIX_6:11
  for K being Field, n being Nat, M being Matrix of n,K st
    M = (1.(K,n))@ & n > 0 holds M~ = 1.(K,n);

theorem :: MATRIX_6:12
  M1@=M2 & M3 is_reverse_of M1 & M=M3@ & n>0 implies
    M2 is_reverse_of M;

theorem :: MATRIX_6:13
  M is Reversible & n > 0 & M1=M@ & M2=M~@ implies M1~= M2;

theorem :: MATRIX_6:14
  for K being Field, n being Nat, M1,M2,M3,M4 being Matrix of n,K st
    M3 is_reverse_of M1 & M4 is_reverse_of M2 holds
      M3*M4 is_reverse_of M2*M1;

theorem :: MATRIX_6:15
  for K being Field, n being Nat, M1,M2 being Matrix of n,K st
    M2 is_reverse_of M1 holds M1 is_permutable_with M2;

theorem :: MATRIX_6:16
  M is Reversible implies M~ is Reversible & (M~)~= M;

theorem :: MATRIX_6:17
  n>0 & M1*M2=0.(K,n,n) & M1 is Reversible implies
    M1 is_permutable_with M2;

theorem :: MATRIX_6:18
  n>0 & M1=M1*M2 & M1 is Reversible implies
    M1 is_permutable_with M2;

theorem :: MATRIX_6:19
  n>0 & M1=M2*M1 & M1 is Reversible implies
    M1 is_permutable_with M2;

definition let n be Nat, K be Field; let M1 be Matrix of n,K;
  attr M1 is symmetrical means
:: MATRIX_6:def 5
    M1@=M1;
end;

theorem :: MATRIX_6:20
  n>0 implies 1.(K,n) is symmetrical;

theorem :: MATRIX_6:21
  n>0 implies ((n,n)-->a)@ = (n,n)-->a;

theorem :: MATRIX_6:22
  n>0 implies ((n,n)-->a) is symmetrical;

theorem :: MATRIX_6:23
  n > 0 & M1 is symmetrical & M2 is symmetrical implies
    (M1 is_permutable_with M2 iff M1*M2 is symmetrical);

theorem :: MATRIX_6:24
  n > 0 implies (M1+M2)@=M1@+M2@;

theorem :: MATRIX_6:25
  n>0 & M1 is symmetrical & M2 is symmetrical implies
    M1+M2 is symmetrical;

theorem :: MATRIX_6:26
  M1 is Upper_Triangular_Matrix of n,K &
    M1 is Lower_Triangular_Matrix of n,K & n>0 implies
      M1 is symmetrical;

theorem :: MATRIX_6:27
  for K being Field,n being Nat,M1,M2 being Matrix of n,K st
    n > 0 holds (-M1)@=-(M1@);

theorem :: MATRIX_6:28
  for K being Field, n being Nat, M1,M2 being Matrix of n,K st
    M1 is symmetrical & n>0 holds -M1 is symmetrical;

theorem :: MATRIX_6:29
  for K being Field,n being Nat,M1,M2 being Matrix of n,K st
    n>0 & M1 is symmetrical & M2 is symmetrical holds
      M1-M2 is symmetrical;

definition let n be Nat,K be Field;let M1 be Matrix of n,K;
  attr M1 is antisymmetric means
:: MATRIX_6:def 6
    M1@=-M1;
end;

theorem :: MATRIX_6:30
  for K being Fanoian Field,n being Nat,M1 being Matrix of n,K st
    M1 is symmetrical & M1 is antisymmetric & n>0 holds
      M1=0.(K,n,n);

theorem :: MATRIX_6:31
  for K being Fanoian Field,n,i being Nat,M1 being Matrix of n,K st
    M1 is antisymmetric & n>0 & i in Seg n holds M1*(i,i) =0.K;

theorem :: MATRIX_6:32
  for K being Field,n being Nat,M1,M2 being Matrix of n,K st
    n>0 & M1 is antisymmetric & M2 is antisymmetric holds
      M1+M2 is antisymmetric;

theorem :: MATRIX_6:33
  for K being Field,n being Nat,M1,M2 being Matrix of n,K st
    M1 is antisymmetric & n>0 holds -M1 is antisymmetric;

theorem :: MATRIX_6:34
  for K being Field,n being Nat,M1,M2 being Matrix of n,K st
    n>0 & M1 is antisymmetric & M2 is antisymmetric holds
      M1-M2 is antisymmetric;

theorem :: MATRIX_6:35
  M2=M1-M1@ & n>0 implies M2 is antisymmetric;

theorem :: MATRIX_6:36
  n>0 implies
    (M1 is_permutable_with M2 iff (M1+M2)*(M1+M2)=M1*M1+M1*M2+M1*M2+M2*M2);

theorem :: MATRIX_6:37
  n>0 & M1 is Reversible & M2 is Reversible implies
    M1*M2 is Reversible & (M1*M2)~=(M2~)*(M1~);

theorem :: MATRIX_6:38
  n > 0 & M1 is Reversible & M2 is Reversible &
    M1 is_permutable_with M2 implies
      M1*M2 is Reversible & (M1*M2)~ = (M1~)*(M2~);

theorem :: MATRIX_6:39
  n >0 & M1 is Reversible & M2 is Reversible & M1*M2=1.(K,n) implies
    M1 is_reverse_of M2;

theorem :: MATRIX_6:40
  n>0 & M1 is Reversible & M2 is Reversible & M2*M1=1.(K,n) implies
    M1 is_reverse_of M2;

theorem :: MATRIX_6:41
  n > 0 & M1 is Reversible & M1 is_permutable_with M2 implies
    M1~ is_permutable_with M2;

definition let n be Nat, K be Field; let M1 be Matrix of n,K;
  attr M1 is Orthogonal means
:: MATRIX_6:def 7
    M1 is Reversible & M1@ = M1~;
end;

theorem :: MATRIX_6:42
  n > 0 implies
    ((M1*(M1@)=1.(K,n) & M1 is Reversible) iff M1 is Orthogonal);

theorem :: MATRIX_6:43
  n >0 implies
    ((M1 is Reversible & (M1@)*M1=1.(K,n)) iff M1 is Orthogonal);

theorem :: MATRIX_6:44
  n > 0 & M1 is Orthogonal implies (M1@)*M1=M1*(M1@);

theorem :: MATRIX_6:45
  n > 0 & M1 is Orthogonal & M1 is_permutable_with M2 & M3=M1@ implies
    M3 is_permutable_with M2;

theorem :: MATRIX_6:46
  n > 0 & M1 is Reversible & M2 is Reversible implies
    M1*M2 is Reversible & (M1*M2)~=M2~*M1~;

theorem :: MATRIX_6:47
  n >0 & M1 is Orthogonal & M2 is Orthogonal implies
    M1*M2 is Orthogonal;

theorem :: MATRIX_6:48
  n >0 & M1 is Orthogonal & M1 is_permutable_with M2 & M3=M1@ implies
    M3 is_permutable_with M2;

theorem :: MATRIX_6:49
  n > 0 & M1 is_permutable_with M2 implies M1+M1 is_permutable_with M2;

theorem :: MATRIX_6:50
  n >0 & M1 is_permutable_with M2 implies M1+M2 is_permutable_with M2;

theorem :: MATRIX_6:51
  n >0 & M1 is_permutable_with M2 implies
    M1+M1 is_permutable_with M2+M2;

theorem :: MATRIX_6:52
  n >0 & M1 is_permutable_with M2 implies M1+M2 is_permutable_with M2+M2;

theorem :: MATRIX_6:53
  n >0 & M1 is_permutable_with M2 implies
    M1+M2 is_permutable_with M1+M2;

theorem :: MATRIX_6:54
  n>0 & M1 is_permutable_with M2 implies
    M1*M2 is_permutable_with M2;

theorem :: MATRIX_6:55
  n>0 & M1 is_permutable_with M2 implies
    M1*M1 is_permutable_with M2;

theorem :: MATRIX_6:56
  n>0 & M1 is_permutable_with M2 implies
    M1*M1 is_permutable_with M2*M2;

theorem :: MATRIX_6:57
  n>0 & M1 is_permutable_with M2 & M3=M1@ & M4 = M2@ implies
    M3 is_permutable_with M4;

theorem :: MATRIX_6:58
  n>0 & M1 is Reversible & M2 is Reversible & M3 is Reversible implies
    M1*M2*M3 is Reversible & (M1*M2*M3)~=M3~*M2~*M1~;

theorem :: MATRIX_6:59
  n > 0 & M1 is Orthogonal & M2 is Orthogonal & M3 is Orthogonal implies
    M1*M2*M3 is Orthogonal;

theorem :: MATRIX_6:60
  n>0 implies 1.(K,n) is Orthogonal;

theorem :: MATRIX_6:61
  n > 0 & M1 is Orthogonal & M2 is Orthogonal implies
    M1~*M2 is Orthogonal;
