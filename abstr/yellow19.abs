:: On the characterizations of compactness
::  by Grzegorz Bancerek , Noboru Endou and Yuji Sakai
::
:: Received July 29, 2001
:: Copyright (c) 2001 Association of Mizar Users

environ

 vocabulary YELLOW_1, ORDERS_1, WELLORD2, COLLSP, FILTER_0, LATTICES, BOOLE,
      PRE_TOPC, SUBSET_1, CONNSP_2, WAYBEL_0, TOPS_1, WAYBEL_7, RELAT_1,
      RELAT_2, FUNCT_1, FINSET_1, SETFAM_1, QUANTAL1, LATTICE3, ORDINAL2,
      MCART_1, YELLOW_6, SEQ_2, SUB_METR, CANTOR_1, COMPTS_1, OPPCAT_1,
      ARYTM_3, CLASSES1, YELLOW_0, CAT_1, BHSP_3, YELLOW19;
 notation TARSKI, XBOOLE_0, ZFMISC_1, SUBSET_1, RELAT_1, MCART_1, SETFAM_1,
      FINSET_1, FUNCT_1, RELAT_2, RELSET_1, FUNCT_2, CLASSES1, STRUCT_0,
      PRE_TOPC, TOPS_1, TOPS_2, TEX_2, COMPTS_1, CONNSP_2, CANTOR_1, ORDERS_1,
      LATTICE3, YELLOW_0, WAYBEL_0, YELLOW_1, WAYBEL_7, YELLOW_6, WAYBEL_9,
      YELLOW_7, WAYBEL32;
 constructors TOLER_1, RELAT_2, WAYBEL_1, CLASSES1, TOPS_1, TOPS_2, CONNSP_2,
      CANTOR_1, WAYBEL_7, WAYBEL32, TEX_2, REALSET1, MEMBERED;
 clusters SUBSET_1, FINSET_1, STRUCT_0, PRE_TOPC, TOPS_1, PUA2MSS1, RELSET_1,
      RLVECT_2, LATTICE3, YELLOW_0, WAYBEL_0, YELLOW_1, WAYBEL_7, WAYBEL_9,
      YELLOW_6, WAYBEL32, MEMBERED, RELAT_1, ZFMISC_1;
 requirements BOOLE, SUBSET;


begin

reserve x,y,X for set;

canceled;

theorem :: YELLOW19:2
 for X being non empty set
 for F being proper Filter of BoolePoset X
 for A being set st A in F
  holds A is not empty;

definition
 let T be non empty TopSpace;
 let x be Point of T;
 func NeighborhoodSystem x -> Subset of BoolePoset [#]T equals
:: YELLOW19:def 1

  {A where A is a_neighborhood of x: not contradiction};
end;


theorem :: YELLOW19:3
 for T being non empty TopSpace, x being Point of T, A being set
  holds A in NeighborhoodSystem x iff A is a_neighborhood of x;

registration
 let T be non empty TopSpace;
 let x be Point of T;
 cluster NeighborhoodSystem x -> non empty proper upper filtered;
 coherence
  proof consider A0 being a_neighborhood of x;
      A0 in NeighborhoodSystem x by Th3;
   hence NeighborhoodSystem x is non empty;
   set X = the carrier of T, L = BoolePoset [#]T;
   set Y = NeighborhoodSystem x;
A1: the carrier of BoolePoset X = bool X by WAYBEL_7:4;
A2: X = [#]T by PRE_TOPC:12;
A3:  {} is not a_neighborhood of x by CONNSP_2:6;
      {} c= X by XBOOLE_1:2;
    then {} in bool X & not {} in NeighborhoodSystem x by A3,Th3;
   hence NeighborhoodSystem x is proper by A1,A2,TEX_2:5;
   thus NeighborhoodSystem x is upper
     proof let a,b be Element of L; assume a in Y;
      then reconsider A = a as a_neighborhood of x by Th3;
      reconsider B = b as Subset of T by A1,A2;
      assume a <= b; then A c= B by YELLOW_1:2;
       then Int A c= Int B & x in Int A by CONNSP_2:def 1,TOPS_1:48;
       then b is a_neighborhood of x by CONNSP_2:def 1;
      hence thesis by Th3;
     end;
   let a,b be Element of L; assume a in Y & b in Y;
   then reconsider A = a, B = b as a_neighborhood of x by Th3;
    A4: A /\ B is a_neighborhood of x by CONNSP_2:4;
then A /\ B in NeighborhoodSystem x by Th3;
   then reconsider z = A /\ B as Element of L;
   take z; z c= A & z c= B by XBOOLE_1:17;
   hence thesis by A4,Th3,YELLOW_1:2;
  end;
end;


theorem :: YELLOW19:4
 for T being non empty TopSpace, x being Point of T
 for F being upper Subset of BoolePoset [#]T holds
   x is_a_convergence_point_of F, T iff NeighborhoodSystem x c= F;

theorem :: YELLOW19:5
   for T being non empty TopSpace, x being Point of T
  holds x is_a_convergence_point_of NeighborhoodSystem x, T;

theorem :: YELLOW19:6
   for T being non empty TopSpace
 for A being Subset of T holds
  A is open iff
    for x being Point of T st x in A
    for F being Filter of BoolePoset [#]T
     st x is_a_convergence_point_of F, T
     holds A in F;

definition
 let S be non empty 1-sorted;
 let N be non empty NetStr over S;
 mode Subset of S,N -> Subset of S means
:: YELLOW19:def 2

  ex i being Element of N st it = rng the mapping of N|i;
end;


theorem :: YELLOW19:7
 for S being non empty 1-sorted
 for N being non empty NetStr over S
 for i being Element of N
  holds rng the mapping of N|i is Subset of S, N;

registration
 let S be non empty 1-sorted;
 let N be reflexive non empty NetStr over S;
 cluster -> non empty Subset of S,N;
 coherence
  proof let A be Subset of S,N;
   consider i being Element of N such that
A1: A = rng the mapping of N|i by Def2;
   thus thesis by A1;
  end;
end;


theorem :: YELLOW19:8
 for S being non empty 1-sorted, N being net of S
 for i being Element of N, x being set holds
  x in rng the mapping of N|i iff
     ex j being Element of N st i <= j & x = N.j;

theorem :: YELLOW19:9
 for S being non empty 1-sorted, N being net of S
 for A being Subset of S,N holds N is_eventually_in A;

theorem :: YELLOW19:10
   for S being non empty 1-sorted, N being net of S
 for F being finite non empty set st
    for A being Element of F holds A is Subset of S,N
 ex B being Subset of S,N st B c= meet F;

definition
 let T be non empty 1-sorted;
 let N be non empty NetStr over T;
 func a_filter N -> Subset of BoolePoset [#]T equals
:: YELLOW19:def 3

  {A where A is Subset of T: N is_eventually_in A};
end;


theorem :: YELLOW19:11
 for T being non empty 1-sorted
 for N being non empty NetStr over T
 for A being set
  holds A in a_filter N iff N is_eventually_in A & A is Subset of T;

registration
 let T be non empty 1-sorted;
 let N be non empty NetStr over T;
 cluster a_filter N -> non empty upper;
 coherence
  proof set F = a_filter N;
   set X = the carrier of T, L = BoolePoset [#]T;
A1: BoolePoset X = InclPoset bool X by YELLOW_1:4
       .= RelStr(#bool X, RelIncl bool X#) by YELLOW_1:def 1;
A2: [#]T = X by PRE_TOPC:12;
      N is_eventually_in [#]T
     proof consider i being Element of N;
      take i; thus thesis by A2;
     end;
   hence F is non empty by Th11;
   let a,b be Element of L; assume a in F;
then A3: N is_eventually_in a by Th11;
   assume a <= b; then a c= b by YELLOW_1:2;
    then b is Subset of T & N is_eventually_in b
     by A1,A2,A3,WAYBEL_0:8;
   hence thesis by Th11;
  end;
end;


registration
 let T be non empty 1-sorted;
 let N be net of T;
 cluster a_filter N -> proper filtered;
 coherence
  proof set F = a_filter N;
   set X = the carrier of T, L = BoolePoset [#]T;
A1: BoolePoset X = InclPoset bool X by YELLOW_1:4
       .= RelStr(#bool X, RelIncl bool X#) by YELLOW_1:def 1;
A2: [#]T = X by PRE_TOPC:12;
      now thus {} c= X by XBOOLE_1:2;
     assume {} in F;
      then N is_eventually_in {} by Th11;
     then consider i being Element of N such that
A3:   for j being Element of N st i <= j holds N.j in {} by WAYBEL_0:def 11;
     consider j being Element of N such that
A4:   i <= j & i <= j by YELLOW_6:def 5;
     thus contradiction by A3,A4;
    end;
    then F <> bool X;
   hence F is proper by A1,A2,TEX_2:5;
   let a,b be Element of L; assume a in F & b in F;
then A5: N is_eventually_in a & N is_eventually_in b by Th11;
   then consider i1 being Element of N such that
A6: for j being Element of N st i1 <= j holds N.j in a by WAYBEL_0:def 11;
   consider i2 being Element of N such that
A7: for j being Element of N st i2 <= j holds N.j in b
     by A5,WAYBEL_0:def 11;
   consider i being Element of N such that
A8: i1 <= i & i2 <= i by YELLOW_6:def 5;
   take z = a"/\"b;
A9: z = a/\b & z is Subset of T by A1,A2,YELLOW_1:17;
      now let j be Element of N; assume i <= j;
      then i1 <= j & i2 <= j by A8,ORDERS_1:26;
      then N.j in a & N.j in b by A6,A7;
     hence N.j in a/\b by XBOOLE_0:def 3;
    end;
    then N is_eventually_in z by A9,WAYBEL_0:def 11;
   hence z in F by A9,Th11;
      z c= a & z c= b by A9,XBOOLE_1:17;
   hence thesis by YELLOW_1:2;
  end;
end;


theorem :: YELLOW19:12
 for T being non empty TopSpace
 for N being net of T
 for x being Point of T holds
    x is_a_cluster_point_of N iff x is_a_cluster_point_of a_filter N, T;

theorem :: YELLOW19:13
 for T being non empty TopSpace
 for N being net of T
 for x being Point of T holds
    x in Lim N iff x is_a_convergence_point_of a_filter N, T;

definition
 let L be non empty 1-sorted;
 let O be non empty Subset of L;
 let F be Filter of BoolePoset O;
 func a_net F -> strict non empty NetStr over L means
:: YELLOW19:def 4

  the carrier of it
     = {[a, f] where a is Element of L, f is Element of F: a in f} &
  (for i,j being Element of it holds i <= j iff j`2 c= i`2) &
  for i being Element of it holds it.i = i`1;
end;


registration
 let L be non empty 1-sorted;
 let O be non empty Subset of L;
 let F be Filter of BoolePoset O;
 cluster a_net F -> reflexive transitive;
 coherence
 proof
     for x,y,z being set st x in the carrier of a_net F &
   y in the carrier of a_net F & z in the carrier of a_net F &
   [x,y] in the InternalRel of a_net F & [y,z] in the InternalRel of a_net F
   holds [x,z] in the InternalRel of a_net F
   proof
    let x,y,z be set;
    assume that A1:x in the carrier of a_net F and
A2: y in the carrier of a_net F and
A3: z in the carrier of a_net F and
A4: [x,y] in the InternalRel of a_net F and
A5: [y,z] in the InternalRel of a_net F;
    reconsider i=x as Element of a_net F by A1;
    reconsider j=y as Element of a_net F by A2;
    reconsider k=z as Element of a_net F by A3;
      i <= j & j <= k by A4,A5,ORDERS_1:def 9;
    then j`2 c= i`2 & k`2 c= j`2 by Def4;
    then k`2 c= i`2 by XBOOLE_1:1;
    then i <= k by Def4;
    hence thesis by ORDERS_1:def 9;
   end;
then A6:the InternalRel of (a_net F) is_transitive_in the carrier of (a_net F)
   by RELAT_2:def 8;
     for x being set st x in the carrier of a_net F holds
   [x,x] in the InternalRel of a_net F
   proof
    let x being set;
    assume x in the carrier of a_net F;
    then reconsider i=x as Element of a_net F;
      i`2 c= i`2;
    then i <= i by Def4;
    hence thesis by ORDERS_1:def 9;
   end;
   then the InternalRel of (a_net F) is_reflexive_in the carrier of (a_net F)
   by RELAT_2:def 1;
   hence thesis by A6,ORDERS_1:def 4,def 5;
 end;
end;


registration
 let L be non empty 1-sorted;
 let O be non empty Subset of L;
 let F be proper Filter of BoolePoset O;
 cluster a_net F -> directed;
 coherence
 proof
   set S = {[a, f] where a is Element of L, f is Element of F: a in f};
     for x,y being Element of a_net F st x in [#](a_net F) & y in [#](a_net F)
    ex z being Element of a_net F st z in [#](a_net F) & x <= z & y <= z
   proof
    let x,y being Element of a_net F;
    assume x in [#](a_net F) & y in [#](a_net F);
      x in the carrier of a_net F & y in the carrier of a_net F;
then A1: x in S & y in S by Def4;
    then consider a being Element of L, f being Element of F such that
A2: x = [a, f] & a in f;
    consider b being Element of L, g being Element of F such that
A3: y = [b, g] & b in g by A1;
    reconsider f as Element of BoolePoset O;
    reconsider g as Element of BoolePoset O;
    reconsider h = f "/\" g as Element of F by WAYBEL_0:41;
    consider s being Element of h;
      not Bottom (BoolePoset O) in F by WAYBEL_7:8;
    then not {} in F by YELLOW_1:18;
then A4:  h <> {};
then A5: s in h;
      h c= O by WAYBEL_8:28;
    then s in O by A5;
    then reconsider s as Element of L;
      [s,h] in S by A4;
then A6: [s,h] in the carrier of a_net F by Def4;
    then reconsider z = [s,h] as Element of a_net F;
    reconsider i = x, j = y, k = z as Element of a_net F;
A7: i`2 = f & j`2 = g & k`2 = h by A2,A3,MCART_1:def 2;
      h c= f /\ g & f /\ g c= f & f /\ g c= g by XBOOLE_1:17,YELLOW_1:17;
    then A8: h c= f & h c= g by XBOOLE_1:1;
    take z;
    thus thesis by A6,A7,A8,Def4,PRE_TOPC:12;
   end;
   then [#](a_net F) is directed by WAYBEL_0:def 1;
  hence a_net F is directed by WAYBEL_0:def 6;
 end;
end;


theorem :: YELLOW19:14
 for T being non empty 1-sorted
 for F being Filter of BoolePoset [#]T
  holds F \ {{}} = a_filter a_net F;

theorem :: YELLOW19:15
 for T being non empty 1-sorted
 for F being proper Filter of BoolePoset [#]T
  holds F = a_filter a_net F;

theorem :: YELLOW19:16
 for T being non empty 1-sorted
 for F being Filter of BoolePoset [#]T
 for A being non empty Subset of T holds
   A in F iff a_net F is_eventually_in A;

theorem :: YELLOW19:17
 for T being non empty TopSpace
 for F being proper Filter of BoolePoset [#]T
 for x being Point of T holds
    x is_a_cluster_point_of a_net F iff x is_a_cluster_point_of F, T;

theorem :: YELLOW19:18
 for T being non empty TopSpace
 for F being proper Filter of BoolePoset [#]T
 for x being Point of T holds
    x in Lim a_net F iff x is_a_convergence_point_of F, T;

canceled;

theorem :: YELLOW19:20
 for T being non empty TopSpace, x being Point of T, A being Subset of T
  st x in Cl A
 for F being proper Filter of BoolePoset [#]T st F = NeighborhoodSystem x
  holds a_net F is_often_in A;

theorem :: YELLOW19:21
 for T being non empty 1-sorted, A being set
 for N being net of T st N is_eventually_in A
 for S being subnet of N
  holds S is_eventually_in A;

theorem :: YELLOW19:22
 for T being non empty TopSpace, F,G,x being set
  st F c= G & x is_a_convergence_point_of F, T
  holds x is_a_convergence_point_of G, T;

theorem :: YELLOW19:23
 for T being non empty TopSpace, A being Subset of T
 for x being Point of T holds
   x in Cl A
  iff
   ex N being net of T st N is_eventually_in A & x is_a_cluster_point_of N;

theorem :: YELLOW19:24
 for T being non empty TopSpace, A being Subset of T
 for x being Point of T holds
   x in Cl A
  iff
   ex N being convergent net of T st N is_eventually_in A & x in Lim N;

theorem :: YELLOW19:25
   for T being non empty TopSpace, A being Subset of T holds
   A is closed
  iff
   for N being net of T st N is_eventually_in A
   for x being Point of T st x is_a_cluster_point_of N
    holds x in A;

theorem :: YELLOW19:26
   for T being non empty TopSpace, A being Subset of T holds
   A is closed
  iff
   for N being convergent net of T st N is_eventually_in A
   for x being Point of T st x in Lim N
    holds x in A;

theorem :: YELLOW19:27
 for T being non empty TopSpace, A being Subset of T
 for x being Point of T holds
   x in Cl A
  iff
   ex F being proper Filter of BoolePoset [#]T
    st A in F & x is_a_cluster_point_of F, T;

theorem :: YELLOW19:28
 for T being non empty TopSpace, A being Subset of T
 for x being Point of T holds
   x in Cl A
  iff
   ex F being ultra Filter of BoolePoset [#]T
    st A in F & x is_a_convergence_point_of F, T;

theorem :: YELLOW19:29
   for T being non empty TopSpace, A being Subset of T holds
   A is closed
  iff
   for F being proper Filter of BoolePoset [#]T st A in F
   for x being Point of T st x is_a_cluster_point_of F,T
    holds x in A;

theorem :: YELLOW19:30
   for T being non empty TopSpace, A being Subset of T holds
   A is closed
  iff
   for F being ultra Filter of BoolePoset [#]T st A in F
   for x being Point of T st x is_a_convergence_point_of F,T
    holds x in A;

theorem :: YELLOW19:31
 for T being non empty TopSpace, N being net of T
 for s being Point of T holds
   s is_a_cluster_point_of N iff
    for A being Subset of T,N holds s in Cl A;

theorem :: YELLOW19:32
  for T being non empty TopSpace
 for F being Subset-Family of T st F is closed
  holds FinMeetCl F is closed;

theorem :: YELLOW19:33
 for T being non empty TopSpace holds
    T is compact
  iff
    for F being ultra Filter of BoolePoset [#]T
     ex x being Point of T st x is_a_convergence_point_of F, T;

theorem :: YELLOW19:34
   for T being non empty TopSpace holds
    T is compact
  iff
    for F being proper Filter of BoolePoset [#]T
     ex x being Point of T st x is_a_cluster_point_of F, T;

theorem :: YELLOW19:35
 for T being non empty TopSpace holds
    T is compact
  iff
    for N being net of T ex x being Point of T st
      x is_a_cluster_point_of N;

theorem :: YELLOW19:36
   for T being non empty TopSpace holds
    T is compact
  iff
    for N being net of T st N in NetUniv T
     ex x being Point of T st x is_a_cluster_point_of N;

registration
 let L be non empty 1-sorted;
 let N be transitive NetStr over L;
 cluster -> transitive (full SubNetStr of N);
 coherence
  proof let S be full SubNetStr of N;
      S is full SubRelStr of N by YELLOW_6:def 9;
   hence thesis;
  end;
end;


registration
 let L be non empty 1-sorted;
 let N be non empty directed NetStr over L;
 cluster strict non empty directed full SubNetStr of N;
 existence
  proof set S = the NetStr of N;
A1: N is SubNetStr of N & the RelStr of N = the RelStr of N &
    the RelStr of S = the RelStr of S & N is full SubRelStr of N
     by YELLOW_6:15,17;
    then the mapping of S = (the mapping of N)|the carrier of S &
    S is full SubRelStr of N by WAYBEL21:12,YELLOW_6:def 8;
   then reconsider S as strict non empty full SubNetStr of N
    by YELLOW_6:def 8,def 9;
      S is directed
     proof
         [#]N = the carrier of N & [#]S = the carrier of S &
       [#]N is directed by PRE_TOPC:12,WAYBEL_0:def 6;
      hence [#]S is directed by A1,WAYBEL_0:3;
     end;
   hence thesis;
  end;
end;


theorem :: YELLOW19:37
   for T being non empty TopSpace holds
    T is compact
  iff
    for N being net of T ex S being subnet of N st S is convergent;

definition
 let S be non empty 1-sorted;
 let N be non empty NetStr over S;
 attr N is Cauchy means
:: YELLOW19:def 5
    for A being Subset of S holds N is_eventually_in A or N is_eventually_in A`
;
end;


registration
 let S be non empty 1-sorted;
 let F be ultra Filter of BoolePoset [#]S;
 cluster a_net F -> Cauchy;
 coherence
  proof let A be Subset of S;
A1: [#]S = the carrier of S by PRE_TOPC:12;
A2: ({}S)` = [#]S by PRE_TOPC:27;
then A3: A` = {}S implies A = [#]S;
      F is prime by WAYBEL_7:26;
    then A in F or (the carrier of S)\A in F by A1,WAYBEL_7:25;
    then (A is empty or A is non empty) & (A` is empty or A` is non empty) &
    A in F or A` in F by A1,PRE_TOPC:17;
   hence thesis by A1,A2,A3,Th16,YELLOW_6:29;
  end;
end;


theorem :: YELLOW19:38
   for T being non empty TopSpace holds
   T is compact
  iff
   for N being net of T st N is Cauchy holds N is convergent;

