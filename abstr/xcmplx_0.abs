:: Complex Numbers - Basic Definitions
::  by Library Committee
::
:: Received March 7, 2003
:: Copyright (c) 2003 Association of Mizar Users

environ

 vocabularies XCMPLX_0, ARYTM_0, COMPLEX1, ARYTM, FUNCOP_1, BOOLE, FUNCT_1,
      FUNCT_2, ORDINAL2, ORDINAL1, RELAT_1, OPPCAT_1, ARYTM_1, ARYTM_2,
      ARYTM_3, XREAL_0;
 notations TARSKI, XBOOLE_0, SUBSET_1, ZFMISC_1, FUNCT_1, FUNCT_2, FUNCT_4,
      ORDINAL1, ORDINAL2, ARYTM_2, ARYTM_1, NUMBERS, ARYTM_0;
 constructors ARYTM_1, FRAENKEL, FUNCT_4, ARYTM_0, XBOOLE_0;
 registrations NUMBERS, FRAENKEL, FUNCT_2, ZFMISC_1, XBOOLE_0;
 requirements BOOLE, SUBSET, NUMERALS;
 theorems ARYTM_0, XBOOLE_0, FUNCT_4, FUNCT_2, ORDINAL2, ZFMISC_1, ARYTM_2,
      TARSKI, ARYTM_1, XBOOLE_1, NUMBERS;

begin

definition
 func <i> equals
:: XCMPLX_0:def 1
 (0,1) --> (0,1);
 let c be number;
 attr c is complex means
:: XCMPLX_0:def 2
 c in COMPLEX;
end;

registration
 cluster <i> -> complex;
end;

registration
 cluster complex number;
end;

notation let x be complex number;
  synonym x is zero for x is empty;
end;

definition let x be complex number;
  redefine attr x is zero means
:: XCMPLX_0:def 3
        x = 0;
  end;

definition let x,y be complex number;
 func x+y means
:: XCMPLX_0:def 4
  ex x1,x2,y1,y2 being Element of REAL st
   x = [*x1,x2*] & y = [*y1,y2*] & it = [*+(x1,y1),+(x2,y2)*];
 commutativity;
 func x*y means
:: XCMPLX_0:def 5
  ex x1,x2,y1,y2 being Element of REAL st
   x = [*x1,x2*] & y = [*y1,y2*] &
    it = [* +(*(x1,y1),opp*(x2,y2)), +(*(x1,y2),*(x2,y1)) *];
 commutativity;
end;

registration let z,z' be complex number;
 cluster z+z' -> complex;
 cluster z*z' -> complex;
end;

definition let z be complex number;
 func -z -> complex number means
:: XCMPLX_0:def 6
   z + it = 0;
 involutiveness;
 func z" -> complex number means
:: XCMPLX_0:def 7
   z*it = 1 if z <> 0
   otherwise it = 0;
  involutiveness;
end;

definition let x,y be complex number;
  func x-y equals
:: XCMPLX_0:def 8
    x+(-y);
  func x/y equals
:: XCMPLX_0:def 9
    x * y";
end;

registration let x,y be complex number;
  cluster x-y -> complex;
  cluster x/y -> complex;
end;

registration
 cluster non zero (complex number);
end;

registration let x be non zero (complex number);
  cluster -x -> non zero;
  cluster x" -> non zero;
 let y be non zero (complex number);
  cluster x*y -> non zero;
end;

registration let x,y be non zero (complex number);
  cluster x/y -> non zero;
end;

registration
  cluster -> complex Element of REAL;
end;

registration
  cluster natural -> complex number;
end;

