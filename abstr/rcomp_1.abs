:: Topological Properties of Subsets in Real Numbers
::  by Konrad Raczkowski and Pawe{\l} Sadowski
::
:: Received June 18, 1990
:: Copyright (c) 1990-2012 Association of Mizar Users
::           (Stowarzyszenie Uzytkownikow Mizara, Bialystok, Poland).
:: This code can be distributed under the GNU General Public Licence
:: version 3.0 or later, or the Creative Commons Attribution-ShareAlike
:: License version 3.0 or later, subject to the binding interpretation
:: detailed in file COPYING.interpretation.
:: See COPYING.GPL and COPYING.CC-BY-SA for the full text of these
:: licenses, or see http://www.gnu.org/licenses/gpl.html and
:: http://creativecommons.org/licenses/by-sa/3.0/.

environ

 vocabularies NUMBERS, SUBSET_1, XREAL_0, ORDINAL1, SEQ_1, ORDINAL2, NAT_1,
      XXREAL_1, REAL_1, XXREAL_0, TARSKI, ARYTM_3, ARYTM_1, COMPLEX1, RELAT_1,
      VALUED_0, SEQ_2, XXREAL_2, FUNCT_1, FUNCOP_1, CARD_1, XBOOLE_0, SEQ_4,
      RCOMP_1;
 notations TARSKI, XBOOLE_0, SUBSET_1, ORDINAL1, NUMBERS, XCMPLX_0, XREAL_0,
      COMPLEX1, REAL_1, NAT_1, RELAT_1, FUNCT_2, FUNCOP_1, SEQ_1, SEQ_2,
      COMSEQ_2, VALUED_0, SEQ_4, XXREAL_0, XXREAL_1, XXREAL_2, RECDEF_1;
 constructors FUNCOP_1, REAL_1, NAT_1, XXREAL_1, COMPLEX1, PARTFUN1, SEQ_1,
      SEQ_2, SEQM_3, SEQ_4, RECDEF_1, XXREAL_2, MEMBERED, RELSET_1, RVSUM_1,
      BINOP_2, COMSEQ_2;
 registrations ORDINAL1, RELSET_1, NUMBERS, XXREAL_0, XREAL_0, NAT_1, MEMBERED,
      VALUED_0, XXREAL_2, FUNCOP_1, SEQ_4, FUNCT_2, COMSEQ_2;
 requirements REAL, NUMERALS, SUBSET, BOOLE, ARITHM;


begin

reserve n,n1,m,k for Element of NAT;
reserve x,y for set;
reserve s,g,g1,g2,r,p,q,t for real number;
reserve s1,s2,s3 for Real_Sequence;
reserve Nseq for increasing sequence of NAT;
reserve X for Subset of REAL;

definition
  let g,s be real number;
  redefine func [. g,s .] -> Subset of REAL equals
:: RCOMP_1:def 1
  {r where r is Real: g<=r &
  r<=s };
end;

definition
  let g,s be ext-real number;
  redefine func ]. g,s .[ -> Subset of REAL equals
:: RCOMP_1:def 2
  {r where r is Real : g<r &
  r<s };
end;

theorem :: RCOMP_1:1
  r in ].p-g,p+g.[ iff abs(r-p)<g;

theorem :: RCOMP_1:2
  r in [.p,g.] iff abs(p+g-2*r)<=g-p;

theorem :: RCOMP_1:3
  r in ].p,g.[ iff abs(p+g-2*r)<g-p;

definition
  let X;
  attr X is compact means
:: RCOMP_1:def 3

  for s1 st rng s1 c= X ex s2 st s2 is
  subsequence of s1 & s2 is convergent & lim s2 in X;
end;

definition
  let X;
  attr X is closed means
:: RCOMP_1:def 4

  for s1 st rng s1 c= X & s1 is convergent holds lim s1 in X;
end;

definition
  let X;
  attr X is open means
:: RCOMP_1:def 5

  X` is closed;
end;

theorem :: RCOMP_1:4
  for s1 st rng s1 c= [.s,g.] holds s1 is bounded;

theorem :: RCOMP_1:5
  [.s,g.] is closed;

theorem :: RCOMP_1:6
  [.s,g.] is compact;

theorem :: RCOMP_1:7
  ].p,q.[ is open;

registration
  let p, q be real number;
  cluster ].p,q.[ -> open for Subset of REAL;
  cluster [.p,q.] -> closed for Subset of REAL;
end;

theorem :: RCOMP_1:8
  X is compact implies X is closed;

registration
  cluster compact -> closed for Subset of REAL;
end;

theorem :: RCOMP_1:9
  (for p st p in X ex r,n st 0<r & (for m st n<m holds r<abs(s1.m
- p))) implies for s2 st s2 is subsequence of s1 holds not (s2 is convergent &
  lim s2 in X);

theorem :: RCOMP_1:10
  X is compact implies X is real-bounded;

theorem :: RCOMP_1:11
  X is real-bounded closed implies X is compact;

theorem :: RCOMP_1:12
  for X st X<>{} & X is closed & X is bounded_above holds upper_bound X in X;

theorem :: RCOMP_1:13
  for X st X<>{} & X is closed & X is bounded_below holds lower_bound X in X;

theorem :: RCOMP_1:14
  for X st X<>{} & X is compact holds upper_bound X in X & lower_bound X in X;

theorem :: RCOMP_1:15
  X is compact & (for g1,g2 st g1 in X & g2 in X holds [.g1,g2.] c= X)
  implies ex p,g st X = [.p,g.];

registration
  cluster open for Subset of REAL;
end;

definition
  let r be real number;

  mode Neighbourhood of r -> Subset of REAL means
:: RCOMP_1:def 6

    ex g st 0<g & it = ]. r-g,r+g.[;
end;

registration
  let r be real number;
  cluster -> open for Neighbourhood of r;
end;

theorem :: RCOMP_1:16
  for N being Neighbourhood of r holds r in N;

theorem :: RCOMP_1:17
  for r for N1,N2 being Neighbourhood of r ex N being Neighbourhood of r
  st N c= N1 & N c= N2;

theorem :: RCOMP_1:18
  for X being open Subset of REAL, r st r in X ex N being
  Neighbourhood of r st N c= X;

theorem :: RCOMP_1:19
  for X being open Subset of REAL, r st r in X ex g st 0<g & ].r-g,r+g.[ c= X;

theorem :: RCOMP_1:20
  (for r st r in X holds ex N be Neighbourhood of r st N c= X) implies X
  is open;

theorem :: RCOMP_1:21
  X is open bounded_above implies not upper_bound X in X;

theorem :: RCOMP_1:22
  X is open bounded_below implies not lower_bound X in X;

theorem :: RCOMP_1:23
  X is open real-bounded & (for g1,g2 st g1 in X & g2 in X holds [.g1,g2.] c=
  X) implies ex p,g st X = ].p,g.[;

:: From RCOMP_2, AG 19.12.2008

definition
  let g be real number,s be ext-real number;
  redefine func [. g,s .[ -> Subset of REAL equals
:: RCOMP_1:def 7
  { r where r is Real : g<=r
  & r<s };
end;

definition
  let g be ext-real number,s be real number;
  redefine func ]. g,s .] -> Subset of REAL equals
:: RCOMP_1:def 8
  { r where r is Real : g<r &
  r<=s };
end;
