:: Algebraic Operation on Subsets of Many Sorted Sets
::  by Agnieszka Julia Marasik
::
:: Received June 23, 1997
:: Copyright (c) 1997 Association of Mizar Users

environ

 vocabulary PBOOLE, FUNCT_4, RELAT_1, CLOSURE2, SETFAM_1, MSSUBFAM, AMI_1,
      MSUALG_1, ZF_REFLE, MSUALG_2, UNIALG_2, BOOLE, CAT_4, FUNCT_1, QC_LANG1,
      TDGROUP, CANTOR_1, PRE_CIRC, FINSET_1, FUNCOP_1, TARSKI, MATRIX_1,
      WAYBEL_8, RELAT_2, MSAFREE2, BINOP_1, CLOSURE1, PROB_1, FUNCT_2,
      CLOSURE3;
 notation TARSKI, XBOOLE_0, ZFMISC_1, SUBSET_1, CANTOR_1, SETFAM_1, RELAT_1,
      FUNCT_1, STRUCT_0, PARTFUN1, FUNCT_2, FINSET_1, FUNCT_4, PBOOLE,
      MSUALG_1, MSUALG_2, PROB_1, CLOSURE2, MSSUBFAM, MBOOLEAN, PRE_CIRC;
 constructors CLOSURE2, PRE_CIRC, PRALG_2, CANTOR_1, PROB_1, MSSUBFAM;
 clusters STRUCT_0, MSUALG_1, FUNCT_1, PBOOLE, CLOSURE2, FINSET_1, MSSUBFAM,
      RELSET_1, SUBSET_1, FUNCT_2, XBOOLE_0;
 requirements SUBSET, BOOLE;


begin  :: Preliminaries

registration let S be non empty 1-sorted;
 cluster the 1-sorted of S -> non empty;
 coherence by STRUCT_0:def 1;
end;


theorem :: CLOSURE3:1
 for I be non empty set, M, N be ManySortedSet of I holds
  M +* N = N;

theorem :: CLOSURE3:2
 for I be set, M, N be ManySortedSet of I, F be SubsetFamily of M holds
  N in F implies meet |:F:| c=' N;

theorem :: CLOSURE3:3
for S be non void non empty ManySortedSign,
    MA be strict non-empty MSAlgebra over S
for F be SubsetFamily of the Sorts of MA st
      F c= SubSort MA
for B be MSSubset of MA st B = meet |:F:| holds
    B is opers_closed;

begin :: Relationships between Subsets Families

definition let I be set, M be ManySortedSet of I,
               B be SubsetFamily of M, A be SubsetFamily of M;
 pred A is_finer_than B means
:: CLOSURE3:def 1
      for a be set st a in A ex b be set st b in B & a c= b;
  reflexivity;
 pred B is_coarser_than A means
:: CLOSURE3:def 2
      for b be set st b in B ex a be set st a in A & a c= b;
  reflexivity;
 end;


theorem :: CLOSURE3:4
   for I be set, M be ManySortedSet of I
 for A,B,C be SubsetFamily of M holds
 A is_finer_than B & B is_finer_than C implies A is_finer_than C;

theorem :: CLOSURE3:5
   for I be set, M be ManySortedSet of I
 for A,B,C be SubsetFamily of M holds
 A is_coarser_than B & B is_coarser_than C implies A is_coarser_than C;

definition let I be non empty set, M be ManySortedSet of I;
func supp M -> set means
:: CLOSURE3:def 3

     it = { x where x is Element of I : M.x <> {} };
end;


theorem :: CLOSURE3:6
   for I be non empty set, M be non-empty ManySortedSet of I holds
  M = [0]I +* (M|supp M);

theorem :: CLOSURE3:7
   for I be non empty set, M1, M2 be non-empty ManySortedSet of I holds
  supp M1 = supp M2 & M1|supp M1 = M2|supp M2 implies M1 = M2;

theorem :: CLOSURE3:8
   for I be non empty set, M be ManySortedSet of I, x be Element of I holds
  (not x in supp M) implies M.x = {};

theorem :: CLOSURE3:9
 for I being non empty set, M being ManySortedSet of I,
     x being Element of Bool M, i being Element of I
 for y being set st y in x.i
  ex a being Element of Bool M st y in a.i &
    a is locally-finite & supp a is finite & a c= x;


definition let I be set, M be ManySortedSet of I;
           let A be SubsetFamily of M;
func MSUnion A -> ManySortedSubset of M means
:: CLOSURE3:def 4

     for i be set st i in I holds
     it.i = union { f.i where f is Element of Bool M: f in A };
end;


definition let I be set, M be ManySortedSet of I;
 let B be non empty SubsetFamily of M;
 redefine
  mode Element of B -> ManySortedSet of I;
end;


registration let I be set, M be ManySortedSet of I,
 A be empty SubsetFamily of M;
 cluster MSUnion A -> empty-yielding;
 coherence
  proof
    set MA = MSUnion A;
     let i be set; assume
        i in I;
then A1:      MA.i = union {f.i where f is Element of Bool M : f in A}
          by Def4;
        assume MA.i is non empty;
        then consider v being set such that
A2:        v in MA.i by XBOOLE_0:def 1;
           consider h be set such that
               v in h and
A3:        h in {f.i where f is Element of Bool M : f in A} by A1,A2,TARSKI:def
4;
          consider g be Element of Bool M such that
              h = g.i and
A4:        g in A by A3;
          thus contradiction by A4;
  end;
end;


theorem :: CLOSURE3:10
   for I be set, M be ManySortedSet of I,
     A be SubsetFamily of M holds
 MSUnion A = union |:A:|;

definition let I be set, M be ManySortedSet of I,
 A, B be SubsetFamily of M;
 redefine func A \/ B -> SubsetFamily of M;
 end;


theorem :: CLOSURE3:11
  for I be set, M be ManySortedSet of I
for A, B be SubsetFamily of M holds
 MSUnion (A \/ B) = MSUnion A \/ MSUnion B;

theorem :: CLOSURE3:12
  for I be set, M be ManySortedSet of I
for A, B be SubsetFamily of M holds
 A c= B implies MSUnion A c= MSUnion B;

definition let I be set, M be ManySortedSet of I,
 A, B be SubsetFamily of M;
 redefine func A /\ B -> SubsetFamily of M;
 end;


theorem :: CLOSURE3:13
   for I be set, M be ManySortedSet of I
 for A, B be SubsetFamily of M holds
 MSUnion (A /\ B) c= MSUnion A /\ MSUnion B;

theorem :: CLOSURE3:14
    for I be set, M be ManySortedSet of I,
      AA be set st for x being set st x in AA holds x is SubsetFamily of M
  for A,B be SubsetFamily of M
   st B = { MSUnion X where X is SubsetFamily of M : X in AA} & A = union AA
  holds MSUnion B = MSUnion A;

begin ::Algebraic Operation on Subsets of Many Sorted Sets

definition let I be non empty set, M be ManySortedSet of I, S be SetOp of M;
attr S is algebraic means
:: CLOSURE3:def 5

        for x be Element of Bool M st x = S.x
       ex A be SubsetFamily of M st A = { S.a where a is Element of Bool M :
                 a is locally-finite & supp a is finite & a c= x} &
          x = MSUnion A;
end;


registration let I be non empty set, M be ManySortedSet of I;
 cluster algebraic reflexive monotonic idempotent SetOp of M;
existence
  proof
    reconsider f = id (Bool M) as SetOp of M;
    take f;
    thus f is algebraic
     proof
       let x be Element of Bool M such that
             x = f.x;
       set A = { f.a where a is Element of Bool M :
                 a is locally-finite & supp a is finite & a c= x};
         A c= Bool M
         proof
           let v be set;
           assume
             v in A;
           then consider a be Element of Bool M such that
A1:             v = f.a and
                  a is locally-finite & supp a is finite & a c= x;
           thus v in Bool M by A1;
         end;
       then reconsider A as SubsetFamily of M;
      take A;
      thus A = { f.a where a is Element of Bool M :
                 a is locally-finite & supp a is finite & a c= x};
      thus x c= MSUnion A
       proof
          let i be set such that
A2:           i in I;
          let y be set such that
A3:           y in x.i;
          consider a be Element of Bool M such that
A4:           y in a.i & a is locally-finite & supp a is finite & a c= x
                 by A2,A3,Th9;
            a = f.a by FUNCT_1:35;
          then a in A by A4;
          then a.i in {g.i where g is Element of Bool M : g in A};
          then y in union {g.i where g is Element of Bool M : g in A}
             by A4,TARSKI:def 4;
          hence thesis by A2,Def4;
       end;
       thus MSUnion A c= x
         proof
           let i be set such that
A5:          i in I;
             for v be set holds v in (MSUnion A).i implies v in x.i
             proof
               let v be set;
               assume
                v in (MSUnion A).i;
               then v in union {ff.i where ff is Element of Bool M: ff in A}
                 by A5,Def4;
               then consider Y be set such that
A6:               v in Y and
A7:               Y in {ff.i where ff is Element of Bool M: ff in A}
                     by TARSKI:def 4;
               consider ff be Element of Bool M such that
A8:               Y = ff.i and
A9:               ff in A by A7;
               consider a be Element of Bool M such that
A10:               ff = f.a and
A11:               a is locally-finite & supp a is finite & a c= x by A9;
                 ff = a by A10,FUNCT_1:35;
then ff.i c= x.i by A5,A11,PBOOLE:def 5;
               hence thesis by A6,A8;
             end;
             hence thesis by TARSKI:def 3;
           end;
     end;
    thus f is reflexive
    proof
      let X be Element of Bool M;
      thus thesis by FUNCT_1:35;
    end;
    thus f is monotonic
    proof
      let X, Y be Element of Bool M such that
A12:     X c= Y;
        f.X = X & f.Y = Y by FUNCT_1:35;
      hence thesis by A12;
    end;
    thus f is idempotent
    proof
      let X be Element of Bool M;
      thus f.(f.X) = f.X by FUNCT_1:35;
    end;
  end;
end;


definition let S be non empty 1-sorted,
               IT be ClosureSystem of S;
attr IT is algebraic means
:: CLOSURE3:def 6
   ClSys->ClOp IT is algebraic;
end;


definition let S be non void non empty ManySortedSign,
               MA be non-empty MSAlgebra over S;
func SubAlgCl MA -> strict ClosureStr over the 1-sorted of S means
:: CLOSURE3:def 7

  the Sorts of it = the Sorts of MA &
  the Family of it = SubSort MA;
end;


canceled;

theorem :: CLOSURE3:16
for S be non void non empty ManySortedSign,
    MA be strict non-empty MSAlgebra over S holds
SubSort MA is absolutely-multiplicative SubsetFamily of the Sorts of MA;


registration let S be non void non empty ManySortedSign,
               MA be strict non-empty MSAlgebra over S;
 cluster SubAlgCl MA -> absolutely-multiplicative;
coherence
 proof
  thus SubAlgCl MA is absolutely-multiplicative
   proof
A1:     the Sorts of SubAlgCl MA = the Sorts of MA by Def7;
       set F = the Family of SubAlgCl MA;
       reconsider SF = SubSort MA as
         absolutely-multiplicative SubsetFamily of the Sorts of MA by Th16;
         F = SF by Def7;
       hence thesis by A1,CLOSURE2:def 19;
     end;
   end;
end;


registration let S be non void non empty ManySortedSign,
               MA be strict non-empty MSAlgebra over S;
 cluster SubAlgCl MA -> algebraic;
coherence
   proof
    set SS = ClSys->ClOp SubAlgCl MA,
        M = the Sorts of SubAlgCl MA;
    let x be Element of Bool M such that
A1:    x = SS.x;
    set A = { SS.a where a is Element of Bool M :
                 a is locally-finite & supp a is finite & a c= x};
      A c= Bool M
       proof
          let v be set;
          assume
            v in A;
          then consider a be Element of Bool M such that
A2:          v = SS.a and
               a is locally-finite & supp a is finite & a c= x;
          reconsider vv = v as Element of Bool M by A2;
            vv in Bool M;
          hence thesis;
          end;
     then reconsider A as SubsetFamily of M;
    take A;
    reconsider I = the carrier of S as non empty set;
    thus A = { SS.b where b is Element of Bool M :
                 b is locally-finite & supp b is finite & b c= x};
    thus x c= MSUnion A
      proof
          for i be set st i in I holds x.i c= (MSUnion A).i
          proof
            let i be set such that
A3:              i in I;
            let v be set such that
A4:             v in x.i;
            consider b be Element of Bool M such that
A5:             v in b.i and
A6:             b is locally-finite & supp b is finite & b c= x
                   by A3,A4,Th9;
A7:          SS.b in A by A6;
             reconsider SS' = SS as reflexive SetOp of M;
               b c=' SS'.b by CLOSURE2:def 12;
             then A8: b.i c= (SS'.b).i by A3,PBOOLE:def 5;
               (SS'.b).i in {f.i where f is Element of Bool M : f in
 A} by A7;
             then v in union {f.i where f is Element of Bool M : f in A}
                 by A5,A8,TARSKI:def 4;
             hence v in (MSUnion A).i by A3,Def4;
        end;
        hence thesis by PBOOLE:def 5;
      end;

    thus MSUnion A c= x
      proof
          for i be set st i in I holds (MSUnion A).i c= x.i
        proof
           let i be set such that
A9:          i in I;
             for v be set holds v in (MSUnion A).i implies v in x.i
             proof
               let v be set;
               assume
                 v in (MSUnion A).i;
               then v in union {ff.i where ff is Element of Bool M: ff in A}
                 by A9,Def4;
               then consider Y be set such that
A10:               v in Y and
A11:               Y in {ff.i where ff is Element of Bool M: ff in A}
                   by TARSKI:def 4;
               consider ff be Element of Bool M such that
A12:               Y = ff.i and
A13:               ff in A by A11;
               consider a be Element of Bool M such that
A14:               ff = SS.a and
                    a is locally-finite & supp a is finite and
A15:              a c=' x by A13;
               reconsider SS' = SS as monotonic SetOp of M;
                 SS'.a c=' SS'.x by A15,CLOSURE2:def 13;
then ff.i c= x.i by A1,A9,A14,PBOOLE:def 5;
               hence thesis by A10,A12;
             end;
             hence (MSUnion A).i c= x.i by TARSKI:def 3;
           end;
           hence thesis by PBOOLE:def 5;
        end;
 end;
end;


