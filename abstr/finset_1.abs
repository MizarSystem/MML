:: Finite Sets
::  by Agata Darmochwa\l
::
:: Received April 6, 1989
:: Copyright (c) 1990 Association of Mizar Users

environ

 vocabularies FUNCT_1, RELAT_1, ORDINAL2, BOOLE, ORDINAL1, ORDINAL3, SETFAM_1,
      TARSKI, MCART_1, FINSET_1, FUNCT_3, HAHNBAN, ZFMISC_1, FUNCOP_1,
      CARD_FIN, CAT_1;
 notations TARSKI, XBOOLE_0, ENUMSET1, ZFMISC_1, RELAT_1, FUNCT_1, FUNCOP_1,
      MCART_1, SETFAM_1, ORDINAL1, ORDINAL2, ORDINAL3, SUBSET_1, DOMAIN_1,
      RELSET_1, FUNCT_2, FUNCT_3;
 constructors DOMAIN_1, FUNCT_3, FUNCOP_1, ORDINAL3;
 registrations XBOOLE_0, SUBSET_1, RELAT_1, FUNCT_1, ORDINAL1, FUNCOP_1,
      ORDINAL2;
 requirements SUBSET, BOOLE, NUMERALS;


begin

definition
  let IT be set;
  attr IT is finite means
:: FINSET_1:def 1

  ex p being Function st rng p = IT & dom p in omega;
end;

notation
  let IT be set;
  antonym IT is infinite for IT is finite;
end;

reserve A, B, C, D, X, Y, Z, x, y for set;
reserve f for Function;

registration
  cluster non empty finite set;
end;

registration
  cluster empty -> finite set;
end;

registration
  let X be set;
  cluster empty finite Subset of X;
end;

scheme :: FINSET_1:sch 1
 OLambdaC{A()->set,C[set],F(set)->set,G(set)->set}:
  ex f being Function st dom f = A() & for x being Ordinal st x in A() holds
  (C[x] implies f.x = F(x)) & (not C[x] implies f.x = G(x));

registration
  let x be set;
  cluster {x} -> finite;
end;

registration
  let x,y be set;
  cluster {x,y} -> finite;
end;

registration
  let x,y,z be set;
  cluster {x,y,z} -> finite;
end;

registration
  let x1,x2,x3,x4 be set;
  cluster {x1,x2,x3,x4} -> finite;
end;

registration
  let x1,x2,x3,x4,x5 be set;
  cluster {x1,x2,x3,x4,x5} -> finite;
end;

registration
  let x1,x2,x3,x4,x5,x6 be set;
  cluster {x1,x2,x3,x4,x5,x6} -> finite;
end;

registration
  let x1,x2,x3,x4,x5,x6,x7 be set;
  cluster {x1,x2,x3,x4,x5,x6,x7} -> finite;
end;

registration
  let x1,x2,x3,x4,x5,x6,x7,x8 be set;
  cluster {x1,x2,x3,x4,x5,x6,x7,x8} -> finite;
end;

registration
  let B be finite set;
  cluster -> finite Subset of B;
end;

registration
  let X,Y be finite set;
  cluster X \/ Y -> finite;
end;

canceled 12;

theorem :: FINSET_1:13
  A c= B & B is finite implies A is finite;

theorem :: FINSET_1:14
  A is finite & B is finite implies A \/ B is finite;

registration
  let A be set, B be finite set;
  cluster A /\ B -> finite;
end;

registration
  let A be finite set, B be set;
  cluster A /\ B -> finite;
  cluster A \ B -> finite;
end;

theorem :: FINSET_1:15
  A is finite implies A /\ B is finite;

theorem :: FINSET_1:16
  A is finite implies A \ B is finite;

theorem :: FINSET_1:17
  A is finite implies f.:A is finite;

registration
  let f be Function, A be finite set;
  cluster f.:A -> finite;
end;

reserve O for Ordinal;

theorem :: FINSET_1:18
  A is finite implies for X being Subset-Family of A st X <> {}
  ex x being set st
  x in X & for B being set st B in X holds x c= B implies B = x;

scheme :: FINSET_1:sch 2
 Finite{A()->set,P[set]} : P[A()]
provided
 A() is finite
and
 P[{}]
and
 for x,B being set st x in A() & B c= A() & P[B] holds P[B \/ {x}];

theorem :: FINSET_1:19
  A is finite & B is finite implies [:A,B:] is finite;

registration
  let A,B be finite set;
  cluster [:A,B:] -> finite;
end;

theorem :: FINSET_1:20
  A is finite & B is finite & C is finite implies [:A,B,C:] is finite;

registration
  let A,B,C be finite set;
  cluster [:A,B,C:] -> finite;
end;

theorem :: FINSET_1:21
  A is finite & B is finite & C is finite & D is finite
  implies [:A,B,C,D:] is finite;

registration
  let A,B,C,D be finite set;
  cluster [:A,B,C,D:] -> finite;
end;

theorem :: FINSET_1:22
  B <> {} & [:A,B:] is finite implies A is finite;

theorem :: FINSET_1:23
  A <> {} & [:A,B:] is finite implies B is finite;

theorem :: FINSET_1:24
  A is finite iff bool A is finite;

theorem :: FINSET_1:25
  A is finite & (for X st X in A holds X is finite) iff union A is finite;

theorem :: FINSET_1:26
  dom f is finite implies rng f is finite;

theorem :: FINSET_1:27
  Y c= rng f & f"Y is finite implies Y is finite;

theorem :: FINSET_1:28
  X is finite & Y is finite implies X \+\ Y is finite;

registration
  let X, Y be finite set;
  cluster X \+\ Y -> finite;
end;

registration
  let X be non empty set;
  cluster finite non empty Subset of X;
end;

begin :: Addenda

:: from AMI_1

theorem :: FINSET_1:29
  for f being Function holds dom f is finite iff f is finite;

:: from ALI2

theorem :: FINSET_1:30
  for F being set st F is finite & F <> {} & F is c=-linear
  ex m being set st m in F & for C being set st C in F holds m c= C;

:: from FIN_TOPO

theorem :: FINSET_1:31
  for F being set st F is finite & F <> {} & F is c=-linear
  ex m being set st m in F & for C being set st C in F holds C c= m;

:: 2006.08.25, A.T.

definition
  let R be Relation;
  attr R is finite-yielding means
:: FINSET_1:def 2

  for x st x in rng R holds x is finite;
end;

:: from CQC_THE1, 2007.03.15, A.T.

reserve a for set;

theorem :: FINSET_1:32
  X is finite & X c= [:Y,Z:] implies
  ex A,B being set st A is finite & A c= Y & B is finite & B c= Z &
  X c= [:A,B:];

theorem :: FINSET_1:33
  X is finite & Z is finite & X c= [:Y,Z:] implies
  ex A being set st A is finite & A c= Y & X c= [:A,Z:];

:: restored, 2007.07.22, A.T.

registration
  cluster finite empty Function;
end;

registration
  cluster finite non empty Function;
end;

registration
  let f be finite Function;
  cluster dom f -> finite;
end;

:: from SCMFSA_4, 2007.07.22, A.T.

registration
  let f be Function, g be finite Function;
  cluster f*g ->finite;
end;

:: from SF_MASTR, 2007.07.25, A.T.

registration
  let A be finite set, B be set;
  cluster -> finite Function of A, B;
end;

:: from GLIB_000, 2007.10.24, A.T.

registration
  let x,y be set;
  cluster x .--> y -> finite;
end;

