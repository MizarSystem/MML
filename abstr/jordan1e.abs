:: Upper and Lower Sequence of a Cage
::  by Robert Milewski
::
:: Received August 8, 2001
:: Copyright (c) 2001 Association of Mizar Users

environ

 vocabulary EUCLID, COMPTS_1, PSCOMP_1, ORDINAL2, FUNCT_5, REALSET1, FINSEQ_1,
      SPRECT_2, RELAT_1, FINSEQ_5, FINSEQ_4, ARYTM_1, PRE_TOPC, TOPREAL1,
      JORDAN3, BOOLE, GROUP_2, FUNCT_1, SPPOL_1, FINSEQ_6, JORDAN9, GRAPH_2,
      TOPREAL2, CARD_1, RELAT_2, MCART_1, GOBOARD1, JORDAN8, MATRIX_1, TREES_1,
      JORDAN1E;
 notation TARSKI, XBOOLE_0, ENUMSET1, XCMPLX_0, XREAL_0, NAT_1, FUNCT_1,
      FINSEQ_1, FINSEQ_4, FINSEQ_5, MATRIX_1, FINSEQ_6, STRUCT_0, GRAPH_2,
      PRE_TOPC, TOPREAL2, CARD_1, BINARITH, CONNSP_1, COMPTS_1, EUCLID,
      PSCOMP_1, SPRECT_2, GOBOARD1, TOPREAL1, SPPOL_1, JORDAN3, JORDAN8,
      JORDAN9;
 constructors JORDAN8, REALSET1, REAL_1, CARD_4, PSCOMP_1, BINARITH, CONNSP_1,
      JORDAN9, FINSEQ_4, GOBRD13, JORDAN3, TOPREAL2, FINSEQ_5, ENUMSET1,
      FINSOP_1, GRAPH_2, PARTFUN1;
 clusters XREAL_0, SPRECT_1, TOPREAL6, JORDAN8, REVROT_1, RELSET_1, ARYTM_3,
      PSCOMP_1, SPRECT_3, FINSEQ_5, SPPOL_2, JORDAN1A, GOBOARD4, JORDAN1B,
      MEMBERED;
 requirements NUMERALS, BOOLE, SUBSET, REAL, ARITHM;


begin  :: Preliminaries

  reserve n for Nat;

  theorem :: JORDAN1E:1
     for X be non empty Subset of TOP-REAL 2
   for Y be compact Subset of TOP-REAL 2 st X c= Y holds
    N-bound X <= N-bound Y;

  theorem :: JORDAN1E:2
     for X be non empty Subset of TOP-REAL 2
   for Y be compact Subset of TOP-REAL 2 st X c= Y holds
    E-bound X <= E-bound Y;

  theorem :: JORDAN1E:3
     for X be non empty Subset of TOP-REAL 2
   for Y be compact Subset of TOP-REAL 2 st X c= Y holds
    S-bound X >= S-bound Y;

  theorem :: JORDAN1E:4
     for X be non empty Subset of TOP-REAL 2
   for Y be compact Subset of TOP-REAL 2 st X c= Y holds
    W-bound X >= W-bound Y;

  theorem :: JORDAN1E:5
   for f,g be FinSequence of TOP-REAL 2 st f is_in_the_area_of g
   for p be Element of TOP-REAL 2 st p in rng f holds
    f-:p is_in_the_area_of g;

  theorem :: JORDAN1E:6
   for f,g be FinSequence of TOP-REAL 2 st f is_in_the_area_of g
   for p be Element of TOP-REAL 2 st p in rng f holds
    f:-p is_in_the_area_of g;

  theorem :: JORDAN1E:7
     for f be non empty FinSequence of TOP-REAL 2
   for p be Point of TOP-REAL 2 st p in L~f holds
    L_Cut (f,p) <> {};

  theorem :: JORDAN1E:8
     for f be non empty FinSequence of TOP-REAL 2
   for p be Point of TOP-REAL 2 st p in L~f & len R_Cut(f,p) >= 2 holds
    f.1 in L~R_Cut(f,p);

  theorem :: JORDAN1E:9
   for f be non empty FinSequence of TOP-REAL 2 st f is_S-Seq
   for p be Point of TOP-REAL 2
    st p in L~f holds not f.1 in L~mid(f,Index(p,f)+1,len f);

  theorem :: JORDAN1E:10
   for i,j,m,n be Nat holds
    i+j = m+n & i <= m & j <= n implies i = m;

  theorem :: JORDAN1E:11
     for f be non empty FinSequence of TOP-REAL 2 st f is_S-Seq
   for p be Point of TOP-REAL 2 st p in L~f & f.1 in L~L_Cut(f,p) holds
    f.1 = p;

begin  :: About Upper and Lower Sequence of a Cage

  definition
   let C be compact non vertical non horizontal Subset of TOP-REAL 2;
   let n be Nat;
   func Upper_Seq(C,n) -> FinSequence of TOP-REAL 2 equals
:: JORDAN1E:def 1
    Rotate(Cage(C,n),W-min L~Cage(C,n))-:E-max L~Cage(C,n);
  end;


  theorem :: JORDAN1E:12
   for C be compact non vertical non horizontal Subset of TOP-REAL 2
   for n be Nat holds len Upper_Seq(C,n) =
    (E-max L~Cage(C,n))..Rotate(Cage(C,n),W-min L~Cage(C,n));

  definition
   let C be compact non vertical non horizontal Subset of TOP-REAL 2;
   let n be Nat;
   func Lower_Seq(C,n) -> FinSequence of TOP-REAL 2 equals
:: JORDAN1E:def 2
    Rotate(Cage(C,n),W-min L~Cage(C,n)):-E-max L~Cage(C,n);
  end;


  theorem :: JORDAN1E:13
   for C be compact non vertical non horizontal Subset of TOP-REAL 2
   for n be Nat holds len Lower_Seq(C,n) =
    len Rotate(Cage(C,n),W-min L~Cage(C,n))-
    (E-max L~Cage(C,n))..Rotate(Cage(C,n),W-min L~Cage(C,n))+1;

  registration
   let C be compact non vertical non horizontal Subset of TOP-REAL 2;
   let n be Nat;
   cluster Upper_Seq(C,n) -> non empty;
   coherence
   proof
    A1: W-min L~Cage(C,n) in rng Cage(C,n) by SPRECT_2:47;
      E-max L~Cage(C,n) in rng Cage(C,n) by SPRECT_2:50;
    then A2: E-max L~Cage(C,n) in rng Rotate(Cage(C,n),W-min L~Cage(C,n))
                                                           by A1,FINSEQ_6:96;
      len Upper_Seq(C,n) = (E-max L~Cage(C,n))..Rotate(Cage(C,n),
                          W-min L~Cage(C,n)) by Th12;
    then len Upper_Seq(C,n) >= 0+1 by A2,FINSEQ_4:31;
    then len Upper_Seq(C,n) > 0 by NAT_1:38;
    hence thesis by FINSEQ_1:25;
   end;
   cluster Lower_Seq(C,n) -> non empty;
   coherence
   proof
    A3: W-min L~Cage(C,n) in rng Cage(C,n) by SPRECT_2:47;
      E-max L~Cage(C,n) in rng Cage(C,n) by SPRECT_2:50;
    then A4: E-max L~Cage(C,n) in rng Rotate(Cage(C,n),W-min L~Cage(C,n))
                                                           by A3,FINSEQ_6:96;
      len Lower_Seq(C,n) = len Rotate(Cage(C,n),W-min L~Cage(C,n))-
     (E-max L~Cage(C,n))..Rotate(Cage(C,n),W-min L~Cage(C,n))+1 by Th13;
    then len Lower_Seq(C,n)-1 = len Rotate(Cage(C,n),W-min L~Cage(C,n))-
      (E-max L~Cage(C,n))..Rotate(Cage(C,n),W-min L~Cage(C,n)) by XCMPLX_1:26
       .= len Rotate(Cage(C,n),W-min L~Cage(C,n))+-
     (E-max L~Cage(C,n))..Rotate(Cage(C,n),W-min L~Cage(C,n)) by XCMPLX_0:def 8
;
    then len Lower_Seq(C,n)-1+(E-max L~Cage(C,n))..Rotate(Cage(C,n),
     W-min L~Cage(C,n)) = len Rotate(Cage(C,n),W-min L~Cage(C,n)) by XCMPLX_1:
139;
    then (E-max L~Cage(C,n))..Rotate(Cage(C,n),W-min L~Cage(C,n)) =
     len Rotate(Cage(C,n),W-min L~Cage(C,n))-(len Lower_Seq(C,n)-1)
                                                                 by XCMPLX_1:26
       .= len Rotate(Cage(C,n),W-min L~Cage(C,n))-len Lower_Seq(C,n)+1
                                                                by XCMPLX_1:37;
    then len Rotate(Cage(C,n),W-min L~Cage(C,n))-len Lower_Seq(C,n)+1 <=
     len Rotate(Cage(C,n),W-min L~Cage(C,n)) by A4,FINSEQ_4:31;
    then len Rotate(Cage(C,n),W-min L~Cage(C,n))-len Lower_Seq(C,n) <=
     len Rotate(Cage(C,n),W-min L~Cage(C,n))-1 by REAL_1:84;
    then len Lower_Seq(C,n) >= 0+1 by REAL_2:105;
    then len Lower_Seq(C,n) > 0 by NAT_1:38;
    hence thesis by FINSEQ_1:25;
   end;
  end;


  registration
   let C be compact non vertical non horizontal Subset of TOP-REAL 2;
   let n be Nat;
   cluster Upper_Seq(C,n) -> one-to-one special unfolded s.n.c.;
   coherence
   proof
    A1: Upper_Seq(C,n) =
     Rotate(Cage(C,n),W-min L~Cage(C,n))-:E-max L~Cage(C,n) by Def1;
    set f = Rotate(Cage(C,n),W-min L~Cage(C,n));
    A2: W-min L~Cage(C,n) in rng Cage(C,n) by SPRECT_2:47;
      E-max L~Cage(C,n) in rng Cage(C,n) by SPRECT_2:50;
    then A3: E-max L~Cage(C,n) in rng f by A2,FINSEQ_6:96;
    A4: len Upper_Seq(C,n) = (E-max L~Cage(C,n))..f by Th12;
      now let i1,j1 be set;
     assume that
      A5: i1 in dom Upper_Seq(C,n) and
      A6: j1 in dom Upper_Seq(C,n) and
      A7: Upper_Seq(C,n).i1 = Upper_Seq(C,n).j1 and
      A8: i1 <> j1;
     A9: L~Cage(C,n) = L~f by REVROT_1:33;
     reconsider i2 = i1, j2 = j1 as Nat by A5,A6;
     A10: i2 in Seg((E-max L~Cage(C,n))..f) & j2 in Seg((E-max L~Cage(C,n))..f)
                                              by A4,A5,A6,FINSEQ_1:def 3;
     A11: Upper_Seq(C,n).i1 = Upper_Seq(C,n)/.i2 by A5,FINSEQ_4:def 4
        .= f/.i2 by A1,A3,A10,FINSEQ_5:46;
     A12: Upper_Seq(C,n).j1 = Upper_Seq(C,n)/.j2 by A6,FINSEQ_4:def 4
        .= f/.j2 by A1,A3,A10,FINSEQ_5:46;
     A13: 1 <= i2 & 1 <= j2 by A10,FINSEQ_1:3;
     A14: j2 <= (E-max L~Cage(C,n))..f & i2 <= (E-max L~Cage(C,n))..f
                                                           by A10,FINSEQ_1:3;
       (E-max L~f)..f < len f by SPRECT_5:17;
     then A15: j2 < len f & i2 < len f by A9,A14,AXIOMS:22;
     per cases by A8,AXIOMS:21;
      suppose i2 < j2;
       hence contradiction by A7,A11,A12,A13,A15,GOBOARD7:38;
      end;
      suppose j2 < i2;
       hence contradiction by A7,A11,A12,A13,A15,GOBOARD7:38;
    end;
    end;
    hence Upper_Seq(C,n) is one-to-one by FUNCT_1:def 8;
    thus Upper_Seq(C,n) is special by A1;
    thus Upper_Seq(C,n) is unfolded by A1;
    let i,j be Nat;
    assume A16: i+1 < j;
      len f <> 0 by FINSEQ_1:25;
    then len f > 0 by NAT_1:19;
    then 0+1 <= len f by NAT_1:38;
    then A17: len f in dom f by FINSEQ_3:27;
      now per cases;
     suppose A18: j+1 <= len Upper_Seq(C,n);
      then A19: LSeg(Upper_Seq(C,n),j) = LSeg(f,j) by A1,SPPOL_2:9;
        j < len Upper_Seq(C,n) by A18,NAT_1:38;
      then i+1 <= len Upper_Seq(C,n) by A16,AXIOMS:22;
      then A20: LSeg(Upper_Seq(C,n),i) = LSeg(f,i) by A1,SPPOL_2:9;
      A21: j+1 <= (E-max L~Cage(C,n))..f by A1,A3,A18,FINSEQ_5:45;
      A22: (E-max L~Cage(C,n))..f <= len f by A3,FINSEQ_4:31;
        now per cases by A21,REAL_1:def 5;
       suppose j+1 < (E-max L~Cage(C,n))..f;
        hence j+1 < len f by A22,AXIOMS:22;
       end;
       suppose A23: j+1 = (E-max L~Cage(C,n))..f;
        assume j+1 >= len f;
        then (E-max L~Cage(C,n))..f = len f by A22,A23,AXIOMS:21;
        then E-max L~Cage(C,n) = f.(len f) by A3,FINSEQ_4:29
           .= f/.(len f) by A17,FINSEQ_4:def 4
           .= f/.1 by FINSEQ_6:def 1
           .= W-min L~Cage(C,n) by A2,FINSEQ_6:98;
        hence contradiction by TOPREAL5:25;
      end;
      end;
      hence LSeg(Upper_Seq(C,n),i) misses LSeg(Upper_Seq(C,n),j)
                                           by A16,A19,A20,GOBOARD5:def 4;
     end;
     suppose j+1 > len Upper_Seq(C,n);
      then LSeg(Upper_Seq(C,n),j) = {} by TOPREAL1:def 5;
      then LSeg(Upper_Seq(C,n),i) /\ LSeg(Upper_Seq(C,n),j) = {};
      hence LSeg(Upper_Seq(C,n),i) misses LSeg(Upper_Seq(C,n),j)
        by XBOOLE_0:def 7;
    end;
    end;
    hence thesis;
   end;
   cluster Lower_Seq(C,n) -> one-to-one special unfolded s.n.c.;
   coherence
   proof
    A24: W-min L~Cage(C,n) in rng Cage(C,n) by SPRECT_2:47;
      E-max L~Cage(C,n) in rng Cage(C,n) by SPRECT_2:50;
    then A25: E-max L~Cage(C,n) in rng Rotate(Cage(C,n),W-min L~Cage(C,n))
                                                           by A24,FINSEQ_6:96;
    A26: Lower_Seq(C,n) =
     Rotate(Cage(C,n),W-min L~Cage(C,n)):-E-max L~Cage(C,n) by Def2;
    set f = Rotate(Cage(C,n),W-min L~Cage(C,n));
    A27: W-min L~Cage(C,n) in rng Cage(C,n) by SPRECT_2:47;
      E-max L~Cage(C,n) in rng Cage(C,n) by SPRECT_2:50;
    then A28: E-max L~Cage(C,n) in rng f by A27,FINSEQ_6:96;
    A29: len Lower_Seq(C,n) = len f-(E-max L~Cage(C,n))..f+1 by Th13;
    A30: L~Cage(C,n) = L~f by REVROT_1:33;
    then A31: f/.1 = W-min L~f by A27,FINSEQ_6:98;
    then A32: (W-max L~Cage(C,n))..f <= (N-min L~Cage(C,n))..f
                                                      by A30,SPRECT_5:24;
    A33: (N-min L~Cage(C,n))..f < (N-max L~Cage(C,n))..f
                                                      by A30,A31,SPRECT_5:25;
    A34: (N-max L~Cage(C,n))..f <= (E-max L~Cage(C,n))..f
                                                      by A30,A31,SPRECT_5:26;
      (W-max L~Cage(C,n))..f > 1 by A30,A31,SPRECT_5:23;
    then (N-min L~Cage(C,n))..f > 1 by A32,AXIOMS:22;
    then (N-max L~Cage(C,n))..f > 1 by A33,AXIOMS:22;
    then A35: (E-max L~Cage(C,n))..f > 1 by A34,AXIOMS:22;
      now let i1,j1 be set;
     assume that
      A36: i1 in dom Lower_Seq(C,n) and
      A37: j1 in dom Lower_Seq(C,n) and
      A38: Lower_Seq(C,n).i1 = Lower_Seq(C,n).j1 and
      A39: i1 <> j1;
     reconsider i2 = i1, j2 = j1 as Nat by A36,A37;
     A40: i2 in Seg len Lower_Seq(C,n) & j2 in Seg len Lower_Seq(C,n)
                                                  by A36,A37,FINSEQ_1:def 3;
     then i2 >= 1 & j2 >= 1 by FINSEQ_1:3;
     then A41: i2 = i2-'1+1 & j2 = j2-'1+1 by AMI_5:4;
     A42: Lower_Seq(C,n).i1 = Lower_Seq(C,n)/.i2 by A36,FINSEQ_4:def 4
        .= f/.(i2-'1+(E-max L~Cage(C,n))..f) by A26,A28,A36,A41,FINSEQ_5:55;
     A43: Lower_Seq(C,n).j1 = Lower_Seq(C,n)/.j2 by A37,FINSEQ_4:def 4
        .= f/.(j2-'1+(E-max L~Cage(C,n))..f) by A26,A28,A37,A41,FINSEQ_5:55;
       0+1 <= i2 & 0+1 <= j2 by A40,FINSEQ_1:3;
     then A44: i2-1 >= 0 & j2-1 >= 0 by REAL_1:84;
       j2 <= len f-(E-max L~Cage(C,n))..f+1 &
      i2 <= len f-(E-max L~Cage(C,n))..f+1 by A29,A40,FINSEQ_1:3;
     then j2-1 <= len f-(E-max L~Cage(C,n))..f &
      i2-1 <= len f-(E-max L~Cage(C,n))..f by REAL_1:86;
     then j2-1+(E-max L~Cage(C,n))..f <= len f &
      i2-1+(E-max L~Cage(C,n))..f <= len f by REAL_1:84;
     then A45: j2-'1+(E-max L~Cage(C,n))..f <= len f &
      i2-'1+(E-max L~Cage(C,n))..f <= len f by A44,BINARITH:def 3;
       i2-'1+(E-max L~Cage(C,n))..f >= (E-max L~Cage(C,n))..f &
      j2-'1+(E-max L~Cage(C,n))..f >= (E-max L~Cage(C,n))..f by NAT_1:29;
     then A46: 1 < i2-'1+(E-max L~Cage(C,n))..f &
      1 < j2-'1+(E-max L~Cage(C,n))..f by A35,AXIOMS:22;
     per cases by A39,AXIOMS:21;
      suppose i2 < j2;
       then i2-1 < j2-1 by REAL_1:54;
       then i2-1 < j2-'1 by A44,BINARITH:def 3;
       then i2-'1 < j2-'1 by A44,BINARITH:def 3;
       then i2-'1+(E-max L~Cage(C,n))..f < j2-'1+(E-max L~Cage(C,n))..f
                                                                by REAL_1:53;
       hence contradiction by A38,A42,A43,A45,A46,GOBOARD7:39;
      end;
      suppose j2 < i2;
       then j2-1 < i2-1 by REAL_1:54;
       then j2-1 < i2-'1 by A44,BINARITH:def 3;
       then j2-'1 < i2-'1 by A44,BINARITH:def 3;
       then j2-'1+(E-max L~Cage(C,n))..f < i2-'1+(E-max L~Cage(C,n))..f
                                                                by REAL_1:53;
       hence contradiction by A38,A42,A43,A45,A46,GOBOARD7:39;
    end;
    end;
    hence Lower_Seq(C,n) is one-to-one by FUNCT_1:def 8;
    thus Lower_Seq(C,n) is special by A25,A26,SPPOL_2:41;
    thus Lower_Seq(C,n) is unfolded by A25,A26,SPPOL_2:28;
    let i,j be Nat;
    assume A47: i+1 < j;
      i+1 >= 1 by NAT_1:29;
    then A48: j > 0+1 by A47,AXIOMS:22;
    then j = j-'1+1 by AMI_5:4;
    then A49: LSeg(Lower_Seq(C,n),j) = LSeg(f,j-'1+(E-max L~Cage(C,n))..f)
                                                         by A25,A26,SPPOL_2:10;
      now per cases by NAT_1:18;
     suppose i > 0;
      then A50: i >= 0+1 by NAT_1:38;
      then i = i-'1+1 by AMI_5:4;
      then A51: LSeg(Lower_Seq(C,n),i) = LSeg(f,i-'1+(E-max L~Cage(C,n))..f)
                                                         by A26,A28,SPPOL_2:10;
      A52: j-1 > 0 by A48,REAL_1:86;
      A53: i-1 >= 0 by A50,REAL_1:84;
        i+1-1 < j-1 by A47,REAL_1:54;
      then i-1+1 < j-1 by XCMPLX_1:29;
      then i-1+1 < j-'1 by A52,BINARITH:def 3;
      then i-'1+1 < j-'1 by A53,BINARITH:def 3;
      then i-'1+1+(E-max L~Cage(C,n))..f < j-'1+(E-max L~Cage(C,n))..f
                                                                by REAL_1:53;
      then A54: i-'1+(E-max L~Cage(C,n))..f+1 < j-'1+(E-max L~Cage(C,n))..f
                                                                by XCMPLX_1:1;
        i-'1 >= 0 by NAT_1:18;
      then A55: i-'1+(E-max L~Cage(C,n))..f > 0+1 by A35,REAL_1:67;
        now per cases;
       suppose j-'1+(E-max L~Cage(C,n))..f+1 <= len f;
        then j-'1+(E-max L~Cage(C,n))..f < len f by NAT_1:38;
        then LSeg(Lower_Seq(C,n),i) misses LSeg(Lower_Seq(C,n),j)
                                      by A49,A51,A54,A55,GOBOARD5:def 4;
        hence LSeg(Lower_Seq(C,n),i) /\ LSeg(Lower_Seq(C,n),j) = {}
                                      by XBOOLE_0:def 7;
       end;
       suppose j-'1+(E-max L~Cage(C,n))..f+1 > len f;
        then LSeg(Lower_Seq(C,n),j) = {} by A49,TOPREAL1:def 5;
        hence LSeg(Lower_Seq(C,n),i) /\ LSeg(Lower_Seq(C,n),j) = {};
      end;
      end;
      hence LSeg(Lower_Seq(C,n),i) /\ LSeg(Lower_Seq(C,n),j) = {};
     end;
     suppose i = 0;
      then LSeg(Lower_Seq(C,n),i) = {} by TOPREAL1:def 5;
      hence LSeg(Lower_Seq(C,n),i) /\ LSeg(Lower_Seq(C,n),j) = {};
    end;
    end;
    hence thesis by XBOOLE_0:def 7;
   end;
  end;


  theorem :: JORDAN1E:14
   for C be compact non vertical non horizontal Subset of TOP-REAL 2
   for n be Nat holds
    len Upper_Seq(C,n) + len Lower_Seq(C,n) = len Cage(C,n)+1;

  theorem :: JORDAN1E:15
   for C be compact non vertical non horizontal Subset of TOP-REAL 2
   for n be Nat holds
    Rotate(Cage(C,n),W-min L~Cage(C,n)) = Upper_Seq(C,n) ^' Lower_Seq(C,n);

  theorem :: JORDAN1E:16
     for C be compact non vertical non horizontal Subset of TOP-REAL 2
   for n be Nat holds
    L~Cage(C,n) = L~(Upper_Seq(C,n) ^' Lower_Seq(C,n));

  theorem :: JORDAN1E:17
     for C be compact non vertical non horizontal non empty Subset of TOP-REAL
2
   for n be Nat holds
    L~Cage(C,n) = L~Upper_Seq(C,n) \/ L~Lower_Seq(C,n);

  theorem :: JORDAN1E:18
   for P be Simple_closed_curve holds W-min(P) <> E-min(P);

  theorem :: JORDAN1E:19
   for C be compact non vertical non horizontal Subset of TOP-REAL 2
   for n be Nat holds
    len Upper_Seq(C,n) >= 3 & len Lower_Seq(C,n) >= 3;

  registration
   let C be compact non vertical non horizontal Subset of TOP-REAL 2;
   let n be Nat;
   cluster Upper_Seq(C,n) -> being_S-Seq;
   coherence
   proof
      len Upper_Seq(C,n) >= 3 by Th19;
    then len Upper_Seq(C,n) >= 2 by AXIOMS:22;
    hence thesis by TOPREAL1:def 10;
   end;
   cluster Lower_Seq(C,n) -> being_S-Seq;
   coherence
   proof
      len Lower_Seq(C,n) >= 3 by Th19;
    then len Lower_Seq(C,n) >= 2 by AXIOMS:22;
    hence thesis by TOPREAL1:def 10;
   end;
  end;


  theorem :: JORDAN1E:20
     for C be compact non vertical non horizontal Subset of TOP-REAL 2
   for n be Nat holds
    L~Upper_Seq(C,n) /\ L~Lower_Seq(C,n) =
     {W-min L~Cage(C,n),E-max L~Cage(C,n)};

  theorem :: JORDAN1E:21
     for C be compact non vertical non horizontal Subset of TOP-REAL 2 holds
    Upper_Seq(C,n) is_in_the_area_of Cage(C,n);

  theorem :: JORDAN1E:22
     for C be compact non vertical non horizontal Subset of TOP-REAL 2 holds
    Lower_Seq(C,n) is_in_the_area_of Cage(C,n);

  theorem :: JORDAN1E:23
     for C be compact connected non vertical non horizontal Subset of TOP-REAL
2
     holds (Cage(C,n)/.2)`2 = N-bound L~Cage(C,n);

  theorem :: JORDAN1E:24
     for C be compact connected non vertical non horizontal Subset of TOP-REAL
2
   for k be Nat st 1 <= k & k+1 <= len Cage(C,n) &
    Cage(C,n)/.k = E-max L~Cage(C,n) holds
     (Cage(C,n)/.(k+1))`1 = E-bound L~Cage(C,n);

  theorem :: JORDAN1E:25
     for C be compact connected non vertical non horizontal Subset of TOP-REAL
2
   for k be Nat st 1 <= k & k+1 <= len Cage(C,n) &
    Cage(C,n)/.k = S-max L~Cage(C,n) holds
     (Cage(C,n)/.(k+1))`2 = S-bound L~Cage(C,n);

  theorem :: JORDAN1E:26
     for C be compact connected non vertical non horizontal Subset of TOP-REAL
2
   for k be Nat st 1 <= k & k+1 <= len Cage(C,n) &
    Cage(C,n)/.k = W-min L~Cage(C,n) holds
     (Cage(C,n)/.(k+1))`1 = W-bound L~Cage(C,n);
