:: On Discrete and Almost Discrete Topological Spaces
::  by Zbigniew Karno
::
:: Received April 6, 1993
:: Copyright (c) 1993 Association of Mizar Users

environ

 vocabulary PRE_TOPC, TMAP_1, SUBSET_1, BOOLE, TOPS_1, TOPS_3, REALSET1,
      SETFAM_1, TDLAT_3, NATTRA_1, TARSKI, TEX_1, PCOMPS_1;
 notation TARSKI, XBOOLE_0, ENUMSET1, SUBSET_1, SETFAM_1, STRUCT_0, REALSET1,
      PRE_TOPC, TOPS_1, TMAP_1, TDLAT_3, TOPS_3, PCOMPS_1;
 constructors REALSET1, TOPS_1, TMAP_1, TDLAT_3, TOPS_3, DOMAIN_1, PCOMPS_1,
      MEMBERED;
 clusters TDLAT_3, STRUCT_0, COMPLSP1, TMAP_1, SUBSET_1, TOPS_1, PCOMPS_1,
      XBOOLE_0, ZFMISC_1;
 requirements BOOLE, SUBSET;


begin
:: 1. Properties of Subsets of a Topological Space with Modified Topology.
reserve X for non empty TopSpace, D for Subset of X;

theorem :: TEX_1:1
 for B being Subset of X,
     C being Subset of X modified_with_respect_to D st
  B = C holds B is open implies C is open;

theorem :: TEX_1:2
   for B being Subset of X,
     C being Subset of X modified_with_respect_to D st
  B = C holds B is closed implies C is closed;

theorem :: TEX_1:3
 for C being Subset of X modified_with_respect_to  D` st C = D holds
  C is closed;

theorem :: TEX_1:4
 for C being Subset of X modified_with_respect_to D
   st C = D holds
  D is dense implies C is dense & C is open;

theorem :: TEX_1:5
 for C being Subset of X modified_with_respect_to D
   st D c= C holds
  D is dense implies C is everywhere_dense;

theorem :: TEX_1:6
 for C being Subset of X modified_with_respect_to  D`
   st C = D holds
  D is boundary implies C is boundary & C is closed;

theorem :: TEX_1:7
 for C being Subset of X modified_with_respect_to  D`
   st C c= D holds
  D is boundary implies C is nowhere_dense;

begin
:: 2. Trivial Topological Spaces.

definition let Y be non empty 1-sorted;
 redefine attr Y is trivial means
:: TEX_1:def 1
 ex d being Element of Y st the carrier of Y = {d};
end;


registration let A be non empty set;
 cluster 1-sorted(#A#) -> non empty;
 coherence by STRUCT_0:def 1;
end;


registration
 cluster trivial strict non empty 1-sorted;
 existence
  proof
   take Y = 1-sorted (#{0}#);
       now
       reconsider d = 0 as Element of Y by TARSKI:def 1;
      take d;
      thus the carrier of Y = {d};
     end;
   hence thesis by Def1;
  end;
 cluster non trivial strict non empty 1-sorted;
 existence
  proof
   take Y = 1-sorted (#{0,1}#);
        now assume Y is trivial;
       then consider d being Element of Y such that
               A1: the carrier of Y = {d} by Def1;
        thus contradiction by A1,ZFMISC_1:9;
      end;
   hence thesis;
  end;
end;


registration
 cluster trivial strict non empty TopStruct;
 existence
  proof
   consider O being trivial strict non empty 1-sorted;
    reconsider tau = {} as Subset of bool the carrier of O by XBOOLE_1:2;
    reconsider tau as Subset-Family of O by SETFAM_1:def 7;
   take Y = TopStruct (#the carrier of O,tau#);
      now
      consider d being Element of O such that
              A1: the carrier of O = {d} by Def1;
      reconsider d as Element of Y;
     take d;
     thus the carrier of Y = {d} by A1;
    end;
   hence thesis by Def1;
  end;
 cluster non trivial strict non empty TopStruct;
 existence
  proof
   consider O being non trivial strict non empty 1-sorted;
    reconsider tau = {} as Subset of bool the carrier of O by XBOOLE_1:2;
    reconsider tau as Subset-Family of O by SETFAM_1:def 7;
   take Y = TopStruct (#the carrier of O,tau#);
        now assume Y is trivial;
           then ex d being Element of Y st
                the carrier of Y = {d} by Def1;
       hence contradiction by Def1;
      end;
   hence thesis;
  end;
end;


theorem :: TEX_1:8
   for Y being trivial non empty TopStruct st the topology of Y is non empty
  holds Y is almost_discrete implies Y is TopSpace-like;

registration
 cluster trivial strict non empty TopSpace;
 existence
  proof
    consider O being trivial strict non empty 1-sorted;
   reconsider tau = bool the carrier of O as
                     Subset of bool the carrier of O;
   reconsider tau as Subset-Family of O;
   set Y = TopStruct (#the carrier of O,tau#);
A1:       now
         consider d being Element of O such that
                 A2: the carrier of O = {d} by Def1;
         reconsider d as Element of Y;
        take d;
        thus the carrier of Y = {d} by A2;
       end;
    reconsider Y as discrete non empty TopStruct by TDLAT_3:def 1;
      reconsider Y as TopSpace-like non empty TopStruct;
   take Y;
   thus thesis by A1,Def1;
  end;
end;


registration
 cluster trivial -> anti-discrete discrete (non empty TopSpace);
 coherence
  proof let Y be non empty TopSpace;
   assume Y is trivial;
     then consider d being Element of Y such that
                A1: the carrier of Y = {d} by Def1;
       {} in the topology of Y & the carrier of Y in the topology of Y
                                                   by PRE_TOPC:5,def 1;
    then A2: {{}, the carrier of Y} c= the topology of Y by ZFMISC_1:38;
        A3: bool the carrier of Y = {{}, the carrier of Y} by A1,ZFMISC_1:30;
    then the topology of Y = bool the carrier of Y by A2,XBOOLE_0:def 10;
   hence thesis by A3,TDLAT_3:def 1,def 2;
  end;
 cluster discrete anti-discrete -> trivial (non empty TopSpace);
 coherence
  proof let Y be non empty TopSpace;
   assume Y is discrete anti-discrete;
    then A4: bool the carrier of Y = {{}, the carrier of Y} by TDLAT_3:12;
       now
       consider d0 being Element of Y;
      take d0;
      thus {d0} = the carrier of Y by A4,TARSKI:def 2;
     end;
    hence Y is trivial by Def1;
  end;
end;


registration
 cluster non trivial strict non empty TopSpace;
 existence
  proof
   set D = {0,1};
    reconsider tau = bool D as Subset of bool D;
    reconsider tau as Subset-Family of D;
    reconsider Y=TopStruct (#D,tau#) as discrete non empty TopStruct
     by TDLAT_3:def 1;
   take Y;
       now assume Y is trivial;
          then consider d being Element of Y such that
               A1: the carrier of Y = {d} by Def1;
         d = 0 & d = 1 by A1,ZFMISC_1:8;
      hence contradiction;
     end;
   hence thesis;
  end;
end;


registration
 cluster non discrete -> non trivial (non empty TopSpace);
 coherence
  proof let Y be non empty TopSpace;
   assume A1: Y is non discrete;
       now assume Y is trivial;
       then reconsider Y as trivial non empty TopSpace;
          Y is discrete;
      hence contradiction by A1;
     end;
   hence thesis;
  end;
 cluster non anti-discrete -> non trivial (non empty TopSpace);
 coherence
  proof let Y be non empty TopSpace;
   assume A2: Y is non anti-discrete;
       now assume Y is trivial;
       then reconsider Y as trivial non empty TopSpace;
          Y is anti-discrete;
      hence contradiction by A2;
     end;
   hence thesis;
  end;
end;


begin
:: 3. Examples of Discrete and Anti-discrete Topological Spaces.

definition let D be set;
 func cobool D -> Subset-Family of D equals
:: TEX_1:def 2
 {{},D};
end;


registration let D be set;
 cluster cobool D -> non empty;
 coherence
  proof
   cobool D = {{},D} by Def2;
   hence thesis;
  end;
end;


definition let D be set;
 func ADTS(D) -> TopStruct equals
:: TEX_1:def 3
 TopStruct(#D,cobool D#);
end;


registration let D be set;
 cluster ADTS(D) -> strict anti-discrete TopSpace-like;
 coherence
  proof
   set Y = TopStruct (#D,cobool D#);
        the topology of Y = {{},the carrier of Y} by Def2;
    then reconsider Y' = Y as anti-discrete TopStruct by TDLAT_3:def 2;
       Y' is anti-discrete strict TopSpace;
   hence thesis by Def3;
  end;
end;


registration let D be non empty set;
 cluster ADTS(D) -> non empty;
 coherence
  proof ADTS(D) = TopStruct(#D,cobool D#) by Def3;
   hence thesis;
  end;
end;


theorem :: TEX_1:9
 for X being anti-discrete non empty TopSpace holds
   the TopStruct of X = ADTS(the carrier of X);

theorem :: TEX_1:10
   for X being non empty TopSpace st
  the TopStruct of X = the TopStruct of ADTS(the carrier of X) holds
     X is anti-discrete;

theorem :: TEX_1:11
 for X being anti-discrete non empty TopSpace
  for A being Subset of X holds (A is empty implies Cl A = {}) &
                     (A is non empty implies Cl A = the carrier of X);

theorem :: TEX_1:12
 for X being anti-discrete non empty TopSpace
  for A being Subset of X holds (A <> the carrier of X
    implies Int A = {}) &
                     (A = the carrier of X implies Int A = the carrier of X);

theorem :: TEX_1:13
 for X being non empty TopSpace holds
    (for A being Subset of X holds
        (A is non empty implies Cl A = the carrier of X))
  implies X is anti-discrete;

theorem :: TEX_1:14
 for X being non empty TopSpace holds
    (for A being Subset of X
      holds (A <> the carrier of X implies Int A = {}))
  implies X is anti-discrete;

theorem :: TEX_1:15
   for X being anti-discrete non empty TopSpace
  for A being Subset of X holds (A <> {} implies A is dense) &
                  (A <> the carrier of X implies A is boundary);

theorem :: TEX_1:16
   for X being non empty TopSpace holds
   (for A being Subset of X holds (A <> {} implies A is dense))
  implies X is anti-discrete;

theorem :: TEX_1:17
   for X being non empty TopSpace holds
  (for A being Subset of X
    holds (A <> the carrier of X implies A is boundary))
  implies X is anti-discrete;

registration let D be set;
 cluster 1TopSp D -> discrete;
 coherence
  proof
   set Y = TopStruct (#D,bool D#);
    reconsider Y' = Y as discrete TopStruct by TDLAT_3:def 1;
      Y' is discrete strict TopSpace;
   hence thesis by PCOMPS_1:def 1;
  end;
end;


theorem :: TEX_1:18
 for X being discrete non empty TopSpace holds
   the TopStruct of X = 1TopSp (the carrier of X);

theorem :: TEX_1:19
   for X being non empty TopSpace st
  the TopStruct of X = the TopStruct of 1TopSp(the carrier of X) holds
     X is discrete;

theorem :: TEX_1:20
   for X being discrete non empty TopSpace
  for A being Subset of X holds Cl A = A & Int A = A;

theorem :: TEX_1:21
   for X being non empty TopSpace holds
  (for A being Subset of X holds Cl A = A) implies X is discrete;

theorem :: TEX_1:22
   for X being non empty TopSpace holds
  (for A being Subset of X
     holds Int A = A) implies X is discrete;

theorem :: TEX_1:23
 for D being non empty set holds
  ADTS(D) = 1TopSp(D) iff ex d0 being Element of D st D = {d0};

registration
 cluster discrete non anti-discrete strict non empty TopSpace;
 existence
  proof
   set D = {0,1}; set Y = 1TopSp(D);
   take Y;
     A1: Y = TopStruct (#D,bool D#) by PCOMPS_1:def 1;
      now assume Y is anti-discrete;
      then the TopStruct of Y = the TopStruct of ADTS(D) by A1,Th9;
      then consider d0 being Element of D such that A2: D = {d0} by Th23;
         d0 = 0 & d0 = 1 by A2,ZFMISC_1:8;
     hence contradiction;
    end;
   hence thesis;
  end;
 cluster anti-discrete non discrete strict non empty TopSpace;
 existence
  proof
   set D = {0,1}; set Y = ADTS(D);
   take Y;
     A3: Y = TopStruct (#D,cobool D#) by Def3;
      now assume Y is discrete;
      then the TopStruct of Y = the TopStruct of 1TopSp(D) by A3,Th18;
      then consider d0 being Element of D such that A4: D = {d0} by Th23;
         d0 = 0 & d0 = 1 by A4,ZFMISC_1:8;
     hence contradiction;
    end;
   hence thesis;
  end;
end;


begin
:: 4. An Example of a Topological Space.

definition let D be set, F be Subset-Family of D, S be set;
 redefine func F \ S -> Subset-Family of D;
end;


definition let D be set, d0 be Element of D;
 canceled;

 func STS(D,d0) -> TopStruct equals
:: TEX_1:def 5
    TopStruct (#D,(bool D) \ {A where A is Subset of D : d0 in A & A <> D}#);
end;


registration let D be set, d0 be Element of D;
 cluster STS(D,d0) -> strict TopSpace-like;
 coherence
  proof
   set G = {A where A is Subset of D : d0 in A & A <> D};
   set T = (bool D) \ G;
A1:   T misses G by XBOOLE_1:79;
   set Y = TopStruct (#D,T#);
A2: Y = STS(D,d0) by Def5;
   hence STS(D,d0) is strict;
     reconsider E = D as Subset of D by Lm2;
            not ex A being Subset of D st A = E & d0 in A & A <> D;
         then A3: not E in G;
       then A4: the carrier of Y in the topology of Y by XBOOLE_0:def 4;
    A5: now let F be Subset-Family of Y;
         assume F c= the topology of Y;
          then F c= bool D & F misses G by A1,XBOOLE_1:63;
          then A6: F c= bool D & F /\ G = {} by XBOOLE_0:def 7;
            now per cases;
           case union F = D;
            hence union F in the topology of Y by A3,XBOOLE_0:def 4;
           end;
           case A7: union F <> D;
               A8: now let A be Subset of D;
                    assume A9: A in F;
                    assume A = D;
                     then D c= union F by A9,ZFMISC_1:92;
                    hence contradiction by A7,XBOOLE_0:def 10;
                   end;
                 now let A be set;
                assume A10: A in F;
                  then reconsider B = A as Subset of D;
                    not B in G by A6,A10,XBOOLE_0:def 3;
                 then not (d0 in B & B <> D);
                hence not d0 in A by A8,A10;
               end;
              then not ex A being set st d0 in A & A in F;
              then not ex A being Subset of D
               st A = union F & d0 in A & A <> D by TARSKI:def 4;
             then not union F in G;
            hence union F in the topology of Y by XBOOLE_0:def 4;
          end;
          end;
         hence union F in the topology of Y;
        end;
          now let C,E be Subset of Y;
         assume A11: C in the topology of Y & E in the topology of Y;
            A12: now let P be Subset of D;
                 assume A13: P in the topology of Y & P <> D;
                  then not P in G by XBOOLE_0:def 4;
                 hence not d0 in P by A13;
                end;
              now per cases;
             case C = D & E = D;
              hence C /\ E in the topology of Y by A3,XBOOLE_0:def 4;
             end;
             case A14: C <> D or E <> D;
                now per cases by A14;
               case C <> D;
                 then not d0 in C & C /\ E c= C by A11,A12,XBOOLE_1:17;
                 then not ex A being Subset of D st
                            A = C /\ E & d0 in A & A <> D;
                 then not C /\ E in G;
                hence C /\ E in the topology of Y by XBOOLE_0:def 4;
               end;
               case E <> D;
                 then not d0 in E & C /\ E c= E by A11,A12,XBOOLE_1:17;
                 then not ex A being Subset of D st
                            A = C /\ E & d0 in A & A <> D;
                 then not C /\ E in G;
                hence C /\ E in the topology of Y by XBOOLE_0:def 4;
              end;
              end;
             hence C /\ E in the topology of Y;
            end;
            end;
         hence C /\ E in the topology of Y;
        end;
   hence thesis by A2,A4,A5,PRE_TOPC:def 1;
  end;
end;


registration let D be non empty set, d0 be Element of D;
 cluster STS(D,d0) -> non empty;
 coherence
  proof
       STS(D,d0) = TopStruct(#D,(bool D)
     \ {A where A is Subset of D : d0 in A & A <> D}#) by Def5;
   hence the carrier of STS(D,d0) is non empty;
  end;
end;


reserve D for non empty set, d0 for Element of D;

theorem :: TEX_1:24
 for A being Subset of STS(D,d0) holds
   ({d0} c= A implies A is closed) &
     (A is non empty & A is closed implies {d0} c= A);

theorem :: TEX_1:25
 D \ {d0} is non empty implies
   for A being Subset of STS(D,d0) holds
      (A = {d0} implies A is closed & A is boundary) &
     (A is non empty & A is closed & A is boundary implies A = {d0});

theorem :: TEX_1:26
 for A being Subset of STS(D,d0) holds
   (A c= D \ {d0} implies A is open) &
      (A <> D & A is open implies A c= D \ {d0});

theorem :: TEX_1:27
   D \ {d0} is non empty implies
   for A being Subset of STS(D,d0) holds
      (A = D \ {d0} implies A is open & A is dense) &
     (A <> D & A is open & A is dense implies A = D \ {d0});

registration
 cluster non anti-discrete non discrete strict non empty TopSpace;
 existence
  proof
   set D = {0,1};
    reconsider a = 0 as Element of D by TARSKI:def 2;
   set Y = STS(D,a);
   take Y;
    A1: Y = TopStruct(#D,(bool D)
       \ {A where A is Subset of D : a in A & A <> D}#) by Def5;
      then {a} is non empty Subset of Y by ZFMISC_1:37;
      then reconsider A = {a} as non empty Subset of Y;
      A2: 1 in D & not 1 in A by TARSKI:def 1,def 2;
      then D \ A is non empty by XBOOLE_0:def 4;
     then A3: A is closed & A is boundary by Th25;
       then Int A <> A by TOPS_1:84;
       then A is not open by TOPS_1:55;
   hence thesis by A1,A2,A3,TDLAT_3:17,21;
  end;
end;


theorem :: TEX_1:28
 for Y being non empty TopSpace holds
  the TopStruct of Y = the TopStruct of STS(D,d0) iff
    the carrier of Y = D &
   for A being Subset of Y
     holds ({d0} c= A implies A is closed) &
                     (A is non empty & A is closed implies {d0} c= A);

theorem :: TEX_1:29
 for Y being non empty TopSpace holds
  the TopStruct of Y = the TopStruct of STS(D,d0) iff
    the carrier of Y = D &
   for A being Subset of Y
      holds (A c= D \ {d0} implies A is open) &
                            (A <> D & A is open implies A c= D \ {d0});

theorem :: TEX_1:30
   for Y being non empty TopSpace holds
   the TopStruct of Y = the TopStruct of STS(D,d0) iff
      the carrier of Y = D &
     for A being non empty Subset of Y holds Cl A = A \/ {d0};

theorem :: TEX_1:31
   for Y being non empty TopSpace holds
   the TopStruct of Y = the TopStruct of STS(D,d0) iff
      the carrier of Y = D &
     for A being Subset of Y st A <> D holds Int A = A \ {d0};

theorem :: TEX_1:32
   STS(D,d0) = ADTS(D) iff D = {d0};

theorem :: TEX_1:33
   STS(D,d0) = 1TopSp(D) iff D = {d0};

theorem :: TEX_1:34
   for D being non empty set, d0 being Element of D
   for A being Subset of STS(D,d0) st A = {d0} holds
     1TopSp(D) = STS(D,d0) modified_with_respect_to A;


begin
:: 5. Discrete and Almost Discrete Spaces.

definition let X be non empty TopSpace;
 redefine attr X is discrete means
:: TEX_1:def 6
 for A being non empty Subset of X holds A is not boundary;
end;


theorem :: TEX_1:35
   X is discrete iff
  for A being Subset of X
    holds A <> the carrier of X implies A is not dense;

registration
 cluster non almost_discrete ->
    non discrete non anti-discrete (non empty TopSpace);
 coherence
  proof let Y be non empty TopSpace;
   assume A1: Y is non almost_discrete;
    A2: now assume Y is discrete;
          then reconsider Y as discrete TopSpace;
             Y is almost_discrete;
         hence contradiction by A1;
        end;
       now assume Y is anti-discrete;
       then reconsider Y as anti-discrete TopSpace;
           Y is almost_discrete;
      hence contradiction by A1;
     end;
   hence thesis by A2;
  end;
end;


definition let X be non empty TopSpace;
 redefine attr X is almost_discrete means
:: TEX_1:def 7
 for A being non empty Subset of X holds A is not nowhere_dense;
end;


theorem :: TEX_1:36
 X is almost_discrete iff
   for A being Subset of X holds
    A <> the carrier of X implies A is not everywhere_dense;

theorem :: TEX_1:37
 X is non almost_discrete iff
  ex A being non empty Subset of X st A is boundary & A is closed;

theorem :: TEX_1:38
   X is non almost_discrete iff
  ex A being Subset of X st A <> the carrier of X & A is dense & A is open;

registration
 cluster
  almost_discrete non discrete non anti-discrete strict non empty TopSpace;
 existence
  proof
   set C = bool {0,1};
   set Y = ADTS(C);
      A1: Y = TopStruct(#C,cobool C#) by Def3;
         then A2: the topology of Y = {{},C} by Def2;
       A3: {} c= {0,1} by XBOOLE_1:2;
       then A4: {} in C;
    A5: {{}} c= C by A3,ZFMISC_1:37;
    reconsider A = {{}} as Subset of Y by A1,A3,ZFMISC_1:37;
   set Y1 = Y modified_with_respect_to A;
     A6: the carrier of Y1 = the carrier of Y by TMAP_1:104;
    then reconsider A1 = A as Subset of Y1;
               A7: A1 is open by TMAP_1:105;
        now let H be set;
       assume H in the topology of Y1;
        then H in A-extension_of_the_topology_of Y by TMAP_1:104;
        then H in {p \/ (q /\ A) where p,q is Subset of Y :
                   p in the topology of Y & q in the topology of Y}
                                                        by TMAP_1:def 7;
        then consider P,Q being Subset of Y such that
           A8: H = P \/ (Q /\ A) and
           A9: P in the topology of Y & Q in the topology of Y;
            now per cases by A2,A9,TARSKI:def 2;
           case P = {} & Q = {};
            hence H = {} by A8;
           end;
           case P = C & Q = {};
            hence H = C by A8;
           end;
           case P = {} & Q = C;
            hence H = A by A5,A8,XBOOLE_1:28;
           end;
           case A10: P = C & Q = C;
             then Q /\ A = A & C \/ A = C by A5,XBOOLE_1:12,28;
            hence H = C by A8,A10;
          end;
          end;
       hence H in {{},A1,C} by ENUMSET1:14;
      end;
     then A11: the topology of Y1 c= {{},A1,C} by TARSKI:def 3;
   set Y2 = Y1 modified_with_respect_to  A1`;
   take Y2;
     A12: the carrier of Y2 = the carrier of Y1 by TMAP_1:104;
    then reconsider A2 = A1 as Subset of Y2;
    set A3 =  A2`;
          A13: A2 is closed & A2 is open by A7,Th1,Th3;
     then A14: A3 is open by TOPS_1:29;
        now let H be set;
       assume H in the topology of Y2;
        then H in ( A1`)-extension_of_the_topology_of Y1 by TMAP_1:104;
        then H in {P \/ (Q /\  A1`) where P,Q is Subset of Y1 :
                   P in the topology of Y1 & Q in the topology of Y1}
                                                        by TMAP_1:def 7;
        then consider P,Q being Subset of Y1 such that
           A15: H = P \/ (Q /\  A1`) and
           A16: P in the topology of Y1 & Q in the topology of Y1;
            now per cases by A11,A16,ENUMSET1:13;
           case P = {} & Q = {};
            hence H = {} by A15;
           end;
           case P = A1 & Q = {};
            hence H = A1 by A15;
           end;
           case P = C & Q = {};
            hence H = C by A15;
           end;
           case A17: P = {} & Q = A1;
                A1 misses  A1` by PRE_TOPC:26;
            hence H = {} by A15,A17,XBOOLE_0:def 7;
           end;
           case A18: P = A1 & Q = A1;
                A1 misses  A1` by PRE_TOPC:26;
              then A1 /\  A1` = {}Y1 by XBOOLE_0:def 7;
            hence H = A1 by A15,A18;
           end;
           case A19: P = C & Q = A1;
                A1 misses  A1` by PRE_TOPC:26;
              then A1 /\  A1` = {}Y1 by XBOOLE_0:def 7;
            hence H = C by A15,A19;
           end;
           case A20: P = {} & Q = C;
             then Q /\  A1` =  A1` by A1,A6,XBOOLE_1:28;
            hence H =  A2` by A12,A15,A20;
           end;
           case P = A1 & Q = C;
             then H = A1 \/  A1` & A1 \/  A1` = [#]Y1
                  by A1,A6,A15,PRE_TOPC:18,XBOOLE_1:28;
             hence H = C by A1,A6,PRE_TOPC:12;
           end;
           case P = C & Q = C;
            hence H = C by A1,A6,A15,XBOOLE_1:12;
          end;
          end;
       hence H in {{},A2,A3,C} by ENUMSET1:19;
      end;
     then A21: the topology of Y2 c= {{},A2,A3,C} by TARSKI:def 3;
        now let H be set;
       assume H in {{},A2,A3,C};
        then H = {} or H = A2 or H = A3 or H = C by ENUMSET1:18;
       hence H in the topology of Y2 by A1,A6,A12,A13,A14,PRE_TOPC:5,def 1,def
5;
      end;
     then {{},A2,A3,C} c= the topology of Y2 by TARSKI:def 3;
     then A22: the topology of Y2 = {{},A2,A3,C} by A21,XBOOLE_0:def 10;
          0 in {0,1} & 1 in {0,1} by TARSKI:def 2;
      then reconsider B0 = {0}, B1 = {1} as Subset of {0,1}
        by ZFMISC_1:37;
        {B0,B1} is non empty Subset of Y2
                                            by A1,A6,A12,ZFMISC_1:38;
      then reconsider B = {B0,B1} as non empty Subset of Y2;
A23:    now
     take A2;
        now assume A2 = C;
        then B0 = {} by TARSKI:def 1;
       hence contradiction;
      end;
     hence A2 is open & A2 <> {} & A2 <> the carrier of Y2 by A1,A7,A12,Th1,
TMAP_1:104;
    end;
A24:    now
     take B;
        Int B in {{},A2,A3,C} by A22,PRE_TOPC:def 5;
      then A25: Int B = {} or Int B = A2 or Int B = A3 or Int B = C
                                                      by ENUMSET1:18;
        A26: now assume Int B = C;
                 then C c= B by TOPS_1:44;
              hence contradiction by A4,TARSKI:def 2;
             end;
        A27: now assume Int B = A2;
                  then {} in Int B & Int B c= B by TARSKI:def 1,TOPS_1:44;
              hence contradiction by TARSKI:def 2;
             end;
               now assume A28: Int B = A3;
               reconsider I={0,1} as Point of Y2 by A1,A6,A12,ZFMISC_1:def 1;
                   not I in A2 by TARSKI:def 1;
                  then I in
 Int B & Int B c= B by A28,SUBSET_1:50,TOPS_1:44;
                then I = B0 or I = B1 by TARSKI:def 2;
                then 1 in B0 or 0 in B1 by TARSKI:def 2;
              hence contradiction by TARSKI:def 1;
             end;
     hence B is boundary by A25,A26,A27,TOPS_1:84;
    end;
      now let G be Subset of Y2;
     assume G is open;
       then A29: G in {{},A2,A3,C} by A22,PRE_TOPC:def 5;
        A30: now assume G = {} or G = C;
                 then (G = {}Y2 or G = [#]Y2) & {}Y2 is closed & [#]
Y2 is closed
                                                by A1,A6,A12,PRE_TOPC:12;
             hence G is closed;
            end;
        A31: now assume A32: G = A2;
                A3 in the topology of Y2 by A22,ENUMSET1:19;
              then A3 is open by PRE_TOPC:def 5;
             hence G is closed by A32,TOPS_1:29;
            end;
              now assume A33: G = A3;
                A2 in the topology of Y2 by A22,ENUMSET1:19;
              then A2 is open by PRE_TOPC:def 5;
              then  A3` is open;
             hence G is closed by A33,TOPS_1:29;
            end;
     hence G is closed by A29,A30,A31,ENUMSET1:18;
    end;
   hence thesis by A23,A24,Def6,TDLAT_3:20,23;
  end;
end;


theorem :: TEX_1:39
 for C being non empty set, c0 being Element of C holds
  C \ {c0} is non empty iff STS(C,c0) is non almost_discrete;

registration
 cluster non almost_discrete strict non empty TopSpace;
 existence
  proof
   set D = {0,1};
    reconsider a = 0 as Element of D by TARSKI:def 2;
   set Y = STS(D,a);
   take Y;
       Y = TopStruct(#D,(bool D) \ {A where A is Subset of D : a in A & A <> D}
#)
                                                                        by Def5
;
      then reconsider A = {a} as non empty Subset of Y
      by ZFMISC_1:37;
        1 in D & not 1 in A by TARSKI:def 1,def 2;
     then D \ A is non empty by XBOOLE_0:def 4;
   hence thesis by Th39;
  end;
end;


theorem :: TEX_1:40
   for A being non empty Subset of X st A is boundary holds
   X modified_with_respect_to  A` is non almost_discrete;

theorem :: TEX_1:41
   for A being Subset of X st A <> the carrier of X & A is dense holds
  X modified_with_respect_to A is non almost_discrete;

