:: Maximal Anti-Discrete Subspaces of Topological Spaces
::  by Zbigniew Karno
::
:: Received July 26, 1994
:: Copyright (c) 1994 Association of Mizar Users

environ

 vocabulary PRE_TOPC, BOOLE, COLLSP, SUBSET_1, REALSET1, SETFAM_1, TOPS_1,
      TARSKI, TDLAT_3, RELAT_1, TEX_2, TEX_4;
 notation TARSKI, XBOOLE_0, ZFMISC_1, SUBSET_1, SETFAM_1, STRUCT_0, REALSET1,
      PRE_TOPC, TOPS_1, TOPS_2, BORSUK_1, TSEP_1, TDLAT_3, TEX_2;
 constructors REALSET1, TOPS_1, TOPS_2, BORSUK_1, TSEP_1, TDLAT_3, TEX_2,
      MEMBERED;
 clusters SUBSET_1, PRE_TOPC, BORSUK_1, TSEP_1, TEX_1, TEX_2, STRUCT_0, TOPS_1,
      SETFAM_1, MEMBERED, ZFMISC_1;
 requirements BOOLE, SUBSET;


begin
:: 1. Properties of the Closure and the Interior Operations.

registration
 let X be non empty TopSpace, A be non empty Subset of X;
 cluster Cl A -> non empty;
 coherence by PCOMPS_1:2;
end;


registration let X be non empty TopSpace, A be empty Subset of X;
 cluster Cl A -> empty;
 coherence
  proof
       A = {}X;
   hence thesis by PRE_TOPC:52;
  end;
end;


registration
 let X be non empty TopSpace, A be non proper Subset of X;
 cluster Cl A -> non proper;
 coherence
  proof
       A = the carrier of X by TEX_2:5;
    then A = [#]X by PRE_TOPC:12;
    then Cl A = [#]X by TOPS_1:27;
    then Cl A = the carrier of X by PRE_TOPC:12;
   hence thesis by TEX_2:5;
  end;
end;


registration let X be non trivial non empty TopSpace,
                A be non trivial (non empty Subset of X);
 cluster Cl A -> non trivial;
 coherence
  proof
      now
     assume A1: Cl A is trivial;
          A c= Cl A by PRE_TOPC:48;
     hence contradiction by A1,TEX_2:1;
    end;
   hence thesis;
  end;
end;


reserve X for non empty TopSpace;

theorem :: TEX_4:1
 for A being Subset of X holds
   Cl A = meet {F where F is Subset of X : F is closed & A c= F};

theorem :: TEX_4:2
 for x being Point of X holds
   Cl {x} = meet {F where F is Subset of X : F is closed & x in F};

theorem :: TEX_4:3
 for A, B being Subset of X holds B c= Cl A implies Cl B c= Cl A;

registration
 let X be non empty TopSpace, A be non proper Subset of X;
 cluster Int A -> non proper;
 coherence
  proof
       A = the carrier of X by TEX_2:5;
    then A = [#]X by PRE_TOPC:12;
    then Int A = [#]X by TOPS_1:43;
    then Int A = the carrier of X by PRE_TOPC:12;
   hence thesis by TEX_2:5;
  end;
end;


registration let X be non empty TopSpace, A be proper Subset of X;
 cluster Int A -> proper;
 coherence
  proof
      now
     assume Int A is non proper;
      then Int A = the carrier of X by TEX_2:5;
      then Int A = [#]X & Int A c= A & A c= [#]X by PRE_TOPC:12,14,TOPS_1:44;
      then A = [#]X by XBOOLE_0:def 10;
      then A = the carrier of X by PRE_TOPC:12;
     hence contradiction by TEX_2:5;
    end;
   hence thesis;
  end;
end;


registration let X be non empty TopSpace, A be empty Subset of X;
 cluster Int A -> empty;
 coherence
  proof
       A = {}X;
   hence thesis by TOPS_1:47;
  end;
end;


theorem :: TEX_4:4
   for A being Subset of X holds
   Int A = union {G where G is Subset of X : G is open & G c= A};

theorem :: TEX_4:5
   for A, B being Subset of X holds Int A c= B
  implies Int A c= Int B;

begin
:: 2. Anti-discrete Subsets of Topological Structures.

definition let Y be TopStruct;
  let IT be Subset of Y;
 attr IT is anti-discrete means
:: TEX_4:def 1
 for x being Point of Y, G being Subset of Y st
    G is open & x in G holds x in IT implies IT c= G;
end;


definition let Y be non empty TopStruct;
  let A be Subset of Y;
 redefine attr A is anti-discrete means
:: TEX_4:def 2
 for x being Point of Y, F being Subset of Y st
    F is closed & x in F holds x in A implies A c= F;
end;


definition let Y be TopStruct;
  let A be Subset of Y;
 redefine attr A is anti-discrete means
:: TEX_4:def 3
 for G being Subset of Y st G is open holds A misses G or A c= G;
end;


definition let Y be TopStruct;
  let A be Subset of Y;
 redefine attr A is anti-discrete means
:: TEX_4:def 4
 for F being Subset of Y st F is closed holds A misses F or A c= F;
end;


theorem :: TEX_4:6
 for Y0, Y1 being TopStruct, D0 being Subset of Y0,
   D1 being Subset of Y1 st
    the TopStruct of Y0 = the TopStruct of Y1 & D0 = D1 holds
   D0 is anti-discrete implies D1 is anti-discrete;

reserve Y for non empty TopStruct;

theorem :: TEX_4:7
 for A, B being Subset of Y st B c= A holds
    A is anti-discrete implies B is anti-discrete;

theorem :: TEX_4:8
 for x being Point of Y holds {x} is anti-discrete;

theorem :: TEX_4:9
 for A being empty Subset of Y holds A is anti-discrete;

definition let Y be TopStruct;
  let IT be Subset-Family of Y;
 attr IT is anti-discrete-set-family means
:: TEX_4:def 5
 for A being Subset of Y st A in IT holds A is anti-discrete;
end;


theorem :: TEX_4:10
 for F being Subset-Family of Y st F is anti-discrete-set-family holds
  meet F <> {} implies union F is anti-discrete;

theorem :: TEX_4:11
   for F being Subset-Family of Y st F is anti-discrete-set-family holds
  meet F is anti-discrete;

definition let Y be TopStruct, x be Point of Y;
 func MaxADSF(x) -> Subset-Family of Y equals
:: TEX_4:def 6
 {A where A is Subset of Y : A is anti-discrete & x in A};
end;


registration let Y be non empty TopStruct, x be Point of Y;
 cluster MaxADSF(x) -> non empty;
 coherence
 proof
   set F = {A where A is Subset of Y : A is anti-discrete & x in A};
     {x} is anti-discrete & x in {x} by Th8,TARSKI:def 1;
    then {x} in F;
   hence thesis by Def6;
 end;
end;


reserve x for Point of Y;

theorem :: TEX_4:12
 MaxADSF(x) is anti-discrete-set-family;

theorem :: TEX_4:13
 {x} = meet MaxADSF(x);

theorem :: TEX_4:14
 {x} c= union MaxADSF(x);

theorem :: TEX_4:15
 union MaxADSF(x) is anti-discrete;


begin
:: 3. Maximal Anti-discrete Subsets of Topological Structures.

definition let Y be TopStruct;
  let IT be Subset of Y;
 attr IT is maximal_anti-discrete means
:: TEX_4:def 7
 IT is anti-discrete &
   for D being Subset of Y st D is anti-discrete & IT c= D holds IT = D;
end;


theorem :: TEX_4:16
   for Y0, Y1 being TopStruct, D0 being Subset of Y0,
   D1 being Subset of Y1 st
    the TopStruct of Y0 = the TopStruct of Y1 & D0 = D1 holds
   D0 is maximal_anti-discrete implies D1 is maximal_anti-discrete;

reserve Y for non empty TopStruct;

theorem :: TEX_4:17
 for A being empty Subset of Y holds A is not maximal_anti-discrete;

theorem :: TEX_4:18
 for A being non empty Subset of Y holds
  A is anti-discrete & A is open implies A is maximal_anti-discrete;

theorem :: TEX_4:19
 for A being non empty Subset of Y holds
  A is anti-discrete & A is closed implies A is maximal_anti-discrete;

definition let Y be TopStruct, x be Point of Y;
 func MaxADSet(x) -> Subset of Y equals
:: TEX_4:def 8
 union MaxADSF(x);
end;


registration let Y be non empty TopStruct, x be Point of Y;
 cluster MaxADSet(x) -> non empty;
 coherence
  proof
A1: MaxADSet(x) = union MaxADSF(x) by Def8;
        {x} <> {} & {x} c= union MaxADSF(x) by Th14;
   hence thesis by A1,XBOOLE_1:3;
  end;
end;


theorem :: TEX_4:20
 for x being Point of Y holds {x} c= MaxADSet(x);

theorem :: TEX_4:21
 for D being Subset of Y, x being Point of Y st
    D is anti-discrete & x in D holds D c= MaxADSet(x);

theorem :: TEX_4:22
 for x being Point of Y holds
   MaxADSet(x) is maximal_anti-discrete;

theorem :: TEX_4:23
 for x, y being Point of Y holds
   y in MaxADSet(x) iff MaxADSet(y) = MaxADSet(x);

theorem :: TEX_4:24
 for x, y being Point of Y holds
   MaxADSet(x) misses MaxADSet(y) or MaxADSet(x) = MaxADSet(y);

theorem :: TEX_4:25
 for F being Subset of Y, x being Point of Y st F is closed & x in F holds
   MaxADSet(x) c= F;

theorem :: TEX_4:26
 for G being Subset of Y, x being Point of Y st G is open & x in G holds
   MaxADSet(x) c= G;

theorem :: TEX_4:27
   for x being Point of Y holds
   {F where F is Subset of Y : F is closed & x in F} <> {} implies
  MaxADSet(x) c= meet {F where F is Subset of Y : F is closed & x in F};

theorem :: TEX_4:28
   for x being Point of Y holds
   {G where G is Subset of Y : G is open & x in G} <> {} implies
  MaxADSet(x) c= meet {G where G is Subset of Y : G is open & x in G};

definition let Y be non empty TopStruct;
  let A be Subset of Y;
 redefine attr A is maximal_anti-discrete means
:: TEX_4:def 9
 ex x being Point of Y st x in A & A = MaxADSet(x);
end;


theorem :: TEX_4:29
 for A being Subset of Y, x being Point of Y st x in A holds
   A is maximal_anti-discrete implies A = MaxADSet(x);

definition let Y be non empty TopStruct;
  let A be non empty Subset of Y;
 redefine attr A is maximal_anti-discrete means
:: TEX_4:def 10
   for x being Point of Y st x in A holds A = MaxADSet(x);
end;


definition let Y be non empty TopStruct, A be Subset of Y;
 func MaxADSet(A) -> Subset of Y equals
:: TEX_4:def 11
 union {MaxADSet(a) where a is Point of Y : a in A};
end;


theorem :: TEX_4:30
 for x being Point of Y holds MaxADSet(x) = MaxADSet({x});

theorem :: TEX_4:31
 for A being Subset of Y, x being Point of Y holds
  MaxADSet(x) meets MaxADSet(A) implies MaxADSet(x) meets A;

theorem :: TEX_4:32
 for A being Subset of Y, x being Point of Y holds
  MaxADSet(x) meets MaxADSet(A) implies MaxADSet(x) c= MaxADSet(A);

theorem :: TEX_4:33
 for A, B being Subset of Y holds A c= B
   implies MaxADSet(A) c= MaxADSet(B);

theorem :: TEX_4:34
 for A being Subset of Y holds A c= MaxADSet(A);

theorem :: TEX_4:35
 for A being Subset of Y
   holds MaxADSet(A) = MaxADSet(MaxADSet(A));

theorem :: TEX_4:36
 for A, B being Subset of Y holds
    A c= MaxADSet(B) implies MaxADSet(A) c= MaxADSet(B);

theorem :: TEX_4:37
 for A, B being Subset of Y holds
   B c= MaxADSet(A) & A c= MaxADSet(B) iff MaxADSet(A) = MaxADSet(B);

theorem :: TEX_4:38
   for A, B being Subset of Y
   holds MaxADSet(A \/ B) = MaxADSet(A) \/ MaxADSet(B);

theorem :: TEX_4:39
 for A, B being Subset of Y
  holds MaxADSet(A /\ B) c= MaxADSet(A) /\ MaxADSet(B);

registration let Y be non empty TopStruct,
  A be non empty Subset of Y;
 cluster MaxADSet(A) -> non empty;
 coherence
  proof
       A <> {} & A c= MaxADSet(A) by Th34;
   hence thesis by XBOOLE_1:3;
  end;
end;


registration let Y be non empty TopStruct, A be empty Subset of Y;
 cluster MaxADSet(A) -> empty;
 coherence
  proof
     now
    assume MaxADSet(A) is non empty;
     then consider x being set such that
            A1: x in MaxADSet(A) by XBOOLE_0:def 1;
      reconsider a = x as Point of Y by A1;
            a in union {MaxADSet(b) where b is Point of Y : b in A} by A1,Def11
;
         then consider D being set such that
                     a in D and
               A2: D in {MaxADSet(b) where b is Point of Y : b in A}
                                                             by TARSKI:def 4;
         consider b being Point of Y such that
                     D = MaxADSet(b) and A3: b in A by A2;
    thus contradiction by A3;
   end;
   hence thesis;
  end;
end;


registration let Y be non empty TopStruct,
   A be non proper Subset of Y;
 cluster MaxADSet(A) -> non proper;
 coherence
  proof
       A = the carrier of Y by TEX_2:5;
    then the carrier of Y c= MaxADSet(A) &
           MaxADSet(A) c= the carrier of Y by Th34;
    then MaxADSet(A) = the carrier of Y by XBOOLE_0:def 10;
   hence thesis by TEX_2:5;
  end;
end;


registration let Y be non trivial non empty TopStruct,
                A be non trivial (non empty Subset of Y);
 cluster MaxADSet(A) -> non trivial;
 coherence
  proof
      now
     assume A1: MaxADSet(A) is trivial;
          A c= MaxADSet(A) by Th34;
     hence contradiction by A1,TEX_2:1;
    end;
   hence thesis;
  end;
end;


theorem :: TEX_4:40
 for G being Subset of Y, A being Subset of Y
    st G is open & A c= G holds MaxADSet(A) c= G;

theorem :: TEX_4:41
 for A being Subset of Y holds
   {G where G is Subset of Y : G is open & A c= G} <> {} implies
  MaxADSet(A) c= meet {G where G is Subset of Y : G is open & A c= G};

theorem :: TEX_4:42
 for F being Subset of Y, A being Subset of Y
    st F is closed & A c= F holds
   MaxADSet(A) c= F;

theorem :: TEX_4:43
 for A being Subset of Y holds
   {F where F is Subset of Y : F is closed & A c= F} <> {}
   implies
  MaxADSet(A) c= meet {F where F is Subset of Y : F is closed & A c= F};


begin
:: 4. Anti-discrete and Maximal Anti-discrete Subsets of Topological Spaces.

definition let X be non empty TopSpace;
  let A be Subset of X;
 redefine attr A is anti-discrete means
:: TEX_4:def 12
 for x being Point of X st x in A holds A c= Cl {x};
end;


definition let X be non empty TopSpace;
  let A be Subset of X;
 redefine attr A is anti-discrete means
:: TEX_4:def 13
   for x being Point of X st x in A holds Cl A = Cl {x};
end;


definition let X be non empty TopSpace;
  let A be Subset of X;
 redefine attr A is anti-discrete means
:: TEX_4:def 14
 for x, y being Point of X st x in A & y in A holds Cl {x} = Cl {y};
end;


reserve X for non empty TopSpace;

theorem :: TEX_4:44
   for x being Point of X, D being Subset of X st
   D is anti-discrete & Cl {x} c= D holds D = Cl {x};

theorem :: TEX_4:45
   for A being Subset of X holds
    A is anti-discrete & A is closed iff
   for x being Point of X st x in A holds A = Cl {x};

theorem :: TEX_4:46
   for A being Subset of X holds
    A is anti-discrete & A is not open implies A is boundary;

theorem :: TEX_4:47
 for x being Point of X st Cl {x} = {x} holds
   {x} is maximal_anti-discrete;

reserve x,y for Point of X;

theorem :: TEX_4:48
 MaxADSet(x) c= meet {G where G is Subset of X : G is open & x in G};

theorem :: TEX_4:49
 MaxADSet(x) c= meet {F where F is Subset of X : F is closed & x in F};

theorem :: TEX_4:50
 MaxADSet(x) c= Cl {x};

theorem :: TEX_4:51
 MaxADSet(x) = MaxADSet(y) iff Cl {x} = Cl {y};

theorem :: TEX_4:52
   MaxADSet(x) misses MaxADSet(y) iff Cl {x} <> Cl {y};

definition let X be non empty TopSpace, x be Point of X;
 redefine func MaxADSet(x) -> non empty Subset of X equals
:: TEX_4:def 15
 (Cl {x}) /\ meet {G where G is Subset of X : G is open & x in G};
end;


theorem :: TEX_4:53
 for x, y being Point of X holds
  Cl {x} c= Cl {y} iff
      meet {G where G is Subset of X : G is open & y in G} c=
         meet {G where G is Subset of X : G is open & x in G};

theorem :: TEX_4:54
   for x, y being Point of X holds
  Cl {x} c= Cl {y} iff
     MaxADSet(y) c=
       meet {G where G is Subset of X : G is open & x in G};

theorem :: TEX_4:55
 for x, y being Point of X holds
  MaxADSet(x) misses MaxADSet(y) iff
   (ex V being Subset of X st
        V is open & MaxADSet(x) c= V & V misses MaxADSet(y)) or
    (ex W being Subset of X st
         W is open & W misses MaxADSet(x) & MaxADSet(y) c= W);

theorem :: TEX_4:56
   for x, y being Point of X holds
  MaxADSet(x) misses MaxADSet(y) iff
   (ex E being Subset of X st
        E is closed & MaxADSet(x) c= E & E misses MaxADSet(y)) or
    (ex F being Subset of X st
         F is closed & F misses MaxADSet(x) & MaxADSet(y) c= F);

reserve A, B for Subset of X;
reserve P, Q for Subset of X;

theorem :: TEX_4:57
 MaxADSet(A) c= meet {G where G is Subset of X : G is open & A c= G};

theorem :: TEX_4:58
 P is open implies MaxADSet(P) = P;

theorem :: TEX_4:59
   MaxADSet(Int A) = Int A;

theorem :: TEX_4:60
 MaxADSet(A) c= meet {F where F is Subset of X : F is closed & A c= F};

theorem :: TEX_4:61
 MaxADSet(A) c= Cl A;

theorem :: TEX_4:62
 P is closed implies MaxADSet(P) = P;

theorem :: TEX_4:63
   MaxADSet(Cl A) = Cl A;

theorem :: TEX_4:64
   Cl MaxADSet(A) = Cl A;

theorem :: TEX_4:65
   MaxADSet(A) = MaxADSet(B) implies Cl A = Cl B;

theorem :: TEX_4:66
   P is closed or Q is closed implies
    MaxADSet(P /\ Q) = MaxADSet(P) /\ MaxADSet(Q);

theorem :: TEX_4:67
   P is open or Q is open implies
    MaxADSet(P /\ Q) = MaxADSet(P) /\ MaxADSet(Q);


begin
:: 5. Maximal Anti-discrete Subspaces.
reserve Y for non empty TopStruct;

theorem :: TEX_4:68
 for Y0 being SubSpace of Y, A being Subset of Y
    st A = the carrier of Y0 holds
  Y0 is anti-discrete implies A is anti-discrete;

theorem :: TEX_4:69
 for Y0 being SubSpace of Y st Y0 is TopSpace-like
  for A being Subset of Y st A = the carrier of Y0 holds
               A is anti-discrete implies Y0 is anti-discrete;

reserve X for non empty TopSpace, Y0 for non empty SubSpace of X;

theorem :: TEX_4:70
   (for X0 being open SubSpace of X holds
      Y0 misses X0 or Y0 is SubSpace of X0) implies Y0 is anti-discrete;

theorem :: TEX_4:71
   (for X0 being closed SubSpace of X holds
      Y0 misses X0 or Y0 is SubSpace of X0) implies Y0 is anti-discrete;

theorem :: TEX_4:72
   for Y0 being anti-discrete SubSpace of X
  for X0 being open SubSpace of X holds Y0 misses X0 or Y0 is SubSpace of X0;

theorem :: TEX_4:73
   for Y0 being anti-discrete SubSpace of X
  for X0 being closed SubSpace of X holds Y0 misses X0 or Y0 is SubSpace of X0;

definition let Y be non empty TopStruct;
  let IT be SubSpace of Y;
 attr IT is maximal_anti-discrete means
:: TEX_4:def 16
 IT is anti-discrete &
   for Y0 being SubSpace of Y st Y0 is anti-discrete holds
              the carrier of IT c= the carrier of Y0 implies
                           the carrier of IT = the carrier of Y0;
end;


registration let Y be non empty TopStruct;
 cluster maximal_anti-discrete -> anti-discrete SubSpace of Y;
 coherence by Def16;
 cluster non anti-discrete -> non maximal_anti-discrete SubSpace of Y;
 coherence by Def16;
end;


theorem :: TEX_4:74
 for Y0 being non empty SubSpace of X, A being Subset of X
    st A = the carrier of Y0 holds
  Y0 is maximal_anti-discrete iff A is maximal_anti-discrete;

registration let X be non empty TopSpace;
 cluster open anti-discrete -> maximal_anti-discrete (non empty SubSpace of X);
 coherence
  proof let X0 be non empty SubSpace of X;
     the carrier of X0 is Subset of X by TSEP_1:1;
   then reconsider A = the carrier of X0 as Subset of X;
   assume X0 is open;
    then A1: A is open by TSEP_1:16;
   assume X0 is anti-discrete;
    then A is anti-discrete by Th68;
    then A is maximal_anti-discrete by A1,Th18;
   hence thesis by Th74;
  end;
 cluster open non maximal_anti-discrete ->
    non anti-discrete (non empty SubSpace of X);
 coherence
  proof let X0 be non empty SubSpace of X;
     the carrier of X0 is Subset of X by TSEP_1:1;
   then reconsider A = the carrier of X0 as Subset of X;
   assume X0 is open;
    then A2: A is open by TSEP_1:16;
   assume A3: X0 is non maximal_anti-discrete;
   assume X0 is anti-discrete;
    then A is anti-discrete by Th68;
    then A is maximal_anti-discrete by A2,Th18;
   hence contradiction by A3,Th74;
  end;
 cluster anti-discrete non maximal_anti-discrete ->
    non open (non empty SubSpace of X);
 coherence
  proof let X0 be non empty SubSpace of X;
     the carrier of X0 is Subset of X by TSEP_1:1;
   then reconsider A = the carrier of X0 as Subset of X;
   assume X0 is anti-discrete;
    then A4: A is anti-discrete by Th68;
   assume A5: X0 is non maximal_anti-discrete;
   assume X0 is open;
    then A is open by TSEP_1:16;
    then A is maximal_anti-discrete by A4,Th18;
   hence contradiction by A5,Th74;
  end;
 cluster closed anti-discrete ->
       maximal_anti-discrete (non empty SubSpace of X);
 coherence
  proof let X0 be non empty SubSpace of X;
     the carrier of X0 is Subset of X by TSEP_1:1;
   then reconsider A = the carrier of X0 as Subset of X;
   assume X0 is closed;
    then A6: A is closed by TSEP_1:11;
   assume X0 is anti-discrete;
    then A is anti-discrete by Th68;
    then A is maximal_anti-discrete by A6,Th19;
   hence thesis by Th74;
  end;
 cluster closed non maximal_anti-discrete ->
      non anti-discrete (non empty SubSpace of X);
 coherence
  proof let X0 be non empty SubSpace of X;
     the carrier of X0 is Subset of X by TSEP_1:1;
   then reconsider A = the carrier of X0 as Subset of X;
   assume X0 is closed;
    then A7: A is closed by TSEP_1:11;
   assume A8: X0 is non maximal_anti-discrete;
   assume X0 is anti-discrete;
    then A is anti-discrete by Th68;
    then A is maximal_anti-discrete by A7,Th19;
   hence contradiction by A8,Th74;
  end;
 cluster anti-discrete non maximal_anti-discrete ->
      non closed (non empty SubSpace of X);
 coherence
  proof let X0 be non empty SubSpace of X;
     the carrier of X0 is Subset of X by TSEP_1:1;
   then reconsider A = the carrier of X0 as Subset of X;
   assume X0 is anti-discrete;
    then A9: A is anti-discrete by Th68;
   assume A10: X0 is non maximal_anti-discrete;
   assume X0 is closed;
    then A is closed by TSEP_1:11;
    then A is maximal_anti-discrete by A9,Th19;
   hence contradiction by A10,Th74;
  end;
end;


definition let Y be TopStruct, x be Point of Y;
 func MaxADSspace(x) -> strict SubSpace of Y means
:: TEX_4:def 17
 the carrier of it = MaxADSet(x);
end;


registration let Y be non empty TopStruct, x be Point of Y;
 cluster MaxADSspace(x) -> non empty;
 coherence
  proof
     the carrier of MaxADSspace(x) = MaxADSet(x) by Def17;
   hence the carrier of MaxADSspace(x) is non empty;
  end;
end;

theorem :: TEX_4:75
   for x being Point of Y holds Sspace(x) is SubSpace of MaxADSspace(x);

theorem :: TEX_4:76
   for x, y being Point of Y holds
   y is Point of MaxADSspace(x) iff
      the TopStruct of MaxADSspace(y) = the TopStruct of MaxADSspace(x);

theorem :: TEX_4:77
   for x, y being Point of Y holds
   the carrier of MaxADSspace(x) misses the carrier of MaxADSspace(y) or
     the TopStruct of MaxADSspace(x) = the TopStruct of MaxADSspace(y);

registration let X be non empty TopSpace;
 cluster maximal_anti-discrete strict SubSpace of X;
 existence
  proof
    consider a being set such that
          A1: a in the carrier of X by XBOOLE_0:def 1;
     reconsider a as Point of X by A1;
    consider X0 being strict non empty SubSpace of X such that
            A2: MaxADSet(a) = the carrier of X0 by TSEP_1:10;
   take X0;
       MaxADSet(a) is maximal_anti-discrete by Th22;
   hence thesis by A2,Th74;
  end;
end;


registration let X be non empty TopSpace, x be Point of X;
 cluster MaxADSspace(x) -> maximal_anti-discrete;
 coherence
  proof
   A1: MaxADSet(x) = the carrier of MaxADSspace(x) by Def17;
     MaxADSet(x) is maximal_anti-discrete by Th22;
   hence thesis by A1,Th74;
  end;
end;


theorem :: TEX_4:78
   for X0 being closed non empty SubSpace of X, x being Point of X holds
  x is Point of X0 implies MaxADSspace(x) is SubSpace of X0;

theorem :: TEX_4:79
   for X0 being open non empty SubSpace of X, x being Point of X holds
  x is Point of X0 implies MaxADSspace(x) is SubSpace of X0;

theorem :: TEX_4:80
   for x being Point of X st Cl {x} = {x} holds
   Sspace(x) is maximal_anti-discrete;

definition let Y be TopStruct,
  A be Subset of Y;
 func Sspace(A) -> strict SubSpace of Y means
:: TEX_4:def 18
 the carrier of it = A;
end;


registration let Y be non empty TopStruct,
  A be non empty Subset of Y;
 cluster Sspace(A) -> non empty;
 coherence
 proof
   thus the carrier of Sspace A is non empty by Def18;
 end;
end;


theorem :: TEX_4:81
   for A being non empty Subset of Y
   holds A is Subset of Sspace(A);

theorem :: TEX_4:82
   for Y0 being SubSpace of Y, A being non empty Subset of Y
holds
              A is Subset of Y0
              implies Sspace(A) is SubSpace of Y0;

registration let Y be non trivial non empty TopStruct;
 cluster non proper strict SubSpace of Y;
 existence
  proof
       [#]Y = the carrier of Y by PRE_TOPC:12;
    then reconsider A0 = the carrier of Y
       as non empty Subset of Y;
   set Y0 = Y|A0;
   take Y0;
      A0 = [#]Y0 by PRE_TOPC:def 10;
    then A0 = the carrier of Y0 by PRE_TOPC:12;
   hence thesis by TEX_2:15;
  end;
end;


registration let Y be non trivial non empty TopStruct,
                A be non trivial (non empty Subset of Y);
 cluster Sspace(A) -> non trivial;
 coherence
  proof
      now
     assume Sspace(A) is trivial;
        then the carrier of Sspace(A) is trivial by REALSET1:def 13;
     hence contradiction by Def18;
    end;
   hence thesis;
  end;
end;


registration let Y be non empty TopStruct,
  A be non proper non empty Subset of Y;
 cluster Sspace(A) -> non proper;
 coherence
  proof
      now
       A1: the carrier of Sspace(A) = A by Def18;
     assume Sspace(A) is proper;
     hence contradiction by A1,TEX_2:13;
    end;
   hence thesis;
  end;
end;


definition let Y be non empty TopStruct,
   A be Subset of Y;
 func MaxADSspace(A) -> strict SubSpace of Y means
:: TEX_4:def 19
 the carrier of it = MaxADSet(A);
end;


registration let Y be non empty TopStruct,
   A be non empty Subset of Y;
 cluster MaxADSspace(A) -> non empty;
 coherence
 proof
     the carrier of MaxADSspace(A) = MaxADSet(A) by Def19;
   hence the carrier of MaxADSspace(A) is non empty;
 end;
end;


theorem :: TEX_4:83
   for A being non empty Subset of Y
   holds A is Subset of MaxADSspace(A);

theorem :: TEX_4:84
   for A being non empty Subset of Y holds
   Sspace(A) is SubSpace of MaxADSspace(A);

theorem :: TEX_4:85
   for x being Point of Y holds
   the TopStruct of MaxADSspace(x) = the TopStruct of MaxADSspace({x});

theorem :: TEX_4:86
   for A, B being non empty Subset of Y holds
   A c= B implies MaxADSspace(A) is SubSpace of MaxADSspace(B);

theorem :: TEX_4:87
   for A being non empty Subset of Y holds
  the TopStruct of MaxADSspace(A) = the TopStruct of MaxADSspace(MaxADSet(A));

theorem :: TEX_4:88
   for A, B being non empty Subset of Y holds
  A is Subset of MaxADSspace(B) implies
    MaxADSspace(A) is SubSpace of MaxADSspace(B);

theorem :: TEX_4:89
   for A, B being non empty Subset of Y holds
   B is Subset of MaxADSspace(A) &
   A is Subset of MaxADSspace(B) iff
    the TopStruct of MaxADSspace(A) = the TopStruct of MaxADSspace(B);

registration let Y be non trivial non empty TopStruct,
                A be non trivial (non empty Subset of Y);
 cluster MaxADSspace(A) -> non trivial;
 coherence
  proof
      now
     assume MaxADSspace(A) is trivial;
        then the carrier of MaxADSspace(A) is trivial by REALSET1:def 13;
       then MaxADSet(A) is trivial by Def19;
     hence contradiction;
    end;
   hence thesis;
  end;
end;


registration let Y be non empty TopStruct,
   A be non proper non empty Subset of Y;
 cluster MaxADSspace(A) -> non proper;
 coherence
  proof
      now
       A1: the carrier of MaxADSspace(A) = MaxADSet(A) by Def19;
     assume MaxADSspace(A) is proper;
     hence contradiction by A1,TEX_2:13;
    end;
   hence thesis;
  end;
end;


theorem :: TEX_4:90
   for X0 being open SubSpace of X, A being non empty Subset of
X
   holds A is Subset of X0
     implies MaxADSspace(A) is SubSpace of X0;

theorem :: TEX_4:91
   for X0 being closed SubSpace of X,
     A being non empty Subset of X holds
     A is Subset of X0 implies MaxADSspace(A) is SubSpace of X0;
