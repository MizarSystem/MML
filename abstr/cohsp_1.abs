:: Continuous, Stable, and Linear Maps of Coherence Spaces
::  by Grzegorz Bancerek
::
:: Received August 30, 1995
:: Copyright (c) 1995 Association of Mizar Users

environ

 vocabulary FUNCT_1, TARSKI, FINSET_1, COH_SP, BOOLE, RELAT_1, CLASSES1,
      TOLER_1, FINSUB_1, CARD_1, ARYTM_1, FUNCOP_1, PBOOLE, MCART_1, PROB_1,
      ZF_LANG, CARD_3, FINSEQ_1, FUNCT_5, LATTICES, MONOID_0, COHSP_1;
 notation TARSKI, XBOOLE_0, ENUMSET1, ZFMISC_1, SUBSET_1, REAL_1, NAT_1,
      MCART_1, RELAT_1, FUNCT_1, FINSEQ_1, FINSET_1, FINSUB_1, TOLER_1,
      CLASSES1, COH_SP, PBOOLE, CARD_1, FUNCT_5, PROB_1, CARD_3, PARTFUN1,
      FUNCT_2, BORSUK_1;
 constructors ENUMSET1, REAL_1, NAT_1, FINSUB_1, COH_SP, BORSUK_1, INDEX_1,
      PROB_1, MEMBERED;
 clusters SUBSET_1, RELSET_1, FINSET_1, FINSUB_1, FINSEQ_1, NAT_1, PARTFUN1;
 requirements NUMERALS, BOOLE, SUBSET;


begin

definition
 let X be set;
 redefine attr X is binary_complete means
:: COHSP_1:def 1
  for A being set st for a,b being set st a in A & b in A holds a \/ b in X
    holds union A in X;
end;
registration
 cluster finite Coherence_Space;
 existence by COH_SP:3;
 end;


definition
 let X be set;
 func FlatCoh X -> set equals
:: COHSP_1:def 2

   CohSp id X;
 func Sub_of_Fin X -> Subset of X means
:: COHSP_1:def 3

  for x being set holds x in it iff x in X & x is finite;
end;


theorem :: COHSP_1:1
 for X,x being set holds
  x in FlatCoh X iff x = {} or ex y being set st x = {y} & y in X;

theorem :: COHSP_1:2
 for X being set holds union FlatCoh X = X;

theorem :: COHSP_1:3
   for X being finite subset-closed set holds Sub_of_Fin X = X;

registration
 cluster {{}} -> subset-closed binary_complete;
 coherence by COH_SP:3;
 let X be set;
 cluster bool X -> subset-closed binary_complete;
 coherence by COH_SP:2;
 cluster FlatCoh X -> non empty subset-closed binary_complete;
 coherence
  proof
      FlatCoh X = CohSp id X by Def2;
   hence thesis;
  end;
end;


registration let C be non empty subset-closed set;
 cluster Sub_of_Fin C -> non empty subset-closed;
 coherence
  proof consider c being Element of C;
      {} c= c by XBOOLE_1:2;
    then {} in C by CLASSES1:def 1;
   hence Sub_of_Fin C is non empty by Def3;
   let a,b be set; assume a in Sub_of_Fin C;
then A1:  a in C & a is finite by Def3;
   assume b c= a; then b is finite & b in C by A1,CLASSES1:def 1,FINSET_1:13;
   hence thesis by Def3;
  end;
end;


theorem :: COHSP_1:4
   Web {{}} = {};

scheme :: COHSP_1:sch 1
 MinimalElement_wrt_Incl { a, A() -> set, P[set] }:
 ex a being set st a in A() & P[a] &
  for b being set st b in A() & P[b] & b c= a holds b = a
 provided
   a() in A()
 and
   P[a()]
 and
   a() is finite
proof
    defpred p[set] means $1 c= a() & P[$1];
    consider X being set such that
A4:  for x being set holds x in X iff x in A() & p[x] from XBOOLE_0:sch 1;
   reconsider a = a() as finite set by A3;
      bool a is finite & X c= bool a
     proof thus bool a is finite by FINSET_1:24;
      let x be set; assume x in X; then x c= a by A4;
      hence thesis;
     end;
   then reconsider X as finite set by FINSET_1:13;
  defpred P[set,set] means $1 c= $2;
A5:  X <> {} by A1,A2,A4;
A6: for x,y being set st P[x,y] & P[y,x] holds x = y by XBOOLE_0:def 10;
A7: for x,y,z being set st P[x,y] & P[y,z] holds P[x,z] by XBOOLE_1:1;
   consider x being set such that
A8:  x in X & for y being set st y in X & y <> x holds not P[y,x]
     from CARD_3:sch 2(A5,A6,A7);
   take x; thus x in A() & P[x] by A4,A8;
   let b be set; assume
A9:  b in
 A() & P[b] & b c= x; x c= a by A4,A8; then b c= a by A9,XBOOLE_1:1;
    then b in X by A4,A9;
   hence b = x by A8,A9;
  end;

registration let C be Coherence_Space;
 cluster finite Element of C;
  existence
   proof reconsider E = {} as Element of C by COH_SP:1;
    take E; thus thesis;
   end;
end;


definition let X be set;
 attr X is c=directed means
:: COHSP_1:def 4
    for Y being finite Subset of X ex a being set st union Y c= a & a in X;
 attr X is c=filtered means
:: COHSP_1:def 5
    for Y being finite Subset of X
   ex a being set st (for y being set st y in Y holds a c= y) & a in X;
end;


registration
 cluster c=directed -> non empty set;
  coherence
   proof let X be set; consider Y being finite Subset of X; assume
       for Y being finite Subset of X
      ex a being set st union Y c= a & a in X;
     then ex a being set st union Y c= a & a in X;
    hence thesis;
   end;
 cluster c=filtered -> non empty set;
  coherence
   proof let X be set; consider Y being finite Subset of X; assume
       for Y being finite Subset of X
      ex a being set st (for y being set st y in Y holds a c= y) & a in X;
     then ex a being set st (for y being set st y in Y holds a c= y) & a in X;
    hence thesis;
   end;
end;


theorem :: COHSP_1:5
 for X being set st X is c=directed
  for a,b being set st a in X & b in X ex c being set st a \/ b c= c & c in X;

theorem :: COHSP_1:6
 for X being non empty set st
  for a,b being set st a in X & b in X ex c being set st a \/ b c= c & c in X
 holds X is c=directed;

theorem :: COHSP_1:7
   for X being set st X is c=filtered
  for a,b being set st a in X & b in X ex c being set st c c= a /\ b & c in X;

theorem :: COHSP_1:8
 for X being non empty set st
  for a,b being set st a in X & b in X ex c being set st c c= a /\ b & c in X
 holds X is c=filtered;

theorem :: COHSP_1:9
 for x being set holds {x} is c=directed c=filtered;

theorem :: COHSP_1:10
   for x,y being set holds {x,y,x \/ y} is c=directed;

theorem :: COHSP_1:11
   for x,y being set holds {x,y,x /\ y} is c=filtered;

registration
 cluster c=directed c=filtered finite set;
  existence
   proof consider x being set; take {x}; thus thesis by Th9;
   end;
end;


registration let C be non empty set;
 cluster c=directed c=filtered finite Subset of C;
  existence
   proof consider x being Element of C;
       {x} is Subset of C & {x} is c=directed c=filtered finite by Th9,ZFMISC_1
:37;
    hence thesis;
   end;
end;


theorem :: COHSP_1:12
 for X being set holds Fin X is c=directed c=filtered;

registration let X be set;
 cluster Fin X -> c=directed c=filtered;
 coherence by Th12;
end;

registration
 let C be subset-closed non empty set;
 cluster preBoolean non empty Subset of C;
 existence
  proof consider a being Element of C;
   reconsider b = Fin a as Subset of C by Lm3;
   take b; thus thesis;
  end;
end;


definition
 let C be subset-closed non empty set;
 let a be Element of C;
 redefine func Fin a -> preBoolean non empty Subset of C;
end;


theorem :: COHSP_1:13
 for X being non empty set, Y being set st
  X is c=directed & Y c= union X & Y is finite
   ex Z being set st Z in X & Y c= Z;

notation let X be set;
 synonym X is multiplicative for X is cap-closed;
 end;


definition let X be set;
 canceled;

 attr X is d.union-closed means
:: COHSP_1:def 7
  for A being Subset of X st A is c=directed holds union A in X;
end;


registration
 cluster subset-closed -> multiplicative set;
 coherence
  proof let C be set such that
A1:  C is subset-closed;
   let x,y be set;
      x /\ y c= x by XBOOLE_1:17;
   hence thesis by A1,CLASSES1:def 1;
  end;
end;


canceled;

theorem :: COHSP_1:15
 for C being Coherence_Space, A being c=directed Subset of C holds union A in C
;

registration
 cluster -> d.union-closed Coherence_Space;
  coherence
   proof let C be Coherence_Space;
    let A be Subset of C;
    thus thesis by Th15;
   end;
end;


registration
 cluster multiplicative d.union-closed Coherence_Space;
  existence
   proof consider C being Coherence_Space; take C; thus thesis;
   end;
end;


definition
 let C be d.union-closed non empty set, A be c=directed Subset of C;
 redefine func union A -> Element of C;
end;


definition
 let X, Y be set;
 pred X includes_lattice_of Y means
:: COHSP_1:def 8
    for a,b being set st a in Y & b in Y holds a /\ b in X & a \/ b in X;
end;


theorem :: COHSP_1:16
   for X being non empty set st X includes_lattice_of X holds
   X is c=directed c=filtered;

definition
 let X, x, y be set;
 pred X includes_lattice_of x, y means
:: COHSP_1:def 9
    X includes_lattice_of {x, y};
end;


theorem :: COHSP_1:17
 for X,x,y being set holds X includes_lattice_of x, y iff
  x in X & y in X & x /\ y in X & x \/ y in X;


begin :: Continuous, Stable, and Linear Functions


definition let f be Function;
 attr f is union-distributive means
:: COHSP_1:def 10

  for A being Subset of dom f st union A in dom f holds
   f.union A = union (f.:A);
 attr f is d.union-distributive means
:: COHSP_1:def 11

  for A being Subset of dom f st A is c=directed & union A in dom f holds
   f.union A = union (f.:A);
end;


definition let f be Function;
 attr f is c=-monotone means
:: COHSP_1:def 12

  for a, b being set st a in dom f & b in dom f & a c= b holds f.a c= f.b;
 attr f is cap-distributive means
:: COHSP_1:def 13

  for a,b being set st dom f includes_lattice_of a, b holds
   f.(a/\b) = f.a /\ f.b;
end;


registration
 cluster d.union-distributive -> c=-monotone Function;
  coherence
   proof let f be Function; assume
A1:   for A being Subset of dom f st A is c=directed & union A in dom f holds
      f.union A = union (f.:A);
    let a, b be set; assume
A2:   a in dom f & b in dom f & a c= b;
    then reconsider A = {a,b} as Subset of dom f by ZFMISC_1:38;
A3:   union A = a \/ b by ZFMISC_1:93 .= b by A2,XBOOLE_1:12;
       A is c=directed
      proof let Y be finite Subset of A;
       take b;
          union Y c= union A by ZFMISC_1:95;
        then union Y c= a \/ b by ZFMISC_1:93;
       hence thesis by A2,TARSKI:def 2,XBOOLE_1:12;
      end;
then A4:   union (f.:A) = f.b by A1,A2,A3;
       a in A by TARSKI:def 2;
     then f.a in f.:A by FUNCT_1:def 12;
    hence thesis by A4,ZFMISC_1:92;
   end;
 cluster union-distributive -> d.union-distributive Function;
  coherence
   proof let f be Function; assume
A5:   for A being Subset of dom f st union A in dom f holds
      f.union A = union (f.:A);
    let A be Subset of dom f;
    thus thesis by A5;
   end;
end;


theorem :: COHSP_1:18
   for f being Function st f is union-distributive
 for x,y being set st x in dom f & y in dom f & x \/ y in dom f
  holds f.(x \/ y) = (f.x) \/ (f.y);

theorem :: COHSP_1:19
 for f being Function st f is union-distributive holds f.{} = {};

registration let C1,C2 be Coherence_Space;
 cluster union-distributive cap-distributive Function of C1, C2;
 existence
  proof reconsider a = {} as Element of C2 by COH_SP:1;
   take f = C1 --> a;
A1:  dom f = C1 by FUNCOP_1:19;
   thus f is union-distributive
    proof let A be Subset of dom f; assume union A in dom f;
then A2:    f.union A = {} by A1,FUNCOP_1:13;
        f.:A c= {{}}
       proof let x be set; assume x in f.:A;
         then ex y being set st y in dom f & y in A & x = f.y by FUNCT_1:def 12
;
         then x = {} by A1,FUNCOP_1:13;
        hence thesis by TARSKI:def 1;
       end;
      then union (f.:A) c= union {{}} & union {{}} = {} by ZFMISC_1:31,95;
     hence f.union A = union (f.:A) by A2,XBOOLE_1:3;
    end;
   let a,b be set; assume dom f includes_lattice_of a, b;
    then a in dom f & b in dom f & a /\ b in dom f by Th17;
    then f.a = {} & f.b = {} & f.(a/\b) = {} by A1,FUNCOP_1:13;
   hence f.(a/\b) = f.a /\ f.b;
  end;
end;


registration let C be Coherence_Space;
 cluster union-distributive cap-distributive ManySortedSet of C;
  existence
   proof consider f being union-distributive cap-distributive Function of C, C;
       dom f = C by FUNCT_2:67;
     then reconsider f as ManySortedSet of C by PBOOLE:def 3;
    take f; thus thesis;
   end;
end;


::definition
:: cluster union-distributive cap-distributive Function;
::end;

definition let f be Function;
 attr f is U-continuous means
:: COHSP_1:def 14

  dom f is d.union-closed & f is d.union-distributive;
end;


definition let f be Function;
 attr f is U-stable means
:: COHSP_1:def 15

  dom f is multiplicative & f is U-continuous cap-distributive;
end;


definition let f be Function;
 attr f is U-linear means
:: COHSP_1:def 16

   f is U-stable union-distributive;
end;


registration
 cluster U-continuous -> d.union-distributive Function;
  coherence by Def14;
 cluster U-stable -> cap-distributive U-continuous Function;
  coherence by Def15;
 cluster U-linear -> union-distributive U-stable Function;
  coherence by Def16;
end;


registration let X be d.union-closed set;
 cluster d.union-distributive -> U-continuous ManySortedSet of X;
 coherence
  proof let f be ManySortedSet of X; dom f = X by PBOOLE:def 3;
   hence thesis by Def14;
  end;
end;


registration let X be multiplicative set;
 cluster U-continuous cap-distributive -> U-stable ManySortedSet of X;
 coherence
  proof let f be ManySortedSet of X; dom f = X by PBOOLE:def 3;
   hence thesis by Def15;
  end;
end;


registration
 cluster U-stable union-distributive -> U-linear Function;
 coherence by Def16;
end;



registration
 cluster U-linear Function;
  existence
   proof consider C being Coherence_Space;
    consider f being union-distributive cap-distributive ManySortedSet of C;
    take f; thus thesis;
   end;
 let C be Coherence_Space;
 cluster U-linear ManySortedSet of C;
  existence
   proof
    consider f being union-distributive cap-distributive ManySortedSet of C;
    take f; thus thesis;
   end;
 let B be Coherence_Space;
 cluster U-linear Function of B,C;
  existence
   proof
     consider f being union-distributive cap-distributive Function of B,C;
    take f;
       dom f = B by FUNCT_2:def 1;
     then reconsider f as
      union-distributive cap-distributive ManySortedSet of B by PBOOLE:def 3;
       f is U-linear;
    hence thesis;
   end;
end;


registration let f be U-continuous Function;
 cluster dom f -> d.union-closed;
 coherence by Def14;
end;


registration let f be U-stable Function;
 cluster dom f -> multiplicative;
 coherence by Def15;
end;


theorem :: COHSP_1:20
 for X being set holds union Fin X = X;

theorem :: COHSP_1:21
 for f being U-continuous Function st dom f is subset-closed
  for a being set st a in dom f holds f.a = union (f.:Fin a);

theorem :: COHSP_1:22
 for f being Function st dom f is subset-closed holds
  f is U-continuous iff dom f is d.union-closed & f is c=-monotone &
   for a, y being set st a in dom f & y in f.a
    ex b being set st b is finite & b c= a & y in f.b;

theorem :: COHSP_1:23
 for f being Function st dom f is subset-closed d.union-closed holds
  f is U-stable iff f is c=-monotone &
   for a, y being set st a in dom f & y in f.a
    ex b being set st b is finite & b c= a & y in f.b &
     for c being set st c c= a & y in f.c holds b c= c;

theorem :: COHSP_1:24
 for f being Function st dom f is subset-closed d.union-closed holds
  f is U-linear iff f is c=-monotone &
   for a, y being set st a in dom f & y in f.a
    ex x being set st x in a & y in f.{x} &
     for b being set st b c= a & y in f.b holds x in b;


begin :: Graph of Continuous Function


definition let f be Function;
 func graph f -> set means
:: COHSP_1:def 17

  for x being set holds x in it iff
   ex y being finite set, z being set st x = [y,z] & y in dom f & z in f.y;
end;


definition
 let C1,C2 be non empty set;
 let f be Function of C1,C2;
 redefine func graph f -> Subset of [:C1, union C2:];
end;


registration let f be Function;
 cluster graph f -> Relation-like;
 coherence
  proof let x be set; assume x in graph f;
    then ex y being finite set, z being set st x = [y,z] & y in dom f & z in f
.y
     by Def17;
   hence thesis;
  end;
end;


theorem :: COHSP_1:25
 for f being Function, x,y being set holds
  [x,y] in graph f iff x is finite & x in dom f & y in f.x;

theorem :: COHSP_1:26
 for f being c=-monotone Function
 for a,b being set st b in dom f & a c= b & b is finite
 for y being set st [a,y] in graph f holds [b,y] in graph f;

theorem :: COHSP_1:27
 for C1, C2 being Coherence_Space
 for f being Function of C1,C2
 for a being Element of C1 for y1,y2 being set
  st [a,y1] in graph f & [a,y2] in graph f holds {y1,y2} in C2;

theorem :: COHSP_1:28
   for C1, C2 being Coherence_Space
 for f being c=-monotone Function of C1,C2
 for a,b being Element of C1 st a \/ b in C1
 for y1,y2 being set st [a,y1] in graph f & [b,y2] in graph f holds {y1,y2} in
 C2;

theorem :: COHSP_1:29
 for C1, C2 being Coherence_Space
 for f,g being U-continuous Function of C1,C2
  st graph f = graph g holds f = g;

theorem :: COHSP_1:30
   for C1, C2 being Coherence_Space
 for X being Subset of [:C1, union C2:] st
  (for x being set st x in X holds x`1 is finite) &
  (for a,b being finite Element of C1 st a c= b
    for y being set st [a,y] in X holds [b,y] in X) &
  (for a being finite Element of C1 for y1,y2 being set
    st [a,y1] in X & [a,y2] in X holds {y1,y2} in C2)
 ex f being U-continuous Function of C1,C2 st X = graph f;

theorem :: COHSP_1:31
   for C1, C2 being Coherence_Space
 for f being U-continuous Function of C1,C2
 for a being Element of C1 holds f.a = (graph f).:Fin a;


begin :: Trace of Stable Function


definition let f be Function;
 func Trace f -> set means
:: COHSP_1:def 18

  for x being set holds x in it iff
   ex a, y being set st x = [a,y] & a in dom f & y in f.a &
    for b being set st b in dom f & b c= a & y in f.b holds a = b;
end;


theorem :: COHSP_1:32
 for f being Function for a, y being set holds
  [a,y] in Trace f iff a in dom f & y in f.a &
   for b being set st b in dom f & b c= a & y in f.b holds a = b;

definition
 let C1, C2 be non empty set;
 let f be Function of C1, C2;
 redefine func Trace f -> Subset of [:C1, union C2:];
end;


registration let f be Function;
 cluster Trace f -> Relation-like;
  coherence
   proof let x be set; assume x in Trace f;
     then ex a, y being set st x = [a,y] & a in dom f & y in f.a &
      for b being set st b in dom f & b c= a & y in f.b holds a = b by Def18;
    hence thesis;
   end;
end;


theorem :: COHSP_1:33
   for f being U-continuous Function st dom f is subset-closed holds
   Trace f c= graph f;

theorem :: COHSP_1:34
 for f being U-continuous Function st dom f is subset-closed
 for a, y being set st [a,y] in Trace f holds a is finite;

theorem :: COHSP_1:35
 for C1, C2 being Coherence_Space
 for f being c=-monotone Function of C1,C2
 for a1,a2 being set st a1 \/ a2 in C1
 for y1,y2 being set st [a1,y1] in Trace f & [a2,y2] in Trace f
   holds {y1,y2} in C2;

theorem :: COHSP_1:36
 for C1, C2 being Coherence_Space
 for f being cap-distributive Function of C1,C2
 for a1,a2 being set st a1 \/ a2 in C1
 for y being set st [a1,y] in Trace f & [a2,y] in Trace f holds a1 = a2;

theorem :: COHSP_1:37
 for C1, C2 being Coherence_Space
 for f,g being U-stable Function of C1,C2 st Trace f c= Trace g
 for a being Element of C1 holds f.a c= g.a;

theorem :: COHSP_1:38
 for C1, C2 being Coherence_Space
 for f,g being U-stable Function of C1,C2
  st Trace f = Trace g holds f = g;

theorem :: COHSP_1:39
 for C1, C2 being Coherence_Space
 for X being Subset of [:C1, union C2:] st
  (for x being set st x in X holds x`1 is finite) &
  (for a,b being Element of C1 st a \/ b in C1
    for y1,y2 being set st [a,y1] in X & [b,y2] in X holds {y1,y2} in C2) &
  (for a,b being Element of C1 st a \/ b in C1
    for y being set st [a,y] in X & [b,y] in X holds a = b)
 ex f being U-stable Function of C1,C2 st X = Trace f;

theorem :: COHSP_1:40
   for C1, C2 being Coherence_Space
 for f being U-stable Function of C1,C2
 for a being Element of C1 holds f.a = (Trace f).:Fin a;

theorem :: COHSP_1:41
 for C1,C2 being Coherence_Space, f being U-stable Function of C1,C2
 for a being Element of C1, y being set holds
  y in f.a iff ex b being Element of C1 st [b,y] in Trace f & b c= a;

theorem :: COHSP_1:42
   for C1, C2 being Coherence_Space
 ex f being U-stable Function of C1, C2 st Trace f = {};

theorem :: COHSP_1:43
 for C1, C2 being Coherence_Space
 for a being finite Element of C1, y being set st y in union C2
 ex f being U-stable Function of C1, C2 st Trace f = {[a,y]};

theorem :: COHSP_1:44
   for C1, C2 being Coherence_Space
 for a being Element of C1, y being set
 for f being U-stable Function of C1, C2 st Trace f = {[a,y]}
 for b being Element of C1 holds
   (a c= b implies f.b = {y}) & (not a c= b implies f.b = {});

theorem :: COHSP_1:45
 for C1, C2 being Coherence_Space
 for f being U-stable Function of C1,C2
 for X being Subset of Trace f
 ex g being U-stable Function of C1, C2 st Trace g = X;

theorem :: COHSP_1:46
 for C1, C2 being Coherence_Space
 for A being set st
   for x,y being set st x in A & y in A
     ex f being U-stable Function of C1,C2 st x \/ y = Trace f
 ex f being U-stable Function of C1,C2 st union A = Trace f;

definition let C1, C2 be Coherence_Space;
 func StabCoh(C1,C2) -> set means
:: COHSP_1:def 19

  for x being set holds x in it iff
   ex f being U-stable Function of C1,C2 st x = Trace f;
end;


registration let C1, C2 be Coherence_Space;
 cluster StabCoh(C1,C2) -> non empty subset-closed binary_complete;
 coherence
  proof consider f being U-stable Function of C1,C2;
   set C = StabCoh(C1,C2);
      Trace f in C by Def19;
   hence C is non empty;
   thus C is subset-closed
    proof let a,b be set; assume a in C;
     then consider f being U-stable Function of C1,C2 such that
A1:    a = Trace f by Def19;
     assume b c= a;
      then ex g being U-stable Function of C1, C2 st Trace g = b by A1,Th45;
     hence thesis by Def19;
    end;
   let A be set; assume
A2:  for a,b being set st a in A & b in A holds a \/ b in C;
      now let x,y be set; assume x in A & y in A;
      then x \/ y in C by A2;
     hence ex f being U-stable Function of C1,C2 st x \/ y = Trace f by Def19;
    end;
    then ex f being U-stable Function of C1,C2 st union A = Trace f by Th46;
   hence union A in C by Def19;
  end;
end;


theorem :: COHSP_1:47
 for C1,C2 being Coherence_Space, f being U-stable Function of C1,C2 holds
  Trace f c= [:Sub_of_Fin C1, union C2:];

theorem :: COHSP_1:48
  for C1,C2 being Coherence_Space holds
  union StabCoh(C1,C2) = [:Sub_of_Fin C1, union C2:];

theorem :: COHSP_1:49
 for C1,C2 being Coherence_Space
 for a,b being finite Element of C1, y1,y2 being set holds
  [[a,y1],[b,y2]] in Web StabCoh(C1,C2) iff
   not a \/ b in C1 & y1 in union C2 & y2 in union C2 or
   [y1,y2] in Web C2 & (y1 = y2 implies a = b);

begin :: Trace of Linear Functions


theorem :: COHSP_1:50
 for C1, C2 being Coherence_Space
 for f being U-stable Function of C1,C2 holds
  f is U-linear iff
   for a,y being set st [a,y] in Trace f ex x being set st a = {x};

definition let f be Function;
 func LinTrace f -> set means
:: COHSP_1:def 20

  for x being set holds x in it iff
   ex y,z being set st x = [y,z] & [{y},z] in Trace f;
end;


theorem :: COHSP_1:51
 for f being Function, x,y being set holds
  [x,y] in LinTrace f iff [{x},y] in Trace f;

theorem :: COHSP_1:52
 for f being Function st f.{} = {}
  for x,y being set st {x} in dom f & y in f.{x} holds [x,y] in LinTrace f;

theorem :: COHSP_1:53
 for f being Function, x,y being set st [x,y] in LinTrace f
  holds {x} in dom f & y in f.{x};

definition
 let C1, C2 be non empty set;
 let f be Function of C1, C2;
 redefine func LinTrace f -> Subset of [:union C1, union C2:];
end;


registration let f be Function;
 cluster LinTrace f -> Relation-like;
  coherence
   proof let x be set; assume x in LinTrace f;
     then ex y,z being set st x = [y,z] & [{y},z] in Trace f by Def20;
    hence thesis;
   end;
end;


definition let C1, C2 be Coherence_Space;
 func LinCoh(C1,C2) -> set means
:: COHSP_1:def 21

  for x being set holds x in it iff
   ex f being U-linear Function of C1,C2 st x = LinTrace f;
end;


theorem :: COHSP_1:54
 for C1, C2 being Coherence_Space
 for f being c=-monotone Function of C1,C2
 for x1,x2 being set st {x1,x2} in C1
 for y1,y2 being set st [x1,y1] in LinTrace f & [x2,y2] in LinTrace f
   holds {y1,y2} in C2;

theorem :: COHSP_1:55
 for C1, C2 being Coherence_Space
 for f being cap-distributive Function of C1,C2
 for x1,x2 being set st {x1,x2} in C1
 for y being set st [x1,y] in LinTrace f & [x2,y] in LinTrace f holds x1 = x2;

theorem :: COHSP_1:56
 for C1, C2 being Coherence_Space
 for f,g being U-linear Function of C1,C2
  st LinTrace f = LinTrace g holds f = g;

theorem :: COHSP_1:57
 for C1, C2 being Coherence_Space
 for X being Subset of [:union C1, union C2:] st
  (for a,b being set st {a,b} in C1
    for y1,y2 being set st [a,y1] in X & [b,y2] in X holds {y1,y2} in C2) &
  (for a,b being set st {a,b} in C1
    for y being set st [a,y] in X & [b,y] in X holds a = b)
 ex f being U-linear Function of C1,C2 st X = LinTrace f;

theorem :: COHSP_1:58
   for C1, C2 being Coherence_Space
 for f being U-linear Function of C1,C2
 for a being Element of C1 holds f.a = (LinTrace f).:a;

theorem :: COHSP_1:59
   for C1, C2 being Coherence_Space
 ex f being U-linear Function of C1, C2 st LinTrace f = {};

theorem :: COHSP_1:60
 for C1, C2 being Coherence_Space
 for x being set, y being set st x in union C1 & y in union C2
 ex f being U-linear Function of C1, C2 st LinTrace f = {[x,y]};

theorem :: COHSP_1:61
   for C1, C2 being Coherence_Space
 for x being set, y being set st x in union C1 & y in union C2
 for f being U-linear Function of C1, C2 st LinTrace f = {[x,y]}
 for a being Element of C1 holds
   (x in a implies f.a = {y}) & (not x in a implies f.a = {});

theorem :: COHSP_1:62
 for C1, C2 being Coherence_Space
 for f being U-linear Function of C1,C2
 for X being Subset of LinTrace f
 ex g being U-linear Function of C1, C2 st LinTrace g = X;

theorem :: COHSP_1:63
 for C1, C2 being Coherence_Space
 for A being set st
   for x,y being set st x in A & y in A
     ex f being U-linear Function of C1,C2 st x \/ y = LinTrace f
 ex f being U-linear Function of C1,C2 st union A = LinTrace f;

registration let C1, C2 be Coherence_Space;
 cluster LinCoh(C1,C2) -> non empty subset-closed binary_complete;
 coherence
  proof consider f being U-linear Function of C1,C2;
   set C = LinCoh(C1,C2);
      LinTrace f in C by Def21;
   hence C is non empty;
   thus C is subset-closed
    proof let a,b be set; assume a in C;
     then consider f being U-linear Function of C1,C2 such that
A1:    a = LinTrace f by Def21;
     assume b c= a;
      then ex g being U-linear Function of C1, C2 st LinTrace g = b by A1,Th62
;
     hence thesis by Def21;
    end;
   let A be set; assume
A2:  for a,b being set st a in A & b in A holds a \/ b in C;
      now let x,y be set; assume x in A & y in A;
      then x \/ y in C by A2;
     hence ex f being U-linear Function of C1,C2 st x \/
 y = LinTrace f by Def21
;
    end;
    then ex f being U-linear Function of C1,C2 st union A = LinTrace f by Th63
;
   hence union A in C by Def21;
  end;
end;


theorem :: COHSP_1:64
   for C1,C2 being Coherence_Space holds
  union LinCoh(C1,C2) = [:union C1, union C2:];

theorem :: COHSP_1:65
   for C1,C2 being Coherence_Space
 for x1,x2 being set, y1,y2 being set holds
  [[x1,y1],[x2,y2]] in Web LinCoh(C1,C2) iff x1 in union C1 & x2 in union C1 &
   (not [x1,x2] in Web C1 & y1 in union C2 & y2 in union C2 or
    [y1,y2] in Web C2 & (y1 = y2 implies x1 = x2));


begin :: Negation of Coherence Spaces


definition
 let C be Coherence_Space;
 func 'not' C -> set equals
:: COHSP_1:def 22

   {a where a is Subset of union C:
        for b being Element of C ex x being set st a /\ b c= {x}};
end;


theorem :: COHSP_1:66
 for C being Coherence_Space, x being set holds
  x in 'not' C iff x c= union C &
   for a being Element of C ex z being set st x /\ a c= {z};

registration
 let C be Coherence_Space;
 cluster 'not' C -> non empty subset-closed binary_complete;
  coherence
   proof
A1:   'not' C = {a where a is Subset of union C:
           for b being Element of C ex x being set st a /\ b c= {x}} by Def22;
    reconsider a = {} as Subset of union C by XBOOLE_1:2;
       now let b be Element of C; consider x being set; take x;
      thus a /\ b c= {x} by XBOOLE_1:2;
     end;
     then a in 'not' C by A1;
    hence 'not' C is non empty;
    hereby let a, b be set; assume a in 'not' C;
     then consider aa being Subset of union C such that
A2:    a = aa & for b being Element of C ex x being set st aa /\
 b c= {x} by A1;
     assume
A3:    b c= a;
     then reconsider bb = b as Subset of union C by A2,XBOOLE_1:1;
        now let c be Element of C;
       consider x being set such that
A4:      aa /\ c c= {x} by A2;
       take x;
          b /\ c c= a /\ c by A3,XBOOLE_1:26;
       hence bb /\ c c= {x} by A2,A4,XBOOLE_1:1;
      end;
     hence b in 'not' C by A1;
    end;
    let A be set such that
A5:   for a,b being set st a in A & b in A holds a \/ b in 'not' C;
       A c= bool union C
      proof let x be set; assume x in A;
        then x \/ x in 'not' C by A5;
        then ex a being Subset of union C st x = a &
         for b being Element of C ex x being set st a /\ b c= {x} by A1;
       hence thesis;
      end;
     then union A c= union bool union C by ZFMISC_1:95;
    then reconsider a = union A as Subset of union C by ZFMISC_1:99;
       now let c be Element of C;
      consider x being set;
      per cases;
       suppose
A6:       a /\ c = {};
        take x;
        thus a /\ c c= {x} by A6,XBOOLE_1:2;
       end;
       suppose
           a /\ c <> {}; then reconsider X = a /\ c as non empty set;
        consider x being Element of X; reconsider y = x as set;
        take y;
        thus a /\ c c= {y}
         proof let z be set; assume z in a /\ c;
then A7:        z in a & z in c by XBOOLE_0:def 3;
          then consider v being set such that
A8:         z in v & v in A by TARSKI:def 4;
A9:        x in a & x in c by XBOOLE_0:def 3;
          then consider w being set such that
A10:         x in w & w in A by TARSKI:def 4;
             w \/ v in 'not' C by A5,A8,A10;
          then consider aa being Subset of union C such that
A11:         w \/ v = aa &
           for b being Element of C ex x being set st aa /\ b c= {x} by A1;
          consider t being set such that
A12:         aa /\ c c= {t} by A11;
             z in aa & x in aa by A8,A10,A11,XBOOLE_0:def 2;
           then z in aa /\ c & x in aa /\ c by A7,A9,XBOOLE_0:def 3;
then z in {t} & x in {t} by A12;
          hence thesis by TARSKI:def 1;
         end;
     end;
     end;
    hence union A in 'not' C by A1;
   end;
end;


theorem :: COHSP_1:67
 for C being Coherence_Space holds union 'not' C = union C;

theorem :: COHSP_1:68
 for C being Coherence_Space, x,y being set st x <> y & {x,y} in C
  holds not {x,y} in 'not' C;

theorem :: COHSP_1:69
 for C being Coherence_Space, x,y being set
  st {x,y} c= union C & not {x,y} in C holds {x,y} in 'not' C;

theorem :: COHSP_1:70
   for C being Coherence_Space for x,y being set holds
  [x,y] in Web 'not' C iff
   x in union C & y in union C & (x = y or not [x,y] in Web C);

theorem :: COHSP_1:71
 for C being Coherence_Space holds 'not' 'not' C = C;

theorem :: COHSP_1:72
   'not' {{}} = {{}};

theorem :: COHSP_1:73
   for X being set holds 'not' FlatCoh X = bool X & 'not' bool X = FlatCoh X;


begin :: Product and Coproduct on Coherence Spaces


definition
 let x,y be set;
 func x U+ y -> set equals
:: COHSP_1:def 23

   Union disjoin <*x,y*>;
end;


theorem :: COHSP_1:74
 for x,y being set holds
  x U+ y = [:x,{1}:] \/ [:y,{2}:];

theorem :: COHSP_1:75
 for x being set holds
  x U+ {} = [:x,{1}:] & {} U+ x = [:x,{2}:];

theorem :: COHSP_1:76
 for x,y,z being set st z in x U+ y
  holds z = [z`1,z`2] & (z`2 = 1 & z`1 in x or z`2 = 2 & z`1 in y);

theorem :: COHSP_1:77
 for x,y,z being set holds [z,1] in x U+ y iff z in x;

theorem :: COHSP_1:78
 for x,y,z being set holds [z,2] in x U+ y iff z in y;


theorem :: COHSP_1:79
 for x1,y1, x2,y2 being set holds
  x1 U+ y1 c= x2 U+ y2 iff x1 c= x2 & y1 c= y2;

theorem :: COHSP_1:80
 for x,y, z being set st z c= x U+ y
  ex x1,y1 being set st z = x1 U+ y1 & x1 c= x & y1 c= y;

theorem :: COHSP_1:81
 for x1,y1, x2,y2 being set holds
  x1 U+ y1 = x2 U+ y2 iff x1 = x2 & y1 = y2;

theorem :: COHSP_1:82
 for x1,y1, x2,y2 being set holds
  x1 U+ y1 \/ x2 U+ y2 = (x1 \/ x2) U+ (y1 \/ y2);

theorem :: COHSP_1:83
 for x1,y1, x2,y2 being set holds
  (x1 U+ y1) /\ (x2 U+ y2) = (x1 /\ x2) U+ (y1 /\ y2);

definition
 let C1, C2 be Coherence_Space;
 func C1 "/\" C2 -> set equals
:: COHSP_1:def 24
  {a U+ b where a is Element of C1, b is Element of C2: not contradiction};
 func C1 "\/" C2 -> set equals
:: COHSP_1:def 25
   {a U+ {} where a is Element of C1: not contradiction} \/
       {{} U+ b where b is Element of C2: not contradiction};
end;


theorem :: COHSP_1:84
 for C1,C2 being Coherence_Space for x being set holds
  x in C1 "/\" C2 iff
   ex a being Element of C1, b being Element of C2 st x = a U+ b;

theorem :: COHSP_1:85
 for C1,C2 being Coherence_Space for x,y being set holds
  x U+ y in C1 "/\" C2 iff x in C1 & y in C2;

theorem :: COHSP_1:86
 for C1,C2 being Coherence_Space holds
  union (C1 "/\" C2) = (union C1) U+ (union C2);

theorem :: COHSP_1:87
 for C1,C2 being Coherence_Space for x,y being set holds
  x U+ y in C1 "\/" C2 iff x in C1 & y = {} or x = {} & y in C2;

theorem :: COHSP_1:88
 for C1,C2 being Coherence_Space for x being set st x in C1 "\/" C2
  ex a being Element of C1, b being Element of C2 st
   x = a U+ b & (a = {} or b = {});

theorem :: COHSP_1:89
   for C1,C2 being Coherence_Space holds
  union (C1 "\/" C2) = (union C1) U+ (union C2);

registration
 let C1, C2 be Coherence_Space;
 cluster C1 "/\" C2 -> non empty subset-closed binary_complete;
  coherence
   proof
A1:   C1 "/\" C2 =
     {a U+ b where a is Element of C1, b is Element of C2: not contradiction}
      by Def24;
    consider a' being Element of C1, b' being Element of C2;
       a' U+ b' in C1 "/\" C2 by A1;
    hence C1 "/\" C2 is non empty;
    hereby let a, b be set; assume a in C1 "/\" C2;
     then consider aa being Element of C1, bb being Element of C2 such that
A2:    a = aa U+ bb by A1;
     assume b c= a;
     then consider x1,y1 being set such that
A3:    b = x1 U+ y1 & x1 c= aa & y1 c= bb by A2,Th80;
        x1 in C1 & y1 in C2 by A3,CLASSES1:def 1;
     hence b in C1 "/\" C2 by A1,A3;
    end;
    let A be set such that
A4:   for a,b being set st a in A & b in A holds a \/ b in C1 "/\" C2;
    set A1 = {a where a is Element of C1:
              ex b being Element of C2 st a U+ b in A};
    set A2 = {b where b is Element of C2:
              ex a being Element of C1 st a U+ b in A};
       now let x,y be set; assume x in A1;
      then consider ax being Element of C1 such that
A5:    x = ax & ex b being Element of C2 st ax U+ b in A;
      consider bx being Element of C2 such that
A6:    ax U+ bx in A by A5;
      assume y in A1;
      then consider ay being Element of C1 such that
A7:    y = ay & ex b being Element of C2 st ay U+ b in A;
      consider b_y being Element of C2 such that
A8:    ay U+ b_y in A by A7;
         (ax U+ bx) \/ (ay U+ b_y) in C1 "/\" C2 by A4,A6,A8;
       then (ax \/ ay) U+ (bx \/ b_y) in C1 "/\" C2 by Th82;
      hence x \/ y in C1 by A5,A7,Th85;
     end;
then A9:   union A1 in C1 by Def1;
       now let x,y be set; assume x in A2;
      then consider ax being Element of C2 such that
A10:    x = ax & ex b being Element of C1 st b U+ ax in A;
      consider bx being Element of C1 such that
A11:    bx U+ ax in A by A10;
      assume y in A2;
      then consider ay being Element of C2 such that
A12:    y = ay & ex b being Element of C1 st b U+ ay in A;
      consider b_y being Element of C1 such that
A13:    b_y U+ ay in A by A12;
         (bx U+ ax) \/ (b_y U+ ay) in C1 "/\" C2 by A4,A11,A13;
       then (bx \/ b_y) U+ (ax \/ ay) in C1 "/\" C2 by Th82;
      hence x \/ y in C2 by A10,A12,Th85;
     end;
then A14:   union A2 in C2 by Def1;
       (union A1) U+ union A2 = union A
      proof
       hereby let x be set; assume A15: x in (union A1) U+ union A2;
then A16:      x = [x`1,x`2] &
         (x`2 = 1 & x`1 in union A1 or x`2 = 2 & x`1 in union A2) by Th76;
        per cases by A15,Th76;
         suppose
A17:        x`2 = 1 & x`1 in union A1;
          then consider a being set such that
A18:        x`1 in a & a in A1 by TARSKI:def 4;
          consider ax being Element of C1 such that
A19:        a = ax & ex b being Element of C2 st ax U+ b in A by A18;
          consider bx being Element of C2 such that
A20:        ax U+ bx in A by A19;
             x in ax U+ bx by A16,A17,A18,A19,Th77;
          hence x in union A by A20,TARSKI:def 4;
         end;
         suppose
A21:        x`2 = 2 & x`1 in union A2;
          then consider a being set such that
A22:        x`1 in a & a in A2 by TARSKI:def 4;
          consider bx being Element of C2 such that
A23:        a = bx & ex a being Element of C1 st a U+ bx in A by A22;
          consider ax being Element of C1 such that
A24:        ax U+ bx in A by A23;
             x in ax U+ bx by A16,A21,A22,A23,Th78;
          hence x in union A by A24,TARSKI:def 4;
       end;
       end;
       let x be set; assume x in union A;
       then consider a being set such that
A25:     x in a & a in A by TARSKI:def 4;
          a \/ a in C1 "/\" C2 by A4,A25;
       then consider aa being Element of C1, bb being Element of C2 such that
A26:     a = aa U+ bb by A1;
          aa in A1 & bb in A2 by A25,A26;
        then aa c= union A1 & bb c= union A2 by ZFMISC_1:92;
        then aa U+ bb c= (union A1) U+ union A2 by Th79;
       hence x in (union A1) U+ union A2 by A25,A26;
      end;
    hence union A in C1 "/\" C2 by A9,A14,Th85;
   end;
 cluster C1 "\/" C2 -> non empty subset-closed binary_complete;
  coherence
   proof
    consider a' being Element of C1;
       a' U+ {} in C1 "\/" C2 by Th87;
    hence C1 "\/" C2 is non empty;
    hereby let a, b be set; assume a in C1 "\/" C2;
     then consider aa being Element of C1, bb being Element of C2 such that
A27:    a = aa U+ bb & (aa = {} or bb = {}) by Th88;
     assume b c= a;
     then consider x1,y1 being set such that
A28:    b = x1 U+ y1 & x1 c= aa & y1 c= bb by A27,Th80;
        x1 in C1 & y1 in C2 & (x1 = {} or y1 = {}) by A27,A28,CLASSES1:def 1,
XBOOLE_1:3;
     hence b in C1 "\/" C2 by A28,Th87;
    end;
    let A be set; assume that
A29:   for a,b being set st a in A & b in A holds a \/ b in C1 "\/" C2;
    set A1 = {a where a is Element of C1:
              ex b being Element of C2 st a U+ b in A};
    set A2 = {b where b is Element of C2:
              ex a being Element of C1 st a U+ b in A};
       now let x,y be set; assume x in A1;
      then consider ax being Element of C1 such that
A30:    x = ax & ex b being Element of C2 st ax U+ b in A;
      consider bx being Element of C2 such that
A31:    ax U+ bx in A by A30;
      assume y in A1;
      then consider ay being Element of C1 such that
A32:    y = ay & ex b being Element of C2 st ay U+ b in A;
      consider b_y being Element of C2 such that
A33:    ay U+ b_y in A by A32;
         (ax U+ bx) \/ (ay U+ b_y) in C1 "\/" C2 by A29,A31,A33;
       then (ax \/ ay) U+ (bx \/ b_y) in C1 "\/" C2 by Th82;
       then x \/ y in C1 or x \/ y = {} by A30,A32,Th87;
      hence x \/ y in C1 by COH_SP:1;
     end;
then A34:   union A1 in C1 by Def1;
       now let x,y be set; assume x in A2;
      then consider ax being Element of C2 such that
A35:    x = ax & ex b being Element of C1 st b U+ ax in A;
      consider bx being Element of C1 such that
A36:    bx U+ ax in A by A35;
      assume y in A2;
      then consider ay being Element of C2 such that
A37:    y = ay & ex b being Element of C1 st b U+ ay in A;
      consider b_y being Element of C1 such that
A38:    b_y U+ ay in A by A37;
         (bx U+ ax) \/ (b_y U+ ay) in C1 "\/" C2 by A29,A36,A38;
       then (bx \/ b_y) U+ (ax \/ ay) in C1 "\/" C2 by Th82;
       then x \/ y in C2 or x \/ y = {} by A35,A37,Th87;
      hence x \/ y in C2 by COH_SP:1;
     end;
then A39:   union A2 in C2 by Def1;
A40:   now assume union A1 <> {};
      then reconsider AA = union A1 as non empty set;
      consider aa being Element of AA;
      consider x being set such that
A41:    aa in x & x in A1 by TARSKI:def 4;
      consider ax being Element of C1 such that
A42:    x = ax & ex b being Element of C2 st ax U+ b in A by A41;
      consider bx being Element of C2 such that
A43:    ax U+ bx in A by A42;
      assume union A2 <> {};
      then reconsider AA = union A2 as non empty set;
      consider bb being Element of AA;
      consider y being set such that
A44:    bb in y & y in A2 by TARSKI:def 4;
      consider b_y being Element of C2 such that
A45:    y = b_y & ex a being Element of C1 st a U+ b_y in A by A44;
      consider ay being Element of C1 such that
A46:    ay U+ b_y in A by A45;
         (ax U+ bx) \/ (ay U+ b_y) in C1 "\/" C2 by A29,A43,A46;
       then (ax \/ ay) U+ (bx \/ b_y) in C1 "\/" C2 by Th82;
       then x \/ ay = {} & aa in x \/ ay or
       bx \/ y = {} & bb in bx \/ y by A41,A42,A44,A45,Th87,XBOOLE_0:def 2;
      hence contradiction;
     end;
       (union A1) U+ union A2 = union A
      proof
       hereby let x be set; assume A47: x in (union A1) U+ union A2;
then A48:      x = [x`1,x`2] &
         (x`2 = 1 & x`1 in union A1 or x`2 = 2 & x`1 in union A2) by Th76;
        per cases by A47,Th76;
         suppose
A49:        x`2 = 1 & x`1 in union A1;
          then consider a being set such that
A50:        x`1 in a & a in A1 by TARSKI:def 4;
          consider ax being Element of C1 such that
A51:        a = ax & ex b being Element of C2 st ax U+ b in A by A50;
          consider bx being Element of C2 such that
A52:        ax U+ bx in A by A51;
             x in ax U+ bx by A48,A49,A50,A51,Th77;
          hence x in union A by A52,TARSKI:def 4;
         end;
         suppose
A53:        x`2 = 2 & x`1 in union A2;
          then consider a being set such that
A54:        x`1 in a & a in A2 by TARSKI:def 4;
          consider bx being Element of C2 such that
A55:        a = bx & ex a being Element of C1 st a U+ bx in A by A54;
          consider ax being Element of C1 such that
A56:        ax U+ bx in A by A55;
             x in ax U+ bx by A48,A53,A54,A55,Th78;
          hence x in union A by A56,TARSKI:def 4;
       end;
       end;
       let x be set; assume x in union A;
       then consider a being set such that
A57:     x in a & a in A by TARSKI:def 4;
          a \/ a in C1 "\/" C2 by A29,A57;
       then consider aa being Element of C1, bb being Element of C2 such that
A58:     a = aa U+ bb & (aa = {} or bb = {}) by Th88;
          aa in A1 & bb in A2 by A57,A58;
        then aa c= union A1 & bb c= union A2 by ZFMISC_1:92;
        then aa U+ bb c= (union A1) U+ union A2 by Th79;
       hence x in (union A1) U+ union A2 by A57,A58;
      end;
    hence union A in C1 "\/" C2 by A34,A39,A40,Th87;
   end;
end;


reserve C1, C2 for Coherence_Space;

theorem :: COHSP_1:90
   for x,y being set holds
  [[x,1],[y,1]] in Web (C1 "/\" C2) iff [x,y] in Web C1;

theorem :: COHSP_1:91
   for x,y being set holds
  [[x,2],[y,2]] in Web (C1 "/\" C2) iff [x,y] in Web C2;

theorem :: COHSP_1:92
   for x,y being set st x in union C1 & y in union C2 holds
  [[x,1],[y,2]] in Web (C1 "/\" C2) & [[y,2],[x,1]] in Web (C1 "/\" C2);

theorem :: COHSP_1:93
   for x,y being set holds
  [[x,1],[y,1]] in Web (C1 "\/" C2) iff [x,y] in Web C1;


theorem :: COHSP_1:94
   for x,y being set holds
  [[x,2],[y,2]] in Web (C1 "\/" C2) iff [x,y] in Web C2;

theorem :: COHSP_1:95
   for x,y being set holds
  not [[x,1],[y,2]] in Web (C1 "\/" C2) & not [[y,2],[x,1]] in Web (C1 "\/" C2)
;

theorem :: COHSP_1:96
   'not' (C1 "/\" C2) = 'not' C1 "\/" 'not' C2;

definition let C1,C2 be Coherence_Space;
 func C1 [*] C2 -> set equals
:: COHSP_1:def 26

   union {bool [:a,b:] where a is Element of C1, b is Element of C2:
       not contradiction};
end;


theorem :: COHSP_1:97
 for C1,C2 being Coherence_Space, x being set holds
  x in C1 [*] C2 iff
   ex a being Element of C1, b being Element of C2 st x c= [:a,b:];

registration let C1,C2 be Coherence_Space;
 cluster C1 [*] C2 -> non empty;
 coherence
  proof consider a1 being Element of C1, a2 being Element of C2;
      [:a1,a2:] in C1[*]C2 by Th97;
   hence C1[*]C2 is non empty;
  end;
end;


theorem :: COHSP_1:98
 for C1,C2 being Coherence_Space, a being Element of C1 [*] C2 holds
  proj1 a in C1 & proj2 a in C2 & a c= [:proj1 a, proj2 a:];

registration let C1,C2 be Coherence_Space;
 cluster C1 [*] C2 -> subset-closed binary_complete;
 coherence
  proof
   thus C1[*]C2 is subset-closed
    proof let a,b be set; assume a in C1[*]C2;
     then consider a1 being Element of C1, a2 being Element of C2 such that
A1:    a c= [:a1,a2:] by Th97;
     assume b c= a; then b c= [:a1,a2:] by A1,XBOOLE_1:1;
     hence thesis by Th97;
    end;
   let A be set; assume
A2:  for a,b being set st a in A & b in A holds a \/ b in C1 [*] C2;
   set A1 = {proj1 a where a is Element of C1[*]C2: a in A};
   set A2 = {proj2 a where a is Element of C1[*]C2: a in A};
      now let a1,b1 be set; assume a1 in A1;
     then consider a being Element of C1[*]C2 such that
A3:   a1 = proj1 a & a in A;
     assume b1 in A1;
     then consider b being Element of C1[*]C2 such that
A4:   b1 = proj1 b & b in A;
        a \/ b in C1[*]C2 by A2,A3,A4;
      then proj1 (a \/ b) in C1 by Th98;
     hence a1 \/ b1 in C1 by A3,A4,FUNCT_5:6;
    end;
then A5:  union A1 in C1 by Def1;
      now let a1,b1 be set; assume a1 in A2;
     then consider a being Element of C1[*]C2 such that
A6:   a1 = proj2 a & a in A;
     assume b1 in A2;
     then consider b being Element of C1[*]C2 such that
A7:   b1 = proj2 b & b in A;
        a \/ b in C1[*]C2 by A2,A6,A7;
      then proj2 (a \/ b) in C2 by Th98;
     hence a1 \/ b1 in C2 by A6,A7,FUNCT_5:6;
    end;
then A8:  union A2 in C2 by Def1;
      union A c= [:union A1, union A2:]
     proof let x be set; assume x in union A;
      then consider a being set such that
A9:     x in a & a in A by TARSKI:def 4;
         a \/ a in C1[*]C2 by A2,A9;
       then a c= [:proj1 a, proj2 a:] & proj1 a in A1 & proj2 a in
 A2 by A9,Th98;
then A10:     x in [:proj1 a, proj2 a:] & proj1 a c= union A1 & proj2 a c=
union A2
        by A9,ZFMISC_1:92;
       then [:proj1 a, proj2 a:] c= [:union A1, union A2:] by ZFMISC_1:119;
      hence thesis by A10;
     end;
   hence thesis by A5,A8,Th97;
  end;
end;


theorem :: COHSP_1:99
   for C1,C2 being Coherence_Space holds
  union (C1 [*] C2) = [:union C1, union C2:];

theorem :: COHSP_1:100
   for x1,y1, x2,y2 being set holds
  [[x1,x2],[y1,y2]] in Web (C1 [*] C2) iff [x1,y1] in Web C1 & [x2,y2] in
 Web C2;


