:: The {C}atalan Numbers. {P}art {II}
::  by Karol P\c{a}k
::
:: Received October 31, 2006
:: Copyright (c) 2006 Association of Mizar Users

environ

 vocabularies NUMBERS, SUBSET_1, AFINSQ_1, ORDINAL4, RELAT_1, FINSEQ_1,
      ARYTM_3, FUNCT_1, CARD_1, XBOOLE_0, TARSKI, XXREAL_0, ARYTM_1, NAT_1,
      CARD_3, FUNCOP_1, BINOP_2, FINSOP_1, BINOP_1, ZFMISC_1, CARD_FIN,
      FINSET_1, REALSET1, CATALAN1, SEQ_1, XREAL_0, ORDINAL1, REAL_1, FUNCT_2,
      VALUED_1, SERIES_1, COMPLEX1, ORDINAL2, SEQ_2, NEWTON, SQUARE_1,
      PREPOWER, FUNCT_3, CATALAN2;
 notations ORDINAL1, REAL_1, TARSKI, XBOOLE_0, ZFMISC_1, SUBSET_1, CARD_1,
      ORDINAL4, NUMBERS, XCMPLX_0, XXREAL_0, XREAL_0, RELAT_1, FUNCT_1,
      RELSET_1, SQUARE_1, FINSET_1, AFINSQ_1, DOMAIN_1, FUNCT_2, BINOP_1,
      BINOP_2, NEWTON, STIRL2_1, NAT_D, FUNCOP_1, CARD_FIN, CATALAN1, VALUED_1,
      NAT_1, SEQ_1, SEQ_2, SERIES_1, PREPOWER, COMPLEX1, QUIN_1, RECDEF_1;
 constructors WELLORD2, DOMAIN_1, SETWISEO, REAL_1, SQUARE_1, NAT_1, QUIN_1,
      SEQM_3, PREPOWER, SERIES_1, NAT_D, CATALAN1, STIRL2_1, PARTFUN3, BINOM,
      CARD_FIN, PARTFUN1, SEQ_1, RECDEF_1, BINOP_2, RELSET_1, ORDINAL4;
 registrations XBOOLE_0, SUBSET_1, RELAT_1, FUNCT_1, ORDINAL1, FUNCOP_1,
      FINSET_1, FRAENKEL, NUMBERS, XXREAL_0, XREAL_0, SQUARE_1, NAT_1, INT_1,
      BINOP_2, MEMBERED, NEWTON, AFINSQ_1, CARD_1, VALUED_1, FUNCT_2, VALUED_0,
      RELSET_1;
 requirements REAL, NUMERALS, SUBSET, BOOLE, ARITHM;


begin

reserve x, x1, x2, y, X, D for set,
  i, j, k, l, m, n for Element of NAT,
  p, q
  for XFinSequence of NAT,
  p', q' for XFinSequence,
  pd, qd for XFinSequence of D;

theorem :: CATALAN2:1
  (p'^q')|dom p' = p';

theorem :: CATALAN2:2
  n <= dom p' implies (p'^q')|n = p'|n;

theorem :: CATALAN2:3
  n = dom p' + k implies (p'^q')|n = p'^(q'|k);

theorem :: CATALAN2:4
  ex q' st p' = (p'|n)^q';

theorem :: CATALAN2:5
  ex qd st pd = (pd|n)^qd;

definition
  let p;
  attr p is dominated_by_0 means
:: CATALAN2:def 1

  rng p c= {0,1} & for k st k <= dom p
  holds 2*Sum (p|k) <= k;
end;

theorem :: CATALAN2:6
  p is dominated_by_0 implies 2*Sum (p|k) <= k;

theorem :: CATALAN2:7
  p is dominated_by_0 implies p.0 = 0;

definition
  let k,m;
  redefine func k-->m -> XFinSequence of NAT;
end;

registration
  cluster empty dominated_by_0 XFinSequence of NAT;
  cluster non empty dominated_by_0 XFinSequence of NAT;
end;

theorem :: CATALAN2:8
  n-->0 is dominated_by_0;

theorem :: CATALAN2:9
  n >= m implies (n-->0)^(m-->1) is dominated_by_0;

theorem :: CATALAN2:10
  p is dominated_by_0 implies p|n is dominated_by_0;

theorem :: CATALAN2:11
  p is dominated_by_0 & q is dominated_by_0 implies p^q is
  dominated_by_0;

theorem :: CATALAN2:12
  p is dominated_by_0 implies 2 * Sum (p|(2*n+1)) < 2*n+1;

theorem :: CATALAN2:13
  p is dominated_by_0 & n <= len p-2*Sum p implies p^(n-->1) is
  dominated_by_0;

theorem :: CATALAN2:14
  p is dominated_by_0 & n <= k+len p-2*Sum p implies (k-->0)^p^(n
  -->1) is dominated_by_0;

theorem :: CATALAN2:15
  p is dominated_by_0 & 2*Sum (p|k)=k implies k <= len p & len (p|
  k) = k;

theorem :: CATALAN2:16
  p is dominated_by_0 & 2*Sum (p|k) = k & p = (p|k)^q implies q is
  dominated_by_0;

theorem :: CATALAN2:17
  p is dominated_by_0 & 2*Sum (p|k) = k & k = n+1 implies p|k = p|
  n^(1-->1);

theorem :: CATALAN2:18
  for m,p st m = min*({n:2*Sum(p|n) = n & n > 0}) & m > 0 & p is
  dominated_by_0 ex q st p|m = (1-->0)^q^(1-->1) & q is dominated_by_0;

theorem :: CATALAN2:19
  for p st rng p c= {0,1} & p is not dominated_by_0 ex k st 2*k+1
  = min*{n : 2*Sum(p|n) > n} & 2*k+1 <= dom p & k = Sum (p|(2*k)) & p.(2*k) = 1
;

theorem :: CATALAN2:20
  for p, q, k st p|(2*k+len q) = (k-->0)^q^(k-->1) & q is
dominated_by_0 & 2*Sum q = len q & k > 0 holds min*{n:2*Sum(p|n) = n & n > 0} =
  2*k+len q;

theorem :: CATALAN2:21
  for p st p is dominated_by_0 & {i: 2*Sum(p|i) = i & i > 0} = {}
  & len p > 0 ex q st p = <%0%>^q & q is dominated_by_0;

theorem :: CATALAN2:22
  p is dominated_by_0 implies <%0%>^p is dominated_by_0 & {i: 2*
  Sum((<%0%>^p)|i) = i & i > 0} = {};

theorem :: CATALAN2:23
  rng p c= {0,1} & 2*k+1 = min*{n:2*Sum(p|n) > n} implies p|(2*k) is
  dominated_by_0;

begin

definition
  let n,m be Nat;
  func Domin_0(n,m) -> Subset of {0,1}^omega means
:: CATALAN2:def 2

  x in it iff ex p be
  XFinSequence of NAT st p = x & p is dominated_by_0 & dom p = n & Sum p = m;
end;

theorem :: CATALAN2:24
  p in Domin_0(n,m) iff p is dominated_by_0 & dom p = n & Sum p =
  m;

theorem :: CATALAN2:25
  Domin_0(n,m) c= Choose(n,m,1,0);

registration
  let n,m;
  cluster Domin_0(n,m) -> finite;
end;

theorem :: CATALAN2:26
  Domin_0(n,m) is empty iff 2*m > n;

theorem :: CATALAN2:27
  Domin_0(n,0) = {n-->0};

theorem :: CATALAN2:28
  card Domin_0(n,0) = 1;

theorem :: CATALAN2:29
  for p,n st rng p c= {0,n} ex q st len p = len q & rng q c= {0,n}
  & (for k st k <= len p holds Sum (p|k)+Sum (q|k) = n*k) & for k st k in len p
  holds q.k = n-p.k;

theorem :: CATALAN2:30
  m <= n implies n choose m > 0;

theorem :: CATALAN2:31
  2*(m+1) <= n implies card (Choose(n,m+1,1,0) \ Domin_0(n,m+1)) =
  card Choose(n,m,1,0);

theorem :: CATALAN2:32
  2*(m+1) <= n implies card Domin_0(n,m+1) = (n choose (m+1)) - (n
  choose m);

theorem :: CATALAN2:33
  2*m <= n implies card Domin_0(n,m) = (n+1-2*m) / (n+1-m) * (n
  choose m);

theorem :: CATALAN2:34
  card Domin_0(2+k,1) = k+1;

theorem :: CATALAN2:35
  card Domin_0(4+k,2) = (k+1)*(k+4)/2;

theorem :: CATALAN2:36
  card Domin_0(6+k,3) = (k+1)*(k+5)*(k+6)/6;

theorem :: CATALAN2:37
  card Domin_0(2*n,n) = ((2*n) choose n) / (n+1);

theorem :: CATALAN2:38
  card Domin_0(2*n,n) = Catalan(n+1);

definition
  let D;
  mode OMEGA of D -> functional non empty set means
:: CATALAN2:def 3

    for x st x in it
    holds x is XFinSequence of D;
end;

definition
  let D;
  redefine func D^omega -> OMEGA of D;
  let F be OMEGA of D;
  mode Element of F -> XFinSequence of D;
end;

reserve pN, qN for Element of NAT^omega;

theorem :: CATALAN2:39
  card {pN:dom pN = 2*n & pN is dominated_by_0} = (2*n) choose n;

theorem :: CATALAN2:40
  for n,m,k,j,l st j = n-2*(k+1) & l = m-(k+1) holds card {pN : pN
in Domin_0(n,m) & 2*(k+1) = min*{i:2*Sum(pN|i) = i & i > 0}} = card Domin_0(2*k
  ,k) * card Domin_0(j,l);

:: THE RECURRENCE RELATION FOR THE CATALAN NUMBERS

theorem :: CATALAN2:41
  for n,m st 2*m <= n ex CardF be XFinSequence of NAT st card {pN:
pN in Domin_0(n,m) & {i:2*Sum(pN|i)=i & i > 0}<>{}} = Sum CardF & dom CardF = m
& for j st j < m holds CardF.j = card Domin_0(2*j,j) * card Domin_0(n-'2*(j+1),
  m -'(j+1));

theorem :: CATALAN2:42
  for n st n > 0 holds Domin_0(2*n,n)={pN:pN in Domin_0(2*n,n) & {
i: 2*Sum(pN|i) = i & i > 0}<>{}};

theorem :: CATALAN2:43
  for n st n > 0 ex Catal be XFinSequence of NAT st Sum Catal =
  Catalan(n+1) & dom Catal = n & for j st j < n holds Catal.j = Catalan(j+1)*
  Catalan(n-'j);

theorem :: CATALAN2:44
  card {pN:pN in Domin_0(n+1,m) & {i: 2*Sum(pN|i) = i & i > 0} =
  {}} = card Domin_0(n,m);

theorem :: CATALAN2:45
  for n,m st 2*m <= n ex CardF be XFinSequence of NAT st card Domin_0(n,
  m) = Sum CardF + card Domin_0(n-'1,m) & dom CardF = m & for j st j < m holds
  CardF.j = card Domin_0(2*j,j) * card Domin_0(n-'2*(j+1),m-'(j+1));

theorem :: CATALAN2:46
  for n,k ex p st Sum p = card Domin_0(2*n+2+k,n+1) & dom p = k+1 & for
  i st i <= k holds p.i = card Domin_0(2*n+1+i,n);

begin

reserve seq1,seq2,seq3,seq4 for Real_Sequence,
  r,s,e for real number,
  Fr,Fr1,
  Fr2 for XFinSequence of REAL;

definition
  let Fr;
  func Sum(Fr) -> Real equals
:: CATALAN2:def 4
  addreal "**" Fr;
end;

:: CAUCHY PRODUCT

definition
  let seq1, seq2 be Real_Sequence;
  func seq1 (##) seq2 -> Real_Sequence means
:: CATALAN2:def 5

  for k be Nat ex Fr be
XFinSequence of REAL st dom Fr = k+1 & (for n st n in k+1 holds Fr.n = seq1.n *
  seq2.(k-'n)) & Sum Fr = it.k;
  commutativity;
end;

theorem :: CATALAN2:47
  for Fr,n st n in dom Fr holds Sum (Fr|n) + Fr.n = Sum (Fr|(n+1));

theorem :: CATALAN2:48
  for Fr1,Fr2 st dom Fr1=dom Fr2 & for n st n in len Fr1 holds Fr1.n=Fr2
  .(len Fr1-'(1+n)) holds Sum Fr1 = Sum Fr2;

theorem :: CATALAN2:49
  for Fr1,Fr2 st dom Fr1=dom Fr2 & for n st n in len Fr1 holds Fr1
  .n=r*Fr2.n holds Sum Fr1 = r*Sum Fr2;

theorem :: CATALAN2:50
  seq1 (##) (r(#)seq2) = r(#)(seq1 (##) seq2);

theorem :: CATALAN2:51
  seq1 (##) (seq2 + seq3) = (seq1 (##) seq2) + (seq1 (##) seq3);

theorem :: CATALAN2:52
  (seq1 (##) seq2).0=seq1.0*seq2.0;

theorem :: CATALAN2:53
  for seq1, seq2, n ex Fr st Partial_Sums(seq1 (##) seq2).n = Sum
Fr & dom Fr=n+1 & for i st i in n+1 holds Fr.i=seq1.i * Partial_Sums(seq2).(n-'
  i);

theorem :: CATALAN2:54
  for seq1, seq2, n st seq2 is summable ex Fr st Partial_Sums(seq1
(##) seq2).n= Sum seq2 * Partial_Sums(seq1).n- Sum Fr & dom Fr=n+1 & for i st i
  in n+1 holds Fr.i=seq1.i * Sum (seq2^\(n-'i+1));

theorem :: CATALAN2:55
  for Fr ex absFr be XFinSequence of REAL st dom absFr=dom Fr &
  abs(Sum Fr) <= Sum absFr & for i st i in dom absFr holds absFr.i=abs(Fr.i);

theorem :: CATALAN2:56
  for seq1 st seq1 is summable ex r st 0 < r & for k holds abs(Sum
  (seq1^\k)) < r;

theorem :: CATALAN2:57
  for seq1, n, m st n <= m & for i holds seq1.i>=0 holds (
  Partial_Sums seq1).n <= (Partial_Sums seq1).m;

:: CAUCHY PRODUCT THEOREM

theorem :: CATALAN2:58
  for seq1, seq2 st seq1 is absolutely_summable & seq2 is summable
  holds seq1 (##) seq2 is summable & Sum(seq1 (##) seq2) = Sum seq1 * Sum seq2;

theorem :: CATALAN2:59
  p=Fr implies Sum p=Sum Fr;

begin :: THE GENERATING FUNCTION FOR THE CATALAN NUMBERS

theorem :: CATALAN2:60
  for r ex Catal be Real_Sequence st (for n holds Catal.n = Catalan(n+1)
* r|^n) & (abs r < 1/4 implies Catal is absolutely_summable & Sum Catal = 1 + r
  * (Sum Catal) |^ 2 & Sum Catal = 2 / (1 + sqrt(1-4*r)) & (r<>0 implies Sum
  Catal = (1 - sqrt(1-4*r)) / (2*r)) );

