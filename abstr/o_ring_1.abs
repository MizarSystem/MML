:: Ordered Rings - Part I
::  by Micha{\l} Muzalewski and Les{\l}aw W. Szczerba
::
:: Received October 11, 1990
:: Copyright (c) 1990-2011 Association of Mizar Users
::           (Stowarzyszenie Uzytkownikow Mizara, Bialystok, Poland).
:: This code can be distributed under the GNU General Public Licence
:: version 3.0 or later, or the Creative Commons Attribution-ShareAlike
:: License version 3.0 or later, subject to the binding interpretation
:: detailed in file COPYING.interpretation.
:: See COPYING.GPL and COPYING.CC-BY-SA for the full text of these
:: licenses, or see http://www.gnu.org/licenses/gpl.html and
:: http://creativecommons.org/licenses/by-sa/3.0/.

environ

 vocabularies NAT_1, XBOOLE_0, ALGSTR_0, VECTSP_1, FINSEQ_1, ORDINAL4, RELAT_1,
      ARYTM_3, PARTFUN1, XXREAL_0, CARD_1, FUNCT_1, SQUARE_1, O_RING_1;
 notations NAT_1, FUNCT_1, FINSEQ_1, PARTFUN1, NUMBERS, STRUCT_0, ALGSTR_0,
      VECTSP_1, XXREAL_0;
 constructors RLVECT_1, PARTFUN1, XXREAL_0, NAT_1, VECTSP_1, RELSET_1;
 registrations RELSET_1, XREAL_0, STRUCT_0, VECTSP_1, ORDINAL1;
 requirements NUMERALS, SUBSET, ARITHM, BOOLE;


begin :: Field-like Algebras

reserve i,j,k,m,n for Nat;
reserve R for non empty doubleLoopStr;
reserve x,y for Scalar of R;
reserve f,g,h for FinSequence of R;

definition
  let R be non empty doubleLoopStr, x be Scalar of R;
  canceled;
  func x^2 -> Scalar of R equals
:: O_RING_1:def 2
  x*x;
end;

definition
  let R be non empty doubleLoopStr, x be Scalar of R;
  attr x is being_a_square means
:: O_RING_1:def 3
  ex y being Scalar of R st x=y^2;
end;

definition
  let R,f;
  attr f is being_a_Sum_of_squares means
:: O_RING_1:def 4

  len f<>0 & f/.1 is
being_a_square & for n st n<>0 & n<len f ex y st y is being_a_square & f/.(n+1)
  =f/.n+y;
end;

definition
  let R be non empty doubleLoopStr, x be Scalar of R;
  attr x is being_a_sum_of_squares means
:: O_RING_1:def 5

  ex f being FinSequence of R st f is being_a_Sum_of_squares & x=f/.len f;
end;

definition
  let R,f;
  attr f is being_a_Product_of_squares means
:: O_RING_1:def 6

  len f<>0 & f/.1 is
being_a_square & for n st n<>0 & n<len f ex y st y is being_a_square & f/.(n+1)
  =f/.n*y;
end;

definition
  let R,x;
  attr x is being_a_product_of_squares means
:: O_RING_1:def 7

  ex f st f is being_a_Product_of_squares & x=f/.len f;
end;

definition
  let R,f;
  attr f is being_a_Sum_of_products_of_squares means
:: O_RING_1:def 8

  len f<>0 & f/.1 is
  being_a_product_of_squares & for n st n<>0 & n<len f ex y st y is
  being_a_product_of_squares & f/.(n+1)=f/.n+y;
end;

definition
  let R,x;
  attr x is being_a_sum_of_products_of_squares means
:: O_RING_1:def 9

  ex f st f is being_a_Sum_of_products_of_squares & x=f/.len f;
end;

definition
  let R,f;
  attr f is being_an_Amalgam_of_squares means
:: O_RING_1:def 10

  len f<>0 & for n st n<>0
& n<=len f holds f/.n is being_a_product_of_squares or ex i,j st f/.n=f/.i*f/.j
  & i<>0 & i<n & j<>0 & j<n;
end;

definition
  let R,x;
  attr x is being_an_amalgam_of_squares means
:: O_RING_1:def 11

  ex f st f is being_an_Amalgam_of_squares & x=f/.len f;
end;

definition
  let R,f;
  attr f is being_a_Sum_of_amalgams_of_squares means
:: O_RING_1:def 12

  len f<>0 & f/.1
  is being_an_amalgam_of_squares & for n st n<>0 & n<len f ex y st y is
  being_an_amalgam_of_squares & f/.(n+1)=f/.n+y;
end;

definition
  let R,x;
  attr x is being_a_sum_of_amalgams_of_squares means
:: O_RING_1:def 13

  ex f st f is being_a_Sum_of_amalgams_of_squares & x=f/.len f;
end;

definition
  let R,f;
  attr f is being_a_generation_from_squares means
:: O_RING_1:def 14

  len f<>0 & for n st
n<>0 & n<=len f holds f/.n is being_an_amalgam_of_squares or ex i,j st (f/.n=f
  /.i*f/.j or f/.n=f/.i+f/.j) & i<>0 & i<n & j<>0 & j<n;
end;

definition
  let R,x;
  attr x is generated_from_squares means
:: O_RING_1:def 15

  ex f st f is being_a_generation_from_squares & x=f/.len f;
end;

theorem :: O_RING_1:1
  x is being_a_sum_of_amalgams_of_squares implies x is generated_from_squares;

theorem :: O_RING_1:2
  x is being_a_square implies x is being_a_sum_of_squares & x is
  being_a_product_of_squares & x is being_a_sum_of_products_of_squares & x is
  being_an_amalgam_of_squares & x is being_a_sum_of_amalgams_of_squares & x is
  generated_from_squares;

theorem :: O_RING_1:3
  x is being_a_sum_of_squares implies x is
being_a_sum_of_products_of_squares & x is being_a_sum_of_amalgams_of_squares &
  x is generated_from_squares;

theorem :: O_RING_1:4
  x is being_a_product_of_squares implies x is
  being_a_sum_of_products_of_squares & x is being_an_amalgam_of_squares & x is
being_a_sum_of_amalgams_of_squares & x is generated_from_squares;

theorem :: O_RING_1:5
  x is being_a_sum_of_products_of_squares implies x is
being_a_sum_of_amalgams_of_squares & x is generated_from_squares;

theorem :: O_RING_1:6
  x is being_an_amalgam_of_squares implies x is
being_a_sum_of_amalgams_of_squares & x is generated_from_squares;

begin

theorem :: O_RING_1:7
  x is being_a_square & y is being_a_square or x is
  being_a_sum_of_squares & y is being_a_square implies x+y is
  being_a_sum_of_squares;

theorem :: O_RING_1:8
  x is being_a_sum_of_products_of_squares & y is being_a_square or x is
being_a_sum_of_products_of_squares & y is being_a_product_of_squares implies x+
  y is being_a_sum_of_products_of_squares;

theorem :: O_RING_1:9
  x is being_an_amalgam_of_squares & (y is being_a_product_of_squares or
y is being_an_amalgam_of_squares) or x is being_a_sum_of_amalgams_of_squares &
  (y is being_a_square or y is being_a_product_of_squares or y is
being_an_amalgam_of_squares) implies x+y is being_a_sum_of_amalgams_of_squares;

theorem :: O_RING_1:10
  x is being_a_square & (y is being_a_sum_of_squares or y is
  being_a_product_of_squares or y is being_a_sum_of_products_of_squares or y is
being_an_amalgam_of_squares or y is being_a_sum_of_amalgams_of_squares or y is
generated_from_squares) implies x+y is generated_from_squares;

theorem :: O_RING_1:11
  x is being_a_sum_of_squares & y is being_a_sum_of_squares implies x+y
  is generated_from_squares;

theorem :: O_RING_1:12
  x is being_a_sum_of_squares & y is being_a_product_of_squares implies
  x+y is generated_from_squares;

theorem :: O_RING_1:13
  x is being_a_sum_of_squares & y is being_a_sum_of_products_of_squares
  implies x+y is generated_from_squares;

theorem :: O_RING_1:14
  x is being_a_sum_of_squares & y is being_an_amalgam_of_squares implies
  x+y is generated_from_squares;

theorem :: O_RING_1:15
  x is being_a_sum_of_squares & y is being_a_sum_of_amalgams_of_squares
  implies x+y is generated_from_squares;

theorem :: O_RING_1:16
  x is being_a_sum_of_squares & y is generated_from_squares implies x+y
  is generated_from_squares;

theorem :: O_RING_1:17
  x is being_a_product_of_squares & y is generated_from_squares implies
  x+y is generated_from_squares;

theorem :: O_RING_1:18
  x is being_a_product_of_squares & y is
  being_a_sum_of_amalgams_of_squares implies x+y is generated_from_squares;

theorem :: O_RING_1:19
  x is being_a_product_of_squares & y is being_an_amalgam_of_squares
  implies x+y is generated_from_squares;

theorem :: O_RING_1:20
  x is being_a_product_of_squares & y is
  being_a_sum_of_products_of_squares implies x+y is generated_from_squares;

theorem :: O_RING_1:21
  x is being_a_product_of_squares & y is being_a_product_of_squares
  implies x+y is generated_from_squares;

theorem :: O_RING_1:22
  x is being_a_product_of_squares & y is being_a_sum_of_squares implies
  x+y is generated_from_squares;

theorem :: O_RING_1:23
  x is being_a_product_of_squares & y is being_a_square implies x+y is
  generated_from_squares;

theorem :: O_RING_1:24
  x is being_a_sum_of_products_of_squares & y is generated_from_squares
  implies x+y is generated_from_squares;

theorem :: O_RING_1:25
  x is being_a_sum_of_products_of_squares & y is being_a_sum_of_squares
  implies x+y is generated_from_squares;

theorem :: O_RING_1:26
  x is being_a_sum_of_products_of_squares & y is
  being_a_sum_of_products_of_squares implies x+y is generated_from_squares;

theorem :: O_RING_1:27
  x is being_a_sum_of_products_of_squares & y is
  being_an_amalgam_of_squares implies x+y is generated_from_squares;

theorem :: O_RING_1:28
  x is being_a_sum_of_products_of_squares & y is
  being_a_sum_of_amalgams_of_squares implies x+y is generated_from_squares;

theorem :: O_RING_1:29
  x is being_an_amalgam_of_squares & y is generated_from_squares implies
  x+y is generated_from_squares;

theorem :: O_RING_1:30
  x is being_an_amalgam_of_squares & y is being_a_square implies x+y is
  generated_from_squares;

theorem :: O_RING_1:31
  x is being_an_amalgam_of_squares & y is being_a_sum_of_squares implies
  x+y is generated_from_squares;

theorem :: O_RING_1:32
  x is being_an_amalgam_of_squares & y is
  being_a_sum_of_products_of_squares implies x+y is generated_from_squares;

theorem :: O_RING_1:33
  x is being_an_amalgam_of_squares & y is
  being_a_sum_of_amalgams_of_squares implies x+y is generated_from_squares;

theorem :: O_RING_1:34
  x is being_a_sum_of_amalgams_of_squares & y is being_a_sum_of_squares
  implies x+y is generated_from_squares;

theorem :: O_RING_1:35
  x is being_a_sum_of_amalgams_of_squares & y is
  being_a_sum_of_products_of_squares implies x+y is generated_from_squares;

theorem :: O_RING_1:36
  x is being_a_sum_of_amalgams_of_squares & y is
  being_a_sum_of_amalgams_of_squares implies x+y is generated_from_squares;

theorem :: O_RING_1:37
  x is being_a_sum_of_amalgams_of_squares & y is generated_from_squares
  implies x+y is generated_from_squares;

theorem :: O_RING_1:38
  x is generated_from_squares & y is being_a_square or x is
  generated_from_squares & y is being_a_sum_of_squares or x is
  generated_from_squares & y is being_a_product_of_squares or x is
  generated_from_squares & y is being_a_sum_of_products_of_squares or x is
  generated_from_squares & y is being_an_amalgam_of_squares or x is
  generated_from_squares & y is being_a_sum_of_amalgams_of_squares or x is
  generated_from_squares & y is generated_from_squares implies x+y is
  generated_from_squares;

begin

theorem :: O_RING_1:39
  x is being_a_product_of_squares & y is being_a_square implies x*y is
  being_a_product_of_squares;

theorem :: O_RING_1:40
  x is being_a_square & y is being_a_square implies x*y is
  being_a_product_of_squares;

theorem :: O_RING_1:41
  x is being_a_square & y is being_a_product_of_squares implies x*y is
  being_an_amalgam_of_squares;

theorem :: O_RING_1:42
  x is being_a_square & y is being_an_amalgam_of_squares implies x*y is
  being_an_amalgam_of_squares;

theorem :: O_RING_1:43
  x is being_a_product_of_squares & y is being_a_product_of_squares
  implies x*y is being_an_amalgam_of_squares;

theorem :: O_RING_1:44
  x is being_a_product_of_squares & y is being_an_amalgam_of_squares
  implies x*y is being_an_amalgam_of_squares;

theorem :: O_RING_1:45
  x is being_an_amalgam_of_squares & y is being_a_square implies x*y is
  being_an_amalgam_of_squares;

theorem :: O_RING_1:46
  x is being_an_amalgam_of_squares & y is being_a_product_of_squares
  implies x*y is being_an_amalgam_of_squares;

theorem :: O_RING_1:47
  x is being_an_amalgam_of_squares & y is being_an_amalgam_of_squares
  implies x*y is being_an_amalgam_of_squares;

theorem :: O_RING_1:48
  x is being_a_square & y is being_a_sum_of_squares implies x*y is
  generated_from_squares;

theorem :: O_RING_1:49
  x is being_a_square & y is being_a_sum_of_products_of_squares implies
  x*y is generated_from_squares;

theorem :: O_RING_1:50
  x is being_a_square & y is being_a_sum_of_amalgams_of_squares implies
  x*y is generated_from_squares;

theorem :: O_RING_1:51
  x is being_a_square & y is generated_from_squares implies x*y is
  generated_from_squares;

theorem :: O_RING_1:52
  x is being_a_sum_of_squares & y is being_a_square implies x*y is
  generated_from_squares;

theorem :: O_RING_1:53
  x is being_a_sum_of_squares & y is being_a_sum_of_squares implies x*y
  is generated_from_squares;

theorem :: O_RING_1:54
  x is being_a_sum_of_squares & y is being_a_product_of_squares implies
  x*y is generated_from_squares;

theorem :: O_RING_1:55
  x is being_a_sum_of_squares & y is being_a_sum_of_products_of_squares
  implies x*y is generated_from_squares;

theorem :: O_RING_1:56
  x is being_a_sum_of_squares & y is being_an_amalgam_of_squares implies
  x*y is generated_from_squares;

theorem :: O_RING_1:57
  x is being_a_sum_of_squares & y is being_a_sum_of_amalgams_of_squares
  implies x*y is generated_from_squares;

theorem :: O_RING_1:58
  x is being_a_sum_of_squares & y is generated_from_squares implies x*y
  is generated_from_squares;

theorem :: O_RING_1:59
  x is being_a_product_of_squares & y is being_a_sum_of_squares implies
  x*y is generated_from_squares;

theorem :: O_RING_1:60
  x is being_a_product_of_squares & y is
  being_a_sum_of_products_of_squares implies x*y is generated_from_squares;

theorem :: O_RING_1:61
  x is being_a_product_of_squares & y is
  being_a_sum_of_amalgams_of_squares implies x*y is generated_from_squares;

theorem :: O_RING_1:62
  x is being_a_product_of_squares & y is generated_from_squares implies
  x*y is generated_from_squares;

theorem :: O_RING_1:63
  x is being_a_sum_of_products_of_squares & y is being_a_square implies
  x*y is generated_from_squares;

theorem :: O_RING_1:64
  x is being_a_sum_of_products_of_squares & y is being_a_sum_of_squares
  implies x*y is generated_from_squares;

theorem :: O_RING_1:65
  x is being_a_sum_of_products_of_squares & y is
  being_a_product_of_squares implies x*y is generated_from_squares;

theorem :: O_RING_1:66
  x is being_a_sum_of_products_of_squares & y is
  being_a_sum_of_products_of_squares implies x*y is generated_from_squares;

theorem :: O_RING_1:67
  x is being_a_sum_of_products_of_squares & y is
  being_an_amalgam_of_squares implies x*y is generated_from_squares;

theorem :: O_RING_1:68
  x is being_a_sum_of_products_of_squares & y is
  being_a_sum_of_amalgams_of_squares implies x*y is generated_from_squares;

theorem :: O_RING_1:69
  x is being_a_sum_of_products_of_squares & y is generated_from_squares
  implies x*y is generated_from_squares;

theorem :: O_RING_1:70
  x is being_an_amalgam_of_squares & y is being_a_sum_of_squares implies
  x*y is generated_from_squares;

theorem :: O_RING_1:71
  x is being_an_amalgam_of_squares & y is
  being_a_sum_of_products_of_squares implies x*y is generated_from_squares;

theorem :: O_RING_1:72
  x is being_an_amalgam_of_squares & y is
  being_a_sum_of_amalgams_of_squares implies x*y is generated_from_squares;

theorem :: O_RING_1:73
  x is being_an_amalgam_of_squares & y is generated_from_squares implies
  x*y is generated_from_squares;

theorem :: O_RING_1:74
  x is being_a_sum_of_amalgams_of_squares & y is being_a_square implies
  x*y is generated_from_squares;

theorem :: O_RING_1:75
  x is being_a_sum_of_amalgams_of_squares & y is being_a_sum_of_squares
  implies x*y is generated_from_squares;

theorem :: O_RING_1:76
  x is being_a_sum_of_amalgams_of_squares & y is
  being_a_product_of_squares implies x*y is generated_from_squares;

theorem :: O_RING_1:77
  x is being_a_sum_of_amalgams_of_squares & y is
  being_a_sum_of_products_of_squares implies x*y is generated_from_squares;

theorem :: O_RING_1:78
  x is being_a_sum_of_amalgams_of_squares & y is
  being_an_amalgam_of_squares implies x*y is generated_from_squares;

theorem :: O_RING_1:79
  x is being_a_sum_of_amalgams_of_squares & y is
  being_a_sum_of_amalgams_of_squares implies x*y is generated_from_squares;

theorem :: O_RING_1:80
  x is being_a_sum_of_amalgams_of_squares & y is generated_from_squares
  implies x*y is generated_from_squares;

theorem :: O_RING_1:81
  x is generated_from_squares & y is being_a_square implies x*y is
  generated_from_squares;

theorem :: O_RING_1:82
  x is generated_from_squares & y is being_an_amalgam_of_squares implies
  x*y is generated_from_squares;

theorem :: O_RING_1:83
  x is generated_from_squares & y is being_a_sum_of_squares implies x*y
  is generated_from_squares;

theorem :: O_RING_1:84
  x is generated_from_squares & y is being_a_product_of_squares implies
  x*y is generated_from_squares;

theorem :: O_RING_1:85
  x is generated_from_squares & y is being_a_sum_of_products_of_squares
  implies x*y is generated_from_squares;

theorem :: O_RING_1:86
  x is generated_from_squares & y is being_a_sum_of_amalgams_of_squares
  implies x*y is generated_from_squares;
