:: Properties of the Intervals of Real Numbers
::  by J\'ozef Bia{\l}as
::
:: Received January 12, 1993
:: Copyright (c) 1993-2011 Association of Mizar Users
::           (Stowarzyszenie Uzytkownikow Mizara, Bialystok, Poland).
:: This code can be distributed under the GNU General Public Licence
:: version 3.0 or later, or the Creative Commons Attribution-ShareAlike
:: License version 3.0 or later, subject to the binding interpretation
:: detailed in file COPYING.interpretation.
:: See COPYING.GPL and COPYING.CC-BY-SA for the full text of these
:: licenses, or see http://www.gnu.org/licenses/gpl.html and
:: http://creativecommons.org/licenses/by-sa/3.0/.

environ

 vocabularies NUMBERS, SUPINF_1, SUBSET_1, TARSKI, XREAL_0, ORDINAL1, XXREAL_1,
      ARYTM_3, XXREAL_0, CARD_1, RELAT_2, XXREAL_2, ORDINAL2, REAL_1, SUPINF_2,
      MEMBERED, ARYTM_1, XBOOLE_0, MEASURE5;
 notations TARSKI, XBOOLE_0, SUBSET_1, ORDINAL1, NUMBERS, MEMBERED, XXREAL_0,
      XREAL_0, REAL_1, XXREAL_1, RCOMP_1, XXREAL_2, SUPINF_1, SUPINF_2;
 constructors DOMAIN_1, REAL_1, RCOMP_1, SUPINF_2, SUPINF_1, FINSET_1;
 registrations XBOOLE_0, NUMBERS, XXREAL_0, XREAL_0, MEMBERED, XXREAL_1,
      XXREAL_2, SUBSET_1, FINSET_1;
 requirements SUBSET, BOOLE, NUMERALS, ARITHM, REAL;


begin  :: Some theorems about R_eal numbers

reserve a,b for R_eal;

canceled 8;

:: PROPERTIES OF THE INTERVALS

scheme :: MEASURE5:sch 1

  RSetEq {P[set]} : for X1,X2 being Subset of REAL st (for x being R_eal holds
  x in X1 iff P[x]) & (for x being R_eal holds x in X2 iff P[x]) holds X1 = X2;

definition
  canceled;
  let a,b be R_eal;
  redefine func ].a,b.[ -> Subset of REAL means
:: MEASURE5:def 2
  for x being R_eal holds x in it iff a < x & x < b;
end;

definition
  canceled 2;
  let IT be Subset of REAL;
  attr IT is open_interval means
:: MEASURE5:def 5

  ex a,b being R_eal st IT = ].a,b.[;
  attr IT is closed_interval means
:: MEASURE5:def 6

  ex a,b being real number st IT = [.a,b.];
end;

registration
  cluster non empty open_interval Subset of REAL;
  cluster non empty closed_interval Subset of REAL;
end;

definition
  let IT be Subset of REAL;
  attr IT is right_open_interval means
:: MEASURE5:def 7

  ex a being real number, b being R_eal st IT = [.a,b.[;
end;

notation
  let IT be Subset of REAL;
  synonym IT is left_closed_interval for IT is right_open_interval;
end;

definition
  let IT be Subset of REAL;
  attr IT is left_open_interval means
:: MEASURE5:def 8

  ex a being R_eal,b being real number st IT = ].a,b.];
end;

notation
  let IT be Subset of REAL;
  synonym IT is right_closed_interval for IT is left_open_interval;
end;

registration
  cluster non empty right_open_interval Subset of REAL;
  cluster non empty left_open_interval Subset of REAL;
end;

definition
  mode Interval is interval Subset of REAL;
end;

reserve A,B for Interval;

registration
  cluster open_interval -> interval Subset of REAL;
  cluster closed_interval -> interval Subset of REAL;
  cluster right_open_interval -> interval Subset of REAL;
  cluster left_open_interval -> interval Subset of REAL;
end;

theorem :: MEASURE5:9
  for I being interval Subset of REAL holds
  I is open_interval or I is closed_interval or
  I is right_open_interval or I is left_open_interval;

canceled 7;

theorem :: MEASURE5:17
  for a,b being R_eal st a < b ex x being R_eal st a < x & x < b & x in REAL;

theorem :: MEASURE5:18
  for a,b,c being R_eal st a < b & a < c ex x being R_eal st a < x & x <
  b & x < c & x in REAL;

theorem :: MEASURE5:19
  for a,b,c being R_eal st a < c & b < c ex x being R_eal st a < x & b <
  x & x < c & x in REAL;

definition
 canceled;
  let A be ext-real-membered set;
  func diameter A -> R_eal equals
:: MEASURE5:def 10

  sup A - inf A if A <> {} otherwise
  0.;
end;

canceled 34;

theorem :: MEASURE5:54
  for a,b being R_eal holds (a < b implies diameter ].a,b.[ = b - a) & (
  b <= a implies diameter ].a,b.[ = 0.);

theorem :: MEASURE5:55
  for a,b being R_eal holds (a <= b implies diameter [.a,b.] = b - a) &
  (b < a implies diameter [.a,b.] = 0.);

theorem :: MEASURE5:56
  for a,b being R_eal holds (a < b implies diameter [.a,b.[ = b - a) & (
  b <= a implies diameter [.a,b.[ = 0.);

theorem :: MEASURE5:57
  for a,b being R_eal holds (a < b implies diameter ].a,b.] = b - a) & (
  b <= a implies diameter ].a,b.] = 0.);

canceled;

theorem :: MEASURE5:59
  for a,b being R_eal holds a = -infty & b = +infty & (A = ].a,b.[ or A
  = [.a,b.] or A = [.a,b.[ or A = ].a,b.]) implies diameter(A) = +infty;

registration
  cluster empty -> open_interval Subset of REAL;
end;

theorem :: MEASURE5:60
  diameter {} = 0.;

theorem :: MEASURE5:61
  A c= B & B =[.a,b.] & b <= a implies diameter(A) = 0. & diameter(B) = 0.;

theorem :: MEASURE5:62
  A c= B implies diameter A <= diameter B;

theorem :: MEASURE5:63
  0. <= diameter A;
