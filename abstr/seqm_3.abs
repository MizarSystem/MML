:: Monotone Real Sequences. Subsequences
::  by Jaros{\l}aw Kotowicz
::
:: Received November 23, 1989
:: Copyright (c) 1990 Association of Mizar Users

environ

 vocabularies NUMBERS, SUBSET_1, XREAL_0, ORDINAL1, SEQ_1, ARYTM_3, NAT_1,
      CARD_1, FUNCT_1, XXREAL_0, PARTFUN1, ORDINAL2, RELAT_1, TARSKI, VALUED_0,
      FUNCT_3, ARYTM_1, VALUED_1, XXREAL_2, REAL_1, COMPLEX1, FINSEQ_1, SEQM_3;
 notations TARSKI, SUBSET_1, ORDINAL1, NUMBERS, XREAL_0, RELAT_1, FUNCT_1,
      PARTFUN1, FUNCT_3, FINSEQ_1, VALUED_1, SEQ_1, SEQ_2, REAL_1, COMPLEX1,
      NAT_1, VALUED_0, XXREAL_0;
 constructors PARTFUN1, FUNCT_3, FUNCOP_1, XXREAL_0, REAL_1, NAT_1, COMPLEX1,
      VALUED_1, SEQ_1, SEQ_2, FINSEQ_1, RECDEF_1, RELSET_1;
 registrations XBOOLE_0, FUNCT_1, ORDINAL1, RELSET_1, NUMBERS, XXREAL_0,
      XREAL_0, MEMBERED, VALUED_0, FUNCT_2, VALUED_1, SEQ_2, RFUNCT_1;
 requirements REAL, NUMERALS, SUBSET, BOOLE, ARITHM;


begin

reserve n,n1,m,k for Element of NAT;
reserve r,r1,r2 for real number;
reserve f,seq,seq1,seq2 for Real_Sequence;
reserve x,y for set;

::
:: DEFINITIONS OF MONOTONE AND CONSTANT SEQUENCES
::

reserve e1,e2 for ext-real number;

definition
  redefine
  let f be PartFunc of NAT, REAL;
  attr f is increasing means
:: SEQM_3:def 1

  for m,n st m in dom f & n in dom f & m < n
  holds f.m < f.n;
  attr f is decreasing means
:: SEQM_3:def 2

  for m,n st m in dom f & n in dom f & m < n
  holds f.m > f.n;
  attr f is non-decreasing means
:: SEQM_3:def 3

  for m,n st m in dom f & n in dom f & m
  <= n holds f.m <= f.n;
  attr f is non-increasing means
:: SEQM_3:def 4

  for m,n st m in dom f & n in dom f & m
  <= n holds f.m >= f.n;
end;

definition
  canceled 2;
  let seq;
  attr seq is monotone means
:: SEQM_3:def 7

  seq is non-decreasing or seq is
  non-increasing;
end;

canceled 6;

theorem :: SEQM_3:7
  seq is increasing iff for n,m st n<m holds seq.n<seq.m;

theorem :: SEQM_3:8
  seq is increasing iff for n,k holds seq.n<seq.(n+1+k);

theorem :: SEQM_3:9
  seq is decreasing iff for n,k holds seq.(n+1+k)<seq.n;

theorem :: SEQM_3:10
  seq is decreasing iff for n,m st n<m holds seq.m<seq.n;

theorem :: SEQM_3:11
  seq is non-decreasing iff for n,k holds seq.n<=seq.(n+k);

theorem :: SEQM_3:12
  seq is non-decreasing iff for n,m st n<=m holds seq.n<=seq.m;

theorem :: SEQM_3:13
  seq is non-increasing iff for n,k holds seq.(n+k)<=seq.n;

theorem :: SEQM_3:14
  seq is non-increasing iff for n,m st n<=m holds seq.m<=seq.n;

canceled 4;

::
:: PROPORTIES OF MONOTONE AND CONSTANT SEQUENCES
::

theorem :: SEQM_3:19
  seq is increasing implies for n st 0<n holds seq.0<seq.n;

theorem :: SEQM_3:20
  seq is decreasing implies for n st 0<n holds seq.n<seq.0;

theorem :: SEQM_3:21
  seq is non-decreasing implies for n holds seq.0<=seq.n;

theorem :: SEQM_3:22
  seq is non-increasing implies for n holds seq.n<=seq.0;

registration
  cluster constant -> non-decreasing non-increasing PartFunc of NAT, REAL;
  cluster non-decreasing non-increasing -> constant PartFunc of NAT, REAL;
end;

canceled 5;

registration
  cluster increasing natural-valued Real_Sequence;
end;

registration
  cluster increasing sequence of NAT;
end;

reserve Nseq,Nseq1,Nseq2 for increasing sequence of NAT;

canceled;

theorem :: SEQM_3:29
  seq is sequence of NAT iff for n holds seq.n is Element of NAT;

canceled 2;

registration
  let Nseq,k;
  cluster Nseq ^\k -> increasing natural-valued;
end;

definition
  canceled 3;
  let f be Real_Sequence;
  redefine attr f is increasing means
:: SEQM_3:def 11
  for n being Element of NAT holds f.n < f
  .(n+1);
  redefine attr f is decreasing means
:: SEQM_3:def 12
  for n being Element of NAT holds f.n > f
  .(n+1);
  redefine attr f is non-decreasing means
:: SEQM_3:def 13
  for n being Element of NAT holds f.n
  <= f.(n+1);
  redefine attr f is non-increasing means
:: SEQM_3:def 14
  for n being Element of NAT holds f.n
  >= f.(n+1);
end;

canceled;

theorem :: SEQM_3:33
  for n holds n<=Nseq.n;

canceled 3;

theorem :: SEQM_3:37
  (seq+seq1) ^\k=(seq ^\k) +(seq1 ^\k);

theorem :: SEQM_3:38
  (-seq) ^\k=-(seq ^\k);

theorem :: SEQM_3:39
  (seq-seq1) ^\k=(seq ^\k)-(seq1 ^\k);

canceled;

theorem :: SEQM_3:41
  (seq") ^\k=(seq ^\k)";

theorem :: SEQM_3:42
  (seq(#)seq1) ^\k=(seq ^\k)(#)(seq1 ^\k);

theorem :: SEQM_3:43
  (seq/"seq1) ^\k=(seq ^\k)/"(seq1 ^\k);

theorem :: SEQM_3:44
  (r(#)seq) ^\k=r(#)(seq ^\k);

::
::  SUBSEQUENCES OF MONOTONE SEQUENCE
::    SUBSEQUENCE OF BOUNDED SEQUENCE
::

canceled 4;

theorem :: SEQM_3:49
  seq is increasing & seq1 is subsequence of seq implies seq1 is
  increasing;

theorem :: SEQM_3:50
  seq is decreasing & seq1 is subsequence of seq implies seq1 is
  decreasing;

theorem :: SEQM_3:51
  seq is non-decreasing & seq1 is subsequence of seq implies seq1
  is non-decreasing;

theorem :: SEQM_3:52
  seq is non-increasing & seq1 is subsequence of seq implies seq1
  is non-increasing;

theorem :: SEQM_3:53
  seq is monotone & seq1 is subsequence of seq implies seq1 is monotone;

canceled 2;

theorem :: SEQM_3:56
  seq is bounded_above & seq1 is subsequence of seq implies seq1
  is bounded_above;

theorem :: SEQM_3:57
  seq is bounded_below & seq1 is subsequence of seq implies seq1
  is bounded_below;

theorem :: SEQM_3:58
  seq is bounded & seq1 is subsequence of seq implies seq1 is bounded;

::
:: OPERATIONS ON MONOTONE SEQUENCES
::

theorem :: SEQM_3:59
  (seq is increasing & 0<r implies r(#)seq is increasing) & (0=r implies
r(#)seq is constant) & (seq is increasing & r<0 implies r(#)seq is decreasing);

theorem :: SEQM_3:60
  (seq is decreasing & 0<r implies r(#)seq is decreasing) & (seq is
  decreasing & r<0 implies r(#)seq is increasing);

theorem :: SEQM_3:61
  (seq is non-decreasing & 0<=r implies r(#)seq is non-decreasing) & (
  seq is non-decreasing & r<=0 implies r(#)seq is non-increasing);

theorem :: SEQM_3:62
  (seq is non-increasing & 0<=r implies r(#)seq is non-increasing) & (
  seq is non-increasing & r<=0 implies r(#)seq is non-decreasing);

theorem :: SEQM_3:63
  (seq is increasing & seq1 is increasing implies seq+seq1 is
  increasing) & (seq is decreasing & seq1 is decreasing implies seq+seq1 is
decreasing) & (seq is non-decreasing & seq1 is non-decreasing implies seq+seq1
  is non-decreasing) & (seq is non-increasing & seq1 is non-increasing implies
  seq+seq1 is non-increasing);

theorem :: SEQM_3:64
  (seq is increasing & seq1 is constant implies seq+seq1 is increasing)
& (seq is decreasing & seq1 is constant implies seq+seq1 is decreasing) & (seq
is non-decreasing & seq1 is constant implies seq+seq1 is non-decreasing) & (seq
  is non-increasing & seq1 is constant implies seq+seq1 is non-increasing);

::
:: OPERATIONS ON BOUNDED SEQUENCES
::

canceled 3;

theorem :: SEQM_3:68
  (seq is bounded_above & 0<r implies r(#)seq is bounded_above) &
(0=r implies r(#)seq is bounded) & (seq is bounded_above & r<0 implies r(#)seq
  is bounded_below);

canceled;

theorem :: SEQM_3:70
  (seq is bounded implies for r holds r(#)seq is bounded) & (seq is
  bounded implies -seq is bounded) & (seq is bounded iff abs seq is bounded);

::
:: OPERATIONS ON BOUNDED & MONOTONE SEQUENCES
::

canceled 6;

theorem :: SEQM_3:77
  seq is bounded_above & seq1 is non-increasing implies seq+seq1 is
  bounded_above;

theorem :: SEQM_3:78
  seq is bounded_below & seq1 is non-decreasing implies seq+seq1 is
  bounded_below;

canceled;

theorem :: SEQM_3:80
  incl NAT is increasing natural-valued;

registration
  cluster -> natural-valued FinSequence of NAT;
end;

