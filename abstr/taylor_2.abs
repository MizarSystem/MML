:: The {M}aclaurin Expansions
::  by Akira Nishino and Yasunari Shidama
::
:: Received July 6, 2005
:: Copyright (c) 2005 Association of Mizar Users

environ

 vocabularies PRE_TOPC, BOOLE, RLVECT_1, FUNCT_1, ARYTM, ARYTM_1, ARYTM_3,
      RELAT_1, ABSVALUE, SUBSET_1, ORDINAL2, QC_LANG1, PARTFUN1, SEQ_1, SEQ_2,
      RCOMP_1, SIN_COS, FDIFF_1, SERIES_1, GROUP_1, SUPINF_2, TAYLOR_1,
      TAYLOR_2, RFUNCT_2, MATRIX_2;
 notations XBOOLE_0, SUBSET_1, RELAT_1, PARTFUN1, RFUNCT_2, RCOMP_1, XREAL_0,
      ORDINAL1, NUMBERS, REAL_1, NAT_1, COMPLEX1, SEQ_1, SEQ_2, SERIES_1,
      FDIFF_1, SEQFUNC, PREPOWER, SIN_COS, TAYLOR_1, ABIAN;
 constructors ARYTM_0, REAL_1, NAT_1, LIMFUNC1, ABIAN, RFUNCT_2, RCOMP_1,
      SEQ_2, SERIES_1, PREPOWER, COMSEQ_3, FDIFF_1, SIN_COS, TAYLOR_1;
 registrations RELSET_1, XREAL_0, MEMBERED, RCOMP_1, INT_1, SEQ_1;
 requirements SUBSET, REAL, BOOLE, NUMERALS, ARITHM;
 definitions TAYLOR_1;
 theorems XBOOLE_1, ABSVALUE, REAL_2, PARTFUN1, XCMPLX_1, RELAT_1, RCOMP_1,
      SEQ_1, SEQ_2, SIN_COS, SERIES_1, FUNCT_1, RFUNCT_2, NAT_1, NEWTON, POWER,
      FDIFF_1, FDIFF_2, TAYLOR_1, SIN_COS2, XREAL_1, RFUNCT_1, ABIAN, SCMFSA9A,
      COMPLEX1;
 schemes NAT_1;

begin

theorem :: TAYLOR_2:1
  for x be Real, n be Nat holds
    abs(x |^ n) = abs(x) |^ n;

definition
  let f be PartFunc of REAL,REAL,
      Z be Subset of REAL,
      a be real number;
  func Maclaurin(f,Z,a) -> Real_Sequence equals
:: TAYLOR_2:def 1
  Taylor(f,Z,0,a);
end;

theorem :: TAYLOR_2:2
  for n be Nat, f be PartFunc of REAL,REAL, r be Real st
  ( 0 < r & f is_differentiable_on n+1, ].-r,r.[ )
    for x be Real st x in ].-r, r.[ holds
      ex s be Real st 0 < s & s < 1 &
        f.x = Partial_Sums(Maclaurin(f,].-r,r.[,x)).n
               + (diff(f,].-r,r.[).(n+1)).(s*x)
               * x |^ (n+1) / ((n+1)!);

theorem :: TAYLOR_2:3
  for n be Nat, f be PartFunc of REAL,REAL, x0, r be Real st
  ( 0 < r & f is_differentiable_on n+1, ].x0-r,x0+r.[ )
    for x be Real st x in ].x0-r, x0+r.[ holds
      ex s be Real st 0 < s & s < 1 &
        abs(f.x-Partial_Sums(Taylor(f, ].x0-r,x0+r.[,x0,x)).n)
        = abs( (diff(f,].x0-r,x0+r.[).(n+1)).(x0+s*(x-x0))
               * (x-x0) |^ (n+1) / ((n+1)!) );

theorem :: TAYLOR_2:4
  for n be Nat, f be PartFunc of REAL,REAL, r be Real st
  ( 0 < r & f is_differentiable_on n+1, ].-r,r.[ )
    for x be Real st x in ].-r, r.[ holds
      ex s be Real st 0 < s & s < 1 &
        abs(f.x-Partial_Sums(Maclaurin(f,].-r,r.[,x)).n)
               = abs( (diff(f,].-r,r.[).(n+1)).(s*x)
               * x |^ (n+1) / ((n+1)!) );

theorem :: TAYLOR_2:5
  for r be Real holds
    exp `| ].-r,r.[ = exp | ].-r,r.[ &
    dom(exp | ].-r,r.[) = ].-r,r.[;

theorem :: TAYLOR_2:6
  for n be Nat, r be Real holds diff(exp,].-r,r.[).n=exp | ].-r,r.[;

theorem :: TAYLOR_2:7
  for n be Nat, r, x be Real st x in ].-r,r.[ holds
    (diff(exp,].-r,r.[).n).x = exp.x;

theorem :: TAYLOR_2:8
  for n be Nat, r,x be Real st 0 < r holds
    Maclaurin(exp, ].-r,r.[,x).n = x |^ n / (n!);

theorem :: TAYLOR_2:9
  for n be Nat, r,x,s be Real st
    x in ].-r,r.[ & 0 < s & s < 1 holds
      abs( (diff(exp,].-r,r.[).(n+1)).(s*x) * x |^ (n+1) / ((n+1)!) )
               <= abs(exp.(s*x)) * abs(x) |^ (n+1) / ((n+1)!);

theorem :: TAYLOR_2:10
  for r be Real, n be Nat holds
    exp is_differentiable_on n, ].-r,r.[;

theorem :: TAYLOR_2:11
  for r be Real st 0 < r
   ex M,L be Real st 0 <= M & 0 <= L &
    for n be Nat holds
     for x,s be Real st x in ].-r,r.[ & 0 < s & s < 1 holds
      abs((diff(exp,].-r,r.[).n).(s*x) * x |^ n /(n!))
       <= M * L |^ n / (n!);

theorem :: TAYLOR_2:12
  for M,L be Real st M >= 0 & L >= 0
    for e be Real st e > 0 holds
       ex n be Nat st for m be Nat st n <= m holds
          (M*L |^ m / (m!)) < e;

theorem :: TAYLOR_2:13
  for r, e be Real st 0 < r & 0 < e holds
    ex n be Nat st
      for m be Nat st n <= m holds
        for x,s be Real st x in ].-r,r.[ & 0 < s & s < 1 holds
          abs((diff(exp,].-r,r.[).m).(s*x) * x |^ m / (m!))< e;

theorem :: TAYLOR_2:14
  for r, e be Real st 0 < r & 0 < e holds
  ex n be Nat st for m be Nat st n <= m holds
    for x being real number st x in ].-r,r.[ holds
      abs(exp.x-Partial_Sums(Maclaurin(exp,].-r,r.[,x)).m) < e;

theorem :: TAYLOR_2:15
  for x be Real holds x ExpSeq is absolutely_summable;

theorem :: TAYLOR_2:16
  for r, x be Real st 0 < r holds
       Maclaurin(exp,].-r,r.[,x) = (x ExpSeq)
     & Maclaurin(exp,].-r,r.[,x) is absolutely_summable
     & exp.x=Sum(Maclaurin(exp,].-r,r.[,x));

theorem :: TAYLOR_2:17
  for r be Real holds
          sin `| ].-r,r.[ = cos | ].-r,r.[
        & cos `| ].-r,r.[ = (-sin) | ].-r,r.[
        & dom(sin | ].-r,r.[) = ].-r,r.[
        & dom(cos | ].-r,r.[) = ].-r,r.[;

theorem :: TAYLOR_2:18
  for f be PartFunc of REAL,REAL,
      Z be Subset of REAL st f is_differentiable_on Z holds
    (-f) `| Z = -f `| Z;

theorem :: TAYLOR_2:19
  for r be Real, n be Nat holds
    diff(sin,].-r,r.[).(2*n) = (-1) |^ n (#) sin | ].-r,r.[ &
    diff(sin,].-r,r.[).(2*n+1) = (-1) |^ n (#) cos | ].-r,r.[ &
    diff(cos,].-r,r.[).(2*n) = (-1) |^ n (#)cos | ].-r,r.[ &
    diff(cos,].-r,r.[).(2*n+1) = (-1) |^ (n+1) (#)sin | ].-r,r.[;

theorem :: TAYLOR_2:20
  for n be Nat, r,x be Real st r > 0 holds
  Maclaurin(sin, ].-r,r.[,x).(2*n) = 0 &
  Maclaurin(sin, ].-r,r.[,x).(2*n+1) = (-1) |^ n * x |^ (2*n+1) / ((2*n+1)!) &
  Maclaurin(cos, ].-r,r.[,x).(2*n) = (-1) |^ n * x |^ (2*n) / ((2*n)!) &
  Maclaurin(cos, ].-r,r.[,x).(2*n+1) = 0;

theorem :: TAYLOR_2:21
  for r be Real, n be Nat holds
    sin is_differentiable_on n, ].-r,r.[ &
    cos is_differentiable_on n, ].-r,r.[;

theorem :: TAYLOR_2:22
  for r be Real st r > 0
   ex r1,r2 be Real st r1 >= 0 & r2 >= 0 &
  for n be Nat holds
    for x,s be Real st x in ].-r,r.[ & 0 < s & s < 1 holds
        abs((diff(sin,].-r,r.[).n).(s*x) * x |^ n / (n!))
                <= r1 * r2 |^ n / (n!) &
        abs((diff(cos,].-r,r.[).n).(s*x) * x |^ n / (n!))
                <= r1 * r2 |^ n / (n!);

theorem :: TAYLOR_2:23
  for r, e be Real st 0 < r & 0 < e holds
    ex n be Nat st for m be Nat st n <= m holds
       for x,s be Real st x in ].-r,r.[ & 0 < s & s < 1 holds
       abs((diff(sin,].-r,r.[).m).(s*x) * x |^ m / (m!)) < e &
       abs((diff(cos,].-r,r.[).m).(s*x) * x |^ m / (m!)) < e;

theorem :: TAYLOR_2:24
  for r, e be Real st 0 < r & 0 < e holds
   ex n be Nat st for m be Nat st n <= m holds
      for x being real number st x in ].-r,r.[ holds
        abs(sin.x-Partial_Sums(Maclaurin(sin,].-r,r.[,x)).m) < e &
        abs(cos.x-Partial_Sums(Maclaurin(cos,].-r,r.[,x)).m) < e;

theorem :: TAYLOR_2:25
  for r, x be Real, m be Nat st 0 < r holds
    Partial_Sums(Maclaurin(sin,].-r,r.[,x)).(2*m+1)
       = Partial_Sums(x P_sin).m &
    Partial_Sums(Maclaurin(cos,].-r,r.[,x)).(2*m+1)
       = Partial_Sums(x P_cos).m;

theorem :: TAYLOR_2:26
  for r, x be Real, m being Nat st 0 < r & m > 0 holds
    Partial_Sums(Maclaurin(sin,].-r,r.[,x)).(2*m)
          = Partial_Sums(x P_sin).(m-1) &
    Partial_Sums(Maclaurin(cos,].-r,r.[,x)).(2*m)
          = Partial_Sums(x P_cos).m;

theorem :: TAYLOR_2:27
  for r, x be Real, m be Nat st 0 < r holds
    Partial_Sums(Maclaurin(cos,].-r,r.[,x)).(2*m) = Partial_Sums(x P_cos).m;

theorem :: TAYLOR_2:28
  for r, x be Real st r > 0 holds
    Partial_Sums(Maclaurin(sin,].-r,r.[,x)) is convergent &
    sin.x = Sum(Maclaurin(sin,].-r,r.[,x)) &
    Partial_Sums(Maclaurin(cos,].-r,r.[,x)) is convergent &
    cos.x = Sum(Maclaurin(cos,].-r,r.[,x));
