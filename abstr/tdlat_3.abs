:: The Lattice of Domains of an Extremally Disconnected Space
::  by Zbigniew Karno
::
:: Received August 27, 1992
:: Copyright (c) 1992 Association of Mizar Users

environ

 vocabulary PRE_TOPC, TOPS_1, BOOLE, SUBSET_1, NATTRA_1, SETFAM_1, TARSKI,
      TDLAT_1, RELAT_1, LATTICES, FUNCT_1, TDLAT_2, TDLAT_3;
 notation TARSKI, XBOOLE_0, ZFMISC_1, SUBSET_1, SETFAM_1, STRUCT_0, RELAT_1,
      PRE_TOPC, TOPS_1, TOPS_2, PCOMPS_1, BORSUK_1, TSEP_1, BINOP_1, LATTICES,
      LATTICE3, TDLAT_1, TDLAT_2;
 constructors TOPS_1, TOPS_2, BORSUK_1, TSEP_1, LATTICE3, TDLAT_1, TDLAT_2,
      PARTFUN1, MEMBERED;
 clusters PRE_TOPC, BORSUK_1, TSEP_1, LATTICES, STRUCT_0, COMPLSP1, RELSET_1,
      SUBSET_1, MEMBERED, ZFMISC_1;
 requirements BOOLE, SUBSET;


begin
:: 1. Selected Properties of Subsets of a Topological Space.
reserve X for TopSpace;

::Properties of the Closure and the Interior Operators.
reserve C for Subset of X;

canceled;

theorem :: TDLAT_3:2
 Cl C = (Int C`)`;


theorem :: TDLAT_3:3
 Cl C` = (Int C)`;

theorem :: TDLAT_3:4
 Int C` =  (Cl C)`;

reserve A, B for Subset of X;

canceled;

theorem :: TDLAT_3:6
   A \/ B = the carrier of X implies
    (A is closed implies A \/ Int B = the carrier of X) &
      (B is closed implies Int A \/ B = the carrier of X);

theorem :: TDLAT_3:7
 A is open & A is closed iff Cl A = Int A;

theorem :: TDLAT_3:8
   A is open & A is closed implies Int Cl A = Cl Int A;

::Properties of Domains.
theorem :: TDLAT_3:9
 A is condensed & Cl Int A c= Int Cl A implies
  A is open_condensed & A is closed_condensed;

theorem :: TDLAT_3:10
 A is condensed & Cl Int A c= Int Cl A implies A is open & A is closed;

theorem :: TDLAT_3:11
 A is condensed implies Int Cl A = Int A & Cl A = Cl Int A;


begin
:: 2. Discrete Topological Structures.

definition let IT be TopStruct;
 attr IT is discrete means
:: TDLAT_3:def 1
 the topology of IT = bool the carrier of IT;
 attr IT is anti-discrete means
:: TDLAT_3:def 2
 the topology of IT = {{}, the carrier of IT};
end;


theorem :: TDLAT_3:12
   for Y being TopStruct holds
   Y is discrete & Y is anti-discrete implies
     bool the carrier of Y = {{}, the carrier of Y};

theorem :: TDLAT_3:13
 for Y being TopStruct st
   {} in the topology of Y & the carrier of Y in the topology of Y holds
    bool the carrier of Y = {{}, the carrier of Y} implies
      Y is discrete & Y is anti-discrete;

registration
 cluster discrete anti-discrete strict non empty TopStruct;
 existence
  proof
   set one = {{}};
   reconsider tau = bool one as Subset-Family of one;
   take Y = TopStruct (#one,tau#);
   thus Y is discrete by Def1;
      tau = {{},one} by ZFMISC_1:30;
   hence Y is anti-discrete by Def2;
   thus thesis;
  end;
end;


theorem :: TDLAT_3:14
 for Y being discrete TopStruct, A being Subset of Y holds
  (the carrier of Y) \ A in the topology of Y;

theorem :: TDLAT_3:15
 for Y being anti-discrete TopStruct, A being Subset of Y st
  A in the topology of Y holds (the carrier of Y) \ A in the topology of Y;

registration
 cluster discrete -> TopSpace-like TopStruct;
 coherence
  proof
    let Y be TopStruct; assume
    Y is discrete;
       then the topology of Y = bool the carrier of Y by Def1;
    then the carrier of Y in the topology of Y & (
 for F being Subset-Family of Y st
          F c= the topology of Y holds union F in the topology of Y) &(
 for A,B being Subset of Y st
          A in the topology of Y & B in the topology of Y holds
           A /\ B in the topology of Y) by ZFMISC_1:def 1;
   hence thesis by PRE_TOPC:def 1;
  end;
 cluster anti-discrete -> TopSpace-like TopStruct;
 coherence
  proof
    let Y be TopStruct; assume
    Y is anti-discrete;
      then A1: the topology of Y = {{}, the carrier of Y} by Def2;
     now
    thus the carrier of Y in the topology of Y by A1,TARSKI:def 2;
    thus for F being Subset-Family of Y st
          F c= the topology of Y holds union F in the topology of Y
     proof
       let F be Subset-Family of Y;
      assume F c= the topology of Y;
       then F = {} or F = {{}} or F = {the carrier of Y} or
            F = {{},the carrier of Y} by A1,ZFMISC_1:42;
       then union F = {} or union F = the carrier of Y or
            union F = {} \/ (the carrier of Y) by ZFMISC_1:2,31,93;
      hence thesis by A1,TARSKI:def 2;
     end;
    thus for A,B being Subset of Y st
          A in the topology of Y & B in the topology of Y holds
           A /\ B in the topology of Y
     proof
       let A,B be Subset of Y;
      assume A in the topology of Y & B in the topology of Y;
       then (A = {} or A = the carrier of Y) &
             (B = {} or B = the carrier of Y) by A1,TARSKI:def 2;
      hence A /\ B in the topology of Y by A1,TARSKI:def 2;
     end;
   end;
   hence thesis by PRE_TOPC:def 1;
  end;
end;


theorem :: TDLAT_3:16
   for Y being TopSpace-like TopStruct holds
   bool the carrier of Y = {{}, the carrier of Y} implies
      Y is discrete & Y is anti-discrete;

definition let IT be TopStruct;
 attr IT is almost_discrete means
:: TDLAT_3:def 3
 for A being Subset of IT st
   A in the topology of IT holds
     (the carrier of IT) \ A in the topology of IT;
end;


registration
 cluster discrete -> almost_discrete TopStruct;
 coherence
  proof
   let Y be TopStruct; assume Y is discrete;
then for A be Subset of Y holds A in the topology of Y
implies
 (the carrier of Y) \ A in the topology of Y by Th14;
   hence Y is almost_discrete by Def3;
  end;
 cluster anti-discrete -> almost_discrete TopStruct;
 coherence
  proof
   let Y be TopStruct; assume
    Y is anti-discrete;
    then for A be Subset of Y holds A in the topology of Y
implies
 (the carrier of Y) \ A in the topology of Y by Th15;
   hence Y is almost_discrete by Def3;
  end;
end;


registration
 cluster almost_discrete strict TopStruct;
 existence
  proof
   consider Y being discrete strict TopStruct;
   take Y;
   thus thesis;
  end;
end;



begin
:: 3. Discrete Topological Spaces.

registration
 cluster discrete anti-discrete strict non empty TopSpace;
 existence
  proof
   consider X being discrete anti-discrete strict non empty TopStruct;
   reconsider X as TopSpace;
   take X;
   thus thesis;
  end;
end;


theorem :: TDLAT_3:17
 X is discrete iff
  for A being Subset of X holds A is open;

theorem :: TDLAT_3:18
 X is discrete iff
  for A being Subset of X holds A is closed;

theorem :: TDLAT_3:19
 (for A being Subset of X, x being Point of X st A = {x} holds
   A is open) implies X is discrete;

registration let X be discrete non empty TopSpace;
 cluster -> open closed discrete SubSpace of X;
 coherence
  proof
     A1: the topology of X = bool the carrier of X by Def1;
   let X0 be SubSpace of X;
   thus X0 is open
    proof let A be Subset of X;
     thus thesis by Th17;
    end;
   thus X0 is closed
    proof let A be Subset of X;
     thus thesis by Th18;
    end;
        now let S be set;
       assume S in bool the carrier of X0;
        then reconsider A = S as Subset of X0;
         A2: the carrier of X0 c= the carrier of X by BORSUK_1:35;
         A3: A c= the carrier of X0;
        reconsider B = A as Subset of X by A2,XBOOLE_1:1;
           now
          take B;
             A c= [#]X0 by A3,PRE_TOPC:12;
          hence B in the topology of X & A = B /\ [#]X0 by A1,XBOOLE_1:28;
         end;
        hence S in the topology of X0 by PRE_TOPC:def 9;
      end;
     then bool the carrier of X0 c= the topology of X0 &
      the topology of X0 c= bool the carrier of X0 by TARSKI:def 3;
     hence the topology of X0 = bool the carrier of X0 by XBOOLE_0:def 10;
  end;
end;


registration let X be discrete non empty TopSpace;
 cluster discrete strict SubSpace of X;
  existence
   proof
    consider X0 being strict SubSpace of X;
     take X0;
    thus thesis;
   end;
end;


theorem :: TDLAT_3:20
 X is anti-discrete iff
  for A being Subset of X st A is open
   holds A = {} or A = the carrier of X;

theorem :: TDLAT_3:21
 X is anti-discrete iff
  for A being Subset of X st A is closed
   holds A = {} or A = the carrier of X;

theorem :: TDLAT_3:22
   (for A being Subset of X, x being Point of X st
            A = {x} holds Cl A = the carrier of X) implies
     X is anti-discrete;

registration let X be anti-discrete non empty TopSpace;
 cluster -> anti-discrete SubSpace of X;
 coherence
  proof
     A1: the topology of X = {{}, the carrier of X} by Def2;
   let X0 be SubSpace of X;
      now
        now let S be set;
       assume S in {{}, the carrier of X0};
       then S = {} or S = the carrier of X0 by TARSKI:def 2;
       hence S in the topology of X0 by PRE_TOPC:5,def 1;
      end;
     then A2: {{}, the carrier of X0} c= the topology of X0 by TARSKI:def 3;
        now let S be set;
       assume A3: S in the topology of X0;
        then reconsider A = S as Subset of X0;
       consider B being Subset of X such that
          A4: B in the topology of X and A5: A = B /\ [#]
X0 by A3,PRE_TOPC:def 9;
         A6: B = {} implies A = {} by A5;
            now
              assume B = the carrier of X;
               then the carrier of X0 c= B by BORSUK_1:35;
               then [#]X0 c= B by PRE_TOPC:12;
               then [#]X0 = B /\ [#]X0 & [#]X0 = the carrier of X0
                                                    by PRE_TOPC:12,XBOOLE_1:28;
               hence A = the carrier of X0 by A5;
             end;
       hence S in {{}, the carrier of X0} by A1,A4,A6,TARSKI:def 2;
      end;
     then the topology of X0 c= {{}, the carrier of X0} by TARSKI:def 3;
     hence the topology of X0 = {{}, the carrier of X0} by A2,XBOOLE_0:def 10;
    end;
   hence thesis by Def2;
  end;
end;


registration let X be anti-discrete non empty TopSpace;
 cluster anti-discrete SubSpace of X;
  existence
   proof
    consider X0 being SubSpace of X;
     take X0;
    thus thesis;
   end;
end;


theorem :: TDLAT_3:23
 X is almost_discrete iff
  for A being Subset of X st A is open holds A is closed;

theorem :: TDLAT_3:24
 X is almost_discrete iff
  for A being Subset of X st A is closed holds A is open;

theorem :: TDLAT_3:25
   X is almost_discrete iff
  for A being Subset of X st A is open holds Cl A = A;

theorem :: TDLAT_3:26
   X is almost_discrete iff
  for A being Subset of X st A is closed holds Int A = A;

registration
 cluster almost_discrete strict TopSpace;
 existence
  proof
   consider X being discrete strict TopSpace;
   take X;
   thus thesis;
  end;
end;


theorem :: TDLAT_3:27
   (for A being Subset of X, x being Point of X st A = {x}
 holds Cl A is open)
   implies X is almost_discrete;

theorem :: TDLAT_3:28
   X is discrete iff X is almost_discrete &
  (for A being Subset of X, x being Point of X st A = {x}
  holds A is closed);

registration
 cluster discrete -> almost_discrete TopSpace;
 coherence
  proof
   let X be TopSpace;
   assume X is discrete;
   then reconsider X as discrete TopSpace;
     X is almost_discrete;
   hence thesis;
  end;
 cluster anti-discrete -> almost_discrete TopSpace;
 coherence
  proof
   let X be TopSpace;
   assume X is anti-discrete;
   then reconsider X as anti-discrete TopSpace;
     X is almost_discrete;
   hence thesis;
  end;
end;


registration let X be almost_discrete non empty TopSpace;
 cluster -> almost_discrete (non empty SubSpace of X);
 coherence
  proof
   let X0 be non empty SubSpace of X;
      now let A0 be Subset of X0;
     assume A0 is open;
      then consider A being Subset of X such that
        A1: A is open and A2: A0 = A /\ [#]X0 by TOPS_2:32;
         A is closed by A1,Th23;
     hence A0 is closed by A2,PRE_TOPC:43;
    end;
   hence thesis by Th23;
  end;
end;


registration let X be almost_discrete non empty TopSpace;
 cluster open -> closed SubSpace of X;
 coherence
  proof let X0 be SubSpace of X such that
A1:  X0 is open;
   let A be Subset of X; assume A = the carrier of X0;
    then A is open by A1,TSEP_1:def 1;
   hence thesis by Th23;
  end;
 cluster closed -> open SubSpace of X;
 coherence
  proof let X0 be SubSpace of X such that
A2:  X0 is closed;
   let A be Subset of X; assume A = the carrier of X0;
    then A is closed by A2,BORSUK_1:def 14;
   hence thesis by Th24;
  end;
end;


registration let X be almost_discrete non empty TopSpace;
 cluster almost_discrete strict non empty SubSpace of X;
  existence
   proof
    consider X0 being strict non empty SubSpace of X;
     take X0;
    thus thesis;
   end;
end;



begin
:: 4. Extremally Disconnected Topological Spaces.

definition let IT be non empty TopSpace;
 attr IT is extremally_disconnected means
:: TDLAT_3:def 4
 for A being Subset of IT st A is open holds Cl A is open;
end;


registration
 cluster extremally_disconnected strict (non empty TopSpace);
 existence
  proof
   consider X being discrete strict non empty TopSpace;
   take X;
      now let A be Subset of X;
     assume A1: A is open;
         A is closed by Th18;
     hence Cl A is open by A1,PRE_TOPC:52;
    end;
   hence thesis by Def4;
  end;
end;


reserve X for non empty TopSpace;

theorem :: TDLAT_3:29
 X is extremally_disconnected iff
  for A being Subset of X st A is closed holds Int A is closed;

theorem :: TDLAT_3:30
 X is extremally_disconnected iff
   for A, B being Subset of X st A is open & B is open holds
     A misses B implies Cl A misses Cl B;

theorem :: TDLAT_3:31
   X is extremally_disconnected iff
   for A, B being Subset of X st A is closed & B is closed holds
    A \/ B = the carrier of X implies (Int A) \/ (Int B) = the carrier of X;

theorem :: TDLAT_3:32
 X is extremally_disconnected iff
  for A being Subset of X st A is open holds Cl A = Int Cl A;

theorem :: TDLAT_3:33
   X is extremally_disconnected iff
  for A being Subset of X st A is closed holds Int A = Cl Int A;

theorem :: TDLAT_3:34
 X is extremally_disconnected iff
  for A being Subset of X st A is condensed
  holds A is closed & A is open;

theorem :: TDLAT_3:35
 X is extremally_disconnected iff
  for A being Subset of X st A is condensed holds
   A is closed_condensed & A is open_condensed;

theorem :: TDLAT_3:36
 X is extremally_disconnected iff
  for A being Subset of X st A is condensed
  holds Int Cl A = Cl Int A;

theorem :: TDLAT_3:37
   X is extremally_disconnected iff
  for A being Subset of X st A is condensed holds Int A = Cl A;

theorem :: TDLAT_3:38
 X is extremally_disconnected iff
  for A being Subset of X holds
   (A is open_condensed implies A is closed_condensed) &
     (A is closed_condensed implies A is open_condensed);

definition let IT be non empty TopSpace;
 attr IT is hereditarily_extremally_disconnected means
:: TDLAT_3:def 5
 for X0 being non empty SubSpace of IT
   holds X0 is extremally_disconnected;
end;


registration
 cluster hereditarily_extremally_disconnected strict (non empty TopSpace);
 existence
  proof
   consider X being discrete strict non empty TopSpace;
   take X;
       now let X0 be non empty SubSpace of X;
         now let A be Subset of X0;
        assume A1: A is open;
            A is closed by Th18;
        hence Cl A is open by A1,PRE_TOPC:52;
       end;
      hence X0 is extremally_disconnected by Def4;
     end;
   hence thesis by Def5;
  end;
end;


registration
 cluster
  hereditarily_extremally_disconnected -> extremally_disconnected
      (non empty TopSpace);
 coherence
  proof
   let X be non empty TopSpace such that
A1:  X is hereditarily_extremally_disconnected;
       X is SubSpace of X by TSEP_1:2;
   hence thesis by A1,Def5;
  end;
 cluster
  almost_discrete -> hereditarily_extremally_disconnected (non empty TopSpace);
 coherence
  proof
   let X be non empty TopSpace;
   assume X is almost_discrete;
   then reconsider X as almost_discrete non empty TopSpace;
      now let X0 be non empty SubSpace of X;
        now let A be Subset of X0;
       assume A2: A is open;
        then A is closed by Th23;
       hence Cl A is open by A2,PRE_TOPC:52;
      end;
     hence X0 is extremally_disconnected by Def4;
    end;
   hence thesis by Def5;
  end;
end;


theorem :: TDLAT_3:39
 for X being extremally_disconnected (non empty TopSpace),
     X0 being non empty SubSpace of X,
  A being Subset of X st A = the carrier of X0 & A is dense
  holds X0 is extremally_disconnected;

registration let X be extremally_disconnected (non empty TopSpace);
 cluster open -> extremally_disconnected (non empty SubSpace of X);
 coherence
  proof
   let X0 be non empty SubSpace of X such that
A1:  X0 is open;
     reconsider B = the carrier of X0 as Subset of X
      by TSEP_1:1;
      now let A0 be Subset of X0;
     assume A2: A0 is open;
         A0 c= B;
      then A0 is Subset of X by XBOOLE_1:1;
       then reconsider A = A0 as Subset of X;
         A is open by A1,A2,TSEP_1:17;
      then A3: Cl A is open by Def4;
         Cl A0 = (Cl A) /\ [#]X0 by PRE_TOPC:47;
     hence Cl A0 is open by A3,TOPS_2:32;
    end;
   hence X0 is extremally_disconnected by Def4;
  end;
end;


registration let X be extremally_disconnected (non empty TopSpace);
 cluster extremally_disconnected strict (non empty SubSpace of X);
  existence
   proof
    consider X0 being strict open non empty SubSpace of X;
     take X0;
    thus thesis;
   end;
end;


registration
let X be hereditarily_extremally_disconnected (non empty TopSpace);
 cluster -> hereditarily_extremally_disconnected (non empty SubSpace of X);
 coherence
  proof
   let X0 be non empty SubSpace of X;
      for Y being non empty SubSpace of X0 holds Y is extremally_disconnected
     proof
      let Y be non empty SubSpace of X0;
         Y is SubSpace of X by TSEP_1:7;
      hence thesis by Def5;
     end;
   hence thesis by Def5;
  end;
end;


registration
let X be hereditarily_extremally_disconnected (non empty TopSpace);
 cluster hereditarily_extremally_disconnected strict (non empty SubSpace of X);
  existence
   proof
    consider X0 being strict non empty SubSpace of X;
     take X0;
    thus thesis;
   end;
end;


theorem :: TDLAT_3:40
   (for X0 being closed non empty SubSpace of X
    holds X0 is extremally_disconnected)
   implies X is hereditarily_extremally_disconnected;


begin
:: 5. The Lattice of Domains of Extremally Disconnected Spaces.

::Properties of the Lattice of Domains of an Extremally Disconnected Space.
reserve Y for extremally_disconnected (non empty TopSpace);

theorem :: TDLAT_3:41
 Domains_of Y = Closed_Domains_of Y;

theorem :: TDLAT_3:42
 D-Union Y = CLD-Union Y & D-Meet Y = CLD-Meet Y;

theorem :: TDLAT_3:43
 Domains_Lattice Y = Closed_Domains_Lattice Y;

theorem :: TDLAT_3:44
 Domains_of Y = Open_Domains_of Y;

theorem :: TDLAT_3:45
 D-Union Y = OPD-Union Y & D-Meet Y = OPD-Meet Y;

theorem :: TDLAT_3:46
 Domains_Lattice Y = Open_Domains_Lattice Y;

theorem :: TDLAT_3:47
 for A, B being Element of Domains_of Y holds
  (D-Union Y).(A,B) = A \/ B & (D-Meet Y).(A,B) = A /\ B;

theorem :: TDLAT_3:48
   for a, b being Element of Domains_Lattice Y
  for A, B being Element of Domains_of Y st a = A & b = B holds
    a "\/" b = A \/ B & a "/\" b = A /\ B;

theorem :: TDLAT_3:49
   for F being Subset-Family of Y st F is domains-family
  for S being Subset of Domains_Lattice Y st S = F holds
   "\/"(S,Domains_Lattice Y) = Cl(union F);

theorem :: TDLAT_3:50
   for F being Subset-Family of Y st F is domains-family
  for S being Subset of Domains_Lattice Y st S = F holds
   (S <> {} implies "/\"(S,Domains_Lattice Y) = Int(meet F)) &
     (S = {} implies "/\"(S,Domains_Lattice Y) = [#]Y);

::Lattice-theoretic Characterizations of Extremally Disconnected Spaces.
reserve X for non empty TopSpace;

theorem :: TDLAT_3:51
 X is extremally_disconnected iff Domains_Lattice X is M_Lattice;

theorem :: TDLAT_3:52
   Domains_Lattice X = Closed_Domains_Lattice X implies
                            X is extremally_disconnected;

theorem :: TDLAT_3:53
   Domains_Lattice X = Open_Domains_Lattice X implies
                          X is extremally_disconnected;

theorem :: TDLAT_3:54
   Closed_Domains_Lattice X = Open_Domains_Lattice X implies
                                 X is extremally_disconnected;

theorem :: TDLAT_3:55
   X is extremally_disconnected iff Domains_Lattice X is B_Lattice;
