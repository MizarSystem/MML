:: Uniform Continuity of Functions on Normed Complex Linear Spaces
::  by Noboru Endou
::
:: Received October 6, 2004
:: Copyright (c) 2004 Association of Mizar Users

environ

 vocabularies PRE_TOPC, FCONT_1, RLVECT_1, FUNCT_1, ARYTM_1, ARYTM_3, RELAT_1,
      ABSVALUE, ORDINAL2, SEQ_1, SEQ_2, SEQM_3, COMPTS_1, BOOLE, FINSEQ_4,
      SEQ_4, PARTFUN1, NORMSP_1, CLVECT_1, COMPLEX1, CFUNCT_1, OPPCAT_1,
      FCONT_2, SQUARE_1, CLOPBAN1, ALI2, FUNCOP_1, POWER, RSSPACE3, FUNCT_4,
      FRECHET2, ARYTM;
 notations TARSKI, XBOOLE_0, SUBSET_1, NUMBERS, XCMPLX_0, XXREAL_0, REAL_1,
      NAT_1, RELAT_1, FUNCT_1, RELSET_1, PARTFUN1, PARTFUN2, FUNCT_2, PRE_TOPC,
      VALUED_0, STRUCT_0, RLVECT_1, FUNCOP_1, COMPLEX1, VALUED_1, SEQ_2,
      SEQM_3, SEQ_4, FUNCT_7, VFUNCT_1, SQUARE_1, POWER, CFUNCT_1, VFUNCT_2,
      NORMSP_1, CLVECT_1, LOPBAN_3, NFCONT_1, CLOPBAN1, CLOPBAN3, NFCONT_2,
      NCFCONT1, CSSPACE3, RECDEF_1;
 constructors PARTFUN1, REAL_1, SQUARE_1, NAT_1, COMPLEX1, SEQ_2, SEQ_4,
      PARTFUN2, POWER, FUNCT_7, BHSP_3, VFUNCT_1, LOPBAN_3, CSSPACE3, NFCONT_1,
      NFCONT_2, CLOPBAN3, VFUNCT_2, NCFCONT1, SEQ_1, VALUED_1, RECDEF_1,
      NORMSP_1;
 registrations XBOOLE_0, FUNCT_1, ORDINAL1, RELSET_1, XXREAL_0, XREAL_0,
      MEMBERED, SEQM_3, STRUCT_0, VALUED_1, FUNCT_2, NUMBERS, VALUED_0;
 requirements SUBSET, REAL, BOOLE, NUMERALS, ARITHM;



begin :: Uniform Continuity of Functions on Real and Complex Normed Linear Spaces

reserve X,X1 for set,
  r,s for Real,
  z for Complex,
  RNS for RealNormSpace,
  CNS,CNS1,CNS2 for ComplexNormSpace;

definition
  let X be set;
  let CNS1,CNS2 be ComplexNormSpace;
  let f be PartFunc of CNS1,CNS2;
  pred f is_uniformly_continuous_on X means
:: NCFCONT2:def 1

  X c= dom f &
  for r st 0 < r ex s st 0 < s & for x1,x2 be Point of CNS1 st
  x1 in X & x2 in X & ||.x1 - x2.|| < s holds ||. f/.x1 - f/.x2 .|| < r;
end;

definition
  let X be set;
  let RNS be RealNormSpace;
  let CNS be ComplexNormSpace;
  let f be PartFunc of CNS,RNS;
  pred f is_uniformly_continuous_on X means
:: NCFCONT2:def 2

  X c= dom f &
  for r st 0 < r ex s st 0 < s & for x1,x2 be Point of CNS st
  x1 in X & x2 in X & ||.x1 - x2.|| < s holds ||. f/.x1 - f/.x2 .|| < r;
end;

definition
  let X be set;
  let RNS be RealNormSpace;
  let CNS be ComplexNormSpace;
  let f be PartFunc of RNS,CNS;
  pred f is_uniformly_continuous_on X means
:: NCFCONT2:def 3

  X c= dom f &
  for r st 0 < r ex s st 0 < s & for x1,x2 be Point of RNS st
  x1 in X & x2 in X & ||.x1 - x2.|| < s holds ||. f/.x1 - f/.x2 .|| < r;
end;

definition
  let X be set;
  let CNS be ComplexNormSpace;
  let f be PartFunc of the carrier of CNS,COMPLEX;
  pred f is_uniformly_continuous_on X means
:: NCFCONT2:def 4

  X c= dom f &
  for r st 0 < r ex s st
  0 < s & for x1,x2 be Point of CNS st x1 in X & x2 in X &
  ||.x1 - x2.|| < s holds |.(f/.x1 - f/.x2).| < r;
end;

definition
  let X be set;
  let CNS be ComplexNormSpace;
  let f be PartFunc of the carrier of CNS,REAL;
  pred f is_uniformly_continuous_on X means
:: NCFCONT2:def 5

  X c= dom f &
  for r st 0 < r ex s st
  0 < s & for x1,x2 be Point of CNS st x1 in X & x2 in X &
  ||.x1 - x2.|| < s holds abs(f/.x1 - f/.x2) < r;
end;

definition
  let X be set;
  let RNS be RealNormSpace;
  let f be PartFunc of the carrier of RNS,COMPLEX;
  pred f is_uniformly_continuous_on X means
:: NCFCONT2:def 6

  X c= dom f &
  for r st 0 < r ex s st
  0 < s & for x1,x2 be Point of RNS st x1 in X & x2 in X &
  ||.x1 - x2.|| < s holds |.(f/.x1 - f/.x2).| < r;
end;

theorem :: NCFCONT2:1
  for f be PartFunc of CNS1,CNS2 st
  f is_uniformly_continuous_on X & X1 c= X holds
  f is_uniformly_continuous_on X1;

theorem :: NCFCONT2:2
  for f be PartFunc of CNS,RNS st
  f is_uniformly_continuous_on X & X1 c= X holds
  f is_uniformly_continuous_on X1;

theorem :: NCFCONT2:3
  for f be PartFunc of RNS,CNS st
  f is_uniformly_continuous_on X & X1 c= X holds
  f is_uniformly_continuous_on X1;

theorem :: NCFCONT2:4
  for f1,f2 be PartFunc of CNS1,CNS2 st
  f1 is_uniformly_continuous_on X & f2 is_uniformly_continuous_on X1 holds
  f1+f2 is_uniformly_continuous_on X/\X1;

theorem :: NCFCONT2:5
  for f1,f2 be PartFunc of CNS,RNS st
  f1 is_uniformly_continuous_on X & f2 is_uniformly_continuous_on X1 holds
  f1+f2 is_uniformly_continuous_on X/\X1;

theorem :: NCFCONT2:6
  for f1,f2 be PartFunc of RNS,CNS st
  f1 is_uniformly_continuous_on X & f2 is_uniformly_continuous_on X1 holds
  f1+f2 is_uniformly_continuous_on X/\X1;

theorem :: NCFCONT2:7
  for f1,f2 be PartFunc of CNS1,CNS2 st
  f1 is_uniformly_continuous_on X & f2 is_uniformly_continuous_on X1 holds
  f1-f2 is_uniformly_continuous_on X/\X1;

theorem :: NCFCONT2:8
  for f1,f2 be PartFunc of CNS,RNS st
  f1 is_uniformly_continuous_on X & f2 is_uniformly_continuous_on X1 holds
  f1-f2 is_uniformly_continuous_on X/\X1;

theorem :: NCFCONT2:9
  for f1,f2 be PartFunc of RNS,CNS st
  f1 is_uniformly_continuous_on X & f2 is_uniformly_continuous_on X1 holds
  f1-f2 is_uniformly_continuous_on X/\X1;

theorem :: NCFCONT2:10
  for f be PartFunc of CNS1,CNS2 st
  f is_uniformly_continuous_on X holds z(#)f is_uniformly_continuous_on X;

theorem :: NCFCONT2:11
  for f be PartFunc of CNS,RNS st
  f is_uniformly_continuous_on X holds r(#)f is_uniformly_continuous_on X;

theorem :: NCFCONT2:12
  for f be PartFunc of RNS,CNS st
  f is_uniformly_continuous_on X holds z(#)f is_uniformly_continuous_on X;

theorem :: NCFCONT2:13
  for f be PartFunc of CNS1,CNS2 st f is_uniformly_continuous_on X holds
  -f is_uniformly_continuous_on X;

theorem :: NCFCONT2:14
  for f be PartFunc of CNS,RNS st f is_uniformly_continuous_on X holds
  -f is_uniformly_continuous_on X;

theorem :: NCFCONT2:15
  for f be PartFunc of RNS,CNS st f is_uniformly_continuous_on X holds
  -f is_uniformly_continuous_on X;

theorem :: NCFCONT2:16
  for f be PartFunc of CNS1,CNS2 st f is_uniformly_continuous_on X holds
  ||.f.|| is_uniformly_continuous_on X;

theorem :: NCFCONT2:17
  for f be PartFunc of CNS,RNS st f is_uniformly_continuous_on X holds
  ||.f.|| is_uniformly_continuous_on X;

theorem :: NCFCONT2:18
  for f be PartFunc of RNS,CNS st f is_uniformly_continuous_on X holds
  ||.f.|| is_uniformly_continuous_on X;

theorem :: NCFCONT2:19
  for f be PartFunc of CNS1,CNS2 st
  f is_uniformly_continuous_on X holds f is_continuous_on X;

theorem :: NCFCONT2:20
  for f be PartFunc of CNS,RNS st
  f is_uniformly_continuous_on X holds f is_continuous_on X;

theorem :: NCFCONT2:21
  for f be PartFunc of RNS,CNS st
  f is_uniformly_continuous_on X holds f is_continuous_on X;

theorem :: NCFCONT2:22
  for f be PartFunc of the carrier of CNS, COMPLEX st
  f is_uniformly_continuous_on X holds f is_continuous_on X;

theorem :: NCFCONT2:23
  for f be PartFunc of the carrier of CNS, REAL st
  f is_uniformly_continuous_on X holds f is_continuous_on X;

theorem :: NCFCONT2:24
  for f be PartFunc of the carrier of RNS, COMPLEX st
  f is_uniformly_continuous_on X holds f is_continuous_on X;

theorem :: NCFCONT2:25
  for f be PartFunc of CNS1,CNS2 st
  f is_Lipschitzian_on X holds f is_uniformly_continuous_on X;

theorem :: NCFCONT2:26
  for f be PartFunc of CNS,RNS st
  f is_Lipschitzian_on X holds f is_uniformly_continuous_on X;

theorem :: NCFCONT2:27
  for f be PartFunc of RNS,CNS st
  f is_Lipschitzian_on X holds f is_uniformly_continuous_on X;

theorem :: NCFCONT2:28
  for f be PartFunc of CNS1,CNS2, Y be Subset of CNS1 st
  Y is compact & f is_continuous_on Y holds f is_uniformly_continuous_on Y;

theorem :: NCFCONT2:29
  for f be PartFunc of CNS,RNS, Y be Subset of CNS st
  Y is compact & f is_continuous_on Y holds f is_uniformly_continuous_on Y;

theorem :: NCFCONT2:30
  for f be PartFunc of RNS,CNS, Y be Subset of RNS st
  Y is compact & f is_continuous_on Y holds f is_uniformly_continuous_on Y;

theorem :: NCFCONT2:31
  for f be PartFunc of CNS1,CNS2, Y be Subset of CNS1 st
  Y c= dom f & Y is compact & f is_uniformly_continuous_on Y holds
  f.:Y is compact;

theorem :: NCFCONT2:32
  for f be PartFunc of CNS,RNS, Y be Subset of CNS st
  Y c= dom f & Y is compact & f is_uniformly_continuous_on Y holds
  f.:Y is compact;

theorem :: NCFCONT2:33
  for f be PartFunc of RNS,CNS, Y be Subset of RNS st
  Y c= dom f & Y is compact & f is_uniformly_continuous_on Y holds
  f.:Y is compact;

theorem :: NCFCONT2:34
  for f be PartFunc of the carrier of CNS,REAL, Y be Subset of CNS st
  Y <> {} & Y c= dom f & Y is compact & f is_uniformly_continuous_on Y
  ex x1,x2 be Point of CNS st x1 in Y & x2 in Y &
  f/.x1 = upper_bound (f.:Y) & f/.x2 = lower_bound (f.:Y);

theorem :: NCFCONT2:35
  for f be PartFunc of CNS1,CNS2 st X c= dom f & f|X is constant holds
  f is_uniformly_continuous_on X;

theorem :: NCFCONT2:36
  for f be PartFunc of CNS,RNS st X c= dom f & f|X is constant holds
  f is_uniformly_continuous_on X;

theorem :: NCFCONT2:37
  for f be PartFunc of RNS,CNS st X c= dom f & f|X is constant holds
  f is_uniformly_continuous_on X;

begin :: Contraction Mapping Principle on Normed Complex Linear Spaces

definition
  let M be ComplexBanachSpace;
  mode contraction of M -> Function of the carrier of M, the carrier of M
    means
:: NCFCONT2:def 7

    ex L being Real st 0 < L & L < 1 &
    for x,y being Point of M holds ||.it.x - it.y.|| <=L*||.x - y.||;
end;

theorem :: NCFCONT2:38
  for X be ComplexNormSpace, x,y be Point of X holds ||.x-y.|| > 0 iff x <> y;

theorem :: NCFCONT2:39
  for X be ComplexNormSpace, x, y be Point of X holds ||.x-y.|| = ||.y-x.||;

theorem :: NCFCONT2:40
  for X be ComplexBanachSpace, f be Function of X,X st f is contraction of X
  ex xp be Point of X st f.xp=xp & for x be Point of X st f.x=x holds xp=x;

theorem :: NCFCONT2:41
  for X be ComplexBanachSpace for f be Function of X,X st
  ex n0 be Element of NAT st iter(f,n0) is contraction of X
  holds ex xp be Point of X st f.xp=xp &
  (for x be Point of X st f.x=x holds xp=x);

