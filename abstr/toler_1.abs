:: Relations of Tolerance
::  by Krzysztof Hryniewiecki
::
:: Received September 20, 1990
:: Copyright (c) 1990 Association of Mizar Users

environ

 vocabulary RELAT_1, BOOLE, RELAT_2, EQREL_1, WELLORD1, ZFMISC_1, TARSKI,
      TOLER_1, HAHNBAN, PARTFUN1, FUNCT_1;
 notation TARSKI, XBOOLE_0, ZFMISC_1, SUBSET_1, RELAT_1, RELSET_1, RELAT_2,
      PARTFUN1, ORDINAL1, WELLORD1, EQREL_1;
 constructors RELAT_2, WELLORD1, EQREL_1, ORDINAL1, PARTFUN1, XBOOLE_0;
 clusters RELAT_1, RELSET_1, SUBSET_1, ZFMISC_1, PARTFUN1, XBOOLE_0, EQREL_1;
 requirements SUBSET, BOOLE;


begin

 reserve X,Y,Z,x,y,z for set;

theorem :: TOLER_1:1
  field {} = {};

theorem :: TOLER_1:2
  {} is reflexive;

theorem :: TOLER_1:3
  {} is symmetric;

theorem :: TOLER_1:4
    {} is irreflexive;

theorem :: TOLER_1:5
    {} is antisymmetric;

theorem :: TOLER_1:6
    {} is asymmetric;

theorem :: TOLER_1:7
    {} is connected;

theorem :: TOLER_1:8
    {} is strongly_connected;

theorem :: TOLER_1:9
    {} is transitive;

registration
  cluster {} -> reflexive irreflexive symmetric antisymmetric asymmetric
    connected strongly_connected transitive;
  coherence by Th2, Th3, Th4, Th5, Th6, Th7, Th8, Th9;
end;


::::::::::::::::::::
:: Total relation ::
::::::::::::::::::::

notation let X;
  synonym Total X for nabla X;
   end;


definition let R be Relation, Y be set;
  redefine func R |_2 Y -> Relation of Y,Y;
end;


canceled 2;

theorem :: TOLER_1:12
  dom Total X = X;

theorem :: TOLER_1:13
  rng Total X = X;

canceled;

theorem :: TOLER_1:15
  for x,y st x in X & y in X holds [x,y] in Total X;

theorem :: TOLER_1:16
  for x,y st x in field Total X & y in field Total X holds
    [x,y] in Total X;

canceled 2;

theorem :: TOLER_1:19
    Total X is strongly_connected;

canceled;

theorem :: TOLER_1:21
  Total X is connected;

::  Tolerance

reserve T,R for Tolerance of X;

canceled 2;

theorem :: TOLER_1:24
  for T being Tolerance of X holds dom T = X;

theorem :: TOLER_1:25
   for T being Tolerance of X holds rng T = X;

canceled;

theorem :: TOLER_1:27
  for T being total reflexive Relation of X holds x in X iff [x,x] in T;

theorem :: TOLER_1:28
    for T being Tolerance of X holds T is_reflexive_in X;

theorem :: TOLER_1:29
  for T being Tolerance of X holds T is_symmetric_in X;

canceled 2;

theorem :: TOLER_1:32
  for R be Relation of X,Y st R is symmetric holds
    R |_2 Z is symmetric;

definition let X,T;let Y be Subset of X;
 canceled 2;
  redefine func T |_2 Y -> Tolerance of Y;
end;


theorem :: TOLER_1:33
    Y c= X implies T|_2 Y is Tolerance of Y;

:: Set and Class of Tolerance

definition let X;let T be Tolerance of X;
  mode TolSet of T -> set means
:: TOLER_1:def 3
 for x,y st x in it & y in it holds [x,y] in T;
end;


theorem :: TOLER_1:34
  {} is TolSet of T;

definition let X;let T be Tolerance of X;
   let IT be TolSet of T;
  attr IT is TolClass-like means
:: TOLER_1:def 4
 for x st not x in IT & x in X ex y st y in IT & not [x,y] in T;
end;


registration let X;let T be Tolerance of X;
  cluster TolClass-like TolSet of T;
 existence
  proof
   defpred X[set] means $1 is TolSet of T;
    consider TS being set such that A1:
       for x holds x in TS iff x in bool X & X[x] from XBOOLE_0:sch 1;
    A2: TS <> {}
        proof
         {} c= X by XBOOLE_1:2;
         then {} in bool X & {} is TolSet of T by Th34;
         hence TS <> {} by A1;
        end;
    A3: TS c= bool X
         proof let x; assume x in TS;
           hence x in bool X by A1;
         end;
       for Z st Z c= TS & Z is c=-linear
       ex Y st Y in TS & for X1 being set st X1 in Z holds X1 c= Y
       proof let Z such that A4: Z c= TS & Z is c=-linear;
        take union Z;
            Z c= bool X by A3,A4,XBOOLE_1:1;
          then union Z c= union bool X by ZFMISC_1:95;
          then A5: union Z c= X by ZFMISC_1:99;
                for x,y st x in union Z & y in union Z holds [x,y] in T
                proof let x,y;assume A6: x in union Z & y in union Z;
                  then consider Zx being set such that
                  A7:x in Zx & Zx in Z by TARSKI:def 4;
                  consider Zy being set such that
                  A8:y in Zy & Zy in Z by A6,TARSKI:def 4;
                  reconsider Zx as TolSet of T by A1,A4,A7;
                  reconsider Zy as TolSet of T by A1,A4,A8;
                  Zx,Zy are_c=-comparable by A4,A7,A8,ORDINAL1:def 9;
             then Zx c= Zy or Zy c= Zx by XBOOLE_0:def 9;
                   hence [x,y] in T by A7,A8,Def3;
                end;
           then union Z is TolSet of T by Def3;
         hence union Z in TS by A1,A5;
         let X1 be set;
         assume X1 in Z;
        hence X1 c= union Z by ZFMISC_1:92;
       end;
     then consider Y such that A9: Y in TS & for Z st Z in TS & Z <> Y
                               holds not Y c= Z by A2,ORDERS_2:77;
     reconsider Y as TolSet of T by A1,A9;
     take Y;
     let x such that A10: not x in Y & x in X;
     assume A11: for y st y in Y holds [x,y] in T;
     set Y1 = Y \/ {x};
       for y,z st y in Y1 & z in Y1 holds [y,z] in T
       proof let y,z; assume y in Y1 & z in Y1;
          then (y in Y or y in {x}) & (z in Y or z in {x}) by XBOOLE_0:def 2;
        then A12: (y in Y or y = x) & (z in Y or z = x) by TARSKI:def 1;
         assume A13: not [y,z] in T;
             then not [z,y] in T by Th30;
         hence contradiction by A10,A11,A12,A13,Def3,Th27;
       end;
     then A14: Y1 is TolSet of T by Def3;
          Y in bool X by A1,A9;
      then {x} c= X & Y c= X by A10,ZFMISC_1:37;
      then Y1 c= X by XBOOLE_1:8;
     then A15: Y1 in TS by A1,A14;
           Y1 <> Y
           proof assume A16: Y1 = Y;
               x in {x} by TARSKI:def 1;
            hence contradiction by A10,A16,XBOOLE_0:def 2;
           end;
        then not Y c= Y1 by A9,A15;
      hence contradiction by XBOOLE_1:7;
  end;
end;


definition let X;let T be Tolerance of X;
  mode TolClass of T is TolClass-like TolSet of T;
end;


canceled 3;

theorem :: TOLER_1:38
    for T being Tolerance of X st {} is TolClass of T holds T={};

theorem :: TOLER_1:39
  {} is Tolerance of {};

theorem :: TOLER_1:40
  for x,y st [x,y] in T holds {x,y} is TolSet of T;

theorem :: TOLER_1:41
    for x st x in X holds {x} is TolSet of T;

theorem :: TOLER_1:42
    for Y,Z st Y is TolSet of T & Z is TolSet of T holds Y /\ Z is TolSet of T;

theorem :: TOLER_1:43
  Y is TolSet of T implies Y c= X;

canceled;

theorem :: TOLER_1:45
  for Y being TolSet of T ex Z being TolClass of T st Y c= Z;

theorem :: TOLER_1:46
  for x,y st [x,y] in T ex Z being TolClass of T st x in Z & y in Z;

theorem :: TOLER_1:47
  for x st x in X ex Z being TolClass of T st x in Z;

canceled;

theorem :: TOLER_1:49
  T c= Total X;

theorem :: TOLER_1:50
  id X c= T;

scheme :: TOLER_1:sch 1
 ToleranceEx{A() -> set,P[set,set]}:
  ex T being Tolerance of A() st
    for x,y st x in A() & y in A() holds [x,y] in T iff P[x,y]
provided
 for x st x in A() holds P[x,x] and
 for x,y st x in A() & y in A() & P[x,y] holds P[y,x]
proof
   defpred X[set] means ex y,z st $1 = [y,z] & P[y,z];
  consider T being set such that A3:
    for x holds x in T iff x in [:A(),A():] & X[x] from XBOOLE_0:sch 1;
    for x st x in T holds x in [:A(),A():] by A3;
  then T c= [:A(),A():] by TARSKI:def 3;
  then reconsider T as Relation of A(),A() by RELSET_1:def 1;
A4: dom T = A()
      proof
          for x st x in A() holds x in dom T
          proof let x; assume x in A();
            then [x,x] in [:A(),A():] & P[x,x] by A1,ZFMISC_1:106;
            then [x,x] in T by A3;
          hence x in dom T by RELAT_1:def 4;
          end;
        then A() c= dom T by TARSKI:def 3;
       hence dom T = A() by XBOOLE_0:def 10;
      end;
  A5: field T = A()
      proof
        A6: field T c= A() \/ A() by RELSET_1:19;
          for x st x in A() holds x in field T
          proof let x; assume x in A();
            then [x,x] in [:A(),A():] & P[x,x] by A1,ZFMISC_1:106;
            then [x,x] in T by A3;
            then x in dom T by RELAT_1:def 4;
            then x in dom T \/ rng T by XBOOLE_0:def 2;
           hence x in field T by RELAT_1:def 6;
          end;
        then A() c= field T by TARSKI:def 3;
       hence field T = A() by A6,XBOOLE_0:def 10;
      end;
A7:  T is total by A4,PARTFUN1:def 4;
        T is_reflexive_in field T
        proof
             for x st x in field T holds [x,x] in T
             proof let x; assume x in field T;
               then [x,x] in [:A(),A():] & P[x,x] by A1,A5,ZFMISC_1:106;
              hence [x,x] in T by A3;
             end;
           hence thesis by RELAT_2:def 1;
        end;
   then A8: T is reflexive by RELAT_2:def 9;
        T is_symmetric_in field T
        proof
            for x,y st x in field T & y in field T & [x,y] in T holds [y,x] in
T
            proof let x,y such that A9:
 x in field T & y in field T & [x,y] in T;
                x in A() & y in A() & P[x,y]
                proof
                   thus x in A() & y in A() by A5,A9;
                   consider a,b being set such that A10:
                       [x,y] = [a,b] & P[a,b] by A3,A9;
                     x = a & y = b by A10,ZFMISC_1:33;
                    hence P[x,y] by A10;
                end;
              then [y,x] in [:A(),A():] & P[y,x] by A2,ZFMISC_1:106;
            hence [y,x] in T by A3;
            end;
          hence thesis by RELAT_2:def 3;
        end;
   then reconsider T as Tolerance of A() by A7,A8,RELAT_2:def 11;
   take T;
   let x,y;
   assume A11: x in A() & y in A();
    thus [x,y] in T implies P[x,y]
     proof assume [x,y] in T;
       then consider a,b being set such that A12: [x,y] = [a,b] & P[a,b] by A3;
          x = a & y = b by A12,ZFMISC_1:33;
       hence P[x,y] by A12;
     end;
    assume A13: P[x,y];
      [x,y] in [:A(),A():] by A11,ZFMISC_1:106;
   hence [x,y] in T by A3,A13;
end;

theorem :: TOLER_1:51
    for Y ex T being Tolerance of union Y st
    for Z st Z in Y holds Z is TolSet of T;

theorem :: TOLER_1:52
    for Y being set for T,R being Tolerance of union Y st
    (for x,y holds [x,y] in T iff ex Z st Z in Y & x in Z & y in Z) &
    (for x,y holds [x,y] in R iff ex Z st Z in Y & x in Z & y in Z)
  holds T = R;

theorem :: TOLER_1:53
  for T,R being Tolerance of X st
    for Z holds Z is TolClass of T iff Z is TolClass of R
  holds T = R;

:: Tolerance neighbourhood

notation let X; let T be Tolerance of X; let x;
  synonym neighbourhood (x, T) for Class (T,x);
  end;


theorem :: TOLER_1:54
  for y being set holds y in neighbourhood(x,T) iff [x,y] in T;

canceled 3;

theorem :: TOLER_1:58
  for Y st for Z being set holds Z in Y iff x in Z & Z is TolClass of T
   holds neighbourhood(x,T) = union Y;

theorem :: TOLER_1:59
    for Y st for Z holds Z in Y iff x in Z & Z is TolSet of T holds
    neighbourhood(x,T) = union Y;

:::::::::::::::::::::::::::::::::::::::::::::
:: Family of sets and classes of proximity ::
:::::::::::::::::::::::::::::::::::::::::::::
definition let X; let T be Tolerance of X;
  canceled;
  func TolSets T -> set means
:: TOLER_1:def 6
 for Y holds Y in it iff Y is TolSet of T;

  func TolClasses T -> set means
:: TOLER_1:def 7
 for Y holds Y in it iff Y is TolClass of T;
end;


canceled 4;

theorem :: TOLER_1:64
    TolClasses R c= TolClasses T implies R c= T;

theorem :: TOLER_1:65
     for T,R being Tolerance of X st TolClasses T = TolClasses R
     holds T = R;

theorem :: TOLER_1:66
    union TolClasses T = X;

theorem :: TOLER_1:67
    union TolSets T = X;

theorem :: TOLER_1:68
    (for x st x in X holds neighbourhood(x,T) is TolSet of T)
   implies T is transitive;

theorem :: TOLER_1:69
    T is transitive implies
  (for x st x in X holds neighbourhood(x,T) is TolClass of T);

theorem :: TOLER_1:70
    for x for Y being TolClass of T st x in Y holds
     Y c= neighbourhood(x,T);

theorem :: TOLER_1:71
    TolSets R c= TolSets T iff R c= T;

theorem :: TOLER_1:72
    TolClasses T c= TolSets T;

theorem :: TOLER_1:73
    (for x st x in X holds neighbourhood(x,R) c= neighbourhood(x,T))
    implies R c= T;

theorem :: TOLER_1:74
    T c= T*T;
