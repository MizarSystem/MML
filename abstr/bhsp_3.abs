:: Introduction to Banach and Hilbert spaces - Part III
::  by Jan Popio{\l}ek
::
:: Received July 19, 1991
:: Copyright (c) 1991 Association of Mizar Users

environ

 vocabularies BHSP_1, PRE_TOPC, NORMSP_1, ORDINAL2, SEQM_3, SEQ_1, RLVECT_1,
      METRIC_1, FUNCT_1, ARYTM_1, ARYTM_3, ABSVALUE, RELAT_1, SEQ_2, LATTICES,
      BHSP_3, ARYTM, FRECHET2;
 notations ORDINAL1, SUBSET_1, NUMBERS, XREAL_0, COMPLEX1, REAL_1, SEQ_1,
      NAT_1, VALUED_0, STRUCT_0, PRE_TOPC, RLVECT_1, NORMSP_1, BHSP_1, BHSP_2,
      XXREAL_0;
 constructors PARTFUN1, FUNCT_3, XXREAL_0, REAL_1, COMPLEX1, SEQ_1, SEQM_3,
      BHSP_2, VALUED_1, RECDEF_1, NAT_1, RELSET_1;
 registrations XBOOLE_0, ORDINAL1, RELSET_1, NUMBERS, XXREAL_0, XREAL_0, NAT_1,
      MEMBERED, STRUCT_0, VALUED_0;
 requirements REAL, NUMERALS, SUBSET, BOOLE, ARITHM;


begin

reserve X for RealUnitarySpace,
  x, g, g1, h for Point of X,
  a, p, r, M, M1, M2
  for Real,
  seq, seq1, seq2, seq3 for sequence of X,
  Nseq,Nseq1,Nseq2 for
  increasing sequence of NAT,
  Rseq for Real_Sequence,
  k, l, l1, l2, l3, n, m, m1,
  m2 for Element of NAT;

definition
  let X;
  let seq;
  attr seq is Cauchy means
:: BHSP_3:def 1

  for r st r > 0 ex k st for n, m st n >= k &
  m >= k holds dist(seq.n, seq.m) < r;
end;

theorem :: BHSP_3:1
  seq is constant implies seq is Cauchy;

theorem :: BHSP_3:2
  seq is Cauchy iff for r st r > 0 ex k st for n, m st n >= k & m >= k
  holds ||.(seq.n) - (seq.m).|| < r;

theorem :: BHSP_3:3
  seq1 is Cauchy & seq2 is Cauchy implies seq1 + seq2 is Cauchy;

theorem :: BHSP_3:4
  seq1 is Cauchy & seq2 is Cauchy implies seq1 - seq2 is Cauchy;

theorem :: BHSP_3:5
  seq is Cauchy implies a * seq is Cauchy;

theorem :: BHSP_3:6
  seq is Cauchy implies - seq is Cauchy;

theorem :: BHSP_3:7
  seq is Cauchy implies seq + x is Cauchy;

theorem :: BHSP_3:8
  seq is Cauchy implies seq - x is Cauchy;

theorem :: BHSP_3:9
  seq is convergent implies seq is Cauchy;

definition
  let X;
  let seq1, seq2;
  pred seq1 is_compared_to seq2 means
:: BHSP_3:def 2

  for r st r > 0 ex m st for n st n
  >= m holds dist(seq1.n, seq2.n) < r;
end;

theorem :: BHSP_3:10
  seq is_compared_to seq;

theorem :: BHSP_3:11
  seq1 is_compared_to seq2 implies seq2 is_compared_to seq1;

definition
  let X;
  let seq1, seq2;
  redefine pred seq1 is_compared_to seq2;
  reflexivity;
  symmetry;
end;

theorem :: BHSP_3:12
  seq1 is_compared_to seq2 & seq2 is_compared_to seq3 implies seq1
  is_compared_to seq3;

theorem :: BHSP_3:13
  seq1 is_compared_to seq2 iff for r st r > 0 ex m st for n st n >= m
  holds ||.(seq1.n) - (seq2.n).|| < r;

theorem :: BHSP_3:14
  ( ex k st for n st n >= k holds seq1.n = seq2.n ) implies seq1
  is_compared_to seq2;

theorem :: BHSP_3:15
  seq1 is Cauchy & seq1 is_compared_to seq2 implies seq2 is Cauchy;

theorem :: BHSP_3:16
  seq1 is convergent & seq1 is_compared_to seq2 implies seq2 is
  convergent;

theorem :: BHSP_3:17
  seq1 is convergent & lim seq1 = g & seq1 is_compared_to seq2 implies
  seq2 is convergent & lim seq2 = g;

definition
  let X;
  let seq;
  attr seq is bounded means
:: BHSP_3:def 3

  ex M st M > 0 & for n holds ||.seq.n.|| <=
  M;
end;

theorem :: BHSP_3:18
  seq1 is bounded & seq2 is bounded implies seq1 + seq2 is bounded;

theorem :: BHSP_3:19
  seq is bounded implies -seq is bounded;

theorem :: BHSP_3:20
  seq1 is bounded & seq2 is bounded implies seq1 - seq2 is bounded;

theorem :: BHSP_3:21
  seq is bounded implies a * seq is bounded;

theorem :: BHSP_3:22
  seq is constant implies seq is bounded;

theorem :: BHSP_3:23
  for m ex M st ( M > 0 & for n st n <= m holds ||.seq.n.|| < M );

theorem :: BHSP_3:24
  seq is convergent implies seq is bounded;

theorem :: BHSP_3:25
  seq1 is bounded & seq1 is_compared_to seq2 implies seq2 is bounded;

canceled 5;

theorem :: BHSP_3:31
  seq is bounded & seq1 is subsequence of seq implies seq1 is
  bounded;

theorem :: BHSP_3:32
  seq is convergent & seq1 is subsequence of seq implies seq1 is
  convergent;

theorem :: BHSP_3:33
  seq1 is subsequence of seq & seq is convergent implies lim seq1=
  lim seq;

theorem :: BHSP_3:34
  seq is Cauchy & seq1 is subsequence of seq implies seq1 is
  Cauchy;

canceled;

theorem :: BHSP_3:36
  (seq ^\k)^\m = (seq ^\m)^\k;

theorem :: BHSP_3:37
  (seq ^\k)^\m=seq ^\(k + m);

theorem :: BHSP_3:38
  (seq1 + seq2) ^\k = (seq1 ^\k) + (seq2 ^\k);

theorem :: BHSP_3:39
  (-seq) ^\k = -(seq ^\k);

theorem :: BHSP_3:40
  (seq1 - seq2) ^\k = (seq1 ^\k) - (seq2 ^\k);

theorem :: BHSP_3:41
  (a * seq) ^\k = a * (seq ^\k);

canceled 2;

theorem :: BHSP_3:44
  seq is convergent implies (seq ^\k) is convergent & lim (seq ^\k)=lim
  seq;

canceled;

theorem :: BHSP_3:46
  seq is convergent & (ex k st seq = seq1 ^\k) implies seq1 is
  convergent;

theorem :: BHSP_3:47
  seq is Cauchy & (ex k st seq = seq1 ^\k) implies seq1 is Cauchy;

theorem :: BHSP_3:48
  seq is Cauchy implies (seq ^\k) is Cauchy;

theorem :: BHSP_3:49
  seq1 is_compared_to seq2 implies (seq1 ^\k) is_compared_to (seq2 ^\k);

theorem :: BHSP_3:50
  seq is bounded implies (seq ^\k) is bounded;

theorem :: BHSP_3:51
  seq is constant implies (seq ^\k) is constant;

definition
  canceled 2;
  let X;
  attr X is complete means
:: BHSP_3:def 6

  for seq holds seq is Cauchy implies seq is
  convergent;
end;

canceled;

theorem :: BHSP_3:53
  X is complete & seq is Cauchy implies seq is bounded;

definition
  let X;
  attr X is Hilbert means
:: BHSP_3:def 7
  X is RealUnitarySpace & X is complete;
end;

