:: Determinant of Some Matrices of Field Elements
::  by Yatsuka Nakamura
::
:: Received January 4, 2006
:: Copyright (c) 2006 Association of Mizar Users

environ

 vocabularies MATRIX_7, FINSEQ_1, FUNCT_1, ARYTM_1, VECTSP_1, RLVECT_1,
      MATRIX_1, TREES_1, GROUP_1, MATRIX_3, RELAT_1, BOOLE, FUNCT_2, MATRIX_2,
      FINSEQ_2, SGRAPH1, BINOP_1, SETWISEO, FINSOP_1, FINSUB_1, NAT_1, CARD_3,
      FINSET_1, JORDAN3, FUNCOP_1, CQC_LANG, FINSEQ_4, QC_LANG1, RFINSEQ,
      SQUARE_1, CARD_1, FINSEQ_5, REALSET1, ROUGHS_1;
 notations TARSKI, XBOOLE_0, SUBSET_1, XXREAL_0, NAT_1, RELAT_1, FUNCT_1,
      BINOP_1, ZFMISC_1, RLVECT_1, NUMBERS, BINOP_2, VECTSP_1, FUNCT_2,
      SETWISEO, FINSEQ_4, PARTFUN1, GROUP_4, FINSUB_1, NEWTON, FINSOP_1,
      SETWOP_2, FINSEQ_1, STRUCT_0, MATRIX_2, MATRIX_3, FINSET_1, JORDAN3,
      BINARITH, MATRIX_1, CQC_LANG, RFINSEQ, SQUARE_1, CARD_1, FINSEQ_5,
      GROUP_1;
 constructors RELAT_2, PARTFUN1, DOMAIN_1, SETWISEO, REAL_1, SQUARE_1, NAT_1,
      CQC_LANG, FINSEQ_4, FINSOP_1, SETWOP_2, NEWTON, RFINSEQ, BINARITH,
      FINSEQ_5, ALGSTR_1, GROUP_4, MATRIX_3, JORDAN3;
 registrations STRUCT_0, INT_1, RELSET_1, VECTSP_1, XREAL_0, FUNCT_2, FINSEQ_1,
      GROUP_1, FINSET_1, FINSUB_1, PARTFUN1, MATRIX_2, ORDINAL1, FVSUM_1,
      XXREAL_0;
 requirements NUMERALS, BOOLE, SUBSET, ARITHM, REAL;


begin

 reserve x,y,y1,y2 for set,
         D for non empty set,
         d,d1,d2,d3 for Element of D,
         F,G,H,H1,H2 for FinSequence of D,
         f,f1,f2 for Function of NAT,D,
         g for BinOp of D,
         k,n,i,j,l,m for Nat,
         P for Permutation of dom F;

theorem :: MATRIX_7:1
 for f being Permutation of Seg 2 holds f=<*1,2*> or f=<*2,1*>;

theorem :: MATRIX_7:2
 for f being FinSequence st f=<*1,2*> or f=<*2,1*> holds
   f is Permutation of Seg 2;

theorem :: MATRIX_7:3
  Permutations(2)={<*1,2*>,<*2,1*>};

theorem :: MATRIX_7:4
  for p being Permutation of Seg 2 st p is_transposition holds p = <*2,1*>;

theorem :: MATRIX_7:5
  for D being non empty set, f being FinSequence of D, k2 being Nat st
    1<=k2 & k2< len f holds
     f = mid(f,1,k2)^mid(f,k2+1,len f);

theorem :: MATRIX_7:6
  for D being non empty set, f being FinSequence of D st 2<= len f holds
    f = (f|(len f-'2))^mid(f,len f-'1,len f);

theorem :: MATRIX_7:7
for D being non empty set, f being FinSequence of D st 1<= len f holds
     f = (f|(len f-'1))^mid(f,len f,len f);

theorem :: MATRIX_7:8
  for a being Element of Group_of_Perm 2 st
  (ex q being Element of Permutations 2 st q=a & q is_transposition)
   holds a = <*2,1*>;

theorem :: MATRIX_7:9
  for n being Nat,a,b being Element of Group_of_Perm n,
      pa,pb being Element of Permutations n st
        a=pa & b=pb holds a*b=pb*pa;

theorem :: MATRIX_7:10
for a,b being Element of Group_of_Perm 2 st
(ex p being Element of Permutations 2 st p=a & p is_transposition)&
(ex q being Element of Permutations 2 st q=b & q is_transposition)
 holds a*b = <*1,2*>;

theorem :: MATRIX_7:11
for l being FinSequence of Group_of_Perm 2
 st (len l) mod 2=0 & (for i st i in dom l holds
     (ex q being Element of Permutations 2 st l.i=q & q is_transposition))
holds Product l = <*1,2*>;

theorem :: MATRIX_7:12
for K being Field, M being Matrix of 2,K holds
    Det M = (M*(1,1))*(M*(2,2))-(M*(1,2))*(M*(2,1));

definition let n be Nat,K be Field;
  let M be (Matrix of n,K), a be Element of K;
  redefine func a*M -> Matrix of n,K;
end;

theorem :: MATRIX_7:13
for K being Field, n,m being Nat holds
len (0.(K,n,m))=n & dom (0.(K,n,m))=Seg n;

theorem :: MATRIX_7:14
for K being Field, n being Nat,
p being Element of Permutations n, i being Nat st i in Seg n holds
 p.i in Seg n;

theorem :: MATRIX_7:15
for K being Field, n being Nat st n>=1 holds
    Det (0.(K,n,n)) = 0.K;

definition let x,y,a,b be set;
  func IFIN(x,y,a,b) equals
:: MATRIX_7:def 1
 a if x in y otherwise b;
end;

theorem :: MATRIX_7:16
  for K being Field, n being Nat st n>=1 holds
    Det (1.(K,n)) = 1.K;

definition let K be Field, n be Nat, M be Matrix of n,K;
  redefine attr M is diagonal means
:: MATRIX_7:def 2
    for i,j being Nat st i in Seg n & j in Seg n & i <> j holds
      M*(i,j) = 0.K;
end;

theorem :: MATRIX_7:17
  for K being Field, n being Nat, A being Matrix of n,K st
    n>=1 & A is diagonal holds
      Det A = (the mult of K) $$ (diagonal_of_Matrix A);

theorem :: MATRIX_7:18
for n being Nat, p being Element of Permutations(n) holds
 p" is Element of Permutations(n);

definition let n;let p be Element of Permutations(n);
 redefine func p" -> Element of Permutations(n);
end;

theorem :: MATRIX_7:19
for n being Nat,K being Field,A being Matrix of n,K holds
 A@ is Matrix of n,K;

definition let n be Nat,K be Field;
  let A be Matrix of n,K;
  func A@ -> Matrix of n,K equals
:: MATRIX_7:def 3
    (A qua Matrix of K)@;
end;

theorem :: MATRIX_7:20
for G being Group,
f1,f2 being FinSequence of G
holds (Product (f1^f2))" = (Product f2)" * (Product f1)";

definition let G be Group, f be FinSequence of G;
  func f" -> FinSequence of G means
:: MATRIX_7:def 4
    len it = len f & for i being Nat st i in dom f holds
      it/.i = (f/.i)";
end;

theorem :: MATRIX_7:21
for G being Group holds
(<*>(the carrier of G))"=<*>(the carrier of G);

theorem :: MATRIX_7:22
for G being Group, f,g being FinSequence of G
 holds (f^g)"=(f")^(g");

theorem :: MATRIX_7:23
for G being Group,a being Element of G
holds (<*a*>)" =<* a" *>;

theorem :: MATRIX_7:24
for G being Group,
f being FinSequence of G
holds Product (f^(Rev f)")=1.G;

theorem :: MATRIX_7:25
for G being Group,f being FinSequence of G
holds Product ((Rev f)" ^f)=1.G;

theorem :: MATRIX_7:26
for G being Group,f being FinSequence of G
holds (Product f)" = Product ((Rev f)");

theorem :: MATRIX_7:27
for ITP being Element of Permutations(n),
ITG being Element of Group_of_Perm(n) st ITG=ITP & n>=1
holds ITP"=ITG";

theorem :: MATRIX_7:28
for n being Nat,
  IT being Element of Permutations(n) st n>=1 holds
  IT is even iff IT" is even;

theorem :: MATRIX_7:29
for n being Nat,K being Field,
  p being Element of Permutations(n), x being Element of K
 st n>=1 holds -(x,p) = -(x,p");

theorem :: MATRIX_7:30
for K being Field,f1,f2 being FinSequence of K holds
  (the mult of K) $$ (f1^f2) = ((the mult of K)$$f1)*((the mult of K)$$f2);

theorem :: MATRIX_7:31
  for K being Field,R1,R2 be FinSequence of K
         st R1,R2 are_fiberwise_equipotent holds
      (the mult of K)$$ R1 = (the mult of K)$$ R2;

theorem :: MATRIX_7:32
for n being Nat, K being Field,
p being Element of Permutations(n),
 f,g being FinSequence of K st n>=1 & len f=n & g=f*p holds
 f,g are_fiberwise_equipotent;

theorem :: MATRIX_7:33
  for n being Nat, K being Field,
      p being Element of Permutations(n),
 f,g being FinSequence of K st n>=1 & len f=n & g=f*p holds
 (the mult of K) $$ f = (the mult of K) $$ g;

theorem :: MATRIX_7:34
for n being Nat, K being Field,
p being Element of Permutations(n),
 f being FinSequence of K st n>=1 & len f=n holds
 f*p is FinSequence of K;

theorem :: MATRIX_7:35
for n being Nat, K being Field,
p being Element of Permutations(n),
 A being Matrix of n,K st n>=1 holds
 Path_matrix(p",A@) = (Path_matrix(p,A))*p";

theorem :: MATRIX_7:36
for n being Nat, K being Field,
p being Element of Permutations(n),
 A being Matrix of n,K st n>=1 holds
 (Path_product(A@)).(p") = (Path_product(A)).p;

theorem :: MATRIX_7:37
for n being Nat, K being Field, A being Matrix of n,K st n>=1
 holds Det (A) = Det (A@);
