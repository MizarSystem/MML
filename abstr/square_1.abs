:: Some Properties of Real Numbers.
:: Operations: min, max, square, and square root
::  by Andrzej Trybulec and Czes{\l}aw Byli\'nski
::
:: Received November 16, 1989
:: Copyright (c) 1990 Association of Mizar Users

environ

 vocabularies ARYTM, ARYTM_3, RELAT_1, ARYTM_1, SQUARE_1, XCMPLX_0, COMPLEX1;
 notations TARSKI, SUBSET_1, ORDINAL1, NUMBERS, XCMPLX_0, XREAL_0, XXREAL_0;
 constructors REAL_1, XCMPLX_0, XREAL_0, XBOOLE_0, XXREAL_0;
 registrations XREAL_0, REAL_1, NUMBERS, ARYTM_3, ZFMISC_1, XBOOLE_0, XCMPLX_0,
      XXREAL_0;
 requirements REAL, NUMERALS, SUBSET, BOOLE, ARITHM;


begin

 reserve a,b,c,x,y,z for real number;

canceled;

theorem :: SQUARE_1:2
  1 < x implies 1/x < 1;

canceled 22;

theorem :: SQUARE_1:25
  0 <= x*y implies 0 <= x & 0 <= y or x <= 0 & y <= 0;

scheme :: SQUARE_1:sch 1
 RealContinuity { P[set], Q[set] } :
 ex z st for x,y st P[x] & Q[y] holds x <= z & z <= y
provided
 for x,y st P[x] & Q[y] holds x <= y;

definition let x,y be Element of REAL;
 canceled 2;
 redefine func min(x,y) -> Element of REAL;
 redefine func max(x,y) -> Element of REAL;
end;

canceled 9;

theorem :: SQUARE_1:35
  min(x,y) <= x;

canceled 2;

theorem :: SQUARE_1:38
  min(x,y) = x or min(x,y) = y;

theorem :: SQUARE_1:39
  x <= y & x <= z iff x <= min(y,z);

theorem :: SQUARE_1:40
   min(x,min(y,z)) = min(min(x,y),z);

canceled 5;

theorem :: SQUARE_1:46
  x <= max(x,y);

canceled 2;

theorem :: SQUARE_1:49
  max(x,y) = x or max(x,y) = y;

theorem :: SQUARE_1:50
   y <= x & z <= x iff max(y,z) <= x;

theorem :: SQUARE_1:51
   max(x,max(y,z)) = max(max(x,y),z);

canceled;

theorem :: SQUARE_1:53
   min(x,y) + max(x,y) = x + y;

theorem :: SQUARE_1:54
  max(x,min(x,y)) = x;

theorem :: SQUARE_1:55
  min(x,max(x,y)) = x;

theorem :: SQUARE_1:56
   min(x,max(y,z)) = max(min(x,y),min(x,z));

theorem :: SQUARE_1:57
   max(x,min(y,z)) = min(max(x,y),max(x,z));

definition let x be complex number;
  func x^2 equals
:: SQUARE_1:def 3
    x * x;
end;

registration let x be complex number;
  cluster x^2 -> complex;
end;

registration let x;
  cluster x^2 -> real;
end;

definition let x be Element of COMPLEX;
  redefine func x^2 -> Element of COMPLEX;
end;

definition let x be Element of REAL;
  redefine func x^2 -> Element of REAL;
end;

canceled;

theorem :: SQUARE_1:59
 1^2 = 1;

theorem :: SQUARE_1:60
 0^2 = 0;

theorem :: SQUARE_1:61
  for a being complex number holds a^2 = (-a)^2;

canceled;

theorem :: SQUARE_1:63
  for a, b being complex number holds
  (a + b)^2 = a^2 + 2*a*b + b^2;

theorem :: SQUARE_1:64
  for a, b being complex number holds
  (a - b)^2 = a^2 - 2*a*b + b^2;

theorem :: SQUARE_1:65
  for a being complex number holds
  (a + 1)^2 = a^2 + 2*a + 1;

theorem :: SQUARE_1:66
   for a being complex number holds
  (a - 1)^2 = a^2 - 2*a + 1;

theorem :: SQUARE_1:67
  for a, b being complex number holds
  (a - b)*(a + b) = a^2 - b^2;

theorem :: SQUARE_1:68
  for a, b being complex number holds
  (a*b)^2 = a^2*b^2;

theorem :: SQUARE_1:69
  for a, b being complex number holds
  (a/b)^2 = a^2/b^2;

theorem :: SQUARE_1:70
  for a, b being complex number holds
  a^2 - b^2 <> 0 implies 1/(a+b) = (a-b)/(a^2-b^2);

theorem :: SQUARE_1:71
  for a, b being complex number holds
  a^2-b^2 <> 0 implies 1/(a-b) = (a+b)/(a^2-b^2);

theorem :: SQUARE_1:72
  0 <= a^2;

theorem :: SQUARE_1:73
  for a being complex number st a^2 = 0 holds a = 0;

theorem :: SQUARE_1:74
   0 <> a implies 0 < a^2;

theorem :: SQUARE_1:75
  0 < a & a < 1 implies a^2 < a;

theorem :: SQUARE_1:76
  1 < a implies a < a^2;

theorem :: SQUARE_1:77
  0 <= x & x <= y implies x^2 <= y^2;

theorem :: SQUARE_1:78
  0 <= x & x < y implies x^2 < y^2;

definition let a;
 assume  0 <= a;
  func sqrt a -> real number means
:: SQUARE_1:def 4
 0 <= it & it^2 = a;
end;

definition let a be Element of REAL;
  redefine func sqrt a -> Element of REAL;
end;

canceled 3;

theorem :: SQUARE_1:82
  sqrt 0 = 0;

theorem :: SQUARE_1:83
  sqrt 1 = 1;

theorem :: SQUARE_1:84
  1 < sqrt 2;

theorem :: SQUARE_1:85
  sqrt 4 = 2;

theorem :: SQUARE_1:86
  sqrt 2 < 2;

canceled 2;

theorem :: SQUARE_1:89
  0 <= a implies sqrt a^2 = a;

theorem :: SQUARE_1:90
  a <= 0 implies sqrt a^2 = -a;

canceled;

theorem :: SQUARE_1:92
  0 <= a & sqrt a = 0 implies a = 0;

theorem :: SQUARE_1:93
  0 < a implies 0 < sqrt a;

theorem :: SQUARE_1:94
  0 <= x & x <= y implies sqrt x <= sqrt y;

theorem :: SQUARE_1:95
  0 <= x & x < y implies sqrt x < sqrt y;

theorem :: SQUARE_1:96
  0 <= x & 0 <= y & sqrt x = sqrt y implies x = y;

theorem :: SQUARE_1:97
  0 <= a & 0 <= b implies sqrt (a*b) = sqrt a * sqrt b;

canceled;

theorem :: SQUARE_1:99
  0 <= a & 0 <= b implies sqrt (a/b) = sqrt a/sqrt b;

canceled;

theorem :: SQUARE_1:101
  0 < a implies sqrt (1/a) = 1/sqrt a;

theorem :: SQUARE_1:102
  0 < a implies sqrt a/a = 1/sqrt a;

theorem :: SQUARE_1:103
   0 < a implies a / sqrt a = sqrt a;

theorem :: SQUARE_1:104
  0 <= a & 0 <= b implies (sqrt a - sqrt b)*(sqrt a + sqrt b) = a - b;

theorem :: SQUARE_1:105
  0 <= a & 0 <= b & a <>b implies 1/(sqrt a+sqrt b) = (sqrt a - sqrt b)/(a-b);

theorem :: SQUARE_1:106
   0 <= b & b < a implies 1/(sqrt a+sqrt b) = (sqrt a - sqrt b)/(a-b);

theorem :: SQUARE_1:107
  0 <= a & 0 <= b implies
    1/(sqrt a-sqrt b) = (sqrt a + sqrt b)/(a-b);

theorem :: SQUARE_1:108
  0 <= b & b < a implies 1/(sqrt a-sqrt b) = (sqrt a + sqrt b)/(a-b);

theorem :: SQUARE_1:109
  for x,y being complex number st x^2=y^2 holds x=y or x=-y;

theorem :: SQUARE_1:110
  for x being complex number st x^2=1 holds x=1 or x=-1;

theorem :: SQUARE_1:111
  0<=x & x<=1 implies x^2<=x;

theorem :: SQUARE_1:112
  x^2-1<=0 implies -1<=x & x<=1;

theorem :: SQUARE_1:113
  x < y & x < z iff x < min(y,z);
